
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	13.16	synth with cache (only 1: intros H1 H2 H3; only 1: firstorder).	2.32369494438	817
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	14.17	synth with cache (only 1: intros H1 H2 H3; only 1: firstorder).	2.68579387665	972
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	17	synth with cache (only 1: firstorder).	0.930193901062	300
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	2.3.2	synth with cache (only 1: intros n m H1 H2; only 1: symmetry in H2; only 1: auto).	0.0869710445404	10
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	26	synth with cache (only 1: firstorder).	2.06202197075	1015
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0774819850922	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	1.1	synth with cache (only 1: intro; only 1: ring).	0.280218839645	4
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	5.6	synth with cache (only 1: intros n m; only 1: ring).	0.236200809479	64
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.077220916748	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0775861740112	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.1.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.0993659496307	5
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.1.3.2.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm n p); only 1: rewrite (Rplus_comm m p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	4.95307803154	447
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.0	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.0880379676819	3
Coq.micromega.Ztac.elim_concl_eq	40	3.3.7	synth with cache (only 1: intros a b H; only 1: intuition; only 1: Z.order').	2.93232893944	821
Coq.micromega.Ztac.elim_concl_le	40	4.0	synth with cache (only 1: intros; only 1: now apply Z.ge_le).	0.0932772159576	12
Coq.micromega.Ztac.elim_concl_lt	40	4.0	synth with cache (only 1: intros; only 1: Z.order).	0.129624128342	16
Coq.micromega.Ztac.Zlt_le_add_1	40	0.2	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.135601043701	21
Coq.micromega.Ztac.add_le	40	4.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.066045999527	6
Coq.micromega.Ztac.mul_le	40	0.0.4.1	synth with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: Z.order; only 1: Z.order).	0.197937965393	31
Coq.micromega.ZifyInst.PropAnd	40	8.4	synth with cache (only 1: constructor; only 1: tauto).	0.586463212967	164
Coq.micromega.ZifyInst.PropOr	40	0.1	synth with cache (only 1: constructor; only 1: tauto).	0.0908679962158	3
Coq.micromega.ZifyInst.PropArrow	40	0.9	synth with cache (only 1: constructor; only 1: tauto).	0.108468770981	21
Coq.micromega.ZifyInst.PropIff	40	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.206388950348	2
Coq.micromega.ZifyInst.PropNot	40	0.0.2	synth with cache (only 1: constructor; only 1: intros a b Hab; only 1: intuition).	0.0845201015472	5
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	2.1.18	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: trivial).	16.6627137661	4188
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	12.13	synth with cache (only 1: intro; only 1: firstorder).	23.4499759674	2517
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	4.1.10	synth with cache (only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _, _); only 1: intros n m p; only 1: firstorder).	36.8272321224	1272
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0579628944397	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0580170154572	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0529940128326	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0565690994263	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.0562789440155	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.150338888168	5
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	0.0.0.2	synth with cache (only 1: constructor; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).	0.121397018433	6
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.1.3	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	3.5876660347	225
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	0.1.0.0.4.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with 1; only 1: auto with real; only 1: elim (Rplus_ne 1); only 1: intros a b; only 1: pattern 1 at 1; only 1: rewrite <- a; only 1: auto with real).	7.64066100121	651
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	4.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.177969932556	17
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.11.1.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	17.217012167	2171
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	5.0.0.0.0	synth with cache (only 1: split; only 1: intro EQ; only 1: now rewrite EQ; only 1: destruct 1; only 1: Z.order).	0.129323005676	10
Coq.micromega.ZMicromega.lt_le_iff	40	6.0.7.0	synth with cache (only 1: intro n; only 1: split; only 1: apply Z.lt_le_pred; only 1: apply Z.lt_le_pred).	10.5665490627	1638
Coq.micromega.ZMicromega.le_0_iff	40	0.0.11.3	synth with cache (only 1: intros a n; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	5.13227295876	1272
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0906000137329	2
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.7.9.1	synth with cache (only 1: intro n; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: now destruct n as [| [| | ]| [| | ]]; only 1: reflexivity).	4.34715414047	1130
Coq.micromega.ZMicromega.isZ0_n0	40	0.9	synth with cache (only 1: fix even_spec 1; only 1: destr_bool).	1.95743083954	282
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40	0.1.21.6	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: intro; only 1: trivial).	14.3529059887	5510
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.9.1	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: assumption).	3.44683003426	269
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.21848320961	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	9.0.3.3	synth with cache (only 1: intro n; only 1: split; only 1: now destruct n; only 1: now destruct n).	2.49314212799	695
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	5.0.2	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.108551979065	16
Coq.micromega.Env.S.nth_pred_double	40	6.0.4	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	2.1780359745	296
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).	0.287432909012	14
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	5	synth with cache (only 1: destr_bool).	0.0384871959686	6
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1.0	synth with cache (only 1: simpl; only 1: auto).	0.0326859951019	3
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	1.0	synth with cache (only 1: simpl; only 1: auto).	0.032613992691	3
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	0.2.37	synth with cache (only 1: fix odd_spec 1; only 1: destr_bool; only 1: auto).	13.8095550537	8763
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	0.4.19	synth with cache (only 1: fix odd_spec 1; only 1: destr_bool; only 1: auto).	16.8367769718	5596
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.1.9.13	synth with cache (only 1: firstorder; only 1: induction f; only 1: auto; only 1: auto).	3.30751299858	1463
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: simpl; only 1: reflexivity).	0.63599896431	119
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	5.8.1	synth with cache (only 1: unfold eval_cnf; only 1: intuition; only 1: now apply H).	3.66416883469	1108
Coq.micromega.Tauto.S.eval_cnf_tt	40	0.0.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: intros; only 1: tauto).	0.057382106781	4
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	21	synth with cache (only 1: firstorder).	1.82137489319	378
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0861001014709	6
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	7.7.6.7	synth with cache (only 1: intro n; only 1: firstorder; only 1: now destruct n; only 1: now destruct n).	11.0357079506	4003
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0494558811188	1
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	2	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0504620075226	3
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.047534942627	3
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	92.6	synth with cache (only 1: simpl; only 1: firstorder).	8.61825084686	9715
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	74.0	synth with cache (only 1: simpl; only 1: firstorder).	6.65646696091	5851
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	0.0.5.0.0	synth with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	0.122206926346	15
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	0.3.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	29.1694028378	3144
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.093759059906	4
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.2	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.127763986588	7
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	0.0.0.0.1.0.1.0.0.7.0.14	synth with cache (only 1: revert l; only 1: simpl; only 1: induction M; only 1: simpl; only 1: intros; only 1: intuition; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rsimpl).	20.8783159256	4476
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	2	synth with cache (only 1: exact (SORplus_wd sor)).	0.0639140605927	3
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	2	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0647399425507	3
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0568239688873	1
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	synth with cache (only 1: exact (SORle_wd sor)).	0.0636119842529	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	synth with cache (only 1: exact (SORlt_wd sor)).	0.0647330284119	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	2.0.0.1.6	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	1.03727507591	103
Coq.micromega.RingMicromega.Micromega.cleb_sound	40	49.4	synth with cache (only 1: intros x y H; only 1: firstorder).	9.57364487648	6774
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	1.15	synth with cache (only 1: fix gcd_divide 1; only 1: trivial).	1.82252597809	271
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	1.18.13.0	synth with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	3.94700717926	1416
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	1.23.0	synth with cache (only 1: intros; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	1.87348294258	659
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.1.0.0.7	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.225264072418	65
Coq.micromega.Refl.make_impl_map	40	2.2.2	synth with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: firstorder).	0.129299163818	18
Coq.micromega.Refl.make_conj_cons	40	3.0.3.13.3	synth with cache (only 1: intros; only 1: induction l; only 1: now constructor; only 1: simpl; only 1: tauto).	37.0649819374	17311
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.149387836456	5
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	2	synth with cache (only 1: exact RTheory).	0.904405832291	76
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	1.1.9.10	synth with cache (only 1: generalize (Rlt_irrefl 0); only 1: unfold Qinv, Q2R, Qeq; only 1: intro; only 1: auto with real).	16.4276199341	2829
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40	2.1.19	synth with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	2.20803713799	736
Coq.micromega.RMicromega.is_neg_false	40	0.6.0.0.1.4.3.1.1.1	synth with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: discriminate; only 1: intros; only 1: easy; only 1: congruence; only 1: simpl; only 1: intro H; only 1: now induction n).	19.1406760216	4403
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.243824958801	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40	4.2.6	synth with cache (only 1: intro n; only 1: fix odd_equiv 1; only 1: tauto).	4.6974029541	742
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.0.2.1.8.4.2	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: trivial).	15.667165041	5284
Coq.rtauto.Bintree.map_app	40	0.2.2.0.0.0.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	4.12901186943	711
Coq.rtauto.Bintree.length_map	40	0.0.0.0.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0756278038025	8
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40	0.0.0.0.8.8.3.3	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros l2; only 1: intros [| ] ? Heq; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	23.3386390209	7141
Coq.rtauto.Bintree.Store.Tget_Tempty	40	2	synth with cache (only 1: now intros []).	0.036092042923	3
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	6	synth with cache (only 1: now intros []).	0.0374639034271	7
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	1.10.5	synth with cache (only 1: inversion 1; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: auto).	2.70258903503	688
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.with_env.compose0	40	1.0.0.1.35	synth with cache (only 1: induction F; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	13.9005930424	8410
Coq.rtauto.Rtauto.with_env.compose1	40	2.2.3.2.0	synth with cache (only 1: induction F; only 1: auto; only 1: intros A H; only 1: intros; only 1: firstorder).	2.73066806793	550
Coq.rtauto.Rtauto.with_env.compose2	40	2.4.3.0.3.0.0	synth with cache (only 1: induction F; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros A H; only 1: intros; only 1: firstorder).	19.6721150875	5531
Coq.rtauto.Rtauto.with_env.compose3	40	3.0.9.0.0.1.0	synth with cache (only 1: induction F; only 1: intros A B C H; only 1: auto; only 1: intros A B C H; only 1: intros; only 1: simpl; only 1: firstorder).	23.0852360725	7243
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40	0.14.2	synth with cache (only 1: intros x y z; only 1: fix even_spec 1; only 1: auto).	1.09435892105	487
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	3.4.0	synth with cache (only 1: intros; only 1: setoid_rewrite H; only 1: cring).	0.617576122284	12
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	1.0	synth with cache (only 1: simpl; only 1: auto).	0.106225013733	3
Coq.nsatz.Nsatz.nsatz1.Rext	40	0.0.0.10	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.719190835953	64
Coq.nsatz.Nsatz.nsatz1.Rset	40	1.1	synth with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.107711791992	4
Coq.nsatz.Nsatz.nsatz1.Rtheory	40
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	2.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: congruence).	0.419148921967	15
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.11624288559	1
Coq.nsatz.Nsatz.Rcri	40	6.1.4.3	synth with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: exact Rmult_comm).	6.86364006996	727
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.120240926743	1
Coq.nsatz.Nsatz.Qcri	40	1.0.0.1.2.0.11	synth with cache (only 1: intro q; only 1: intros; only 1: apply Qeq_sym; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	3.46378993988	336
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	1	synth with cache (only 1: discriminate).	0.114260196686	2
Coq.nsatz.Nsatz.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.146270036697	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl').	0.107650995255	1
Coq.omega.OmegaLemmas.Zred_factor1	40	4.0.2	synth with cache (only 1: rewrite Z.mul_comm; only 1: change 2 with (1 + 1); only 1: apply Z.add_diag).	1.74074101448	111
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	7	synth with cache (only 1: now Z.nzsimpl).	6.9374461174	268
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	0.0.0.0.2	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro n; only 1: Z.nzsimpl; only 1: auto with relations).	0.286555051804	7
Coq.omega.OmegaLemmas.Zred_factor6	40	0	synth with cache (only 1: now destruct n).	0.055312871933	1
Coq.omega.OmegaLemmas.new_var	40	0.3	synth with cache (only 1: intro n; only 1: now exists n).	0.075877904892	5
Coq.omega.OmegaLemmas.OMEGA1	40	5.1	synth with cache (only 1: intro EQ; only 1: now rewrite EQ).	0.0706579685211	8
Coq.omega.OmegaLemmas.OMEGA2	40	5.3.6.0.8	synth with cache (only 1: destruct x; only 1: trivial; only 1: easy || now destruct y; only 1: intros; only 1: easy).	34.7324969769	4873
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	0.27.12	synth with cache (only 1: intuition; only 1: subst; only 1: now Z.nzsimpl).	6.09218096733	2522
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40	1.14.1.2	synth with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	37.6257929802	6590
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	0.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.104192018509	3
Coq.omega.OmegaLemmas.OMEGA12	40	1.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0857391357422	3
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.1	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.159835100174	4
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.2	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.433384895325	43
Coq.omega.OmegaLemmas.OMEGA16	40	3.1	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).	0.0828688144684	6
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.116656064987	2
Coq.omega.OmegaLemmas.OMEGA18	40	12.12.8.2	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now intros ->).	13.1003530025	3633
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.272411823273	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.128733873367	6
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.0.0.2.1.0	synth with cache (only 1: symmetry; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	0.125754117966	9
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.119792938232	6
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.1	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0841021537781	4
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0828990936279	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.108860969543	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0901899337769	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.2	synth with cache (only 1: rewrite Pos.eqb_eq; only 1: auto with relations).	0.99587392807	154
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	0.0.0.3.0.0.1.1	synth with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	1.74674487114	265
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.0.10.4	synth with cache (only 1: intros a m H; only 1: inversion H; only 1: simpl; only 1: trivial).	1.23815798759	391
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	0	synth with cache (only 1: reflexivity).	0.0647490024567	1
Coq.btauto.Reflect.Completeness.list_nth_succ	40
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	19	synth with cache (only 1: intuition).	1.33718395233	527
Coq.funind.Recdef.Splus_lt	40	15	synth with cache (only 1: intuition).	0.456292152405	115
Coq.funind.Recdef.SSplus_lt	40	12	synth with cache (only 1: intuition).	0.506042957306	104
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0848879814148	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.0	synth with cache (only 1: intro EQ; only 1: discriminate).	0.0689809322357	2
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	0	synth with cache (only 1: auto).	0.0524199008942	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.046247959137	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	9.30.0	synth with cache (only 1: intros; only 1: red; only 1: firstorder).	15.7357709408	5368
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	35.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: firstorder).	11.3034129143	3803
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	0.3.4	synth with cache (only 1: intro P; only 1: elim (PaddX_ok2 P); only 1: auto).	2.28599691391	156
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	13.0.2	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	8.13239192963	868
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	9.0	synth with cache (only 1: intros; only 1: apply norm_aux_spec).	4.26270198822	167
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	2.31918501854	319
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.11835193634	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	2	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0555410385132	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	3	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0557968616486	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	1	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0508019924164	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	5	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0579559803009	6
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	5	synth with cache (only 1: trivial).	0.0530860424042	6
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	3.1	synth with cache (only 1: unfold NPEequiv; only 1: now intros l l' <- P Q H).	3.87372303009	105
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	3	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.0996870994568	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	5.2	synth with cache (only 1: rewrite rsub_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.116728067398	9
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	18	synth with cache (only 1: eauto).	1.26376199722	260
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	13.13.20	synth with cache (only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	4.5500459671	1881
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	0.0.1.0.1.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl; only 1: now rewrite !IHp; only 1: simpl; only 1: now rewrite !IHp; only 1: simpl; only 1: trivial).	6.84176802635	96
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	0.0.2.0.2.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	6.02860021591	279
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	2.0.0.0.0.0.0	synth with cache (only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	0.307735204697	15
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.5.0.0	synth with cache (only 1: red; only 1: red; only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	3.67686104774	62
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.4.0.0	synth with cache (only 1: red; only 1: red; only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	3.64593696594	58
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	6.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.135046958923	10
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	0.1.0	synth with cache (only 1: intros l; only 1: simpl; only 1: eauto).	0.591342926025	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	6.1.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: eauto).	0.56356215477	111
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	0.9	synth with cache (only 1: Bool.destr_bool; only 1: auto).	2.29227304459	66
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.9.3.0.0.3	synth with cache (only 1: destruct l1; only 1: intro H; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	21.8921730518	3357
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	5.6.10	synth with cache (only 1: rewrite PCond_cons; only 1: intro H; only 1: intuition).	9.09508395195	2164
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	9.0	synth with cache (only 1: simpl; only 1: easy || now destruct 1).	0.484313964844	72
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0800340175629	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0793080329895	1
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0756769180298	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	0.0.0.4	synth with cache (only 1: constructor; only 1: congruence; only 1: congruence; only 1: congruence).	0.104821205139	8
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	1.1.1.11	synth with cache (only 1: induction x; only 1: auto; only 1: auto; only 1: auto).	14.8548409939	370
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	0.1.2	synth with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.0959689617157	6
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	2.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: congruence).	0.267678022385	13
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	4.7.4.6	synth with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: exact Rmult_comm).	18.2673699856	2374
Coq.setoid_ring.Rings_R.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.109969854355	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	3	synth with cache (only 1: reflexivity).	0.0333158969879	4
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	17.3	synth with cache (only 1: firstorder; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit).	0.738337993622	346
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	4	synth with cache (only 1: firstorder).	0.0489251613617	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	5	synth with cache (only 1: intuition).	0.0478639602661	6
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	11.4	synth with cache (only 1: intuition; only 1: simpl_relation).	1.64743590355	322
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	1.0.0.1	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: congruence).	0.348448991776	6
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	22	synth with cache (only 1: firstorder).	0.890120983124	368
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	19	synth with cache (only 1: firstorder).	0.584557056427	235
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0	synth with cache (only 1: auto).	0.035502910614	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	1.0.0.9	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.416849136353	70
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	7	synth with cache (only 1: reflexivity).	0.0380599498749	8
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.0343000888824	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.0342109203339	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	7	synth with cache (only 1: firstorder).	0.252163171768	12
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	2	synth with cache (only 1: firstorder).	0.0501050949097	3
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	20	synth with cache (only 1: firstorder).	1.4084649086	421
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	17	synth with cache (only 1: firstorder).	0.581470012665	231
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	21	synth with cache (only 1: firstorder).	0.804826974869	493
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	4.4	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).	0.104588031769	17
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	3.4	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).	0.0781228542328	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	5.2	synth with cache (only 1: intros a b Hab; only 1: firstorder).	0.0676190853119	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	1.4	synth with cache (only 1: case Smorph; only 1: trivial).	0.0564000606537	7
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	36	synth with cache (only 1: firstorder).	2.73388981819	2042
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	1	synth with cache (only 1: mrewrite).	0.0463001728058	2
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	1	synth with cache (only 1: mrewrite).	0.0478348731995	2
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0559730529785	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0548059940338	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0507400035858	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.8	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.313424110413	18
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0641040802002	1
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	1.2.3	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0974998474121	9
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	1	synth with cache (only 1: exact (SRadd_ext SReqe)).	0.0552151203156	2
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	2	synth with cache (only 1: exact (SRmul_ext SReqe)).	0.0556640625	3
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0546591281891	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0539190769196	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0497288703918	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0535888671875	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	1.0.0.1.1.1.1.1	synth with cache (only 1: induction w; only 1: destruct n; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	16.326004982	1139
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	1.0.1.4	synth with cache (only 1: induction x; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm).	0.21929192543	21
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0570728778839	1
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0586168766022	2
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.052964925766	1
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0593140125275	3
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40	0.0.0.15	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	1.08394885063	149
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	0.0.20	synth with cache (only 1: constructor; only 1: intros; only 1: reflexivity).	2.55225205421	232
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	2.2.0.15	synth with cache (only 1: intro EQ; only 1: repeat red; only 1: intro n; only 1: intuition).	2.35766005516	463
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	2	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0608689785004	3
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	2	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0600969791412	3
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	1	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0533831119537	2
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	11.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	4.67212510109	991
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	14.4	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	8.03262400627	1693
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	83	synth with cache (only 1: simpl_relation).	7.37000513077	5296
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	78	synth with cache (only 1: simpl_relation).	7.0755841732	6160
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	1.1.0.0.0.1.0.0.0.0.0.1.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	32.5489110947	2914
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	3.1.0.2.10	synth with cache (only 1: destruct n; only 1: intros; only 1: Esimpl; only 1: intros; only 1: Esimpl).	35.4991118908	3811
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	1.0.0	synth with cache (only 1: intro x; only 1: intros; only 1: reflexivity).	0.0906281471252	4
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	13	synth with cache (only 1: firstorder).	2.31967282295	251
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.1.0.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.124612092972	5
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	1.6.20.1	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).	25.7273478508	5836
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	1.0.0.14.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	5.60248088837	967
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.16.6	synth with cache (only 1: destr_bool; only 1: pose proof (Zeq_bool_eq x y H) as H1; only 1: auto).	4.24772596359	1146
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.0.1.0.0.4	synth with cache (only 1: intro; only 1: intro; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	2.27389287949	165
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0780439376831	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	synth with cache (only 1: tauto).	0.0132930278778	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.26	synth with cache (only 1: unlock; only 1: discriminate).	0.898346185684	939
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	synth with cache (only 1: by case : k ).	0.0170590877533	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.9.3.1	synth with cache (only 1: intro z; only 1: intuition; only 1: subst; only 1: tauto).	17.746119976	307
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: tauto).	0.137974023819	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.0973811149597	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	0.2	synth with cache (only 1: intro H; only 1: tauto).	0.111585140228	4
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	1	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.121487855911	2
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.379232883453	1
Coq.ssr.ssrbool.is_true_true	40	2	synth with cache (only 1: by [  ]).	1.02243304253	3
Coq.ssr.ssrbool.not_false_is_true	40	1	synth with cache (only 1: discriminate).	0.861891031265	2
Coq.ssr.ssrbool.is_true_locked_true	40	1.9	synth with cache (only 1: unlock; only 1: by [  ]).	5.22144198418	34
Coq.ssr.ssrbool.negbT	40	8	synth with cache (only 1: Bool.destr_bool).	1.91743206978	11
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.193253040314	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.175088167191	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.193602085114	1
Coq.ssr.ssrbool.negbK	40	4	synth with cache (only 1: by case).	0.938162088394	5
Coq.ssr.ssrbool.negbNE	40	3	synth with cache (only 1: by case : b ).	1.08024287224	4
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	2	synth with cache (only 1: Bool.destr_bool).	0.25593495369	12
Coq.ssr.ssrbool.negbRL	40	3	synth with cache (only 1: Bool.destr_bool).	0.276433944702	12
Coq.ssr.ssrbool.contra	40	1.9	synth with cache (only 1: Bool.destr_bool; only 1: tauto).	4.46497511864	34
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.861149072647	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.61576795578	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.550851821899	1
Coq.ssr.ssrbool.contraT	40	2.31	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).	24.4862229824	610
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.823387861252	1
Coq.ssr.ssrbool.contraFT	40	4.12	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).	3.84692406654	136
Coq.ssr.ssrbool.contraFN	40	4.14	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).	34.3046851158	176
Coq.ssr.ssrbool.contraTF	40	2.5	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	4.649340868	9
Coq.ssr.ssrbool.contraNF	40	2.5	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	8.86257815361	9
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	2	synth with cache (only 1: by case  def_b: b ; constructor).	1.46802902222	3
Coq.ssr.ssrbool.BoolIf.ifT	40	6	synth with cache (only 1: by case : b ).	2.80287218094	16
Coq.ssr.ssrbool.BoolIf.ifF	40	1	synth with cache (only 1: by move ->).	2.51641607285	11
Coq.ssr.ssrbool.BoolIf.ifN	40	5	synth with cache (only 1: by case : b ).	2.40382099152	14
Coq.ssr.ssrbool.BoolIf.if_same	40	3	synth with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	1.70859003067	4
Coq.ssr.ssrbool.BoolIf.if_neg	40	2	synth with cache (only 1: by case b).	1.72135591507	3
Coq.ssr.ssrbool.BoolIf.fun_if	40	1	synth with cache (only 1: by case b).	1.27204203606	2
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	1.10591197014	1
Coq.ssr.ssrbool.BoolIf.ifE	40	3	synth with cache (only 1: trivial).	1.5263531208	4
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	2.04524302483	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	2.40743899345	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	1.73581004143	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	1.1.7	synth with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	17.0243279934	61
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	4.17	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	15.9517748356	241
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	8	synth with cache (only 1: by case Pb).	0.86599111557	9
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	3.16055893898	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	3.06033086777	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	3.09196901321	1
Coq.ssr.ssrbool.pair_andP	40	0	synth with cache (only 1: intuition).	4.25459599495	1
Coq.ssr.ssrbool.ReflectConnectives.idP	40
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	3.03273701668	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	1.85736203194	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	1.70670080185	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	1.28454089165	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	1	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	1.23073983192	2
Coq.ssr.ssrbool.ReflectConnectives.norP	40	1	synth with cache (only 1: by case b1; case b2; constructor => //; case).	0.900740146637	2
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	7	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	1.50348615646	8
Coq.ssr.ssrbool.andTb	40	1	synth with cache (only 1: by [  ]).	0.907947063446	2
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by constructor; case).	1.9903178215	1
Coq.ssr.ssrbool.andbT	40	28	synth with cache (only 1: by case  =>// undecP; apply /undecP ; right => notP; apply /notF/undecP ; left).	21.6378860474	390
Coq.ssr.ssrbool.andbF	40	1	synth with cache (only 1: by case).	2.14736700058	2
Coq.ssr.ssrbool.andbb	40	3	synth with cache (only 1: by case).	1.24070382118	4
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	1.21963095665	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.91970705986	1
Coq.ssr.ssrbool.andbAC	40	0	synth with cache (only 1: by do 3!case).	0.917292833328	1
Coq.ssr.ssrbool.andbACA	40	2	synth with cache (only 1: by do 3!case).	0.923533916473	3
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: Bool.destr_bool).	0.261343955994	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	1.77806997299	1
Coq.ssr.ssrbool.orbT	40	1	synth with cache (only 1: Bool.destr_bool).	0.198961019516	2
Coq.ssr.ssrbool.orbF	40	1	synth with cache (only 1: by case).	1.52303695679	2
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.910725831985	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.634413957596	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.829560041428	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.634593009949	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.524070978165	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.752104997635	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	2.25218701363	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	2.03154587746	1
Coq.ssr.ssrbool.orbN	40	1	synth with cache (only 1: by case : b ).	0.973711013794	2
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.994380950928	1
Coq.ssr.ssrbool.andb_orl	40	3	synth with cache (only 1: by do 3!case).	0.947729825974	4
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by do 3!case).	0.785058021545	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.74178814888	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.829912900925	1
Coq.ssr.ssrbool.andb_idl	40	2.3	synth with cache (only 1: Bool.destr_bool; only 1: auto).	4.2050101757	7
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	3.93007397652	1
Coq.ssr.ssrbool.andb_id2l	40	2.2.5	synth with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	25.2346699238	93
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	2.12786507607	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	3.60950398445	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	3.41405296326	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	2.42987203598	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	1.84720897675	1
Coq.ssr.ssrbool.negb_and	40	0	synth with cache (only 1: Bool.destr_bool).	2.71362495422	1
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	1.96267795563	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	1.70515799522	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	1.57750606537	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	1.59874486923	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	1.14821410179	1
Coq.ssr.ssrbool.implybT	40	2	synth with cache (only 1: by case : b  => // ->).	0.320816040039	3
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: trivial).	1.62079906464	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b  => // ->).	0.575517177582	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: tauto).	0.723424196243	1
Coq.ssr.ssrbool.implybb	40	1	synth with cache (only 1: by case : b ).	0.65437912941	2
Coq.ssr.ssrbool.negb_imply	40	1	synth with cache (only 1: by case : a ; case : b ).	1.40501117706	2
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	2.68924403191	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	2.60731887817	1
Coq.ssr.ssrbool.implybN	40	1	synth with cache (only 1: by case : a ; case : b ).	1.63621115685	2
Coq.ssr.ssrbool.implybNN	40	1	synth with cache (only 1: by case : a ; case : b ).	1.41990590096	2
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	4.4943549633	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	2.50084590912	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	2.06088590622	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	1.10632705688	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	1.09188699722	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.853420972824	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.284792900085	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.528861045837	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.352519989014	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.352137088776	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.209996938705	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.484704017639	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.376126766205	1
Coq.ssr.ssrbool.addKb	40	15	synth with cache (only 1: by do 2!case).	2.74618315697	91
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.325265884399	1
Coq.ssr.ssrbool.addIb	40	1	synth with cache (only 1: by do 3!case).	0.359145879745	2
Coq.ssr.ssrbool.addbI	40	0	synth with cache (only 1: by do 3!case).	0.387406110764	1
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.656584024429	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.639528036118	2
Coq.ssr.ssrbool.addbN	40	1	synth with cache (only 1: by case : a ; case : b ).	1.40259885788	2
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	1.35826206207	1
Coq.ssr.ssrbool.addbP	40
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	1	synth with cache (only 1: by case : pT pp ).	0.852424860001	2
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.699954986572	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	3	synth with cache (only 1: by rewrite -mem_topred).	0.474779129028	4
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	2	synth with cache (only 1: by [  ]).	0.668275117874	3
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	1	synth with cache (only 1: exact (erefl _)).	1.03459620476	2
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	synth with cache (only 1: by [  ]).	1.21580696106	1
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	0	synth with cache (only 1: by [  ]).	1.59206914902	1
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.3	synth with cache (only 1: Bool.destr_bool; only 1: by [  ]).	2.35535097122	5
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.846084833145	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.971601009369	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	3.4	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).	1.66199588776	9
Coq.ssr.ssrbool.LocalGlobal.in2T	40	2	synth with cache (only 1: by move  =>? ?; auto).	0.688276052475	3
Coq.ssr.ssrbool.LocalGlobal.in3T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.814208030701	2
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.891795158386	2
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	2.04627609253	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	2	synth with cache (only 1: by move  =>? ?; auto).	3.91330695152	3
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	5.582228899	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	5.29675912857	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	4.51572108269	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	4.14396595955	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	3.94967699051	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	3.77664089203	2
Coq.ssr.ssrbool.LocalGlobal.subon1	40	2	synth with cache (only 1: by move  =>? ?; auto).	5.69847893715	3
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	6.2832660675	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	5	synth with cache (only 1: by move  =>? ?; auto).	7.55178785324	6
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	6.69028306007	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	3.67892408371	1
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	1	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	3.45365095139	2
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	6.98655819893	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	6.76077103615	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	1	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	6.33479213715	2
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	7.49692583084	1
Coq.ssr.ssrbool.sub_in2	40	4.10	synth with cache (only 1: Bool.destr_bool; only 1: by move  =>? ?; auto).	33.8855421543	101
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40	2.6	synth with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	6.03544616699	10
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	2.61337804794	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	23	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	31.3161039352	261
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	1	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	1.94543504715	2
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	4.23968410492	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	4.72261404991	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0114181041718	2
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	1	synth with cache (only 1: constructor).	0.231559038162	2
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	3.2	synth with cache (only 1: intros; only 1: by [  ]).	0.300743818283	7
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	1	synth with cache (only 1: by [  ]).	0.212773084641	2
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	1.2.0.19.0	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	29.8877520561	975
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.316475152969	1
Coq.ssr.ssrfun.Sig.svalP	40	31	synth with cache (only 1: apply proj2_sig).	19.5798590183	483
Coq.ssr.ssrfun.Sig.s2valP	40	3	synth with cache (only 1: by case : u ).	0.73141002655	4
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.93735408783	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	1.4818239212	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	3.52713394165	1
Coq.ssr.ssrfun.Injections.can_pcan	40
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	0	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	1.59018611908	1
Coq.ssr.ssrfun.Injections.canLR	40	1.1.12	synth with cache (only 1: intuition; only 1: subst; only 1: auto).	22.3703279495	115
Coq.ssr.ssrfun.Injections.canRL	40	1.9	synth with cache (only 1: destruct 2; only 1: auto).	7.99731206894	34
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	1	synth with cache (only 1: by [  ]).	2.34111213684	2
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40	0.1	synth with cache (only 1: subst; only 1: auto).	2.02581477165	3
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0	synth with cache (only 1: by [  ]).	0.90936422348	1
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	1	synth with cache (only 1: auto).	0.0138449668884	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	synth with cache (only 1: exact eq_refl).	0.0141389369965	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	1	synth with cache (only 1: now trivial).	0.014251947403	2
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	1	synth with cache (only 1: now trivial).	0.0140359401703	2
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	1	synth with cache (only 1: now unfold Over_rel).	0.0141201019287	2
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	0.7.8	synth with cache (only 1: intros a b Ha Hb H; only 1: subst; only 1: trivial).	2.84128093719	1192
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.0.7	synth with cache (only 1: refine (@rectS _ _ _ _); only 1: intro n; only 1: firstorder; only 1: now simpl).	1.25490283966	165
Coq.Vectors.VectorSpec.const_nth	40	0.0.13.13	synth with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	2.5274682045	937
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.0	synth with cache (only 1: intros x y; only 1: trivial).	0.0436720848083	2
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	0.3.5.0.13.6	synth with cache (only 1: intros; only 1: induction v; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: trivial).	21.1073310375	10140
Coq.Vectors.VectorSpec.take_prf_irr	40	1.0.0.1.2.0.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: auto).	3.38396382332	681
Coq.Vectors.VectorSpec.uncons_cons	40	2	synth with cache (only 1: reflexivity).	0.0313620567322	3
Coq.Vectors.VectorSpec.append_comm_cons	40	1	synth with cache (only 1: reflexivity).	0.0319340229034	2
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40	7.7.4.1	synth with cache (only 1: intros n m p; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	25.9236140251	7742
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	9	synth with cache (only 1: congruence).	0.154211997986	47
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.0184981822968	1
Coq.Setoids.Setoid.Seq_sym	40	0	synth with cache (only 1: firstorder).	0.01921916008	1
Coq.Setoids.Setoid.Seq_trans	40	0	synth with cache (only 1: firstorder).	0.0920670032501	1
Coq.Setoids.Setoid.gen_st	40	4	synth with cache (only 1: simpl_relation).	0.0241599082947	5
Coq.Bool.IfProp.Iftrue_inv	40	0.10.1	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: assumption).	0.283093929291	186
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.2.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: tauto; only 1: intros; only 1: auto with bool).	0.0411429405212	8
Coq.Bool.IfProp.IfProp_true	40	0.11.1	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: auto with bool).	0.386974096298	254
Coq.Bool.IfProp.IfProp_false	40	0.1.0	synth with cache (only 1: intros; only 1: inversion H; only 1: auto with bool).	0.0262160301208	4
Coq.Bool.IfProp.IfProp_or	40	0.0.4.2	synth with cache (only 1: intros; only 1: inversion H; only 1: tauto; only 1: tauto).	0.0656161308289	14
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	9.3	synth with cache (only 1: intros; only 1: now subst).	0.327268838882	153
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.084114074707	7
Coq.Bool.Zerob.zerob_false_intro	40	2.2.0.5	synth with cache (only 1: destruct n; only 1: simpl; only 1: Nat.order'; only 1: easy).	1.34427309036	329
Coq.Bool.Zerob.zerob_false_elim	40	3.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: intro; only 1: now apply Nat.lt_irrefl with 0; only 1: intro H; only 1: auto).	0.102185964584	10
Coq.Bool.DecBool.ifdec_left	40	1.7.1.37	synth with cache (only 1: destruct H; only 1: auto; only 1: destruct 1; only 1: auto).	15.6729719639	34436
Coq.Bool.DecBool.ifdec_right	40	0.4.13.2.0.1	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: apply False_rec; only 1: auto; only 1: auto).	6.38126111031	5618
Coq.Bool.Sumbool.sumbool_of_bool	40	1.1.23.16	synth with cache (only 1: intros; only 1: destruct b; only 1: auto; only 1: auto).	3.67814612389	8240
Coq.Bool.Sumbool.bool_eq_rec	40	1.1.2	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0259411334991	7
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.1	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0250158309937	4
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.1	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0440771579742	8
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.5	synth with cache (only 1: case H1; only 1: auto; only 1: auto).	0.0806329250336	35
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	1	synth with cache (only 1: discriminate).	0.0136120319366	2
Coq.Bool.Bool.diff_false_true	40	1	synth with cache (only 1: discriminate).	0.0134530067444	2
Coq.Bool.Bool.eq_true_false_abs	40	5.24	synth with cache (only 1: inversion 1; only 1: discriminate).	0.887000083923	1552
Coq.Bool.Bool.not_true_is_false	40	0.2.1	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.0240869522095	6
Coq.Bool.Bool.not_false_is_true	40	2.1	synth with cache (only 1: destr_bool; only 1: intuition).	0.0203998088837	5
Coq.Bool.Bool.not_true_iff_false	40	5.2.3.7	synth with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	1.68268299103	1517
Coq.Bool.Bool.not_false_iff_true	40	0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0268640518188	4
Coq.Bool.Bool.leb_implb	40	2.1.2.1.5	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.352646112442	263
Coq.Bool.Bool.eqb_subst	40	3	synth with cache (only 1: destr_bool).	0.0267040729523	12
Coq.Bool.Bool.eqb_reflx	40	5.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0225031375885	8
Coq.Bool.Bool.eqb_prop	40	7.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0321249961853	13
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0614440441132	18
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0618510246277	19
Coq.Bool.Bool.negb_orb	40	7.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0265071392059	10
Coq.Bool.Bool.negb_andb	40	5.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.026319026947	8
Coq.Bool.Bool.negb_involutive	40	2	synth with cache (only 1: destr_bool).	0.0149290561676	3
Coq.Bool.Bool.negb_involutive_reverse	40	1	synth with cache (only 1: destr_bool).	0.0147278308868	2
Coq.Bool.Bool.negb_sym	40	7.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.026270866394	10
Coq.Bool.Bool.no_fixpoint_negb	40	5	synth with cache (only 1: destr_bool).	0.0311150550842	14
Coq.Bool.Bool.eqb_negb1	40	1	synth with cache (only 1: destr_bool).	0.0152270793915	2
Coq.Bool.Bool.eqb_negb2	40	1	synth with cache (only 1: destr_bool).	0.0151059627533	2
Coq.Bool.Bool.if_negb	40	5	synth with cache (only 1: destr_bool).	0.0336999893188	19
Coq.Bool.Bool.negb_true_iff	40	0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0430750846863	18
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0265259742737	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0734889507294	16
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0687341690063	20
Coq.Bool.Bool.orb_true_elim	40	0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0335609912872	6
Coq.Bool.Bool.orb_prop	40	0.0.0.4	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.114236831665	39
Coq.Bool.Bool.orb_true_intro	40	2.3	synth with cache (only 1: destr_bool; only 1: intuition).	0.136418104172	28
Coq.Bool.Bool.orb_false_intro	40	2.0.1.0.1	synth with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0328760147095	9
Coq.Bool.Bool.orb_false_elim	40	0.0.4.0.0.0	synth with cache (only 1: destruct b1; only 1: simpl; only 1: intuition; only 1: discriminate; only 1: simpl; only 1: auto).	0.0410878658295	10
Coq.Bool.Bool.orb_diag	40	1	synth with cache (only 1: destr_bool).	0.0150709152222	2
Coq.Bool.Bool.orb_true_r	40	1	synth with cache (only 1: destr_bool).	0.0151660442352	2
Coq.Bool.Bool.orb_true_l	40	1	synth with cache (only 1: destr_bool).	0.0150949954987	2
Coq.Bool.Bool.orb_false_r	40	2	synth with cache (only 1: destr_bool).	0.0152540206909	3
Coq.Bool.Bool.orb_false_l	40	1	synth with cache (only 1: destr_bool).	0.0150001049042	2
Coq.Bool.Bool.orb_negb_r	40	1	synth with cache (only 1: destr_bool).	0.0151309967041	2
Coq.Bool.Bool.orb_comm	40	1	synth with cache (only 1: destr_bool).	0.0169839859009	2
Coq.Bool.Bool.orb_assoc	40	1	synth with cache (only 1: destr_bool).	0.0204260349274	2
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.040559053421	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.100315093994	15
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0479218959808	9
Coq.Bool.Bool.andb_false_intro1	40	0.3.0	synth with cache (only 1: intuition; only 1: subst; only 1: exact eq_refl).	0.0275061130524	6
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: intuition).	0.0274770259857	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0153532028198	2
Coq.Bool.Bool.andb_false_l	40	1	synth with cache (only 1: destr_bool).	0.0152959823608	2
Coq.Bool.Bool.andb_diag	40	1	synth with cache (only 1: destr_bool).	0.0152499675751	2
Coq.Bool.Bool.andb_true_r	40	1	synth with cache (only 1: destr_bool).	0.0150671005249	2
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0149052143097	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.0	synth with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0330681800842	5
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0152881145477	1
Coq.Bool.Bool.andb_comm	40	1	synth with cache (only 1: destr_bool).	0.0173919200897	2
Coq.Bool.Bool.andb_assoc	40	1	synth with cache (only 1: destr_bool).	0.0471129417419	2
Coq.Bool.Bool.andb_orb_distrib_r	40	1	synth with cache (only 1: destr_bool).	0.0208220481873	2
Coq.Bool.Bool.andb_orb_distrib_l	40	1	synth with cache (only 1: destr_bool).	0.0208868980408	2
Coq.Bool.Bool.orb_andb_distrib_r	40	1	synth with cache (only 1: destr_bool).	0.0208048820496	2
Coq.Bool.Bool.orb_andb_distrib_l	40	1	synth with cache (only 1: destr_bool).	0.0211420059204	2
Coq.Bool.Bool.absorption_andb	40	1	synth with cache (only 1: destr_bool).	0.0172309875488	2
Coq.Bool.Bool.absorption_orb	40	1	synth with cache (only 1: destr_bool).	0.0172538757324	2
Coq.Bool.Bool.xorb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0154049396515	2
Coq.Bool.Bool.xorb_false_l	40	1	synth with cache (only 1: destr_bool).	0.0153579711914	2
Coq.Bool.Bool.xorb_true_r	40	1	synth with cache (only 1: destr_bool).	0.0156710147858	2
Coq.Bool.Bool.xorb_true_l	40	1	synth with cache (only 1: reflexivity).	0.014328956604	2
Coq.Bool.Bool.xorb_nilpotent	40	1	synth with cache (only 1: destr_bool).	0.0154368877411	2
Coq.Bool.Bool.xorb_comm	40	1	synth with cache (only 1: destr_bool).	0.0184609889984	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	synth with cache (only 1: destr_bool).	0.0215468406677	2
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.018529176712	1
Coq.Bool.Bool.xorb_move_l_r_1	40	3	synth with cache (only 1: destr_bool).	0.0467941761017	19
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0224530696869	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0219690799713	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0218789577484	1
Coq.Bool.Bool.negb_xorb_l	40	1	synth with cache (only 1: destr_bool).	0.0180480480194	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.1	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.059464931488	6
Coq.Bool.Bool.xorb_negb_negb	40	1	synth with cache (only 1: destr_bool).	0.0178020000458	2
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0507628917694	5
Coq.Bool.Bool.eq_true_iff_eq	40	4.4.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.581825971603	282
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0219690799713	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.021989107132	2
Coq.Bool.Bool.absurd_eq_bool	40	6	synth with cache (only 1: intuition).	0.0405828952789	24
Coq.Bool.Bool.absurd_eq_true	40	3.3	synth with cache (only 1: destr_bool; only 1: intuition).	0.022243976593	8
Coq.Bool.Bool.trans_eq_bool	40	0.6.0	synth with cache (only 1: intuition; only 1: subst; only 1: auto).	0.0322260856628	9
Coq.Bool.Bool.Is_true_eq_true	40	0.2	synth with cache (only 1: destr_bool; only 1: auto).	0.0212650299072	4
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.0163190364838	1
Coq.Bool.Bool.Is_true_eq_right	40	0	synth with cache (only 1: destr_bool).	0.0160510540009	1
Coq.Bool.Bool.eqb_refl	40	1	synth with cache (only 1: destr_bool).	0.0157949924469	2
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0280981063843	3
Coq.Bool.Bool.orb_prop_elim	40	0.0.0.0.3.0.0.5	synth with cache (only 1: destr_bool; only 1: constructor; only 1: auto; only 1: tauto; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto).	1.9740049839	939
Coq.Bool.Bool.orb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0235619544983	2
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0338199138641	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0381619930267	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0314829349518	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0301861763	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.4	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0290200710297	7
Coq.Bool.Bool.negb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0222401618958	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0220060348511	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0267431735992	3
Coq.Bool.Bool.andb_if	40	4	synth with cache (only 1: destr_bool).	0.0233881473541	5
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.0166668891907	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.018303155899	1
Coq.Bool.Bool.orb_lazy_alt	40	1	synth with cache (only 1: reflexivity).	0.0152440071106	2
Coq.Bool.Bool.reflect_iff	40	5.1.0.9	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: inversion_clear H).	2.43125414848	1576
Coq.Bool.Bool.iff_reflect	40	5.2.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.376646995544	192
Coq.Bool.Bool.reflect_dec	40	0.0.4	synth with cache (only 1: destruct 1; only 1: tauto; only 1: intuition).	0.0804691314697	21
Coq.Bool.Bool.eqb_spec	40	0.1.1.0.5	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.102979898453	52
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	2.4.0	synth with cache (only 1: destr_bool; only 1: subst; only 1: intuition).	0.0318360328674	9
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	4.0.4.0.1.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).	34.0569779873	6630
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	0.0.9.2.0.6.4	synth with cache (only 1: simple induction x; only 1: discriminate; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: case (Aeq_dec a a0); only 1: auto; only 1: auto).	22.7332468033	6471
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	4.4.0.2.0.0.1.2	synth with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intros H; only 1: intuition).	32.479834795	6110
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	0.0.4	synth with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.173272132874	38
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	2.1.0.2.0.0.0.0.1.0.2.1	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto; only 1: auto; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: simpl; only 1: tauto).	16.0999319553	3770
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.0.1.6.5.0	synth with cache (only 1: simple induction y; only 1: firstorder; only 1: intros a0 l H [Ha0a| Hal]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	5.36122584343	1590
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.5	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.277099132538	57
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.1.8.1.0.0.4	synth with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H2]; only 1: auto; only 1: auto).	36.448499918	9811
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0581920146942	4
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	9	synth with cache (only 1: eauto).	0.544122219086	113
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	2.0.1.2.0.26	synth with cache (only 1: induction l as [| y l]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	19.5601899624	1265
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.24	synth with cache (only 1: intros [x y]; only 1: exact eq_refl).	0.283247947693	521
Coq.Lists.Streams.Streams.tl_nth_tl	40	1.1.1.12	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: trivial).	0.483518123627	438
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	1.8.5	synth with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto).	0.627723932266	514
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	2.1.0	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.0246610641479	6
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.034679889679	5
Coq.Lists.Streams.Map.Str_nth_map	40	1.1.0.1	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0293118953705	7
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.1.0.1.0.2	synth with cache (only 1: simple induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: auto).	0.0424029827118	10
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	3.0.1.1	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: apply IHn).	0.0443499088287	13
Coq.Lists.List.Facts.nil_cons	40	7.0	synth with cache (only 1: intro n; only 1: discriminate).	0.13339805603	31
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40	0.15.6	synth with cache (only 1: intros a b; only 1: fix odd_spec 1; only 1: auto).	12.6979429722	4727
Coq.Lists.List.Facts.hd_error_some_nil	40	1.0.0.0.4	synth with cache (only 1: destruct l as [| x xs]; only 1: intro H; only 1: firstorder; only 1: discriminate; only 1: firstorder  discriminate).	0.390121936798	58
Coq.Lists.List.Facts.length_zero_iff_nil	40	0.3.24	synth with cache (only 1: destruct l; only 1: firstorder; only 1: firstorder  discriminate).	5.96643400192	3825
Coq.Lists.List.Facts.hd_error_nil	40	0	synth with cache (only 1: reflexivity).	0.034364938736	1
Coq.Lists.List.Facts.hd_error_cons	40	0	synth with cache (only 1: reflexivity).	0.0306599140167	1
Coq.Lists.List.Facts.in_eq	40	0.1	synth with cache (only 1: intro n; only 1: firstorder).	0.150639057159	3
Coq.Lists.List.Facts.in_cons	40	0.1.3	synth with cache (only 1: simpl; only 1: intros x y z; only 1: auto).	0.0535280704498	7
Coq.Lists.List.Facts.not_in_cons	40	1	synth with cache (only 1: firstorder).	0.035835981369	2
Coq.Lists.List.Facts.in_nil	40	0.0	synth with cache (only 1: intro n; only 1: firstorder).	0.0391249656677	2
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0329020023346	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0369961261749	2
Coq.Lists.List.Facts.app_nil_r	40	0.18.9.0.8	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: firstorder).	21.8801600933	14338
Coq.Lists.List.Facts.app_nil_end	40	0.1.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.076486825943	8
Coq.Lists.List.Facts.app_assoc	40	3.1.0.5.0.0.1	synth with cache (only 1: induction l; only 1: intros; only 1: reflexivity; only 1: firstorder; only 1: simpl; only 1: f_equal; only 1: firstorder).	8.72731304169	1865
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0972898006439	7
Coq.Lists.List.Facts.app_comm_cons	40	0.0	synth with cache (only 1: intros l m n; only 1: firstorder).	0.0432229042053	2
Coq.Lists.List.Facts.app_eq_nil	40	1.0.0.3	synth with cache (only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: firstorder  discriminate).	0.171561002731	42
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	2.1.6.0.2.0.0.3	synth with cache (only 1: destruct l as [| x l]; only 1: intro n; only 1: firstorder; only 1: simpl; only 1: intros; only 1: induction l; only 1: firstorder  discriminate; only 1: auto).	21.5130579472	7718
Coq.Lists.List.Facts.in_app_or	40	3.0.2.0.5	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder  discriminate).	2.97920203209	577
Coq.Lists.List.Facts.in_or_app	40	3.2.0.1.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: firstorder; only 1: firstorder).	0.645306825638	114
Coq.Lists.List.Facts.in_app_iff	40	5.3.1.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: firstorder; only 1: firstorder).	2.70216393471	459
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.0445110797882	3
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40	2.0.0.5.1.2	synth with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto with arith).	4.31015110016	1200
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40	1.0.2.0.1.4.0.0.0.0.1	synth with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: inversion_clear H; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	14.9353680611	4102
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40	2.1.0.2.3.1	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: auto; only 1: simpl; only 1: auto with arith).	6.8885011673	1231
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	0	synth with cache (only 1: auto).	0.0314078330994	1
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	3.1.6.0	synth with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: auto; only 1: intuition).	1.31389594078	335
Coq.Lists.List.Elts.count_occ_cons_neq	40	1.1.1	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0596640110016	6
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	0.7.2.0.0.4	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite (IHl y); only 1: auto).	5.58874607086	1613
Coq.Lists.List.ListOps.rev_involutive	40	0.32	synth with cache (only 1: fix le_div2 1; only 1: auto).	11.1075041294	9094
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	0.0.4.3	synth with cache (only 1: intros a H; only 1: induction l; only 1: auto; only 1: auto).	0.331096887589	80
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0	synth with cache (only 1: auto).	0.0324790477753	1
Coq.Lists.List.ListOps.concat_cons	40	1.0.0.0.1.0	synth with cache (only 1: simpl; only 1: induction x as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0826349258423	8
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.list_eq_dec	40	3	synth with cache (only 1: decide equality).	0.0712900161743	12
Coq.Lists.List.Map.map_cons	40	0	synth with cache (only 1: auto).	0.0304110050201	1
Coq.Lists.List.Map.in_map	40	0.1.4.2.1.14.0	synth with cache (only 1: red; only 1: induction l as [| x l]; only 1: auto; only 1: firstorder; only 1: subst; only 1: simpl; only 1: auto).	21.0827150345	7672
Coq.Lists.List.Map.in_map_iff	40	4.0.5.9	synth with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: firstorder  (subst; auto)).	8.44840216637	3360
Coq.Lists.List.Map.map_length	40	0.0.0.1.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0665009021759	8
Coq.Lists.List.Map.map_nth	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	1.6.0.2.0.0.11	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	8.51774501801	3082
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	6.1.4	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder  discriminate).	1.06727099419	288
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.2.1.0.9.6	synth with cache (only 1: intros n m p; only 1: induction l; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	5.12073493004	1838
Coq.Lists.List.concat_map	40
Coq.Lists.List.map_id	40	0.2.0.0.0.3.11	synth with cache (only 1: intros l1; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	3.73085284233	1253
Coq.Lists.List.map_map	40	0.4.1.0.0.6	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	2.0415148735	569
Coq.Lists.List.map_ext_in	40	0.14.6	synth with cache (only 1: intros A B f l; only 1: fix gcd_divide 1; only 1: auto).	26.1942169666	7575
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.2.2.1.0.0	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.403071880341	113
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.1.0.4	synth with cache (only 1: induction l as [| x l IH]; only 1: auto; only 1: simpl; only 1: auto).	0.0782468318939	17
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.10.2.1.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder; only 1: f_equal; only 1: auto).	13.3480148315	4566
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	0.0.0.0.2.2.0.0.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros l2; only 1: case (f a); only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	5.75776815414	1534
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0477039813995	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40	0.0.4.2.2.0.1.2	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	24.9393100739	7013
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40
Coq.Lists.List.Filtering.filter_ext	40	1.2.2.1	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0700380802155	10
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40	0.13	synth with cache (only 1: fix odd_spec 1; only 1: auto).	4.67536592484	1347
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.1.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.118064165115	10
Coq.Lists.List.ListPairs.split_combine	40	0.5.1.2.8.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: f_equal; only 1: auto).	28.7274420261	11740
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40	0.2.1.4.0.0.2.3.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: firstorder; only 1: simpl; only 1: injection H; only 1: auto).	38.0157020092	9980
Coq.Lists.List.ListPairs.combine_length	40
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.6.2.0.0.0.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder; only 1: subst; only 1: auto).	6.53712081909	1782
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	22	synth with cache (only 1: left).	0.304255008698	231
Coq.Lists.List.length_order.lel_trans	40	31.2	synth with cache (only 1: unfold lel; only 1: now intros -> ->).	9.99226689339	6136
Coq.Lists.List.length_order.lel_cons_cons	40	4.1.2	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0863859653473	12
Coq.Lists.List.length_order.lel_cons	40	0.1.2	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto).	0.0617151260376	6
Coq.Lists.List.length_order.lel_tail	40	0.1.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0620419979095	5
Coq.Lists.List.length_order.lel_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: auto).	0.036544084549	2
Coq.Lists.List.SetIncl.incl_tl	40	5.3	synth with cache (only 1: intros n m p; only 1: intuition).	0.07319688797	12
Coq.Lists.List.SetIncl.incl_tran	40	1	synth with cache (only 1: auto).	0.0387930870056	2
Coq.Lists.List.SetIncl.incl_appl	40	2	synth with cache (only 1: auto with datatypes).	0.0436029434204	3
Coq.Lists.List.SetIncl.incl_appr	40	1	synth with cache (only 1: auto with datatypes).	0.0396299362183	2
Coq.Lists.List.SetIncl.incl_cons	40	0.10.4.8.3	synth with cache (only 1: intros a b c Ha Hb; only 1: intro H0; only 1: firstorder; only 1: subst; only 1: auto).	6.78268408775	2992
Coq.Lists.List.SetIncl.incl_app	40	1.9	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.477279901505	94
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.11	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.379114151001	102
Coq.Lists.List.Cutting.firstn_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0506880283356	2
Coq.Lists.List.Cutting.firstn_all	40	0.4.1.0.0.17	synth with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.85085606575	662
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0	synth with cache (only 1: auto).	0.0386879444122	1
Coq.Lists.List.Cutting.firstn_le_length	40	0.4.5.2	synth with cache (only 1: intro H; only 1: revert n; only 1: fix le_div2 1; only 1: auto).	1.08218002319	268
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40	0.2.0.0.0.2.1.3	synth with cache (only 1: induction n; only 1: auto; only 1: intros [| a l] H; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	9.75317788124	1576
Coq.Lists.List.Cutting.firstn_app_2	40
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40	0.0.6.2.0.6	synth with cache (only 1: induction n; only 1: auto; only 1: induction l as [| a l IHl]; only 1: now rewrite ?firstn_nil; only 1: simpl; only 1: auto).	9.70117497444	2498
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0	synth with cache (only 1: auto).	0.0365009307861	1
Coq.Lists.List.Cutting.skipn_nil	40	0.0.0.1.5	synth with cache (only 1: symmetry; only 1: induction n; only 1: simpl; only 1: auto; only 1: now simpl).	0.173576831818	29
Coq.Lists.List.Cutting.skipn_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0502200126648	2
Coq.Lists.List.Cutting.skipn_none	40	0.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0858380794525	7
Coq.Lists.List.Cutting.skipn_all2	40	2.0.0.2.0.0.1.2.1	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: simpl; only 1: now destruct l; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: auto with arith).	10.4637238979	2319
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40	0.0.0.0.2.0.4	synth with cache (only 1: induction n; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.13536214828	252
Coq.Lists.List.Cutting.skipn_length	40	0.0.0.0.0.0.0.0.0.2.3	synth with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	9.17759203911	1689
Coq.Lists.List.Cutting.skipn_all	40	0.0.0.0.5	synth with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0938401222229	10
Coq.Lists.List.Cutting.skipn_app	40	0.0.1.2.0.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: simpl; only 1: auto; only 1: intros l1 l2; only 1: simpl; only 1: destruct l1 as [| x xs]; only 1: auto; only 1: simpl; only 1: auto).	6.02239012718	1073
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	2	synth with cache (only 1: now intros []).	0.0432410240173	3
Coq.Lists.List.Combining.combine_firstn_l	40	1.2.0.0.0.3.0.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	9.50690197945	2094
Coq.Lists.List.Combining.combine_firstn_r	40
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40	0.12.5.0.166	synth with cache (only 1: induction l1 as [| x1 l1]; only 1: simpl; only 1: left; only 1: right; only 1: auto).	18.1229269505	46897
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	3.0.3.0.4	synth with cache (only 1: induction 1; only 1: simpl; only 1: tauto; only 1: simpl; only 1: firstorder).	5.09772706032	1062
Coq.Lists.List.Add.Add_length	40	0.0.0.0.8	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.461490154266	93
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	1.3	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0580239295959	6
Coq.Lists.List.ReDun.NoDup_cons_iff	40	1.0.1.1	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0891609191895	7
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.seq_length	40	1.0.0.4.4	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto).	1.44620299339	386
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	2.2	synth with cache (only 1: intuition; only 1: inversion_clear H).	0.0744671821594	6
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	7.0.0.19.4	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: intuition).	8.75289511681	5480
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.3	synth with cache (only 1: inversion 1; only 1: auto).	0.0746231079102	12
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.2.4	synth with cache (only 1: intros a b l H; only 1: inversion H; only 1: auto).	0.455211877823	9
Coq.Lists.List.Exists_Forall.Exists_impl	40	13.0.8.9.2	synth with cache (only 1: intros f g H l; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now constructor).	12.2171990871	8996
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	0.1.0.0.0.0.0.0.0.2	synth with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	2.41662096977	302
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	0.1.1.2.2.5.1	synth with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	2.63441801071	1063
Coq.Lists.List.Forall2.Forall2_refl	40	0	synth with cache (only 1: auto).	0.0433402061462	1
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	0.1.0.19	synth with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto).	1.34457111359	439
Coq.Lists.List.Repeat.repeat_spec	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	6	synth with cache (only 1: firstorder).	0.134508132935	7
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	8.1.0.12	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intuition).	31.5158510208	6004
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	0.4.1.2.26	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	3.46844887733	1098
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	2.24.8.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	26.6373209953	10194
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	2	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.038614988327	3
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	2.0.4.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: intuition; only 1: eauto; only 1: eauto).	0.761291027069	179
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0524079799652	3
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	7.0.0.11.1	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: intuition).	5.49930214882	2377
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	3.7	synth with cache (only 1: intuition; only 1: inversion_clear H).	0.459003925323	119
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	10	synth with cache (only 1: inversion 1).	0.109977960587	32
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.0.2.0.1.2.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.807493925095	173
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	8	synth with cache (only 1: firstorder).	0.399620056152	97
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.18.3	synth with cache (only 1: intros; only 1: setoid_rewrite  <- H; only 1: auto).	6.19494700432	1350
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	1.1.1.1.11	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	3.73405313492	561
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.3.5	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.260374069214	52
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.0.0.9.4	synth with cache (only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: auto).	2.31933307648	605
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	4.4	synth with cache (only 1: rewrite !InA_cons; only 1: intuition).	0.158206939697	21
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.0.6.3	synth with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: constructor).	4.67726111412	92
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.1.10	synth with cache (only 1: intros H; only 1: rewrite !InA_cons; only 1: tauto).	0.384188890457	81
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	2.2.2.2.5	synth with cache (only 1: split; only 1: rewrite !InA_cons; only 1: tauto; only 1: rewrite !InA_cons; only 1: tauto).	3.73867201805	286
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.9	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).	1.36929416656	155
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	7.0.3.17	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: auto; only 1: eauto).	38.4146020412	4366
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.0.0.0	synth with cache (only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	0.0661289691925	4
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.1.1.0	synth with cache (only 1: simple induction l; only 1: auto; only 1: intros; only 1: auto).	0.0654950141907	6
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	0.5.2.0.0.9	synth with cache (only 1: induction l1; only 1: simpl; only 1: auto; only 1: constructor; only 1: inv; only 1: auto).	2.99805212021	906
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	0.0.0.0.11	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.80911207199	497
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	0.1.0.6.9	synth with cache (only 1: repeat red; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	4.79806900024	674
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.1.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0787041187286	6
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.0.6.0.3	synth with cache (only 1: induction 1; only 1: auto; only 1: apply eqlistA_rev_app; only 1: auto; only 1: intuition).	0.943571090698	314
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	3.0	synth with cache (only 1: decide equality; only 1: decide equality).	0.126994132996	12
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	synth with cache (only 1: trivial).	0.0309607982635	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.0290040969849	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0713720321655	6
Coq.NArith.BinNat.N.bi_induction	40	2.0.0.10.1	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply Pos.peano_ind; only 1: assumption; only 1: intros; only 1: now apply -> AS).	14.6105139256	2092
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	1	synth with cache (only 1: firstorder).	0.028281211853	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0453660488129	2
Coq.NArith.BinNat.N.two_succ	40	0	synth with cache (only 1: trivial).	0.0335519313812	1
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.0321838855743	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0432748794556	2
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0809540748596	6
Coq.NArith.BinNat.N.pos_pred_succ	40	0.4.7.1.17	synth with cache (only 1: destruct n; only 1: trivial; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	27.1489441395	5711
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: apply Pos.pred_N_succ).	0.0549049377441	3
Coq.NArith.BinNat.N.pred_sub	40	3.1.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p).	0.148308992386	15
Coq.NArith.BinNat.N.succ_0_discr	40	0.1.1	synth with cache (only 1: destruct n; only 1: discriminate; only 1: discriminate).	0.0518820285797	5
Coq.NArith.BinNat.N.add_0_l	40	1	synth with cache (only 1: now destruct n).	0.0328528881073	2
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	1	synth with cache (only 1: now destruct n).	0.0326859951019	2
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: reflexivity).	0.286640167236	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40	10.2.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	4.75425481796	1601
Coq.NArith.BinNat.N.leb_le	40	10.2.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	5.44646596909	1770
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	1.0.0.2.1.0	synth with cache (only 1: revert m; only 1: destruct m; only 1: split; only 1: trivial; only 1: trivial; only 1: reflexivity).	0.462283849716	76
Coq.NArith.BinNat.N.compare_le_iff	40	0.2.1.0	synth with cache (only 1: revert m; only 1: destruct m; only 1: reflexivity; only 1: reflexivity).	0.457175016403	71
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40	3.24.1	synth with cache (only 1: revert m; only 1: fix sqrtrem_spec 1; only 1: trivial).	26.7175500393	10888
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	1.0.0.2.1	synth with cache (only 1: unfold max, le; only 1: case compare; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.403728961945	73
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.0925478935242	3
Coq.NArith.BinNat.N.succ_double_spec	40	4	synth with cache (only 1: now destruct n).	0.106194019318	5
Coq.NArith.BinNat.N.double_add	40	1.0.0.1.0.1.1.4	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto).	16.5688021183	1953
Coq.NArith.BinNat.N.succ_double_add	40	0	synth with cache (only 1: now destruct n, m).	0.0430788993835	1
Coq.NArith.BinNat.N.double_mul	40	0.0.0.0.1.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.141760110855	9
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	1.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0655128955841	5
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.0358619689941	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intro H; only 1: auto).	2.84284901619	253
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.214951992035	28
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	2.71870398521	256
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intro H; only 1: easy).	0.204775094986	27
Coq.NArith.BinNat.N.compare_0_r	40	0.0.2.1	synth with cache (only 1: intro H; only 1: apply le_succ_l in H; only 1: apply le_succ_l in H; only 1: false_hyp H nlt_0_r).	0.0930922031403	13
Coq.NArith.BinNat.N.pow_0_r	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.0515630245209	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	19.0	synth with cache (only 1: intro; only 1: false_hyp H nlt_0_r).	5.86566996574	1406
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	4.0.0.0.0.7	synth with cache (only 1: destruct n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro H; only 1: now destruct p).	11.8570218086	1899
Coq.NArith.BinNat.N.size_gt	40	0.0.3.4.1.27	synth with cache (only 1: destruct n; only 1: apply lt_0_1; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	9.92931604385	2868
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	11	synth with cache (only 1: now destruct n).	0.587877988815	214
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.0	synth with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0830070972443	4
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0552909374237	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	0.136984825134	7
Coq.NArith.BinNat.N.gcd_divide_r	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite Pos.mul_comm).	0.133259057999	7
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	2	synth with cache (only 1: apply le_0_l).	0.908278942108	136
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	3	synth with cache (only 1: now destruct a).	0.0458071231842	4
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.1	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	1.62724804878	166
Coq.NArith.BinNat.N.testbit_neg_r	40	17	synth with cache (only 1: now induction n).	3.0272769928	746
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	synth with cache (only 1: trivial).	0.0508561134338	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	2.12.0	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: now rewrite <- ?succ_le_mono).	2.66188001633	624
Coq.NArith.BinNat.N.lt_gt	40	2	synth with cache (only 1: apply gt_lt_iff).	0.0767068862915	12
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40
Coq.NArith.BinNat.N.le_ge	40	2	synth with cache (only 1: apply ge_le_iff).	0.0755369663239	12
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.4.0.1.0.6	synth with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).	5.80768895149	825
Coq.NArith.Ndec.Peqb_complete	40	1	synth with cache (only 1: apply Pos.eqb_eq).	0.0530998706818	2
Coq.NArith.Ndec.Peqb_Pcompare	40	0.16	synth with cache (only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	1.50997400284	229
Coq.NArith.Ndec.Pcompare_Peqb	40	2	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0637199878693	3
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	1	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0636901855469	2
Coq.NArith.Ndec.Neqb_complete	40	10	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0996980667114	21
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	0.1.5.5	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros <-; only 1: now apply H).	3.16990995407	622
Coq.NArith.Ndec.Ndiv2_eq	40	2.5.1	synth with cache (only 1: intros Ha; only 1: eqb2eq; only 1: now subst).	0.178558826447	39
Coq.NArith.Ndec.Ndiv2_neq	40	1.1.0.0	synth with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.108434915543	6
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.3.1.5	synth with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	4.20185303688	628
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	2.3.3.23	synth with cache (only 1: rewrite !Nleb_Nle; only 1: intro LE; only 1: intro LT; only 1: N.order).	11.9553489685	4777
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.9.3.1.1.1	synth with cache (only 1: unfold Nleb; only 1: intros H; only 1: rewrite !N2Nat.inj_double; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	11.8772060871	4145
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	9	synth with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.169698953629	25
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40	9.1	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.165326118469	50
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40	6.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.28542304039	16
Coq.NArith.Ndec.Nmin_le_5	40	11.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	1.22562408447	264
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.0	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.124984025955	3
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.0.0.0.1	synth with cache (only 1: induction a as [| p]; only 1: intro; only 1: trivial; only 1: simpl; only 1: congruence).	0.129417896271	6
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	0.15.16	synth with cache (only 1: vm_compute; only 1: fix le_div2 1; only 1: auto).	13.5559029579	6692
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	4.1	synth with cache (only 1: simpl; only 1: now intros []).	0.0890579223633	11
Coq.NArith.Ndist.ni_min_O_r	40	0.0.5.1.0.0	synth with cache (only 1: simple induction d; only 1: reflexivity; only 1: simpl; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.861387968063	212
Coq.NArith.Ndist.ni_min_inf_l	40	0	synth with cache (only 1: reflexivity).	0.0499949455261	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.3	synth with cache (only 1: intro n; only 1: now destruct n).	0.0910160541534	12
Coq.NArith.Ndist.ni_le_refl	40	0.15.9	synth with cache (only 1: vm_compute; only 1: fix le_div2 1; only 1: auto).	3.61634302139	1642
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.4.4.1.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	3.90882611275	535
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40	2.15.11	synth with cache (only 1: intros a b; only 1: inversion 1; only 1: Nat.solve_min).	28.0529620647	10820
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.5.0.2	synth with cache (only 1: destruct a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	10.5945360661	1444
Coq.NArith.Ndigits.Nshiftr_nat_S	40	1	synth with cache (only 1: reflexivity).	0.0470261573792	2
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0464808940887	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.0	synth with cache (only 1: intros; only 1: now rewrite ?Pos.max_1_r, <- ?BinInt.Pos2Z.inj_max).	0.061381816864	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.045508146286	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	1.0.0.0.1.0.1.0.0.0	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: reflexivity; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	5.70103693008	872
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	6.1	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).	3.0233540535	345
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.1.0.0.0.0.0.1.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	4.2103497982	628
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	8.1	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite N.ldiff_spec).	7.61082100868	1051
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40
Coq.NArith.Ndigits.Ndouble_bit0	40	4.0	synth with cache (only 1: intros n; only 1: now destruct n).	0.0647120475769	6
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	4.3	synth with cache (only 1: intros; only 1: now destruct n).	0.067565202713	9
Coq.NArith.Ndigits.Ndiv2_double	40	0.3.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: discriminate; only 1: trivial; only 1: discriminate).	10.8860180378	1615
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.0.3.0.0.0.7.1.2.0	synth with cache (only 1: destruct n; only 1: intro; only 1: simpl; only 1: discriminate; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: tauto; only 1: discriminate; only 1: reflexivity).	23.2077128887	5208
Coq.NArith.Ndigits.Ndiv2_correct	40
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.3.1.2	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.123236894608	18
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	4.36612606049	320
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40	0.0.1.2.9.0.1.0.5	synth with cache (only 1: intros m; only 1: unfold Nless; only 1: destruct m; only 1: reflexivity; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).	13.6177380085	4740
Coq.NArith.Ndigits.N0_less_1	40	0.0.1.30.2	synth with cache (only 1: intros a Ha; only 1: destruct a as [| p]; only 1: discriminate; only 1: exists p; only 1: trivial).	9.47950005531	4226
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40	3.19.3	synth with cache (only 1: intros s1; only 1: fix even_spec 1; only 1: easy).	26.7000739574	10469
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.TestOrder.test	40	1	synth with cache (only 1: N.order).	0.112293958664	15
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	0.2.2.0.0.1.1	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: trivial).	1.70436286926	267
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.2.2.14	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	1.8189330101	405
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	1.1.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).	0.103588104248	8
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	3.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: nat2N).	0.752575159073	22
Coq.NArith.Nnat.Nat2N.inj_succ	40	0.0.0.2	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal).	0.0812020301819	6
Coq.NArith.Nnat.Nat2N.inj_pred	40	4.0.0.0	synth with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: nat2N).	0.337213993073	30
Coq.NArith.Nnat.Nat2N.inj_add	40
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	synth with cache (only 1: nat2N).	0.0594780445099	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0592160224915	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0540690422058	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.0586869716644	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.135170936584	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	7.11.3	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: destr_bool).	25.501595974	5386
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.042307138443	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').	0.071280002594	3
Coq.Strings.Ascii.ascii_N_embedding	40	2.11	synth with cache (only 1: fix le_div2 1; only 1: destr_bool).	4.45316982269	474
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.9.0	synth with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	5.02134203911	823
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	17	synth with cache (only 1: t_eqb).	1.5722990036	298
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0553240776062	1
Coq.Strings.String.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').	0.0887930393219	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40	1.8.10	synth with cache (only 1: unfold lt; only 1: fix le_div2 1; only 1: auto with arith).	6.34672188759	1597
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40	1.0.13	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: auto with arith).	3.43736195564	593
Coq.Strings.String.substring_correct2	40	0.15.0	synth with cache (only 1: intros x y z; only 1: fix le_div2 1; only 1: trivial).	6.45370197296	1280
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.6.6.1.0.0.25	synth with cache (only 1: elim s; only 1: reflexivity; only 1: simpl; only 1: intro; only 1: intros n'; only 1: intros ->; only 1: reflexivity).	31.1591620445	6318
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.047623872757	1
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	1	synth with cache (only 1: trivial).	0.051344871521	2
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.0580461025238	1
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	47	synth with cache (only 1: constructor).	1.12739396095	1131
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.148684978485	3
Coq.Reals.Ratan.pos_half_prf	40	0.0	synth with cache (only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.121721982956	2
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40	1.0.6.0	synth with cache (only 1: intro; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply Rle_0_sqr).	0.758693933487	97
Coq.Reals.Ratan.pow2_abs	40	0.0.0.1.0.0.1.0	synth with cache (only 1: intro; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: intro; only 1: simpl; only 1: ring; only 1: intro; only 1: reflexivity).	0.239212989807	10
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	0.0.13	synth with cache (only 1: unfold Rdiv; only 1: intros; only 1: lra).	4.50247192383	590
Coq.Reals.Ratan.pos_opp_lt	40
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.0.0.4.2	synth with cache (only 1: intros; only 1: inversion H; only 1: simpl; only 1: trivial; only 1: trivial).	0.7616147995	109
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40	0.2.9	synth with cache (only 1: vm_compute; only 1: fix even_odd_double 1; only 1: auto).	2.43206119537	223
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40	3.16	synth with cache (only 1: fix even_equiv 1; only 1: auto).	10.6059379578	2756
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40	8.18	synth with cache (only 1: fix even_equiv 1; only 1: tauto).	18.6042268276	6639
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	3.1.0.0.0.1	synth with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	1.56630921364	164
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	1.2.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.11650800705	7
Coq.Reals.RList.RList_P22	40	0.2.6.0	synth with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: reflexivity).	3.0923409462	268
Coq.Reals.RList.RList_P23	40	3.0.0.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.158564090729	9
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	4.1.0.0.0.0.0.0.0.1	synth with cache (only 1: intros s1; only 1: elim s1; only 1: simpl; only 1: intros s2 n H; only 1: inversion H; only 1: simpl; only 1: intros a s1' Rec s2 n; only 1: case n; only 1: auto; only 1: auto with arith).	19.6227829456	2104
Coq.Reals.RList.RList_P27	40	1.3.0.4.2.15	synth with cache (only 1: intros l m n; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	26.4996979237	5713
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.1.2.0	synth with cache (only 1: intros a Ha; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.15264582634	7
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.1	synth with cache (only 1: intros low high k H1 H2; only 1: rewrite (sigma_split H1 H2); only 1: ring).	1.19736981392	125
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	3.0.2.0.3.14.1	synth with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: trivial; only 1: trivial).	9.37682890892	3594
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	2.2.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (Rtotal_order r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).	4.46384191513	366
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	1.0.1.8.0.0	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: intuition; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: trivial; only 1: trivial).	6.14902591705	1179
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	2.2.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with qarith; only 1: intro H1; only 1: auto with real).	2.5307469368	249
Coq.Reals.Rbasic_fun.Rmin_left	40	4.0.3.16.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto with real).	23.954529047	4869
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto).	0.109412908554	6
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.145942211151	6
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	2.1.1.0.2.1.0	synth with cache (only 1: intros x y; only 1: intro H1; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: auto with arith).	33.401679039	2640
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.2.3.7	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: trivial; only 1: assumption).	8.13107013702	944
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.187082052231	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.158729076385	6
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.192707061768	9
Coq.Reals.Rbasic_fun.Rmax_left	40
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.110785007477	6
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.139885902405	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.7	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: auto; only 1: auto).	3.08542585373	217
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.165281057358	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0.0.6.0	synth with cache (only 1: intros x y; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intro H1; only 1: auto with real).	15.583176136	1753
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.2.0.1.0.2.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	16.2433810234	1321
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.4.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.92884492874	143
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	3.0.0.0.0.0.3.11.0	synth with cache (only 1: split; only 1: red; only 1: vm_compute; only 1: intros x abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: red; only 1: eauto using Rlt_trans with rorders).	3.44379401207	1086
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0.0.1.0	synth with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: auto).	0.112389802933	5
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	7.0	synth with cache (only 1: intros n m; only 1: intuition).	0.0902969837189	9
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	1.0.4.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real).	0.214107036591	31
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	1.2818338871	237
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	1.85181212425	240
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0	synth with cache (only 1: reflexivity).	0.116297006607	1
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40	1.0.0.13.10.1	synth with cache (only 1: intro f; only 1: intros z n H; only 1: elim H; only 1: intros; only 1: simpl; only 1: ring).	33.7432570457	8177
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.11.4	synth with cache (only 1: intros a b c d; only 1: inversion 1; only 1: auto).	6.04708313942	834
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	1.13	synth with cache (only 1: fix even_equiv 1; only 1: auto with arith).	3.02126097679	314
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	2.1	synth with cache (only 1: intros n m H; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.39061498642	15
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40	0.19.5.7	synth with cache (only 1: unfold not; only 1: intro; only 1: fix even_equiv 1; only 1: congruence).	29.7025289536	14614
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0780730247498	2
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0	synth with cache (only 1: intro n; only 1: trivial).	0.0844330787659	2
Coq.Reals.Rfunctions.pow_1	40	6.1	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.170382976532	18
Coq.Reals.Rfunctions.pow_add	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.189831972122	9
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40	0.19.6	synth with cache (only 1: intros n m; only 1: fix odd_equiv 1; only 1: trivial).	16.3527328968	4519
Coq.Reals.Rfunctions.tech_pow_Rmult	40	2.1.0	synth with cache (only 1: intros n m; only 1: simpl; only 1: reflexivity).	0.098916053772	6
Coq.Reals.Rfunctions.tech_pow_Rplus	40
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	3.2.0.1.0.0.0.0.3.3	synth with cache (only 1: intro n; only 1: case n; only 1: intro H; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: intro H; only 1: simpl; only 1: intros; only 1: auto with real).	38.0791170597	8730
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.231058835983	9
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40	0.1.10.4	synth with cache (only 1: intros a H; only 1: fix odd_equiv 1; only 1: intros; only 1: auto).	25.3283069134	3709
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.1.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring; only 1: now Nat.nzsimpl').	7.20532107353	659
Coq.Reals.Rfunctions.pow_Rabs	40	2.7.0	synth with cache (only 1: intro; only 1: fix odd_equiv 1; only 1: auto).	17.3954610825	1423
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	5.1	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.663506031036	39
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0.0	synth with cache (only 1: intro; only 1: reflexivity).	0.103054046631	2
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	1.0.3	synth with cache (only 1: simpl; only 1: intros; only 1: ring).	0.232289075851	31
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	0.1.0.1.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.282379865646	10
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.231890916824	8
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	0.3.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).	0.164043903351	9
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40	1.9.3.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: field; only 1: fix even_odd_double 1; only 1: trivial).	24.5294041634	3279
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40	1.8.2	synth with cache (only 1: intros Un X; only 1: fix gcd_divide 1; only 1: auto).	7.85870504379	1120
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.144234895706	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_double).	0.622872829437	67
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_succ_double).	0.444811105728	59
Coq.Reals.Exp_prop.div2_not_R0	40	1.1.4.0.1.0.2.7	synth with cache (only 1: intro n; only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	28.8307878971	5453
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	0.0.1.1.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto).	0.162284851074	7
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	0.1.0.0.0.3.0.0.2.2	synth with cache (only 1: unfold limit1_in, limit_in, Dgf; only 1: intros; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	17.7661678791	1800
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.2.0	synth with cache (only 1: intros; only 1: unfold Rdiv; only 1: field; only 1: now split).	0.161639928818	6
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	5.4	synth with cache (only 1: unfold D_in; only 1: firstorder).	1.39446616173	154
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	0.1.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: destruct H; only 1: auto).	0.117614030838	7
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	0.2.1.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: auto).	0.11776304245	9
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	4.0	synth with cache (only 1: intros; only 1: now left || now right).	0.0660350322723	6
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intros; only 1: right; only 1: reflexivity).	0.0726010799408	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.1	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.137819051743	17
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.2.0.0.10	synth with cache (only 1: unfold not; only 1: intros x y z; only 1: intro H; only 1: destruct H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	5.75069308281	1325
Coq.Reals.RIneq.Rgt_not_eq	40	0.0.0.1.0.1.0	synth with cache (only 1: red; only 1: intros x y z; only 1: intro H; only 1: destruct H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.289389133453	47
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	0.0.0.2.0.0.0.1.3	synth with cache (only 1: intros x y [H| H] abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	19.8162961006	3255
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	2.0.0.0.2	synth with cache (only 1: intros x y; only 1: destruct (total_order_T x y); only 1: intuition; only 1: right; only 1: intuition).	0.55739402771	48
Coq.Reals.RIneq.Rdichotomy	40	2.4.8.0	synth with cache (only 1: intros x y H; only 1: destruct (total_order_T x y); only 1: intuition; only 1: intuition).	7.14490580559	1430
Coq.Reals.RIneq.Rlt_le	40	0.3.2	synth with cache (only 1: intros a b H; only 1: red; only 1: auto).	0.127366065979	23
Coq.Reals.RIneq.Rgt_ge	40	0.1.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.0774369239807	4
Coq.Reals.RIneq.Rle_ge	40	0.6.0.0.11	synth with cache (only 1: induction 1; only 1: red; only 1: tauto; only 1: red; only 1: auto).	20.7103960514	4086
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.1	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.248342990875	42
Coq.Reals.RIneq.Rlt_gt	40	1.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0686659812927	4
Coq.Reals.RIneq.Rgt_lt	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0543961524963	2
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.1.0.1	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	0.156208992004	29
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.159250974655	29
Coq.Reals.RIneq.Rnot_lt_le	40	1.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).	0.449677944183	29
Coq.Reals.RIneq.Rnot_gt_le	40	0.0.0.0.1.1	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.374826192856	53
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.0.0.1.2.1	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real; only 1: contradiction).	2.90844202042	188
Coq.Reals.RIneq.Rnot_lt_ge	40	2.3.1	synth with cache (only 1: intros r1 r2; only 1: intro abs; only 1: eauto using Rnot_lt_le with rorders).	1.81705403328	52
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.1	synth with cache (only 1: intros; only 1: auto with real).	0.128095149994	24
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.129400014877	17
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.129192113876	16
Coq.Reals.RIneq.Rge_not_lt	40	0.0.2.1.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.180787086487	20
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.2	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.126439809799	16
Coq.Reals.RIneq.Rge_not_gt	40	0.0.4	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.262362003326	37
Coq.Reals.RIneq.Req_le	40	0.0.6	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0763430595398	9
Coq.Reals.RIneq.Req_ge	40	0.0.6	synth with cache (only 1: intros * ->; only 1: right; only 1: reflexivity).	0.075611114502	9
Coq.Reals.RIneq.Req_le_sym	40	1.0	synth with cache (only 1: unfold Rle; only 1: auto with *).	0.0565390586853	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.0560238361359	3
Coq.Reals.RIneq.Rgt_asym	40	1.1.1	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition try easy).	0.10733795166	16
Coq.Reals.RIneq.Rle_antisym	40	0.0.1.7.0.12	synth with cache (only 1: unfold Rle; only 1: intuition; only 1: exfalso; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	19.5586481094	5064
Coq.Reals.RIneq.Rge_antisym	40	1.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.099907875061	14
Coq.Reals.RIneq.Rle_le_eq	40	2.0	synth with cache (only 1: intros; only 1: intuition).	0.245090007782	18
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0502569675446	1
Coq.Reals.RIneq.Rlt_eq_compat	40	0.7.10	synth with cache (only 1: intros a b c Ha Hb Hc EQ; only 1: subst; only 1: trivial).	3.59537816048	660
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0964360237122	5
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40	0.0.2	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.227024078369	33
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.1	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0996642112732	13
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.5.4.7	synth with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).	8.10681200027	1214
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.121771097183	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	1.70669007301	40
Coq.Reals.RIneq.Rge_dec	40	0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	1.77235293388	40
Coq.Reals.RIneq.Rlt_le_dec	40	0.3.4	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.399616003036	16
Coq.Reals.RIneq.Rgt_ge_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.106626987457	3
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.286000013351	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.213155984879	29
Coq.Reals.RIneq.Rlt_or_le	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.120985031128	13
Coq.Reals.RIneq.Rgt_or_ge	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	1.40398216248	40
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.292082071304	38
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.222351789474	30
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	2.5.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).	2.19767999649	76
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.2.0.0.0	synth with cache (only 1: intro; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	1.74919199944	26
Coq.Reals.RIneq.Rplus_ne	40	0.0.0.1.2.1	synth with cache (only 1: intro; only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	2.02601099014	18
Coq.Reals.RIneq.Rplus_opp_l	40	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	2.27603006363	7
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	4.1	synth with cache (only 1: intros; only 1: now subst).	1.53093385696	35
Coq.Reals.RIneq.Rplus_eq_compat_r	40	5.0	synth with cache (only 1: intros r r1 r2; only 1: congruence).	1.42212104797	7
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.0.1.1.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.11101603508	7
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	0.0.1.1.0.0.0.0.0.0.5.2	synth with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real; only 1: split; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: assumption; only 1: auto with real).	24.211712122	3759
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	2.39029502869	48
Coq.Reals.RIneq.Rinv_r_sym	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	2.30064702034	43
Coq.Reals.RIneq.Rmult_0_r	40	1.1	synth with cache (only 1: intros; only 1: ring).	0.15207195282	12
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0723929405212	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.1.0.0.0	synth with cache (only 1: split; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	1.52726101875	8
Coq.Reals.RIneq.Rmult_1_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0673780441284	2
Coq.Reals.RIneq.Rmult_eq_compat_l	40	1.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0622811317444	3
Coq.Reals.RIneq.Rmult_eq_compat_r	40	6.1	synth with cache (only 1: intros r r1 r2; only 1: congruence).	1.36684203148	11
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0833480358124	3
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0453720092773	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	2.0.1	synth with cache (only 1: intros n m; only 1: intro H; only 1: intuition).	0.160310029984	21
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0.0.0.3.0	synth with cache (only 1: intros r1 r2 H; only 1: intuition; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.451175928116	27
Coq.Reals.RIneq.Rmult_plus_distr_r	40	9.0	synth with cache (only 1: intros; only 1: ring).	20.3399209976	317
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	synth with cache (only 1: auto with *).	0.0437159538269	1
Coq.Reals.RIneq.Ropp_0	40	4	synth with cache (only 1: ring).	0.0565268993378	5
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.6.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.381793022156	72
Coq.Reals.RIneq.Ropp_involutive	40	4.0	synth with cache (only 1: intros z; only 1: ring).	0.0626978874207	6
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	10.3	synth with cache (only 1: intros a b; only 1: ring).	5.95071792603	349
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.3	synth with cache (only 1: intros; only 1: ring).	0.0901629924774	12
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0711319446564	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.098993062973	16
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.185615062714	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0699419975281	2
Coq.Reals.RIneq.Rminus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0646867752075	2
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro n; only 1: ring).	0.0681829452515	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0708708763123	2
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0704469680786	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.4.5	synth with cache (only 1: intros n m H; only 1: subst; only 1: ring).	2.35705184937	216
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	1.2	synth with cache (only 1: intros; only 1: ring).	0.627745866776	29
Coq.Reals.RIneq.Rminus_eq_contra	40	3.0.1.3	synth with cache (only 1: red; only 1: intros; only 1: apply H; only 1: auto with real).	0.534752130508	95
Coq.Reals.RIneq.Rminus_not_eq	40	0.1.0.1	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.244034051895	24
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0978980064392	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	2.02373600006	17
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.1.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.438343048096	50
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0785911083221	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.8.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	1.1148481369	148
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.1.5.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	1.13826107979	92
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.1.9.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	9.87207007408	1107
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	3.4	synth with cache (only 1: intros p q H H0; only 1: auto with *).	0.369635105133	24
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.314407110214	54
Coq.Reals.RIneq.Rplus_le_compat_l	40	0.0.1.0.13	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2; only 1: auto with real; only 1: auto with real).	6.86720299721	913
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40	1.0.1.2.0	synth with cache (only 1: unfold Rle; only 1: intros x x' y y'; only 1: intuition; only 1: elim H; only 1: auto).	2.4331870079	152
Coq.Reals.RIneq.Rplus_ge_compat_r	40	3.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.304958105087	53
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.103075027466	5
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.4.2	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.244509935379	18
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.3.3	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.217086791992	15
Coq.Reals.RIneq.Rplus_lt_0_compat	40	2.8.2.7.0	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: intuition).	9.95532298088	2217
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	1.1.0.0	synth with cache (only 1: intros n m p q; only 1: intros; only 1: generalize (Rlt_le_dec m q); only 1: intuition).	0.113039970398	6
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	2.3	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).	0.149178028107	27
Coq.Reals.RIneq.Ropp_lt_contravar	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.192227840424	11
Coq.Reals.RIneq.Ropp_gt_contravar	40	1	synth with cache (only 1: auto with real).	2.55985784531	100
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.0.0.11.2	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	27.2829079628	1955
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.0	synth with cache (only 1: unfold Rge; only 1: intuition).	0.0760059356689	2
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0.1.0.1	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: auto with real; only 1: intro; only 1: auto with real).	0.522719860077	9
Coq.Reals.RIneq.Ropp_ge_contravar	40	1.0.1	synth with cache (only 1: unfold Rge; only 1: intros; only 1: intuition).	0.131704092026	5
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.117375850677	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.11026096344	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.105854988098	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.104443073273	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.102974176407	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0897271633148	4
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.1.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.201674938202	27
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0910840034485	4
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1.7	synth with cache (only 1: intros A P H p q; only 1: firstorder).	0.312013149261	59
Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.8	synth with cache (only 1: intros A P H p q; only 1: firstorder).	0.598453998566	77
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	1.13	synth with cache (only 1: intros A P H p q; only 1: firstorder).	4.80006885529	865
Coq.Reals.RIneq.Rmult_ge_compat_r	40	1.12	synth with cache (only 1: intros A P H p q; only 1: firstorder).	9.44206094742	1009
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	10.1.11	synth with cache (only 1: intros a b q Ha Hb H; only 1: intros Hnm Hpq; only 1: intuition).	13.8150880337	3473
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.2.0	synth with cache (only 1: intros r r1 r2 H H0; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.239853143692	36
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.4.3.9.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	6.39813399315	1009
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	5.0.0.1	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	2.11450099945	92
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.117128133774	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	2.0.3	synth with cache (only 1: unfold Rle; only 1: intros; only 1: intuition).	2.7108631134	71
Coq.Reals.RIneq.Rge_minus	40	0.0.0.8.1.0.6	synth with cache (only 1: unfold Rge; only 1: intros; only 1: intuition; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	34.3034949303	3680
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring).	0.174023866653	7
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0957109928131	4
Coq.Reals.RIneq.Rle_0_1	40	0.1.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.179692029953	22
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: ring; only 1: auto with real).	13.0181539059	984
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	16.0	synth with cache (only 1: intro; only 1: apply Rlt_n_Sn).	12.0041120052	1477
Coq.Reals.RIneq.tech_Rgt_minus	40	1.0.0.0.3.6	synth with cache (only 1: intros x y; only 1: intros; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: auto with real).	13.5038380623	1555
Coq.Reals.RIneq.S_INR	40	1.1.1.2.1	synth with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: field; only 1: auto).	0.837668895721	108
Coq.Reals.RIneq.S_O_plus_INR	40	2.0.2.4.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: destruct n; only 1: auto with real; only 1: simpl; only 1: auto with real).	4.82271289825	731
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40	1.1.2.2.1.1.4.7	synth with cache (only 1: intro n; only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	35.9901840687	8980
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	1.0.3.10	synth with cache (only 1: unfold Rle; only 1: induction 1; only 1: now right; only 1: intuition).	8.3147418499	2376
Coq.Reals.RIneq.INR_not_0	40	0.0.0.0.2	synth with cache (only 1: intro n; only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: now apply H).	0.243130207062	54
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	1.0.0.38	synth with cache (only 1: intros x H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	21.9561679363	13345
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.16.1.2.1	synth with cache (only 1: red; only 1: intros; only 1: apply H; only 1: apply eq_IZR; only 1: auto with zarith real).	25.3796889782	8589
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.569558858871	99
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0711641311646	2
Coq.Reals.RIneq.double_var	40	25.1	synth with cache (only 1: intros; only 1: field).	23.2767448425	3885
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.2.2	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.229828834534	26
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40	3.4.7	synth with cache (only 1: intros x y z; only 1: unfold Rdiv; only 1: ring).	3.62197208405	701
Coq.Reals.RIneq.Rdiv_minus_distr	40	2.4.10	synth with cache (only 1: intros x y z; only 1: unfold Rdiv; only 1: ring).	3.14163780212	853
Coq.Reals.RIneq.Req_EM_T	40	0.0.1.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.10095500946	7
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40	0.0.2.5.0.42.20	synth with cache (only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	17.0143470764	21716
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	1.0.4.16	synth with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: intro H; only 1: auto).	19.2372260094	6457
Coq.Reals.ArithProp.le_double	40	13.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).	3.51418280602	970
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	4.1.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: simpl; only 1: auto with arith).	0.112453937531	10
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.0.1.0.0	synth with cache (only 1: intro; only 1: apply Rinv_0_lt_compat; only 1: case n; only 1: auto with real; only 1: auto with arith real).	0.213392972946	6
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	0	synth with cache (only 1: reflexivity).	0.110872030258	1
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.110366821289	2
Coq.Reals.Ranalysis2.quadruple_var	40	1.3	synth with cache (only 1: intro; only 1: field).	0.121654033661	6
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4.0.0.1	synth with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: auto).	0.15306687355	13
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	3.2.3.9.0	synth with cache (only 1: intros x y z; only 1: intros; only 1: intro abs; only 1: intros A *; only 1: auto).	12.6551558971	2209
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	0.8.11.5	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros A x P H y H0; only 1: unfold neighbourhood; only 1: firstorder).	22.7333180904	6454
Coq.Reals.Rtopology.open_set_P2	40	2.5.5	synth with cache (only 1: intros Ext A a; only 1: intro; only 1: firstorder).	1.82538199425	277
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	4.3	synth with cache (only 1: intros P H; only 1: elim H).	0.114365816116	9
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40	11.0.10	synth with cache (only 1: intros P Q H p q; only 1: simpl; only 1: firstorder).	12.9004559517	3129
Coq.Reals.Rtopology.open_set_P6	40	7.1.2.2	synth with cache (only 1: unfold open_set; only 1: intros Ext A B Equiv; only 1: intros; only 1: firstorder).	5.81060409546	1027
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	2.3.21	synth with cache (only 1: intros P allnot exP; only 1: red; only 1: firstorder).	9.45423007011	3114
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40	1.18	synth with cache (only 1: intros r z x [H1 H2] [H3 H4]; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	7.17960000038	2069
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40	0.11.2	synth with cache (only 1: intro n; only 1: unfold EUn; only 1: now exists n).	1.97507500648	478
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	3.0.2.2.0	synth with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: auto with arith).	5.0566239357	320
Coq.Reals.Rseries.Un_growing_shift	40	3.1.0.2	synth with cache (only 1: intros; only 1: intro; only 1: simpl; only 1: auto with arith).	0.176445007324	19
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	0.8.5.2	synth with cache (only 1: unfold increasing, decreasing, opp_fct; only 1: intros P H; only 1: red; only 1: auto with real).	3.83890295029	616
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.1.0.1.1.0	synth with cache (only 1: unfold continuity_pt, plus_fct; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	0.157605171204	9
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	0	synth with cache (only 1: reflexivity).	0.0646409988403	1
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40	3.5.2.1.0.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	16.9697568417	3126
Coq.Reals.Ranalysis1.continuity_mult	40	3.2.0.8.0.0.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, mult_fct; only 1: unfold continue_in; only 1: intros a b c Hb Hc; only 1: apply limit_mul; only 1: auto; only 1: auto).	33.53967309	5978
Coq.Reals.Ranalysis1.continuity_const	40	0.0.0.0.0.0.0.0.0.0.1.2.1.1.0.1	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: unfold continue_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	31.0149309635	7016
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	1.0.4.10	synth with cache (only 1: intros n m p Hp; only 1: apply continuity_pt_inv; only 1: trivial; only 1: trivial).	3.21263980865	874
Coq.Reals.Ranalysis1.continuity_div	40	3.3.1.3.0.0.0.4	synth with cache (only 1: unfold continuity; only 1: intros; only 1: rewrite (div_eq_inv f1 f2); only 1: apply continuity_pt_mult; only 1: trivial; only 1: apply continuity_pt_inv; only 1: trivial; only 1: auto with real).	6.78778910637	1775
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.2.0.0.0.0.1	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: symmetry; only 1: assumption).	1.14096999168	125
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.137266159058	6
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	6.12.1	synth with cache (only 1: intros z n H; only 1: inversion H; only 1: eauto).	2.59516406059	905
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	1.0.0.3.8	synth with cache (only 1: intro f; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	4.29342317581	562
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.21	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	3.25027680397	759
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.140377998352	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	1.12.2	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	3.63048195839	469
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.18.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	25.4819049835	3905
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.4	synth with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.407541036606	47
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	0.0.1.0.0.0.0.1.0.0.2.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	2.98628091812	612
Coq.Reals.SeqProp.Wn_decreasing	40	4.6.1.1	synth with cache (only 1: intros xn cau; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix le_div2 1; only 1: auto).	6.75870704651	1078
Coq.Reals.SeqProp.Vn_growing	40	4.0.6.2.1	synth with cache (only 1: intros xn cau; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix le_div2 1; only 1: intro; only 1: auto).	8.32759094238	1736
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0673789978027	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	1.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	1.23325490952	21
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.126335144043	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.183823108673	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	4.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	8.2177798748	700
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.5	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup; only 1: apply PI_RGT_0).	1.71839380264	131
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	1.10	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.356688022614	69
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	0.10	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.914294958115	62
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40	0.0.0.5.4.2.2	synth with cache (only 1: intros z; only 1: unfold toRad, toDeg; only 1: field; only 1: split; only 1: apply PI_neq0; only 1: unfold plat; only 1: now apply not_0_IZR).	14.8302731514	2395
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	2.03523397446	201
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.2.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.37575006485	24
Coq.Reals.Ranalysis4.derivable_cosh	40	0.2.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.451247930527	27
Coq.Reals.Ranalysis4.derivable_sinh	40	0.2.1.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.629771947861	20
Coq.Reals.Ranalysis4.derive_pt_exp	40	2.0.0.2.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: pose proof derivable_pt_lim_exp_0 as H0; only 1: unfold derivable_pt_lim in H0; only 1: apply derivable_pt_lim_exp).	0.271567106247	13
Coq.Reals.Ranalysis4.derive_pt_cosh	40	2.0.1	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	2.37855195999	63
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.1	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	2.2372200489	65
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	1.16844010353	21
Coq.Reals.DiscrR.IZR_eq	40	0.1.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.904005050659	5
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.2.1	synth with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	1.91969490051	49
Coq.Reals.ConstructiveReals.CReq_sym	40	6.1	synth with cache (only 1: intros; only 1: firstorder).	2.10505700111	69
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40	0.5.5.0.9	synth with cache (only 1: intros n m p H1 H2; only 1: intro H; only 1: case H2; only 1: apply CRplus_lt_reg_l in H; only 1: trivial).	36.3500571251	4951
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	0.3.1.0.0	synth with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.220340013504	19
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40	16.7.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply lt_CR_of_Q in abs; only 1: contradict H; only 1: auto with *).	17.3668968678	4548
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	5.5	synth with cache (only 1: intro n; only 1: firstorder).	1.5075070858	78
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	18	synth with cache (only 1: auto).	3.14907002449	1050
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	6	synth with cache (only 1: apply CReal_isRingExt).	20.0979039669	268
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	3	synth with cache (only 1: apply CReal_isRingExt).	17.3373291492	257
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.0.2	synth with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	22.2184259892	162
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	4.5.0	synth with cache (only 1: intros; only 1: ring_simplify; only 1: reflexivity).	6.21175479889	214
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0906791687012	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	2.2	synth with cache (only 1: intro r; only 1: ring).	2.90987801552	184
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	8.0	synth with cache (only 1: intros x y; only 1: ring).	1.38445305824	26
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.100250959396	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	1.2.0	synth with cache (only 1: intros [xn limx]; only 1: intros k p q H H0; only 1: auto with arith).	0.297931909561	34
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	12	synth with cache (only 1: trivial).	0.747267961502	130
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.11577796936	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40	7.1	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.390575170517	10
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0974259376526	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	2.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0878469944	4
Coq.Reals.R_sqr.Rsqr_1	40	0.1	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0999369621277	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	1.0.1.3.0.0	synth with cache (only 1: intros; only 1: destruct (Rabs_pos x) as [| Heq]; only 1: auto with real; only 1: apply Rabs_no_R0 in H; only 1: symmetry in Heq; only 1: contradiction).	1.01497387886	117
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	0.0.0.19	synth with cache (only 1: intros r H; only 1: elim (Rmult_integral r r H); only 1: trivial; only 1: trivial).	12.0476789474	2975
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.4	synth with cache (only 1: intros x y; only 1: ring_Rsqr).	0.139348983765	15
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0934219360352	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	1.0.2.8.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: auto with real).	10.0112740993	1353
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	0.0.1.0.1.2.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: destruct (Rcase_abs (y - x)) as [Hlt'| Hge']; only 1: auto with real; only 1: auto with real).	4.18909287453	253
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.1.20.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: trivial).	18.7025251389	4015
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	1.0.0.19	synth with cache (only 1: intros x H1; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	4.97155308723	1670
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.2.3.2.0.0.28	synth with cache (only 1: intro; only 1: intros B; only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: CRelationClasses.reduce; only 1: apply existT with x; only 1: apply H).	25.0700089931	8707
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40	7.20	synth with cache (only 1: fix even_odd_double 1; only 1: intuition).	35.9490389824	5908
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40	0.0.0.0.0.0.0.0.0.3.3	synth with cache (only 1: intro; only 1: intro n; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (2 * S n)%nat with (S (S (2 * n))); only 1: replace (x ^ S (S (2 * n))) with (x * x * x ^ (2 * n)); only 1: rewrite Hrecn; only 1: reflexivity; only 1: simpl; only 1: ring; only 1: ring).	15.6872961521	1985
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	4.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim H; only 1: clear H; only 1: intro; only 1: intro; only 1: apply derivable_pt_id).	0.24215221405	10
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	5.2.1	synth with cache (only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g g_wf; only 1: intros; only 1: intuition).	1.67795681953	127
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	9.1.0	synth with cache (only 1: intros; only 1: unfold Rdiv; only 1: lra).	6.21829295158	632
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40	5.0.8.10.1	synth with cache (only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	10.0149030685	2766
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40	3.21.1	synth with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: auto).	30.2923808098	4763
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.104756116867	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.104072093964	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.103747844696	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.10377907753	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.144439935684	6
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.133027076721	4
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.129548072815	4
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.0.0.0.0	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.156634092331	5
Coq.Reals.Rlimit.eps4	40
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	synth with cache (only 1: intros a Ha; only 1: lra).	0.0999419689178	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	3.0	synth with cache (only 1: intros; only 1: lra).	0.103758811951	5
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.0.1.2.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).	0.279678821564	23
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40	0.0.0.0.0.7.0.7	synth with cache (only 1: intros x y H _; only 1: intros; only 1: subst; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	31.5328600407	4567
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.196616888046	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.280404090881	7
Coq.Reals.R_sqrt.sqrt_pow2	40	0.1.1.3.1	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: trivial).	0.701714992523	95
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.196470975876	7
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.0.0.0.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	1.87277388573	160
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	1.0.5.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	0.197603940964	21
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	1.1.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	0.319725036621	22
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.343608140945	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	4.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: field).	1.7204349041	7
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40	0.0.0.12	synth with cache (only 1: apply Rgt_not_eq; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	4.45012021065	462
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.0.0.1.1.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	3.75293397903	232
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).	0.217449903488	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: ring_Rsqr).	0.169444084167	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	0.0.0.4.0	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.190191984177	9
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.7.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.76851606369	93
Coq.Reals.Rtrigo1.PI2_RGT_0	40
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.0.6.3	synth with cache (only 1: destruct pi2_int; only 1: prove_sup; only 1: lra; only 1: lra).	4.16761779785	328
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	2.1.3.0	synth with cache (only 1: unfold Rdiv; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.472527980804	29
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.347383975983	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	12.7347099781	710
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0	synth with cache (only 1: reflexivity).	2.05080986023	1
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	0.3.1.0.0	synth with cache (only 1: intros Un pr; only 1: unfold Un_cv; only 1: unfold R_dist; only 1: intros; only 1: auto).	0.16034412384	9
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	2.13.0.0.10.4	synth with cache (only 1: intros x y n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: ring).	29.3870871067	11290
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.203824996948	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	1.0.2.0.0.0.0.2.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	7.19961500168	823
Coq.Reals.PartSum.Rabs_triang_gen	40	0.0.1.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	6.06769895554	620
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	3.1.2.7	synth with cache (only 1: intros n; only 1: red; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	6.94646501541	886
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40	1.14.26	synth with cache (only 1: intros n m; only 1: fix le_div2 1; only 1: trivial).	38.290815115	12580
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	10.6	synth with cache (only 1: intros [xn xd] [yn yd] H; only 1: firstorder).	9.14456295967	1728
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.9	synth with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.183192968369	72
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.11.0.11.8	synth with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	9.25934505463	4388
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	0.0.0.5	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: auto; only 1: auto).	1.80456495285	49
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	10	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.452015161514	69
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	0.12.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: now rewrite H).	1.39928388596	270
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	4.99704194069	656
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	4	synth with cache (only 1: trivial).	0.0571551322937	5
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	1.7.11.0	synth with cache (only 1: simpl; only 1: intros (n, d); only 1: destruct y; only 1: auto).	10.086414814	1341
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	7	synth with cache (only 1: assumption).	0.0559740066528	8
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	1.0.0.7	synth with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).	2.67889714241	299
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40	2.0.22	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros (x1, x2); only 1: auto).	30.6286408901	6069
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	0.1.2.0.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	0.367308139801	10
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	7.63498497009	754
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	synth with cache (only 1: reflexivity).	0.0646669864655	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.1.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.232362985611	12
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.1.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.222447872162	12
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	1.3.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	0.246979951859	14
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.2.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.343986988068	18
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	0.0.0	synth with cache (only 1: split; only 1: eauto with real; only 1: eauto with real).	0.168981075287	3
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_def.pow_2_n_growing	40	1.1.8.12.6	synth with cache (only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: intros a; only 1: trivial).	4.6979470253	2172
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	1.6740219593	234
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0	synth with cache (only 1: auto).	0.0691268444061	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0	synth with cache (only 1: auto).	0.0648880004883	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.2	synth with cache (only 1: unfold create; only 1: auto).	0.125638008118	12
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0	synth with cache (only 1: reflexivity).	0.0679111480713	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.0.4	synth with cache (only 1: induction m; only 1: reflexivity; only 1: auto).	0.143139839172	13
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.2	synth with cache (only 1: destruct m; only 1: reflexivity; only 1: auto).	0.122792005539	5
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	0.7.2.15.2	synth with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intuition; only 1: red; only 1: auto).	8.15206098557	4007
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	0.8.4.1	synth with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).	1.63674402237	423
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40	1.24.1	synth with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	2.69821119308	1510
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40	2	synth with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0733089447021	3
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	0.0.0.8.0.2.1.1	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	6.83492088318	2030
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.110049009323	2
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.109215021133	2
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40	8.2.8.2.3.3.5.12	synth with cache (only 1: intros A B H; only 1: elim H; only 1: firstorder; only 1: eauto; only 1: firstorder; only 1: eauto; only 1: firstorder; only 1: eauto).	26.6784510612	18424
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	1.4.3	synth with cache (only 1: split; only 1: intuition_in; only 1: intuition).	0.968570947647	62
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	14	synth with cache (only 1: inversion_clear 1).	1.17997097969	226
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	1.3.6.3	synth with cache (only 1: intuition; only 1: red; only 1: intuition; only 1: intuition_in).	1.32599210739	275
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	7.6.9	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: L.MX.order).	9.16215991974	1505
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	1.1.9	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	9.43603992462	167
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0	synth with cache (only 1: auto).	0.0582370758057	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0622730255127	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0623509883881	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0620288848877	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	3	synth with cache (only 1: eauto with ordered_type).	0.348796129227	22
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.1.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.174796104431	13
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.350969076157	20
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0	synth with cache (only 1: auto).	0.0550708770752	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	23	synth with cache (only 1: inversion_clear 1).	1.11265587807	609
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	2.0.10.0.4	synth with cache (only 1: destruct m as [| r x e l h]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	5.78377795219	2123
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	0.0.0.0.5.4	synth with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: easy; only 1: auto; only 1: auto; only 1: auto).	0.974896907806	221
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	1.0.8.3.1.1.1.2.0	synth with cache (only 1: intros m x; only 1: functional induction (L.find (elt:=x) m); only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: auto).	36.9022660255	9066
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	0.0.0.0.3.7	synth with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: now destruct 1; only 1: auto; only 1: auto; only 1: auto).	1.27511715889	430
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	6.3	synth with cache (only 1: intros n m p q H1 H2 H3 H4; only 1: now right).	0.533950805664	112
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	0.13	synth with cache (only 1: unfold create; only 1: intuition_in).	3.24107384682	375
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.2.2.1.1	synth with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	1.96148204803	100
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	3.1.2.22.8	synth with cache (only 1: intros a; only 1: destruct a; only 1: constructor; only 1: simpl; only 1: constructor).	6.12938213348	3609
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	0.0.5.10.1	synth with cache (only 1: simpl; only 1: induction 1; only 1: red; only 1: simpl; only 1: auto).	23.1354441643	4507
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	2.3.4	synth with cache (only 1: intros a n Hn; only 1: fix odd_spec 1; only 1: auto).	2.23474907875	219
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	0.1.0.1.0.2.12	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	15.1366169453	3605
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	3.1.14.5	synth with cache (only 1: induction m; only 1: inversion 1; only 1: simpl; only 1: intuition_in).	6.94601106644	2733
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.2.1.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.309289932251	18
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	0.14.2.13.2	synth with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intuition; only 1: apply find_2; only 1: auto).	15.1568419933	8694
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	0.9.6.1	synth with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).	4.14568710327	1247
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	11.0.1.6.11.11.5	synth with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: inversion 1).	14.4371371269	10115
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	2.44.13.1	synth with cache (only 1: intros m; only 1: unfold elements, MapsTo, eq_key_elt; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	22.3530409336	18265
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	1	synth with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0941529273987	2
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	0.0.0.5.1.2.2.0	synth with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	4.83223104477	1291
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.1.2.0.1.4	synth with cache (only 1: destruct e2; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: auto).	1.60526108742	241
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.123584032059	3
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.12229681015	3
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	2.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: intuition).	0.127243995667	11
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	2.6	synth with cache (only 1: symmetry; only 1: intuition).	1.21698713303	26
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	3	synth with cache (only 1: intuition).	0.105263948441	16
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	3	synth with cache (only 1: intuition).	0.0995650291443	13
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.103593111038	15
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40	2.2.7.2.3.5	synth with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: intro; only 1: intuition; only 1: intro n; only 1: intuition; only 1: exact (add_3 E H)).	17.7664618492	6370
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.3.3.2	synth with cache (only 1: intro n; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	1.02613711357	193
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	1	synth with cache (only 1: intuition).	0.316716909409	36
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40	4.1.27.0	synth with cache (only 1: split; only 1: eauto with *; only 1: destruct 1; only 1: intuition).	13.3958830833	7281
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	2	synth with cache (only 1: intuition).	0.14869093895	3
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	2	synth with cache (only 1: intuition).	0.12109208107	16
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	3	synth with cache (only 1: intuition).	0.101377010345	13
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	3.2.0.21	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	13.1050789356	3800
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	14.0.0.2	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	7.08842802048	1335
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	10.4.1	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).	9.71544790268	2164
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.0.5.0	synth with cache (only 1: intros; only 1: red; only 1: intros; only 1: trivial).	0.110733985901	9
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.2.2.8	synth with cache (only 1: intros; only 1: red; only 1: intros y LT; only 1: auto).	1.4631729126	334
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	5.1.4	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	2.7800078392	160
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	6.0	synth with cache (only 1: intros a b H; only 1: firstorder).	0.0831160545349	8
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	1.3.3.10	synth with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	5.0975959301	998
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.1.4.0.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.459084033966	21
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	3.2.1	synth with cache (only 1: unfold Subset; only 1: firstorder; only 1: eauto with set).	0.167856931686	9
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.5.1	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.175842046738	13
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.4.10.6	synth with cache (only 1: intros; only 1: inversion H; only 1: destruct H; only 1: auto).	8.68684506416	2849
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.9	synth with cache (only 1: intros y LT; only 1: intuition).	0.206237077713	72
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	3.8	synth with cache (only 1: intros n m H; only 1: now rewrite <- ?BinInt.Z.pred_le_mono).	1.13400220871	149
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	7.5.0	synth with cache (only 1: intros x y z; only 1: intuition auto; BinInt.Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: firstorder).	1.87603187561	275
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	3.1	synth with cache (only 1: intros; only 1: auto).	0.0756869316101	6
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.2	synth with cache (only 1: unfold In; only 1: trivial).	0.0704159736633	4
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.0	synth with cache (only 1: intros n; only 1: now destruct n).	0.0740330219269	2
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	4.7	synth with cache (only 1: vm_compute; only 1: intuition).	0.172054052353	56
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	0.1.7.1	synth with cache (only 1: fix even_spec 1; only 1: intros a; only 1: rewrite even_spec; only 1: intuition).	1.72880101204	189
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	2.3.18	synth with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	5.34332704544	1775
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.2.5	synth with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.179342031479	25
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	4.12	synth with cache (only 1: vm_compute; only 1: destr_bool).	0.894397974014	353
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	19.1.14	synth with cache (only 1: intros a; only 1: fix even_spec 1; only 1: trivial).	32.2003610134	15428
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40
Coq.FSets.FSetPositive.PositiveSet.equal_2	40
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.0.4	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.133464097977	17
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: easy'; only 1: now split).	0.10507106781	5
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	3.9	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	1.30699014664	327
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.106637001038	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.0.0.8	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.255583047867	65
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0932528972626	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0913121700287	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0894060134888	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.20.5	synth with cache (only 1: vm_compute; only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).	9.73598790169	2845
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	7.4	synth with cache (only 1: intro n; only 1: now destruct n).	0.307929039001	86
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.5.8	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.953207969666	269
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	1.10.4.2	synth with cache (only 1: intros x y z; only 1: intuition auto; BinInt.Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite remove_spec; only 1: auto).	5.15867400169	1413
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.1.4	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.102520942688	8
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	2.0.1.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: auto).	0.493682861328	25
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.116762161255	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	5.9.6	synth with cache (only 1: intros x y z; only 1: rewrite inter_spec; only 1: intuition auto; BinInt.Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	3.08754110336	1076
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.109313011169	3
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	1.1.2	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.143306970596	16
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	1.14.6	synth with cache (only 1: intros n m Hn; only 1: fix odd_spec 1; only 1: trivial).	14.699878931	3565
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.3.2.1	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.120675802231	10
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.1.3.0	synth with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.10779094696	8
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.5.3.0	synth with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.741801023483	164
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.101155996323	4
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40	0.3.22.3.2	synth with cache (only 1: intros; only 1: unfold Empty, In; only 1: fix even_spec 1; only 1: intro n; only 1: trivial).	33.2753510475	16310
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40	0.1.0.3.0.0.2.0.0.5	synth with cache (only 1: intros a b; only 1: induction a as [a IH| a IH| ]; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal).	7.489620924	1536
Coq.FSets.FMapPositive.append_assoc_1	40	0.0.0.6.0.0.5.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: f_equal).	27.5287950039	5558
Coq.FSets.FMapPositive.append_neutral_r	40	0.0.0.0.0.41.1	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	6.31843209267	4808
Coq.FSets.FMapPositive.append_neutral_l	40	0.1.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: reflexivity).	0.121585130692	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	13	synth with cache (only 1: now intros []).	0.543025970459	146
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.2	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0977411270142	6
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.0.0.2	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.101565122604	6
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	1.1.1.0.6	synth with cache (only 1: intros n m; only 1: destruct m; only 1: auto; only 1: auto; only 1: reflexivity).	1.8726849556	211
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	0.5.3	synth with cache (only 1: intuition auto; ME.MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- H; only 1: auto).	0.17737698555	27
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0	synth with cache (only 1: auto).	0.0527348518372	1
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0	synth with cache (only 1: auto).	0.0521509647369	1
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	5.2	synth with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.0865559577942	12
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	1.0.20.4.0	synth with cache (only 1: unfold MapsTo; only 1: intro; only 1: rewrite gso; only 1: auto; only 1: auto).	22.3758168221	8374
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	0.1.0.0.0.1.0.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: unfold map; only 1: clear H; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	12.6805078983	3312
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.1	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: auto; only 1: auto).	21.1748120785	3335
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.110949039459	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	0.8.1.5.0	synth with cache (only 1: split; only 1: intro; only 1: apply (MapsTo_1 H H0); only 1: intro; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	2.86651611328	769
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	2.1.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition).	0.13384103775	11
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	2.1	synth with cache (only 1: intros n m Hn; only 1: intuition).	0.277129173279	22
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.11.0.4	synth with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	4.80682301521	1436
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	1.3	synth with cache (only 1: intros; only 1: intuition).	0.202085971832	6
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.1.5.3	synth with cache (only 1: intros EQ; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	2.97755813599	340
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	0.0.0.3.1.0.0.1.4.1.0.1	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	23.020416975	6826
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.10.1	synth with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	2.76153492928	423
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.1.0.0.5.0.0.0	synth with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	7.5694630146	1560
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	2.1.1.3.0.1.0.1.3	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: intuition; only 1: easy).	14.4658269882	2707
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	1.5	synth with cache (only 1: intros; only 1: auto with map).	0.225594043732	30
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.0.1.2.0.0.3.2	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).	3.56456398964	482
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.2.1.3	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).	1.60636997223	84
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	0.0.0.0.0.0.0.5.5.2.0	synth with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: vm_compute; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: auto; only 1: auto; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	14.5020749569	3345
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0	synth with cache (only 1: split).	0.06764793396	1
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.0.1.5	synth with cache (only 1: red; only 1: compute; only 1: intros; only 1: auto).	0.135848045349	10
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	1.6.11.0	synth with cache (only 1: unfold Equal; only 1: intuition; only 1: rewrite H; only 1: auto).	4.67754507065	758
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.1	synth with cache (only 1: intros a; only 1: auto).	0.0873770713806	3
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	0.0.6.1	synth with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: auto; only 1: auto).	1.19658899307	53
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	3.9.18	synth with cache (only 1: intro; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).	6.48909807205	3429
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	0.5.21	synth with cache (only 1: intro; only 1: rewrite <- cardinal_Empty; only 1: auto).	6.06554198265	1962
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	16.3	synth with cache (only 1: intros m1 m2; only 1: firstorder).	11.5743589401	2939
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	14.9	synth with cache (only 1: repeat red; only 1: firstorder).	9.63775014877	2205
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	15	synth with cache (only 1: firstorder).	3.23730397224	541
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.1.2	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	1.25714993477	224
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	1.3.16	synth with cache (only 1: intro m; only 1: fix even_spec 1; only 1: auto).	10.0196099281	3365
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	0.5.13	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: auto).	23.711534977	5125
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	7	synth with cache (only 1: inversion_clear 1).	0.0327000617981	8
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.7	synth with cache (only 1: unfold Empty, empty; only 1: eauto).	0.0457420349121	9
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	1.23	synth with cache (only 1: fix even_spec 1; only 1: auto).	20.1665709019	1301
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	4.4.2.3.2.2.3	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intros p l inlist; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist SetoidList.NoDupA in inv; only 1: intuition).	23.7057688236	6457
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.191587924957	10
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.036593914032	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0	synth with cache (only 1: eauto).	0.0371248722076	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	1	synth with cache (only 1: auto).	0.0328748226166	2
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	4.0.0.14	synth with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: intuition).	2.96866607666	1180
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	0.0.13.19.3	synth with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: auto; only 1: auto).	20.9098949432	11683
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	4.3.7	synth with cache (only 1: repeat red; only 1: intros m; only 1: easy).	2.19483089447	455
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	0.30	synth with cache (only 1: fix odd_spec 1; only 1: auto).	5.39840102196	2818
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	0.30	synth with cache (only 1: fix odd_spec 1; only 1: auto).	6.5182929039	3866
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0440309047699	1
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0436789989471	1
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	14	synth with cache (only 1: now intros []).	0.438518047333	219
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	1	synth with cache (only 1: auto).	0.0403859615326	2
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	2.0	synth with cache (only 1: intro n; only 1: intuition).	0.0803351402283	4
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	synth with cache (only 1: compute; only 1: Dec.fsetdec).	0.0959031581879	2
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	6.1	synth with cache (only 1: compute; only 1: firstorder).	0.782542943954	45
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.9.1.2	synth with cache (only 1: red; only 1: intuition; only 1: vm_compute; only 1: Dec.fsetdec).	3.07237005234	379
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.0.10.1.2	synth with cache (only 1: red; only 1: intuition; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec).	8.81281399727	1269
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	4.1.11	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	6.11861491203	1011
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.4.0.0.0.1.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	12.5957620144	1195
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	2.1.0.0.1.0.1.0.0.0.1.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: destruct 1; only 1: constructor 1; only 1: auto; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	14.2412011623	1715
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	1.08590507507	52
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	12.2	synth with cache (only 1: intro; only 1: intuition).	0.647360086441	208
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	1	synth with cache (only 1: auto with set).	0.058394908905	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	0.1	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.102381944656	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	2.3.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	0.553954124451	23
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.284735918045	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	2.3.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	0.756398916245	33
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	1	synth with cache (only 1: auto with set).	0.0649321079254	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.1.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.0933620929718	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.5	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.431839942932	35
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	4	synth with cache (only 1: intuition).	0.214912176132	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	3.5.0.3.5.0.0.1	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	39.395539999	5560
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.1.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.0995740890503	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.9.1	synth with cache (only 1: intro; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.723611116409	111
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	1	synth with cache (only 1: auto with set).	0.065181016922	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	5.0	synth with cache (only 1: intros; only 1: auto with set).	0.0882041454315	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	16.3.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: eauto with set).	13.0508890152	1977
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	3.3.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0991590023041	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	5.0	synth with cache (only 1: intros; only 1: auto with set).	0.0831241607666	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	4.0	synth with cache (only 1: intros; only 1: auto with set).	0.0792210102081	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	0.6	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.285665035248	23
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	0.8.1.6.6.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: split; only 1: apply subset_2; only 1: intuition; only 1: Dec.fsetdec).	9.12536501884	1425
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	1	synth with cache (only 1: auto with set).	0.0619380474091	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	1.5.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.901973962784	73
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	0.13	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.240859985352	81
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	1	synth with cache (only 1: auto with set).	0.0604817867279	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	3.3.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.30296087265	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	2.3.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.311374902725	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	1.2.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.31710100174	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	1	synth with cache (only 1: auto with set).	0.0724260807037	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	2	synth with cache (only 1: auto with set).	0.0691831111908	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	1	synth with cache (only 1: auto with set).	0.0659279823303	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.064845085144	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	1	synth with cache (only 1: auto with set).	0.0635368824005	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0987370014191	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	1	synth with cache (only 1: auto with set).	0.0607559680939	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	3.2.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.152956962585	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	2.3.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.16996216774	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0585751533508	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	1	synth with cache (only 1: auto with set).	0.0600249767303	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	1	synth with cache (only 1: auto with set).	0.0600550174713	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	1	synth with cache (only 1: auto with set).	0.0715968608856	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	4.1.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.350252866745	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	1	synth with cache (only 1: auto with set).	0.0643100738525	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	1	synth with cache (only 1: auto with set).	0.0628209114075	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	3.1.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.259919881821	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	1	synth with cache (only 1: auto with set).	0.0602941513062	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.082377910614	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.0602970123291	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: auto with set).	0.0600550174713	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: auto with set).	0.0715870857239	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.1	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0788288116455	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	0.0.0.0.5.6	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.46775507927	272
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	0.0.2.0.0.0.2.3	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	3.58490300179	463
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	0.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.3477640152	240
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	4	synth with cache (only 1: auto with set fset).	0.0903389453888	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.2.1.3	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.73761987686	265
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.2.0.3.2	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.22186398506	231
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	1.0.0.0.2.0.2.1	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.90866398811	306
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	10	synth with cache (only 1: auto with set fset).	0.139285087585	29
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	6	synth with cache (only 1: solve_proper).	0.36404800415	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0794780254364	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	1.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: auto with set).	0.145670890808	11
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	1.1.0.2.0.2.2	synth with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).	3.20501589775	351
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.4.3.0.4.1	synth with cache (only 1: intros; only 1: apply filter_2 with s; only 1: auto; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	9.46743583679	1374
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	0.2.1.1.9	synth with cache (only 1: red; only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	1.64881300926	179
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40	162	synth with cache (only 1: eauto with *).	3.93230700493	13321
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	7.10.1	synth with cache (only 1: simpl; only 1: intros x y z; only 1: eauto).	3.17880988121	1272
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	16.13.1	synth with cache (only 1: simpl; only 1: intro x; only 1: eauto with set).	6.06404614449	4384
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	1.1.0.4.3.0	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	1.19747900963	403
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	1.0.0.5.6.0	synth with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	3.99012994766	1185
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	3.9.12.5	synth with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	12.7650020123	6054
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	3.2.4.3.18	synth with cache (only 1: case M.empty; only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	7.02441596985	3417
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3	synth with cache (only 1: auto with *).	0.727985143661	46
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.2.1.1.5.8.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	12.2561128139	2930
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.1.1.1.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0841100215912	8
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	1.1.1.7.10.3	synth with cache (only 1: intros s x y; only 1: intro H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	11.4780731201	5325
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.2.3.1	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.481894016266	101
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	3.6.15.7	synth with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	18.4860801697	9473
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.3	synth with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0844531059265	16
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.9.13.0	synth with cache (only 1: intros; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	8.86842012405	3382
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0740330219269	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0744850635529	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.2.3.3	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.833745002747	203
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.1.2.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.16995215416	14
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.5.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.312205076218	31
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0325541496277	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	0.11.3.7.9.2	synth with cache (only 1: intros; only 1: intro s; only 1: red; only 1: intuition; only 1: rewrite <- (H _ _ H0); only 1: auto).	34.3151860237	13602
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	3.3.2.0.4.3	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	6.78152894974	2251
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	1.1.0.2.2.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.866783857346	165
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	9.0.0.2.1.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: destr_bool).	5.18749308586	1383
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.3.2.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.261312961578	60
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	21	synth with cache (only 1: solve_proper).	16.1108431816	3528
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	8.2.7	synth with cache (only 1: intuition; only 1: red; only 1: intuition).	4.21381878853	1764
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	11.2.1	synth with cache (only 1: intuition; only 1: red; only 1: intuition).	1.26631999016	462
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.675050020218	13
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	1.1.0.0	synth with cache (only 1: red; only 1: split; only 1: intuition; only 1: intuition).	0.1292989254	6
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	2	synth with cache (only 1: intuition).	0.211199998856	17
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	1	synth with cache (only 1: fsetdec).	0.118390083313	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0.1.0	synth with cache (only 1: red; only 1: intros y LT; only 1: auto).	0.0948858261108	4
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	1	synth with cache (only 1: fsetdec).	0.963006973267	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	1	synth with cache (only 1: fsetdec).	0.103889942169	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0905969142914	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	7.0	synth with cache (only 1: red; only 1: fsetdec).	0.140933036804	18
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	2	synth with cache (only 1: fsetdec).	0.105831861496	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	1	synth with cache (only 1: fsetdec).	0.109813928604	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	5	synth with cache (only 1: fsetdec).	0.170176029205	14
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	1	synth with cache (only 1: fsetdec).	0.0974509716034	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0904901027679	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	1.0.5.5.1	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: red; only 1: intuition).	7.96514487267	1394
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	1	synth with cache (only 1: fsetdec).	0.176401853561	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.101197004318	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.126866102219	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	2	synth with cache (only 1: fsetdec).	0.917672872543	22
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	6	synth with cache (only 1: fsetdec).	1.0531308651	55
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	1	synth with cache (only 1: fsetdec).	0.682343006134	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	1	synth with cache (only 1: fsetdec).	0.217908143997	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	1	synth with cache (only 1: fsetdec).	0.675374984741	20
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	1	synth with cache (only 1: fsetdec).	0.426239967346	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	1	synth with cache (only 1: fsetdec).	0.361804008484	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	1	synth with cache (only 1: fsetdec).	0.140888929367	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.12778711319	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	1	synth with cache (only 1: fsetdec).	0.160555839539	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	1	synth with cache (only 1: fsetdec).	0.505800008774	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	1	synth with cache (only 1: fsetdec).	0.250605106354	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.143598079681	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.70851111412	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	1	synth with cache (only 1: fsetdec).	0.806754112244	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.556786060333	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	2	synth with cache (only 1: fsetdec).	0.0878200531006	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	1	synth with cache (only 1: fsetdec).	0.0864999294281	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	1	synth with cache (only 1: fsetdec).	0.143686056137	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.113538980484	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.113184928894	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	1	synth with cache (only 1: fsetdec).	0.586599111557	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.123661994934	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	5	synth with cache (only 1: fsetdec).	0.287261009216	26
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.134701967239	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	1	synth with cache (only 1: fsetdec).	0.126266956329	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.839911937714	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.1912150383	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.189600944519	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	1	synth with cache (only 1: fsetdec).	0.271868944168	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	1	synth with cache (only 1: fsetdec).	0.630156993866	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	1	synth with cache (only 1: fsetdec).	0.250913143158	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	1	synth with cache (only 1: fsetdec).	0.745372056961	22
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	1	synth with cache (only 1: fsetdec).	0.107474803925	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	1	synth with cache (only 1: fsetdec).	0.105953216553	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.123136997223	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0869610309601	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.108310937881	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.113415002823	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	1	synth with cache (only 1: fsetdec).	0.127077102661	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0899209976196	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	1	synth with cache (only 1: fsetdec).	0.21414399147	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.152496099472	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: fsetdec).	0.215131044388	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: fsetdec).	0.190907001495	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	4.10.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition).	3.63316917419	582
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	2.2.8	synth with cache (only 1: intuition; only 1: expAdd; only 1: fsetdec).	2.08265399933	207
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	0.3	synth with cache (only 1: expAdd; only 1: fsetdec).	1.23603701591	25
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	1.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.942848920822	4
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.632607936859	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.4	synth with cache (only 1: expAdd; only 1: fsetdec).	0.881344079971	27
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	0.0.18.9	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto; only 1: auto).	5.54064893723	1912
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	6.3.1.4.6	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec_bis; only 1: auto; only 1: reflexivity; only 1: firstorder).	15.0736231804	1251
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	0.7.0.8.3.3	synth with cache (only 1: compute; only 1: intuition; only 1: rewrite M.fold_1; only 1: auto; only 1: auto with *; only 1: auto).	10.7019281387	5200
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	5.0.0.0.6.11.2	synth with cache (only 1: intro n; only 1: apply fold_1; only 1: constructor; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto with *).	7.56667399406	2494
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	3.0.0.0.0.7.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto with *).	15.650138855	3159
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.2.8.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	9.73995709419	1836
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.2.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0899121761322	5
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.2.1.3	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: fsetdec).	0.132711172104	10
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	1.6.4.10.4	synth with cache (only 1: intros; only 1: generalize (cardinal_inv_1 (s:=diff s' s)); only 1: rewrite <- union_inter_cardinal; only 1: intro; only 1: auto with arith).	12.8764820099	3743
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	11.3	synth with cache (only 1: symmetry; only 1: intuition).	3.15248990059	568
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	2.0.4.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: intuition).	0.370038032532	54
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	2.1.0.0.0.3.0.1.7	synth with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: fsetdec; only 1: intuition).	13.9934821129	3169
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	2	synth with cache (only 1: auto with set fset).	0.120388031006	15
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	0.0.0.1.0.1.14.1.4	synth with cache (only 1: vm_compute; only 1: intuition; only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: trivial; only 1: ME.elim_comp; only 1: trivial; only 1: ME.elim_comp; only 1: trivial).	15.6005570889	3745
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.1.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0903310775757	4
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.2.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0901000499725	5
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.0	synth with cache (only 1: unfold decidable; only 1: reflexivity).	0.073707818985	2
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0	synth with cache (only 1: intros; only 1: auto).	0.0726509094238	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	1.1.0	synth with cache (only 1: split; only 1: reflexivity; only 1: reflexivity).	0.0863599777222	5
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	17	synth with cache (only 1: fsetdec).	7.11844801903	617
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	3	synth with cache (only 1: fsetdec).	1.34328603745	11
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	7	synth with cache (only 1: fsetdec).	0.407572031021	17
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	8.1	synth with cache (only 1: intro; only 1: intuition).	0.167884111404	53
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	6	synth with cache (only 1: fsetdec).	0.181324958801	22
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	3.12.2.1	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: fix even_spec 1; only 1: intuition).	7.38428997993	1731
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	6	synth with cache (only 1: fsetdec).	0.257951021194	23
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	8	synth with cache (only 1: fsetdec).	1.56178307533	30
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	3	synth with cache (only 1: fsetdec).	1.12936997414	12
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	8	synth with cache (only 1: fsetdec).	0.513517856598	36
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	synth with cache (only 1: fsetdec).	0.295894861221	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	4	synth with cache (only 1: fsetdec).	0.390655994415	13
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	1.3.2	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.332236051559	9
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	4	synth with cache (only 1: fsetdec).	0.269371032715	26
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	6	synth with cache (only 1: fsetdec).	1.04512810707	57
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.110470056534	1
Coq.FSets.FMapList.Raw.Elt.empty_1	40	7	synth with cache (only 1: inversion_clear 1).	0.0322499275208	8
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	1	synth with cache (only 1: constructor).	0.0322878360748	2
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	4.5.0.2.2.3	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: simpl; only 1: easy; only 1: intuition).	6.3437268734	2138
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40
Coq.FSets.FMapList.Raw.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0336389541626	1
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: eauto with ordered_type).	0.0336751937866	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	2	synth with cache (only 1: auto).	0.0308020114899	3
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40	2.1.0.13	synth with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: intuition).	2.46161198616	845
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	0.3.2.1.0.0.6	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: inversion_clear H; only 1: auto).	11.298956871	2060
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.2.3.0.1.0.1	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: inversion_clear H; only 1: auto).	5.47377681732	743
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.0.1.1.0.0.0.1	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	1.14061284065	100
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	5.3.4	synth with cache (only 1: intros m; only 1: intro; only 1: inversion_clear 1).	1.27191281319	269
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40	0.32	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	8.99280381203	5727
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0464091300964	1
Coq.FSets.FMapList.Make.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0463228225708	1
Coq.FSets.FMapList.Make.Elt.elements_3	40	0.27	synth with cache (only 1: induction m; only 1: auto).	1.99929904938	1672
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	1	synth with cache (only 1: auto).	0.0430378913879	2
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	1.1.0.3.0	synth with cache (only 1: destr_bool; only 1: revert m; only 1: fix even_spec 1; only 1: destruct m; only 1: auto).	0.0880320072174	10
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	1.11.16.16	synth with cache (only 1: intro x; only 1: apply Acc_rect; only 1: constructor; only 1: auto).	8.36895895004	15167
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	1.1.11	synth with cache (only 1: intros; only 1: constructor; only 1: auto with sets).	0.0946080684662	98
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	0.5	synth with cache (only 1: destruct 1; only 1: auto).	0.115705013275	26
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.3.8.1.6	synth with cache (only 1: intro z; only 1: constructor; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: exact eq_refl).	1.65305995941	1762
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	2.10	synth with cache (only 1: constructor; only 1: assumption).	0.0558919906616	63
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	2.1.0.7	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.295287132263	160
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	3.1	synth with cache (only 1: red; only 1: auto).	0.0206680297852	6
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	0.10.6.1	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?IHd).	2.18914604187	1168
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.1.7	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.86059713364	841
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.0.19	synth with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	11.6240911484	5383
Coq.Numbers.DecimalFacts.unorm_invol	40	2.1	synth with cache (only 1: unfold unorm, lnorm; only 1: now induction d).	0.0329308509827	5
Coq.Numbers.DecimalFacts.norm_invol	40	5.5.22	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	1.22269392014	1186
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0	synth with cache (only 1: now induction d).	0.0706441402435	1
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	17	synth with cache (only 1: now destruct n).	37.8138730526	2631
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	2	synth with cache (only 1: apply of_lu_double_gen).	0.0641469955444	3
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	3	synth with cache (only 1: now induction d).	0.0619120597839	4
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	1.0	synth with cache (only 1: simpl; only 1: auto).	0.136163949966	3
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0662310123444	2
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	1.0.1	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0869028568268	5
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	7	synth with cache (only 1: now induction d).	0.516318082809	78
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40	3.3.4.3.7	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: unfold norm; only 1: now destruct nzhead).	13.370650053	3060
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	1.2	synth with cache (only 1: simpl; only 1: trivial).	0.068913936615	5
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	3.0	synth with cache (only 1: simpl; only 1: now induction d).	0.112265110016	5
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	11	synth with cache (only 1: now induction d).	1.14523696899	141
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40	6.6.12	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	3.39682102203	916
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	13.1.0.2	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Unsigned.of_to).	6.98269701004	1901
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	1	synth with cache (only 1: now induction d).	0.0581171512604	2
Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.1.0	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0881519317627	5
Coq.Numbers.DecimalN.Unsigned.of_iff	40	2.1.0.1.0	synth with cache (only 1: split; only 1: apply DecimalPos.Unsigned.of_inj; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.309872865677	49
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	8.10.0	synth with cache (only 1: exists (N.of_uint d); only 1: apply Unsigned.to_of; only 1: now induction d).	29.5695419312	5182
Coq.Numbers.DecimalN.Signed.of_int_norm	40	4.6.6	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	3.14555191994	645
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	2	synth with cache (only 1: trivial).	0.0796329975128	12
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	3.0.9	synth with cache (only 1: fix le_div2 1; only 1: intro n; only 1: auto).	0.996652126312	343
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.1	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.348484039307	14
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.9	synth with cache (only 1: compute; only 1: now nzsimpl).	0.258761167526	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.216218948364	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	4.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.156746864319	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.1.0	synth with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.2915828228	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.1.1.6	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro; only 1: simpl; only 1: now nzsimpl).	1.12363791466	183
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	8.1.1	synth with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl).	2.35268807411	337
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.2.0.0	synth with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.354851961136	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.0.2.3	synth with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: intro m; only 1: now nzsimpl).	0.690463066101	43
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	1.0.1.2	synth with cache (only 1: intro H; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.300746917725	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	3.0	synth with cache (only 1: intros; only 1: apply BinInt.Z.lt_irrefl).	0.103878974915	13
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	8.7.0	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	8.30855607986	942
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0390529632568	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0379371643066	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0366728305817	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0368049144745	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	0.0.13	synth with cache (only 1: intro m; only 1: intro n; only 1: now rewrite (add_lt_mono_r _ _ n), add_0_l, sub_simpl_r).	20.5976669788	4003
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.8.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	23.19074893	4264
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.9.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	8.39537215233	1373
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	1.1.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	3.00793910027	391
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.221723079681	35
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	1.0.1.0.0.1.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now constructor).	0.583615064621	121
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	1.1.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0454199314117	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	0.0.0.0.0.0.8.0.0.0.1.10.8	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: intuition; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: intuition; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	38.1912288666	12322
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	15.3.1	synth with cache (only 1: intros x y EQ; only 1: intro H; only 1: now f_equiv).	3.68005800247	1429
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.224182128906	38
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.265336990356	37
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.27520608902	37
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.3.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_l).	0.0694518089294	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	3.4.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: reflexivity).	0.0700712203979	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.2.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_r).	0.0689780712128	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	4.4.4	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	4.2375190258	937
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	0.3.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now try order').	0.0645689964294	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	0.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0782129764557	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	4.3.3	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	2.2866268158	510
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.1	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0608739852905	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.3.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_l).	0.155771017075	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	27.0.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	19.2089939117	8551
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0.3.0.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.098023891449	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.0.3.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.097051858902	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.2.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.137804031372	15
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	8.0.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	1.15483999252	220
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.2.2.0.0.0.3	synth with cache (only 1: intro; only 1: intro n; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intro H; only 1: now f_equiv).	6.76939702034	1516
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.3.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.398724079132	38
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	12.8142328262	2228
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.0.1.0.3.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	0.518566131592	58
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.4.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.254775047302	29
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	6.0	synth with cache (only 1: intros n m; only 1: apply abs_nonneg).	0.0568280220032	13
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.1.1.0.35	synth with cache (only 1: unfold lcm; only 1: intro n; only 1: nzsimpl; only 1: apply abs_eq; only 1: order || apply lt_0_1).	7.81100296974	7237
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.091362953186	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).	0.0724401473999	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.319895982742	89
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.1.7	synth with cache (only 1: intros n Hn; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	4.88267397881	1008
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	1.1.0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	6.16084194183	1309
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.0.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.108170986176	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.8.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	1.74089002609	201
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.3.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	8.57882404327	1520
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	7.33193516731	1350
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	8.34510803223	1296
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	21.122385025	4343
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	8.82591700554	989
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	5.0.0.1.5.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: now apply mul_le_mono_nonpos_r).	39.7579209805	7899
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	1.1.0.1.0.3	synth with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	1.17052602768	325
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	1.11.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.06731104851	362
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.0.0.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.0551559925079	4
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	0.3.0.2.0.5	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: now rewrite succ_pred).	29.5723919868	5371
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.1.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.439291954041	61
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.3.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.317077875137	21
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.0.9.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	11.6368551254	2420
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	1.2.4	synth with cache (only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.720046043396	103
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.2.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.044312953949	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.1.0.2	synth with cache (only 1: unfold sgn; only 1: intro n; only 1: intro H; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.237420082092	54
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.1.0.1	synth with cache (only 1: unfold sgn; only 1: intro n; only 1: intro H; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.185339927673	34
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.2.0.15.0	synth with cache (only 1: intro; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	3.81498908997	1576
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	1.1.22	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.445499897003	340
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	4.7.4.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	4.60865211487	1443
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	2.0.0.0.0.7.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: now rewrite opp_nonneg_nonpos).	3.02446913719	911
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.2.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0534720420837	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	2.2.13	synth with cache (only 1: rewrite sgn_null; only 1: now nzsimpl; only 1: now nzsimpl).	0.392488956451	183
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.1.0.0.1.17.2.0	synth with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	6.42041397095	3184
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.4.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Quot2Div.mod_bound_pos a b); only 1: auto; only 1: auto; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	5.05060505867	747
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	2.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0880219936371	9
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.6.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	5.85030198097	629
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0651550292969	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0630230903625	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	5.0.3.1.1.3.3.0	synth with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: auto; only 1: destruct (mod_neg_bound a b); only 1: auto; only 1: auto).	32.2036190033	9116
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.103641033173	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.102878093719	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.1.0.0.0.2.0.3	synth with cache (only 1: intro; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	3.41389513016	610
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0636370182037	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0639109611511	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.1.2.3.1.1.1.2.1.8	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: auto).	16.1201980114	3545
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.723117113113	63
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.0.1.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: auto; only 1: auto; only 1: auto).	4.02659201622	444
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.2.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.412053823471	26
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.2.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: auto).	0.693058013916	99
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	2.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.109106063843	11
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.2.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.937756061554	70
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0892601013184	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.2.1.2.1	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).	1.11764192581	154
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	2.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0868549346924	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.3.1.0.1.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	3.94347310066	626
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.2.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: order).	1.29978990555	100
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.1.0.0.0.0.2.1.0.3.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	8.92339015007	1740
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	2.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.736644983292	42
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.3.2.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	2.61707997322	214
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.1.1.5.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	6.54583597183	936
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	1.5.4.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	6.38796210289	1042
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.1.5.6.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	10.8111338615	2354
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	1.85606217384	317
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0644869804382	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.0.3.4.2.0.1	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	4.48074507713	1347
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.137470960617	30
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	5.0.0.3.4.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	16.8608651161	2829
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.0.0.2.0.5.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: nzinduct n; only 1: now rewrite opp_involutive; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	7.54398703575	1335
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.2.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	0.245454788208	20
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	2.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.163297176361	12
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.0.4.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.191332101822	16
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.14.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	13.6308960915	2834
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.12.0	synth with cache (only 1: intros; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	5.59581804276	1098
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	3.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.413556098938	28
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	1.13.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	4.48185801506	829
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.2248878479	19
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.5.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.361064910889	56
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	3.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: auto using mod_small).	0.386112928391	55
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.343287944794	67
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.2.0.5	synth with cache (only 1: intro; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	2.31574606895	562
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0616989135742	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0626168251038	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.8.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	9.11437702179	1942
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.1.3.1.3.1.3	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: auto).	2.13365602493	513
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.5.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).	0.806967973709	94
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.4.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.231262922287	29
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.1.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.495988845825	60
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.1.1.1.1.1	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.749915838242	145
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.1.2.1.1.1	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	1.89144086838	288
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0894858837128	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	1.1.5.1.2.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	18.2352571487	3791
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.28840208054	163
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	2.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.337632894516	28
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.3.4.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	4.66488194466	474
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.3.5.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	6.30630803108	824
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.5.4.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	13.3266768456	1782
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.3.5.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	2.77105498314	474
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.1.6.1.1.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	14.4212379456	2354
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40	2.0.0.11.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with (a mod b); only 1: now apply mod_always_pos; only 1: intuition; only 1: now nzsimpl).	12.7953810692	3186
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	1.1.0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	3.33895802498	613
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	1	synth with cache (only 1: BinInt.Z.order).	0.146908998489	15
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	16.8	synth with cache (only 1: intros; only 1: firstorder).	6.00955200195	1529
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.4.9.1	synth with cache (only 1: intros; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).	2.09690308571	435
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	12.5	synth with cache (only 1: intros a b; only 1: ring).	5.04939103127	331
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.2.7	synth with cache (only 1: intro n; only 1: destruct n; only 1: reflexivity).	0.53416800499	88
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.1	synth with cache (only 1: destruct x; only 1: reflexivity).	0.211370944977	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0	synth with cache (only 1: reflexivity).	0.0612239837646	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	9.0.0.3.2	synth with cache (only 1: intros n m; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	8.41592407227	1623
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.6	synth with cache (only 1: destruct x; only 1: reflexivity).	2.12841200829	12
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0	synth with cache (only 1: reflexivity).	0.0600600242615	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	0.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.148761987686	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.1.0.0.1	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.136878967285	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.1	synth with cache (only 1: destruct x; only 1: reflexivity).	0.096498966217	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	2.5	synth with cache (only 1: intro n; only 1: now destruct n).	1.08296704292	9
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.1	synth with cache (only 1: destruct x; only 1: reflexivity).	1.31380605698	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	6.6	synth with cache (only 1: destruct x; only 1: now injection 1).	17.0798130035	327
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40	3.11	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	12.0561058521	1962
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	1.4.9.0	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	4.47069096565	1022
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	0.4.3.8.0.22	synth with cache (only 1: destruct x; only 1: simpl; only 1: compute; only 1: intros; only 1: rewrite H; only 1: reflexivity).	22.5763199329	9186
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	0.5.1	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: reflexivity).	0.159577846527	9
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	3.0.0.1	synth with cache (only 1: split; only 1: symmetry; only 1: auto; only 1: now intros ->).	0.126831054688	13
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	2.12.1.4	synth with cache (only 1: intro; only 1: intro n; only 1: fix le_div2 1; only 1: tauto).	21.8108251095	5497
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0	synth with cache (only 1: reflexivity).	0.0632150173187	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	2.5	synth with cache (only 1: intro n; only 1: now destruct n).	0.10839009285	16
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	1.0.2	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	1.10989189148	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0.0	synth with cache (only 1: vm_compute; only 1: reflexivity).	0.0870440006256	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0	synth with cache (only 1: reflexivity).	0.0744800567627	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.0	synth with cache (only 1: red; only 1: auto).	0.0896420478821	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0	synth with cache (only 1: reflexivity).	0.0713958740234	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	synth with cache (only 1: reflexivity).	0.0718281269073	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.114418983459	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	1.0	synth with cache (only 1: intros x y; only 1: auto).	0.0806000232697	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0923111438751	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.0.0.2	synth with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	1.15913581848	14
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	1.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.265722036362	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	2.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: pattern x at 1; only 1: simpl; only 1: apply phi_phi_inv).	0.734290122986	16
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0920832157135	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.176205873489	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	13.2	synth with cache (only 1: destruct x; only 1: apply Zeq_is_eq_bool).	4.72796797752	968
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.120110988617	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.0	synth with cache (only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.10412311554	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.119884967804	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.2.2.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: generalize wB_pos; only 1: unfold wB, base; only 1: lia).	0.210525989532	15
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	1.0	synth with cache (only 1: intros x y; only 1: auto).	0.0846469402313	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	0.12.0.0	synth with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	4.02216601372	733
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	3.4.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	1.06699490547	111
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	3.0.1	synth with cache (only 1: intros; only 1: unfold add, to_Z; only 1: auto).	0.119673013687	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	1.2.11.4	synth with cache (only 1: intros x; only 1: rewrite !two_p_equiv; only 1: symmetry; only 1: auto).	6.15571498871	1435
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	0.0.8	synth with cache (only 1: compute; only 1: intros x ->; only 1: apply spec_zdigits).	3.27195620537	33
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	2	synth with cache (only 1: auto).	0.0685710906982	3
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	3.4.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	0.136507987976	10
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	synth with cache (only 1: intro H; only 1: Z.order_nz).	0.0899059772491	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	3	synth with cache (only 1: auto with qarith).	0.0734889507294	4
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.1	synth with cache (only 1: red; only 1: reflexivity).	0.363950014114	3
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	synth with cache (only 1: reflexivity).	0.0731108188629	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: reflexivity).	0.0724360942841	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	4	synth with cache (only 1: congruence).	0.0710070133209	5
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.18.1	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	4.10792613029	1464
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.3.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.130747079849	17
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.1.7.0	synth with cache (only 1: intros; only 1: unfold eqo; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	1.19140696526	199
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.10.4.3.9	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros; only 1: subst; only 1: reflexivity).	14.4535450935	5170
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	synth with cache (only 1: apply subc_spec).	0.0744109153748	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	synth with cache (only 1: apply sub_spec).	0.315685033798	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0765519142151	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0	synth with cache (only 1: now intros ->).	0.0718531608582	1
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.165721893311	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	2.1.2	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.18420791626	8
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	synth with cache (only 1: reflexivity).	0.0790019035339	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.5.4	synth with cache (only 1: intros Heqn; only 1: subst; only 1: apply negb_involutive).	0.411787986755	65
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.112403869629	3
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.110225915909	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	2.0.0.1	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).	0.600382804871	55
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	2.0.0.2	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).	0.249994039536	26
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	14.7	synth with cache (only 1: intros A f assoc a0 comma0 l; only 1: firstorder).	5.16329813004	1339
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.19	synth with cache (only 1: intros f w; only 1: auto using eqb_correct, eqb_complete).	2.14955997467	863
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.6.0.0	synth with cache (only 1: intro; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	1.50984787941	83
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	5.18.0.0	synth with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: intuition).	4.35149407387	1465
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	15.0.0.0.0.0.1	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: now reflexivity; only 1: red; only 1: easy; only 1: congruence).	19.5497529507	5092
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	0.0.0.0.0.4.2.8	synth with cache (only 1: unfold base; only 1: transitivity 1; only 1: Z.order'; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: reflexivity).	4.29838705063	947
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.0	synth with cache (only 1: zify; only 1: reflexivity).	0.11240196228	2
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0	synth with cache (only 1: auto).	0.0632431507111	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	2.2.0	synth with cache (only 1: intro; only 1: zify; only 1: apply NZ_to_Z_mod).	0.357228040695	20
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.0.2	synth with cache (only 1: intro; only 1: zify; only 1: reflexivity).	0.124055147171	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	synth with cache (only 1: reflexivity).	0.0613880157471	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	synth with cache (only 1: reflexivity).	0.0681898593903	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.0698349475861	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.1.10.0	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	4.45657515526	1847
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0323069095612	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	1.0.5.1.0.1.0.3.7	synth with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: split; only 1: intro H; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intro H; only 1: apply neq_succ_0).	28.3072519302	11196
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.1.0.0.7.10	synth with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	8.34291505814	4370
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.1.0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0632100105286	6
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.1.0.0.1.0.1	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.981167078018	178
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	1.1.5.3	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	2.46558904648	478
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.1.5.1.2.3	synth with cache (only 1: intro H; only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: auto).	9.15548682213	2553
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.1.1.1.0.1.2	synth with cache (only 1: intro H; only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply (neq_succ_diag_l 0); only 1: now nzsimpl').	2.18408703804	539
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.1.2.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.191735982895	59
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.1.2.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	1.4022591114	276
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	2.4.2	synth with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.618726968765	153
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.3	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.410730838776	71
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.1	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.284550905228	39
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.3.1.2.3.1.11	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_succ_0; only 1: nzsimpl; only 1: order).	38.6182019711	20571
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.1.1.0.4	synth with cache (only 1: intro; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	1.39425516129	275
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0421957969666	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.042888879776	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	4.0.0.6.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: apply mul_comm).	25.3832828999	5279
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	3.0.0.7.2.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	25.8243758678	5156
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.3.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.0566279888153	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.213651180267	25
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.5.3.4.1	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	21.008450985	4560
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.3	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.816431045532	82
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	1.1.1.1.5.3.2.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	33.4225380421	8417
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	1.0.1.5.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	2.66567397118	390
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.0.11.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	8.13458204269	1331
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	3.4.2.2.2	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	8.34969496727	1916
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto; only 1: auto).	0.100899219513	14
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.1.0.0.0.0.2.0.0.1.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: auto; only 1: rewrite <- neq_mul_0; only 1: auto).	13.9144010544	2863
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.1.0.0.0.0.2.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: auto).	6.14676403999	1190
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	3.1.0.1.1	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	1.00489807129	218
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	2.2.1.8.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	12.4771120548	3394
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0745379924774	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.1.3.2.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.940716028214	224
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.14.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	13.7629210949	2970
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0737750530243	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.1.3.5.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	4.74476885796	962
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.1.3.1.1.1.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	3.41840815544	582
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.2.0.3.2.0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	7.70038294792	1901
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.1.0.0.0.1.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intro; only 1: auto; only 1: apply le_0_l).	0.0724010467529	9
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	0.0.4.2.0.3.1.0	synth with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: rewrite lt_succ_r; only 1: now apply eq_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	3.78543686867	1043
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.5.0.15.1	synth with cache (only 1: cases ltac:(n); only 1: auto with relations; only 1: intro n; only 1: right; only 1: now exists n).	4.17911601067	2392
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.0.0.1.2	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now nzsimpl').	0.154643058777	46
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	0.0.2.1.0.1.1	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).	2.11808800697	262
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	5.0.15	synth with cache (only 1: unfold def_mul; only 1: intro n; only 1: now rewrite recursion_0).	1.71411299706	890
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	2.28	synth with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.925211906433	486
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.4.1.17	synth with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	28.3301410675	4669
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	0.0.25	synth with cache (only 1: unfold pow; only 1: intro n; only 1: now rewrite recursion_0).	9.31018400192	3443
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	3.18.0	synth with cache (only 1: intros x y z; only 1: apply mul_le_mono_nonneg_l; only 1: now apply le_0_l).	39.5266540051	10400
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.5.1	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.527029037476	117
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	5.1.0	synth with cache (only 1: intros x x' EQ; only 1: subst; only 1: order).	0.0502951145172	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.1.0.0.2.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now constructor).	1.45187878609	311
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	1.1.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0467200279236	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.9.0.0.8.9	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: order').	14.4807019234	6164
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	3.2.6.14.4	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	22.6965169907	4765
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.750655174255	138
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0368781089783	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	6.6.0	synth with cache (only 1: intros x x' Hx; only 1: intro H; only 1: now f_equiv).	4.815128088	874
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	1.5.2	synth with cache (only 1: intro H; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.666944026947	83
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.3.0.7	synth with cache (only 1: intros a; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).	1.73371315002	378
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.190775871277	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.10143494606	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	1.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.109664916992	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0562310218811	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	1.2.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: reflexivity).	0.0572111606598	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0566129684448	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	3.2.4	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.59184288979	269
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.0.2.3	synth with cache (only 1: intro H; only 1: bitwise; only 1: simpl; only 1: now try order').	0.0783278942108	17
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.2.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0709199905396	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	4.2.4	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	2.37021303177	464
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.057116985321	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.0.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_r).	0.056823015213	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.2.2.0	synth with cache (only 1: intro n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0718951225281	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: assumption; only 1: assumption).	3.83249902725	683
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.7.0	synth with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	2.09819698334	329
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.1.5.0.0.1	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	1.59297800064	775
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.5.0	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.433909893036	31
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.2.0.1.2.1.0.0	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.6301240921	1260
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	6.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intro H; only 1: now nzsimpl).	7.72050189972	1402
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	1.4.0.0.0.0.0.2	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	20.1801350117	3895
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	1.1.3.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	3.42106413841	451
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	1.0.0.9.1.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: nzinduct n; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	15.3815369606	3570
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.9.0	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	14.6059918404	2942
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	5.0.2.1.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	6.25724315643	1124
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.1.0.0.0.1.1.2.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l; only 1: apply le_0_l).	15.9729111195	1862
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0764181613922	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	0.0.4.0	synth with cache (only 1: intro n; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	0.0925951004028	8
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	14.0289850235	2283
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	0.5.4.1.2	synth with cache (only 1: intros a b Hb; only 1: intro H; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: trivial).	6.58272099495	1718
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.3.1.9.0	synth with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).	15.8068361282	3025
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.1.1.0.6	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).	4.6548268795	942
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.1.0.2.0.1.7	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: trivial; only 1: trivial; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).	15.0996820927	2877
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	1.2.0.1.1.1.3	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	3.48962593079	987
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	9.03416895866	1098
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.2.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).	14.0077290535	1642
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	8.4029610157	1191
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0	synth with cache (only 1: auto).	0.0220758914948	1
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.1.6.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	12.3032751083	87
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).	0.0464689731598	3
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	1.0.15	synth with cache (only 1: unfold lcm; only 1: intro n; only 1: now nzsimpl').	2.46943306923	1053
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.1.0.2	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.955517053604	236
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.6.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).	1.12345600128	239
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0846590995789	7
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.0.5.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).	1.28830599785	263
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.0.1.0	synth with cache (only 1: intro E; only 1: assert (E' : Some n = Some n'); only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E; only 1: now injection E').	0.128427028656	5
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40	16.1.0.2	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: now induction d).	15.668279171	3427
Coq.Numbers.DecimalZ.of_inj	40	3.0.1	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.151046991348	18
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.11.0.4.7	synth with cache (only 1: apply sqrt_unique; only 1: split; only 1: now nzsimpl; only 1: nzsimpl; only 1: apply lt_succ_diag_r).	2.99660205841	741
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.3.18.1	synth with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	10.5809850693	4090
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.1.0.0.1.10.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	6.84822297096	1675
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.1.8.0	synth with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: order'; only 1: now nzsimpl).	0.718564033508	122
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.0.0.1.1.10.1.7	synth with cache (only 1: rewrite sqrt_up_eqn; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_pred_square; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: now nzsimpl'; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	23.4859879017	8446
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.1.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	2.71285009384	457
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.2.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: now nzsimpl').	0.0877530574799	9
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.2.0.2.1.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl').	3.29632711411	617
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	3.0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.0526838302612	7
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0535509586334	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.106016874313	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	2.0.0.0.1.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.127540111542	12
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0450830459595	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.1.5.0.2	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.78952002525	582
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.165549993515	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.1.4.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.895544052124	103
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.2.0.3.0.8	synth with cache (only 1: intros n1 n2 H; only 1: intro n; only 1: nzinduct n; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	30.3580451012	4783
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.200170993805	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	1.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.10511302948	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	2.10.4	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: firstorder).	0.30704498291	232
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.2.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.0585541725159	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	0.3.6.38.0.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl n); only 1: setoid_rewrite H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	37.380751133	37160
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	8.0.2.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: firstorder).	1.35344910622	338
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	0.0.4.15.0.0.4.0.20.37	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).	12.4806809425	13583
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.044173002243	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	4.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: auto).	0.0400431156158	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0343909263611	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0361211299896	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0340230464935	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0359179973602	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	3	synth with cache (only 1: order).	0.333701848984	64
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	3	synth with cache (only 1: order).	0.178442001343	49
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	5	synth with cache (only 1: order).	0.73844408989	100
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	1.0.4.0	synth with cache (only 1: intros; only 1: apply le_succ_l; only 1: apply lt_eq_cases; only 1: now left).	0.0465838909149	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	1.7.7.0.1	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: auto).	18.5740089417	5976
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.8.0	synth with cache (only 1: intros n m LE; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	1.33942985535	326
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.3.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0432569980621	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.2.1	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0424740314484	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.2.2.0.2	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.233244895935	48
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.0.10	synth with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	7.74889087677	2294
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	1.1.1.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.32751083374	80
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	7.0.2	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	1.70028400421	182
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	1.1.1.12.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	14.7242610455	4226
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.2.1	synth with cache (only 1: intro n; only 1: intro H; only 1: intuition order).	0.281768083572	52
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0241558551788	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.061047077179	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.0.1.1.6.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: order).	8.5206091404	2531
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0240199565887	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0238449573517	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0601570606232	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.0.0.1.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: order).	0.168389797211	30
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.2.3.0.0.0.1.1	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	8.54136705399	2063
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	37.0	synth with cache (only 1: intros RS' n; only 1: order).	11.1964170933	4495
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	1.5	synth with cache (only 1: intros L R n; only 1: firstorder).	0.214493989944	56
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	0.1.0.12.3.12	synth with cache (only 1: intros x y z H1 H2; only 1: firstorder; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	6.54490709305	3875
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	14	synth with cache (only 1: solve_proper).	0.245073080063	78
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.0.0.5	synth with cache (only 1: fix le_div2 1; only 1: destruct n; only 1: trivial; only 1: trivial).	0.427762985229	67
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	3.0.0.6.0.0.0	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: simpl; only 1: intro n; only 1: intro H; only 1: now rewrite PeanoNat.Nat.pred_succ).	12.1728489399	2620
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.0.2.0.0.0.0	synth with cache (only 1: intro n; only 1: revert n; only 1: intro n; only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	0.222748994827	25
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	0.32	synth with cache (only 1: fix gcd_divide 1; only 1: trivial).	27.4661431313	10775
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.2.32	synth with cache (only 1: fix gcd_divide 1; only 1: intros a b; only 1: trivial).	22.2619462013	9069
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	0.0.20	synth with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: trivial).	1.60503101349	881
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	0.22.2.1	synth with cache (only 1: unfold PeanoNat.Nat.lcm; only 1: intro n; only 1: fix even_spec 1; only 1: trivial).	9.80702996254	4533
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0699989795685	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	1.0.0.1.0.7.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	35.4916069508	8255
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.7.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.0524320602417	10
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	7.0.0.0.0.0.25.0.2	synth with cache (only 1: intro n; only 1: intro H; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial).	26.1580688953	15484
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0623362064362	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.1.1.2.4.0	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial).	2.23456215858	542
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0618770122528	6
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0615780353546	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.2.0.7.2.1.5	synth with cache (only 1: intro n; only 1: intro H; only 1: intro H1; only 1: apply gcd_unique; only 1: order; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	17.4450638294	5483
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.602638959885	16
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	12.7184898853	2258
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.1.0.0.1.0.3.3.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: intros [(y, H)| (y, H)]; only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ; only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	8.40449118614	2359
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.5.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.472285985947	62
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	1.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.160884857178	7
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	1.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.205507040024	7
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.2.1.1.0.3.1.6	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	23.5606679916	6614
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	0.2.1.1.0.3.1.6	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	37.1795918941	9559
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0542919635773	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0537049770355	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	3.1.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl').	0.101458072662	9
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	5.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	1.00628495216	162
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	1.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0521421432495	3
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0495789051056	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.0.1.7.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	8.08491301537	1240
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	1.0.8.2.3.4.1.12	synth with cache (only 1: apply log2_unique; only 1: intuition order; only 1: split; only 1: now nzsimpl; only 1: rewrite two_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: intuition order).	18.6018781662	5427
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.2.14.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	3.42734193802	1343
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.4.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order_pos; only 1: order).	0.0975840091705	12
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.0.0.0.0.0.12.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: intros H; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	25.2988700867	4989
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	1.15	synth with cache (only 1: apply log2_up_eqn0; only 1: intuition order).	2.03745102882	480
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	1.1.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.0342700481415	5
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	6.1	synth with cache (only 1: red; only 1: firstorder).	0.11105799675	51
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.1.12.3	synth with cache (only 1: firstorder; only 1: transitivity x; only 1: firstorder; only 1: auto).	1.26357913017	732
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.2.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	15.9519081116	2190
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.1.1.0.5.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	23.6226520538	4263
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0520451068878	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0582091808319	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.3.2.5.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: auto).	3.37474393845	817
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.4.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0803639888763	10
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0	synth with cache (only 1: reflexivity).	0.0181760787964	1
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	3	synth with cache (only 1: now trivial).	0.0206480026245	4
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0193519592285	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	3	synth with cache (only 1: eauto using eq_trans, eq_sym).	4.2475039959	37
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	1.4.1.3.0.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: auto; only 1: rewrite P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	8.18917608261	2198
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.337913036346	76
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	1.13.15	synth with cache (only 1: intros (x1, x2); only 1: fix sqrtrem_spec 1; only 1: auto).	15.8057961464	5644
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	1.8	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.248324155807	88
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	11	synth with cache (only 1: intuition).	1.11345911026	195
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	2.6	synth with cache (only 1: intros n m p H H'; only 1: now transitivity m).	0.327654838562	33
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0904078483582	4
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.0606319904327	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	8.7.3	synth with cache (only 1: intros n; only 1: induction n; only 1: now simpl).	2.01134610176	694
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	23	synth with cache (only 1: firstorder).	6.76557588577	1729
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	4.4.3	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).	1.85140013695	335
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	2.0.3.7.6	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold eq, lt; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	29.8854150772	3439
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	5.14	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	3.80858802795	1347
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	2.12	synth with cache (only 1: fix sqrtrem_spec 1; only 1: eauto).	6.37904000282	1032
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0635480880737	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	1.1.0	synth with cache (only 1: intuition; only 1: firstorder; only 1: firstorder).	0.0404210090637	5
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.13	synth with cache (only 1: vm_compute; only 1: auto).	0.699946880341	382
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	0.0.0.3.11.2	synth with cache (only 1: induction 1; only 1: generalize dependent y; only 1: intro; only 1: constructor; only 1: auto; only 1: auto).	12.1653850079	2266
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	2.5	synth with cache (only 1: apply eqb_eq; only 1: firstorder).	0.0887310504913	9
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	13.7.6.6.16	synth with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: repeat red; only 1: apply Logic.eq_trans).	20.7010419369	10218
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	6.0.0.0.3.11.2	synth with cache (only 1: split; only 1: repeat red; only 1: firstorder; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	2.64769101143	1086
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.2	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.0706601142883	13
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	2	synth with cache (only 1: order).	1.03226709366	3
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0373330116272	2
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.039482831955	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	2	synth with cache (only 1: order).	0.143182039261	24
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	2	synth with cache (only 1: order).	0.427625894547	24
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.1.1.1.1	synth with cache (only 1: destruct (compare x y); only 1: intro H; only 1: intuition; only 1: intuition; only 1: auto).	0.0820569992065	9
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	2	synth with cache (only 1: order).	1.0315759182	3
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0338888168335	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	2	synth with cache (only 1: intuition).	0.0326850414276	3
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	5	synth with cache (only 1: order).	0.0563879013062	11
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	synth with cache (only 1: order).	0.0315179824829	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.294058799744	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0449349880219	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.0422248840332	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	2.92451405525	401
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	2.24023199081	239
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.4.2	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.132720947266	24
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	2.1.2.0.1.0.4	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).	4.44423794746	748
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.0.1.11	synth with cache (only 1: simple induction l; only 1: auto; only 1: simpl; only 1: auto).	0.770920038223	210
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	4.2.1.11	synth with cache (only 1: simple induction l; only 1: auto; only 1: intros x y z; only 1: intuition).	1.64049696922	643
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.1	synth with cache (only 1: induction 1; only 1: auto).	0.0487620830536	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0	synth with cache (only 1: auto).	0.0368251800537	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.0348191261292	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	3.2	synth with cache (only 1: intros; only 1: auto with *).	0.0505039691925	7
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.0318279266357	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	2.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto using OrderTac.eq_sym).	0.0446219444275	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	5.1	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.108631134033	15
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	3.15	synth with cache (only 1: unfold eqk, eqke; only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	2.41348481178	891
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	2	synth with cache (only 1: eauto with ordered_type).	0.0963010787964	20
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	1.2	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.045214176178	5
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	2.2.5.0	synth with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: intuition; only 1: order).	1.52659010887	230
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	6.2.2.7	synth with cache (only 1: constructor; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: eauto with ordered_type).	2.85100007057	586
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.1	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.085235118866	5
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.4.9.19.19.1	synth with cache (only 1: split; only 1: unfold eqk, ltk; only 1: intro; only 1: intro; only 1: order; only 1: eauto with ordered_type).	15.464179039	11656
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0432181358337	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0486850738525	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0483870506287	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.6.3.1	synth with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: firstorder; only 1: auto).	1.66225194931	263
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	2.44	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	30.8351459503	17810
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	5.0.16.13	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: auto; only 1: eauto with ordered_type).	34.2206799984	12399
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.0.5.13.13	synth with cache (only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	27.8372659683	8876
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.22.0	synth with cache (only 1: inversion_clear 1; only 1: intuition; only 1: auto).	4.15308117867	1428
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.2.4.3	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	1.31349611282	233
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.2	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0968909263611	22
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.2.1.0.0.0.0.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	19.9302501678	6056
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.0.0.0.1.1.0.0.0.1.2.1.0.2	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).	10.6664021015	3866
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	2.0	synth with cache (only 1: apply compare_eq_iff; only 1: firstorder).	0.0275278091431	4
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	13.2.8.10.39	synth with cache (only 1: constructor; only 1: repeat red; only 1: iorder; only 1: intros x y z; only 1: iorder).	3.93362998962	5912
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	9.0	synth with cache (only 1: red; only 1: order).	0.537823200226	195
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	2.10	synth with cache (only 1: repeat red; only 1: iorder).	0.901048898697	364
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.0239269733429	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.148836135864	16
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	7.1	synth with cache (only 1: intros; only 1: iorder).	0.17649102211	33
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	5.1	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.107023000717	19
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.1	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0395340919495	4
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	4.0	synth with cache (only 1: intro H; only 1: order).	0.06130194664	6
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0318210124969	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0290369987488	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	5.2	synth with cache (only 1: intro H; only 1: order).	2.70882606506	25
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	2	synth with cache (only 1: order).	1.8913090229	16
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2	synth with cache (only 1: order).	1.02258181572	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	2	synth with cache (only 1: order).	1.02238488197	3
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2	synth with cache (only 1: order).	0.0633130073547	15
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	2	synth with cache (only 1: order).	0.0749430656433	17
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	3	synth with cache (only 1: order).	1.88064002991	13
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1.1.0.4	synth with cache (only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: intuition; only 1: intuition).	0.16769695282	43
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	5.1	synth with cache (only 1: intuition; only 1: order).	0.0752639770508	19
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	2	synth with cache (only 1: intuition).	0.0241811275482	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0.1	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0512239933014	4
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.021696805954	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0.1.0	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0394508838654	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0.1.0	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0416820049286	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	1	synth with cache (only 1: order).	0.0208661556244	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	1.3	synth with cache (only 1: unfold lt; only 1: auto with *).	0.0868968963623	29
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0290610790253	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	2.2	synth with cache (only 1: apply compare_eq_iff; only 1: firstorder).	0.030238866806	6
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	3	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0852839946747	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	4	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0306239128113	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.5.13	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	6.49421882629	2630
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.4	synth with cache (only 1: induction 1; only 1: auto).	0.0950009822845	22
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	4.1.2.0.2.3	synth with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	6.04936313629	1408
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.0.6.4.3.0.9	synth with cache (only 1: induction l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	22.7861280441	7472
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.4.8	synth with cache (only 1: intros x y z H; only 1: rewrite <- H; only 1: auto).	1.17572307587	339
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.0.6	synth with cache (only 1: simple induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.190260887146	30
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	4.1.8	synth with cache (only 1: simple induction l; only 1: auto; only 1: firstorder).	0.47278213501	144
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	17	synth with cache (only 1: eauto with *).	4.40026807785	1063
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	2	synth with cache (only 1: eauto with *).	0.0381751060486	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0636560916901	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	3	synth with cache (only 1: now intros <-).	0.0645730495453	12
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0.2	synth with cache (only 1: induction 1; only 1: auto).	0.0518391132355	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	synth with cache (only 1: auto).	0.0352990627289	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	synth with cache (only 1: auto).	0.0343790054321	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	3	synth with cache (only 1: firstorder).	0.0415818691254	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	2	synth with cache (only 1: now destruct 1).	0.038419008255	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	synth with cache (only 1: auto).	0.0368700027466	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: auto).	0.0359470844269	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0	synth with cache (only 1: auto).	0.0352320671082	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.3.8	synth with cache (only 1: induction 1; only 1: firstorder; only 1: auto).	0.78117108345	173
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	2.1.2	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0786170959473	8
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.0.17.2.16	synth with cache (only 1: intro; only 1: induction 1; only 1: rewrite <- H; only 1: auto; only 1: auto).	7.3922560215	3625
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	2.6.4	synth with cache (only 1: unfold In, MapsTo; only 1: firstorder; only 1: invlist InA).	2.4049949646	606
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	8	synth with cache (only 1: now intros <-).	0.0543642044067	9
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	2	synth with cache (only 1: now intros <-).	0.0461630821228	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.26	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: auto).	6.66014480591	1790
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.2.21.8	synth with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	7.97553396225	3321
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.2.2.3	synth with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	0.242199897766	39
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.1	synth with cache (only 1: induction 1; only 1: auto).	0.0513799190521	3
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0	synth with cache (only 1: auto).	0.0329749584198	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.0324730873108	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0	synth with cache (only 1: auto).	0.0321040153503	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.3.1	synth with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: auto).	0.100071907043	12
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	2.4	synth with cache (only 1: intros l x y H H'; only 1: eauto).	0.09459400177	18
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	11.0.0.2	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	3.78852081299	879
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.1	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.08185505867	5
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	0.7.2.1	synth with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: auto).	1.74717783928	275
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.2.7.4.8	synth with cache (only 1: intros x y z H; only 1: revert z; only 1: induction 1 as [| ? ? ? ? HForall]; only 1: eauto; only 1: auto).	4.48670291901	1838
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	0.42	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	19.9957158566	12572
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	0.38	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	14.3883810043	10167
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	0.6.2	synth with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.201500892639	36
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.2.1.2	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.0813529491425	9
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	7	synth with cache (only 1: intuition).	0.0403559207916	8
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	0.4	synth with cache (only 1: unfold eq, lt, compare; only 1: decide equality).	0.0469489097595	6
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.1.1.0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	19.8566470146	4647
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.1.1.0.0.2.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.79284620285	266
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	8.45102286339	2123
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	10.12.15	synth with cache (only 1: destruct (max_spec n m); only 1: intuition order; only 1: intuition order).	15.102298975	7998
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	4.29	synth with cache (only 1: apply max_r; only 1: intuition order).	0.586995840073	595
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.0.2.2.2.11	synth with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).	2.4770989418	882
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	1	synth with cache (only 1: solve_max).	0.0284450054169	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	0.0.1.2	synth with cache (only 1: split; only 1: solve_max; only 1: revert m; only 1: apply max_l).	0.0909149646759	25
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	1.2.1	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.109215021133	34
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.12236905098	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	8	synth with cache (only 1: solve_max).	0.0730199813843	22
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	3	synth with cache (only 1: solve_max).	0.0803899765015	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	4	synth with cache (only 1: solve_max).	0.0949809551239	24
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.2.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.516638994217	48
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	1	synth with cache (only 1: solve_max).	0.032322883606	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order).	0.140687942505	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0538640022278	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	1.1.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.061448097229	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.19	synth with cache (only 1: apply min_l; only 1: order).	0.152442932129	186
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.1.2.0.2.12	synth with cache (only 1: rewrite le_lteq; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).	1.30731987953	585
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	3	synth with cache (only 1: solve_min).	0.0297689437866	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	5	synth with cache (only 1: solve_min).	0.226906061172	39
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	3	synth with cache (only 1: solve_min).	0.161535978317	38
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	9.99100399017	1888
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	5.38785481453	848
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	2	synth with cache (only 1: solve_min).	0.0315670967102	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	1	synth with cache (only 1: solve_min).	0.0312900543213	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	7	synth with cache (only 1: solve_min).	0.098160982132	24
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.4.1	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.240352869034	38
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	2	synth with cache (only 1: solve_min).	0.0331778526306	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order).	0.109873771667	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0537750720978	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.0.5.0	synth with cache (only 1: intros Hnm Hpq; only 1: apply min_glb_iff; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: solve_min).	0.183990001678	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.6	synth with cache (only 1: apply max_l; only 1: solve_min).	0.0702629089355	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.1.1.1.1	synth with cache (only 1: destruct (min_spec n m) as [(C, E)| (C, E)]; only 1: apply min_r || apply min_l; only 1: solve_max; only 1: apply min_r || apply min_l; only 1: solve_max).	0.132963895798	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	1.1.0.1.0.0.1.1.0.0.1.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	10.8008999825	3067
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	1.2.0.1.0.0.1.3.1.0.1.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	19.8735411167	6381
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.0.0.0.0.0.0.1.23	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	7.30505418777	4976
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.1.24.0	synth with cache (only 1: intros x y z; only 1: apply max_mono; only 1: eauto with *; only 1: auto).	3.13431215286	1896
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.1.36.1	synth with cache (only 1: intros x y z; only 1: apply min_mono; only 1: congruence; only 1: auto).	8.49347782135	6589
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	0.0.0.7.7.3	synth with cache (only 1: intuition; only 1: apply max_case_strong; only 1: destruct 1; only 1: auto; only 1: auto; only 1: auto).	4.40569210052	1980
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.2.2	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0480091571808	8
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.1.3	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0523600578308	8
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.0.1.13.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	1.91417598724	922
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.046403169632	6
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.2.4	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0520870685577	10
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.7.15.3	synth with cache (only 1: unfold eq; only 1: inversion 1; only 1: rewrite H; only 1: discriminate).	14.3205640316	5538
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	0.1	synth with cache (only 1: unfold eq, lt; only 1: decide equality).	0.048721075058	3
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.0.1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: trivial).	0.144545078278	9
Coq.ZArith.Znat.N_nat_Z	40	0.1.0.0.0.0.2.0.0.11	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	3.01200294495	657
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.18652510643	5
Coq.ZArith.Znat.positive_N_Z	40	0	synth with cache (only 1: reflexivity).	0.0481259822845	1
Coq.ZArith.Znat.positive_N_nat	40	0	synth with cache (only 1: trivial).	0.046679019928	1
Coq.ZArith.Znat.positive_nat_N	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.122146844864	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.095901966095	6
Coq.ZArith.Znat.Z_nat_N	40	0.0.1.0.0.0.0.1.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	4.80035090446	749
Coq.ZArith.Znat.Zabs_N_nat	40	0	synth with cache (only 1: now destruct n).	0.0494248867035	1
Coq.ZArith.Znat.Zabs_nat_N	40	2.0.2.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	1.51111888885	182
Coq.ZArith.Znat.N2Z.id	40	0	synth with cache (only 1: now destruct n).	0.048495054245	1
Coq.ZArith.Znat.N2Z.inj	40	1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).	8.33206701279	948
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.5.0	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intro H; only 1: now Morphisms.f_equiv).	2.49712395668	165
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.3.5.40	synth with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: easy).	2.87865018845	1609
Coq.ZArith.Znat.N2Z.inj_0	40	1	synth with cache (only 1: trivial).	0.0537250041962	2
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0462548732758	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.304627180099	10
Coq.ZArith.Znat.N2Z.inj_le	40	3.0.2.1.1.6	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: easy'; only 1: easy'; only 1: easy'; only 1: simpl; only 1: easy).	24.4887988567	2835
Coq.ZArith.Znat.N2Z.inj_lt	40	19	synth with cache (only 1: now destruct n, m).	2.1417119503	252
Coq.ZArith.Znat.N2Z.inj_ge	40	20	synth with cache (only 1: now destruct n, m).	2.92891192436	272
Coq.ZArith.Znat.N2Z.inj_gt	40	25	synth with cache (only 1: now destruct n, m).	5.7082400322	804
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	0	synth with cache (only 1: now destruct n, m).	0.0556490421295	1
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.0553691387177	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.3	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.103437900543	7
Coq.ZArith.Znat.N2Z.inj_pred_max	40	5.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.108752965927	9
Coq.ZArith.Znat.N2Z.inj_pred	40	7.2.3.0	synth with cache (only 1: intro H; only 1: destruct n; only 1: easy; only 1: now destruct p).	4.92279100418	683
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.9.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	3.28477287292	891
Coq.ZArith.Znat.N2Z.inj_quot2	40	0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0887589454651	3
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.153139829636	10
Coq.ZArith.Znat.Z2N.id	40	1.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0986430644989	6
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	2.1.0.0.3.1	synth with cache (only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: intros; only 1: now Morphisms.f_equiv).	4.92559289932	874
Coq.ZArith.Znat.Z2N.inj_0	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.0663659572601	3
Coq.ZArith.Znat.Z2N.inj_pos	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.139074802399	8
Coq.ZArith.Znat.Z2N.inj_neg	40	0	synth with cache (only 1: auto).	0.0497012138367	1
Coq.ZArith.Znat.Z2N.inj_add	40	6.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.678727149963	39
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	5.03445601463	363
Coq.ZArith.Znat.Z2N.inj_succ	40	1.1.1.3.0.0.0.1	synth with cache (only 1: destruct n; only 1: intro; only 1: simpl; only 1: trivial; only 1: intro H; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).	10.4058690071	1577
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.0.1.0.0.5	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).	2.08355903625	168
Coq.ZArith.Znat.Z2N.inj_compare	40	1.7	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	1.64703011513	145
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.6.0.0.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: now destruct p; only 1: simpl; only 1: trivial).	11.1098248959	832
Coq.ZArith.Znat.Z2N.inj_quot2	40	2.2.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.147110939026	17
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.133292198181	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	1.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1 || trivial).	0.101063013077	6
Coq.ZArith.Znat.Zabs2N.id_abs	40	1.0.1.4	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.541075944901	22
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.349210977554	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0684449672699	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	synth with cache (only 1: trivial).	0.0596559047699	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0569179058075	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.162455797195	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.0.1.0.0.4.1	synth with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	8.70547389984	795
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	18.6780500412	1022
Coq.ZArith.Znat.Zabs2N.inj_mul	40	3	synth with cache (only 1: now destruct n, m).	8.17412805557	432
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	3.0.0.5.4.0	synth with cache (only 1: destruct n; only 1: easy; only 1: intros Hn; only 1: simpl; only 1: now destruct p; only 1: easy).	19.8486230373	2915
Coq.ZArith.Znat.Zabs2N.inj_compare	40	2.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.0830640792847	4
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0892331600189	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0872528553009	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	1.1.0.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct p).	2.52728390694	144
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	2	synth with cache (only 1: now destruct n, m).	0.0609660148621	3
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0606229305267	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0538930892944	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	2.0.2.8	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	4.87906694412	682
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	3	synth with cache (only 1: now destruct n).	0.143881082535	21
Coq.ZArith.Znat.Nat2Z.id	40	0.0.1.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0960268974304	6
Coq.ZArith.Znat.Nat2Z.inj	40	0.21.1	synth with cache (only 1: intro H; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	39.006510973	9668
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now subst).	0.098709821701	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	8.10	synth with cache (only 1: unfold Z.le; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	13.3961250782	3512
Coq.ZArith.Znat.Nat2Z.inj_lt	40	9.8	synth with cache (only 1: unfold Z.lt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	6.1750600338	914
Coq.ZArith.Znat.Nat2Z.inj_ge	40	4.0.0.2	synth with cache (only 1: unfold Z.ge; only 1: symmetry; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	1.17402100563	20
Coq.ZArith.Znat.Nat2Z.inj_gt	40	4.0.3	synth with cache (only 1: unfold Z.gt; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	0.170269012451	20
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40
Coq.ZArith.Znat.Z2Nat.inj	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0855791568756	4
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.101446151733	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	synth with cache (only 1: trivial).	0.0492680072784	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: now destruct n).	0.0512068271637	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: trivial).	0.047611951828	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	9.3.1.9	synth with cache (only 1: unfold Z.succ; only 1: intro H; only 1: rewrite Z2N.inj_add by easy; only 1: now Nat.nzsimpl').	15.5420980453	3309
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0508980751038	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	7.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0711970329285	9
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.1.0.0.0.0.0.1.0.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	13.1694040298	2727
Coq.ZArith.Znat.Zabs2Nat.id	40	0.0.1.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0957760810852	7
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0483667850494	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.048259973526	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0474438667297	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0812978744507	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0826721191406	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	6.6.0.0.9	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	5.26951384544	1715
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Z2Nat.id).	0.18567109108	12
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	0.0.0.0.1.0.1.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: trivial; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: auto; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	37.1409659386	6152
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	1.0.0.2.1.1.0.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: auto; only 1: intros Hx; only 1: now destruct Hx).	33.5374429226	7373
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0866329669952	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	9.9.0.1.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	15.9407441616	4734
Coq.ZArith.Zcompare.Zle_compare	40	3.0.0.30.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: auto; only 1: auto; only 1: Z.order).	25.8437650204	5561
Coq.ZArith.Zcompare.Zlt_compare	40	2.0.14.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: auto; only 1: Z.order).	5.34162378311	1255
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0864770412445	5
Coq.ZArith.Zcompare.Zgt_compare	40	1.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.0588660240173	3
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	6.0	synth with cache (only 1: Z.bitwise; only 1: now destruct a).	0.10756111145	8
Coq.ZArith.Zquot.Zrem_0_l	40	0.0	synth with cache (only 1: Z.bitwise; only 1: trivial).	0.105252981186	2
Coq.ZArith.Zquot.Zquot_0_l	40	0	synth with cache (only 1: now destruct a).	0.0695929527283	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.2.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	2.23846507072	127
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	2.2.3.0.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	7.87978100777	441
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.6.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	2.33026194572	143
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.147462844849	6
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: reflexivity; only 1: now destruct p; only 1: now destruct p).	2.73750686646	162
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.4.4	synth with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.449492931366	85
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	6	synth with cache (only 1: constructor).	0.196239948273	32
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	2.0.1.0.0.0	synth with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.150424957275	9
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	1.0.7.8.0	synth with cache (only 1: refine (nat_rect _ _ _); only 1: constructor; only 1: fix le_div2 1; only 1: intros; only 1: auto with arith).	7.41210508347	2143
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0	synth with cache (only 1: reflexivity).	0.0648379325867	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0	synth with cache (only 1: reflexivity).	0.0654530525208	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: reflexivity).	0.0638530254364	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	2.7	synth with cache (only 1: intros n m; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.93266296387	105
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	1.0.0.0.2.0.10.15.6	synth with cache (only 1: intros n H H1; only 1: apply H; only 1: destruct n; only 1: discriminate; only 1: destruct p; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: trivial).	39.0365989208	16348
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	2.9.5	synth with cache (only 1: intro; only 1: fix le_div2 1; only 1: auto).	4.59373903275	1085
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0	synth with cache (only 1: reflexivity).	0.0646350383759	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	3.8.9	synth with cache (only 1: intros n Hn; only 1: apply Zeven_bool_iff in Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	4.25230789185	1023
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	0.0.1.0.0.0.0.0.0.1	synth with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	3.24906110764	322
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.11	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	1.92013406754	226
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.123953819275	7
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	1	synth with cache (only 1: now destruct n).	0.042995929718	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	synth with cache (only 1: now destruct n).	0.0435409545898	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	3	synth with cache (only 1: now destruct n).	0.0614829063416	4
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.239343166351	10
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0615499019623	2
Coq.ZArith.BinInt.Z.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0466749668121	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0453038215637	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0589270591736	2
Coq.ZArith.BinInt.Z.opp_succ	40	7.0.1.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct p).	14.1919989586	1718
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0590598583221	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	synth with cache (only 1: now destruct n).	0.0427958965302	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0442519187927	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40	3.5.4.3	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: fix even_spec 1; only 1: assumption).	16.5150301456	2992
Coq.ZArith.BinInt.Z.leb_le	40	3.5.4.4	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: fix even_spec 1; only 1: assumption).	18.0465590954	3248
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	synth with cache (only 1: reflexivity).	0.0391271114349	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	synth with cache (only 1: reflexivity).	0.0391750335693	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.2.1.0.0.8	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: now destruct 2; only 1: trivial).	3.6898419857	656
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.2.0.0.1.7	synth with cache (only 1: unfold le, min; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: trivial; only 1: intuition; only 1: trivial).	5.65441799164	1159
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	0.0	synth with cache (only 1: intro H; only 1: now destruct n).	0.068482875824	2
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0940539836884	5
Coq.ZArith.BinInt.Z.sgn_null	40	7	synth with cache (only 1: now destruct n).	0.101610898972	27
Coq.ZArith.BinInt.Z.sgn_pos	40	6.0	synth with cache (only 1: intro H; only 1: now destruct n).	0.0730700492859	8
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.0520441532135	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: reflexivity).	0.0465240478516	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.5.1.4.17	synth with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: intro H; only 1: now f_equiv; only 1: now destruct 1 || intros _).	11.6347620487	2918
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	synth with cache (only 1: trivial using pos_sub_opp).	0.0470590591431	1
Coq.ZArith.BinInt.Z.square_spec	40	1.0.1.1.0.1.1.3	synth with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	3.76534509659	515
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	synth with cache (only 1: now destruct n).	0.0494120121002	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.0.4.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).	1.33815288544	247
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	synth with cache (only 1: now destruct n).	0.046932220459	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	1	synth with cache (only 1: reflexivity).	0.875677108765	2
Coq.ZArith.BinInt.Z.succ_double_spec	40	0	synth with cache (only 1: now destruct n).	0.0495190620422	1
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.0490009784698	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.2	synth with cache (only 1: intros _; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.724134922028	71
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.0.0.0.0.0.1	synth with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite N.mul_comm).	0.1838722229	8
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.0.0.0.0.0.1	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite N.mul_comm).	0.168508052826	8
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.162662029266	8
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	synth with cache (only 1: trivial).	0.0589919090271	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	8	synth with cache (only 1: now destruct n).	0.0555229187012	9
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	synth with cache (only 1: now destruct n).	0.0588068962097	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	synth with cache (only 1: now destruct a).	0.0540001392365	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	6	synth with cache (only 1: apply N.gt_lt_iff).	0.121840953827	16
Coq.ZArith.BinInt.Z.lt_gt	40	1	synth with cache (only 1: apply gt_lt_iff).	0.110055923462	11
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	6	synth with cache (only 1: apply N.ge_le_iff).	0.153013944626	20
Coq.ZArith.BinInt.Z.le_ge	40	1	synth with cache (only 1: apply ge_le_iff).	0.110501050949	11
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	4.5.2.5	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: trivial).	13.7439820766	3278
Coq.ZArith.BinInt.Z.geb_le	40	1.8.8.0	synth with cache (only 1: unfold leb, le; only 1: revert m; only 1: fix even_spec 1; only 1: destr_bool).	15.9830110073	3265
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40	3	synth with cache (only 1: apply mul_cancel_l).	0.140642881393	25
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.3	synth with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.138325214386	23
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	1.0.0	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl).	0.333736896515	4
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40
Coq.ZArith.BinInt.Pos2Z.id	40	1	synth with cache (only 1: trivial).	0.0820081233978	2
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0809509754181	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: congruence).	0.109495162964	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	3	synth with cache (only 1: now destruct p).	0.0887107849121	4
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	4	synth with cache (only 1: now destruct p).	0.102474927902	5
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: trivial).	0.0841538906097	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0990598201752	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.101749897003	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	3.0	synth with cache (only 1: simpl; only 1: now destruct p).	0.105741977692	5
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0	synth with cache (only 1: trivial).	0.0851271152496	1
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.0.1.1.2	synth with cache (only 1: destruct p; only 1: trivial; only 1: trivial; only 1: intros H; only 1: now destruct H).	0.95204615593	88
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	synth with cache (only 1: reflexivity).	0.084156036377	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	8	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0872640609741	9
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	1	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0851111412048	2
Coq.ZArith.BinInt.Pos2Z.inj_square	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.0984899997711	3
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	4.0	synth with cache (only 1: revert q; only 1: trivial).	2.71251606941	265
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: trivial).	0.0841388702393	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	synth with cache (only 1: reflexivity).	0.0830450057983	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	synth with cache (only 1: reflexivity).	0.0819520950317	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.0968840122223	3
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0	synth with cache (only 1: reflexivity).	0.081955909729	1
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.0.0.1.0.6.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	3.60638403893	499
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0796129703522	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: congruence).	0.106307029724	3
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1).	0.0794138908386	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.106657981873	3
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	synth with cache (only 1: reflexivity).	0.0852007865906	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0	synth with cache (only 1: easy).	0.0895171165466	1
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.0833778381348	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0875730514526	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	2.1.1.3	synth with cache (only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: trivial; only 1: trivial; only 1: easy).	1.37514591217	126
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.0870361328125	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	3.0.1	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: trivial).	0.129810094833	13
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	1.0.1.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.130966901779	6
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.084774017334	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.100488901138	2
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.0837230682373	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.0834457874298	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	synth with cache (only 1: trivial).	0.0827469825745	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.0821719169617	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.0835978984833	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.1.0	synth with cache (only 1: revert q; only 1: intro n; only 1: trivial).	1.24151492119	117
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.0832459926605	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.0827300548553	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.0.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.199609994888	8
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	1	synth with cache (only 1: apply Z.testbit_Zpos).	0.16190290451	14
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	15	synth with cache (only 1: now destruct x).	0.291235923767	106
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	synth with cache (only 1: trivial).	0.083967924118	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	2	synth with cache (only 1: now destruct x).	0.278156042099	30
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.0927309989929	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.0.0.0.3.2.0.1	synth with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: easy).	3.44177103043	416
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.180604934692	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.179735183716	5
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.179822921753	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.3.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: simpl; only 1: easy || now destruct y; only 1: easy || now destruct y).	1.39180111885	8
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.172417163849	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	0.143116950989	5
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.307453870773	35
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.1	synth with cache (only 1: intros n1 n2 H; only 1: now f_equiv).	0.132241010666	3
Coq.ZArith.BinInt.ZL0	40	2	synth with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.158437013626	3
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	10	synth with cache (only 1: now Z.nzsimpl').	3.80553197861	292
Coq.ZArith.BinInt.Z_eq_mult	40	4.1.5	synth with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: auto).	0.633479118347	180
Coq.ZArith.Zcomplements.floor_gt0	40	0	synth with cache (only 1: easy).	0.0493059158325	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40	0.39.16	synth with cache (only 1: intros n m; only 1: fix sqrtrem_spec 1; only 1: auto).	34.1119179726	26362
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	14	synth with cache (only 1: now destruct n).	0.61070895195	204
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	1	synth with cache (only 1: auto).	0.0498740673065	2
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.2.0.0.0.0.2.0.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition).	37.7204709053	6537
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40
Coq.ZArith.Zeven.Zeven_not_Zodd	40	5.5.0.0.2.1	synth with cache (only 1: intros H; only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: now destruct p).	20.6628739834	3978
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.2.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.217873811722	14
Coq.ZArith.Zeven.Zeven_Sn	40	4.9.1	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: now destruct n as [| [| | ]| [| | ]]).	2.83166694641	568
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	6.12.1	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: now destruct n as [| [| | ]| [| | ]]).	34.2777061462	4806
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	1.3	synth with cache (only 1: intros; only 1: now destruct n as [| [| | ]| [| | ]]).	1.14958000183	73
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	1.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.469786882401	21
Coq.ZArith.Zeven.Zodd_quot2	40	6.2.0	synth with cache (only 1: boolify_even_odd; only 1: intros m IH; only 1: now destruct n as [| [| | ]| [| | ]]).	3.59682703018	305
Coq.ZArith.Zeven.Zodd_quot2_neg	40	4.0.2.0	synth with cache (only 1: intros Hn Hn'; only 1: Z.nzsimpl; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [| | ]| [| | ]]).	2.63101601601	164
Coq.ZArith.Zeven.Zquot2_opp	40	0.0.0.4.0.0.0.5.0.23	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	30.5847079754	3834
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	3.0.0	synth with cache (only 1: intro H; only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.119812965393	6
Coq.ZArith.Zeven.Zodd_ex	40	0.1.4.4.3	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	31.9604301453	2674
Coq.ZArith.Zeven.Zeven_2p	40	5	synth with cache (only 1: now destruct p).	0.0700180530548	6
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	2.2.1.3.1.3.0.12	synth with cache (only 1: destruct p; only 1: simpl; only 1: tauto; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: split).	21.9908869267	3031
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.2.1.3.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	1.59435200691	189
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.133676052094	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	2.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.432176113129	7
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.0656640529633	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	synth with cache (only 1: apply Z.divide_opp_l).	0.0604050159454	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	1	synth with cache (only 1: apply Z.divide_abs_l).	0.0582859516144	2
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.0.9.2.17	synth with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: subst; only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: trivial).	32.2826089859	7311
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	3.0	synth with cache (only 1: intro H; only 1: Z.order).	0.0618751049042	5
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	4.16	synth with cache (only 1: intros P Q H l; only 1: firstorder).	6.41378593445	1344
Coq.ZArith.Znumtheory.Zis_gcd_0	40	10	synth with cache (only 1: firstorder).	0.658632993698	87
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.5.0.1.29.0	synth with cache (only 1: intros n; only 1: split; only 1: exists n; only 1: now Z.nzsimpl'; only 1: auto with zarith; only 1: trivial).	13.5329520702	5207
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.3	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: trivial).	0.104363918304	7
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	1.0.2.1.2	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: trivial; only 1: intuition).	0.382717132568	64
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.1.1.3.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.33873295784	10
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.2.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: assert (d | c) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.547788143158	32
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40	0.0.11	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Ha Hb; only 1: auto).	1.50339794159	311
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	1.0.0.1.2	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: intuition).	1.01563286781	27
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.1.1.2	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl'; only 1: trivial).	0.201685190201	27
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	1.0	synth with cache (only 1: induction 1; only 1: auto).	0.0751631259918	3
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	0.0.3.12	synth with cache (only 1: simple induction 1; only 1: intros; only 1: contradict H; only 1: discriminate).	0.646552085876	176
Coq.ZArith.Znumtheory.not_prime_1	40	6.19	synth with cache (only 1: simple induction 1; only 1: inversion 1).	4.72316002846	1403
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	4.28	synth with cache (only 1: intros (s, H); only 1: now apply (Zlt_le_succ 1)).	9.95250105858	2970
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	1.0.8	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Ha Hb; only 1: auto).	1.26817798615	246
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0894110202789	3
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0916059017181	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0875618457794	3
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0881991386414	7
Coq.ZArith.Zdiv.Zmod_1_r	40	9.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl').	2.29801797867	143
Coq.ZArith.Zdiv.Zdiv_1_r	40	1.0	synth with cache (only 1: intro n; only 1: now Z.nzsimpl).	0.112434148788	3
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.3.7.20.3	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	27.410834074	10491
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.2.3.0	synth with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: trivial).	0.0984108448029	9
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.7	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	2.03671097755	108
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.0888421535492	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: trivial).	0.104171991348	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.0942120552063	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	4.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0695939064026	6
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	8.0	synth with cache (only 1: intros; only 1: intuition).	0.100945949554	10
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	4.0.6	synth with cache (only 1: unfold eqm; only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.84654593468	261
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	0.1.12	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	3.17296504974	511
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	1.7.0	synth with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.811062097549	84
Coq.ZArith.Zdiv.Zeven_mod	40	2.13.0	synth with cache (only 1: intros; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	17.7925231457	2121
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.3.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.582772016525	35
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.3.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: trivial).	0.269889116287	24
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.1	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.123631000519	6
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.0.3.0.5.0	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: intros H; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	3.5175511837	458
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.3.1.4	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: trivial; only 1: auto).	2.64874100685	257
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.2	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.100962877274	14
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0.0.3	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.100895881653	15
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	0.0.0.19	synth with cache (only 1: induction n; only 1: auto; only 1: auto; only 1: auto).	4.63382697105	1657
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0369210243225	2
Coq.ZArith.Int.Z_as_Int.i2z_0	40	1	synth with cache (only 1: reflexivity).	0.0500209331512	2
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.0469610691071	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	3	synth with cache (only 1: now Z.nzsimpl').	0.0805020332336	4
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.0476429462433	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	synth with cache (only 1: trivial).	0.0430638790131	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	10	synth with cache (only 1: now destruct n).	0.0666677951813	21
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	synth with cache (only 1: reflexivity).	0.0422868728638	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.0408301353455	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.0399010181427	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	synth with cache (only 1: trivial).	0.0387940406799	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0376718044281	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0365290641785	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: simpl; only 1: trivial).	0.22076010704	13
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0662450790405	2
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	4.5.0.2	synth with cache (only 1: generalize 1; only 1: unfold Z.pow_pos; only 1: intros; only 1: apply Pos2Nat.inj_iter).	3.36176609993	564
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	1.0.1.0.2.0	synth with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: now destruct Hn).	0.244020938873	18
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0	synth with cache (only 1: auto).	0.0469019412994	1
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.126449108124	7
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	6.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	0.131610870361	13
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	13	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.268959999084	60
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	5	synth with cache (only 1: apply two_power_pos_equiv).	0.2485871315	23
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	0.0.0.0.0.3.6	synth with cache (only 1: destruct x; only 1: constructor; only 1: simpl; only 1: intros H; only 1: easy; only 1: simpl; only 1: easy).	1.92341899872	397
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40
Coq.ZArith.auxiliary.Zle_left	40	1	synth with cache (only 1: apply Z.le_0_sub).	0.220494031906	16
Coq.ZArith.auxiliary.Zle_left_rev	40	1	synth with cache (only 1: apply Z.le_0_sub).	0.084508895874	11
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0639650821686	11
Coq.ZArith.auxiliary.Zlt_left_lt	40	14	synth with cache (only 1: apply Z.lt_0_sub).	1.31819701195	132
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	2.9	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	1.36370110512	111
Coq.ZArith.auxiliary.Zgt_left	40	1.0.0.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	2.4990799427	245
Coq.ZArith.auxiliary.Zgt_left_gt	40	7.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.108144044876	16
Coq.ZArith.auxiliary.Zgt_left_rev	40	2.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.119341135025	21
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	10	synth with cache (only 1: now destruct p).	0.0671708583832	21
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	62	synth with cache (only 1: Z.solve_min).	8.73993587494	4821
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	29	synth with cache (only 1: now destruct p).	1.06820106506	420
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	7.28	synth with cache (only 1: Nat.bitwise; only 1: now destruct a).	2.07360696793	686
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.1.0.0.0.0.2.0.1.2	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: intro H; only 1: auto; only 1: left; only 1: auto; only 1: right; only 1: right; only 1: auto).	4.90530800819	713
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.2	synth with cache (only 1: intro H; only 1: Z.order).	0.345842838287	35
Coq.ZArith.Zorder.Zlt_not_le	40	0.3	synth with cache (only 1: intro H; only 1: Z.order).	0.299160003662	37
Coq.ZArith.Zorder.Zle_not_gt	40	1.0.2.0.0	synth with cache (only 1: nzinduct n m; only 1: intros H; only 1: auto; only 1: intro n; only 1: intuition).	0.305209159851	14
Coq.ZArith.Zorder.Zgt_not_le	40	1.0.2.0.0	synth with cache (only 1: nzinduct n m; only 1: intros H; only 1: auto; only 1: intro n; only 1: intuition).	0.304558038712	14
Coq.ZArith.Zorder.Znot_ge_lt	40	7.6.0	synth with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).	1.29324579239	293
Coq.ZArith.Zorder.Znot_lt_ge	40	5.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0895190238953	13
Coq.ZArith.Zorder.Znot_gt_le	40	0.1	synth with cache (only 1: intro H; only 1: trivial).	0.0641360282898	3
Coq.ZArith.Zorder.Znot_le_gt	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.101538896561	13
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	0.3.1	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.559890985489	65
Coq.ZArith.Zorder.Zgt_irrefl	40	38	synth with cache (only 1: now destruct n).	1.32725000381	979
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	1.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.810654163361	68
Coq.ZArith.Zorder.Zle_gt_trans	40	4.1.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.33975815773	43
Coq.ZArith.Zorder.Zgt_le_trans	40	4.1.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.988119125366	54
Coq.ZArith.Zorder.Zge_trans	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0875151157379	4
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0818479061127	4
Coq.ZArith.Zorder.Zsucc_gt_reg	40	9.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.627814054489	107
Coq.ZArith.Zorder.Zsucc_le_reg	40	8	synth with cache (only 1: apply Z.succ_le_mono).	0.0752370357513	16
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.0482518672943	1
Coq.ZArith.Zorder.Zgt_succ	40	2.11	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.183120965958	78
Coq.ZArith.Zorder.Znot_le_succ	40	3.0.8.6	synth with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.696383953094	381
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0466349124908	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.0471711158752	1
Coq.ZArith.Zorder.Zgt_succ_le	40	3.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.103978872299	19
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0474729537964	1
Coq.ZArith.Zorder.Zle_succ_gt	40	2.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.119872093201	20
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0571000576019	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	0.0.5.5.1.13	synth with cache (only 1: destruct n as [| p| p]; only 1: intros n; only 1: easy; only 1: now destruct p; only 1: intros H; only 1: destr_eq H).	13.3570029736	2569
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.16	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	1.5367770195	366
Coq.ZArith.Zorder.Zle_neg_pos	40	3.0	synth with cache (only 1: intros a b; only 1: easy).	0.0871109962463	5
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0	synth with cache (only 1: intros; only 1: easy).	0.0747699737549	2
Coq.ZArith.Zorder.Zle_0_pos	40	3.0	synth with cache (only 1: intros n; only 1: easy).	0.0788199901581	5
Coq.ZArith.Zorder.Zlt_neg_0	40	0	synth with cache (only 1: easy).	0.0533089637756	1
Coq.ZArith.Zorder.Zle_0_nat	40	7.0.3.0.1	synth with cache (only 1: intros; only 1: induction n; only 1: intuition; only 1: simpl; only 1: easy).	3.19397091866	741
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0463259220123	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0477108955383	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	24	synth with cache (only 1: apply Z.add_le_mono_l).	2.71458888054	900
Coq.ZArith.Zorder.Zplus_le_reg_r	40	10	synth with cache (only 1: apply Z.add_le_mono_r).	0.469783067703	46
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	6	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0744819641113	14
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	8	synth with cache (only 1: apply Z.add_lt_mono_r).	0.077180147171	15
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.6	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.102098941803	13
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.103929042816	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.18	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.833384990692	314
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0825600624084	2
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0509550571442	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	1	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0511898994446	2
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0930991172791	3
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	6.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.120502948761	19
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	7.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.104042053223	10
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0953030586243	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0581569671631	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0854120254517	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0530781745911	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.262270927429	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0937697887421	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	47.1.4	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order_pos).	26.4650399685	14285
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	30.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	7.94182109833	2883
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0835280418396	3
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.17	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	2.82564020157	897
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	15	synth with cache (only 1: apply Z.le_0_sub).	1.06711888313	168
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40	2.1.3.0.3.2.3.0.22.45	synth with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: intro H; only 1: Z.swap_greater; only 1: subst; only 1: Z.order; only 1: now Z.swap_greater; only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).	19.364967823	10838
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	5	synth with cache (only 1: apply Z.leb_le).	0.065997838974	11
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	1.18	synth with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	1.6532189846	415
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	1	synth with cache (only 1: trivial).	0.0434899330139	2
Coq.ZArith.Zbool.Zone_min_pos	40	12.13	synth with cache (only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	2.09282112122	495
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.8	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	0.610884189606	64
Coq.ZArith.Zbool.Zge_is_le_bool	40
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	15.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	14.0782930851	2660
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0830399990082	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.2	synth with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: now intuition).	0.200174093246	14
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.100028038025	6
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	2.7.4	synth with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: decide equality).	1.41352009773	346
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	0.0.0.0.10.8	synth with cache (only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	8.13728284836	2522
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	4.1.0.1.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.76451587677	132
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.0.2.2	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: constructor; only 1: trivial).	0.116016864777	14
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto with relations; only 1: left; only 1: auto with relations).	1.98923301697	232
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.4.1	synth with cache (only 1: intro n; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.103025913239	9
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.0495729446411	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.0.3.0.1.8	synth with cache (only 1: destruct b as [| b| b]; only 1: Z.order; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: trivial).	6.46685695648	1061
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.3	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.047749042511	14
Coq.Program.Wf.Well_founded.Fix_F_inv	40	0.3.10.5.6.3.0	synth with cache (only 1: intro x; only 1: intros; only 1: symmetry; only 1: destruct r using Acc_inv_dep; only 1: rewrite <- Wf.Fix_F_eq; only 1: apply F_ext; only 1: auto).	19.7479548454	12507
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0511479377747	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.6	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0277271270752	8
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.28.3.9.1	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Fix_F_eq; only 1: auto).	8.00343990326	11148
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	1.7	synth with cache (only 1: apply Fix_F_inv; only 1: auto).	0.0380470752716	17
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	0.12.6.3.41.7	synth with cache (only 1: intro H; only 1: intro; only 1: intro z; only 1: intros f [x]; only 1: subst; only 1: auto).	15.2808859348	28466
Coq.Program.Equality.JMeq_eq_refl	40	0	synth with cache (only 1: apply UIP_refl).	0.0149538516998	1
Coq.Program.Equality.UIP_refl_refl	40	4	synth with cache (only 1: apply UIP).	0.0487179756165	19
Coq.Program.Equality.inj_pairT2_refl	40	6	synth with cache (only 1: apply UIP_refl).	0.0163490772247	7
Coq.Program.Equality.solution_left	40	1.5.10	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.168725967407	180
Coq.Program.Equality.solution_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0246291160583	3
Coq.Program.Equality.deletion	40	1	synth with cache (only 1: trivial).	0.0148739814758	2
Coq.Program.Equality.simplification_heq	40	4.3.5	synth with cache (only 1: intros; only 1: subst; only 1: auto).	0.173072099686	127
Coq.Program.Equality.simplification_existT2	40	0.3.4.0.7	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.441981077194	372
Coq.Program.Equality.simplification_existT1	40	0.0.3.76.8	synth with cache (only 1: intro H; only 1: inversion 1; only 1: apply H; only 1: trivial; only 1: trivial).	24.7396931648	87954
Coq.Program.Equality.simplification_K	40	1.1.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: trivial).	0.025848865509	5
Coq.Program.Combinators.compose_id_left	40	1	synth with cache (only 1: trivial).	0.0150640010834	2
Coq.Program.Combinators.compose_id_right	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0189468860626	3
Coq.Program.Combinators.compose_assoc	40	1	synth with cache (only 1: trivial).	0.0150811672211	2
Coq.Program.Combinators.flip_flip	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0199410915375	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0198559761047	3
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	3.2.0.0.2	synth with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.771944999695	128
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40	2.1.3.4.2.3.0.3	synth with cache (only 1: induction l as [| x l IHl]; only 1: auto; only 1: intros H; only 1: specialize (H x); only 1: simpl in H; only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate; only 1: now elim NEQ).	21.147051096	6314
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.0.0.0.2.3.1.9.0.1	synth with cache (only 1: induction stack as [| []]; only 1: simpl; only 1: constructor; only 1: simpl; only 1: induction 1; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: intros; only 1: auto).	11.7085289955	3956
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40	2.0.30	synth with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto with arith).	17.5707352161	6079
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	1.0.9	synth with cache (only 1: induction l; only 1: auto; only 1: auto).	0.447288036346	98
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	0.0.3.12	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	1.36116909981	509
Coq.Sorting.Permutation.Permutation_cons	40	1.4.4	synth with cache (only 1: intros a a' Ha n; only 1: subst; only 1: auto).	0.186990976334	51
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	0.3.4.0.0.0.4	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto; only 1: firstorder; only 1: auto).	8.43159103394	1786
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	1.0.1.8	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	1.80711984634	250
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0	synth with cache (only 1: auto).	0.033509016037	1
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	15.0.0.6	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: eauto using Permutation_in).	10.3867061138	4114
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	2.0.0.0.0.0.0.0.0.23	synth with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	7.9199681282	2259
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	11	synth with cache (only 1: constructor).	0.245820045471	93
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	4.8	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.219907999039	100
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	0.4.6.4	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	3.21201491356	726
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	2.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0708041191101	6
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	3.0.15.1.1	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).	8.84598016739	4253
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	2.0.0.0.0.0.1.1.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	8.45910000801	1343
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	5.0.2.1	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: firstorder).	0.495322942734	101
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.7.6	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: auto).	3.65100693703	778
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	0.0.0.12.1.1	synth with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto; only 1: auto; only 1: auto).	16.231263876	2667
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.12	synth with cache (only 1: inversion 1; only 1: auto).	0.480731964111	200
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.3.4	synth with cache (only 1: intros Pdec l; only 1: inversion 1; only 1: auto).	0.151465892792	29
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.4.2	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0619990825653	13
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	1.0.0	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder using StronglySorted_inv).	0.0481119155884	4
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.060467004776	3
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0	synth with cache (only 1: auto).	0.0457668304443	1
Coq.Sorting.Heap.defs.invert_heap	40	0.8.10	synth with cache (only 1: intro; only 1: inversion 1; only 1: auto).	2.27194595337	508
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.0.1.0.1.1.1.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).	3.82197499275	674
Coq.Sorting.Heap.defs.low_trans	40	7.3.1.0.5	synth with cache (only 1: simple induction T; only 1: auto; only 1: simpl; only 1: intros; only 1: eauto).	10.2836158276	2235
Coq.Sorting.Heap.defs.Equivalence_instance_0	40	18.1.1.5	synth with cache (only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: congruence).	27.7631049156	2812
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.1.1	synth with cache (only 1: repeat red; only 1: simpl; only 1: auto).	0.0832390785217	5
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	0.5	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.217710971832	22
Coq.Sorting.Heap.defs.list_to_heap	40	0.8	synth with cache (only 1: fix merge 1; only 1: auto).	0.0769917964935	16
Coq.Sorting.Heap.defs.heap_to_list	40	0.14	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	1.44967603683	182
Coq.Sorting.Heap.defs.treesort	40	0.6	synth with cache (only 1: fix merge 1; only 1: auto).	0.0805661678314	15
Coq.Init.Wf.Well_founded.Acc_inv	40	1.3.5	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.0776250362396	125
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0205509662628	5
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0206258296967	5
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.23	synth with cache (only 1: intros f [x]; only 1: auto).	0.237210988998	600
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	1.5.4.4.12.4.5	synth with cache (only 1: intro z; only 1: intro H; only 1: reflexivity || destruct H; only 1: auto; only 1: intro H; only 1: apply False_rec; only 1: auto).	6.51937484741	19592
Coq.Init.Tactics.decide_right	40	2.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0223350524902	7
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: auto).	0.00986099243164	2
Coq.Init.Peano.not_eq_S	40	0.0	synth with cache (only 1: intro H; only 1: auto).	0.0130078792572	2
Coq.Init.Peano.O_S	40	0	synth with cache (only 1: discriminate).	0.01016497612	1
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.10.0.3	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.416371107101	519
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0195958614349	6
Coq.Init.Peano.plus_n_Sm	40	1.0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0204091072083	10
Coq.Init.Peano.plus_Sn_m	40	0.0.0	synth with cache (only 1: intros n m; only 1: simpl; only 1: auto).	0.014888048172	3
Coq.Init.Peano.mult_n_O	40	1.0.0.0.3	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0208520889282	9
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.5	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0171871185303	8
Coq.Init.Peano.le_n_S	40	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0174298286438	3
Coq.Init.Peano.nat_case	40	1.2.1.1	synth with cache (only 1: induction n; only 1: intros n m; only 1: auto; only 1: auto).	0.0202610492706	9
Coq.Init.Peano.nat_double_ind	40	1.1.9.2.2	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.518205165863	773
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.2.2.0.2.0.0.3.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	35.0821869373	27282
Coq.Init.Peano.min_l	40	0.0.2.0.2.0.0.2.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	11.4367311001	7928
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	4.73211097717	3017
Coq.Init.Peano.nat_rect_succ_r	40	0.16.1.0.7	synth with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: trivial).	8.70318198204	11274
Coq.Init.Peano.nat_rect_plus	40	1.1.1.0.3.4	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite <- ?IHn; only 1: trivial).	1.47834801674	1054
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	0.14.16	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	0.178102016449	674
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.2	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0124540328979	5
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0121510028839	3
Coq.Init.Datatypes.surjective_pairing	40	1.19	synth with cache (only 1: destruct p; only 1: trivial).	0.145082950592	245
Coq.Init.Datatypes.injective_projections	40	1.23.6.2.6.3.16	synth with cache (only 1: intros A B []; only 1: intros [? ?]; only 1: simpl; only 1: intros; only 1: destruct H0 in H; only 1: destruct H; only 1: trivial).	9.83525514603	56027
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.3	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0113410949707	5
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.0	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0143718719482	5
Coq.Init.Datatypes.CompOpp_inj	40
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	0.2.2.0.2.2.0.2.2.7	synth with cache (only 1: destruct c; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto).	2.12160778046	4383
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.00216794013977	3
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	2.2.3.1.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0225141048431	110
Coq.Init.Logic.Equivalence.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40	0.0.1.5.0.0.1.5.1.2	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.11487698555	1153
Coq.Init.Logic.and_iff_compat_r	40	0.0.2.0.2.1.2.0.2.0.2	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.176598072052	1812
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.2.1.1.0.0.1.1.2.1.0.3.2	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.319665908813	3747
Coq.Init.Logic.imp_iff_compat_l	40	5.5.2.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0253820419312	245
Coq.Init.Logic.imp_iff_compat_r	40	0.2.3.0.0.3.2.0.1.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.0862970352173	1118
Coq.Init.Logic.not_iff_compat	40	6.7.2.11	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.13791012764	1528
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40	0.0.4.1.0.0.0.2.2.0.1.0.0.0.0.0.0.0.1.0.0.1.0.1.2.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption).	15.0713658333	169850
Coq.Init.Logic.and_comm	40	1.1.2.3.1.0.2.3.2.1	synth with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption).	0.757740020752	5935
Coq.Init.Logic.and_assoc	40	8.6.10.1.2.0.5.1.9.1.0.0.1	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply H; only 1: split; only 1: apply H; only 1: assumption; only 1: split; only 1: split; only 1: apply H; only 1: apply H; only 1: apply H).	28.3176510334	338540
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.3.0.4.3.0.3.0.2.3.3	synth with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.88573217392	6823
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.00674200057983	3
Coq.Init.Logic.iff_to_and	40	0.1.4	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0106780529022	18
Coq.Init.Logic.universal_quantification.inst	40	10.1	synth with cache (only 1: intros; only 1: trivial).	0.0164999961853	86
Coq.Init.Logic.universal_quantification.gen	40	0.1	synth with cache (only 1: unfold all; only 1: auto).	0.00794100761414	3
Coq.Init.Logic.Logic_lemmas.absurd	40	0.7.14	synth with cache (only 1: intro H1; only 1: intros A B []; only 1: assumption).	0.0811901092529	635
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	4.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00966501235962	7
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00762295722961	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	3.1	synth with cache (only 1: destruct 1; only 1: auto).	0.00933003425598	15
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	2.2	synth with cache (only 1: destruct 2; only 1: auto).	0.0113978385925	15
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.3	synth with cache (only 1: destruct 2; only 1: trivial).	0.0096549987793	5
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.00958490371704	4
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00949287414551	3
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00967597961426	3
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.12.6	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: trivial).	0.214559078217	381
Coq.Init.Logic.rew_opp_r	40	0.14	synth with cache (only 1: destruct H; only 1: reflexivity).	0.145201921463	192
Coq.Init.Logic.rew_opp_l	40	0.2.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0117039680481	5
Coq.Init.Logic.f_equal2	40	0.6.6	synth with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.183080196381	318
Coq.Init.Logic.f_equal3	40	0.3.3.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0172030925751	20
Coq.Init.Logic.f_equal4	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0159039497375	6
Coq.Init.Logic.f_equal5	40	0.0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0190780162811	7
Coq.Init.Logic.f_equal_compose	40	2.18.18.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.750973939896	5200
Coq.Init.Logic.eq_trans_refl_l	40	0.0	synth with cache (only 1: destruct e; only 1: auto).	0.0113019943237	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0112199783325	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0113081932068	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0114209651947	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0114800930023	2
Coq.Init.Logic.eq_trans_assoc	40	1.8.11.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.332471132278	1498
Coq.Init.Logic.rew_map	40	1.5.4	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0528469085693	96
Coq.Init.Logic.eq_trans_map	40	0.31.3.18.29	synth with cache (only 1: intros A B C Hl Hr; only 1: intros ? ? ? Fl Fr; only 1: destruct 2; only 1: destruct Fr; only 1: assumption).	15.0669829845	138681
Coq.Init.Logic.map_subst	40	0.3.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0135478973389	6
Coq.Init.Logic.map_subst_map	40	1.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0123600959778	4
Coq.Init.Logic.rew_swap	40	2.3.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0138220787048	8
Coq.Init.Logic.rew_compose	40	1.9	synth with cache (only 1: destruct H2; only 1: trivial).	0.0389859676361	71
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	1.0	synth with cache (only 1: intros; only 1: trivial).	0.0111970901489	3
Coq.Init.Logic.eq_trans_map_distr	40	0.4.12.14	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.76921415329	3468
Coq.Init.Logic.eq_sym_map_distr	40	1.0	synth with cache (only 1: destruct e; only 1: trivial).	0.0127630233765	3
Coq.Init.Logic.eq_trans_sym_distr	40	0.2.0	synth with cache (only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	0.0156588554382	5
Coq.Init.Logic.eq_trans_rew_distr	40	1.1	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.0126719474792	4
Coq.Init.Logic.rew_const	40	0.5	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0163838863373	16
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	2.6.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.0208830833435	32
Coq.Init.Logic.inhabited_covariant	40	2.19	synth with cache (only 1: destruct 2; only 1: auto).	0.0784289836884	406
Coq.Init.Logic.eq_stepl	40	0.1.0.2	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.016284942627	7
Coq.Init.Logic.iff_stepl	40	15.1.1.24.2	synth with cache (only 1: intros A P H; only 1: red; only 1: destruct 1; only 1: intros [Hl Hr]; only 1: auto).	4.41119885445	32366
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.0.13.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.293840885162	613
Coq.Init.Logic.ex2.rew_ex2	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0169770717621	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	1.3.0	synth with cache (only 1: intros H; only 1: inversion_clear H; only 1: trivial).	0.0158240795135	7
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.0129840373993	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0128140449524	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.1	synth with cache (only 1: destruct 2; only 1: auto).	0.0168278217316	12
Coq.Init.Logic_Type.identity_ind_r	40	0.19	synth with cache (only 1: destruct 2; only 1: trivial).	0.264511108398	765
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.0146250724792	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.0148210525513	3
Coq.Init.Specif.sigT_eta	40	0.31	synth with cache (only 1: destruct p; only 1: reflexivity).	0.118566036224	516
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0139689445496	2
Coq.Init.Specif.sigT2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0155680179596	2
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0151560306549	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.4.2.7.4	synth with cache (only 1: intros H; only 1: inversion_clear H; only 1: split; only 1: exists x; only 1: auto).	0.290586948395	720
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0207290649414	5
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0179681777954	4
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.0.1	synth with cache (only 1: destruct q; only 1: destruct p; only 1: auto).	0.0249800682068	4
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	1.24.0.4	synth with cache (only 1: destruct p; only 1: destruct q; only 1: subst; only 1: auto).	1.12794113159	2993
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	1.24.1.2	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: destruct r, q, p; only 1: reflexivity).	6.47181916237	11653
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0183720588684	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.1.1	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0200970172882	5
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.1.1.1.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.032438993454	9
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	0.3.4.3.0.1.10.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intros [x y]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).	9.08268094063	17426
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0183300971985	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.2.9.3	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.622277975082	561
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	11.3.0.2.0.0.3.1.0.1	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried; only 1: auto).	16.5098669529	17467
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0709099769592	3
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0226030349731	3
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.2.1.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0407059192657	8
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0227949619293	3
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	1.1.1	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.018611907959	6
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.0.1.0.7.0.8.0.1	synth with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	7.60444402695	2136
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.099837064743	3
Coq.QArith.Qreduction.Qred_correct	40	1.0.10	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	5.71004104614	536
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	2.1	synth with cache (only 1: intros; only 1: apply Qred_correct).	2.74326896667	83
Coq.QArith.Qreduction.Qminus'_correct	40	3.1	synth with cache (only 1: intros; only 1: apply Qred_correct).	3.02376008034	85
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	35.1.1.0	synth with cache (only 1: intuition; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: now rewrite !Qred_correct).	34.25958395	13242
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	0.0.0.20.7	synth with cache (only 1: red; only 1: simpl; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	28.3550589085	3741
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	0.0.0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: constructor).	0.420737981796	30
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	0.0.0.5.17	synth with cache (only 1: red; only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	24.9536910057	6587
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	5.0.0.0.8.4	synth with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: compute; only 1: trivial; only 1: easy).	16.7397642136	1706
Coq.QArith.Qfield.Examples.ex1	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.202067136765	5
Coq.QArith.Qfield.Examples.ex2	40	0.1.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.197182893753	7
Coq.QArith.Qfield.Examples.ex3	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.31810593605	5
Coq.QArith.Qfield.Examples.ex4	40	0	synth with cache (only 1: split).	0.0614001750946	1
Coq.QArith.Qfield.Examples.ex5	40	0	synth with cache (only 1: ring).	0.189374923706	1
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0695419311523	1
Coq.QArith.Qfield.Examples.ex7	40	0.0.0.4	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).	0.237279176712	31
Coq.QArith.Qfield.Examples.ex8	40	0.0.0.0	synth with cache (only 1: intro n; only 1: red; only 1: simpl; only 1: trivial).	0.120064973831	4
Coq.QArith.Qfield.Examples.ex9	40	0.0.0	synth with cache (only 1: intros; only 1: compute; only 1: trivial).	0.100061893463	3
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	5.1.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: ring).	0.256115913391	15
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.115396022797	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.0.9	synth with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	2.0195980072	421
Coq.QArith.Qcanon.Qred_involutive	40	2.5.0.1	synth with cache (only 1: intro n; only 1: destruct n; only 1: apply Qred_complete; only 1: apply Qred_correct).	2.52759385109	251
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.081521987915	3
Coq.QArith.Qcanon.Qcgt_alt	40	2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.170309066772	15
Coq.QArith.Qcanon.Qcle_alt	40	0.0	synth with cache (only 1: intros n m; only 1: reflexivity).	0.0615599155426	2
Coq.QArith.Qcanon.Qcge_alt	40	3.2.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0789630413055	8
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	1	synth with cache (only 1: auto with qarith).	0.0616250038147	2
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	0.13.11	synth with cache (only 1: intros (x, y); only 1: qc; only 1: ring).	7.81465697289	1976
Coq.QArith.Qcanon.Qcplus_0_r	40	2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.118088960648	5
Coq.QArith.Qcanon.Qcplus_comm	40	1.2.4.17.4	synth with cache (only 1: intros a b; only 1: case a; only 1: intros; only 1: qc; only 1: ring).	31.7286009789	6658
Coq.QArith.Qcanon.Qcopp_involutive	40	1.5.3	synth with cache (only 1: intros a0; only 1: qc; only 1: ring).	0.77529501915	131
Coq.QArith.Qcanon.Qcplus_opp_r	40	4.0.1	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.207513093948	23
Coq.QArith.Qcanon.Qcmult_assoc	40	1.8.6	synth with cache (only 1: intros a n Hn; only 1: qc; only 1: ring).	2.48922300339	462
Coq.QArith.Qcanon.Qcmult_0_l	40	0.0.0.2.3	synth with cache (only 1: intros l; only 1: qc; only 1: red; only 1: simpl; only 1: reflexivity).	0.164720058441	19
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.486795902252	13
Coq.QArith.Qcanon.Qcmult_1_l	40	10.1.0	synth with cache (only 1: intro n; only 1: qc; only 1: ring).	3.00115299225	344
Coq.QArith.Qcanon.Qcmult_1_r	40	0.3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.13719201088	7
Coq.QArith.Qcanon.Qcmult_comm	40	8.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.902901887894	79
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.328634023666	5
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.156630039215	6
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	2.5.3.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	2.45371389389	305
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.193800926208	15
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.0.12	synth with cache (only 1: red; only 1: intros a; only 1: auto with qarith).	0.557457923889	268
Coq.QArith.Qcanon.Qcle_antisym	40	4.1	synth with cache (only 1: intros x y z; only 1: auto with qarith).	0.131741046906	27
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	4.0.1.6	synth with cache (only 1: intros; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).	2.49127316475	560
Coq.QArith.Qcanon.Qclt_le_weak	40	19.0	synth with cache (only 1: intros; only 1: now apply Z.lt_le_incl).	4.63963985443	1201
Coq.QArith.Qcanon.Qcle_lt_trans	40	0.0.2.2.1	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: auto; only 1: eauto).	0.215882062912	30
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	6.0.2.0.3	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).	6.61713886261	1006
Coq.QArith.Qcanon.Qcnot_lt_le	40	3.6	synth with cache (only 1: intros a b; only 1: apply Z.nlt_ge).	0.673209905624	148
Coq.QArith.Qcanon.Qcnot_le_lt	40	4.0	synth with cache (only 1: intros x y H; only 1: now apply Z.lt_nge).	0.0673131942749	6
Coq.QArith.Qcanon.Qclt_not_le	40	6.0	synth with cache (only 1: intros n m; only 1: apply Z.lt_nge).	0.0717120170593	8
Coq.QArith.Qcanon.Qcle_not_lt	40	4.0	synth with cache (only 1: intros n m; only 1: apply Z.le_ngt).	0.0690150260925	6
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.0.6	synth with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.195242881775	34
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.0.3.0.2.2	synth with cache (only 1: Nat.cases ltac:(n); only 1: now destruct 1; only 1: intro n; only 1: destruct n; only 1: intro H; only 1: trivial; only 1: trivial).	7.4159579277	1125
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.1.2.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.123919963837	9
Coq.QArith.Qreals.IZR_nz	40	0.0	synth with cache (only 1: intro H; only 1: now apply not_0_IZR).	0.0789060592651	2
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.0.6.0.0.0.0.0	synth with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qden, Qnum; only 1: simpl; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	6.11652588844	640
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.262494087219	11
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	0	synth with cache (only 1: reflexivity).	0.0443251132965	1
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	16	synth with cache (only 1: intuition).	0.130182027817	108
Coq.QArith.QArith_base.Qeq_sym	40	1.0	synth with cache (only 1: symmetry; only 1: auto).	0.0683588981628	3
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	2	synth with cache (only 1: apply Zeq_is_eq_bool).	0.0491650104523	3
Coq.QArith.QArith_base.Qeq_eq_bool	40	1	synth with cache (only 1: apply Qeq_bool_iff).	0.0468809604645	2
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40	35	synth with cache (only 1: apply Z.leb_le).	18.369437933	10070
Coq.QArith.QArith_base.Qle_bool_imp_le	40	8	synth with cache (only 1: apply Z.leb_le).	0.0522110462189	9
Coq.QArith.QArith_base.Qnot_eq_sym	40	1	synth with cache (only 1: intuition).	0.0517749786377	2
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.25	synth with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	2.62785196304	693
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.17	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.881413221359	460
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40	17.3.5	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: now Z.nzsimpl').	7.36709284782	1737
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	10.11.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now f_equiv).	29.9116239548	6183
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0.8	synth with cache (only 1: intro; only 1: destr_eq H).	0.106909990311	12
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	0.0.3	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	0.277688026428	23
Coq.QArith.QArith_base.Qplus_0_r	40	0.1.8	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	1.65236091614	225
Coq.QArith.QArith_base.Qplus_comm	40	5.7.1.5.8	synth with cache (only 1: unfold Qeq, Qplus; only 1: intros n m; only 1: simpl; only 1: simpl_mult; only 1: ring).	30.4904420376	5293
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.3	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.162736177444	22
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.2	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.146219968796	14
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.1.2.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.206712007523	8
Coq.QArith.QArith_base.Qmult_0_l	40	4.1	synth with cache (only 1: intros; only 1: now Z.nzsimpl').	0.0973320007324	7
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.0.7	synth with cache (only 1: red; only 1: simpl; only 1: intro n; only 1: ring).	1.02099394798	104
Coq.QArith.QArith_base.Qmult_1_l	40	1.0.7	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	0.80903506279	143
Coq.QArith.QArith_base.Qmult_1_r	40	0.2.1.0.0.2	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	2.87214207649	236
Coq.QArith.QArith_base.Qmult_comm	40	0.1.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.171630144119	7
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.3	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.237748861313	15
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.2.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: simpl; only 1: simpl_mult; only 1: ring).	1.2691488266	9
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	2.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).	0.0689458847046	4
Coq.QArith.QArith_base.inject_Z_opp	40	0	synth with cache (only 1: reflexivity).	0.0502851009369	1
Coq.QArith.QArith_base.Qinv_involutive	40	2.0.8	synth with cache (only 1: fix le_div2 1; only 1: red; only 1: auto).	4.00723004341	365
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.155328035355	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	27	synth with cache (only 1: intuition).	0.46141409874	376
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	16	synth with cache (only 1: apply Z.lt_irrefl).	0.154371976852	108
Coq.QArith.QArith_base.Qlt_not_eq	40	0.2.0.36	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intro H; only 1: intuition; only 1: Z.order).	13.1574339867	6312
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40	3.0.5.6.11	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: split; only 1: apply Z.lt_eq_cases; only 1: intuition; only 1: Z.order).	20.5421900749	7217
Coq.QArith.QArith_base.Qlt_le_weak	40	12.5	synth with cache (only 1: intro E; only 1: now apply Z.lt_le_incl).	2.41165304184	322
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	2.11	synth with cache (only 1: intuition; only 1: now apply Z.ge_le).	0.333888053894	126
Coq.QArith.QArith_base.Qnot_le_lt	40	8.5	synth with cache (only 1: intro E; only 1: now apply Z.nle_gt).	0.345079898834	124
Coq.QArith.QArith_base.Qlt_not_le	40	1	synth with cache (only 1: apply Z.nle_gt).	0.0483119487762	2
Coq.QArith.QArith_base.Qle_not_lt	40	3	synth with cache (only 1: apply Z.nlt_ge).	0.0505449771881	4
Coq.QArith.QArith_base.Qle_lt_or_eq	40	6.0.7	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: apply Z.lt_eq_cases).	3.68112611771	425
Coq.QArith.QArith_base.Q_dec	40	2.6	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	1.4975168705	28
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.0.0.0.0.1.1.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto; only 1: auto with *).	18.4904539585	2177
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	1.0.0.0.0.0.1.1.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y); only 1: rewrite <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto; only 1: auto with *).	27.8590149879	4124
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto; only 1: auto with qarith).	3.90102601051	395
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40	1.0.0.1.0.2.3	synth with cache (only 1: intros [[| n| n] d]; only 1: now try destruct p; only 1: red; only 1: discriminate; only 1: red; only 1: red; only 1: trivial).	8.88705587387	827
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.120893001556	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: auto).	6.15781211853	311
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	0.0.3	synth with cache (only 1: simpl; only 1: intro n; only 1: now Z.nzsimpl).	0.399045944214	36
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.1.1.1	synth with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	5.22954010963	434
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	1.92498397827	39
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.19202208519	10
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.1.3.6	synth with cache (only 1: red; only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	3.42444109917	614
Coq.QArith.Qabs.Zabs_Qabs	40	0	synth with cache (only 1: reflexivity).	0.058159828186	1
Coq.QArith.Qabs.Qabs_opp	40	1.0.0.0.2.0.4.1	synth with cache (only 1: red; only 1: intros (n, d); only 1: simpl; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).	12.1234650612	1364
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	0.5.1.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: repeat rewrite <- Z.abs_mul; only 1: auto).	2.52743220329	156
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	0.234596014023	10
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	0.0.11	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro; only 1: auto).	1.78909111023	341
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0140080451965	1
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0140779018402	1
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0138611793518	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	0.0.9.10.9	synth with cache (only 1: constructor; only 1: intro H; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	7.76994109154	8221
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.0144219398499	1
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0177450180054	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.0139679908752	1
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0149428844452	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	13	synth with cache (only 1: simpl_crelation).	0.530314922333	138
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: firstorder).	0.0160610675812	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.0174989700317	1
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0151360034943	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0154931545258	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0151989459991	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0155727863312	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0168900489807	1
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.19490814209	1
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0287780761719	1
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0290861129761	1
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0188949108124	1
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0989699363708	1
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0920178890228	1
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0324690341949	1
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	0.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	2.01889395714	5
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0	synth with cache (only 1: firstorder).	0.0168609619141	1
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0173099040985	1
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	2.2	synth with cache (only 1: red; only 1: simpl_crelation).	0.0285708904266	6
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0	synth with cache (only 1: firstorder).	0.0157539844513	1
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.0187249183655	1
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0	synth with cache (only 1: firstorder).	0.0152289867401	1
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0151350498199	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	4	synth with cache (only 1: simpl_crelation).	0.0204849243164	5
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0146811008453	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0148808956146	1
Coq.Classes.CMorphisms.proper_proper	40	0.2.0.1.0.1	synth with cache (only 1: split; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.104484081268	13
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0	synth with cache (only 1: firstorder).	0.0163881778717	1
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0165162086487	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	2	synth with cache (only 1: simpl_crelation).	0.0590689182281	3
Coq.Classes.CMorphisms.proper_sym_flip_2	40	0.22	synth with cache (only 1: unfold flip, respectful; only 1: firstorder).	23.8591380119	2665
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	0.4.2	synth with cache (only 1: red; only 1: simpl_crelation; only 1: firstorder).	0.470185995102	25
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.2	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.116760969162	8
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.2	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.243096828461	8
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.3.1.0	synth with cache (only 1: firstorder; only 1: symmetry; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.196219205856	28
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	synth with cache (only 1: firstorder).	0.0149831771851	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0151281356812	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0166909694672	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.393923044205	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0	synth with cache (only 1: exact eq_refl).	0.0144500732422	1
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	2	synth with cache (only 1: firstorder).	0.0154449939728	3
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	1.1	synth with cache (only 1: hnf; only 1: auto).	0.0195119380951	4
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	1.2	synth with cache (only 1: hnf; only 1: auto).	0.0211009979248	5
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	4	synth with cache (only 1: firstorder).	0.0282890796661	5
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	3	synth with cache (only 1: firstorder).	0.0289218425751	4
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0373020172119	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0462250709534	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.0144689083099	1
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.015145778656	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0148317813873	2
Coq.Classes.CRelationClasses.iffT_Symmetric	40	1	synth with cache (only 1: firstorder).	0.0153629779816	2
Coq.Classes.CRelationClasses.iffT_Transitive	40	1	synth with cache (only 1: firstorder).	0.0172560214996	2
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0	synth with cache (only 1: firstorder).	0.0180599689484	1
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0217680931091	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0	synth with cache (only 1: firstorder).	0.0489959716797	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.6.2.0	synth with cache (only 1: firstorder; only 1: simpl_relation; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	1.16640400887	412
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: firstorder).	0.0154149532318	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0163490772247	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0189800262451	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.475428819656	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	0	synth with cache (only 1: exact eq_refl).	0.0142481327057	1
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	2	synth with cache (only 1: firstorder).	0.0153059959412	3
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	1.1	synth with cache (only 1: hnf; only 1: firstorder).	0.0189969539642	4
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	1.3	synth with cache (only 1: hnf; only 1: auto).	0.0206680297852	6
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	1	synth with cache (only 1: firstorder).	0.0305960178375	2
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0644550323486	2
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	2	synth with cache (only 1: firstorder).	0.0433020591736	3
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0424921512604	2
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0142631530762	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	1	synth with cache (only 1: firstorder).	0.015114068985	2
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.1.2	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0363130569458	6
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.1.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0283639431	5
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	1.2.0.0.1.2	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	1.97393202782	89
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0	synth with cache (only 1: firstorder).	0.0175759792328	1
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0220630168915	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0	synth with cache (only 1: firstorder).	0.0521290302277	1
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0226738452911	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: exact eq_refl).	0.0140237808228	1
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0143229961395	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0136411190033	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	0.0.8.14.21	synth with cache (only 1: constructor; only 1: intro H; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	16.849807024	20079
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.0145270824432	1
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0189270973206	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.0142951011658	1
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.015200138092	1
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.2.3	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0886249542236	8
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: firstorder).	0.0157690048218	1
Coq.Classes.Morphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.0171010494232	1
Coq.Classes.Morphisms.iff_impl_subrelation	40	1	synth with cache (only 1: firstorder).	0.0156648159027	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0156481266022	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0170729160309	1
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.10326385498	1
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0293371677399	1
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0296239852905	1
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0184190273285	1
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0515561103821	1
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0613880157471	1
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0315289497375	1
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	0.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	1.99501514435	5
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0	synth with cache (only 1: firstorder).	0.0176100730896	1
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0181369781494	1
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.1.1	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0276119709015	5
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	0.4.1.0.4.1.4.2	synth with cache (only 1: reduce; only 1: split; only 1: reduce; only 1: apply H0; only 1: firstorder; only 1: reduce; only 1: apply H0; only 1: firstorder).	23.1008279324	1716
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0	synth with cache (only 1: firstorder).	0.0158588886261	1
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.01939702034	1
Coq.Classes.Morphisms.GenericInstances.flip1	40	0	synth with cache (only 1: firstorder).	0.0150880813599	1
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0150790214539	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.1.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0276970863342	6
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.014867067337	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0149800777435	1
Coq.Classes.Morphisms.proper_proper	40	0.1.0.1.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.163601160049	12
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0	synth with cache (only 1: firstorder).	0.01646900177	1
Coq.Classes.Morphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0168600082397	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.2	synth with cache (only 1: reduce; only 1: firstorder).	0.0570390224457	4
Coq.Classes.Morphisms.proper_sym_flip_2	40	4.9.2	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold respectful; only 1: simpl_relation).	4.28500008583	479
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.10	synth with cache (only 1: simpl_relation; only 1: firstorder).	2.13845610619	255
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0305778980255	2
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	1	synth with cache (only 1: firstorder).	0.0310959815979	2
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0622189044952	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.0285081863403	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	2	synth with cache (only 1: firstorder).	0.0339729785919	3
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	1	synth with cache (only 1: firstorder).	0.0415971279144	2
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	1	synth with cache (only 1: firstorder).	0.500205993652	2
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	2	synth with cache (only 1: firstorder).	0.0393710136414	3
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	2	synth with cache (only 1: firstorder).	0.0385329723358	3
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	2	synth with cache (only 1: firstorder).	0.0351839065552	3
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	2	synth with cache (only 1: firstorder).	0.0340070724487	3
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	2	synth with cache (only 1: firstorder).	0.0334968566895	3
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	2	synth with cache (only 1: firstorder).	0.0329010486603	3
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	2	synth with cache (only 1: firstorder).	0.0326328277588	3
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	0.23	synth with cache (only 1: compute in *; only 1: auto).	5.62804889679	1393
Coq.Classes.DecidableClass.Decidable_sound	40	1.29.2.3.3.5	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: inversion_clear H; only 1: inversion_clear H; only 1: apply H; only 1: assumption).	12.5852370262	24180
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.0.10	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	2.58916902542	623
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	6.5.8	synth with cache (only 1: split; only 1: apply Nat.eqb_eq; only 1: apply Nat.eqb_eq).	5.1660759449	2655
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	7.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply Nat.leb_le).	0.114810943604	38
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	91.16	synth with cache (only 1: destruct y; only 1: now destruct x).	33.0275230408	44117
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	15	synth with cache (only 1: firstorder).	0.105416059494	91
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0301477909088	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0292680263519	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	6	synth with cache (only 1: firstorder).	0.486588001251	26
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.540021896362	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	4	synth with cache (only 1: firstorder).	0.0331339836121	5
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	synth with cache (only 1: do 2 red; only 1: auto).	0.0415599346161	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	3.4.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.0911018848419	20
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0	synth with cache (only 1: firstorder).	0.0289628505707	1
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.0265929698944	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	synth with cache (only 1: trivial).	0.0332958698273	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40	0.0.7.12.3.20	synth with cache (only 1: exfalso; only 1: elim (lt_irrefl p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	38.1225349903	13948
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40	0.8.1	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	0.417781114578	104
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.2.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros <-; only 1: trivial).	0.105926036835	12
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	0.2.0.2.0.0.0.13	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct n; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: auto).	3.18198394775	835
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.048898935318	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.1.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto).	1.0928709507	173
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal).	0.0718829631805	4
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	6.2.11.1	synth with cache (only 1: intros; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	2.96126794815	1446
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	0.0.0.5	synth with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: intro; only 1: auto).	0.153715848923	39
Coq.PArith.BinPos.Pos.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0386509895325	1
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	synth with cache (only 1: trivial).	0.0335421562195	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: reflexivity).	0.0345270633698	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.0.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.102759122849	8
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0403411388397	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	synth with cache (only 1: now destruct p).	0.0432190895081	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.0424168109894	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.2.3	synth with cache (only 1: induction p; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	3.83976387978	497
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	3.4.0.0.0.3.0	synth with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	27.566532135	3955
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.4.9.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	20.9755609035	4887
Coq.PArith.BinPos.Pos.add_1_r	40	2	synth with cache (only 1: now destruct p).	0.029895067215	3
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0292010307312	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.0	synth with cache (only 1: simpl; only 1: f_equal).	0.0446450710297	2
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0	synth with cache (only 1: auto).	0.0336220264435	1
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0409600734711	2
Coq.PArith.BinPos.Pos.mul_1_r	40	0.0.0.0.0.0.8	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	1.30424118042	225
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.1.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.750933170319	105
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.770435094833	121
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	1.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: destr_eq H; only 1: intros [q| q| ] H; only 1: simpl in H; only 1: destr_eq H; only 1: destr_eq H; only 1: destr_eq H; only 1: auto).	39.9908540249	5467
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	1	synth with cache (only 1: now destruct p, q).	1.35161709785	135
Coq.PArith.BinPos.Pos.square_xO	40	6.0.2	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.350754022598	64
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: reflexivity).	0.0997989177704	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	6.2.4.1	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: fix even_spec 1; only 1: assumption).	2.88268208504	895
Coq.PArith.BinPos.Pos.leb_le	40	6.2.4.3	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: fix even_spec 1; only 1: assumption).	3.04235100746	1019
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	2.9.12	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: easy).	4.86102318764	1526
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	7.7.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: now destruct compare).	2.79217195511	626
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.1.8.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	1.68712306023	295
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	3.5.13.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: revert q; only 1: fix even_spec 1; only 1: easy).	3.66939306259	1172
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.1.4.4	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	1.84968805313	267
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	7.10.12	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	18.261193037	6320
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.1.9.8	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	6.51395201683	1591
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.1.8.12	synth with cache (only 1: unfold lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	5.76023983955	1595
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.0.0.0	synth with cache (only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	0.0708708763123	4
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0331830978394	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.4.6.4.0	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	6.87947416306	2002
Coq.PArith.BinPos.Pos.compare_xO_xI	40	1.7.7.8	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	7.04071497917	2442
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40	0.0.16.9	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro n; only 1: trivial).	37.4450039864	12289
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.0.0.0.17	synth with cache (only 1: induction p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.470011949539	219
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1	synth with cache (only 1: unfold lt; only 1: now split).	0.0448081493378	3
Coq.PArith.BinPos.Pos.compare_le_iff	40	6	synth with cache (only 1: easy').	0.0392489433289	7
Coq.PArith.BinPos.Pos.gt_lt_iff	40	6.1	synth with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.636968135834	49
Coq.PArith.BinPos.Pos.gt_lt	40	15.1	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	1.92533612251	450
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.036554813385	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	6.2	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.075089931488	18
Coq.PArith.BinPos.Pos.ge_le	40	1.2	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0682718753815	5
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0358231067657	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	22	synth with cache (only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	1.54355597496	731
Coq.PArith.BinPos.Pos.nlt_1_r	40	7	synth with cache (only 1: now destruct p).	0.170475959778	37
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	synth with cache (only 1: now destruct p).	0.263924121857	62
Coq.PArith.BinPos.Pos.le_nlt	40	5.0	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0579559803009	7
Coq.PArith.BinPos.Pos.lt_nle	40	2.0	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.196075201035	26
Coq.PArith.BinPos.Pos.lt_le_incl	40	15	synth with cache (only 1: congruence).	1.21112895012	294
Coq.PArith.BinPos.Pos.lt_lt_succ	40	0.6.6.0	synth with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: auto).	0.478183984756	203
Coq.PArith.BinPos.Pos.succ_lt_mono	40	1.12.0.5.21	synth with cache (only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold lt, gt; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	27.0698730946	10208
Coq.PArith.BinPos.Pos.succ_le_mono	40	8.10	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_succ_succ).	1.72605109215	489
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	1.1.1	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.0606200695038	6
Coq.PArith.BinPos.Pos.lt_compat	40	9	synth with cache (only 1: solve_proper).	0.903279066086	79
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.2	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0573348999023	4
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	1.1.1.1.16.21	synth with cache (only 1: intros LE; only 1: intro H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	22.9906258583	15659
Coq.PArith.BinPos.Pos.le_trans	40	0.0.0.0.0.0.0.0.0.2.0.0.0.2	synth with cache (only 1: rewrite 3!PeanoNat.Nat.lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations).	11.3396530151	2635
Coq.PArith.BinPos.Pos.le_succ_l	40	0.1.1.9.0	synth with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	8.65040898323	2097
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	5.4.3	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.280910968781	140
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.0.2	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.140736103058	22
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.1.10	synth with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).	2.36581707001	396
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.137951850891	13
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.2	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.138386011124	20
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0637400150299	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.0.0.2	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.131923913956	15
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0562520027161	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1	synth with cache (only 1: now destruct p).	0.0406131744385	2
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0402100086212	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.1.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0889811515808	5
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0800909996033	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.3.7.2	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro m; only 1: auto).	11.9675297737	2450
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	1.2.0.0.2.5.0	synth with cache (only 1: unfold le, sub; only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: case_eq (sub_mask p q); only 1: discriminate; only 1: discriminate; only 1: congruence).	2.95789813995	735
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.1.1.0.0.0.2.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: trivial; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.957869052887	185
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	0.0.4.2.0.0.1.2.0.1	synth with cache (only 1: unfold le, min; only 1: intros x y; only 1: intros H; only 1: case compare_spec; only 1: symmetry; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: constructor).	27.5137000084	7851
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: congruence; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.120131015778	9
Coq.PArith.BinPos.Pos.min_1_l	40	4.0	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0755560398102	11
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.119037151337	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	12.6.0.1	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: intros x x'; only 1: now apply add_le_mono_l).	32.7364490032	9400
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.1.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.151922941208	15
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.3	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0880329608917	7
Coq.PArith.BinPos.Pos.mul_max_distr_l	40
Coq.PArith.BinPos.Pos.mul_max_distr_r	40	0.0.0.27	synth with cache (only 1: rewrite !(PeanoNat.Nat.mul_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	8.33958792686	3219
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.0	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0740740299225	3
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.5	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.088308095932	9
Coq.PArith.BinPos.Pos.iter_op_succ	40	1.0.3.0.4.1	synth with cache (only 1: induction p; only 1: firstorder; only 1: simpl; only 1: congruence; only 1: auto; only 1: now symmetry).	1.65167307854	278
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.0.9.7	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: auto).	1.47525310516	381
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40	2.8.2.7	synth with cache (only 1: simpl; only 1: revert p; only 1: fix gcd_divide 1; only 1: intuition).	9.51810193062	2676
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	0.26.0.11.0	synth with cache (only 1: intro n; only 1: destruct sqrtrem as (s, rm); only 1: auto; only 1: fix sqrtrem_spec 1; only 1: auto).	20.7825849056	12983
Coq.PArith.BinPos.Pos.gcd_divide_r	40	0.2.1	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	0.607403993607	64
Coq.PArith.BinPos.Pos.gcdn_greatest	40	1.22	synth with cache (only 1: fix le_div2 1; only 1: auto).	30.6240918636	10417
Coq.PArith.BinPos.Pos.gcd_greatest	40	2.0.3	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.178834915161	43
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.1	synth with cache (only 1: unfold Pos.gt; only 1: now split).	0.0662610530853	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40
Coq.Arith.Le.le_n_0_eq	40	0.1	synth with cache (only 1: inversion 1; only 1: trivial).	0.0528678894043	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	1.0.10	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: trivial).	1.87931203842	563
Coq.Arith.Even.odd_equiv	40	7.0	synth with cache (only 1: fix even_equiv 1; only 1: trivial).	0.318969011307	51
Coq.Arith.Even.even_or_odd	40	1.0.9.20	synth with cache (only 1: Nat.induct n; only 1: intuition; only 1: intros n IH; only 1: intuition).	2.92745018005	1681
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0724878311157	5
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	1	synth with cache (only 1: parity_binop).	0.154915809631	11
Coq.Arith.Even.even_even_plus	40	7	synth with cache (only 1: parity_binop).	0.235764980316	16
Coq.Arith.Even.odd_plus_l	40	1	synth with cache (only 1: parity_binop).	0.0861630439758	2
Coq.Arith.Even.odd_plus_r	40	1	synth with cache (only 1: parity_binop).	0.0856819152832	2
Coq.Arith.Even.odd_even_plus	40	1	synth with cache (only 1: parity_binop).	0.140212774277	11
Coq.Arith.Even.even_plus_aux	40	7	synth with cache (only 1: parity_binop).	0.438831090927	20
Coq.Arith.Even.even_plus_even_inv_r	40	1	synth with cache (only 1: parity_binop).	0.0881099700928	2
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0868928432465	1
Coq.Arith.Even.even_plus_odd_inv_r	40	1	synth with cache (only 1: parity_binop).	0.0850999355316	2
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.149951219559	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.085177898407	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0847959518433	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.103587865829	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0825009346008	1
Coq.Arith.Even.even_mult_aux	40	3	synth with cache (only 1: parity_binop).	0.236124038696	4
Coq.Arith.Even.even_mult_l	40	12	synth with cache (only 1: parity_binop).	0.272800922394	85
Coq.Arith.Even.even_mult_r	40	2	synth with cache (only 1: parity_binop).	0.0816910266876	12
Coq.Arith.Even.even_mult_inv_r	40	1	synth with cache (only 1: parity_binop).	0.101385831833	11
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0834231376648	1
Coq.Arith.Even.odd_mult	40	2	synth with cache (only 1: parity_binop).	0.278994083405	25
Coq.Arith.Even.odd_mult_inv_l	40	1	synth with cache (only 1: parity_binop).	0.126415014267	19
Coq.Arith.Even.odd_mult_inv_r	40	1	synth with cache (only 1: parity_binop).	0.0984928607941	17
Coq.Arith.Minus.minus_n_O	40	0	synth with cache (only 1: now destruct n).	0.0267858505249	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	synth with cache (only 1: now Nat.nzsimpl').	0.0458600521088	1
Coq.Arith.Minus.minus_diag_reverse	40	2.0.1.26	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: trivial).	3.4766061306	2420
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	0.0.0.0.6.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: split; only 1: intro H; only 1: trivial; only 1: intro H; only 1: trivial).	2.28319692612	381
Coq.Arith.Minus.plus_minus	40	2.1.3.0.6.1.1.1	synth with cache (only 1: Nat.double_induct n m; only 1: intro n; only 1: intro H; only 1: now destruct n; only 1: intro n; only 1: now try Nat.order'; only 1: intro n; only 1: auto).	22.3273251057	7350
Coq.Arith.Minus.minus_plus	40	1.0.3.0.14	synth with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intro n; only 1: now destruct n; only 1: trivial).	1.0569999218	419
Coq.Arith.Minus.le_plus_minus_r	40	0.0.0.0.1.0.0.1.1.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: intros a Ha; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	9.01136517525	1677
Coq.Arith.Minus.le_plus_minus	40	0.0.0.0.1.0.0.1.1.0.3	synth with cache (only 1: revert m; only 1: induction n; only 1: intros a Ha; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	20.0522789955	3939
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	12.4.0.2.3	synth with cache (only 1: intros a; only 1: intro n; only 1: intro H; only 1: subst; only 1: intuition).	6.81492686272	3407
Coq.Arith.Between.Between.between_le	40	1.0.11.5	synth with cache (only 1: intros n m; only 1: induction 1; only 1: apply PeanoNat.Nat.le_refl; only 1: auto).	4.11113595963	1708
Coq.Arith.Between.Between.between_Sk_l	40	0.11	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	1.42031478882	372
Coq.Arith.Between.Between.between_restr	40	8.10	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	5.42426395416	1819
Coq.Arith.Between.Between.exists_le_S	40	1.1.4	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.156064987183	49
Coq.Arith.Between.Between.exists_S_le	40	0.18.6	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	16.8341219425	8471
Coq.Arith.Between.Between.in_int_intro	40	0.0.2.3	synth with cache (only 1: intros a b c Ha Hb; only 1: constructor; only 1: trivial; only 1: auto).	0.0832140445709	19
Coq.Arith.Between.Between.in_int_lt	40	3.3	synth with cache (only 1: induction 1; only 1: PeanoNat.Nat.order).	0.0768580436707	26
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	10.3	synth with cache (only 1: intros * []; only 1: auto with arith).	0.806658983231	318
Coq.Arith.Between.Between.in_int_Sp_q	40	0.2.2.1	synth with cache (only 1: intros * []; only 1: constructor; only 1: auto with arith; only 1: trivial).	0.0546040534973	9
Coq.Arith.Between.Between.between_in_int	40	0.12	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	0.995016098022	364
Coq.Arith.Between.Between.in_int_between	40	4.1.0.1	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0656161308289	13
Coq.Arith.Between.Between.exists_in_int	40	4.13	synth with cache (only 1: fix gcd_divide 1; only 1: trivial).	4.46284389496	1319
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40	0.0.0.0.0.0.0.0.0.0.5.20.11	synth with cache (only 1: unfold decidable; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: right; only 1: auto).	12.6631228924	7127
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	5.0.12.0.1.0.5	synth with cache (only 1: destruct n; only 1: intro H; only 1: auto with relations; only 1: intro H; only 1: destruct m; only 1: now right; only 1: now left).	29.8909130096	14207
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	3.1.0.1.0.1.3.2	synth with cache (only 1: intros A A_wd A0 AS; only 1: assert (D : forall n, A n /\ A (S n)); only 1: Nat.induct ltac:(n); only 1: auto; only 1: intros n [IH1 IH2]; only 1: auto; only 1: intro n; only 1: exact (proj1 (D n))).	8.30407691002	2837
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40	0.11.31	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	22.9692218304	15284
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	1	synth with cache (only 1: intuition).	0.0330619812012	2
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.47	synth with cache (only 1: fix even_odd_double 1; only 1: trivial).	30.7377188206	26480
Coq.Arith.Div2.odd_S2n	40	0.0.0	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0508558750153	3
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.478880882263	59
Coq.Arith.Div2.div2_double_plus_one	40
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	2	synth with cache (only 1: apply Nat.add_le_mono_l).	0.0776109695435	20
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	1	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0325450897217	2
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	synth with cache (only 1: apply Nat.add_le_mono).	0.0316331386566	2
Coq.Arith.Plus.plus_lt_compat	40	2.21.5	synth with cache (only 1: intro H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	4.52846693993	2230
Coq.Arith.Plus.le_plus_l	40	2.9.8.21	synth with cache (only 1: revert m; only 1: revert n; only 1: fix gcd_divide 1; only 1: trivial).	5.55879807472	2630
Coq.Arith.Plus.le_plus_r	40	0.0.18.23	synth with cache (only 1: revert m; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	28.175039053	6994
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	2.0.0.1.0.3	synth with cache (only 1: Nat.induct n; only 1: intro H; only 1: auto with relations; only 1: intros n IH; only 1: intro H; only 1: now split).	1.60619306564	237
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	2.3.0.4.9	synth with cache (only 1: nzinduct n; only 1: trivial; only 1: intro; only 1: Nat.nzsimpl; only 1: intuition).	2.45550894737	676
Coq.Arith.Lt.lt_le_S	40	2.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.0324740409851	4
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.0194590091705	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.1.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0384500026703	4
Coq.Arith.Lt.le_not_lt	40	0.1	synth with cache (only 1: intro H; only 1: Nat.order).	0.0824871063232	28
Coq.Arith.Lt.lt_not_le	40	0.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.029657125473	2
Coq.Arith.Lt.neq_0_lt	40	2.0	synth with cache (only 1: intro H; only 1: Nat.auto').	0.030433177948	4
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0429120063782	4
Coq.Arith.Lt.lt_n_S	40	8	synth with cache (only 1: apply le_n_S).	0.12600684166	34
Coq.Arith.Lt.lt_S_n	40	2	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0312459468842	12
Coq.Arith.Lt.S_pred	40	0.2.4.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: intro H; only 1: inversion 1; only 1: trivial).	0.536301136017	197
Coq.Arith.Lt.S_pred_pos	40	0.0.8	synth with cache (only 1: inversion 1; only 1: trivial; only 1: trivial).	0.131813049316	69
Coq.Arith.Lt.lt_pred	40	2.1.0.2.9.3	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: auto).	1.86206102371	1043
Coq.Arith.Lt.lt_pred_n_n	40	3.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: auto).	0.0533900260925	7
Coq.Arith.Lt.le_lt_or_eq	40	1.0.20	synth with cache (only 1: induction 1; only 1: now right; only 1: intuition).	9.5701918602	3580
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	38.1467349529	9240
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.622792005539	110
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0252809524536	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0320019721985	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0319149494171	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.031464099884	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.1.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0998649597168	8
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	2.11.2.14.41	synth with cache (only 1: pattern n; only 1: Nat.induct ltac:(n); only 1: auto; only 1: fix le_div2 1; only 1: trivial).	5.65790700912	4922
Coq.Arith.Factorial.fact_neq_0	40	1.0.1.0.0.7.56	synth with cache (only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	29.9940168858	30198
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	5.0.0.0	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	0.0458860397339	9
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	1.35733485222	259
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.464172124863	91
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0421569347382	3
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	1.0.0.40	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: intuition Nat.order; only 1: auto with arith).	2.80831384659	1890
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	1.0.1.3.0	synth with cache (only 1: destruct (le_gt_dec n m); only 1: destruct (le_gt_dec n m); only 1: apply le_dec; only 1: now left; only 1: now left).	0.229842185974	32
Coq.Arith.Compare_dec.ge_dec	40	2	synth with cache (only 1: apply le_dec).	0.129110097885	26
Coq.Arith.Compare_dec.dec_le	40	1.0.0.0.23	synth with cache (only 1: unfold decidable; only 1: destruct (le_gt_dec n m); only 1: now left; only 1: right; only 1: now apply gt_not_le).	2.19306015968	1520
Coq.Arith.Compare_dec.dec_lt	40	8	synth with cache (only 1: apply Nat.le_decidable).	0.0527739524841	24
Coq.Arith.Compare_dec.dec_gt	40	3	synth with cache (only 1: apply Nat.le_decidable).	0.0206170082092	4
Coq.Arith.Compare_dec.dec_ge	40	1	synth with cache (only 1: apply Nat.le_decidable).	0.0210678577423	2
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0199069976807	1
Coq.Arith.Compare_dec.not_le	40	7.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.0367028713226	9
Coq.Arith.Compare_dec.not_gt	40	6.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.0349671840668	8
Coq.Arith.Compare_dec.not_ge	40	7.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.0316331386566	9
Coq.Arith.Compare_dec.not_lt	40	3	synth with cache (only 1: apply Nat.nlt_ge).	0.0321440696716	13
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40	3.10.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	10.2667849064	2537
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	0.1.0.1.0.0.0.9	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).	1.6980509758	665
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0.5.0.0.0.0.0.0.1.0.3	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: intro H; only 1: apply Peano.le_n_S, Peano.le_0_n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: intros; only 1: auto with arith).	9.9031291008	2311
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	8	synth with cache (only 1: apply Nat.compare_gt_iff).	0.0705780982971	24
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	6.6.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: Bool.destr_bool).	9.18404603004	1798
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	8	synth with cache (only 1: apply Nat.leb_le).	0.234920024872	82
Coq.Arith.Compare_dec.leb_correct_conv	40	0.15	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.933459043503	374
Coq.Arith.Compare_dec.leb_complete_conv	40	6	synth with cache (only 1: apply leb_iff_conv).	0.0447220802307	22
Coq.Arith.Compare_dec.leb_compare	40	1.7.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: Bool.destr_bool).	3.30205202103	524
Coq.Arith.EqNat.eq_nat_refl	40	1.2.12	synth with cache (only 1: Nat.induct n; only 1: constructor; only 1: trivial).	0.343834161758	137
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.1.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0709490776062	7
Coq.Arith.EqNat.eq_nat_eq	40	3	synth with cache (only 1: apply eq_nat_is_eq).	0.975375890732	142
Coq.Arith.EqNat.eq_nat_elim	40	0.19	synth with cache (only 1: fix gcd_divide 1; only 1: trivial).	2.27103209496	1143
Coq.Arith.EqNat.eq_nat_decide	40	0.0.0.0.1.0.0.0.2.1.0	synth with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: auto; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: right; only 1: auto).	3.82106900215	991
Coq.Arith.EqNat.beq_nat_refl	40	3.0.24	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.426306009293	437
Coq.Arith.EqNat.beq_nat_true	40	6.0.0.0.0.0.2.0.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: auto).	9.69054698944	3005
Coq.Arith.EqNat.beq_nat_false	40	1.0.1.1.1.3.4.1.16	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: trivial; only 1: destruct m; only 1: easy; only 1: intro H; only 1: auto).	36.0732061863	19905
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	4.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).	0.0367109775543	7
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	2	synth with cache (only 1: auto).	0.0191659927368	3
Coq.Arith.PeanoNat.Nat.recursion_succ	40	1.1.3.1	synth with cache (only 1: intros; only 1: induction n; only 1: firstorder; only 1: firstorder).	0.0546500682831	10
Coq.Arith.PeanoNat.Nat.pred_succ	40	0	synth with cache (only 1: exact eq_refl).	0.0175850391388	1
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: auto).	0.0184438228607	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: exact eq_refl).	0.0177619457245	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0182509422302	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0242838859558	2
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0425360202789	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: exact eq_refl).	0.121068000793	10
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0237431526184	2
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40	0.0.0.14.0.0	synth with cache (only 1: constructor; only 1: exact (le_pred (S n) (S m)); only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	16.9213740826	8086
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.02406001091	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	1.0.0.2.0.0.2.2.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy).	2.8535399437	826
Coq.Arith.PeanoNat.Nat.compare_succ	40	1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).	0.0923330783844	12
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	16.7857749462	5781
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.1.0.1.0.0.3.0.0.3	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destr_bool; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	29.9330420494	9277
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	22.6340429783	7351
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	6.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0379390716553	8
Coq.Arith.PeanoNat.Nat.pow_0_r	40	1	synth with cache (only 1: reflexivity).	0.025465965271	2
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.0	synth with cache (only 1: intro n; only 1: auto).	0.0363028049469	2
Coq.Arith.PeanoNat.Nat.square_spec	40	0	synth with cache (only 1: reflexivity).	0.0246028900146	1
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	1.0.0.1	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: pose proof (pred_succ n) as EQ'; only 1: now apply (neq_succ_diag_l 0)).	0.0786979198456	22
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	6.1	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.117426872253	34
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0371580123901	3
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	1.3	synth with cache (only 1: inversion 1; only 1: now apply pred_0).	0.128377914429	60
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	0.0.0.2	synth with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: intro H; only 1: auto).	0.412108898163	41
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	1.1.0	synth with cache (only 1: intro n; only 1: intro; only 1: apply gcd_divide).	0.057520866394	5
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	2.8	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	0.889729976654	200
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	9	synth with cache (only 1: apply le_0_l).	0.0324549674988	10
Coq.Arith.PeanoNat.Nat.div2_double	40	0.0.4.1.4.13	synth with cache (only 1: simpl; only 1: nzinduct n; only 1: auto; only 1: destr_bool; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.36499404907	595
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.1.0.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.1080930233	9
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.053750038147	2
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.1.5	synth with cache (only 1: nzinduct n; only 1: tauto; only 1: intro n; only 1: intuition).	0.107949972153	29
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	1.10.0	synth with cache (only 1: intros n m; only 1: fix even_spec 1; only 1: easy).	15.8001198769	1513
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	2.11	synth with cache (only 1: fix gcd_greatest 1; only 1: tauto).	24.5492179394	2639
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	1.8	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	1.1672410965	212
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: reflexivity; only 1: trivial).	0.0474109649658	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	synth with cache (only 1: now nzsimpl').	0.0351920127869	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0295259952545	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	1	synth with cache (only 1: Nat.order).	0.163623809814	32
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	1	synth with cache (only 1: apply Nat.succ_lt_mono).	0.038861989975	11
Coq.Arith.Gt.gt_S_n	40	2	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0404171943665	11
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0215308666229	1
Coq.Arith.Gt.le_not_gt	40	1	synth with cache (only 1: apply Nat.le_ngt).	0.0370349884033	11
Coq.Arith.Gt.gt_not_le	40	2	synth with cache (only 1: apply Nat.lt_nge).	0.074520111084	14
Coq.Arith.Gt.le_S_gt	40	1.0	synth with cache (only 1: intro H; only 1: trivial).	0.0309069156647	3
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Peano.le_S_n).	0.0200498104095	1
Coq.Arith.Gt.gt_le_S	40	0	synth with cache (only 1: apply Nat.le_succ_l).	0.0211448669434	1
Coq.Arith.Gt.le_gt_S	40	0.3.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0409719944	6
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	7.0.7.62	synth with cache (only 1: Nat.induct n; only 1: intuition; only 1: intro; only 1: intuition).	30.9927759171	43435
Coq.Arith.Gt.plus_gt_reg_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0218708515167	1
Coq.Arith.Gt.plus_gt_compat_l	40	1	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0221841335297	2
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	1.2.6	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: auto).	0.0750248432159	59
Coq.Logic.JMeq.JMeq_trans	40	1.2.2	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.025573015213	8
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.2	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0290620326996	13
Coq.Logic.JMeq.JMeq_rect	40	0.0.1	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0242900848389	4
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.1	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0243480205536	5
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.1	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0247859954834	5
Coq.Logic.JMeq.JMeq_congr	40	0.5.1	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: exact eq_refl).	0.026703119278	9
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0268590450287	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0262429714203	3
Coq.Logic.JMeq.eq_dep_JMeq	40	0.1	synth with cache (only 1: destruct 1; only 1: auto).	0.0222601890564	3
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.6.9.2	synth with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: auto).	1.24778294563	981
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.8.7.17	synth with cache (only 1: intros n m; only 1: revert m; only 1: destruct m; only 1: auto).	0.990020990372	1943
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.1.1.1	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: exact eq_refl).	0.0296881198883	7
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	6.0	synth with cache (only 1: intros; only 1: tauto).	0.375268936157	73
Coq.Logic.Classical_Prop.not_imply_elim	40	3.8	synth with cache (only 1: intros Ext A a; only 1: tauto).	1.13576292992	309
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: apply NNPP; only 1: red; only 1: intro; only 1: apply H; only 1: trivial).	0.0740571022034	7
Coq.Logic.Classical_Prop.imply_to_or	40	9.1	synth with cache (only 1: intros Ext A a; only 1: tauto).	0.988972187042	104
Coq.Logic.Classical_Prop.imply_to_and	40	2.0.0.0.1.1	synth with cache (only 1: intros Ext A a; only 1: firstorder; only 1: apply NNPP; only 1: red; only 1: intro; only 1: tauto).	0.376489162445	54
Coq.Logic.Classical_Prop.or_to_imply	40	2.0.3.0	synth with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: tauto).	0.139744997025	27
Coq.Logic.Classical_Prop.not_and_or	40	0.0.1.1	synth with cache (only 1: Bool.destr_bool; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0629060268402	6
Coq.Logic.Classical_Prop.or_not_and	40	0	synth with cache (only 1: tauto).	0.0309610366821	1
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0306899547577	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0303318500519	1
Coq.Logic.Classical_Prop.imply_and_or	40	2.1	synth with cache (only 1: intros A C h1 h2; only 1: firstorder).	0.0674719810486	14
Coq.Logic.Classical_Prop.imply_and_or2	40	2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	0.0442390441895	4
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	2.56	synth with cache (only 1: intros [x y]; only 1: eauto).	2.50395894051	6601
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	2.17	synth with cache (only 1: red; only 1: eauto).	0.200258016586	208
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	1.1.1.1.1.1.1.2.1.2.1	synth with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: auto; only 1: auto; only 1: auto; only 1: exact h; only 1: auto; only 1: auto; only 1: auto).	21.673525095	4848
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.39.5	synth with cache (only 1: intros; only 1: subst; only 1: exact eq_refl).	1.75332093239	3445
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.6.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).	0.48929810524	255
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	8	synth with cache (only 1: firstorder).	0.0918049812317	14
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	0.2.5.5.3	synth with cache (only 1: intros n H; only 1: constructor; only 1: intros y [H1 H2]; only 1: elim H2; only 1: auto).	2.56931614876	584
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	11	synth with cache (only 1: firstorder).	0.430508852005	93
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40	0.0.0.0.0.0.3.9.1.0.0.0.0	synth with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: destruct H as [x Hx]; only 1: exists (f x); only 1: unfold P'; only 1: firstorder; only 1: rewrite gof_eq_id; only 1: auto; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: unfold P' in Hn; only 1: assumption).	34.7987909317	12983
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.1.0.7.7.1.0.0.6.1.5.1	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: intros; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	38.7397499084	28957
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.0.0.0.1	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0684189796448	12
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	1.57	synth with cache (only 1: compute; only 1: auto).	27.7809889317	36150
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.8.0.11.7	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	2.15308094025	2691
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.3.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.110513210297	18
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.5.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0543291568756	9
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	1.32.5	synth with cache (only 1: intros; only 1: apply H; only 1: firstorder).	25.1861610413	8919
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	7.0.0.1.0	synth with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: pose (T' := fun x y => forall x', R x x' -> T x' y); only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	2.09663915634	458
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.5.1.0.1.5	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	2.40694785118	786
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	0.65.40.52	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: subst; only 1: exact eq_refl).	4.86541795731	30797
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40	4.6.0.5.0.35.4.30	synth with cache (only 1: red; only 1: intros; only 1: destruct (H A); only 1: constructor; only 1: rewrite H0; only 1: constructor; only 1: rewrite H0; only 1: auto).	24.5052239895	88641
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	3.2.1.7.4	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: constructor; only 1: exact (fun _ => I); only 1: auto).	0.703768014908	763
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	21	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.895765066147	448
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	2.8.3.3.0	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: left; only 1: easy).	1.78125596046	1375
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	1.0.3.0.0	synth with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0670869350433	9
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	0.0.0.1.2.1.0.0.0.1	synth with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: apply not_all_not_ex with (P := fun x => ~ P x); only 1: intro all; only 1: apply abs; only 1: intro n; only 1: apply NNPP; only 1: apply all).	9.87642097473	2516
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	1.4.1	synth with cache (only 1: unfold not; only 1: destruct 1; only 1: auto).	0.212877988815	64
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	6.6.0.2.0	synth with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro all; only 1: apply NNPP; only 1: firstorder).	6.14429998398	2469
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.1.1.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0359530448914	6
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	4.0.9.9	synth with cache (only 1: intros (l, F); only 1: induction l; only 1: auto; only 1: firstorder).	5.23790788651	1957
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40	1.2.6.10.21.40	synth with cache (only 1: destruct n; only 1: red; only 1: now exists nil; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	18.5623400211	24514
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	11.19	synth with cache (only 1: red; only 1: eauto).	5.28246903419	1415
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0665431022644	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	1.6.14	synth with cache (only 1: intro H; only 1: destruct 1; only 1: trivial).	0.509159803391	757
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.4.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: exact eq_refl).	0.0256090164185	8
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: exact eq_refl).	0.0536019802094	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: exact eq_refl).	0.0246410369873	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.20.1.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: exact eq_refl).	0.668420791626	858
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	synth with cache (only 1: exact eq_refl).	0.0149989128113	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	synth with cache (only 1: exact eq_refl).	0.0146210193634	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	1.1	synth with cache (only 1: intros A P H p q; only 1: eauto using @functional_extensionality_dep).	0.0201101303101	4
Coq.Logic.HLevels.false_hprop	40	5.7	synth with cache (only 1: intros p q; only 1: destruct p, q).	0.0828819274902	80
Coq.Logic.HLevels.true_hprop	40	0.6.1	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: exact eq_refl).	0.0242450237274	10
Coq.Logic.HLevels.not_hprop	40	4.1.1.1.4	synth with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality; only 1: intros; only 1: destruct p, q).	0.418859004974	326
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40	1.26.7	synth with cache (only 1: intros P Hdemorgan; only 1: fix le_div2 1; only 1: auto).	21.5024850368	8874
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	1.13	synth with cache (only 1: induction 1; only 1: reflexivity).	0.125092983246	162
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	1.2	synth with cache (only 1: destruct 1; only 1: auto).	0.0143809318542	5
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.55.1	synth with cache (only 1: destruct 1; only 1: subst; only 1: reflexivity).	6.68289399147	18629
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.39.1	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	2.10394310951	4955
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	6.15	synth with cache (only 1: inversion 1; only 1: reflexivity).	0.506170034409	813
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.6.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: exact eq_refl).	0.0206360816956	10
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.2.1.0.5.2.2	synth with cache (only 1: intros; only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: auto).	0.613541841507	609
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0184190273285	4
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	synth with cache (only 1: destruct 1; only 1: auto).	0.0143010616302	3
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.3.0.0.10.1	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: auto).	0.785713911057	795
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.8.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: exact eq_refl).	0.195316791534	102
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.0.11.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: exact eq_refl).	0.980528116226	664
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	5.2.5.6	synth with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto).	0.46183180809	416
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	2.8	synth with cache (only 1: red; only 1: auto).	0.0589389801025	48
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	2.16.10.6	synth with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: trivial).	5.22180199623	7774
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.0.1	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.023120880127	4
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	8.0.1	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.316546201706	170
Coq.Logic.EqdepFacts.f_eq_dep	40	0.2	synth with cache (only 1: destruct 1; only 1: auto).	0.0963251590729	4
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.0176529884338	3
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: auto).	0.0180678367615	3
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	2.1	synth with cache (only 1: intros Ext A B Equiv; only 1: auto).	0.0210440158844	5
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	7	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.614104032516	8
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	9	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.652148008347	37
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	1.4.2.10	synth with cache (only 1: intros n m; only 1: induction n; only 1: intros; only 1: auto).	0.68701505661	680
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	6.1.2.4	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: contradiction).	0.473566055298	442
Coq.Logic.Decidable.dec_True	40	1.6	synth with cache (only 1: constructor; only 1: auto).	0.0194728374481	9
Coq.Logic.Decidable.dec_False	40	1.1	synth with cache (only 1: unfold decidable; only 1: auto).	0.0191829204559	4
Coq.Logic.Decidable.dec_or	40	12.3	synth with cache (only 1: unfold decidable, not; only 1: tauto).	0.960256099701	741
Coq.Logic.Decidable.dec_and	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0394678115845	4
Coq.Logic.Decidable.dec_not	40	2.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0245430469513	5
Coq.Logic.Decidable.dec_imp	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0317378044128	4
Coq.Logic.Decidable.dec_iff	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0424959659576	4
Coq.Logic.Decidable.not_not	40	3.3.1	synth with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).	0.0297830104828	10
Coq.Logic.Decidable.not_or	40	2	synth with cache (only 1: tauto).	0.0196840763092	3
Coq.Logic.Decidable.not_and	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0289289951324	4
Coq.Logic.Decidable.not_imp	40	1.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0385329723358	5
Coq.Logic.Decidable.imp_simp	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0261991024017	4
Coq.Logic.Decidable.not_iff	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.063884973526	4
Coq.Logic.Decidable.not_true_iff	40	3	synth with cache (only 1: tauto).	0.0160911083221	4
Coq.Logic.Decidable.not_false_iff	40	2	synth with cache (only 1: tauto).	0.0161929130554	3
Coq.Logic.Decidable.not_not_iff	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0263531208038	4
Coq.Logic.Decidable.contrapositive	40	2.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0302298069	5
Coq.Logic.Decidable.or_not_l_iff_1	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0339238643646	4
Coq.Logic.Decidable.or_not_l_iff_2	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0335221290588	4
Coq.Logic.Decidable.or_not_r_iff_1	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.032830953598	3
Coq.Logic.Decidable.or_not_r_iff_2	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0334930419922	3
Coq.Logic.Decidable.imp_not_l	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0351858139038	4
Coq.Logic.Decidable.not_or_iff	40	2	synth with cache (only 1: tauto).	0.0247719287872	3
Coq.Logic.Decidable.not_and_iff	40	2	synth with cache (only 1: tauto).	0.0221660137177	3
Coq.Logic.Decidable.not_imp_iff	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0402708053589	3
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0401968955994	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0.0.0.2	synth with cache (only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0819869041443	7
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.131435871124	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.1.5.0.9	synth with cache (only 1: induction s; only 1: auto; only 1: ok; only 1: simpl; only 1: auto).	11.1948978901	1198
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.1.0.2	synth with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: ok).	0.7626080513	8
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	3.69676303864	945
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	1	synth with cache (only 1: exact (rrmatch _ _ _)).	0.0429890155792	2
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	1	synth with cache (only 1: exact (rmatch _ _ _)).	0.0451748371124	2
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.0724139213562	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	13	synth with cache (only 1: ok).	2.30398201942	259
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	15.1	synth with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	3.13652706146	601
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.047816991806	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	1.1.1.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.631355047226	8
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	7	synth with cache (only 1: firstorder).	0.0393497943878	8
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.0.2.18.20	synth with cache (only 1: intros n; only 1: induction n; only 1: inversion 1; only 1: simpl; only 1: auto).	5.40849494934	3617
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	1.31.16	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	23.5898630619	15602
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	4.2	synth with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0910999774933	13
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	synth with cache (only 1: now rewrite partition_spec).	0.0418839454651	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.181735992432	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	6.37	synth with cache (only 1: destruct 1; only 1: now f_equal).	10.3159341812	4030
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	1.1.0.0.0.0.0.2	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	2.38163900375	199
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.0.23.2	synth with cache (only 1: invrb; only 1: inversion H; only 1: auto; only 1: auto).	2.9500939846	2039
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	1.38.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: inversion H; only 1: invrb).	33.346544981	31703
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.146125793457	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	3.6.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).	0.205126047134	63
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.4.1.0.0.4	synth with cache (only 1: intro H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	5.29439997673	1038
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.3.0.3	synth with cache (only 1: destruct s; only 1: auto; only 1: descolor; only 1: auto; only 1: auto).	0.4693338871	97
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0	synth with cache (only 1: auto).	0.0540661811829	1
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0.0.4	synth with cache (only 1: constructor; only 1: auto; only 1: simpl; only 1: auto).	0.108569860458	8
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.0.4.0.1	synth with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.163235902786	18
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	2.5	synth with cache (only 1: unfold filter; only 1: auto_tc).	0.0735318660736	9
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.1.0	synth with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.10174703598	5
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.101684093475	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	2.2.0.0.0.3.0.2	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	6.80208206177	1107
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.7607319355	261
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	0.0.3.0.0.0.1	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.456212043762	60
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.148153066635	7
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	3.1.1	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.360869884491	40
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	21	synth with cache (only 1: firstorder).	2.54319000244	535
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	1.2.2	synth with cache (only 1: split; only 1: auto; only 1: easy).	0.41930103302	98
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.0	synth with cache (only 1: intros n; only 1: now destruct n).	0.0661640167236	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	9	synth with cache (only 1: firstorder).	0.0716848373413	12
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	4.5.3	synth with cache (only 1: fix odd_spec 1; only 1: fix even_spec 1; only 1: auto).	2.03595900536	482
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	2.7.0	synth with cache (only 1: intros n; only 1: repeat red; only 1: intuition).	0.531605005264	73
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	1.1.30	synth with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	10.8450779915	3019
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	10.10.13	synth with cache (only 1: intros a b q r Hr EQ; only 1: subst; only 1: now destruct q, r).	29.4440798759	9249
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	16.0	synth with cache (only 1: intros q r; only 1: now destruct q, r).	4.48637509346	617
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.0989239215851	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	0.0.12	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	0.664394855499	271
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.103227853775	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	1.1.1.7	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	1.42176103592	178
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0897660255432	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0849580764771	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.083132982254	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.19	synth with cache (only 1: intros [| ] [| ] [| ]; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct).	4.94745588303	1179
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.8	synth with cache (only 1: intros [| l' o' r']; only 1: ct; only 1: trivial).	0.242173910141	45
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	1.9.10	synth with cache (only 1: intros n m Hn; only 1: fix even_spec 1; only 1: intuition).	33.6591801643	7697
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	2.1.1	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.104645967484	11
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	1.3.14	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros a; only 1: eauto).	2.24770402908	723
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40	0.4.19.2.1	synth with cache (only 1: intros; only 1: unfold Empty, In; only 1: fix even_spec 1; only 1: intro n; only 1: trivial).	20.6463282108	8085
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	2.9	synth with cache (only 1: intro H; only 1: now rewrite H).	0.154675960541	49
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0875780582428	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	1.7.3	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	1.84532904625	169
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.1	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.136713027954	13
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	0.1.7	synth with cache (only 1: rewrite union_spec; only 1: intro; only 1: auto).	1.18262887001	59
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	1.03272294998	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0743310451508	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.4	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0822048187256	6
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.3	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.330904006958	17
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.312577009201	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.2.5.3	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	2.09059309959	171
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.5.0.0	synth with cache (only 1: intros P; only 1: intuition; only 1: rewrite filter_spec; only 1: auto; only 1: auto).	0.113507032394	10
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	1.1.0	synth with cache (only 1: intros E; only 1: rewrite E; only 1: auto with relations).	0.0835530757904	5
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	2.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: intuition).	0.112163066864	11
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	1.46	synth with cache (only 1: Ndec.eqb2eq; only 1: intuition).	15.9478240013	9325
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	1	synth with cache (only 1: intuition).	0.0611860752106	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	2	synth with cache (only 1: intuition).	0.0610749721527	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	3	synth with cache (only 1: intuition).	0.0638039112091	4
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.056499004364	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	1.1.15.4	synth with cache (only 1: split; only 1: rewrite add_spec; only 1: intuition; only 1: intuition).	6.71526622772	1766
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	2.3.3.1	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	3.13487100601	440
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	0.17	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	4.47674107552	955
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	0.3	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.19973897934	36
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0802490711212	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0809109210968	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0	synth with cache (only 1: intuition).	0.0520350933075	1
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.2.0.15	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	7.14392209053	1408
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	0.2.0.6	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	12.6305589676	819
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	2.4.6	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: auto).	5.46966314316	585
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	5.2.1	synth with cache (only 1: unfold Equal; only 1: repeat red; only 1: firstorder).	0.629786968231	60
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	7.3.1	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).	3.57078289986	541
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.1.5.19	synth with cache (only 1: vm_compute; only 1: split; only 1: auto; only 1: auto).	9.58354187012	2825
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	3.1.0.9	synth with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	8.48881387711	673
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	2.3.2	synth with cache (only 1: repeat red; only 1: intros A B H; only 1: firstorder).	0.141094923019	16
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: auto).	0.145045995712	4
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.2.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.136257886887	5
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.1.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.151628017426	4
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.4.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.351002931595	13
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.9.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	1.51675796509	136
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.2.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.182124853134	12
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.416211128235	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	0.0.2	synth with cache (only 1: constructor; only 1: intuition; only 1: intuition).	0.108721971512	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0	synth with cache (only 1: intuition).	0.0691199302673	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	2.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.146943092346	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0725281238556	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	1	synth with cache (only 1: fsetdec).	0.1051030159	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	2.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.227340936661	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0923609733582	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.071328163147	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	3	synth with cache (only 1: fsetdec).	0.140430927277	13
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	1	synth with cache (only 1: fsetdec).	0.212281942368	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	3.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.165410995483	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.100902795792	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0940639972687	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	2.3.3.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.789511919022	73
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	1	synth with cache (only 1: fsetdec).	0.111162900925	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.181123018265	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.128762960434	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	2	synth with cache (only 1: fsetdec).	0.272964954376	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	5.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.676565885544	27
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	4.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.21190905571	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	1	synth with cache (only 1: fsetdec).	0.228806972504	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	2.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.257812976837	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	2	synth with cache (only 1: fsetdec).	0.172472000122	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	2	synth with cache (only 1: fsetdec).	0.395038843155	11
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	3	synth with cache (only 1: fsetdec).	0.168613910675	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	1	synth with cache (only 1: fsetdec).	0.130965948105	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	1	synth with cache (only 1: fsetdec).	0.211502075195	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.1599650383	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	1	synth with cache (only 1: fsetdec).	0.208313941956	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.145788908005	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.258712053299	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	1	synth with cache (only 1: fsetdec).	0.410634994507	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.372005939484	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	2	synth with cache (only 1: fsetdec).	0.102102041245	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0929079055786	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	1	synth with cache (only 1: fsetdec).	0.117131948471	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	1	synth with cache (only 1: fsetdec).	0.120329856873	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.11576795578	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	1	synth with cache (only 1: fsetdec).	0.172267913818	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.124938011169	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	2	synth with cache (only 1: fsetdec).	0.277490854263	12
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.138343095779	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	1	synth with cache (only 1: fsetdec).	0.129390954971	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.207459926605	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.204430103302	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.195052862167	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	1	synth with cache (only 1: fsetdec).	0.281567811966	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.285622835159	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	1	synth with cache (only 1: fsetdec).	0.268429994583	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	3.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.253138065338	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	1	synth with cache (only 1: fsetdec).	0.113079071045	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	1	synth with cache (only 1: fsetdec).	0.109661102295	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0977728366852	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0953299999237	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.11264705658	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.160721063614	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.12789106369	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0919458866119	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	1	synth with cache (only 1: fsetdec).	0.255923032761	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.217139959335	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: fsetdec).	0.264210939407	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: fsetdec).	0.220440149307	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	4.0.12	synth with cache (only 1: vm_compute; only 1: intuition; only 1: fsetdec).	2.27198696136	340
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	2.2.2	synth with cache (only 1: intuition; only 1: expAdd; only 1: fsetdec).	0.313225984573	9
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	1.5	synth with cache (only 1: expAdd; only 1: fsetdec).	0.394488096237	13
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	1.4	synth with cache (only 1: expAdd; only 1: fsetdec).	0.574783086777	14
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.436275959015	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.6	synth with cache (only 1: expAdd; only 1: fsetdec).	0.614638090134	24
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	1.1.20	synth with cache (only 1: fix le_div2 1; only 1: intro n; only 1: auto).	28.4501738548	5967
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	0.0.9.6	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto; only 1: auto).	2.36961317062	544
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	5.6.3.5.6	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: reflexivity; only 1: intuition; only 1: firstorder).	34.1475918293	6462
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40	5.0.0.0.0.6.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	7.52321004868	1602
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40	0.3.0.0.0.2.10	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: fsetdec; only 1: auto with set).	17.1820850372	4637
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0786619186401	4
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	0.0.8.0.8.4	synth with cache (only 1: intro; only 1: rewrite elements_Empty, cardinal_spec; only 1: intro; only 1: destruct (elements s); only 1: auto; only 1: discriminate).	18.6794250011	4494
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.1.1.2	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: fsetdec).	0.111243963242	8
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	1.2.3.22.2	synth with cache (only 1: intros; only 1: generalize (cardinal_inv_1 (s:=diff s' s)); only 1: rewrite <- union_inter_cardinal; only 1: rewrite cardinal_fold; only 1: auto with *).	12.9629340172	4751
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	6.4	synth with cache (only 1: intros; only 1: intuition).	0.585291862488	132
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.5.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto).	0.150704145432	18
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.1.6.9	synth with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: auto).	7.01762509346	1724
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	3.1	synth with cache (only 1: intros; only 1: auto with *).	0.121625900269	16
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	3.28.2.3	synth with cache (only 1: intros s s' H; only 1: apply eq_true_iff_eq; only 1: compute; only 1: Dec.fsetdec).	30.9211359024	6147
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0848190784454	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.1.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0854949951172	4
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40	0.19.23.5	synth with cache (only 1: intros s s' E; only 1: generalize (Dec.F.is_empty_iff s); only 1: fix even_spec 1; only 1: auto).	26.4371311665	10573
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.0.0.0.2	synth with cache (only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.136004924774	7
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.4	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.140467166901	9
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.1.1.1.7	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto).	9.95271992683	1213
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0768370628357	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	2.1.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.137908935547	9
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.3.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	0.460894107819	20
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	2	synth with cache (only 1: intuition).	1.24528408051	22
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	1	synth with cache (only 1: auto with set).	0.0590608119965	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.1	synth with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intuition).	0.122673034668	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.3.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	0.44598698616	20
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.112958908081	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.3.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	0.520637989044	28
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	1	synth with cache (only 1: auto with set relations).	0.0535957813263	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.0844240188599	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.17190694809	17
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	4	synth with cache (only 1: intuition).	0.067535161972	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40	1.0.18.19	synth with cache (only 1: intros H; only 1: rewrite (equal_2 H); only 1: intros; only 1: auto).	19.5639309883	6198
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.2.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.0896210670471	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.2.1	synth with cache (only 1: intro; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.0871329307556	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1	synth with cache (only 1: auto with set).	0.0512311458588	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	7.0	synth with cache (only 1: intros; only 1: auto with set).	0.0749268531799	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	3.3.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.085832118988	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	5.0	synth with cache (only 1: intros; only 1: auto with set).	0.0686328411102	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.0683369636536	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	0.4	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.347301959991	22
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	0.15.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intuition).	7.11519289017	578
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	1	synth with cache (only 1: auto with set relations).	0.0561819076538	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	1.3.1.0	synth with cache (only 1: intros; only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.113786935806	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	0.7	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.0973179340363	17
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	1	synth with cache (only 1: auto with set).	0.0538928508759	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.0806109905243	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0.3.3.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: apply equal_1; only 1: Dec.fsetdec).	0.135968923569	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	1.3.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.140184164047	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	1	synth with cache (only 1: auto with set).	0.0558059215546	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	1	synth with cache (only 1: auto with set relations).	0.0551280975342	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	1	synth with cache (only 1: auto with set relations).	0.0548031330109	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set relations).	0.0544109344482	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	1	synth with cache (only 1: auto with set).	0.0539031028748	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0831360816956	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	1	synth with cache (only 1: auto with set).	0.06463098526	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	2.3.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.135741949081	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	1.3.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.148069858551	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0579829216003	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	1	synth with cache (only 1: auto with set).	0.0639088153839	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	1	synth with cache (only 1: auto with set).	0.0611979961395	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	1	synth with cache (only 1: auto with set).	0.0598828792572	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	2.1.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: intuition).	0.186810016632	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	1	synth with cache (only 1: auto with set).	0.0573699474335	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	1	synth with cache (only 1: auto with set).	0.0564870834351	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	3.1.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.296769857407	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	1	synth with cache (only 1: auto with set).	0.0615808963776	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0790300369263	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.0588610172272	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: auto with set).	0.059513092041	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: auto with set).	0.0589318275452	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.1	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0745470523834	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	0.0.0.0.5.4	synth with cache (only 1: intuition; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set).	1.44845199585	253
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	0.0.3.0.0.0.2.3	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	5.07257413864	784
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	0.1.0.0.0.4.2.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	2.35921812057	465
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	1	synth with cache (only 1: auto with set).	0.0549340248108	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.1.1.1.5	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	2.29153895378	419
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.3.1	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	0.461905956268	90
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.1.0.0.2.2.0.1.1	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: auto; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	6.04161787033	1209
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1	synth with cache (only 1: auto with set).	0.061518907547	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	9	synth with cache (only 1: solve_proper).	0.166497945786	18
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0764739513397	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.153095960617	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	1.2.0.1.0	synth with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	0.209548950195	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.1.0.2	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.1387591362	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	1.0	synth with cache (only 1: unfold decidable; only 1: auto).	1.07696509361	3
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0768940448761	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	synth with cache (only 1: intuition).	0.060240983963	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	10	synth with cache (only 1: fsetdec).	2.47586297989	111
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	2	synth with cache (only 1: fsetdec).	1.1449701786	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	4.3	synth with cache (only 1: vm_compute; only 1: fsetdec).	0.955995082855	24
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	2.1	synth with cache (only 1: intro; only 1: intuition).	0.105684041977	14
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	2	synth with cache (only 1: fsetdec).	0.571026086807	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	18	synth with cache (only 1: fsetdec).	10.4668748379	1992
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	4	synth with cache (only 1: fsetdec).	0.233836889267	14
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	3	synth with cache (only 1: fsetdec).	1.01821112633	13
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	2	synth with cache (only 1: fsetdec).	1.11192703247	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	5	synth with cache (only 1: fsetdec).	0.369960069656	28
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	2	synth with cache (only 1: fsetdec).	0.791395902634	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	3	synth with cache (only 1: fsetdec).	0.576519012451	13
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	1.3	synth with cache (only 1: vm_compute; only 1: intuition).	0.168215036392	14
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	4	synth with cache (only 1: fsetdec).	0.317955970764	31
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	7	synth with cache (only 1: fsetdec).	1.08159708977	56
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	5.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.152292013168	7
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	7.3.6	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: auto).	5.51793694496	2137
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	7.3.6	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: auto).	13.9755580425	4596
Coq.MSets.MSetGenTree.Props.isok_iff	40	6.1	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.0472350120544	11
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40	2.4.3.0.0.6	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros R R' EQ a a' Ha WF; only 1: subst; only 1: eauto).	11.1097278595	2278
Coq.MSets.MSetGenTree.Props.In_node_iff	40	11	synth with cache (only 1: intuition_in).	0.94845199585	123
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	4	synth with cache (only 1: intuition_in).	0.263595819473	29
Coq.MSets.MSetGenTree.Props.lt_leaf	40	6.7	synth with cache (only 1: intros x y z; only 1: easy).	0.553838014603	200
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0452260971069	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	2.6.1.5	synth with cache (only 1: red; only 1: intros x y z; only 1: intuition_in; only 1: order).	3.65431404114	594
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	1.1.8	synth with cache (only 1: red; only 1: intuition_in; only 1: order).	1.21747589111	111
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.2.4	synth with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.233084917068	29
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	6	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.248421192169	28
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	1.1.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.163913011551	5
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	2	synth with cache (only 1: eauto).	0.112442016602	20
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.1.1.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	3.71409392357	463
Coq.MSets.MSetGenTree.Props.empty_spec	40	0.0.14	synth with cache (only 1: red; only 1: intros; only 1: auto).	0.538083076477	119
Coq.MSets.MSetGenTree.Props.empty_ok	40	0	synth with cache (only 1: auto).	0.0384228229523	1
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	1.2.3.2	synth with cache (only 1: fix even_spec 1; only 1: induction s as [| c l IHl y r IHr]; only 1: auto; only 1: auto).	1.77071380615	326
Coq.MSets.MSetGenTree.Props.mem_spec	40	1.10	synth with cache (only 1: fix odd_spec 1; only 1: auto).	2.58145689964	465
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	1.12	synth with cache (only 1: fix odd_spec 1; only 1: auto).	1.64332699776	389
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	4.12.4.1	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite elements_node; only 1: now rewrite !app_assoc_reverse).	20.0076539516	5241
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	4	synth with cache (only 1: firstorder).	0.0301551818848	5
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	19	synth with cache (only 1: firstorder).	0.160331010818	168
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	0.11.6	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: auto).	4.46216607094	1336
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	6.11	synth with cache (only 1: intro H; only 1: firstorder).	3.53311800957	875
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0755271911621	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.2	synth with cache (only 1: intros; only 1: intuition).	0.111790180206	13
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	3.5	synth with cache (only 1: compute; only 1: firstorder).	0.868286848068	67
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.12.1.3	synth with cache (only 1: red; only 1: intuition; only 1: vm_compute; only 1: Dec.fsetdec).	3.5933740139	714
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.0.15.1.2	synth with cache (only 1: red; only 1: intuition; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec).	25.4185359478	5143
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	4.1.12	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	8.54063487053	1589
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.1.0.0.0.2.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	8.35440707207	826
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	1.1.1.0.1.0.3.0.1.0.1.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: intuition; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	24.6378090382	3009
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	1.9	synth with cache (only 1: fix even_spec 1; only 1: auto).	1.31658983231	210
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	7.1	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.0696790218353	13
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	3.2	synth with cache (only 1: intros; only 1: intuition).	0.0540030002594	7
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.0.2.2.0.4	synth with cache (only 1: unfold singleton; only 1: split; only 1: symmetry; only 1: inv; only 1: auto; only 1: auto).	10.3020470142	528
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	1.4	synth with cache (only 1: apply <- isok_iff; only 1: auto).	0.0532460212708	7
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.0.11.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	6.0600271225	132
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	9.2	synth with cache (only 1: fix even_spec 1; only 1: auto).	1.03421401978	125
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.0.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0857181549072	6
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	1	synth with cache (only 1: auto).	0.0328140258789	2
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0	synth with cache (only 1: auto).	0.0339369773865	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40	1.18	synth with cache (only 1: fix even_spec 1; only 1: auto).	18.3147289753	4743
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40	3.19	synth with cache (only 1: fix even_spec 1; only 1: auto).	27.8104999065	7286
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	4.8.3	synth with cache (only 1: destruct s; only 1: easy; only 1: easy).	13.6875040531	1600
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1	synth with cache (only 1: auto).	0.0354008674622	2
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	5.1.9	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: auto).	8.10942196846	1572
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0	synth with cache (only 1: auto).	0.0155439376831	1
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	1.1.4.3	synth with cache (only 1: intros x l; only 1: fix even_spec 1; only 1: intro H; only 1: auto).	1.40577411652	236
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	2.9	synth with cache (only 1: fix gcd_greatest 1; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.16285800934	170
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0	synth with cache (only 1: auto).	0.0199270248413	1
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.7.8.5.2	synth with cache (only 1: intro n; only 1: unfold singleton; only 1: intros; only 1: rewrite InA_cons, InA_nil; only 1: intuition).	19.4430751801	7598
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.103965044022	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	2.4.3.2.2	synth with cache (only 1: intros x Hs; only 1: intro H; only 1: inv; only 1: fix even_spec 1; only 1: auto).	33.348610878	6349
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0	synth with cache (only 1: auto).	0.0204961299896	1
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	3.2.6	synth with cache (only 1: repeat red; only 1: intuition; only 1: inversion_clear H).	0.417353868484	87
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	6.1	synth with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.0326871871948	11
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.0.1	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0454239845276	4
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	1.14.7	synth with cache (only 1: intro H; only 1: repeat rewrite <- isok_iff; only 1: auto).	3.58369612694	1490
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0529370307922	3
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	4.0.0.5.0.4	synth with cache (only 1: induction s as [| x s IH]; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: simpl; only 1: easy).	10.1946930885	1957
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0	synth with cache (only 1: auto).	0.020889043808	1
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1	synth with cache (only 1: auto).	0.0204889774323	2
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	8.2.0.2.4	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: intuition; only 1: auto; only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	8.597230196	1966
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0	synth with cache (only 1: reflexivity).	0.0848369598389	1
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.2.2	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0314869880676	8
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.4.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.58394908905	279
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.0.2.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: right with y; only 1: auto with sets; only 1: auto with sets).	0.0385720729828	7
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	2.0.6.9	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: constructor).	0.317904949188	351
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.4.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0435879230499	13
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.0.2.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto with sets; only 1: auto with sets).	0.038153886795	7
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	0.0.1.0.0.1.1.0.3.0.0.0.0.4.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	34.7893331051	18560
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.0.5.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto with sets; only 1: auto with sets).	0.139440774918	43
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.2.0.2.0.2.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto with sets; only 1: case H; only 1: auto with sets; only 1: constructor 3; only 1: auto with sets).	2.66311883926	884
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	1.6.3.5.5.2.4	synth with cache (only 1: induction 1; only 1: split; only 1: auto with sets; only 1: red; only 1: eauto; only 1: red; only 1: auto).	7.40892100334	5897
Coq.Relations.Relations.inverse_image_of_eq	40	0.0.3.0.0.3.1.2.5.3	synth with cache (only 1: intros; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: induction 1; only 1: auto; only 1: red; only 1: induction 1; only 1: trivial).	4.19667291641	2356
Coq.Sets.Uniset.defs.leb_refl	40	4	synth with cache (only 1: destr_bool).	0.0179660320282	5
Coq.Sets.Uniset.defs.incl_left	40
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0351228713989	4
Coq.Sets.Uniset.defs.seq_refl	40	1	synth with cache (only 1: auto).	0.0164279937744	2
Coq.Sets.Uniset.defs.seq_trans	40	0.1.7.28	synth with cache (only 1: intros H H'; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	25.2167210579	23932
Coq.Sets.Uniset.defs.seq_sym	40	1	synth with cache (only 1: auto).	0.0168361663818	2
Coq.Sets.Uniset.defs.union_empty_left	40	0	synth with cache (only 1: auto).	0.016538143158	1
Coq.Sets.Uniset.defs.union_empty_right	40	12.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	1.19526195526	759
Coq.Sets.Uniset.defs.union_comm	40	16.4.0.5	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: simpl; only 1: intuition).	19.0647900105	16006
Coq.Sets.Uniset.defs.union_ass	40	5.0.2.2.1	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: auto with bool).	2.71579003334	1036
Coq.Sets.Uniset.defs.seq_left	40	0.2.4.0.0	synth with cache (only 1: unfold seq; only 1: destruct x; only 1: destr_bool; only 1: rewrite H; only 1: auto).	0.57675409317	161
Coq.Sets.Uniset.defs.seq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0682940483093	9
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	1.0.2.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	7.576638937	1622
Coq.Sets.Multiset.multiset_defs.meq_refl	40	3.1	synth with cache (only 1: intros; only 1: firstorder).	0.0401840209961	6
Coq.Sets.Multiset.multiset_defs.meq_trans	40	11.2.0.1	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: firstorder; only 1: congruence).	33.0646269321	1684
Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.0	synth with cache (only 1: unfold meq; only 1: auto).	0.0373499393463	2
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0457489490509	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	1.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0530309677124	5
Coq.Sets.Multiset.multiset_defs.munion_comm	40	2.8.0	synth with cache (only 1: unfold meq; only 1: Bool.destr_bool; only 1: firstorder).	6.040776968	510
Coq.Sets.Multiset.multiset_defs.munion_ass	40	1.0.1.1.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: unfold multiplicity; only 1: destruct y; only 1: simpl; only 1: auto with arith).	0.105185985565	16
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.0.0.0.3.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto).	1.26827287674	41
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.10059094429	9
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	2.0.0.0.1.2.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: firstorder).	5.9574649334	453
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	1.1.2.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	8.38442802429	1768
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	2	synth with cache (only 1: exact PeanoNat.Nat.le_refl).	0.0366678237915	3
Coq.Sets.Integers.Integers_sect.le_antisym	40	1.1	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.106771945953	18
Coq.Sets.Integers.Integers_sect.le_trans	40	4.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.228111982346	42
Coq.Sets.Integers.Integers_sect.le_Order	40	1.0.2.2.0.5	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: exact PeanoNat.Nat.le_trans; only 1: red; only 1: PeanoNat.Nat.order).	2.23800396919	404
Coq.Sets.Integers.Integers_sect.triv_nat	40	4.2	synth with cache (only 1: red; only 1: split).	0.0930681228638	28
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40	0.12.11.6	synth with cache (only 1: split; only 1: intro H; only 1: fix gcd_divide 1; only 1: auto with sets).	23.5489580631	8412
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.58.4	synth with cache (only 1: intros; only 1: intros A C h1 h2; only 1: auto).	5.72586107254	15283
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.3.0.0.1	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'0; only 1: auto  10 with sets).	0.0840110778809	19
Coq.Sets.Relations_1_facts.contains_is_preorder	40	1	synth with cache (only 1: auto  10 with sets).	0.0169298648834	2
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	1.1.7.1.1.11.1.14	synth with cache (only 1: constructor; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [? ?] [? ?]; only 1: auto  10 with sets; only 1: red; only 1: destruct 1; only 1: auto  10 with sets).	19.2164821625	17187
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.4.8.2	synth with cache (only 1: intros U R H'; only 1: unfold same_relation at 1; only 1: intros [? ?]; only 1: auto  10 with sets).	0.582139015198	516
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	1.1	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0477838516235	4
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	1.1	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0236039161682	4
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0.1	synth with cache (only 1: intros U R H'; only 1: auto  10 with sets).	0.0188229084015	3
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	1	synth with cache (only 1: auto  10 with sets).	0.0143139362335	2
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	0.0.4.0.0.1.13.1.2	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto  10 with sets; only 1: auto  10 with sets).	8.46776795387	6854
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.0.1.9.1.17	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: intro H'1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	22.7443809509	22775
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.1.0.0.3.1.0.0.0.1.2	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	6.45620298386	3889
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.2.0.0.6	synth with cache (only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	6.91503095627	2815
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	3.2.1	synth with cache (only 1: intros; only 1: apply cong_right; only 1: auto).	0.026309967041	9
Coq.Sets.Permut.Axiomatisation.comm_left	40	2.4.1	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0256040096283	10
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40	0.6.8.2.1	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).	7.73134994507	3866
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	0.5.1.2.2.1.1.3.5	synth with cache (only 1: intuition; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intuition; only 1: inversion H; only 1: red; only 1: firstorder; only 1: auto with sets).	26.3787388802	6761
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	6.8.9.1	synth with cache (only 1: intros X f x H'; only 1: elim H'; only 1: intro H'0; only 1: firstorder).	6.36891102791	3022
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	5.5.2	synth with cache (only 1: red; only 1: compute; only 1: intuition).	0.362983942032	249
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	4.111.46.28	synth with cache (only 1: compute; only 1: intro x; only 1: exists x; only 1: intuition).	28.6885011196	231101
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	16	synth with cache (only 1: auto  10 with sets).	0.618436098099	127
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	1	synth with cache (only 1: auto  6 with sets).	0.0165219306946	2
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	2.1	synth with cache (only 1: red; only 1: auto with sets).	0.0230848789215	5
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	0.0.3.1.0.0.0.0.0.4	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).	9.60484099388	2111
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: auto with sets).	0.0298709869385	3
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.0.0	synth with cache (only 1: intro A; only 1: intro X; only 1: auto with sets).	0.0291361808777	3
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.0168790817261	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.1.0.1	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto).	0.0531229972839	8
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.040549993515	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	0.1.3.4	synth with cache (only 1: red; only 1: red; only 1: unfold Setminus at 1; only 1: auto with sets).	1.01875901222	169
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	5.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: auto with sets).	0.0450608730316	8
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	1.0.0	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.0477080345154	4
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.2.1.2.4	synth with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	4.1288459301	1479
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.1.2.0.2	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.378469944	41
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.2.1.0.2	synth with cache (only 1: intros X Y I NI; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.5700340271	79
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.1.1.0.1.1.1.1.0.1	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	10.5434060097	3426
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	22.7	synth with cache (only 1: intro X; only 1: auto  6 with sets).	1.59943795204	1408
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	1	synth with cache (only 1: auto  6 with sets).	0.0267210006714	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	2.15	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.645297050476	354
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0202729701996	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.0224199295044	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	33.8	synth with cache (only 1: intros x y H'; only 1: auto  10 with sets).	12.3704140186	8251
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	2	synth with cache (only 1: auto  6 with sets).	0.0272521972656	3
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	7	synth with cache (only 1: auto  9 with sets).	0.044921875	14
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.1.1.1.0.0.2.1.1.3.2.2	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	13.5335760117	5638
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.2.2.1.0.2.2.1.3.3.4	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	6.96791601181	4241
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	16.1.2.7	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	37.9612960815	16740
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.3.1.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	0.119187831879	13
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.5	synth with cache (only 1: unfold Add; only 1: auto with sets).	0.390566825867	50
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	1.6	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.201812982559	36
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	17.2.8	synth with cache (only 1: unfold Add; only 1: intros x y z H' H'0; only 1: auto  10 with sets).	31.4250290394	14470
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0	synth with cache (only 1: auto with sets).	0.0199539661407	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.0232961177826	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.029736995697	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.7.0.4.1.3.1	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: intuition; only 1: red; only 1: destruct 1; only 1: auto with sets).	4.39506196976	2023
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: auto with sets; only 1: intros x H1; only 1: auto with sets).	0.0706729888916	10
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.0.3.0.3.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: intuition; only 1: intuition).	1.54908800125	498
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	2.16.2.16.9.4	synth with cache (only 1: induction 1; only 1: constructor; only 1: intro x; only 1: auto; only 1: intro x; only 1: auto).	16.4883909225	35680
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	20	synth with cache (only 1: induction 1).	0.188774824142	207
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	4.1.1	synth with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0299558639526	12
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	2.15.3	synth with cache (only 1: red; only 1: constructor; only 1: auto).	3.45960497856	3857
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	1.1	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0204598903656	4
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	3.53.6.3.1	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	28.6421310902	91595
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	0.3.2.23.3.4.4.4	synth with cache (only 1: intro; only 1: red; only 1: intro; only 1: intro; only 1: subst; only 1: inversion_clear H; only 1: elim (Noone_in_empty x); only 1: auto with sets).	36.0185129642	70068
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.4.7.4.5.1	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	4.01659989357	3977
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: exact eq_refl).	0.0260629653931	5
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	2.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0254428386688	6
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	1.2.10	synth with cache (only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.383100032806	257
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	2.12.1.4.3	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	6.67284202576	5521
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.1.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0277688503265	5
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.1.1.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.0333249568939	7
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.1	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0215010643005	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	3.1	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0208468437195	6
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	6.1.4	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.233951091766	232
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	2.0.5.7	synth with cache (only 1: intros X p C; only 1: elim C; only 1: auto with sets; only 1: auto with sets).	1.23459410667	542
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	0.59.5	synth with cache (only 1: intro; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	24.2050719261	22578
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	0.7.2.0.15	synth with cache (only 1: destruct m; only 1: auto with sets; only 1: inversion 1; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	18.9676010609	7404
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40	0.21.4	synth with cache (only 1: intros X n H'; only 1: fix le_div2 1; only 1: auto with sets).	31.7281508446	13598
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.0.7	synth with cache (only 1: induction 1; only 1: exact eq_refl; only 1: auto with sets).	0.0601370334625	32