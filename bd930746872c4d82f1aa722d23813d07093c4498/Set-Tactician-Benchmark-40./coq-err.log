File "./theories/Numbers/HexadecimalNat.v", line 117, characters 2-30:
Error:
Anomaly
"Typing failure of the following tactic:
synth with cache (unshelve (only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: Morphisms.f_equiv; only 1: intros m Hm; only 1: red; only 1: exfalso; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: induction n; only 1: now intuition; only 1: Nat.order_nz); only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).
Typing error:
In environment
n : nat
R := eq : Relation_Definitions.relation nat
m : nat
Hm : nat
The term "Nat.lt_0_succ Hm" has type "0 < S Hm"
while it is expected to have type "S Hm < S Hm"."
Please report at http://coq.inria.fr/bugs/.

File "./theories/Lists/Streams.v", line 94, characters 0-19:
Error:
Anomaly
"Typing failure of the following tactic:
synth with cache (only 1: intro x; only 1: coinduction ltac:(EqSt_reflex); only 1: symmetry; only 1: destruct H; only 1: trivial with datatypes; only 1: assumption).
Typing error:
Recursive definition of EqSt_reflex is ill-formed.
In environment
A : Type
x : Stream
EqSt_reflex : forall s2 : Stream, EqSt x s2 -> EqSt s2 x
s2 : Stream
H : EqSt x s2
Invalid recursive call in the argument of "match" in "match
                                                 EqSt_reflex s2 H
                                                 with
                                                 | eqst _ _ _ x => x
                                                 end".
Recursive definition is: "fun (s2 : Stream) (H : EqSt x s2) =>
                          eqst s2 x
                            (eq_sym match H with
                                    | eqst _ _ H0 _ => H0
                                    end)
                            (let H0 :
                               forall s3 : Stream,
                               EqSt x s3 -> EqSt (tl s3) (tl x) :=
                               fun (s3 : Stream) (H0 : EqSt x s3) =>
                               match EqSt_reflex s3 H0 with
                               | eqst _ _ _ x => x
                               end in
                             H0 s2 H)"."
Please report at http://coq.inria.fr/bugs/.

File "./theories/Lists/Streams.v", line 199, characters 0-11:
Error:
Anomaly
"Typing failure of the following tactic:
synth with cache (only 1: split; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: destruct H; only 1: assumption; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: destruct H; only 1: assumption; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: inversion_clear H; only 1: tauto; only 1: exact H).
Typing error:
Recursive definition of ForAll_coind is ill-formed.
In environment
A, B : Type
f : A -> B
P : Stream B -> Prop
S : Stream A
ForAll_coind : ForAll (fun s : Stream A => P (map s)) S -> ForAll P (map S)
H : ForAll (fun s : Stream A => P (map s)) S
H0 :=
fun H : ForAll (fun s : Stream A => P (map s)) S =>
match ForAll_coind H with
| HereAndFurther _ _ x0 => x0
end : ForAll (fun s : Stream A => P (map s)) S -> ForAll P (tl (map S))
ForAll_coind0 : ForAll (fun s : Stream A => P (map s)) S
Invalid recursive call in the argument of "match" in "match
                                                 ForAll_coind0
                                                 with
                                                 | HereAndFurther _ _ x0 =>
                                                 x0
                                                 end".
Recursive definition is: "HereAndFurther S
                            match H with
                            | HereAndFurther _ H _ => H
                            end
                            (let H0 :
                               ForAll (fun s : Stream A => P (map s)) (tl S) :=
                               match ForAll_coind0 with
                               | HereAndFurther _ _ x0 => x0
                               end in
                             H0)"."
Please report at http://coq.inria.fr/bugs/.

File "./theories/Reals/Rtrigo1.v", line 746, characters 2-68:
Error: Stack overflow.

File "./theories/Numbers/Cyclic/Int31/Cyclic31.v", line 2250, characters 1-34:
Error: Stack overflow.

