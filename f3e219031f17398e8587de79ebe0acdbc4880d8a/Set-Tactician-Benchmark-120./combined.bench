coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	19.032409	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	18.927791	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	19.324647	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	19.410164	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	19.609549	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	19.452882	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	120	0.2	synth with cache (only 1: destruct p; only 1: reflexivity).	19.979973	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.1.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	20.641353	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	20.833871	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.3.0.3	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	21.098648	37
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	120	1.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: exact H).	21.745919	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	120	0.0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	21.608086	21
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	120	0.5.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	22.603103	17
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	120	0.0.0.0.0.5	synth with cache (only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	22.475587	31
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	120	0.8.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	22.837891	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	4.515293	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	4.652089	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	6.483788	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	120	0.0.0.19	synth with cache (only 1: elim p; only 1: intros ?; only 1: intros ?; only 1: reflexivity).	26.133861	167
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct b2; only 1: destruct b1; only 1: destruct H; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: destruct b1; only 1: destruct H; only 1: assumption; only 1: destruct H; only 1: assumption).	25.923379	34
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	120	0.0.0.0.0.0.0.0.0.0.0.0.0.1.11.1	synth with cache (only 1: intros; only 1: destruct b; only 1: destruct a; only 1: split; only 1: split; only 1: split; only 1: split; only 1: assumption; only 1: split; only 1: destruct a; only 1: split; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption).	27.721545	97
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	120	0.3.3	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	8.287301	28
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.1.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	9.502417	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	120	0.7.2	synth with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	7.001293	32
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	9.406682	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	120	10.0.0.2.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: trivial).	33.770788	237
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	120	0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto).	33.929104	118
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.4	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	7.101661	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.5.7	synth with cache (only 1: destruct p'; only 1: destruct q'; only 1: reflexivity).	9.436197	37
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	120	0.5.1	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.540736	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	120	0.0.0.0.3.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	17.055843	165
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	120	2.0.0.0	synth with cache (only 1: unfold all; only 1: intros ?; only 1: intros ?; only 1: auto).	6.603424	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	37.340530	145
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	120	0.12.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim identity_sym with (1 := H0); only 1: trivial).	13.717050	72
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	17.652393	63
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	120	0.4.1.0.0.0.0.6.1.0.0.0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: destruct H; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: destruct H; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	41.938762	251
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	120	0.0.0.1.0.0.0.0.0.0.2.0.0.0.0.4.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	42.492519	325
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	22.142319	130
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	6.253847	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	7.191465	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	120	0.0.0.6.5	synth with cache (only 1: intros ?; only 1: induction n; only 1: constructor; only 1: constructor; only 1: trivial).	8.662815	104
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	120	0.24.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: assumption).	21.772385	278
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	7.397700	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	6.383939	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	120	1.0.0.7.0	synth with cache (only 1: intros ?; only 1: unfold all; only 1: intros ?; only 1: intros ?; only 1: auto).	13.425549	105
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	6.318187	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	120	0.0.0.1.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption; only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption).	48.197051	777
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	120	10.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	20.336114	174
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	5.320325	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.1.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	9.115224	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	120	0.0.0.6.0.1.0.0.0.4.0.7.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	51.840045	280
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	120	11.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	7.451637	39
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	120	0.4.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.318808	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	120	0.4.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.423886	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	120	0.0.0.0.0.17.10	synth with cache (only 1: simpl in *; only 1: elim p; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl in *; only 1: auto).	55.101244	840
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	7.948999	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	10.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	11.972124	61
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	120	0.1.2.0.0.0.0.1.3.0.0.0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: destruct H; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: destruct H; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	56.512765	399
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.009569	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	120	0.0.4.2	synth with cache (only 1: intros ?; only 1: induction n; only 1: auto; only 1: auto).	7.147324	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.099528	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.618198	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	120	0.1.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.323782	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.629207	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	120	0	synth with cache (only 1: split).	4.742756	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	120	0.2.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.053634	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	10.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	16.938104	200
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	120	0.2.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.488303	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	120	0.1.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.967504	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	120	0.1.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.591276	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	120	0.3.1	synth with cache (only 1: intros; only 1: destruct e''; only 1: reflexivity).	5.635820	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	10.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	22.222132	444
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	120	0.7.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.315242	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	120	0.3.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.908487	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	120	0.7.1	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	6.237178	14
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	120	1.0.0.2.0.0.12.0.1.16.0	synth with cache (only 1: intros ?; only 1: split; only 1: split; only 1: intros ?; only 1: destruct H; only 1: assumption; only 1: intros ?; only 1: destruct H0; only 1: intros ?; only 1: destruct H; only 1: assumption).	68.917130	1871
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	120	0.3.5.0	synth with cache (only 1: intros; only 1: destruct H0; only 1: destruct H; only 1: reflexivity).	6.950257	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	4.607901	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	120	10.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	31.554376	719
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	120	0.1.4.4	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	19.959457	60
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	120	0.3.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	5.429962	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	120	0.2.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.820137	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	120	0.3.5.7.0	synth with cache (only 1: intros; only 1: destruct H2'; only 1: destruct H1'; only 1: destruct H2; only 1: reflexivity).	14.652289	130
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	120	0.3.1	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	5.690884	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	120	0.1.2.1	synth with cache (only 1: intros; only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	6.926817	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	120	1.0.0.0.0.3.0.0.5.0.0.2.0.0.0.0.4.20.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: elim H1; only 1: destruct H1; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros; only 1: apply H3; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	74.201623	1045
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	120	0.2.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.685028	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	4.707462	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	7.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	35.866258	629
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.5.4	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	7.217983	52
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	9.573642	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	120	0.3.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	12.802154	63
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	120	0.0.0.0.2.0.0.7.0.0.0.0.0.2.2.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H0; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	85.226448	802
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	120	0.5.12.8.24	synth with cache (only 1: pattern u; only 1: destruct H; only 1: pattern eq_id_comm_l; only 1: destruct u; only 1: reflexivity).	37.266525	1433
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.6.7.6	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	27.193339	195
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	7.7.1.0.0	synth with cache (only 1: intros ?; only 1: intros; only 1: symmetry; only 1: destruct r; only 1: split).	29.293315	306
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.6.7.6	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	16.531584	174
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	19.658507	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	5.085649	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	120	8.10.30.13.13.10.6.31	synth with cache (only 1: pattern eq_id_comm_l; only 1: destruct H; only 1: simpl in *; only 1: pattern eq_id_comm_l; only 1: unfold eq_trans_sym_inv_l; only 1: pattern f_equal; only 1: destruct u; only 1: reflexivity).	73.871156	2739
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	120	0.6.5.30	synth with cache (only 1: pattern eq_id_comm_l; only 1: destruct H; only 1: destruct u; only 1: reflexivity).	12.426684	210
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	120	0.3.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: intros; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl; only 1: rewrite IHn; only 1: trivial).	8.578718	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	120	0.6.1.24	synth with cache (only 1: pattern u; only 1: subst; only 1: destruct u; only 1: reflexivity).	99.766181	2446
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	120	11.11.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: destruct H0; only 1: assumption).	41.315157	426
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	120	0.4.0.0.0.0.2.3.2.4	synth with cache (only 1: simpl; only 1: revert f; only 1: induction n; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl; only 1: rewrite IHn; only 1: trivial).	117.633205	1552
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
