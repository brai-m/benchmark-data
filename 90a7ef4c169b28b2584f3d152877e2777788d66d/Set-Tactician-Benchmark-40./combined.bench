
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.3.1	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: auto; only 1: reflexivity).	0.0872588157654	8
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	5	search with cache (only 1: destr_bool).	0.0432889461517	6
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0	search with cache (only 1: auto).	0.0629620552063	1
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: auto).	0.0647079944611	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	2.0.1.21.26	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: simpl; only 1: now try PeanoNat.Nat.order').	11.7558529377	16866
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.5.8	search with cache (only 1: intro n; only 1: induction n as [| k Hrec]; only 1: auto; only 1: auto).	0.861309051514	234
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.0.0.1.4.1.0.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: auto).	0.563679218292	328
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40	2.47	search with cache (only 1: fix gcd_divide 1; only 1: auto).	9.71877098083	11379
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	23	search with cache (only 1: firstorder  (subst; auto)).	4.55549001694	3712
Coq.micromega.Tauto.eval_cnf_tt	40	1.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.112835884094	4
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	27	search with cache (only 1: firstorder  (subst; auto)).	2.6046230793	643
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.5.2.4.0.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: repeat rewrite make_conj_cons in *; only 1: unfold eval_tt; only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: tauto).	4.88996005058	1485
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.188591003418	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40	1.6.46	search with cache (only 1: intros N; only 1: fix even_spec 1; only 1: auto).	33.550579071	15590
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.Refl.make_impl_true	40	2.0.1.6.3	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: firstorder).	0.28259396553	377
Coq.micromega.Refl.make_impl_map	40	3.0.2.6	search with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: firstorder).	0.896648168564	326
Coq.micromega.Refl.make_conj_cons	40	1.0.3.0.15	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto).	4.32812786102	4943
Coq.micromega.Refl.make_conj_impl	40	3.0.0.4.0.0.0.0.0.1	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: split; only 1: auto; only 1: auto; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: firstorder).	8.65835809708	3951
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	2.24	search with cache (only 1: fix le_div2 1; only 1: auto).	6.71211409569	5154
Coq.rtauto.Bintree.map_app	40	0.0.1.0.0.0.2.2	search with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.582052946091	191
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0332899093628	5
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.0.0.5.3.7	search with cache (only 1: induction l; only 1: now intros []; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.69562888145	1339
Coq.rtauto.Bintree.Lget_app_Some	40	0.0.0.0.4.5.0.0.3.1	search with cache (only 1: induction l; only 1: simpl; only 1: intro Pdec; only 1: inversion 1; only 1: intros l' n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	6.4582669735	4646
Coq.rtauto.Bintree.Tget_Tempty	40	2	search with cache (only 1: now intros []).	0.0208010673523	3
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	3	search with cache (only 1: now intros []).	0.0121209621429	4
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.7.5.3.2.0	search with cache (only 1: intros; only 1: intro H; only 1: destr_eq H; only 1: contradict H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: auto).	1.60465908051	1532
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40
Coq.rtauto.Rtauto.compose1	40	16.0.1.0	search with cache (only 1: induction F; only 1: auto; only 1: intros A H; only 1: firstorder).	5.67241477966	5853
Coq.rtauto.Rtauto.compose2	40	10.2.1.0.0	search with cache (only 1: induction F; only 1: auto; only 1: simpl; only 1: intros A H; only 1: firstorder).	5.84011602402	4805
Coq.rtauto.Rtauto.compose3	40
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.funind.Recdef.le_lt_SS	40	3.5	search with cache (only 1: intro H; only 1: auto with arith).	0.0206320285797	10
Coq.funind.Recdef.Splus_lt	40	9.0.2	search with cache (only 1: destruct y; only 1: auto with arith; only 1: auto with arith).	0.478984832764	186
Coq.funind.Recdef.SSplus_lt	40	8	search with cache (only 1: auto with arith).	0.401017904282	72
Coq.funind.Recdef.max	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	2	search with cache (only 1: f_equiv).	0.070897102356	3
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	3.12	search with cache (only 1: split; only 1: Bool.destr_bool).	0.552998781204	201
Coq.setoid_ring.Ring_theory.IDmorph	40	17	search with cache (only 1: now f_equal).	0.220680952072	204
Coq.setoid_ring.Ring_theory.Eqsth	40	1.0.0.0.0.0.14	search with cache (only 1: split; only 1: intros a0; only 1: auto; only 1: intros a0; only 1: intros; only 1: auto; only 1: congruence).	0.658728837967	301
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	5.3.3.5.3.3.12	search with cache (only 1: constructor; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: auto; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: auto).	6.38197016716	6013
Coq.setoid_ring.Ring_theory.Eq_ext	40	2.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.434904098511	7
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	12	search with cache (only 1: firstorder).	0.538726806641	88
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	10	search with cache (only 1: firstorder).	0.499346971512	39
Coq.setoid_ring.Ring_theory.SRopp_ext	40	3.4	search with cache (only 1: intros a b H; only 1: trivial).	0.0531718730927	9
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.0.0.2	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.19163608551	7
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	3	search with cache (only 1: solve_proper).	0.0523998737335	4
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.0693528652191	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0817530155182	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	16	search with cache (only 1: now f_equal).	0.276015043259	231
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40	14	search with cache (only 1: firstorder).	2.39050412178	223
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	20.0	search with cache (only 1: intros x y H; only 1: simpl_relation).	0.956007003784	739
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	28.1	search with cache (only 1: intros x y H; only 1: simpl_relation).	2.78347206116	2474
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	5	search with cache (only 1: auto with *).	0.0603849887848	11
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0682067871094	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0896651744843	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.ssr.ssreflect.master_key	40	1	search with cache (only 1: tauto).	0.0190939903259	2
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.9	search with cache (only 1: unlock; only 1: discriminate).	0.191118955612	30
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	search with cache (only 1: by case : {}k {}).	0.0266230106354	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.13	search with cache (only 1: destruct 1; only 1: auto).	0.11180305481	224
Coq.ssr.ssreflect.iffLR	40	2	search with cache (only 1: tauto).	0.0293579101562	3
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.026643037796	1
Coq.ssr.ssreflect.iffLRn	40	0.2	search with cache (only 1: intro H; only 1: tauto).	0.0424518585205	4
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.0247440338135	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.0105979442596	1
Coq.ssr.ssrbool.is_true_true	40	15	search with cache (only 1: reflexivity).	0.0125958919525	91
Coq.ssr.ssrbool.not_false_is_true	40	1	search with cache (only 1: by [  ]).	0.0092248916626	2
Coq.ssr.ssrbool.is_true_locked_true	40	1.2.21	search with cache (only 1: symmetry; only 1: unlock; only 1: tauto).	0.0836491584778	344
Coq.ssr.ssrbool.negbT	40	0.0.1	search with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.0101208686829	4
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.00960087776184	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.0103418827057	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.0103571414948	1
Coq.ssr.ssrbool.negbK	40	13	search with cache (only 1: by case).	0.318023920059	67
Coq.ssr.ssrbool.negbNE	40	2	search with cache (only 1: by case : {}b {}).	0.00608110427856	3
Coq.ssr.ssrbool.negb_inj	40	7.9	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0829350948334	181
Coq.ssr.ssrbool.negbLR	40	7	search with cache (only 1: Bool.destr_bool).	0.0146000385284	17
Coq.ssr.ssrbool.negbRL	40	5	search with cache (only 1: Bool.destr_bool).	0.0141718387604	14
Coq.ssr.ssrbool.contra	40	0.23	search with cache (only 1: Bool.destr_bool; only 1: tauto).	0.51243686676	1006
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0142259597778	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.014701128006	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0143418312073	1
Coq.ssr.ssrbool.contraT	40	4.20.10	search with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: intuition).	1.48738598824	1698
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0138759613037	1
Coq.ssr.ssrbool.contraFT	40	10.21.7	search with cache (only 1: intros; only 1: Bool.destr_bool; only 1: intuition).	2.00100803375	3488
Coq.ssr.ssrbool.contraFN	40	10.22.4	search with cache (only 1: intros; only 1: Bool.destr_bool; only 1: intuition).	37.5970511436	3947
Coq.ssr.ssrbool.contraTF	40
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.040060043335	1
Coq.ssr.ssrbool.ifT	40	7	search with cache (only 1: by move {+}->).	0.021378993988	17
Coq.ssr.ssrbool.ifF	40	0	search with cache (only 1: by move {+}->).	0.1194460392	1
Coq.ssr.ssrbool.ifN	40	8	search with cache (only 1: by case : {}b {}).	0.0207290649414	14
Coq.ssr.ssrbool.if_same	40	3	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.232125043869	4
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case b).	0.165286064148	1
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0391240119934	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.00786399841309	1
Coq.ssr.ssrbool.ifE	40	10	search with cache (only 1: reflexivity || destruct H).	0.295435905457	21
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.112368106842	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0117259025574	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by move {+}<-; case Hb).	0.00904297828674	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.6.15	search with cache (only 1: intros; only 1: destruct H; only 1: by case Hb; auto; only 1: by case Hb; auto).	1.64426398277	443
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	3.15	search with cache (only 1: intros [? ?]; only 1: by case : {}Pb {}; constructor; auto).	0.177060127258	243
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	0.0.3	search with cache (only 1: split; only 1: exact : {}introTF {}true {}_ {}; only 1: exact : {}elimTF {}true {}_ {}).	0.0857739448547	6
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	4.4.4.6	search with cache (only 1: intro H; only 1: destruct H; only 1: intro H1; only 1: auto).	1.12753796577	531
Coq.ssr.ssrbool.impliesPn	40	0.7.4.7	search with cache (only 1: intro H; only 1: destruct H; only 1: intro H; only 1: auto).	1.03719305992	477
Coq.ssr.ssrbool.unlessL	40	5.10.11.29	search with cache (only 1: split; only 1: intros; only 1: intro H; only 1: tauto).	2.92726707458	2297
Coq.ssr.ssrbool.unlessR	40	3.9.13.25	search with cache (only 1: split; only 1: intros; only 1: intro H; only 1: tauto).	13.8212091923	1921
Coq.ssr.ssrbool.unless_sym	40	0.0.18.14.16.7.27	search with cache (only 1: split; only 1: intro H; only 1: intros Hfst Hsnd; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	37.1537079811	12093
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	10.3.8.2	search with cache (only 1: intros; only 1: intro H; only 1: intros; only 1: tauto).	28.7217741013	1040
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0142228603363	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0150551795959	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0183210372925	1
Coq.ssr.ssrbool.pair_andP	40	2	search with cache (only 1: tauto).	0.775158166885	21
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00552082061768	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00541090965271	1
Coq.ssr.ssrbool.negP	40	2	search with cache (only 1: by case b1; constructor).	0.00951313972473	3
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00543189048767	1
Coq.ssr.ssrbool.negPf	40
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0986039638519	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0126888751984	1
Coq.ssr.ssrbool.implyP	40	1	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0109570026398	2
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by [  ]).	0.00687599182129	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.00768184661865	1
Coq.ssr.ssrbool.andbT	40	0.0.19.4	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: now constructor; only 1: now constructor).	2.54815101624	759
Coq.ssr.ssrbool.andbF	40	11	search with cache (only 1: by case).	0.673622846603	48
Coq.ssr.ssrbool.andbb	40	0	search with cache (only 1: by case).	0.0669889450073	1
Coq.ssr.ssrbool.andbC	40	2.6	search with cache (only 1: intro H; only 1: intuition).	0.0237579345703	10
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.0565550327301	1
Coq.ssr.ssrbool.andbCA	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00841093063354	2
Coq.ssr.ssrbool.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.012687921524	1
Coq.ssr.ssrbool.andbACA	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0176289081573	2
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: by unlock).	0.0201840400696	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00616717338562	1
Coq.ssr.ssrbool.orbT	40	10	search with cache (only 1: by case).	0.0306289196014	29
Coq.ssr.ssrbool.orbF	40	1	search with cache (only 1: by case).	0.00853610038757	2
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00688409805298	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00675415992737	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0109310150146	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0293040275574	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.010057926178	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0185081958771	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: by case : {}b {}).	0.00840091705322	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.0929129123688	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : {}b {}).	0.00801205635071	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.00858402252197	1
Coq.ssr.ssrbool.andb_orl	40	1.7	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0206549167633	10
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0113141536713	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0109341144562	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0104739665985	1
Coq.ssr.ssrbool.andb_idl	40	9.0	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.805124044418	34
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.130712985992	1
Coq.ssr.ssrbool.andb_id2l	40	2.2.6.5	search with cache (only 1: intros; only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	2.83559894562	283
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.333187818527	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0757219791412	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0881090164185	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.111428022385	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0191271305084	1
Coq.ssr.ssrbool.negb_and	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0120370388031	2
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00880408287048	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00943183898926	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00858283042908	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00916194915771	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00804209709167	1
Coq.ssr.ssrbool.implybT	40	1	search with cache (only 1: by case : {}b {} =>// {+}->).	0.00666189193726	2
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.00641894340515	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.00645399093628	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.00781488418579	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.00829005241394	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00966095924377	1
Coq.ssr.ssrbool.implybE	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0636031627655	2
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0634469985962	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00966095924377	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00873494148254	1
Coq.ssr.ssrbool.implyb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.256181001663	1
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0991508960724	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.279934167862	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00652885437012	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00581097602844	1
Coq.ssr.ssrbool.addbb	40	0	search with cache (only 1: by case).	0.00543189048767	1
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00888705253601	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0104517936707	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0102610588074	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0110898017883	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0168390274048	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0104689598083	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0104398727417	1
Coq.ssr.ssrbool.addKb	40	3.3.8.7	search with cache (only 1: intro H; only 1: destruct H; only 1: by case; only 1: by case).	0.340510845184	650
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00734806060791	1
Coq.ssr.ssrbool.addIb	40	3.11	search with cache (only 1: intros Hfst Hsnd; only 1: Bool.destr_bool).	0.585520029068	188
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0304188728333	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.0093400478363	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.0119321346283	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00997805595398	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00986409187317	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.26	search with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	0.70591211319	461
Coq.ssr.ssrbool.subrelUl	40	0.16.11.8.9	search with cache (only 1: intro H; only 1: simpl; only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: by unlock).	37.6359717846	5408
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40	4.11	search with cache (only 1: intro H; only 1: by [  ]).	0.049161195755	118
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	1	search with cache (only 1: by case : {}pT {}pp {}).	0.028589963913	2
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.00838685035706	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.00880813598633	5
Coq.ssr.ssrbool.simpl_predE	40	0	search with cache (only 1: by [  ]).	0.00601196289062	1
Coq.ssr.ssrbool.mem_simpl	40	1	search with cache (only 1: by [  ]).	0.00726008415222	2
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by rewrite -mem_topred).	0.00946402549744	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	0	search with cache (only 1: reflexivity).	0.0528230667114	1
Coq.ssr.ssrbool.in1W	40	0.4	search with cache (only 1: intros; only 1: by [  ]).	0.0455689430237	6
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.037036895752	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00940918922424	1
Coq.ssr.ssrbool.in1T	40	11.1	search with cache (only 1: intros; only 1: intuition).	0.639125108719	142
Coq.ssr.ssrbool.in2T	40	1.5	search with cache (only 1: intro H; only 1: by move  {}=>? ?; auto).	0.1326649189	16
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0196750164032	2
Coq.ssr.ssrbool.sub_in1	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.0416300296783	1
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.348411083221	2
Coq.ssr.ssrbool.sub_in111	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.710261106491	3
Coq.ssr.ssrbool.on1W	40	1	search with cache (only 1: by move  {}=>? ?).	0.45218205452	2
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.218441009521	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0821781158447	1
Coq.ssr.ssrbool.on1T	40	4	search with cache (only 1: by move  {}=>? ?; auto).	0.48375082016	11
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0188748836517	2
Coq.ssr.ssrbool.on2T	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.00986289978027	1
Coq.ssr.ssrbool.subon1	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.3480489254	1
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	0.417512893677	1
Coq.ssr.ssrbool.subon2	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.53089594841	3
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	15.2.10	search with cache (only 1: intros; only 1: subst; only 1: intuition).	25.5369579792	1029
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	0.638804912567	1
Coq.ssr.ssrbool.canLR_on	40	0	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.292824029922	1
Coq.ssr.ssrbool.canRL_on	40	4	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.2051820755	5
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.198436021805	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0182559490204	1
Coq.ssr.ssrbool.onT_bij	40	2	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0595679283142	3
Coq.ssr.ssrbool.sub_in_bij	40	0.9	search with cache (only 1: intro H; only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.697328805923	36
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.213973045349	1
Coq.ssr.ssrbool.sub_in2	40	26.13.2	search with cache (only 1: intros; only 1: intro H1; only 1: auto).	25.2231869698	3558
Coq.ssr.ssrbool.sub_in3	40	26.3.11	search with cache (only 1: red; only 1: intros; only 1: auto).	8.34281086922	2815
Coq.ssr.ssrbool.sub_in12	40	1.10	search with cache (only 1: intros Hfst Hsnd; only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	0.592945098877	57
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  {}=>/= sub1 sub; apply : {}sub_in111 {}).	0.00904488563538	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	17	search with cache (only 1: by move  {}=>eq_fg eq_gh x; rewrite eq_fg).	0.49980711937	129
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.00890398025513	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.623096227646	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	5	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.134612798691	11
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.321163892746	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0.1	search with cache (only 1: intros; only 1: firstorder).	0.00619196891785	3
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40	5	search with cache (only 1: split).	0.0253629684448	6
Coq.ssr.ssrfun.fsym	40	1.2	search with cache (only 1: intros; only 1: by [  ]).	0.0310549736023	5
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	0	search with cache (only 1: by [  ]).	0.0262649059296	1
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0345540046692	1
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : {}u {}).	0.0951051712036	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.0282120704651	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.264110088348	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	1.07469511032	1
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.236423969269	2
Coq.ssr.ssrfun.canLR	40	7.3.11	search with cache (only 1: intros; only 1: subst; only 1: intuition).	4.15216088295	476
Coq.ssr.ssrfun.canRL	40	7.4.7	search with cache (only 1: intros; only 1: subst; only 1: intuition).	3.16230201721	316
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40	2.3	search with cache (only 1: subst; only 1: auto).	0.0164341926575	7
Coq.ssr.ssrfun.inj_id	40	0	search with cache (only 1: by [  ]).	0.00930190086365	1
Coq.ssr.ssrfun.inj_can_sym	40
Coq.ssr.ssrfun.inj_comp	40
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.4	search with cache (only 1: intros; only 1: assumption).	0.00614905357361	6
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: reflexivity).	0.00349092483521	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.00475597381592	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00513219833374	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now trivial).	0.004154920578	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40	5.17.0.1.6.1	search with cache (only 1: left; only 1: revert n v1 v2; only 1: refine (@rect2 _ _ _ _ _); only 1: reflexivity; only 1: fix le_div2 1; only 1: now simpl).	38.1273581982	22037
Coq.Vectors.VectorEq.cast	40	0.2.6.4.2	search with cache (only 1: intros a; only 1: intros m n v1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial).	0.703114032745	724
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40	1.36.9.6	search with cache (only 1: generalize dependent n; only 1: intros h; only 1: fix even_spec 1; only 1: now f_equal).	14.1177229881	23410
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.1	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0251319408417	4
Coq.Vectors.VectorSpec.const_nth	40	0.0.3.12	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	0.162597894669	167
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	1	search with cache (only 1: auto with arith).	0.011057138443	2
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	7.0.0.0.7.10	search with cache (only 1: intros; only 1: induction v; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: now simpl).	2.9723379612	3322
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0368890762329	9
Coq.Vectors.VectorSpec.uncons_cons	40	0.1.0.1	search with cache (only 1: intros; only 1: induction v; only 1: now simpl; only 1: now simpl).	0.0226821899414	6
Coq.Vectors.VectorSpec.append_comm_cons	40	0	search with cache (only 1: now simpl).	0.0169739723206	1
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40	2.3	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.27708697319	89
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	2.1.2	search with cache (only 1: intros m n p; only 1: intros <-; only 1: congruence).	0.0370900630951	8
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.0114569664001	1
Coq.Setoids.Setoid.Seq_sym	40	0	search with cache (only 1: firstorder).	0.0119230747223	1
Coq.Setoids.Setoid.Seq_trans	40	0.1.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: firstorder).	0.159063816071	4
Coq.Setoids.Setoid.gen_st	40	0	search with cache (only 1: CRelationClasses.simpl_crelation).	0.0309510231018	1
Coq.Bool.IfProp.Iftrue_inv	40	1.1.0.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.0164451599121	6
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.4.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: assumption).	0.0144739151001	10
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.0250759124756	3
Coq.Bool.IfProp.IfProp_or	40	0.0.0.0.2.1	search with cache (only 1: intros; only 1: inversion H; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.0352809429169	43
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.DecBool.ifdec_left	40	0.0.18.1.2.0	search with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H x0; only 1: destruct H; only 1: assumption).	0.801024913788	4837
Coq.Bool.DecBool.ifdec_right	40	1.0.0.5.0.4.1	search with cache (only 1: intro A; only 1: destruct H; only 1: intros; only 1: case H; only 1: assumption; only 1: intros; only 1: auto).	0.403720140457	1836
Coq.Bool.Sumbool.sumbool_of_bool	40
Coq.Bool.Sumbool.bool_eq_rec	40	0.1.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00802683830261	4
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0063259601593	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0100247859955	7
Coq.Bool.Sumbool.sumbool_not	40	0.0.0.0.2	search with cache (only 1: case H1; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0092670917511	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	0	search with cache (only 1: discriminate).	0.00416207313538	1
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00419497489929	1
Coq.Bool.Bool.eq_true_false_abs	40	3.6.3.7.11	search with cache (only 1: intro H; only 1: destruct H; only 1: discriminate; only 1: intro H; only 1: discriminate).	0.263010025024	2273
Coq.Bool.Bool.not_true_is_false	40	2.3.0	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: trivial).	0.00701093673706	8
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00544285774231	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.1	search with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.100419998169	33
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00862789154053	3
Coq.Bool.Bool.leb_implb	40	2.12.0	search with cache (only 1: intuition; only 1: destr_bool; only 1: destr_bool).	0.124086856842	325
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.00650000572205	1
Coq.Bool.Bool.eqb_reflx	40	1.0	search with cache (only 1: intuition; only 1: destr_bool).	0.00673985481262	3
Coq.Bool.Bool.eqb_prop	40	3.1	search with cache (only 1: intuition; only 1: destr_bool).	0.00931406021118	6
Coq.Bool.Bool.eqb_true_iff	40	0.0.2.0.1	search with cache (only 1: split; only 1: intros; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.0114030838013	8
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0215289592743	16
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.00807404518127	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00728297233582	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00658512115479	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00702595710754	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0100090503693	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00809979438782	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00671100616455	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00686383247375	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00716495513916	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0087718963623	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00743699073792	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0486669540405	57
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0139729976654	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0102369785309	5
Coq.Bool.Bool.orb_prop	40	0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0531010627747	72
Coq.Bool.Bool.orb_true_intro	40	1.3.1	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: intuition).	0.0919749736786	152
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.00830316543579	1
Coq.Bool.Bool.orb_false_elim	40	0.0.0.3.1	search with cache (only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: destr_bool; only 1: intuition).	0.0645010471344	83
Coq.Bool.Bool.orb_diag	40	0	search with cache (only 1: destr_bool).	0.00700402259827	1
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.00653386116028	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.0066339969635	1
Coq.Bool.Bool.orb_false_r	40	0	search with cache (only 1: destr_bool).	0.00672912597656	1
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00675916671753	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00658297538757	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.00809097290039	1
Coq.Bool.Bool.orb_assoc	40	1	search with cache (only 1: destr_bool).	0.015741109848	2
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0211410522461	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0167591571808	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.00953888893127	9
Coq.Bool.Bool.andb_false_intro1	40	0	search with cache (only 1: destr_bool).	0.00711297988892	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00534009933472	3
Coq.Bool.Bool.andb_false_r	40	1	search with cache (only 1: destr_bool).	0.00513887405396	2
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00436687469482	1
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.00478506088257	1
Coq.Bool.Bool.andb_true_r	40	0	search with cache (only 1: destr_bool).	0.0854690074921	1
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00590395927429	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.1	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0156559944153	15
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00696396827698	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.00682377815247	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.00864481925964	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00878500938416	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.010176897049	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0104141235352	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0105378627777	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00619411468506	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00620102882385	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00526213645935	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00456309318542	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00479316711426	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00562405586243	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00487589836121	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.00806903839111	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.00987792015076	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0183691978455	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0396721363068	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.010589838028	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.00835704803467	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.00880193710327	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.00643110275269	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0075831413269	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.00585579872131	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0206439495087	5
Coq.Bool.Bool.eq_true_iff_eq	40	1.0.1.0.1.1	search with cache (only 1: destruct b1; only 1: intuition; only 1: destruct b2; only 1: intuition; only 1: intros [? ?]; only 1: trivial).	0.0772869586945	76
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00876402854919	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00677990913391	2
Coq.Bool.Bool.absurd_eq_bool	40	2.2.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00965309143066	7
Coq.Bool.Bool.absurd_eq_true	40	3.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00647497177124	5
Coq.Bool.Bool.trans_eq_bool	40	0.2.0	search with cache (only 1: intros; only 1: subst; only 1: destr_bool).	0.00796103477478	5
Coq.Bool.Bool.Is_true_eq_true	40	3.1	search with cache (only 1: destr_bool; only 1: intuition).	0.00874400138855	6
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00657391548157	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.005854845047	3
Coq.Bool.Bool.eqb_refl	40	1	search with cache (only 1: destr_bool).	0.00674605369568	2
Coq.Bool.Bool.eqb_eq	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0111510753632	4
Coq.Bool.Bool.orb_prop_elim	40	0.2.1.0.1.0.1	search with cache (only 1: destr_bool; only 1: right; only 1: auto; only 1: right; only 1: auto; only 1: tauto; only 1: tauto).	0.17600107193	242
Coq.Bool.Bool.orb_prop_intro	40	2.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00898885726929	4
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.00999784469604	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0110900402069	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00968408584595	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00858998298645	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00726294517517	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00709915161133	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00619912147522	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00636410713196	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.00659990310669	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00473785400391	1
Coq.Bool.Bool.andb_lazy_alt	40	1	search with cache (only 1: destr_bool).	0.00727105140686	2
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.0061240196228	1
Coq.Bool.Bool.reflect_iff	40	14.0.0.13.4	search with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: intuition; only 1: intuition; only 1: destr_bool).	4.51595807076	13872
Coq.Bool.Bool.iff_reflect	40	8.7.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.27236700058	611
Coq.Bool.Bool.reflect_dec	40	0.0.1.3	search with cache (only 1: unfold not; only 1: destruct 1; only 1: tauto; only 1: intuition).	0.106245040894	42
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0108420848846	6
Coq.Bool.BoolEq.beq_eq_true	40	1.3.0	search with cache (only 1: destr_bool; only 1: subst; only 1: auto).	0.010176897049	7
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40	5.0.1.2.0.0.0.1.3.0	search with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intro eq; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	32.997961998	21615
Coq.Lists.ListSet.set_mem_correct1	40	0.0.3.0.0.3.1	search with cache (only 1: simple induction x; only 1: discriminate; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto).	1.24802398682	701
Coq.Lists.ListSet.set_mem_correct2	40	3.0.0.0.0.1.0	search with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	0.740921974182	216
Coq.Lists.ListSet.set_mem_complete1	40	2.3.0.0.0.0.1.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: intro Ha; only 1: apply in_nil; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intuition; only 1: intuition).	12.6751928329	6071
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	0.1.0.0.5.0.2.0.0.1.1.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec b a0); only 1: subst; only 1: left; only 1: auto with datatypes; only 1: right; only 1: auto with datatypes).	8.20741295815	6810
Coq.Lists.ListSet.set_add_intro	40	1.0.3	search with cache (only 1: inversion 1; only 1: auto; only 1: auto with datatypes).	0.142926931381	61
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.1.1.0.0.0.0.0.0.0.0.1.0.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: auto; only 1: auto).	16.9216868877	7627
Coq.Lists.ListSet.set_add_not_empty	40	6.4.0.0.0.2.0.4	search with cache (only 1: simple induction x; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: discriminate).	4.47724795341	2880
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40	1.0.0.3.13	search with cache (only 1: intros a b Ha Hb; only 1: elim Ha; only 1: auto with datatypes; only 1: simpl; only 1: eauto).	16.9401180744	10341
Coq.Lists.ListSet.set_union_intro2	40	0.0.1.0.2.3.0.1.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intros H1 H2 [H3| H4]; only 1: auto; only 1: auto).	2.48927617073	1661
Coq.Lists.ListSet.set_union_intro	40	0.0.1	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.357720136642	43
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.3.0.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: auto with datatypes).	1.65779519081	657
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0979831218719	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	1.0.2.0.1.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 l Hrec y; only 1: intros; only 1: eauto with datatypes).	0.877008199692	185
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	2.0.2.29	search with cache (only 1: induction l as [| a l' Hrec]; only 1: firstorder; only 1: simpl; only 1: intuition).	27.6461920738	2079
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	0.14	search with cache (only 1: intros [? [? ?]]; only 1: trivial).	0.0247540473938	112
Coq.Lists.Streams.tl_nth_tl	40
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	3.0.5	search with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto with datatypes).	0.0290420055389	81
Coq.Lists.Streams.trans_EqSt	40	1.2.8.0	search with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct H; only 1: coinduction ltac:(EqSt_reflex); only 1: assumption).	0.852091789246	1954
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	18.17.0	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.453281879425	3352
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.1	search with cache (only 1: simple induction n; only 1: auto; only 1: simpl; only 1: auto).	0.00848197937012	5
Coq.Lists.Streams.Str_nth_map	40	0.1.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.00855422019958	5
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	0.1.0.0.1	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: intros; only 1: apply IHn).	0.0100159645081	7
Coq.Lists.Streams.Str_nth_zipWith	40	0.1.0.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0102360248566	7
Coq.Lists.List.nil_cons	40	10	search with cache (only 1: destr_bool).	0.253458023071	75
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	0.0.0.1	search with cache (only 1: destruct l as [| x xs]; only 1: intros; only 1: discriminate; only 1: firstorder  discriminate).	0.0451200008392	14
Coq.Lists.List.length_zero_iff_nil	40	0.0.0.8.0.0.0.9.0	search with cache (only 1: split; only 1: destruct l; only 1: simpl; only 1: trivial; only 1: firstorder  discriminate; only 1: destruct l; only 1: simpl; only 1: trivial; only 1: firstorder  discriminate).	2.93528389931	3772
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.0138399600983	1
Coq.Lists.List.hd_error_cons	40	0	search with cache (only 1: reflexivity).	0.0104069709778	1
Coq.Lists.List.in_eq	40	0.0	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.0116908550262	2
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0108518600464	2
Coq.Lists.List.not_in_cons	40	2.7.2.5.3.0.0	search with cache (only 1: simpl; only 1: split; only 1: intro H; only 1: auto; only 1: inversion 1; only 1: red; only 1: intuition).	2.89020204544	3651
Coq.Lists.List.in_nil	40	1	search with cache (only 1: auto).	0.0106298923492	2
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0138728618622	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	0.0.0	search with cache (only 1: simpl; only 1: intros; only 1: reflexivity).	0.0155329704285	3
Coq.Lists.List.app_nil_r	40	0.3.4.0.2	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.255050182343	281
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0270810127258	7
Coq.Lists.List.app_assoc	40	2.1.7.0.1.0	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	1.74585199356	1418
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.02774310112	7
Coq.Lists.List.app_comm_cons	40	0.1.2	search with cache (only 1: intros l m n; only 1: simpl; only 1: f_equal).	0.0183339118958	6
Coq.Lists.List.app_eq_nil	40	0.1.2.0	search with cache (only 1: induction l as [| a tail]; only 1: intros a r; only 1: auto; only 1: firstorder  discriminate).	0.0265250205994	7
Coq.Lists.List.app_eq_unit	40	0.0.0.0.2.9.0.10.0.0.2	search with cache (only 1: destruct x as [| a l]; only 1: simpl; only 1: auto; only 1: destruct l as [| x l]; only 1: simpl; only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: simpl; only 1: intros; only 1: discriminate H).	31.5260529518	31948
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	1.13.1.1.3.2.0	search with cache (only 1: destruct l as [| x l]; only 1: trivial; only 1: simpl; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	19.3269338608	17095
Coq.Lists.List.in_app_or	40	5.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder  discriminate).	0.722389936447	150
Coq.Lists.List.in_or_app	40	10.0.2.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate).	2.9048511982	2745
Coq.Lists.List.in_app_iff	40	0.1.2.1.14.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: intro H; only 1: intros; only 1: simpl; only 1: intuition).	30.1443309784	25222
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40	2.33	search with cache (only 1: fix gcd_divide 1; only 1: auto).	4.68080210686	9769
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0.0	search with cache (only 1: intros n l d; only 1: simpl; only 1: auto).	0.016294002533	3
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.2.1.1.1.0.3.2.1.2	search with cache (only 1: induction l; only 1: destruct n; only 1: easy; only 1: easy; only 1: destruct n; only 1: auto; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).	30.1318421364	32910
Coq.Lists.List.app_nth1	40	1.0.6.1.3.2	search with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: auto with arith).	5.89145302773	4874
Coq.Lists.List.app_nth2	40	1.1.0.1.5.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: auto; only 1: trivial; only 1: inversion 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	17.5298011303	9809
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	0.1.0.0.1.1.2.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	1.14221715927	740
Coq.Lists.List.nth_error_app2	40	0.0.1.0.0.4.0.0.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: solve [ inversion H ]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	3.96186280251	2716
Coq.Lists.List.nth_error_nth	40	0.0.0.2.0.0.2.2.0.1.6	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: easy; only 1: easy; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto).	5.57682609558	4946
Coq.Lists.List.nth_error_nth'	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: auto; only 1: simpl; only 1: auto with arith).	0.0473499298096	16
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	1	search with cache (only 1: intuition).	0.0108320713043	2
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0250368118286	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.0.5.2.0.1.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite (IHl y); only 1: simpl; only 1: auto).	9.54481101036	7562
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40	0.9.0.21.0.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: Nat.nzsimpl; only 1: auto).	37.9922530651	56704
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	0.0.7	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: auto).	0.339684963226	56
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0	search with cache (only 1: reflexivity).	0.0121290683746	1
Coq.Lists.List.concat_cons	40	1.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0196549892426	7
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40	13	search with cache (only 1: decide equality).	0.206558942795	221
Coq.Lists.List.map_cons	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.0130469799042	3
Coq.Lists.List.in_map	40	0.2.2.0.2.0.0.5	search with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: firstorder; only 1: subst; only 1: auto).	4.65518593788	2912
Coq.Lists.List.in_map_iff	40	1.0.1.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	0.0773310661316	9
Coq.Lists.List.map_length	40	0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0163290500641	7
Coq.Lists.List.map_nth	40	0.0.3.0.3.0.0.0.0.2.2	search with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: intros [| n]; only 1: auto; only 1: auto).	23.237580061	15033
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	1.10.0.1.0.4	search with cache (only 1: induction l; only 1: auto; only 1: intro y; only 1: simpl; only 1: f_equal; only 1: auto).	5.10295701027	3985
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	5.1.0.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: firstorder  discriminate).	0.574902057648	345
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.3.0.0.2.20	search with cache (only 1: intros P H0 HS; only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.31773281097	1436
Coq.Lists.List.concat_map	40
Coq.Lists.List.map_id	40	0.0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.0283160209656	8
Coq.Lists.List.map_map	40	0.3.0.0.0.6	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.554993867874	291
Coq.Lists.List.map_ext_in	40	0.0.3.6.1.1.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder; only 1: f_equal; only 1: auto; only 1: auto).	17.4775309563	4348
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.1.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.036514043808	8
Coq.Lists.List.fold_left_app	40	1.0.0.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0312769412994	8
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.7.0.2.0.2	search with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).	4.0888209343	2738
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.64958190918	328
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	2.0.1.0.7.0.1.0.7	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intros; only 1: intuition congruence).	12.1561050415	5334
Coq.Lists.List.find_none	40	1.1.1.5.7.0.0.0.5	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: case_eq (f a); only 1: easy; only 1: intuition; only 1: subst; only 1: firstorder  (subst; auto)).	38.2568378448	24766
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0174679756165	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	3.3.3.2.0.1.3.0	search with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: now intros ->).	7.60378503799	5132
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40	0.0.4.3.3.0.0.0.1	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	11.0896530151	7688
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0303530693054	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.0.0.1.0.0.0.0.1.0.0.1.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	9.20345687866	5051
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.0.4.9.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	4.52244305611	5719
Coq.Lists.List.split_length_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0376498699188	9
Coq.Lists.List.split_combine	40	0.2.0.4.7.0.0.0.7.2	search with cache (only 1: firstorder  (subst; auto); only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: destruct (split l); only 1: simpl; only 1: f_equal; only 1: auto).	15.8646960258	22315
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40	0.3.1.1.1.1.0.0.3	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: auto; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: simpl; only 1: injection H; only 1: auto).	25.8765671253	10345
Coq.Lists.List.in_combine_r	40	0.2.1.1.9.1.0.2.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: destruct l'; only 1: auto; only 1: firstorder; only 1: injection H; only 1: injection H; only 1: simpl; only 1: auto).	39.873513937	32203
Coq.Lists.List.combine_length	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.77412199974	770
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	7.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto)).	1.30949306488	443
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	0.0.20.1.8.26	search with cache (only 1: destruct l; only 1: red; only 1: auto; only 1: hnf; only 1: simpl; only 1: auto).	6.25709819794	8694
Coq.Lists.List.lel_trans	40	23.4.0	search with cache (only 1: unfold lel; only 1: firstorder; only 1: Nat.Private_Tac.order).	2.84990000725	3742
Coq.Lists.List.lel_cons_cons	40	2.0.0.3	search with cache (only 1: unfold lel; only 1: intros; only 1: simpl; only 1: auto with arith).	0.0363600254059	22
Coq.Lists.List.lel_cons	40	2.0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto).	0.0142891407013	6
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0134909152985	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	2	search with cache (only 1: auto).	0.00993204116821	3
Coq.Lists.List.incl_tl	40	3.7	search with cache (only 1: intros a' y H H0; only 1: intuition).	0.063353061676	62
Coq.Lists.List.incl_tran	40	1	search with cache (only 1: auto).	0.0177748203278	2
Coq.Lists.List.incl_appl	40	5	search with cache (only 1: auto with datatypes).	0.0353469848633	12
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.29536986351	1
Coq.Lists.List.incl_cons	40	2.30.2	search with cache (only 1: intros; only 1: red; only 1: firstorder  (subst; auto)).	4.58797311783	6540
Coq.Lists.List.incl_app	40	2.2.3.0.1.0.4.5.10	search with cache (only 1: unfold incl; only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros y H0 H1; only 1: intro H; only 1: intuition).	34.3584501743	21006
Coq.Lists.List.firstn_nil	40	0.0.0.0.3	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0232260227203	8
Coq.Lists.List.firstn_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0105710029602	2
Coq.Lists.List.firstn_all	40	0.0.0.0.0.12	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.19252204895	152
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.0159029960632	1
Coq.Lists.List.firstn_le_length	40	0.0.1.1.0.1.0	search with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.0543880462646	21
Coq.Lists.List.firstn_length_le	40	4.0.0.0.2.2.0.6.0	search with cache (only 1: induction l; only 1: destruct n; only 1: auto; only 1: auto with arith; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	22.4236109257	15865
Coq.Lists.List.firstn_app	40
Coq.Lists.List.firstn_app_2	40	1.1.0.3.0.0.6.1.3	search with cache (only 1: intros l1 l2; only 1: revert n; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: f_equal; only 1: auto).	7.88353896141	6760
Coq.Lists.List.firstn_firstn	40	1.44	search with cache (only 1: fix gcd_divide 1; only 1: auto).	39.5775649548	43002
Coq.Lists.List.firstn_skipn_comm	40	0.0.6.1.2.0.1.7	search with cache (only 1: intro; only 1: induction n as [| k iHk]; only 1: auto; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: now rewrite ?firstn_nil; only 1: simpl; only 1: auto).	15.2745268345	11995
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.0118100643158	1
Coq.Lists.List.skipn_nil	40	0.0.3	search with cache (only 1: intros [| n]; only 1: now simpl; only 1: now simpl).	0.0165898799896	6
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.0225441455841	1
Coq.Lists.List.skipn_none	40	0.0.0.0.4	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0389280319214	16
Coq.Lists.List.skipn_all2	40	2.0.0.0.0.3.0	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: auto with arith).	2.73894095421	1077
Coq.Lists.List.firstn_skipn	40	0.2.0.0.0.2.0.3	search with cache (only 1: induction n; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.96676492691	703
Coq.Lists.List.firstn_length	40	0.0.0.0.2.0.4	search with cache (only 1: induction n; only 1: auto; only 1: destruct l; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: auto).	1.42691898346	411
Coq.Lists.List.skipn_length	40	1.0.0.0.0.0.0.0.0.0.9	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	15.0657608509	11264
Coq.Lists.List.skipn_all	40	0.0.0.0.4	search with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0356798171997	9
Coq.Lists.List.skipn_app	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: auto; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.0393888950348	10
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	0.0.0.0.6	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.024269104	50
Coq.Lists.List.combine_firstn_l	40	0.0.0.0.0.2.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.35996508598	411
Coq.Lists.List.combine_firstn_r	40	0.0.0.0.0.0.1.2.0.0.0.0.13.5.0	search with cache (only 1: induction l as [| x l IHl]; only 1: intros l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: simpl; only 1: auto; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	22.1867539883	21264
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	2.2.1.1.3	search with cache (only 1: induction 1; only 1: intros; only 1: intuition; only 1: intros; only 1: firstorder).	1.77208018303	860
Coq.Lists.List.Add_length	40	0.0.0.0.5	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.02849817276	10
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0191240310669	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.747538089752	4
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	0.1.0.0.3.8	search with cache (only 1: intro n; only 1: induction n; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	0.787853956223	532
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	0.5.1.3.0.0.3	search with cache (only 1: induction len; only 1: simpl; only 1: now intros []; only 1: intro; only 1: simpl; only 1: f_equal; only 1: auto).	3.70281410217	3045
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	1.3	search with cache (only 1: firstorder; only 1: inversion_clear H).	0.025267124176	17
Coq.Lists.List.Exists_cons	40	0.0.5.0.0.4.2	search with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	1.65848302841	719
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	1.0.1.1.3.2.0.1.5	search with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: simpl; only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: subst; only 1: auto; only 1: intuition).	16.6583120823	10071
Coq.Lists.List.Forall_inv	40	0.2	search with cache (only 1: inversion 1; only 1: auto).	0.0336859226227	17
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40	0.1.1.3.1.0.1.4.2.2	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: destruct Hrec as [Hl'| Hl']; only 1: auto; only 1: right; only 1: abstract now inversion 1; only 1: right; only 1: abstract now inversion 1).	17.9595839977	8259
Coq.Lists.List.Forall_inv_tail	40	0.2.1	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0211849212646	6
Coq.Lists.List.Exists_impl	40	0.0.5.9.27.3	search with cache (only 1: intro Pdec; only 1: intros f g H l; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: auto; only 1: now constructor).	12.6193950176	30132
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.0713911056519	10
Coq.Lists.List.Forall_Exists_dec	40	5.0.2.0.0.0.2.0.0.0.0.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now constructor; only 1: right; only 1: now apply Exists_cons_tl).	18.1468682289	9856
Coq.Lists.List.Forall_impl	40	0.0.0.0.0.6.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.423055887222	256
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: auto).	0.0115511417389	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	0.0.0.7	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0463330745697	35
Coq.Lists.List.repeat_spec	40	2.0.4.0.5	search with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.274719953537	240
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: repeat intro; only 1: auto).	0.0788080692291	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	3.0.0.3.4	search with cache (only 1: intuition; only 1: induction l; only 1: auto; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).	4.38949584961	1047
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.0.0.1.0.0.0.0.3	search with cache (only 1: induction 1; only 1: simpl; only 1: induction l; only 1: intuition; only 1: intuition; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: do 2 (etransitivity; try eassumption)).	6.57881402969	1500
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	0.1.1.3.1.5	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	0.69550204277	216
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40	2.8.3.4	search with cache (only 1: intros; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	3.36013793945	956
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0590951442719	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	1.0.3.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	0.0901229381561	9
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: eauto; only 1: auto).	0.0421438217163	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40
Coq.Lists.SetoidList.InA_cons	40	0.0.3.0.0.13.1	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: destruct 1; only 1: auto; only 1: auto).	4.06476020813	4356
Coq.Lists.SetoidList.InA_nil	40	4.3.0	search with cache (only 1: split; only 1: inversion 1; only 1: destruct 1).	0.0228540897369	10
Coq.Lists.SetoidList.InA_alt	40	0.0.1.1.1.2.3.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	1.89465999603	1527
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	2.8	search with cache (only 1: intros a H; only 1: inversion H).	0.0697839260101	66
Coq.Lists.SetoidList.eqlistA_altdef	40	0.1.3.1.1.3.1	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	1.30515909195	1110
Coq.Lists.SetoidList.equivlist_equiv	40	15	search with cache (only 1: firstorder).	2.71825408936	2243
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.13.6.5	search with cache (only 1: intros x y z H; only 1: induction 1; only 1: eauto with *; only 1: auto).	6.29702496529	1793
Coq.Lists.SetoidList.In_InA	40	2.0.0.5	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: firstorder  (subst; auto)).	0.725136995316	39
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.2.3	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.0438859462738	16
Coq.Lists.SetoidList.InA_double_head	40	0.0.0.4.5	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto; only 1: auto; only 1: auto).	0.701777935028	144
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.057993888855	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.10.3	search with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: constructor).	1.66402006149	172
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.5	search with cache (only 1: intros H; only 1: rewrite !InA_cons; only 1: tauto).	0.0378248691559	8
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.6	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0476448535919	9
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.1.0.3	search with cache (only 1: constructor; only 1: rewrite InA_app_iff; only 1: tauto; only 1: rewrite InA_app_iff; only 1: tauto).	0.0437171459198	9
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	0.6.0.8.0.0.0.5	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: f_equal; only 1: auto).	7.43616294861	6282
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40	5.5.2.0.14	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: intros; only 1: inv; only 1: firstorder).	33.679805994	3099
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	0.0.3.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: apply H; only 1: simpl; only 1: auto).	0.0561590194702	9
Coq.Lists.SetoidList.InA_InfA	40	0.0.1.1.0	search with cache (only 1: simple induction l; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.022488117218	7
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.1.0.1.3.1	search with cache (only 1: intros l m a; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.392476081848	96
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	0.0.0.0.6	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.136054039001	66
Coq.Lists.SetoidList.app_eqlistA_compat	40	2.0.0.0.0.1.0.2	search with cache (only 1: repeat red; only 1: induction 1; only 1: simpl; only 1: induction 1; only 1: auto; only 1: auto; only 1: simpl; only 1: auto).	1.43663287163	401
Coq.Lists.SetoidList.eqlistA_app	40	0.0.1.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0552220344543	6
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	0.0.5.1.0.2	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: intuition).	2.43616509438	394
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	1.0	search with cache (only 1: decide equality; only 1: decide equality).	0.0350630283356	3
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.0308530330658	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0160140991211	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0328550338745	5
Coq.NArith.BinNat.N.bi_induction	40	2.0.1.3.1	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply Pos.peano_ind; only 1: assumption; only 1: intros; only 1: now apply -> AS).	0.82635307312	442
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.0107250213623	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0146210193634	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: trivial).	0.0111138820648	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.00990295410156	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0	search with cache (only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now rewrite ?IHp).	0.0261209011078	5
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0248811244965	4
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.2.1.1.0.0.3	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	7.69643092155	5801
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0229117870331	3
Coq.NArith.BinNat.N.pred_sub	40	6.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0465819835663	13
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0321328639984	1
Coq.NArith.BinNat.N.add_0_l	40	0.0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0400969982147	8
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0392730236053	10
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0178999900818	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40	9.4.9	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: now destruct n as [| [p| p| ]]).	2.79744291306	2724
Coq.NArith.BinNat.N.leb_le	40	10.4.4	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: now destruct n as [| [p| p| ]]).	1.33734989166	1513
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	2.0	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.0743160247803	47
Coq.NArith.BinNat.N.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.0108070373535	1
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.415503025055	60
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	1	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.074914932251	2
Coq.NArith.BinNat.N.succ_double_spec	40	19.3	search with cache (only 1: simpl; only 1: now destruct n as [| [p| p| ]]).	1.41216301918	430
Coq.NArith.BinNat.N.double_add	40	0.0.0.1.0.1.2.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	7.24601888657	1077
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0142929553986	1
Coq.NArith.BinNat.N.double_mul	40	0	search with cache (only 1: now destruct n, m).	0.012412071228	1
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0227839946747	3
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0128490924835	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: now destr_eq H).	0.0658628940582	11
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0855031013489	31
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0501348972321	11
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0496311187744	9
Coq.NArith.BinNat.N.compare_0_r	40	5	search with cache (only 1: now destruct n).	0.0278799533844	6
Coq.NArith.BinNat.N.pow_0_r	40	2	search with cache (only 1: now nzsimpl').	0.0287039279938	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	0.1.2.0.3	search with cache (only 1: induct n; only 1: intro H; only 1: false_hyp H nlt_0_r; only 1: intros n IH H; only 1: false_hyp ltac:(H) nlt_0_r).	0.316846132278	87
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	5.0.0.8.0	search with cache (only 1: intro H; only 1: destruct n; only 1: exfalso; only 1: now apply H; only 1: now destruct p).	15.8087110519	5338
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	11	search with cache (only 1: now destruct n).	1.3841779232	362
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.0	search with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.030858039856	4
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.014830827713	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	0.0324010848999	7
Coq.NArith.BinNat.N.gcd_divide_r	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite Pos.mul_comm).	0.0367901325226	7
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	1	search with cache (only 1: apply le_0_l).	0.0125379562378	2
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	1	search with cache (only 1: now destruct a).	0.0190980434418	2
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.1.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.289567947388	151
Coq.NArith.BinNat.N.testbit_neg_r	40	2.2	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0540828704834	24
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.016627073288	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.2	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0533349514008	16
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0133621692657	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.4	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0755090713501	28
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.013710975647	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.0.1.0.4	search with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.122543096542	50
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	3.0.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now subst).	0.0706670284271	10
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.6.0.25	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	2.13924598694	727
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros; only 1: now subst).	0.0344581604004	6
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0298409461975	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	1	search with cache (only 1: nat2N).	0.0304350852966	2
Coq.NArith.Nnat.Nat2N.inj_pred	40	0	search with cache (only 1: nat2N).	0.0360848903656	1
Coq.NArith.Nnat.Nat2N.inj_add	40	6	search with cache (only 1: nat2N).	0.0806279182434	51
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	search with cache (only 1: nat2N).	0.047266960144	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0390319824219	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.340597867966	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.0281598567963	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0288319587708	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	50.0	search with cache (only 1: apply eq_true_iff_eq; only 1: t_eqb).	14.4510009289	16105
Coq.Strings.Ascii.eqb_eq	40	0.9.0.5	search with cache (only 1: destruct n, m; only 1: simpl; only 1: do 8 (case Bool.eqb_spec; [ intros -> | constructor; now intros [=] ]); only 1: easy').	3.28418588638	1088
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.094789981842	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.0788819789886	3
Coq.Strings.Ascii.ascii_N_embedding	40	1.1.45	search with cache (only 1: fix odd_spec 1; only 1: intros a0; only 1: now rewrite ?H, ?IHp).	16.7323999405	19972
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	16.25	search with cache (only 1: intros n H1 H2; only 1: now simpl).	0.896901130676	1074
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	0.11	search with cache (only 1: unfold Empty, empty; only 1: auto).	0.0288119316101	46
Coq.FSets.FMapWeakList.Raw.is_empty_1	40	0.24	search with cache (only 1: fix even_spec 1; only 1: auto).	14.7421970367	1145
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	1.1.0.1.5.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intros; only 1: intro abs; only 1: inversion abs; only 1: intros p l inlist; only 1: intuition).	3.57828521729	1620
Coq.FSets.FMapWeakList.Raw.mem_1	40	1.9.1	search with cache (only 1: intros m; only 1: fix even_spec 1; only 1: auto).	2.23900794983	341
Coq.FSets.FMapWeakList.Raw.mem_2	40	0.10.2	search with cache (only 1: intros m; only 1: fix even_spec 1; only 1: firstorder).	6.05779504776	2642
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40
Coq.FSets.FMapWeakList.Raw.remove_3'	40	0.0.0.0.0.0.2.1	search with cache (only 1: intros m Hm x y e; only 1: clear Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	1.09591221809	337
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.0143620967865	1
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.011018037796	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	0	search with cache (only 1: auto).	0.0126268863678	1
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40	0.13.0	search with cache (only 1: intros m Hm x; only 1: fix even_spec 1; only 1: auto).	9.22020411491	1703
Coq.FSets.FMapWeakList.Raw.submap_2	40	0.13.2	search with cache (only 1: intros m Hm x; only 1: fix even_spec 1; only 1: auto).	7.93622803688	2691
Coq.FSets.FMapWeakList.Raw.equal_1	40	0.11.2	search with cache (only 1: intros m Hm x; only 1: fix even_spec 1; only 1: auto).	5.86383414268	564
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40	0.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: inversion H; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	9.64514303207	4927
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40	0.0.1.0.0.1.7.2.35	search with cache (only 1: intros (Hb, Ha); only 1: intuition; only 1: apply InA_eqA with (x, e); only 1: split; only 1: auto; only 1: auto; only 1: eauto; only 1: auto; only 1: auto).	7.16580104828	10772
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	0.3.10.6	search with cache (only 1: intros m; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.771279096603	941
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0150010585785	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0138969421387	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	0.4.10	search with cache (only 1: intros n; only 1: induction n; only 1: auto).	0.102729082108	183
Coq.FSets.FMapWeakList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0180640220642	1
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40	11.29	search with cache (only 1: compute; only 1: eauto with set).	1.82756018639	2619
Coq.FSets.FSetBridge.DepOfNodep.fold	40	3.1.12	search with cache (only 1: intros n l d; only 1: simpl; only 1: eauto with set).	1.02746891975	661
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	12.2.1	search with cache (only 1: intros; only 1: simpl; only 1: eauto with set).	0.72585105896	467
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.1.0.3.4.0	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	0.468975067139	329
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.3.1.1.7.5	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: easy; only 1: auto).	3.92977285385	2807
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.1.5.1	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.185786008835	144
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	1.1.9.2	search with cache (only 1: firstorder; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.703799009323	433
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3	search with cache (only 1: firstorder).	0.0842700004578	38
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.1.4.14.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	3.67183184624	2865
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.2.8.0	search with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	13.5113551617	2845
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0585951805115	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.11.1	search with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.446703910828	353
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.2.2.1	search with cache (only 1: intros; only 1: intuition; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	1.71514201164	43
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	0.0.6.8	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	1.110049963	695
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.2.1	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.122364044189	16
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.2.5.5	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.817962884903	462
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0945341587067	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0913689136505	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.1.4.1	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.103121042252	13
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.5.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0747270584106	9
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0865139961243	4
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	6	search with cache (only 1: decide equality).	0.0786430835724	27
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	1.0.0.0.3.1	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	2.02620983124	159
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.507369041443	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	2.0.0.2.0.3	search with cache (only 1: intros s x f; only 1: unfold for_all; only 1: case M.for_all; only 1: auto; only 1: intuition; only 1: inversion H).	1.12306404114	499
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.3.1.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.070020198822	10
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FMapList.Raw.empty_1	40	9.2.4	search with cache (only 1: repeat red; only 1: intros x y; only 1: easy).	0.711044073105	306
Coq.FSets.FMapList.Raw.empty_sorted	40	1.22	search with cache (only 1: compute; only 1: intuition).	0.169893980026	281
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	1.1.0.1.7.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intros; only 1: intro abs; only 1: inversion abs; only 1: intros (k, e) l inlist; only 1: intuition).	4.84382295609	1928
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40	0.44	search with cache (only 1: fix gcd_divide 1; only 1: auto).	12.1058959961	11016
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).	5.85363292694	2346
Coq.FSets.FMapList.Raw.elements_1	40	1	search with cache (only 1: intuition).	0.0324828624725	2
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0398368835449	1
Coq.FSets.FMapList.Raw.elements_3	40	1	search with cache (only 1: auto).	0.0751588344574	2
Coq.FSets.FMapList.Raw.elements_3w	40	1.43	search with cache (only 1: fix gcd_divide 1; only 1: auto).	32.4544520378	42018
Coq.FSets.FMapList.Raw.fold_1	40	0.1.6.0.12	search with cache (only 1: induction m; only 1: auto; only 1: destruct a; only 1: simpl; only 1: auto).	1.84166383743	1303
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40	4.24.0	search with cache (only 1: intros m Hm m' Hm' cmp; only 1: fix even_spec 1; only 1: intuition).	36.351473093	12241
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.2.0.0.2.0.0.3	search with cache (only 1: intros m x f; only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion_clear 1; only 1: auto).	2.37781786919	909
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.2.0.1.0.3	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	1.75695514679	621
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.0.0.1.0.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.72718000412	125
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40	0.1.4.16.1.5	search with cache (only 1: induction m; only 1: intros; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: auto).	3.43262505531	5285
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40	0.14.2.3.30	search with cache (only 1: intros (m', Hm); only 1: intros m; only 1: generalize Hm; only 1: fix odd_spec 1; only 1: auto).	30.7378599644	55677
Coq.FSets.FMapList.Make.empty_1	40	4.0.4	search with cache (only 1: repeat red; only 1: intros x y; only 1: inversion 1).	0.168246984482	41
Coq.FSets.FMapList.Make.is_empty_1	40	0.8	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.0759267807007	26
Coq.FSets.FMapList.Make.is_empty_2	40	0.0.9	search with cache (only 1: fix odd_spec 1; only 1: intros m; only 1: auto).	0.161467075348	112
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40	0.44	search with cache (only 1: fix gcd_divide 1; only 1: auto).	10.659348011	16083
Coq.FSets.FMapList.Make.find_2	40	1.37	search with cache (only 1: fix gcd_divide 1; only 1: auto).	5.05765509605	10191
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0702819824219	1
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0624160766602	2
Coq.FSets.FMapList.Make.elements_3	40	0.48	search with cache (only 1: induction m; only 1: auto).	1.33588290215	3572
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0478639602661	1
Coq.FSets.FMapList.Make.fold_1	40	1.38	search with cache (only 1: fix gcd_divide 1; only 1: auto).	6.44181704521	9798
Coq.FSets.FMapList.Make.equal_1	40	0.44	search with cache (only 1: fix gcd_divide 1; only 1: auto).	22.678732872	14841
Coq.FSets.FMapList.Make.equal_2	40	1.40	search with cache (only 1: fix gcd_divide 1; only 1: auto).	8.96075892448	12255
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	3.2.2	search with cache (only 1: intros m; only 1: fix odd_spec 1; only 1: auto).	0.108806848526	32
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40	0.54.22	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: auto with *).	23.6629731655	50203
Coq.FSets.FMapList.Make_ord.eq_trans	40	1.1.24	search with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: eauto).	2.85021805763	3807
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40	1.48	search with cache (only 1: fix gcd_divide 1; only 1: auto).	9.02593398094	19173
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.1	search with cache (only 1: split; only 1: auto with sets).	0.00653409957886	3
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40	1.28	search with cache (only 1: fix even_spec 1; only 1: auto with datatypes).	1.35603404045	2413
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40	3.29	search with cache (only 1: fix even_spec 1; only 1: auto).	29.1226279736	36603
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40	1.21	search with cache (only 1: fix even_spec 1; only 1: auto).	1.03651404381	1548
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40	0.27.0	search with cache (only 1: intros x y; only 1: fix even_spec 1; only 1: auto).	8.3306658268	8752
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40	0.24	search with cache (only 1: fix even_spec 1; only 1: auto).	21.7757129669	15616
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40	1.30	search with cache (only 1: fix even_spec 1; only 1: auto).	33.71448493	30429
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40	2.27.16	search with cache (only 1: split; only 1: fix even_spec 1; only 1: auto).	18.2187209129	11313
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.1.11.13.7.6	search with cache (only 1: red; only 1: intros y0 H1; only 1: constructor; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	2.49819922447	18580
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	0.3.7	search with cache (only 1: intro H1; only 1: left; only 1: assumption).	0.0202600955963	58
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	5.0	search with cache (only 1: red; only 1: auto with sets).	0.0126128196716	7
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	0.7.0.2	search with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	0.152616024017	209
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.0.6.1	search with cache (only 1: unfold unorm, lnorm; only 1: destruct nzhead; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	4.59356307983	1672
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	7	search with cache (only 1: now induction d).	0.153135061264	100
Coq.Numbers.DecimalFacts.norm_invol	40	2.2.22	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	0.386552095413	655
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0343730449677	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0335400104523	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.124078989029	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.034558057785	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	0.0.7	search with cache (only 1: intro H; only 1: intro n; only 1: now rewrite (add_lt_mono_r _ _ n), add_0_l, sub_simpl_r).	0.905802965164	110
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	1.0.8	search with cache (only 1: intro H; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	3.58611106873	389
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	1.1.0.1.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	0.39891409874	81
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.077525138855	26
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.108428001404	41
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.397571086884	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	1.1.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0677261352539	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.2	search with cache (only 1: intros; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: simpl; only 1: intuition; only 1: order'; only 1: trivial).	9.12837004662	5010
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	5.15.10	search with cache (only 1: intros x x' EQ; only 1: intro H; only 1: now f_equiv).	9.85152292252	5593
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	5.1.0.0.0.0.0.0.5.1.1	search with cache (only 1: intros a; only 1: split; only 1: intros H; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros EQ; only 1: intros; only 1: now rewrite EQ).	6.42295098305	5433
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.197134971619	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.919225931168	42
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.134459972382	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0447599887848	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	3.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).	0.0525469779968	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0844521522522	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	24.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	9.53625202179	5326
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	3.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now try order').	0.0619060993195	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	10.16.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	4.50240206718	3563
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	19.0.3	search with cache (only 1: intros a b H; only 1: bitwise; only 1: intuition).	8.82664394379	4350
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0816941261292	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0852611064911	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	10.4.19.0.2	search with cache (only 1: intro n; only 1: bitwise; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: intuition).	19.9844019413	18012
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	3.21.4.1	search with cache (only 1: intros a a' Ha; only 1: bitwise; only 1: compute; only 1: now rewrite Ha).	27.5601949692	17306
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	5.0.2	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.619701862335	69
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0.3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.0794749259949	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0433599948883	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	1.21.4.1	search with cache (only 1: intros a a' Ha; only 1: bitwise; only 1: compute; only 1: now rewrite Ha).	9.14998579025	6919
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.087306022644	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	2.3.1	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.16706609726	23
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.2.2.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	0.888285160065	385
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.2.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.0855247974396	32
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.0.0.0.1.1.2.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	3.89223599434	2374
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.0.1.1.4.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	1.524310112	341
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.477332830429	35
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0	search with cache (only 1: intros a b g NZ EQ; only 1: rewrite !quot_div_exact; only 1: rewrite gcd_div_factor; only 1: now rewrite <- EQ, div_same; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: rewrite EQ; only 1: apply gcd_divide_l; only 1: rewrite EQ; only 1: apply gcd_divide_r; only 1: trivial; only 1: rewrite EQ; only 1: apply gcd_divide_r; only 1: trivial; only 1: rewrite EQ; only 1: apply gcd_divide_l).	11.7380039692	6220
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	2.2.1.0	search with cache (only 1: intros n m; only 1: apply le_0_sub; only 1: apply le_0_sub; only 1: apply abs_nonneg).	0.0296840667725	11
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	1.0.1.0.0.15	search with cache (only 1: compute; only 1: intro n; only 1: rewrite <- gcd_abs_l, <- gcd_abs_r; only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: now nzsimpl).	4.01826810837	2136
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0280940532684	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.0.2.0.5.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial).	0.661023139954	299
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0290632247925	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.0519931316376	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.8.0.0.3.1	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: trivial; only 1: reflexivity; only 1: trivial).	13.6051650047	7955
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.2.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0459818840027	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	1.78248906136	279
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.0.0.0.6.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	1.4492380619	356
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.0.0.2.0.8.1.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	17.2368650436	6035
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0854589939117	5
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.4.0.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono).	4.65865516663	2105
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	5.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	14.7090399265	7145
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.7.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	15.1927700043	8428
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	1.0.0.3.1.0.0.4.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	4.59475898743	2879
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.1.0.0.1.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	9.41327500343	5793
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	0.0.0.7.0.0.0.5.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	31.7992529869	20255
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.0.0.3.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	7.95440006256	2706
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.1.4.1	search with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	1.54190087318	270
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.4.1.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite succ_pred).	0.0528371334076	10
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0776209831238	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	0.11.0.4.2	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	10.6139349937	7137
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.6.0	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.825522184372	383
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.3.2.1.0	search with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	2.5504128933	526
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.0.0.0.2.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply lt_succ_r).	0.138571977615	28
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.1.0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0641660690308	8
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.0.8.0.1	search with cache (only 1: intro n; only 1: apply lt_gt_cases; only 1: left; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	9.01639509201	1650
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.3.4	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	3.94059085846	723
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0164289474487	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.1.0.4.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0369749069214	18
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	5.2.14	search with cache (only 1: rewrite abs_eq; only 1: order; only 1: order).	0.287395000458	309
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.5.15.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	3.18966794014	3181
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.0.0.0.0.3.0.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: now rewrite opp_nonneg_nonpos).	0.123231887817	110
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	7.3.5.1	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.982305049896	792
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0416131019592	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.0.0.0.1.1.2.1	search with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.97740316391	448
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.5.1	search with cache (only 1: intros H1 H2 n; only 1: apply NZQuot.div_pos; only 1: trivial).	0.471575975418	90
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0456628799438	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.0.0.1.4.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: destruct H; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	9.28715991974	7135
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0271329879761	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.1.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	6.83008408546	3733
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.0.1.1.4.0.0.1.0.1.0	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: destruct H; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	4.92447209358	3409
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0112609863281	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	0.4.0.2.0.2.0.0	search with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: auto; only 1: right; only 1: apply mod_neg_bound; only 1: order).	4.89726305008	3365
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0270380973816	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0280032157898	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.0646488666534	41
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0160529613495	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0146110057831	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.0.0.0.1.0.0.0.0.0.10	search with cache (only 1: pose proof lt_m1_0 as F; only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	14.4682950974	6988
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.1.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: auto).	0.610132932663	261
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.0536439418793	52
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.0.1.0.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: auto; only 1: auto; only 1: auto).	0.700213909149	377
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.2.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.181715965271	67
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: trivial).	0.0288119316101	13
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	5.0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.450572967529	121
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0235509872437	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.6.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.35572218895	144
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.2.0.1.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0184469223022	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0232181549072	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	9.78668904305	6451
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.1.0.0.1.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.426268815994	48
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.2.11.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	5.47570586205	3112
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.2.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.9585609436	483
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.814418077469	67
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.2.4.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.863406896591	141
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.2.4.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	1.69808793068	298
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.1.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.511487007141	57
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.3.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.746460914612	60
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.1.1.1.1.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	1.96234107018	309
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0329160690308	10
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	1.0.0.0.0.1.0.0.7	search with cache (only 1: intro H; only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	15.2763230801	3995
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_succ_l, pred_succ).	0.0378940105438	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	2.15.3.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- 2!add_opp_r; only 1: now nzsimpl).	18.688975811	7355
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	8.7.3.0.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	10.9713990688	4080
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.1.8.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	13.4098551273	3301
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	2.0.0.0.0.1.1	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intro H; only 1: now f_equiv).	0.468222856522	241
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0664730072021	29
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.2.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	0.214866161346	26
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	2.1.0.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite 2!(add_comm n); only 1: now rewrite opp_involutive).	1.18919014931	127
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.0.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.414571046829	17
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	2.12.2.3	search with cache (only 1: intro H; only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_cancel_r).	7.58841896057	7858
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.5.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.120498895645	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	1.1.0	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0379848480225	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	11.0	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	2.28658509254	439
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	9.1.0	search with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).	2.03946805	469
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	4.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0564792156219	12
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0259671211243	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.101110935211	68
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	3.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: auto using mod_small).	0.109055995941	72
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.297393083572	42
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.0.0.2	search with cache (only 1: firstorder; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.32531785965	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0152449607849	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0145480632782	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	2.0.3.0.0.4.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	2.05036687851	1912
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.1.0.5.0	search with cache (only 1: intros; only 1: intuition; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	1.68762516975	916
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	1.0.0.0.3.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0854649543762	31
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	2.0.0.1.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using div_pos).	0.360274076462	77
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.1.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.2799680233	49
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	6.6.6.4.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: apply add_le_mono_l; only 1: now apply mod_always_pos).	14.9078290462	12611
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0584490299225	17
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.2.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0190958976746	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.2.0.2.1	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.150528907776	147
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0672261714935	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	10.416064024	8559
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	1.0.0.0.6.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.93710613251	825
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0958161354065	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.0.0.0.0.1.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite div_mul_cancel_l by trivial; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	1.75715494156	573
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	1.4.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	3.09005403519	412
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.2.1.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.759877920151	97
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.1.1.0.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.352365970612	55
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.421634912491	41
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.1.2.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	1.56253290176	429
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0485298633575	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.0.0.0.0.0.0.0.1.11.0.1.3.0	search with cache (only 1: induction n; only 1: split; only 1: constructor; only 1: now exists 0; only 1: induction n; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1; only 1: now inversion_clear H0).	24.8584020138	16914
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	4.3.0	search with cache (only 1: intro n; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.0257630348206	10
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.0.11.1	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	3.62290596962	1731
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.0.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.045832157135	3
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	0.0.2.0.0.1.0.2.2.1.0.3.0.0.2	search with cache (only 1: cases ltac:(n); only 1: split; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros LT EQ; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: order; only 1: intro n; only 1: split; only 1: intros H; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intros H; only 1: apply neq_succ_0).	29.1096930504	40389
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.1.0.44.1	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	10.825977087	25420
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.0.2.0.0.0.0.1.0.0.6	search with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: rewrite lt_succ_r; only 1: intro H; only 1: now apply eq_le_incl).	10.3368890285	5214
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.1.0.0	search with cache (only 1: intro n; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0451860427856	6
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.2.0.1.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.0566341876984	9
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.0.0.0.2.0.2	search with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	0.831355810165	620
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.1.0.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: auto).	0.0986979007721	26
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: nzsimpl; only 1: order).	0.0415148735046	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.104909181595	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.246643066406	37
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.7.0	search with cache (only 1: intros z n H; only 1: apply mod_small; only 1: auto').	0.217326879501	53
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0385739803314	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0592501163483	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.12.5.9.0.3.3.1	search with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: pose proof (pred_succ n) as EQ'; only 1: apply (lt_irrefl n); only 1: order'; only 1: now nzsimpl').	36.3701319695	66550
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.0.2.0.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	0.409491062164	34
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0343279838562	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0297341346741	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	0.0634169578552	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	2.0.0.2.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.368515014648	193
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.208419084549	75
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	2.3.0.0.1.1.3.2.1.3.0.0	search with cache (only 1: intros; only 1: split; only 1: auto'; only 1: intro H1; only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: rewrite <- Private_NZDiv.div_small_iff in LT; only 1: order; only 1: order; only 1: auto; only 1: intros Hab; only 1: apply Private_NZDiv.div_str_pos; only 1: auto').	21.7536530495	18843
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.15.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	2.60649514198	2035
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0586881637573	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0453629493713	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.1.0.0.0.0.7.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto'; only 1: auto).	0.595938920975	446
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	0.1.2.1.0.0.0.1.2.0.0.0.1.0.0.5	search with cache (only 1: intuition; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply div_pos; only 1: apply le_0_l; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: apply le_0_l; only 1: order; only 1: order).	26.8806741238	32358
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.1.1.0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.43614196777	217
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.1.2.0.0.1.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.297346115112	110
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.0.17.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	1.1737601757	986
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	2.1.2.0.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.0256760120392	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	2.54870700836	771
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	0.687257051468	202
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	2.2.1.1.1.0.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	2.05699014664	1375
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.5.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.026890039444	16
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply lt_irrefl with 0).	0.0325119495392	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.1.2.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0813090801239	53
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.13.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	1.7142598629	909
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.0.0.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: now apply lt_irrefl with 0).	0.0341899394989	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.1.3.3.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.208323955536	129
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.0744910240173	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.1.2.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.241716146469	106
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.2.2.0.1.0.0.0.0.4	search with cache (only 1: repeat split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	2.84115409851	2464
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.1.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.101366996765	56
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	17.0	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.530768156052	695
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.2.0.18.1	search with cache (only 1: cases ltac:(n); only 1: intuition; only 1: intro n; only 1: right; only 1: now exists n).	2.07364797592	2575
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.1.0.1.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now nzsimpl').	0.0566110610962	8
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40	3.9.0.0.6.0.0	search with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: tauto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).	12.5866570473	12568
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.9.4.4	search with cache (only 1: unfold if_zero; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: auto).	0.745517969131	670
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	4.5.54.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	9.12201499939	17057
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.8	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.0156559944153	10
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	8.4.11	search with cache (only 1: intro A; only 1: unfold even; only 1: now rewrite recursion_succ).	1.28057599068	1994
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.0.2.7.1	search with cache (only 1: intros n m; only 1: intro; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	1.33686494827	813
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.1.2.0.0.0.2.0.0.0	search with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: now apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: assumption; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	1.54255008698	1092
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	5.0	search with cache (only 1: intros x x' EQ; only 1: now f_equiv).	0.0561900138855	57
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0419142246246	11
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	1.1.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0167601108551	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.0.3.7.0.3.10	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: apply lt_1_2; only 1: rewrite <- (Private_NZPow.pow_1_r 2); only 1: nzsimpl; only 1: reflexivity; only 1: order_nz).	4.77624297142	3487
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.0.1.1.11.13.1	search with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: reflexivity; only 1: order'; only 1: order_nz).	10.2747468948	7217
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0334918498993	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0241150856018	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.1.3.1	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: order_nz).	0.110574007034	46
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.1.4.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.0421578884125	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.4.5.2.3.4	search with cache (only 1: intros a0; only 1: intro H; only 1: firstorder; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: order'; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	23.4775519371	24531
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0759501457214	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.1.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0471770763397	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.300332069397	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.165007829666	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	5.0.1	search with cache (only 1: intro n; only 1: bitwise; only 1: now destruct (even n), (even m)).	0.069638967514	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0148050785065	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	23.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	16.5691378117	13440
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	27.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	37.7051689625	24905
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	2.2.3	search with cache (only 1: intros a0; only 1: bitwise; only 1: now try order').	0.0458388328552	37
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	17.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	2.13120603561	2082
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	21.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	8.71946716309	5087
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0204501152039	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0183410644531	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	24.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	1.5768198967	2136
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	0.0.15	search with cache (only 1: compute; only 1: intros; only 1: now rewrite shiftl_mul_pow2, mul_1_l).	4.09182596207	1257
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.0.0.14	search with cache (only 1: compute; only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	5.65656018257	2889
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.2.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0180850028992	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: assumption; only 1: assumption).	0.987922906876	698
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.0.6.5	search with cache (only 1: intro n; only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	4.05786991119	3621
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	1.0.8.7.1.0	search with cache (only 1: intros a n H; only 1: pose proof (land_lnot_diag_low a n H) as H'; only 1: symmetry; only 1: apply add_sub_eq_l; only 1: rewrite add_nocarry_lxor, lxor_lor by trivial; only 1: now apply lor_lnot_diag_low).	25.4473018646	8532
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.1.0.0.0	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.0954551696777	142
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.0.0.1.0.0.0.0	search with cache (only 1: intro n; only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply le_0_l; only 1: apply le_0_l; only 1: now nzsimpl).	0.0709111690521	9
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.4.0.0.0.2.0.1	search with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.69796705246	1033
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	2.1.0.0.0.0.0.6.2	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intro n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro H; only 1: intro n; only 1: now nzsimpl).	3.58603715897	2676
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	2.2.0.0.0.0	search with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intro H; only 1: now nzsimpl).	0.309378862381	11
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	1.0.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.107988119125	8
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	1.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.31048989296	41
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	0.6.0.2.1.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: apply succ_le_mono).	2.081772089	1229
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	24.0	search with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	36.931896925	32828
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	1.3.0.4.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	1.79486393929	1031
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	2.3.5.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: nzsimpl; only 1: now destruct (even n), (even m); only 1: apply le_0_l).	11.1667568684	1719
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0583691596985	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	2.0.2.0	search with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).	0.156665086746	16
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	4.62314295769	1258
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	0.0.2.2.0.3.2.4.1	search with cache (only 1: intros a b Ha Hb; only 1: destruct (lt_trichotomy b 0) as [H| [H| H]]; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order; only 1: now apply pow_eq_0 with b; only 1: apply pow_eq_0 with b; only 1: order; only 1: order).	3.29993009567	3443
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.2.0.3.0	search with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).	0.129143953323	50
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.0.0.0.1	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).	0.163300991058	46
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	0.10.0.7.0	search with cache (only 1: intros; only 1: apply pow_lt_mono_r; only 1: trivial; only 1: apply le_0_l; only 1: trivial).	13.4920430183	9110
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.1.0.2.0.3.2	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).	1.25205302238	552
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	1.7.0.0.1.1.1	search with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	1.72603487968	1630
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	0.3.0.0.1.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l).	15.3156011105	7123
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.3.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	6.63989019394	2664
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.0.0.0.3.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	11.0872709751	3975
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.3.2.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l).	6.82340097427	2025
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.2.1.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	3.83166217804	1213
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	1.0.0.5.2.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r).	12.1163318157	4989
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0164048671722	2
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.3.1	search with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).	0.0343699455261	24
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	2.1.24	search with cache (only 1: unfold lcm; only 1: intro n; only 1: now nzsimpl).	13.0566020012	12856
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0110421180725	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.0.9.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	1.37506103516	939
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0282599925995	7
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0669369697571	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.6.0.2.9.1.3	search with cache (only 1: intros a b; only 1: intro H; only 1: apply lcm_unique; only 1: auto'; only 1: auto; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl, le_0_l).	33.9195830822	32693
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	2.2.0.1.4.4.0	search with cache (only 1: intros n m p; only 1: induct p; only 1: now nzsimpl; only 1: intro p; only 1: intro H; only 1: nzsimpl; only 1: now f_equiv).	10.4265129566	4318
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.0.11.0.0.11	search with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: nzsimpl; only 1: order; only 1: now nzsimpl).	1.04862213135	867
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.1.3.8.7.0	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	4.24030399323	3333
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.322165966034	248
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	0.0217089653015	8
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.1.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: order).	0.0730020999908	48
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: order).	0.0150580406189	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0160219669342	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.0.1.5.0.0.0.0.0.0	search with cache (only 1: intros a b Ha Hb; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: symmetry in Hab; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: contradict Hab; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	15.3019449711	14198
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	0.2.0.0.5.1	search with cache (only 1: intros a b Ha Hb; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: apply mod_small; only 1: auto).	0.521374940872	345
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	1.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.069659948349	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.1.0.0.0.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.05619597435	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0296020507812	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.2.17.3	search with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.6172349453	2153
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0966749191284	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.17.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.92685389519	1677
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.136546850204	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0353219509125	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	17.7.3	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	3.47127509117	3918
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.12.1.0	search with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: left; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	1.34938383102	1490
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	7.0.1.0	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	1.13721489906	191
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	0.4.7.7.5.4.6.5.37	search with cache (only 1: split; only 1: intros n m; only 1: apply (lt_irrefl n); only 1: tauto; only 1: intros n m; only 1: intro p; only 1: intros; only 1: generalize (lt_trans n m p); only 1: auto with relations).	32.6400160789	45773
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	0.0.0.0.0.0.0.1.0.0.0.0.0.0.3.14.0.11.1	search with cache (only 1: split; only 1: intro H1; only 1: apply le_refl; only 1: intros n m; only 1: intro p; only 1: rewrite 3!lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations).	28.7129321098	32931
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0162868499756	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.0.5.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.070592880249	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.338125944138	75
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0305461883545	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0255079269409	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.176987171173	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	6.0.2.6	search with cache (only 1: intro H1; only 1: intro m; only 1: intro; only 1: intuition order).	6.54245400429	4101
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	2	search with cache (only 1: order).	0.126093149185	80
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.2.0	search with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (lt_irrefl x); only 1: now transitivity y).	0.344272851944	32
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.0.7.1	search with cache (only 1: intros; only 1: apply le_succ_l; only 1: apply lt_eq_cases; only 1: now left).	0.337218999863	148
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	5.3.4.0	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: tauto).	1.61271882057	909
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.4.0	search with cache (only 1: intros n m LE; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.101587057114	28
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	0.0.0.1.4.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.505291938782	157
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	3.7.3.8.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	32.5102608204	16794
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.1.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0165510177612	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.0.6.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: apply lt_le_incl; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	0.0848340988159	72
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.0.3	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.313542127609	118
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.1.0.0.3.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: tauto).	0.377742052078	83
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	2.0.2.1	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).	0.332446098328	11
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	1.0.2.1.1.1	search with cache (only 1: intro; only 1: unfold decidable; only 1: intro; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	39.3767991066	347
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.3.3.0	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.228811979294	22
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.0.0.1.3.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.159994125366	48
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0220189094543	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.1.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0279009342194	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	1.2.1.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.126524925232	74
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0230760574341	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0228769779205	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	1.0.1.0.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0375130176544	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.0.0.1.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: order).	0.0794789791107	36
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.2.0.0.1.0.1	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	1.78896903992	837
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40	2.4	search with cache (only 1: intros L R n; only 1: firstorder).	0.0603959560394	52
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	9.0.15.16	search with cache (only 1: intros P z Hz IH x Hxz; only 1: induction n; only 1: auto; only 1: eauto).	8.57745599747	2960
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	24	search with cache (only 1: easy).	0.322355031967	346
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	10	search with cache (only 1: solve_proper).	0.0608098506927	96
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	8.0.12.0.0.0.0	search with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: simpl; only 1: intros; only 1: now rewrite PeanoNat.Nat.pred_succ).	15.6967010498	21772
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	1.0.0.0.0.5.4.3	search with cache (only 1: induction n; only 1: intros n; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	3.64071106911	2781
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	2.0.20.1.19.6	search with cache (only 1: induction n; only 1: fix le_div2 1; only 1: now unfold ofnat; only 1: fix le_div2 1; only 1: intros; only 1: now f_equiv).	38.3069608212	60205
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	0.0.22.2.7	search with cache (only 1: intros n; only 1: simpl; only 1: fix le_div2 1; only 1: intros; only 1: now f_equiv).	7.10575580597	8070
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	0.13.1.0.8.14.0.0	search with cache (only 1: intro n; only 1: intros; only 1: rewrite <- (mul_0_r n)  at 1; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: nzsimpl; only 1: auto with *; only 1: order).	12.519482851	11105
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0562500953674	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	0.18.2.1	search with cache (only 1: intro n; only 1: firstorder; only 1: rewrite mul_0_l in H || rewrite mul_0_r in H; only 1: assumption).	7.60757803917	5707
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.0.8.1.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	5.94299387932	5720
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0362598896027	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.1.0.1.3.1	search with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.944042921066	513
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0324199199677	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.0.1	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0355639457703	36
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.0.3.0.2.3	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	0.58872795105	313
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.237056970596	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	1.1.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	4.14418292046	947
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.11.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.415050983429	324
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	3.3.3.0	search with cache (only 1: intros; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	4.25617098808	1390
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.1.2.0.0	search with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.135318994522	15
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.6.0.0.10.0	search with cache (only 1: intros; only 1: nzsimpl'; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	6.58006095886	2742
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.0813808441162	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.062922000885	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.025267124176	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0175819396973	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now nzsimpl').	0.0704839229584	15
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.0600168704987	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.1.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.100958108902	6
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0855100154877	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.0.0.0.0.2	search with cache (only 1: intro H; only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	0.618273973465	84
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	2.0.11.4.2.2.48	search with cache (only 1: apply log2_unique; only 1: order; only 1: split; only 1: now nzsimpl'; only 1: nzsimpl; only 1: apply lt_1_2; only 1: order).	11.9702000618	6351
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.4.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order_pos; only 1: order).	0.048947095871	10
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	7.3	search with cache (only 1: intros; only 1: firstorder).	0.0672039985657	116
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	6.0	search with cache (only 1: intros; only 1: intuition).	0.0161440372467	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.8.8.0.0.0	search with cache (only 1: intros n m p H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: generalize (lt_trans n m p); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	39.4646611214	15328
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.0.0.0.0.0.1.3.0.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: split; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption).	12.7121288776	4256
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0257761478424	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	2.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.024650812149	5
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	0.0.0.5.1.0.2	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite mul_comm; only 1: intro H; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: now apply mul_le_mono_pos_l).	9.62022018433	2890
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.0.0.2.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: order).	0.0192928314209	7
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0131578445435	7
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	3.0	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.00722718238831	5
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.3.1	search with cache (only 1: intros; only 1: symmetry; only 1: auto with sets).	0.0125870704651	7
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.00901579856873	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	4.0	search with cache (only 1: intros x y z; only 1: eauto using eq_trans, eq_sym).	1.02497196198	18
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.1.0.4.0	search with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: intuition; only 1: intuition).	0.122743844986	129
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.3.1	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition).	0.188755989075	146
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.0.3.0.1	search with cache (only 1: split; only 1: tauto; only 1: intros [?| ?]; only 1: firstorder; only 1: firstorder).	0.0423488616943	9
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	24.23.1.2.0	search with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: intros P b H H0; only 1: eauto).	9.65024709702	32801
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.12	search with cache (only 1: apply eqb_eq; only 1: firstorder).	0.0390930175781	76
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	9.11.8.7.11	search with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: red; only 1: apply Logic.eq_trans).	6.74231314659	13251
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	14.0.0.0.2.61.1	search with cache (only 1: split; only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	9.84628486633	23553
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.1	search with cache (only 1: split; only 1: auto; only 1: auto).	0.214762926102	110
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	2	search with cache (only 1: order).	0.0143110752106	3
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	search with cache (only 1: order).	0.0188360214233	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	4	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.08907294273	5
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0183780193329	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.011785030365	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	3	search with cache (only 1: order).	0.0351469516754	12
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0170888900757	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0111610889435	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	1	search with cache (only 1: order).	0.010803937912	2
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	2	search with cache (only 1: order).	0.012079000473	3
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.017560005188	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0113770961761	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0188810825348	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0114181041718	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	3.14.7.3.46.9	search with cache (only 1: intros x y; only 1: case_eq (PeanoNat.Nat.compare x y); only 1: order; only 1: intro H; only 1: eauto; only 1: order).	39.3337061405	81163
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.263111114502	123
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.303925037384	208
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.3.1	search with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0600278377533	7
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	2.0.0.0.1.1	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).	0.280479192734	35
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	3.3.7	search with cache (only 1: intro H1; only 1: intros x y H; only 1: now rewrite H).	0.851922035217	556
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.0.1.7	search with cache (only 1: simple induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0868990421295	50
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	3.1.3	search with cache (only 1: simple induction l; only 1: auto; only 1: firstorder).	0.0395641326904	10
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.2.2	search with cache (only 1: intros; only 1: induction H; only 1: auto).	0.0209720134735	7
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	1	search with cache (only 1: auto).	0.0116901397705	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	1	search with cache (only 1: auto).	0.0106959342957	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	2.5	search with cache (only 1: intros; only 1: auto with ordered_type).	0.0143520832062	9
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	1	search with cache (only 1: auto with ordered_type).	0.0100729465485	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	8.0	search with cache (only 1: unfold eqk, eqke; only 1: firstorder).	0.0207619667053	13
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	3.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0287899971008	6
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	5.14.3.9	search with cache (only 1: intro H1; only 1: unfold eqk, eqke; only 1: intro n; only 1: order).	4.26973891258	4348
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40	0.3.3.5.11.5	search with cache (only 1: inversion 1; only 1: destruct e; only 1: firstorder; only 1: order; only 1: destruct H1; only 1: auto).	18.6546928883	9991
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0153188705444	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	2.0	search with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0189588069916	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	4.1.1.2	search with cache (only 1: unfold eqk, eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).	0.419056177139	176
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	4.9.3.6.3.3.2	search with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: intro H1; only 1: unfold eqk, eqke; only 1: firstorder; only 1: eauto with ordered_type).	4.26607894897	6636
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.2	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0577600002289	6
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.5.4.38.30.20.5.5	search with cache (only 1: split; only 1: intro H1; only 1: destruct H1; only 1: repeat red; only 1: unfold eqk, ltk; only 1: intuition; only 1: order; only 1: eauto with ordered_type).	24.3683998585	52675
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.020537853241	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.011773109436	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0115330219269	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	0.0.6.3.2	search with cache (only 1: induction 1; only 1: compute; only 1: destruct H; only 1: auto; only 1: auto).	0.243143796921	293
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	3.4.0.18.4	search with cache (only 1: intros; only 1: induction l as [| a tail]; only 1: auto; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	11.4102549553	6714
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	4.3.3.1.12	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	4.10276889801	2114
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	1.0.3.1.4	search with cache (only 1: intros x y H; only 1: inversion_clear 1; only 1: destruct 1; only 1: auto; only 1: auto).	0.785602092743	304
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.3.2.1.1	search with cache (only 1: unfold eqk, ltk; only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.444180965424	120
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.1	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0616209506989	8
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.1.0.0.0.1.0.0.0.0.2.0.0.8.0	search with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	36.6117110252	40052
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).	8.85822296143	7003
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.1.0.0.0.0.0.0.1.1.1.0.1	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	7.10978293419	2036
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.0.0.0.1.0.0.0.0.1.1.0.0.3	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).	3.12480401993	1995
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.1	search with cache (only 1: apply compare_eq_iff; only 1: firstorder).	0.0143489837646	4
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	1.13.1.1.1	search with cache (only 1: red; only 1: red; only 1: red; only 1: compute; only 1: iorder).	32.6106247902	1761
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	6.0.0	search with cache (only 1: compute; only 1: intros x y; only 1: order).	0.0390179157257	27
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	7	search with cache (only 1: iorder).	0.149121999741	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0735070705414	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	1.25.27.12.5	search with cache (only 1: destr_bool; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: iorder; only 1: iorder; only 1: auto).	17.3938128948	28677
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.125329971313	50
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.039391040802	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	4.1	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.182838201523	34
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0181629657745	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	6.0	search with cache (only 1: intro H; only 1: order).	0.0270440578461	15
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0208110809326	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0179369449615	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	4	search with cache (only 1: order).	1.03448796272	35
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	2	search with cache (only 1: order).	1.03261017799	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	1	search with cache (only 1: order).	1.03014087677	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	1	search with cache (only 1: order).	1.03344583511	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	3.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0291111469269	16
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.0133218765259	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0156450271606	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	4	search with cache (only 1: order).	0.0774202346802	78
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	search with cache (only 1: order).	0.014456987381	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	search with cache (only 1: order).	0.0225269794464	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0.1	search with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0334091186523	4
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	search with cache (only 1: order).	0.0189650058746	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.01398396492	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.0227770805359	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	search with cache (only 1: order).	0.0130019187927	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	1.0	search with cache (only 1: unfold lt; only 1: auto with *).	0.0112550258636	3
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0310759544373	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	2.0	search with cache (only 1: apply compare_eq_iff; only 1: firstorder).	0.0320649147034	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0359380245209	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.043751001358	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.0.13.4.6.18	search with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: intros H; only 1: case leb_spec0; only 1: trivial; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	17.5556089878	31612
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1.2	search with cache (only 1: firstorder; only 1: subst; only 1: auto).	0.0594229698181	6
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	2.0.1.0.0.1	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	0.127017021179	10
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	2.11	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.499946117401	309
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	2.12	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.410187005997	355
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.1.7	search with cache (only 1: simple induction l; only 1: auto; only 1: simpl; only 1: auto).	0.161186933517	85
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	3.10	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.193039894104	186
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	24	search with cache (only 1: solve_proper).	4.40859484673	2358
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	2	search with cache (only 1: eauto with *).	0.0576009750366	3
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	0.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0508630275726	3
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	0	search with cache (only 1: now intros <-).	0.0594570636749	1
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	2.7	search with cache (only 1: intro H; only 1: firstorder).	0.0642249584198	23
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: auto).	0.0280499458313	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: auto).	0.026750087738	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.11.27	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.783949136734	930
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	9	search with cache (only 1: now destruct 1).	0.0796020030975	10
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	search with cache (only 1: auto).	0.0604569911957	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: auto).	0.057953119278	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0	search with cache (only 1: auto).	0.0270869731903	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.1	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0499758720398	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.0.10.0.7	search with cache (only 1: intro H; only 1: induction 1; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).	1.61921095848	616
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	4.4.3.13	search with cache (only 1: unfold In, MapsTo; only 1: intuition; only 1: inversion_clear H; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv).	4.64282989502	2799
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	0.10.4	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.6438331604	330
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	1	search with cache (only 1: now intros <-).	0.0445199012756	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.4	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: auto).	0.263773202896	6
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.5.41	search with cache (only 1: inversion 1; only 1: firstorder; only 1: auto).	7.7860519886	10297
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.17.14	search with cache (only 1: intro; only 1: invlist InA; only 1: firstorder; only 1: auto).	8.66777396202	6647
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	2	search with cache (only 1: firstorder).	0.0140960216522	3
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	0	search with cache (only 1: auto).	0.0134029388428	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.0109889507294	1
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0203649997711	2
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	2.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.19300699234	4
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	4.4	search with cache (only 1: intros x y z H; only 1: eauto).	0.0425961017609	20
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	13.0.0.3	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: eauto).	1.12805318832	682
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	1.0.0.0	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: eauto).	0.0346651077271	5
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	0.8.4.2	search with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: auto).	1.35229516029	573
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.33.7	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	3.36694192886	4629
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.4.2	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.0545859336853	14
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.2.2.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.0519678592682	15
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	7	search with cache (only 1: intuition).	0.0370881557465	12
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40	1.13.3.0.2	search with cache (only 1: unfold lt; only 1: intros x y H; only 1: destruct 1; only 1: fix gcd_divide 1; only 1: auto).	6.29309487343	2871
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40	0.11.9.0	search with cache (only 1: unfold lt, eq; only 1: intros x y H; only 1: fix gcd_divide 1; only 1: auto).	17.3416209221	10280
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	0.6.4.4.5.0	search with cache (only 1: repeat red; only 1: unfold lt, eq; only 1: intros a n H H'; only 1: intro; only 1: fix gcd_divide 1; only 1: auto).	14.7037270069	10695
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40	1.8.0.0.1.2.5	search with cache (only 1: firstorder; only 1: red; only 1: case_eq (PeanoNat.Nat.compare x y); only 1: auto; only 1: auto; only 1: fix gcd_divide 1; only 1: auto).	9.70435214043	8108
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	7.0	search with cache (only 1: unfold eq; only 1: decide equality).	0.0625369548798	19
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.1.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	8.88317894936	2570
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	0.9	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.114203929901	58
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	0.0.1.0.0.0.0.7.0	search with cache (only 1: intros; only 1: compute; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).	0.153194904327	403
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0774610042572	142
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	3.78476119041	1957
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	4.1.6.6.14	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder; only 1: firstorder; only 1: intros R R' EQ a a' Ha WF; only 1: order).	7.9925467968	15127
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	3.0.2.34	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	11.7882661819	15691
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0117888450623	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	2	search with cache (only 1: solve_max).	0.105389118195	21
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.100519180298	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	6.0.0.1.0.0.0	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: destruct (lt_total n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: intuition order).	3.91586589813	1306
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	7.0.0.0.1.0.0.0.4	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	6.81629109383	4446
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.1.0.0.1.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.249772071838	85
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	3	search with cache (only 1: solve_max).	0.107427120209	20
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0142829418182	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.1.0.1.0	search with cache (only 1: destruct (max_spec n m); only 1: firstorder; only 1: order || (right; order) || (left; order); only 1: firstorder; only 1: order || (right; order) || (left; order)).	0.0171551704407	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.6.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0754511356354	44
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	search with cache (only 1: solve_max).	0.0139188766479	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.3.0	search with cache (only 1: destruct (max_spec n m); only 1: solve_max; only 1: intuition; only 1: order; only 1: order; only 1: order || (right; order) || (left; order)).	0.865326166153	81
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.019159078598	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0411820411682	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	1.0.2.4	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: firstorder; only 1: order; only 1: order).	0.0351910591125	31
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	1	search with cache (only 1: solve_min).	0.017541885376	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	1	search with cache (only 1: solve_min).	0.0199270248413	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	search with cache (only 1: solve_min).	0.0125021934509	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	9.0.0.0.1.0.0.0.0	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	28.8522069454	17672
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	1.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	1.91994285583	597
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	3	search with cache (only 1: solve_min).	0.0314588546753	20
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	9	search with cache (only 1: solve_min).	0.0566520690918	42
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	1	search with cache (only 1: solve_min).	0.0148239135742	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	1.3.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.111248970032	28
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	search with cache (only 1: solve_min).	0.075758934021	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	2	search with cache (only 1: solve_min).	0.295064926147	65
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0157370567322	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.0.0.0	search with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.029098033905	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.1.2.0.0	search with cache (only 1: destruct (max_spec m n) as [(H, E)| (H, E)]; only 1: apply max_r || apply max_l; only 1: solve_min; only 1: apply max_r || apply max_l; only 1: solve_min).	0.0232009887695	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.1.0.1.1	search with cache (only 1: destruct (min_spec n m) as [(C, E)| (C, E)]; only 1: apply min_r || apply min_l; only 1: solve_max; only 1: apply min_r || apply min_l; only 1: solve_max).	0.0221810340881	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.2.0.0.0.0.0.2.0.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	3.57967591286	1683
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	0.6.0.1.0.0.0.1.1.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	8.00880098343	4914
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.1.9.0	search with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	0.213511943817	217
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	0.2.1.19.6	search with cache (only 1: intros A P H; only 1: apply max_case_strong; only 1: intros; only 1: subst; only 1: firstorder).	33.8511190414	51533
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.00701594352722	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.0	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.00875496864319	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	1.9.3	search with cache (only 1: intros A P H; only 1: apply min_case_strong; only 1: congruence).	0.503129959106	754
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0119318962097	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.2	search with cache (only 1: simpl_relation; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0241229534149	7
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.5.6.0	search with cache (only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.709527015686	349
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	4.1	search with cache (only 1: unfold eq, lt; only 1: decide equality).	0.300765991211	14
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.17	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	1.7957379818	791
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.0.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.0490448474884	10
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	3	search with cache (only 1: now destruct n).	0.0285198688507	4
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	13	search with cache (only 1: now destruct n).	0.0474669933319	60
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	3	search with cache (only 1: now destruct n).	0.0402710437775	4
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.12	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.305009126663	196
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	6	search with cache (only 1: now destruct n, m).	0.157346963882	42
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	search with cache (only 1: now f_equal).	0.0201709270477	1
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: trivial).	0.0190889835358	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0199298858643	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0399050712585	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.0.5.1.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: induction p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	4.51644396782	2038
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0475280284882	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.021143913269	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0193328857422	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	search with cache (only 1: reflexivity).	0.0230910778046	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.019565820694	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.4.1.0.0.6	search with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: easy || now destruct 1; only 1: trivial).	2.61559104919	439
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.0.1.4	search with cache (only 1: unfold le, min; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: trivial; only 1: intuition; only 1: trivial).	0.753228187561	250
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	22.9	search with cache (only 1: unfold le, max; only 1: now destruct n).	4.38265109062	3157
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0445458889008	5
Coq.ZArith.BinInt.Z.sgn_null	40	3.0	search with cache (only 1: intro H; only 1: now destruct n).	0.228842020035	5
Coq.ZArith.BinInt.Z.sgn_pos	40	3.2.0.3.0.14	search with cache (only 1: destruct n; only 1: intro n; only 1: now f_equal; only 1: trivial; only 1: intro n; only 1: now destruct p).	4.35832500458	1441
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0299639701843	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now subst).	0.0229542255402	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.8.5.2	search with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: now nzsimpl; only 1: now destruct 1 || intros _).	3.99283695221	716
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.0402371883392	1
Coq.ZArith.BinInt.Z.square_spec	40	1.1.0.1.1.0.0.2	search with cache (only 1: destruct n; only 1: auto; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	1.52342200279	367
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0269989967346	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.0.4.0.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).	3.88694190979	460
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0248508453369	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: reflexivity).	0.017923116684	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	4.1	search with cache (only 1: simpl; only 1: now destruct n).	0.102783918381	7
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.026270866394	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	1.0.0.0.2	search with cache (only 1: intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.658056974411	70
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.0.0.0.0.0.1	search with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite N.mul_comm).	0.0470418930054	8
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.0.0.0.0.0.1	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite N.mul_comm).	0.046658039093	8
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.18	search with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: trivial; only 1: simpl; only 1: trivial).	17.2730910778	6034
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.0.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0587439537048	8
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: trivial).	0.0246751308441	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	3	search with cache (only 1: now destruct n).	0.0298252105713	4
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0499601364136	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a).	0.0170300006866	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.Program.Wf.Fix_F_eq	40	2.2	search with cache (only 1: destruct r using Acc_inv_dep; only 1: reflexivity).	0.0358600616455	15
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0222270488739	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.20	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.142282009125	223
Coq.Program.Wf.Fix_F_sub_rect	40
Coq.Program.Wf.eq_Fix_F_sub	40	7.1	search with cache (only 1: apply Fix_F_inv; only 1: auto).	0.0158121585846	10
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40
Coq.Program.Equality.JMeq_eq_refl	40	6	search with cache (only 1: apply UIP).	0.0091278553009	7
Coq.Program.Equality.UIP_refl_refl	40	0	search with cache (only 1: apply UIP).	0.00897693634033	1
Coq.Program.Equality.inj_pairT2_refl	40	1	search with cache (only 1: apply UIP).	0.00951409339905	2
Coq.Program.Equality.solution_left	40	0.3.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0109348297119	8
Coq.Program.Equality.solution_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.00948119163513	3
Coq.Program.Equality.deletion	40	0.0	search with cache (only 1: intros; only 1: assumption).	0.00800585746765	2
Coq.Program.Equality.simplification_heq	40
Coq.Program.Equality.simplification_existT2	40
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	2.16.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.115830898285	767
Coq.Program.Combinators.compose_id_left	40	1	search with cache (only 1: reflexivity).	0.0139131546021	2
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00861501693726	2
Coq.Program.Combinators.compose_assoc	40	1.0	search with cache (only 1: intros; only 1: trivial).	0.00960302352905	3
Coq.Program.Combinators.flip_flip	40	1.0	search with cache (only 1: intros; only 1: split).	0.00986099243164	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00819611549377	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.0.0.1.3.1.6.0.3	search with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: firstorder; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	2.485850811	2234
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40	0.49	search with cache (only 1: fix odd_spec 1; only 1: auto).	13.1075539589	14784
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40	0.47	search with cache (only 1: fix odd_spec 1; only 1: auto).	3.656883955	7266
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40	0.0.46	search with cache (only 1: fix odd_spec 1; only 1: intro; only 1: auto).	5.15417599678	9590
Coq.Sorting.Mergesort.Sort.Permuted_sort	40	1.0.45	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	11.728853941	11964
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	0.50	search with cache (only 1: fix odd_spec 1; only 1: auto).	11.868571043	13696
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40	1.23.0	search with cache (only 1: intro l'; only 1: fix le_div2 1; only 1: auto).	24.8301198483	16907
Coq.Sorting.Permutation.Permutation_nil_cons	40	0.26	search with cache (only 1: fix le_div2 1; only 1: auto).	6.82474112511	7087
Coq.Sorting.Permutation.Permutation_refl	40	0.0.9	search with cache (only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: auto).	0.101471185684	52
Coq.Sorting.Permutation.Permutation_sym	40	0.25	search with cache (only 1: fix le_div2 1; only 1: auto).	4.67642498016	4259
Coq.Sorting.Permutation.Permutation_trans	40	0.19	search with cache (only 1: fix le_div2 1; only 1: auto).	1.2309679985	1009
Coq.Sorting.Permutation.Permutation_cons	40	1.2.1	search with cache (only 1: intros a a' Ha n; only 1: subst; only 1: auto).	0.080137014389	7
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40	2.0.1.1.0.0.0.6.1.1	search with cache (only 1: intros a a' Ha n; only 1: subst; only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	13.923678875	10772
Coq.Sorting.Permutation.Permutation_app_tail	40	0.20	search with cache (only 1: fix le_div2 1; only 1: auto).	6.50473093987	1231
Coq.Sorting.Permutation.Permutation_app_head	40	1.0.0.0.13.0	search with cache (only 1: intros l l' tl Hperm; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.44816923141	602
Coq.Sorting.Permutation.Permutation_app	40	0.22.3	search with cache (only 1: intros l l' tl Hperm; only 1: fix le_div2 1; only 1: auto).	4.47283983231	3679
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40	2.24	search with cache (only 1: fix le_div2 1; only 1: auto).	32.0854380131	28569
Coq.Sorting.Permutation.Permutation_app_comm	40	2.22	search with cache (only 1: fix le_div2 1; only 1: auto).	2.24085688591	2123
Coq.Sorting.Permutation.Permutation_cons_app	40	2.25	search with cache (only 1: fix le_div2 1; only 1: auto).	5.11356306076	3320
Coq.Sorting.Permutation.Permutation_Add	40	1.16	search with cache (only 1: fix le_div2 1; only 1: auto).	1.51168680191	1213
Coq.Sorting.Permutation.Permutation_middle	40	0	search with cache (only 1: auto).	0.0583488941193	1
Coq.Sorting.Permutation.Permutation_rev	40	0.24	search with cache (only 1: fix le_div2 1; only 1: auto).	7.93572902679	3085
Coq.Sorting.Permutation.Permutation_rev'	40	0.0.20.4	search with cache (only 1: repeat red; only 1: fix le_div2 1; only 1: intros l l' Hperm; only 1: auto).	14.5389270782	8055
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	1.0.0.0.0.0.0.0.0.3	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	1.80180096626	306
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40	1.0.24	search with cache (only 1: fix le_div2 1; only 1: unfold not; only 1: auto).	20.1254417896	18111
Coq.Sorting.Permutation.Permutation_Add_inv	40	0.21	search with cache (only 1: fix le_div2 1; only 1: auto).	7.34391713142	1941
Coq.Sorting.Permutation.Permutation_app_inv	40	0.24	search with cache (only 1: fix le_div2 1; only 1: auto).	3.35899281502	1584
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40	1.14.12.4	search with cache (only 1: intros a; only 1: intro y; only 1: fix le_div2 1; only 1: auto).	11.1515758038	12824
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40	1.24.3.6	search with cache (only 1: intros a H; only 1: intros n m; only 1: fix le_div2 1; only 1: auto).	20.1523630619	18504
Coq.Sorting.Permutation.NoDup_Permutation	40	0.1.20	search with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto).	12.3896689415	8490
Coq.Sorting.Permutation.NoDup_Permutation_bis	40	0.17.2	search with cache (only 1: intros N; only 1: fix le_div2 1; only 1: auto with arith).	8.90107393265	4663
Coq.Sorting.Permutation.Permutation_NoDup	40	0.26	search with cache (only 1: fix le_div2 1; only 1: auto).	7.50883102417	6378
Coq.Sorting.Permutation.Permutation_NoDup'	40	0.24.6	search with cache (only 1: repeat red; only 1: fix le_div2 1; only 1: auto).	11.0807709694	8872
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	1.0.0.0.0.0.0.3	search with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	15.4068100452	210
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.Sorted.HdRel_inv	40	0.1	search with cache (only 1: inversion 1; only 1: auto).	0.0317468643188	3
Coq.Sorting.Sorted.Sorted_inv	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0511379241943	3
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.1.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.268692016602	4
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0668439865112	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Init.Wf.Acc_inv	40	1.6.1	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0341711044312	55
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0214111804962	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0219130516052	4
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.6.2.4.10.19.17	search with cache (only 1: intro; only 1: intros [?| ?]; only 1: intros; only 1: auto; only 1: intro H; only 1: induction n; only 1: assumption).	3.80743098259	48480
Coq.Init.Tactics.decide_right	40	0.0.1.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.00705790519714	5
Coq.Init.Peano.pred_Sn	40	0.2	search with cache (only 1: intros; only 1: auto).	0.00580716133118	4
Coq.Init.Peano.not_eq_S	40	4.0	search with cache (only 1: intro H; only 1: auto).	0.0110659599304	13
Coq.Init.Peano.O_S	40	0	search with cache (only 1: discriminate).	0.00650382041931	1
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.1.0.1	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0101518630981	6
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0100710391998	6
Coq.Init.Peano.plus_n_Sm	40	1.3.1.0.5	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0878610610962	209
Coq.Init.Peano.plus_Sn_m	40	1.0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	0.0193240642548	12
Coq.Init.Peano.mult_n_O	40	0.0.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00762104988098	6
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.3.6	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0107450485229	45
Coq.Init.Peano.le_n_S	40	2.1.0.1.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: constructor; only 1: auto; only 1: auto).	0.0109550952911	14
Coq.Init.Peano.nat_case	40	1.4.2	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.0121169090271	10
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.1.1.0.2.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.38353300095	3194
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.791939973831	1613
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.06871986389	2296
Coq.Init.Peano.nat_rect_succ_r	40	0.8.5.0.11	search with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl in *; only 1: destruct H; only 1: trivial).	1.53346514702	6159
Coq.Init.Peano.nat_rect_plus	40	1.0.1.0.0.1.1.0.0.1	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite <- ?IHn; only 1: trivial).	0.412279129028	859
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00702786445618	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00740504264832	3
Coq.Init.Datatypes.surjective_pairing	40	0.2	search with cache (only 1: intros A B []; only 1: reflexivity).	0.00798296928406	4
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.0239839553833	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.5	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0208411216736	10
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	search with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	9.6369228363	47592
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	2.1.5.0.2.1.12.0.2.1.12.0.13	search with cache (only 1: destruct c; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: assumption; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: assumption; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: assumption).	8.48481702805	41987
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00678110122681	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: trivial; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.217740058899	485
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.0.0.0.3.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.109332084656	1011
Coq.Init.Logic.imp_iff_compat_l	40	0.0.1.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0122880935669	5
Coq.Init.Logic.imp_iff_compat_r	40	3.1.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: auto; only 1: auto).	0.00801491737366	12
Coq.Init.Logic.not_iff_compat	40	0.5.0.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: intros H ?; only 1: auto; only 1: auto).	0.00888919830322	12
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40	0.0.7.0.0.0.0.2.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: assumption).	25.1856060028	157582
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: assumption; only 1: trivial).	0.00802803039551	9
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40	0.0.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? Fl Fr; only 1: split; only 1: intros [Hl Hr]; only 1: split; only 1: intros; only 1: destruct Hl; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct Fl; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct Hr; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct Fr; only 1: assumption; only 1: assumption; only 1: intros [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	4.14968800545	34185
Coq.Init.Logic.or_comm	40	0.0.0.0.1.0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.0887198448181	658
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	search with cache (only 1: intros; only 1: assumption).	0.0090639591217	3
Coq.Init.Logic.iff_to_and	40	3.4.4.0.1	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: assumption; only 1: trivial).	0.277670860291	1391
Coq.Init.Logic.inst	40	4.2	search with cache (only 1: intros; only 1: trivial).	0.00962901115417	8
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.0178098678589	3
Coq.Init.Logic.absurd	40	0.5.2.5	search with cache (only 1: intros H ?; only 1: intros; only 1: elim H1; only 1: assumption).	0.033264875412	190
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0254380702972	3
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.0168368816376	2
Coq.Init.Logic.f_equal	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0174551010132	2
Coq.Init.Logic.not_eq_sym	40
Coq.Init.Logic.eq_sind_r	40	0.3.5.0	search with cache (only 1: intros A C h1 h2; only 1: intro H; only 1: destruct 1; only 1: auto).	0.0286178588867	68
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0197880268097	4
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0232880115509	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0183999538422	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.5.3.3	search with cache (only 1: intro H1; only 1: destruct H; only 1: destruct 1; only 1: trivial).	0.226405858994	194
Coq.Init.Logic.rew_opp_r	40	0.3	search with cache (only 1: destruct H; only 1: auto).	0.0124499797821	5
Coq.Init.Logic.rew_opp_l	40	0.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0121650695801	4
Coq.Init.Logic.f_equal2	40	1.0.7.3.2	search with cache (only 1: intros A C h1 h2; only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: destruct H; only 1: auto).	0.243640899658	482
Coq.Init.Logic.f_equal3	40	0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0246818065643	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0280649662018	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0315430164337	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.5.0	search with cache (only 1: intros A C h1 h2; only 1: destruct h2; only 1: reflexivity).	0.0136649608612	8
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0208258628845	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.014552116394	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.012640953064	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0116770267487	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	1.4.4	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0741419792175	36
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0239810943604	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0220580101013	2
Coq.Init.Logic.rew_swap	40	2.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0189418792725	7
Coq.Init.Logic.rew_compose	40	3.3.0	search with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.0240170955658	9
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	1.0	search with cache (only 1: intros A C h1 h2; only 1: reflexivity).	0.0142328739166	3
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40
Coq.Init.Logic.eq_trans_sym_distr	40	1.8.7.2	search with cache (only 1: intros; only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.170865058899	590
Coq.Init.Logic.eq_trans_rew_distr	40	0.4	search with cache (only 1: destruct e, e'; only 1: auto).	0.0137269496918	14
Coq.Init.Logic.rew_const	40	1.4	search with cache (only 1: destruct e; only 1: reflexivity).	0.0263569355011	14
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	2.6.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0257768630981	110
Coq.Init.Logic.inhabited_covariant	40	12.7.9	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.190155982971	1606
Coq.Init.Logic.eq_stepl	40	0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0104911327362	4
Coq.Init.Logic.iff_stepl	40	10.5.1.0	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.484950065613	2638
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.2.8.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.103993177414	258
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0166900157928	2
Coq.Init.Logic_Type.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0176639556885	2
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.0174250602722	2
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0178718566895	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0199019908905	5
Coq.Init.Logic_Type.identity_ind_r	40	1.3.0	search with cache (only 1: intros A x P H y H0; only 1: destruct H0 in H; only 1: auto).	0.00920295715332	7
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.00786399841309	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00813579559326	3
Coq.Init.Specif.sigT_eta	40	0.3	search with cache (only 1: destruct p; only 1: reflexivity).	0.0218989849091	5
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0216031074524	2
Coq.Init.Specif.sigT2_eta	40	0.4	search with cache (only 1: destruct p; only 1: reflexivity).	0.021812915802	6
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0119800567627	2
Coq.Init.Specif.exists_to_inhabited_sig	40
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0186421871185	5
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0309660434723	4
Coq.Init.Specif.eq_existT_curried_map	40	0.7	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0382838249207	24
Coq.Init.Specif.eq_existT_curried_trans	40	0.8	search with cache (only 1: subst; only 1: reflexivity).	0.0663549900055	25
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0161778926849	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0161838531494	4
Coq.Init.Specif.eq_sig_uncurried	40	0.1.0.1.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0230929851532	8
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	4.0.0.0.2.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried; only 1: auto).	0.436922073364	539
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0150887966156	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried_iff	40
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0490729808807	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0269968509674	4
Coq.Init.Specif.eq_sig2_uncurried	40	0.0.0.4.0.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0511400699615	10
Coq.Init.Specif.eq_sig2_uncurried_iff	40
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0234520435333	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0088038444519	3
Coq.Classes.CMorphisms.eq_proper_proxy	40	0	search with cache (only 1: reflexivity).	0.00426816940308	1
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00454521179199	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00438499450684	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	0.0.0.9.5	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: firstorder).	0.15718793869	530
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: auto).	0.00521612167358	1
Coq.Classes.CMorphisms.subrelation_respectful	40	1	search with cache (only 1: firstorder).	0.00708794593811	2
Coq.Classes.CMorphisms.subrelation_refl	40	2	search with cache (only 1: firstorder).	0.00469017028809	3
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00488090515137	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	1.10.16	search with cache (only 1: reduce_goal; only 1: destruct H; only 1: firstorder).	1.16221809387	727
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.0101199150085	1
Coq.Classes.CMorphisms.forall_subrelation	40	1	search with cache (only 1: firstorder).	0.00979495048523	2
Coq.Classes.CMorphisms.iff_impl_subrelation	40	1	search with cache (only 1: firstorder).	0.00901913642883	11
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00663685798645	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00737500190735	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00675511360168	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	3	search with cache (only 1: firstorder).	0.0101690292358	4
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.154814958572	1
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	1	search with cache (only 1: firstorder).	8.315762043	216
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	3.1.7	search with cache (only 1: transitivity x0; only 1: assumption; only 1: tauto).	4.02971410751	6338
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	3.2.0	search with cache (only 1: transitivity y; only 1: firstorder; only 1: firstorder).	2.91613411903	424
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	4.1.2.0	search with cache (only 1: transitivity x0; only 1: assumption; only 1: symmetry; only 1: assumption).	1.23047399521	1323
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0532839298248	1
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	0.123901128769	151
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	2.0.4.0.0	search with cache (only 1: split; only 1: intros; only 1: firstorder; only 1: intros; only 1: firstorder).	6.09862399101	758
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.00698304176331	1
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	6	search with cache (only 1: firstorder).	0.00975608825684	7
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00887417793274	1
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00582408905029	1
Coq.Classes.CMorphisms.flip_respectful	40	0.1.2.2.0	search with cache (only 1: hnf; only 1: red; only 1: intros; only 1: unfold respectful, relation_equivalence in *; only 1: simpl_crelation).	0.0505709648132	22
Coq.Classes.CMorphisms.flip1	40	0	search with cache (only 1: firstorder).	0.00532603263855	1
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00712609291077	1
Coq.Classes.CMorphisms.eq_subrelation	40	1	search with cache (only 1: simpl_crelation).	0.00839900970459	2
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0059449672699	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00480103492737	1
Coq.Classes.CMorphisms.proper_proper	40	0.2.0.1.0.0	search with cache (only 1: reduce; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0381960868835	9
Coq.Classes.CMorphisms.proper_normalizes_proper	40	1	search with cache (only 1: firstorder).	0.00636601448059	2
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00545597076416	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.3	search with cache (only 1: reduce; only 1: auto).	0.0341620445251	6
Coq.Classes.CMorphisms.proper_sym_flip_2	40
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	0.1.11	search with cache (only 1: intros H x y Hxy; only 1: simpl_crelation; only 1: firstorder).	3.50330686569	620
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.016294002533	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.1.2	search with cache (only 1: unfold relation_equivalence, iffT; only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.170528173447	67
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.2.6	search with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.13525390625	146
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	2	search with cache (only 1: simpl_crelation).	0.00987696647644	3
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00544786453247	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0125360488892	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.389338970184	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.0224149227142	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.0124831199646	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	0.0	search with cache (only 1: hnf; only 1: auto).	0.0201289653778	2
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	3.1.1	search with cache (only 1: intros x y H'; only 1: red in H'; only 1: firstorder).	0.0296108722687	8
Coq.Classes.CRelationClasses.flip_PreOrder	40	2	search with cache (only 1: firstorder).	0.0315790176392	3
Coq.Classes.CRelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.117736101151	2
Coq.Classes.CRelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0472779273987	1
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0475368499756	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.0119869709015	2
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0100481510162	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0	search with cache (only 1: firstorder).	0.00982809066772	1
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.0110499858856	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.0228400230408	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	5	search with cache (only 1: firstorder).	0.0353360176086	17
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0185391902924	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	6.0	search with cache (only 1: reduce_goal; only 1: firstorder).	0.0605599880219	8
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.1.1.8	search with cache (only 1: intros; only 1: reduce_goal; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.489697933197	634
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: firstorder).	0.00850296020508	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00965905189514	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0112519264221	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.532093048096	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	0.47.56	search with cache (only 1: generalize dependent x; only 1: fix odd_spec 1; only 1: auto).	10.218323946	20566
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	0	search with cache (only 1: reflexivity).	0.00523495674133	1
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.0042450428009	1
Coq.Classes.RelationClasses.flip_Reflexive	40	1.0	search with cache (only 1: hnf; only 1: auto).	0.00543594360352	3
Coq.Classes.RelationClasses.flip_Antisymmetric	40	4.0.0.0.1	search with cache (only 1: hnf; only 1: intros; only 1: apply symmetry; only 1: apply symmetry; only 1: auto).	0.0182509422302	26
Coq.Classes.RelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0208041667938	2
Coq.Classes.RelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0167760848999	2
Coq.Classes.RelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0313289165497	2
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.102452039719	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00593304634094	1
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00563311576843	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0157279968262	3
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.00880098342896	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0161180496216	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.00763607025146	2
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0101320743561	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	1.0.2.0.1.0	search with cache (only 1: hnf; only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: hnf; only 1: do 3 red in poe; only 1: firstorder).	0.118757009506	27
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.0.1.0	search with cache (only 1: split; only 1: firstorder; only 1: reduce_goal; only 1: firstorder).	0.0146389007568	15
Coq.Classes.Morphisms.eq_proper_proxy	40	2	search with cache (only 1: reflexivity).	0.00701498985291	3
Coq.Classes.Morphisms.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.00711989402771	2
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00562500953674	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.2.0.3.8.4	search with cache (only 1: split; only 1: intro H; only 1: destruct 1; only 1: firstorder; only 1: intros h1 h2; only 1: firstorder).	0.844452857971	1330
Coq.Classes.Morphisms.subrelation_id_proper	40	0	search with cache (only 1: trivial).	0.00924396514893	1
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0151660442352	1
Coq.Classes.Morphisms.subrelation_refl	40	1	search with cache (only 1: firstorder).	0.0104179382324	2
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00734996795654	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.12.1	search with cache (only 1: unfold subrelation; only 1: destruct 2; only 1: firstorder).	1.20739412308	298
Coq.Classes.Morphisms.pointwise_subrelation	40	0	search with cache (only 1: firstorder).	0.00529289245605	1
Coq.Classes.Morphisms.forall_subrelation	40	1.2	search with cache (only 1: reduce; only 1: firstorder).	0.0130269527435	5
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00732803344727	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00508618354797	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	7	search with cache (only 1: firstorder).	0.00811004638672	8
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.067498922348	1
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	6.99373698235	224
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	3.2.0	search with cache (only 1: transitivity x0; only 1: firstorder; only 1: firstorder).	2.20206212997	418
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	16.8747251034	21229
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	2.0.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.0529019832611	14
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	0.0585458278656	176
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	7.4	search with cache (only 1: symmetry; only 1: firstorder).	13.2131459713	9953
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.00646591186523	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	6	search with cache (only 1: firstorder).	0.00862884521484	7
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	3.0	search with cache (only 1: destruct 1; only 1: firstorder).	0.00800108909607	5
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00459599494934	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.00673007965088	1
Coq.Classes.Morphisms.flip1	40	0	search with cache (only 1: firstorder).	0.0046398639679	1
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00680494308472	1
Coq.Classes.Morphisms.eq_subrelation	40	1	search with cache (only 1: simpl_relation).	0.0126490592957	2
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00429105758667	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00436615943909	1
Coq.Classes.Morphisms.proper_proper	40	1.1.0.1.1.4.1	search with cache (only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: split; only 1: simpl_relation; only 1: firstorder; only 1: simpl_relation; only 1: firstorder).	2.01771497726	1060
Coq.Classes.Morphisms.proper_normalizes_proper	40	2.1.2.1	search with cache (only 1: reduce in H; only 1: red; only 1: setoid_rewrite H; only 1: apply H0).	0.0336289405823	12
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0118730068207	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	1	search with cache (only 1: simpl_relation).	0.0420179367065	2
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.10.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: compute; only 1: auto).	1.24216294289	263
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.0.0.5.2	search with cache (only 1: simpl_relation; only 1: intuition; only 1: firstorder; only 1: red in H0; only 1: firstorder).	1.00292897224	304
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	2	search with cache (only 1: firstorder).	0.0537281036377	3
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0335340499878	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0899920463562	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.046884059906	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	2	search with cache (only 1: firstorder).	0.0532078742981	3
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0450592041016	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.644426822662	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	2	search with cache (only 1: firstorder).	0.0770781040192	3
Coq.Classes.RelationPairs.SndRel_ProdRel	40	2	search with cache (only 1: firstorder).	0.0777490139008	3
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0614330768585	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.059366941452	1
Coq.Classes.RelationPairs.pair_compat	40	1	search with cache (only 1: firstorder).	0.0641431808472	2
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0401790142059	1
Coq.Classes.RelationPairs.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0436451435089	3
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.3.1.1.2	search with cache (only 1: repeat red; only 1: firstorder; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: compute in *; only 1: auto).	0.781569957733	77
Coq.Classes.DecidableClass.Decidable_sound	40
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.SetoidClass.setoid_refl	40	19	search with cache (only 1: firstorder).	0.0520858764648	166
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0121269226074	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0121409893036	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	8.2.2.16	search with cache (only 1: destruct H; only 1: simpl; only 1: intros x y z; only 1: firstorder).	6.37782812119	4625
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	3	search with cache (only 1: firstorder).	0.22381401062	16
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.98738193512	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	4	search with cache (only 1: firstorder).	0.0136158466339	5
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	3.0	search with cache (only 1: do 2 red; only 1: auto).	0.0249562263489	5
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.1	search with cache (only 1: do 2 red; only 1: auto).	0.017256975174	3
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.2.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.0237021446228	5
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.0110528469086	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40	0.10.9	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	0.981168031693	696
Coq.PArith.Pnat.Pos2Nat.inj_add	40	0.20.4.11	search with cache (only 1: symmetry; only 1: revert q; only 1: fix even_spec 1; only 1: auto).	33.969042778	25640
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	search with cache (only 1: trivial).	0.0258328914642	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	2.0.0.0.2	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now f_equal).	0.134401082993	60
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	1.0.1.0.3.0.1.0.16	search with cache (only 1: induction n as [| n H]; only 1: reflexivity; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: f_equal; only 1: trivial).	6.58177089691	5421
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0375299453735	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	5.4.0.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now f_equal).	1.68322300911	709
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	2.1.0.5.0.9	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	4.1712679863	3173
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto).	0.0509538650513	8
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	7.0	search with cache (only 1: apply Pos2Nat.inj; only 1: trivial).	0.08869099617	37
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40	1.21.13	search with cache (only 1: intros q; only 1: fix even_spec 1; only 1: trivial).	15.9516270161	13056
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	3.1.4.8	search with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	1.17404794693	873
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	search with cache (only 1: decide equality).	0.0686960220337	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	search with cache (only 1: now split).	0.0391328334808	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0171430110931	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.1.0.1.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.071751832962	10
Coq.PArith.BinPos.Pos.double_succ	40	1	search with cache (only 1: reflexivity).	0.0480110645294	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0397469997406	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.044046163559	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	3.060338974	485
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	1.0.1.0.0.0.0.0	search with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).	0.172539949417	24
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.0370221138	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.070986032486	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	1.4.1.4.0	search with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: destruct 1; only 1: trivial).	4.62619113922	1974
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.0	search with cache (only 1: simpl; only 1: f_equal).	0.614933013916	2
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0536921024323	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40	1.25	search with cache (only 1: fix even_spec 1; only 1: trivial).	5.43788814545	4305
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0.0.1.0.0.0.1	search with cache (only 1: destruct p; only 1: reflexivity; only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: trivial).	0.0573489665985	10
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.1.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.656732082367	126
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.0.2.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.191938877106	69
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.084007024765	1
Coq.PArith.BinPos.Pos.square_xO	40	0.6	search with cache (only 1: rewrite mul_xO_r; only 1: now rewrite ?add_carry_spec, ?IHp).	0.150779008865	42
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	1.0.1.1.0.2.0.12	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: trivial).	3.32263493538	2772
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40	2.23	search with cache (only 1: fix even_spec 1; only 1: tauto).	1.87393689156	1989
Coq.PArith.BinPos.Pos.pow_1_r	40	0.0.3.1.1.0.0.3.46	search with cache (only 1: apply succ_inj; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: now rewrite mul_comm; only 1: simpl; only 1: now rewrite mul_comm; only 1: simpl; only 1: f_equal).	10.0601248741	12957
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.050225019455	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40	5.8.4	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: Bool.destr_bool).	23.5287230015	12264
Coq.PArith.BinPos.Pos.ltb_lt	40	5.2.1	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: now rewrite ?IHp).	0.262707948685	144
Coq.PArith.BinPos.Pos.leb_le	40	5.2.6	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: now rewrite ?IHp).	1.93107414246	671
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.1.1.0.2.1	search with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	2.09507703781	360
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.2.2	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.211114168167	41
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.2.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.413497924805	32
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.4.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.0942358970642	9
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.3.10.4	search with cache (only 1: unfold ge; only 1: rewrite compare_cont_spec; only 1: destruct compare; only 1: now split; only 1: now split; only 1: easy').	9.71843290329	3651
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.3.3	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.567193984985	74
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.1	search with cache (only 1: unfold compare; only 1: trivial).	0.0424869060516	3
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0323259830475	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.4.9.2	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	1.58668208122	1037
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.3.11.2	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	0.63337802887	336
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.1.0.1.0.4.0.12	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	1.01959705353	513
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.2	search with cache (only 1: unfold lt; only 1: now split).	0.0404789447784	4
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.0.0.3	search with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	0.129098892212	8
Coq.PArith.BinPos.Pos.gt_lt_iff	40	5.1	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	1.49879908562	60
Coq.PArith.BinPos.Pos.gt_lt	40	3.8	search with cache (only 1: intro; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.370180845261	94
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.050262928009	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	4.11	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	3.16229081154	1412
Coq.PArith.BinPos.Pos.ge_le	40	0.6	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0633950233459	8
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0378000736237	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40
Coq.PArith.BinPos.Pos.nlt_1_r	40	6.1	search with cache (only 1: intros H; only 1: now destruct p).	0.111670970917	9
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.531351089478	30
Coq.PArith.BinPos.Pos.le_nlt	40	0.2.0	search with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_gt_iff; only 1: intuition).	0.0919361114502	5
Coq.PArith.BinPos.Pos.lt_nle	40	3.2	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.04264807701	124
Coq.PArith.BinPos.Pos.lt_le_incl	40	4	search with cache (only 1: congruence).	0.0655150413513	5
Coq.PArith.BinPos.Pos.lt_lt_succ	40	1.1.5.4	search with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: auto).	0.297537088394	303
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	3.7	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_succ_succ).	0.213641881943	71
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40	1.24.15	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: trivial).	5.9800388813	6880
Coq.PArith.BinPos.Pos.lt_strorder	40	1.3.3	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.0447630882263	10
Coq.PArith.BinPos.Pos.lt_compat	40	9	search with cache (only 1: solve_proper).	1.3723859787	34
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	search with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0686700344086	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.10.12	search with cache (only 1: intro H1; only 1: intro H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	4.00223517418	1979
Coq.PArith.BinPos.Pos.le_trans	40	0.0.0.1.0.2.1.0.0.0.2.0	search with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply le_lteq; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: apply le_lteq; only 1: now left; only 1: now subst).	6.10504198074	2545
Coq.PArith.BinPos.Pos.le_succ_l	40	0.5.2.0.1	search with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.59074378014	322
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	3.3.1	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.0440940856934	10
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40
Coq.PArith.BinPos.Pos.add_lt_mono	40	3.22	search with cache (only 1: fix even_spec 1; only 1: trivial).	3.32136511803	2645
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.0.44	search with cache (only 1: unfold le, ge; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	37.2430050373	15027
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.0.23.0	search with cache (only 1: unfold le; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	3.34282016754	2283
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono	40	2.19	search with cache (only 1: fix even_spec 1; only 1: trivial).	4.37375092506	3053
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.5.1	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0632359981537	9
Coq.PArith.BinPos.Pos.mul_le_mono_r	40
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0848407745361	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40	2.2.11.2.1	search with cache (only 1: rewrite lt_iff_add; only 1: intro H; only 1: destruct H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H)).	27.0235159397	16872
Coq.PArith.BinPos.Pos.pow_gt_1	40	0.8.26	search with cache (only 1: fix even_spec 1; only 1: unfold lt; only 1: easy || now destruct 1).	4.98986792564	4853
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0647048950195	7
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0735559463501	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.11847114563	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0666191577911	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0775091648102	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40	1.3.0.17	search with cache (only 1: induction n; only 1: now f_equal; only 1: now f_equal; only 1: trivial).	0.791268110275	393
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.132097959518	9
Coq.PArith.BinPos.Pos.min_1_l	40	1.0	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0521168708801	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.151257991791	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	0.1.3.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros; only 1: now apply add_le_mono_l).	0.179962873459	37
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.2	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.086009979248	5
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.0	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0631501674652	4
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	1.4.0.1	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intuition; only 1: now apply mul_le_mono_l).	0.128468036652	10
Coq.PArith.BinPos.Pos.mul_max_distr_r	40	0.0.0.3	search with cache (only 1: rewrite !(PeanoNat.Nat.mul_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0650088787079	7
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.1	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0938351154327	4
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.127527952194	5
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40	44.4.3.1.21	search with cache (only 1: induction n; only 1: trivial; only 1: induction n; only 1: auto; only 1: CRelationClasses.simpl_crelation).	34.2157590389	44332
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	2.1.2.2.1.9.0	search with cache (only 1: intros H; only 1: induction n; only 1: now elim H; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: now rewrite IHn).	30.9359390736	20626
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	2.4.10.0.19	search with cache (only 1: induction 1; only 1: subst; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	7.63904094696	6160
Coq.PArith.BinPos.Pos.divide_xO_xI	40	1.0.11	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: now f_equal).	2.14526605606	549
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40	0.2.18	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.727481126785	268
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	0.23.2	search with cache (only 1: intros x y; only 1: fix even_spec 1; only 1: intuition).	9.70278692245	6035
Coq.PArith.BinPos.Pos.ggcd_gcd	40	0.1.12.11.1	search with cache (only 1: intros q r; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	2.34983611107	1618
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	0.5.7.0.0.3.0	search with cache (only 1: induction n; only 1: intros; only 1: simpl; only 1: auto with relations; only 1: intro H; only 1: fix gcd_divide 1; only 1: auto).	4.8931388855	3391
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	0.38.13	search with cache (only 1: intro H; only 1: fix gcd_divide 1; only 1: auto).	5.21214079857	8320
Coq.PArith.BinPos.Pos.gcd_divide_l	40	1.0.25	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	2.01026010513	1875
Coq.PArith.BinPos.Pos.gcd_divide_r	40	5.0.3	search with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	0.664784908295	157
Coq.PArith.BinPos.Pos.gcdn_greatest	40	1.19	search with cache (only 1: fix le_div2 1; only 1: trivial).	7.30494785309	6651
Coq.PArith.BinPos.Pos.gcd_greatest	40	1.1.5	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.218906164169	36
Coq.PArith.BinPos.Pos.ggcd_greatest	40	1.0.17.0.1.2	search with cache (only 1: intros; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: fix even_spec 1; only 1: simpl; only 1: auto).	4.63214993477	3818
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.1	search with cache (only 1: unfold Pos.gt; only 1: now split).	0.0734708309174	4
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.0.0.51.0	search with cache (only 1: intuition; only 1: induction r; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	22.96413517	5467
Coq.Arith.Le.le_n_0_eq	40	0.1	search with cache (only 1: inversion 1; only 1: Nat.order_nz).	0.0206251144409	20
Coq.Arith.Le.le_elim_rel	40	8.4.0.0.0.0.0.5	search with cache (only 1: intros H1 H2 H3; only 1: Nat.induct ltac:(n); only 1: intros; only 1: trivial; only 1: intros n IH m H; only 1: elim H using Nat.le_ind; only 1: auto; only 1: intuition).	13.3467311859	13967
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	6.0	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.0649950504303	41
Coq.Arith.Even.even_or_odd	40	9.10.2.11.0.1	search with cache (only 1: Nat.induct n; only 1: left; only 1: constructor; only 1: inversion_clear 1; only 1: now do 2 constructor; only 1: now do 2 constructor).	5.22036099434	7081
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0194590091705	5
Coq.Arith.Even.not_even_and_odd	40	3.3.3.2.1.0	search with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto with arith).	1.1821911335	895
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.103941917419	1
Coq.Arith.Even.even_even_plus	40	1	search with cache (only 1: parity_binop).	0.476782083511	2
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0515820980072	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.13694691658	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0454251766205	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.282629966736	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0551109313965	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0976839065552	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0435450077057	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.136422872543	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0393671989441	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.115450143814	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0496790409088	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.152070999146	1
Coq.Arith.Even.even_mult_aux	40	1	search with cache (only 1: parity_binop).	0.145303010941	2
Coq.Arith.Even.even_mult_l	40	1	search with cache (only 1: parity_binop).	0.0273540019989	2
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.035884141922	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.16737985611	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0549788475037	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0990679264069	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0386080741882	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.032390832901	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0113320350647	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0268270969391	1
Coq.Arith.Minus.minus_diag_reverse	40	1.0.6.11	search with cache (only 1: Nat.induct ltac:(n); only 1: intuition; only 1: intros n IH; only 1: trivial).	0.704563140869	982
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40	3.2.1.0.2.0.2.0.16.3.0	search with cache (only 1: Nat.double_induct n m; only 1: intro n; only 1: Nat.cases n; only 1: intro H; only 1: now Nat.nzsimpl; only 1: intro n; only 1: now try Nat.order'; only 1: intro n; only 1: now try Nat.order'; only 1: intros a n H H'; only 1: intuition).	39.5268321037	63137
Coq.Arith.Minus.minus_plus	40	0.0.0.0.1.0.3	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: intros; only 1: apply Nat.sub_0_r; only 1: simpl; only 1: trivial).	0.0901401042938	52
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40	5.9.0.6.4.8	search with cache (only 1: Nat.induct n; only 1: now Nat.nzsimpl; only 1: Nat.induct ltac:(m); only 1: trivial; only 1: fix gcd_divide 1; only 1: trivial).	12.9419970512	12662
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	27	search with cache (only 1: CRelationClasses.simpl_crelation).	2.87893104553	4940
Coq.Arith.Between.between_le	40	0.17.18	search with cache (only 1: intro H; only 1: fix le_div2 1; only 1: trivial).	3.67743992805	4764
Coq.Arith.Between.between_Sk_l	40	0.22.2	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	5.35942292213	8328
Coq.Arith.Between.between_restr	40	0.0.0.4	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0440771579742	49
Coq.Arith.Between.exists_le_S	40	0.0.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.0241270065308	3
Coq.Arith.Between.exists_S_le	40	0.21.12	search with cache (only 1: intros a; only 1: fix le_div2 1; only 1: trivial).	14.3264970779	19220
Coq.Arith.Between.in_int_intro	40	7	search with cache (only 1: now trivial).	0.0973620414734	52
Coq.Arith.Between.in_int_lt	40	16.2	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order).	0.858459949493	737
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	1.0.1.3.0	search with cache (only 1: intros * []; only 1: destruct (le_lt_or_eq r q); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0179550647736	10
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0122859477997	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0318830013275	5
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40	0.10.18.23	search with cache (only 1: induction n; only 1: tauto; only 1: left; only 1: now exists n).	1.94827079773	2110
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40	2.22.1	search with cache (only 1: intros x y; only 1: fix even_spec 1; only 1: trivial).	2.59907698631	2947
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	3.3.0.0.0.6.2.4	search with cache (only 1: destruct n; only 1: auto; only 1: Nat.cases m; only 1: intro H; only 1: now right; only 1: intro H; only 1: intros EQ; only 1: now right).	4.81674790382	4391
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40	1.6.0.4.0.12.12	search with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now left; only 1: intro; only 1: intro; only 1: Nat.nzsimpl; only 1: intuition).	18.5310330391	15718
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40	0.3.5.0.7.3.21.6.1	search with cache (only 1: intros; only 1: Nat.nzsimpl; only 1: apply Nat.add_le_lt_mono; only 1: apply Nat.mul_le_mono_nonneg; only 1: intuition; only 1: trivial; only 1: intuition; only 1: intuition; only 1: trivial).	15.3573319912	23437
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	4.3.1	search with cache (only 1: intros n IH a m; only 1: fix even_equiv 1; only 1: trivial).	0.0861058235168	97
Coq.Arith.Div2.lt_div2	40	3.0.1.13.1	search with cache (only 1: intros _; only 1: revert n; only 1: fix ind_0_1_SS 1; only 1: intro n; only 1: trivial).	25.996104002	29650
Coq.Arith.Div2.even_div2	40	1.5.15	search with cache (only 1: revert n; only 1: fix even_equiv 1; only 1: trivial).	13.519215107	14907
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	39	search with cache (only 1: intuition).	32.1087059975	56617
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	4.21	search with cache (only 1: fix even_equiv 1; only 1: auto with arith).	1.97764611244	2939
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0281040668488	3
Coq.Arith.Div2.div2_double	40	2.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: apply Nat.div2_double).	0.0841238498688	18
Coq.Arith.Div2.div2_double_plus_one	40	1.5.0.2.1.6.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: induction n; only 1: trivial; only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: auto).	28.554956913	16311
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.0622789859772	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0284700393677	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	search with cache (only 1: apply Nat.add_le_mono).	0.0279860496521	2
Coq.Arith.Plus.plus_lt_compat	40	7.16.6	search with cache (only 1: intro H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	3.25144791603	1657
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40	2.0.1.2.0.5.29	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intro; only 1: trivial; only 1: intro; only 1: Nat.nzsimpl; only 1: auto).	2.39321708679	2918
Coq.Arith.Plus.le_plus_trans	40	2.2.0.22	search with cache (only 1: induction 1; only 1: apply Nat.le_add_r; only 1: Nat.nzsimpl; only 1: intuition).	8.55819702148	13028
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	3.0.0.3.2	search with cache (only 1: Nat.induct n; only 1: intuition; only 1: intros n IH; only 1: intro H; only 1: now split).	1.08115005493	594
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	4.5.1.4.3.6.1	search with cache (only 1: revert m; only 1: intro H; only 1: nzinduct n; only 1: trivial; only 1: intro n; only 1: Nat.nzsimpl; only 1: intuition).	20.403470993	19397
Coq.Arith.Lt.lt_le_S	40	2.0	search with cache (only 1: intro H; only 1: trivial).	0.00933790206909	4
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.00824785232544	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.2.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0128989219666	5
Coq.Arith.Lt.le_not_lt	40	0.3	search with cache (only 1: intro H; only 1: Nat.order).	0.0262191295624	19
Coq.Arith.Lt.lt_not_le	40	4	search with cache (only 1: intuition Nat.order).	0.0417969226837	30
Coq.Arith.Lt.neq_0_lt	40	0.0	search with cache (only 1: intro H; only 1: Nat.auto').	0.0145061016083	2
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0190420150757	4
Coq.Arith.Lt.lt_n_S	40	1	search with cache (only 1: apply le_n_S).	0.0102128982544	2
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0115921497345	1
Coq.Arith.Lt.S_pred	40	0.2.3.5.7.16	search with cache (only 1: revert m; only 1: induction n; only 1: intro H; only 1: inversion 1; only 1: intros a Ha; only 1: trivial).	6.64007711411	7047
Coq.Arith.Lt.S_pred_pos	40	0.0.2.9.0	search with cache (only 1: intros; only 1: induction n as [| n IH]; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: trivial).	0.630373954773	768
Coq.Arith.Lt.lt_pred	40	3.6.11.0.1.17.24.2	search with cache (only 1: intro H; only 1: red; only 1: destruct H; only 1: simpl; only 1: constructor; only 1: apply Nat.le_succ_l; only 1: apply Nat.lt_succ_r; only 1: auto).	38.9229590893	65174
Coq.Arith.Lt.lt_pred_n_n	40	2.4.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: apply Nat.lt_succ_r; only 1: reflexivity).	0.12356710434	98
Coq.Arith.Lt.le_lt_or_eq	40	7.0.4.14.14	search with cache (only 1: revert m; only 1: inversion 1; only 1: right; only 1: trivial; only 1: intuition).	18.6604969501	20014
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	19.200013876	6124
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.327527046204	200
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0206711292267	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0209579467773	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.021998167038	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0343990325928	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0383310317993	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	18.1.16.30	search with cache (only 1: compute; only 1: Nat.induct n; only 1: Nat.order'; only 1: firstorder).	8.40259504318	14690
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	1.0.0.0	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	0.0202860832214	5
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.915511846542	263
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	0.3.0.0.0.1.0.1.0.2.1	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: apply Nat.lt_0_succ; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	2.84250116348	1696
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.615800857544	193
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.226266145706	86
Coq.Arith.Compare_dec.le_lt_eq_dec	40	4.2.0.0.0.0.1.0.0.0.2.8	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: intro H; only 1: auto with arith; only 1: intro; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto; only 1: auto with arith).	29.8447670937	21744
Coq.Arith.Compare_dec.le_dec	40	0.0.2	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0189220905304	5
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	0	search with cache (only 1: apply le_dec).	0.0191261768341	1
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.0111231803894	2
Coq.Arith.Compare_dec.dec_le	40	0.0.6.0.0.1.9	search with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: left; only 1: trivial; only 1: intro H; only 1: right; only 1: Nat.order).	2.25813102722	2332
Coq.Arith.Compare_dec.dec_lt	40	1	search with cache (only 1: apply Nat.le_decidable).	0.00807285308838	2
Coq.Arith.Compare_dec.dec_gt	40	0	search with cache (only 1: apply Nat.le_decidable).	0.0127930641174	1
Coq.Arith.Compare_dec.dec_ge	40	1	search with cache (only 1: apply Nat.le_decidable).	0.00850391387939	2
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0090479850769	1
Coq.Arith.Compare_dec.not_le	40	2	search with cache (only 1: apply Nat.lt_nge).	0.0123040676117	3
Coq.Arith.Compare_dec.not_gt	40	2	search with cache (only 1: apply Nat.le_ngt).	0.0103440284729	3
Coq.Arith.Compare_dec.not_ge	40	0	search with cache (only 1: apply Nat.nle_gt).	0.00892901420593	1
Coq.Arith.Compare_dec.not_lt	40	1	search with cache (only 1: apply Nat.le_ngt).	0.00863194465637	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	0.1.0.0.1.1.0.0.0.1.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: auto).	1.62856817245	1459
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	2	search with cache (only 1: apply Nat.compare_lt_iff).	0.0107090473175	3
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	3	search with cache (only 1: apply Nat.compare_gt_iff).	0.0129430294037	4
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	4.3.3	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	0.773853063583	454
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00907397270203	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.3	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0194277763367	5
Coq.Arith.Compare_dec.leb_complete_conv	40	1	search with cache (only 1: apply leb_iff_conv).	0.0101239681244	2
Coq.Arith.Compare_dec.leb_compare	40	2.4.9	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	1.50010585785	775
Coq.Arith.EqNat.eq_nat_refl	40	1.3.5.5	search with cache (only 1: Nat.induct n; only 1: now Nat.nzsimpl; only 1: intros n IH; only 1: trivial).	0.521510839462	202
Coq.Arith.EqNat.eq_nat_is_eq	40	0.8.2.10	search with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	6.45007610321	7344
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0142180919647	6
Coq.Arith.EqNat.eq_nat_eq	40	2	search with cache (only 1: apply eq_nat_is_eq).	0.346735954285	93
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	2.0.1.1.1.1.0.0	search with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: simpl; only 1: destruct m; only 1: auto; only 1: trivial).	1.88645911217	1009
Coq.Arith.EqNat.beq_nat_refl	40	4.2.1.3	search with cache (only 1: induction n; only 1: contradiction || auto; only 1: simpl; only 1: trivial).	0.0763840675354	131
Coq.Arith.EqNat.beq_nat_true	40	2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	1.45113492012	730
Coq.Arith.EqNat.beq_nat_false	40	0.0.1.2.0.1.1.2.1.0.7	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: easy; only 1: Nat.induct ltac:(m); only 1: easy; only 1: intros m IH H; only 1: auto).	5.34811115265	6153
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	8.0.5	search with cache (only 1: induction n; only 1: firstorder; only 1: firstorder).	2.32115483284	180
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	search with cache (only 1: destr_bool).	0.00605893135071	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	2.0.1.0.3	search with cache (only 1: induction n; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: firstorder).	0.226058959961	122
Coq.Arith.PeanoNat.Nat.pred_succ	40	1	search with cache (only 1: reflexivity).	0.00542712211609	2
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.00482296943665	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.0080041885376	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00839304924011	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00851893424988	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: auto).	0.0102741718292	3
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.0135600566864	6
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.00811696052551	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0118818283081	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.0.0.0.2.0.1.2.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	9.04164385796	7839
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.390237092972	398
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0217020511627	14
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.39419102669	1374
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.0.0.0.0.0.2.0.0.3	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.17728614807	1542
Coq.Arith.PeanoNat.Nat.min_l	40	0.1.0.0.1.0.0.1.6	search with cache (only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.0500600338	2083
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.1.0.0.0.0.0.0.0.0.0.7	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.22937107086	1566
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	29	search with cache (only 1: now nzsimpl).	4.7019238472	2078
Coq.Arith.PeanoNat.Nat.pow_0_r	40	2	search with cache (only 1: now nzsimpl).	0.0114979743958	3
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.0	search with cache (only 1: intro; only 1: auto).	0.00962209701538	2
Coq.Arith.PeanoNat.Nat.square_spec	40	2	search with cache (only 1: reflexivity).	0.012344121933	3
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.0	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0201358795166	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	0.0.1.1.0.0.0.0.0.8.0.1.0.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: simpl; only 1: now nzsimpl; only 1: intros (m, H); only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: simpl in H; only 1: now inversion H).	5.44604897499	6799
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	3.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0365290641785	38
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0211009979248	2
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.2	search with cache (only 1: inversion 1; only 1: now apply pred_0).	0.36270403862	58
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	1.2.1	search with cache (only 1: fix gcd_divide 1; only 1: intros n m; only 1: auto).	0.0185098648071	25
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0084969997406	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	2.26.1	search with cache (only 1: intros x y z; only 1: fix odd_spec 1; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	7.96347212791	12149
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	2	search with cache (only 1: apply le_0_l).	0.00823593139648	3
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0151650905609	7
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	3.6.0.2.0.5	search with cache (only 1: induct n; only 1: intro; only 1: simpl; only 1: now elim H; only 1: fix gcd_divide 1; only 1: apply gcd_divide).	1.36348295212	1782
Coq.Arith.PeanoNat.Nat.div2_decr	40	1.0.3.10	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: intros m IH; only 1: auto).	0.507004022598	534
Coq.Arith.PeanoNat.Nat.double_twice	40	1.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.077996969223	41
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.0.9	search with cache (only 1: fix gcd_greatest 1; only 1: intro n; only 1: easy).	0.107819080353	131
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	1.17	search with cache (only 1: fix even_spec 1; only 1: destr_bool).	23.7297160625	27147
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	1.14.4	search with cache (only 1: intro; only 1: fix le_div2 1; only 1: auto).	5.2910349369	5258
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	3.7.6	search with cache (only 1: intro; only 1: fix gcd_greatest 1; only 1: auto).	3.86546897888	3378
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.010910987854	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	4	search with cache (only 1: trivial).	0.00927686691284	5
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	search with cache (only 1: inversion H).	0.0104179382324	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	1	search with cache (only 1: Nat.order).	0.0209109783173	11
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0095419883728	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0125398635864	1
Coq.Arith.Gt.gt_S	40	1.23.31.4	search with cache (only 1: intros EQ; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.lt_succ_r; only 1: trivial).	7.76704597473	9364
Coq.Arith.Gt.gt_pred	40	0	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.01597905159	1
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00882291793823	1
Coq.Arith.Gt.gt_not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.00889897346497	1
Coq.Arith.Gt.le_S_gt	40	1	search with cache (only 1: apply Nat.le_succ_l).	0.00922393798828	2
Coq.Arith.Gt.gt_S_le	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0147800445557	1
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0145909786224	1
Coq.Arith.Gt.le_gt_S	40	1	search with cache (only 1: apply Nat.lt_succ_r).	0.00950694084167	2
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	10.29	search with cache (only 1: apply Nat.lt_eq_cases; only 1: intuition).	4.75748801231	11420
Coq.Arith.Gt.plus_gt_reg_l	40	1	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0102550983429	2
Coq.Arith.Gt.plus_gt_compat_l	40	1	search with cache (only 1: apply Nat.add_lt_mono_l).	0.012323141098	2
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	2.4.6	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: repeat split).	0.0495159626007	171
Coq.Logic.JMeq.JMeq_trans	40	3.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0234920978546	8
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: assumption).	0.0103621482849	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0106601715088	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0121800899506	3
Coq.Logic.JMeq.JMeq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0123839378357	3
Coq.Logic.JMeq.JMeq_congr	40	0.10.1	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.124648094177	133
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0106558799744	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00979518890381	2
Coq.Logic.JMeq.eq_dep_JMeq	40	3.3.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0333869457245	9
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.3.2.0	search with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: trivial).	0.0336129665375	13
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.11	search with cache (only 1: intros f [x]; only 1: trivial).	0.0347280502319	72
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.00870609283447	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	20.1	search with cache (only 1: intros; only 1: tauto).	0.214917898178	467
Coq.Logic.Classical_Prop.not_imply_elim	40	19.1	search with cache (only 1: intros P H; only 1: tauto).	7.39879107475	7693
Coq.Logic.Classical_Prop.not_imply_elim2	40	2.0.0	search with cache (only 1: unfold not; only 1: intros Ext A a; only 1: auto).	0.0645101070404	35
Coq.Logic.Classical_Prop.imply_to_or	40	2.1.3.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: tauto).	0.512948036194	44
Coq.Logic.Classical_Prop.imply_to_and	40	2.0.0.3.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intro; only 1: tauto).	0.128342151642	49
Coq.Logic.Classical_Prop.or_to_imply	40	7.0	search with cache (only 1: intros; only 1: tauto).	0.406538009644	36
Coq.Logic.Classical_Prop.not_and_or	40	0.0.1.1	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0450429916382	6
Coq.Logic.Classical_Prop.or_not_and	40	7.0	search with cache (only 1: intros; only 1: tauto).	0.108104228973	30
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.0599908828735	1
Coq.Logic.Classical_Prop.and_not_or	40	4.1.0	search with cache (only 1: simple induction 1; only 1: red; only 1: intuition).	0.13471198082	27
Coq.Logic.Classical_Prop.imply_and_or	40	0	search with cache (only 1: tauto).	0.0534658432007	1
Coq.Logic.Classical_Prop.imply_and_or2	40	4.1.0	search with cache (only 1: intro A; only 1: intros; only 1: firstorder).	0.0608808994293	8
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	0.19	search with cache (only 1: intros [Hl Hr]; only 1: auto).	0.178794145584	326
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	1.0.0.0.0.0.0.1.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.14830493927	121
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.0.1.9.1.2.0.0.2.2.0.0	search with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: intro x; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: auto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: intros; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	9.63800597191	15582
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	2.0.0.0.0.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0194470882416	18
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.0.0	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.074874162674	4
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.2.1	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.112817049026	16
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	2.0.0.10.4	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: easy).	0.275809049606	562
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	5.7	search with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.140648841858	100
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	0.6.1.8.11.13.11	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: destruct (H A); only 1: auto; only 1: left; only 1: easy).	24.0535011292	173738
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.2.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0355038642883	7
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	1.0.2.3.2.0.2	search with cache (only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: trivial).	4.58213090897	3277
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	1.0.2.6	search with cache (only 1: destruct 1; only 1: intro K; only 1: apply H; only 1: trivial).	0.582155942917	616
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	8.4	search with cache (only 1: intros P notall; only 1: firstorder).	0.569855928421	559
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0215120315552	14
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	5.1.13.5	search with cache (only 1: intros (l, F); only 1: induction l as [| a l IH]; only 1: auto; only 1: firstorder).	6.32507681847	2579
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.2	search with cache (only 1: destruct 1; only 1: trivial).	0.0101940631866	4
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.3	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0121719837189	6
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0282051563263	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0283770561218	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	1.11.2.13	search with cache (only 1: unfold f_equal; only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: auto).	1.34991598129	3877
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.0255670547485	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	search with cache (only 1: auto).	0.0255761146545	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	3.0.0	search with cache (only 1: intros; only 1: intros p q; only 1: eauto using @functional_extensionality_dep).	0.090558052063	6
Coq.Logic.HLevels.false_hprop	40	3.8	search with cache (only 1: intros p q; only 1: destruct p, q).	0.00910496711731	52
Coq.Logic.HLevels.true_hprop	40
Coq.Logic.HLevels.not_hprop	40	6.0.0.1.2	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality; only 1: intros; only 1: destruct p, q).	0.0461361408234	319
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.4.6	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.0354671478271	58
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.0112431049347	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.9.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.137985944748	52
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.6.0.0.8.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.36824798584	1133
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0115339756012	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0266308784485	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.4.4.0.0.6.0	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.340034008026	855
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.5.0.0.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: reflexivity).	0.0324280261993	25
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.0.3.0.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: destruct H; only 1: reflexivity).	0.0451419353485	42
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	5.2	search with cache (only 1: red; only 1: auto).	0.0315389633179	24
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	1.5	search with cache (only 1: red; only 1: auto).	0.0188491344452	21
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	13.0.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.356369018555	852
Coq.Logic.EqdepFacts.f_eq_dep	40	0.9	search with cache (only 1: destruct 1; only 1: trivial).	0.0255770683289	48
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.6.2	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: trivial).	0.0396499633789	36
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	search with cache (only 1: intros * []; only 1: trivial).	0.0242831707001	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	1.0	search with cache (only 1: intros Ext A B Equiv; only 1: auto).	0.0122809410095	3
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	3	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.714401006699	4
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	1.1.0.0.0.0	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: auto; only 1: intro H1; only 1: elim H1).	0.024384021759	8
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.Decidable.dec_not_not	40	1.0.2.1.5.0.1	search with cache (only 1: intro A; only 1: unfold not; only 1: destruct 1; only 1: auto; only 1: intro H1; only 1: apply False_rec; only 1: auto).	0.444149971008	2424
Coq.Logic.Decidable.dec_True	40
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00369501113892	2
Coq.Logic.Decidable.dec_or	40	5.0.3	search with cache (only 1: unfold decidable, not; only 1: intros; only 1: tauto).	0.0427629947662	108
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0183718204498	2
Coq.Logic.Decidable.dec_not	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00754594802856	3
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0806910991669	2
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0163080692291	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00724792480469	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.0101058483124	1
Coq.Logic.Decidable.not_and	40	3.1.0	search with cache (only 1: unfold decidable; only 1: intros; only 1: tauto).	0.0158250331879	7
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.015300989151	2
Coq.Logic.Decidable.imp_simp	40	0.0.0.0	search with cache (only 1: unfold not; only 1: unfold decidable; only 1: unfold not; only 1: tauto).	0.011020898819	4
Coq.Logic.Decidable.not_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0383858680725	3
Coq.Logic.Decidable.not_true_iff	40	2	search with cache (only 1: tauto).	0.00814604759216	3
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.0067310333252	1
Coq.Logic.Decidable.not_not_iff	40	2.1.2	search with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).	0.0318911075592	48
Coq.Logic.Decidable.contrapositive	40	1.2	search with cache (only 1: unfold decidable; only 1: tauto).	0.0247249603271	13
Coq.Logic.Decidable.or_not_l_iff_1	40	2.4.0	search with cache (only 1: intros A B []; only 1: tauto; only 1: tauto).	0.0174961090088	9
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0168750286102	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0157201290131	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0162110328674	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0172488689423	2
Coq.Logic.Decidable.not_or_iff	40	6.0	search with cache (only 1: intros; only 1: tauto).	0.0138378143311	8
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.0106191635132	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0208020210266	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0214500427246	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0.0.0.3	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0205600261688	8
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0545611381531	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	1.0.0.47	search with cache (only 1: elim H; only 1: auto; only 1: simpl; only 1: auto).	11.4349310398	2583
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.1.0.2	search with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: ok).	0.0474500656128	8
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.920547008514	581
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.018926858902	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	2	search with cache (only 1: exact (rmatch _ _ _)).	0.0393078327179	11
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0322651863098	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.1.1.9.0	search with cache (only 1: induct s x; only 1: eauto with *; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	1.15569996834	299
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	32	search with cache (only 1: exact (rmatch _ _ _)).	1.4141600132	1186
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	1	search with cache (only 1: exact (rmatch _ _ _)).	0.0118999481201	2
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	2.2.3.0.1	search with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.928045988083	135
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	7	search with cache (only 1: firstorder).	0.0148429870605	8
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.0.0.0.5.15	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	1.09530806541	836
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0192830562592	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0170860290527	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	17	search with cache (only 1: simpl_relation).	0.344310045242	283
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	1.3.1.3.2.2.0.11	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	17.1856100559	6610
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.1.1.2	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.139200925827	41
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.0.45.5	search with cache (only 1: invrb; only 1: inversion H; only 1: auto; only 1: auto).	6.8307788372	10919
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0617589950562	12
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	46.1.12	search with cache (only 1: simpl_relation; only 1: unfold singleton; only 1: eauto with *).	2.66746401787	7161
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.4.0.0.0.1.0.8	search with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: descolor; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	1.5592250824	962
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.2.0.8	search with cache (only 1: destruct s; only 1: auto; only 1: descolor; only 1: auto; only 1: auto).	0.605246782303	339
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0.0	search with cache (only 1: invrb; only 1: auto with arith).	0.0459101200104	2
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	1.0.5	search with cache (only 1: red; only 1: simpl; only 1: auto).	0.0253169536591	9
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.0.2.0.3	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.0473208427429	25
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	58.58	search with cache (only 1: unfold filter; only 1: eauto with *).	13.1092920303	30459
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.1.6	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0610690116882	25
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0366930961609	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	2.1.0.0.0.2.3.4	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	2.24579310417	667
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.2.2	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.325132131577	140
Coq.MSets.MSetRBT.BalanceProps.union_rb	40
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.2.3.0.2.12	search with cache (only 1: intros a b; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	2.00376820564	1659
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	1.5.9	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: auto).	3.47973704338	1327
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	2.5	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.44235086441	55
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40	1.4.5.1.0.7	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros R R' EQ a a' Ha WF; only 1: subst; only 1: eauto).	9.35912489891	5476
Coq.MSets.MSetGenTree.Props.In_node_iff	40	10	search with cache (only 1: intuition_in).	1.94291305542	88
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	5	search with cache (only 1: intuition_in).	1.2838242054	23
Coq.MSets.MSetGenTree.Props.lt_leaf	40	2.4.1	search with cache (only 1: intuition; only 1: repeat red; only 1: intuition_in).	0.0560159683228	20
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0367341041565	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	1.24.12.1	search with cache (only 1: intuition_in; only 1: intros a b; only 1: intuition_in; only 1: order).	11.3179769516	10175
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	1.24.13.3	search with cache (only 1: intuition_in; only 1: intros a b; only 1: intuition_in; only 1: order).	17.6590270996	12435
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	1.4.3	search with cache (only 1: intuition_in; only 1: apply (StrictOrder_Irreflexive x); only 1: auto).	0.368837833405	38
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	3.3.1	search with cache (only 1: intros x y; only 1: intros; only 1: eauto).	0.0441229343414	10
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.038801908493	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.033704996109	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.8.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: rewrite <- H; only 1: auto).	3.08820199966	1960
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.5.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.90188908577	276
Coq.MSets.MSetGenTree.Props.empty_spec	40	0.2	search with cache (only 1: intro H; only 1: auto).	0.0446879863739	4
Coq.MSets.MSetGenTree.Props.empty_ok	40	0	search with cache (only 1: auto).	0.0359761714935	1
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	1.1.1.1	search with cache (only 1: fix even_spec 1; only 1: induction s as [| c l IHl y r IHr]; only 1: auto; only 1: auto).	0.899487018585	86
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	1.0.0.0.0.0.0.9	search with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	5.05244588852	2484
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	0.1.5.3.2.19.4	search with cache (only 1: intro H; only 1: destruct H; only 1: simpl; only 1: constructor; only 1: reflexivity; only 1: simpl; only 1: auto).	2.7448720932	4399
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	1	search with cache (only 1: firstorder).	0.019632101059	2
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	6	search with cache (only 1: firstorder).	0.0256478786469	7
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	5	search with cache (only 1: firstorder).	0.0327618122101	23
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	6	search with cache (only 1: solve_proper).	1.39917612076	24
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40	3.0.4	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	1.0969991684	43
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	1	search with cache (only 1: intuition).	0.075012922287	2
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	0.1.0.2.2	search with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	1.18764090538	34
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	0.1	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.081613779068	3
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.7.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	3.05999302864	65
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40	5.4	search with cache (only 1: fix even_spec 1; only 1: auto).	0.796255111694	128
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	0.0.1	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0508680343628	4
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	0.1	search with cache (only 1: intros; only 1: auto).	0.0501620769501	3
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	0	search with cache (only 1: auto).	0.0453329086304	1
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	1.0.0.1.0.1.3	search with cache (only 1: unfold Empty, empty; only 1: destruct s; only 1: intros; only 1: intro; only 1: inv; only 1: intros; only 1: discriminate).	16.2178800106	392
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	0	search with cache (only 1: auto).	0.0423128604889	1
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40	1.4.12	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: auto).	9.05337786674	2166
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	0	search with cache (only 1: auto).	0.0318779945374	1
Coq.MSets.MSetList.MakeRaw.mem_spec	40	1.23	search with cache (only 1: fix even_spec 1; only 1: auto).	10.1826498508	4710
Coq.MSets.MSetList.MakeRaw.add_inf	40	1.0.2.1	search with cache (only 1: fix gcd_greatest 1; only 1: intros [| a] b; only 1: auto; only 1: auto).	0.0755579471588	11
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.0.0.0.0.0.0.2.0.0.0.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	23.9240810871	2258
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	0	search with cache (only 1: auto).	0.0622479915619	1
Coq.MSets.MSetList.MakeRaw.singleton_spec	40
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.1.3	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	1.0045208931	14
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0	search with cache (only 1: auto).	0.0541200637817	1
Coq.MSets.MSetList.MakeRaw.empty_spec	40	24	search with cache (only 1: now try PeanoNat.Nat.order').	0.462291955948	346
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40	8.0	search with cache (only 1: fix even_spec 1; only 1: auto).	0.0693280696869	12
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	0.0.2	search with cache (only 1: split; only 1: auto; only 1: trivial).	0.0497100353241	5
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	0.4.11	search with cache (only 1: intros a Ha; only 1: inv; only 1: auto).	1.08676314354	599
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.2.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0636529922485	5
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40	0.1.4.2.7.0.1.9	search with cache (only 1: induction s; only 1: intros; only 1: discriminate; only 1: intros l; only 1: injection 1; only 1: intros EQ; only 1: subst; only 1: auto).	37.6952269077	16758
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	1.1.0.5.0.9	search with cache (only 1: induction s as [| x s IH]; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: intros; only 1: discriminate).	7.50161099434	3138
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0	search with cache (only 1: reflexivity).	0.0455009937286	1
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: auto).	0.0358729362488	2
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	1.8.6	search with cache (only 1: simpl_relation; only 1: rewrite H; only 1: intuition).	1.51532697678	932
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.00663208961487	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.3.0.0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0431170463562	92
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	2.0.0.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: auto with sets).	0.0149228572845	8
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	1.0.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).	0.0114631652832	6
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40	0.1.0.0.0.5.1.0.0.1.0.0.0.0.0.0.4.0	search with cache (only 1: split; only 1: induction 1; only 1: right with x; only 1: auto; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	30.7409498692	98361
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.0.0.0.0.1.1.0.0.1.0.1.0	search with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	2.08740496635	6058
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	0.3.0.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto with sets; only 1: auto).	0.0113909244537	14
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	1.1.0.0.5.0.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: auto with sets).	1.32009410858	3717
Coq.Relations.Operators_Properties.clos_rstn1_trans	40	4.0.2.0.0.5.7.0.5.3	search with cache (only 1: intros x y H; only 1: destruct 1; only 1: auto; only 1: induction 1; only 1: right with y; only 1: eauto; only 1: auto; only 1: right with y0; only 1: eauto; only 1: auto).	18.7080221176	60409
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	0.3.7.2.3.0.3.6.5	search with cache (only 1: destruct 1; only 1: split; only 1: intro H1; only 1: auto; only 1: intro H1; only 1: intros x y H; only 1: eauto; only 1: intro H1; only 1: auto).	5.33767008781	21617
Coq.Relations.Relations.inverse_image_of_eq	40	0.2.0.2.2.0.2.2.0	search with cache (only 1: intros; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: induction 1; only 1: auto; only 1: red; only 1: auto).	0.165266036987	798
Coq.Sets.Uniset.leb_refl	40	2	search with cache (only 1: destr_bool).	0.016478061676	11
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0200209617615	5
Coq.Sets.Uniset.seq_refl	40	1.3	search with cache (only 1: destr_bool; only 1: auto).	0.0225179195404	6
Coq.Sets.Uniset.seq_trans	40
Coq.Sets.Uniset.seq_sym	40	0.2.1	search with cache (only 1: unfold seq; only 1: destruct y; only 1: auto).	0.0125541687012	6
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0112760066986	3
Coq.Sets.Uniset.union_empty_right	40	4.3.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destr_bool; only 1: intuition).	0.137789011002	141
Coq.Sets.Uniset.union_comm	40	7.2.0.2.0	search with cache (only 1: destruct x; only 1: destruct y; only 1: unfold seq; only 1: destr_bool; only 1: intuition).	0.859070062637	1670
Coq.Sets.Uniset.union_ass	40	2.1.0.1.0.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: unfold charac; only 1: destruct y; only 1: unfold union; only 1: simpl; only 1: auto with bool).	0.345444917679	300
Coq.Sets.Uniset.seq_left	40	0.0.0.0.1.1.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.0197629928589	10
Coq.Sets.Uniset.seq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0496129989624	10
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	0.253515005112	192
Coq.Sets.Multiset.meq_refl	40	6	search with cache (only 1: split).	0.152240037918	22
Coq.Sets.Multiset.meq_trans	40
Coq.Sets.Multiset.meq_sym	40	0.0.3.1.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: intros; only 1: rewrite H; only 1: auto).	0.0178170204163	9
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0136168003082	3
Coq.Sets.Multiset.munion_empty_right	40	2.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0151600837708	6
Coq.Sets.Multiset.munion_comm	40	4.3.4.1.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: intros; only 1: destruct x; only 1: firstorder).	5.42435693741	2450
Coq.Sets.Multiset.munion_ass	40	4.1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto with arith).	0.040146112442	23
Coq.Sets.Multiset.meq_left	40
Coq.Sets.Multiset.meq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.271032094955	10
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	1.3.4.4.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: intros; only 1: auto with arith).	8.46002101898	4016
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	1.96372318268	187
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	2	search with cache (only 1: auto with sets).	0.0497410297394	3
Coq.Sets.Integers.le_antisym	40	0.0	search with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.0325710773468	2
Coq.Sets.Integers.le_trans	40	3.3.0	search with cache (only 1: red; only 1: firstorder; only 1: PeanoNat.Nat.order).	0.0828778743744	30
Coq.Sets.Integers.le_Order	40	0.0.0.1.0.0.0.1.0.3	search with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).	1.04993486404	550
Coq.Sets.Integers.triv_nat	40	9.2	search with cache (only 1: intros; only 1: split).	0.195561170578	124
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40	9.6.8.1.0.4.32	search with cache (only 1: repeat split; only 1: intro H'0; only 1: intros n m; only 1: intros EQ; only 1: destruct (lt_eq_lt_dec n m); only 1: intuition PeanoNat.Nat.order; only 1: intuition PeanoNat.Nat.order).	30.8017230034	30758
Coq.Sets.Integers.Finite_subset_has_lub	40	0.30.18	search with cache (only 1: intros EQ; only 1: fix even_spec 1; only 1: auto with sets).	18.190376997	38000
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40	1.27.3	search with cache (only 1: red; only 1: fix even_spec 1; only 1: auto).	2.65988898277	2681
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.4.0.11.18	search with cache (only 1: intros H ?; only 1: intros Hfst Hsnd; only 1: intros; only 1: red; only 1: auto).	0.593918085098	4610
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	3.0.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: auto  10 with sets).	0.0858759880066	52
Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.3.4.0.1	search with cache (only 1: split; only 1: intros H'5 H'6; only 1: auto  10 with sets; only 1: intro H'1; only 1: auto  10 with sets).	0.0492188930511	194
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	1.1.4.12.2.6.0.2	search with cache (only 1: split; only 1: auto  10 with sets; only 1: intros ? ? ? [? ?] [? ?]; only 1: auto  10 with sets; only 1: intro H'1; only 1: intro A; only 1: intros [? ?]; only 1: auto  10 with sets).	3.93631100655	10080
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.2.0.12	search with cache (only 1: intros Hfst Hsnd; only 1: unfold same_relation at 1; only 1: destruct 1; only 1: auto  10 with sets).	0.149994850159	294
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0215110778809	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0167541503906	2
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1.0.1	search with cache (only 1: compute; only 1: intros; only 1: left).	0.0097861289978	5
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto with sets).	0.00917792320251	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	3.1.2.0.1.0.8.0.6	search with cache (only 1: intros Hfst Hsnd; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto  10 with sets; only 1: auto  10 with sets).	7.11953902245	31218
Coq.Sets.Relations_2_facts.Rstar_transitive	40	1.0.0.8.0.0.3.0.6.0.1	search with cache (only 1: intros U R; only 1: red; only 1: intro T; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: intro h; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	8.04366493225	41395
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.2.1.0.1.0.0.0	search with cache (only 1: intuition; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	1.04320883751	2205
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.0.2.0.0.1	search with cache (only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	0.0540068149567	87
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	1.3.1	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0341811180115	8
Coq.Sets.Permut.comm_left	40	1.8.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0495309829712	53
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	1.0.0.14.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: apply op_comm).	0.27007484436	987
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.0.14.33	search with cache (only 1: intros A *; only 1: exists x; only 1: auto with sets; only 1: auto with sets).	11.1718420982	27920
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	2.22.1.7.10.2.8	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H; only 1: auto with sets).	11.867415905	12777
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	9.1.5	search with cache (only 1: intros A x y H'; only 1: elim H'; only 1: firstorder).	1.36289691925	1065
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	6.1	search with cache (only 1: red; only 1: destruct 1).	0.0167460441589	24
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40	1.0.0.1.0.0.5.0.0.18	search with cache (only 1: split; only 1: red; only 1: intros x H'; only 1: auto; only 1: red; only 1: intro X; only 1: auto with sets; only 1: red; only 1: intro X; only 1: auto with sets).	0.74860906601	2309
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.0230498313904	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	1	search with cache (only 1: auto with sets).	0.0129630565643	2
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40	0.10.0.0.1.0.2.8	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: red; only 1: split; only 1: intuition; only 1: red; only 1: intro H'6; only 1: subst; only 1: auto with sets).	23.4051408768	37589
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40	2.2.0.1.1.0.0.3	search with cache (only 1: intros; only 1: red; only 1: intros x H'; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	12.0298509598	6193
Coq.Sets.Powerset.Intersection_maximal	40	2.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0130598545074	6
Coq.Sets.Powerset.Union_increases_l	40	0.0.0.0	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: auto with sets).	0.0119738578796	4
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00937986373901	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.0.1.1	search with cache (only 1: intros H'0 H'1; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0215580463409	7
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0123372077942	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	0.2.5	search with cache (only 1: intros A NI; only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).	0.565898895264	39
Coq.Sets.Classical_sets.Subtract_inv	40	3.7.16	search with cache (only 1: intros x H'0; only 1: intros * []; only 1: auto with sets).	3.02036809921	5283
Coq.Sets.Classical_sets.Included_Strict_Included	40	0.28.6	search with cache (only 1: intros n m; only 1: compute; only 1: tauto).	7.3845179081	4323
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.0.0.0.0.0.0	search with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: elim H'1; only 1: auto with sets).	0.0585749149323	7
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.4.1.2.0.1.3	search with cache (only 1: intros a b; only 1: intro; only 1: red; only 1: intros x H'; only 1: red; only 1: elim H'; only 1: auto with sets).	3.54261612892	1568
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	9.0	search with cache (only 1: intros A B x H'; only 1: firstorder).	1.51315498352	224
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.0.1.0.0.2.0.1.2.0	search with cache (only 1: intros X x H'; only 1: unfold Add; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	3.58803701401	2578
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.014634847641	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	4.20	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.653532981873	761
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0287959575653	1
Coq.Sets.Powerset_facts.Union_commutative	40	1	search with cache (only 1: auto with sets).	0.0330309867859	2
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0147609710693	1
Coq.Sets.Powerset_facts.Union_absorbs	40	1	search with cache (only 1: auto  9 with sets).	0.0236868858337	2
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.1.0.0.0.1.0.0.0.0.2	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.633546113968	943
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	33.498156786	28978
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.1.2.1.0.1.2.1.1.1.12	search with cache (only 1: intros Hfst Hsnd; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	2.24971008301	3113
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.1.0.0.0.0.0.0.0.0.2.3.0.0.0.0.0.1	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	10.7612259388	11254
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	12.0.0.0	search with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.806280136108	498
Coq.Sets.Powerset_facts.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.1.6.1.0	search with cache (only 1: intros x y H'; only 1: induction H'; only 1: elim H; only 1: apply Singleton_inv; only 1: assumption).	0.371834039688	388
Coq.Sets.Powerset_facts.incl_add	40	0.7	search with cache (only 1: unfold Add; only 1: auto with sets).	0.167596101761	36
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	4.10	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	1.07151985168	916
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40	7.1.0.1.6.0.4	search with cache (only 1: intros x y z H' H'0; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: split; only 1: auto with sets; only 1: generalize H'0; only 1: auto  7 with sets).	14.6051950455	12109
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.0102159976959	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.0.1	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: auto with sets).	0.0210011005402	24
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0147709846497	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.0.9.5.1.2.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	1.0601041317	1503
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0207538604736	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.1.1.1.2.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: intuition; only 1: destruct H1; only 1: intuition; only 1: intuition).	0.45860004425	352
Coq.Sets.Constructive_sets.Extension	40	0.7.0.7.18.2	search with cache (only 1: destruct 1; only 1: split; only 1: intro H; only 1: auto; only 1: intro H; only 1: auto).	0.643177032471	3496
Coq.Sets.Constructive_sets.Noone_in_empty	40	14	search with cache (only 1: destruct 1).	0.0918920040131	249
Coq.Sets.Constructive_sets.Included_Empty	40	0	search with cache (only 1: destruct 1).	0.0136830806732	1
Coq.Sets.Constructive_sets.Add_intro1	40	0.6.4	search with cache (only 1: intros x H; only 1: left; only 1: trivial).	0.417112112045	1290
Coq.Sets.Constructive_sets.Add_intro2	40	2.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0265419483185	19
Coq.Sets.Constructive_sets.Inhabited_add	40	2.13.0.2.1	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	0.918231010437	4670
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	0.1.0	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: trivial).	0.013286113739	4
Coq.Sets.Constructive_sets.Singleton_intro	40	2.1.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto with sets).	0.0152831077576	15
Coq.Sets.Constructive_sets.Union_inv	40	0.0.15	search with cache (only 1: destruct 1; only 1: auto using Add_intro2 with sets; only 1: auto using Add_intro2 with sets).	0.273013114929	438
Coq.Sets.Constructive_sets.Add_inv	40	1.4.0.0.3.2	search with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).	0.678625822067	1237
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0166120529175	3
Coq.Sets.Constructive_sets.Couple_inv	40	0.1.0.12.0.5	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	1.99212312698	6969
Coq.Sets.Constructive_sets.Setminus_intro	40	1.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0116338729858	3
Coq.Sets.Constructive_sets.Strict_Included_intro	40	2.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.0106298923492	4
Coq.Sets.Constructive_sets.Strict_Included_strict	40	2.4.2	search with cache (only 1: intros X H'; only 1: elim H'; only 1: auto with sets).	0.0320529937744	94
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	0.12.5	search with cache (only 1: intro; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	1.73081684113	1554
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40	7.6.0.9.0	search with cache (only 1: induction 1; only 1: induction 1; only 1: red; only 1: now elim H; only 1: intuition).	9.45616579056	13595
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40	0.6.5.6.9	search with cache (only 1: intros A a H' x H'0 H'1; only 1: elim H'; only 1: intuition; only 1: fix le_div2 1; only 1: auto with sets).	16.3291950226	19416
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	0.0.6.0	search with cache (only 1: intros B C H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.0224120616913	10