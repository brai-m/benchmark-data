coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg	40	2.990892	1718	201	1.17.2	synth with cache (only 1: intros H; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.033376	7	3	0.4.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	1.622017	355	180	0.0.0.1.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.shift_value	40	0.057994	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.sum_N_predN	40	0.576331	104	61	0.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.sum_plus	40	0.150164	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Req_dec	40	0.226012	49	32	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmax_l	40	0.032053	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus	40	6.128818	2904	404	3.0.14.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmax_r	40	0.031333	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.100535	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmin_l	40	0.032524	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.Rmin_r	40	0.032298	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsrt	40	0.008926	1	1	0	synth with cache (only 1: exact RTheory).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	40	1.362076	492	53	13.3	synth with cache (only 1: intros H1 H2; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_1	40	0.013801	2	2	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	40	11.103702	5754	1054	0.2.2.19.0	synth with cache (only 1: intros n1 H'; only 1: unfold Rgt; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	7.367877	1872	348	2.6.0.6.0	synth with cache (only 1: intro; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: apply Rinv_0_lt_compat; only 1: apply INR_fact_lt_0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.eps2	40	0.580142	155	42	0.0.0.0.8	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.P_Rmin	40	0.495165	177	48	2.3.0.1	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	2.049138	427	177	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.eps4	40	9.181620	3315	399	23.6	synth with cache (only 1: intros n; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.024702	2	2	0.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.150549	73	16	0.0.5.3	synth with cache (only 1: intros; only 1: unfold IZR, IPR; only 1: simpl; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.IZN_var	40	0.748689	381	76	0.1.0.8	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.tech_up	40	40.095826	33273	3483
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.107569	38604	4426
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_case	40	40.102518	32643	3841
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.107779	39484	3767
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	40	40.194197	18376	2268
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.014144	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	40	2.409703	4962	308	0.31.8	synth with cache (only 1: intros; only 1: exists n; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40	40.056811	17298	4711
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	40	3.617399	2425	565	3.0.0.0.0.4.6.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: unfold Rle; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C1	40	40.132212	51809	4882
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	40.051105	12925	4723
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	40	40.050788	16123	2441
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.cos_plus_form	40	40.049238	14248	2453
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.065650	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.074467	5	4	0.1.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.cont_deriv	40	40.082142	29373	4251
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rcomplete.R_complete	40	40.097016	31431	5136
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech1	40	40.084523	29088	3858
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	40	40.058588	20145	3591
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rsth	40	0.073834	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.frexp_spec	40	40.180374	79502	1724
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	40	40.083964	13049	4380
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_split	40	40.056734	20966	2645
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	40	40.101803	39052	3249
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.056583	20836	1777
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.038619	8795	1802
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.051374	12849	3988
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rsth	40	0.074093	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.081283	26656	4208
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT	40	40.090499	35612	3627
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P1	40	40.105415	22941	5222
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.051202	7795	1875
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_comp	40	40.049240	14109	3761
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.in_holed_interval_dec	40	40.089084	32871	4303
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsor	40	40.100697	32949	3753
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_cv	40	40.117585	40373	5291
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	40	40.079475	6850	1490
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	40	0.064100	25	10	4.2	synth with cache (only 1: intros a Ha; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal_step1	40	40.074646	11075	1613
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step0	40	40.102322	12070	1514
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.Boule_convex	40	40.074669	24954	4392
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.prod_SO_split	40	40.084757	9238	1805
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.formule	40	40.030604	5893	1234
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_exp	40	40.053749	10160	3356
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P1	40	40.124136	43650	3942
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P2	40	0.041023	8	3	3.2.0	synth with cache (only 1: unfold interior; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rinv_1	40	3.797787	1652	265	1.2.15.0	synth with cache (only 1: intro; only 1: elim archimed with x; only 1: intros H1 _; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.061445	14044	3487
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_refl	40	40.045236	9292	3021
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.continuity_sin	40	40.047883	16087	4023
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.E1_cvg	40	40.041646	12994	4036
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.pow_i	40	5.749631	3169	336	2.0.0.1.2.13.6	synth with cache (only 1: intro; only 1: intros [| n]; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_0_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.CVN_R_cos	40	40.133074	50141	3272
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_le_3	40	40.062591	18203	4100
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.043728	10513	2420
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin2_bound	40	40.048464	12971	3187
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_inv	40	40.081543	26326	3066
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.pr_nu_var	40	0.080262	20	8	0.0.0.1	synth with cache (only 1: unfold derivable_pt; only 1: intros f x1 x2 H1 H2 Heq; only 1: subst; only 1: apply pr_nu).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis_reg.AppVar	40	40.051609	15506	4175
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.prop_eps	40	40.047090	13198	3152
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.154060	68547	3908
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.up_tech	40	40.059767	22048	2064
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.phi_sequence_prop	40	40.039620	11441	3152
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.IZR_nz	40	0.030280	2	1	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_refl	40	0.251628	205	37	4.7	synth with cache (only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_refl	40	0.011526	3	3	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40	40.050919	18286	2312
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.018412	2	2	0.0	synth with cache (only 1: intros; only 1: apply derivable_pt_id).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.036133	8652	3488
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.atan_sub_correct	40	40.029977	9775	1502
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_div	40	29.258825	5330	984	0.0.22.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_minusni_n	40	40.084499	30596	3318
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.Rlt_R0_R2	40	0.040754	8	7	0.0.0.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.IZR_eq	40	0.056056	12	4	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.260866	79	27	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.133032	24747	3140
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_O	40	0.013584	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1	40	0.027020	6	4	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_add	40	0.057446	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.091706	31160	4915
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.FTCN_step1	40	40.085988	34486	2713
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	40	1.025021	449	89	0.8.4	synth with cache (only 1: intro; only 1: intros z; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.024540	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.FTC_Newton	40	0.490708	163	32	10.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.068411	21196	5645
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40	40.079063	21584	5514
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C2	40	40.037883	10416	3799
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech2	40	40.037149	9600	2009
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.pow_sqr	40	40.057884	18197	2476
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dconst	40	40.063745	21216	4001
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	40	40.080226	14571	3981
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rri	40	40.062046	22391	2486
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.254174	23315	1870
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	40	40.053309	11637	3946
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.090501	11	11	0.1.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	4.669992	5033	770	0.2.0.0.0.18	synth with cache (only 1: intuition; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intro; only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.059589	20097	3658
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Rcompare_spec	40	40.099269	36205	3797
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rri	40	40.060721	21402	2471
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.R_one_zero	40	0.015833	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste1_maj	40	40.056487	17207	2870
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.081909	14198	3783
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MinRlist_P1	40	40.064801	14555	4656
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	40	40.044283	10057	1596
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor1	40	40.088743	37265	3608
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	40	40.049855	16161	3767
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.087210	30483	5249
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_growing	40	40.056424	19523	1614
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_pt_div	40	40.064468	20806	4770
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal_step2	40	40.035324	8054	2027
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step1	40	40.057272	16955	2006
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.077019	27058	3747
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.prod_SO_pos	40	40.060784	16738	3598
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term1	40	40.048211	12548	3324
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	5.852517	8934	829	0.0.22.0.0.0.12.10.53	synth with cache (only 1: constructor; only 1: intros H; only 1: intros Eq0; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: intro abs; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P1	40	40.107021	36908	4106
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qeq_true	40	40.064020	21714	2014
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.included_trans	40	0.249692	99	27	0.8.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.059749	16712	3350
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	1.845337	617	160	0.10.2	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.137626	19	9	3.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_symm	40	40.075165	21477	2935
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_form	40	40.052638	18051	2642
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_exp0	40	40.078781	28113	4711
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	40	40.029030	8389	2546
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	40	9.855150	2670	455	0.0.0.0.19	synth with cache (only 1: intros a m H; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_double	40	0.018593	2	2	0.0	synth with cache (only 1: intros a; only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.035138	8	5	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.018745	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.opp_max_distr	40	0.030887	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.opp_min_distr	40	0.034298	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rcri	40	14.336410	4416	394	5.14.6.35	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.R_one_zero	40	0.013815	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_2PI	40	40.071867	18532	2639
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_increasing	40	40.051130	14824	3271
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.continuity_cos	40	40.038569	10655	3005
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos2_bound	40	40.073415	11569	3041
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.pr_nu_var2	40	40.062089	19554	2753
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.130612	9446	2316
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P1	40	40.039124	10880	3514
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P1	40	40.131618	16314	2174
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_R0	40	40.252621	62905	1263
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.eqR_Qeq	40	40.069174	16089	2154
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_irrefl	40	40.179656	81288	4075
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_irrefl	40	0.015370	4	4	0.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40	40.099164	32706	5965
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.039449	13001	2794
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_lt	40	40.065359	24916	3157
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.tech	40	40.028542	7723	2333
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.lt_minus_O_lt	40	40.067016	22768	3150
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	40	40.101367	20464	3816
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.065520	21915	2738
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incr_0	40	40.066222	17453	6382
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.063171	19092	2163
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.063482	20464	5024
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.A1_cvg	40	40.055641	16377	4566
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.AlembertC3_step1	40	40.090843	32574	4316
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech3	40	40.058566	15725	2221
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx	40	40.066986	22013	4336
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.061363	22231	4376
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	40	40.098154	30638	6767
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40	40.072457	25574	4206
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rcri	40	40.040013	9146	1008
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_sqrt	40	40.067629	20413	2325
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P1	40	40.076441	24624	3934
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor2	40	40.048397	15909	4601
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	40	40.051699	16545	3634
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste2_maj	40	40.125769	14917	3370
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.062150	20832	3294
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_cv	40	40.166764	63742	5937
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.099870	38077	5629
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RisLinearOrder	40	40.124135	24382	270
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal_step3	40	40.035780	7723	1912
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.048570	13005	2245
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_eq	40	18.225358	15912	2229	0.0.0.14.11.3	synth with cache (only 1: intros r H; only 1: red; only 1: firstorder  (subst; auto); only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.079818	29025	4129
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.prod_SO_Rle	40	40.060738	18152	2640
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.046886	12733	2574
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qeq_false	40	40.034751	8271	1242
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P3	40	40.098462	22749	4044
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_not_eq	40	2.390422	1261	346	11.0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: rewrite H0; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro	40	40.046764	11045	3030
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.law_cosines	40	40.061215	12400	1813
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.103839	28409	3061
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_not_R0	40	40.071213	27552	2800
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	40	40.039481	9721	1667
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40	40.049589	16479	3552
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rdi	40	40.060297	19094	2041
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_cos_PI4	40	40.086340	27413	2727
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_lt_inv	40	40.043289	11133	4115
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40	40.086381	17272	3181
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_sin	40	40.035838	9728	2665
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_inv	40	40.068419	22361	3697
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_gt	40	40.065258	17705	4353
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P2	40	40.061099	22048	3190
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.RTheory	40	40.086359	31568	3287
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.for_base_fp	40	40.080650	23409	4985
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P2	40	40.033066	9890	2586
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qeq_eqR	40	40.050968	15069	1635
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.071671	21215	2446
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.083672	31014	2399
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.059645	22527	2382
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.total_order_T	40	40.074784	26405	3228
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Un_cv_ext	40	40.043058	14562	2754
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3	40	40.035050	9891	2513
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.even_odd_cor	40	40.078116	29111	2593
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_double	40	0.012972	2	2	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.166630	67415	3615
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.035065	7563	1277
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.101872	32207	3757
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	40	40.062658	15020	5356
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.044078	15471	1709
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.081851	29202	4706
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.C1_cvg	40	40.049277	13464	5097
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.AlembertC3_step2	40	40.076858	26024	4544
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech4	40	40.055971	14583	4486
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dadd	40	40.053012	15666	3848
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech5	40	0.033466	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_last	40	40.029972	7314	5003
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_l	40	40.067780	16957	4957
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_r	40	0.436799	108	53	4.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.066172	16	8	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_right	40	0.027616	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incr_1	40	6.599413	2219	932	3.1.2.3	synth with cache (only 1: intros x y; only 1: unfold Rsqr; only 1: intros a b; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	1.122927	1049	145	8.0.0.0.5	synth with cache (only 1: intros H1; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40	40.062624	22069	3463
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rdi	40	40.044880	11326	1969
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_0	40	40.107620	37321	4184
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MinRlist_P2	40	40.087826	27603	5321
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor3	40	40.031507	7875	4281
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40	40.047825	13899	4062
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.099844	37901	3476
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.149515	58562	5287
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derive_pt_div	40	40.049010	15308	3677
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RdisjunctEpsilon	40	40.122055	47798	3408
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste1_cv_R0	40	40.032264	7638	3746
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal	40	40.044972	10852	2399
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step3	40	40.051392	11575	3265
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.Ball_in_inter	40	40.060701	19452	4098
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.fact_prodSO	40	40.059681	19049	1097
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.le_n_2n	40	0.042361	10	4	0.4.0	synth with cache (only 1: simpl; only 1: intros; only 1: trivial using Nat.le_add_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term3	40	40.043111	9955	2480
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qle_true	40	40.076738	27814	2094
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	40	40.080191	29977	5942
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.complementary_P1	40	40.110249	28249	3207
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.052483	14720	3293
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.triangle	40	40.045857	12114	4581
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.translation_0	40	0.103176	29	10	1.3.0.1	synth with cache (only 1: intros; only 1: split; only 1: auto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.061343	18753	3869
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.Reste_E_maj	40	40.032173	8709	3398
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.046604	13310	2090
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40	40.016969	3765	2425
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40	40.052736	11937	2729
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ineq1	40	40.030116	7485	2791
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_sin_opp	40	40.036837	10328	2466
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_2_aux	40	40.095665	35870	2858
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_inv	40	40.036852	10172	2640
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_gt_f	40	40.055990	13656	4021
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P2	40	15.198252	8265	1443	1.0.2.0.2.1.0.1.2.0.1.2.6.0	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: set (k0 := match Rcase_abs y with | left _ => (1 - up (x / - y))%Z | right _ => (up (x / y) - 1)%Z end); only 1: exists (x - IZR k0 * y); only 1: elim H; only 1: elim H; only 1: simpl; only 1: intros; only 1: exists a; only 1: auto; only 1: simpl; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P3	40	40.049566	16508	3003
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rfield	40	40.315520	18019	3611
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_fp	40	40.070083	19023	5917
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	40	10.230857	3292	730	1.0.5.1.8	synth with cache (only 1: intros n m H; only 1: apply min_max_antimonotone; only 1: unfold Rminus, Rdiv; only 1: do 3 red; only 1: auto using Rnot_lt_le with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.022147	5946	2069
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Rle_Qle	40	40.060266	18073	2432
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.054860	15982	1493
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.sig_not_dec	40	40.052813	18160	2119
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.036035	12310	2498
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.Req_appart_dec	40	40.107471	40607	2677
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_first_term_bound	40	40.043972	14296	2677
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.044392	13715	1812
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.euclidian_division	40	40.113554	40444	4969
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_0	40	26.200801	23793	2652	0.0.0.0.1.0.3.0.30.8	synth with cache (only 1: generalize (Rlt_irrefl 0); only 1: unfold IZR; only 1: rewrite R0_def; only 1: unfold Qinv, Q2R, Qeq; only 1: intros; only 1: simpl in *; only 1: rewrite Rmult_0_l; only 1: unfold IZR; only 1: rewrite R0_def; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_RN_plus	40	40.045434	11878	2495
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40	40.173235	62272	2714
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.tech8	40	0.023663	7	2	5.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P3	40	40.028151	7450	2893
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	40	40.130911	52096	5313
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	40	40.080497	27488	4739
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_rel.B1_cvg	40	40.092057	15109	4443
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C3	40	40.028601	6565	2936
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_proper	40	40.052532	12690	1686
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech6	40	40.054797	14465	3776
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dmult	40	40.050074	14721	3825
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	40	40.084957	9720	2106
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.032172	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.070163	17007	6361
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40	40.062084	21169	3868
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	6.940994	3295	396	0.9.7.2.5	synth with cache (only 1: intros r1 r2; only 1: intros x; only 1: intros (?, ?); only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_1	40	40.080684	21486	4516
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qri	40	40.083616	26378	1992
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Q_one_zero	40	0.018432	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.Rolle	40	40.053243	18499	4035
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.052335	15624	4693
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	40	40.166366	67934	3341
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.129055	49104	4097
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Req_constr_refl	40	40.164853	67870	3841
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste2_cv_R0	40	40.030137	6793	3665
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.binomial	40	40.051798	13354	1997
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step4	40	40.068318	20219	3380
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.Boule_center	40	40.072084	24765	4190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.036828	8383	1396
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term4	40	40.042841	8141	2910
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.639458	120	52	0.0.1.0.0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_dec	40	40.112265	44939	6169
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P2	40	40.132358	35323	3600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.split_couple_eq	40	6.146876	3216	675	19.0	synth with cache (only 1: intros; only 1: now injection H as [=->]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_translation	40	40.061653	21192	2793
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sinh_0	40	40.101039	39022	2716
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	40	40.027393	7314	3476
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40	40.032580	9831	3331
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	40.082113	11171	2523
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.050255	6	5	0.1.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.037181	3	2	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exists1	40	40.064886	21755	3503
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_sin_Rabs	40	40.033247	7717	3297
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rabs_derive_1	40	40.033623	8002	2711
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_pi2	40	40.050153	10957	2922
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit	40	40.057831	17120	1931
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P2	40	40.065443	20294	4372
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P4	40	40.118402	41013	2733
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.pos_Rl_P1	40	1.105389	251	99	2.1.4.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	40	40.131970	58449	2620
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_Int_part	40	40.051106	15826	2655
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	40	40.077017	11284	1827
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_exists	40	40.051566	17783	2855
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qle_Rle	40	40.133581	17867	2116
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.045441	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.061978	10	2	4	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.263882	19080	2132
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_ss	40	24.771669	21405	2897	30.1.5	synth with cache (only 1: intros x n; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim0	40	40.050478	14145	2724
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	40	40.059604	5798	376
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_CVU	40	40.047097	7472	3100
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3_7	40	40.040999	11576	2074
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_1	40	40.093204	32808	2852
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt	40	40.074685	19881	5584
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40	40.055066	14947	4150
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Req_constr_leibniz	40	30.543581	12349	2129	7.0.7.0.8.0	synth with cache (only 1: intros; only 1: destruct (total_order_T x y); only 1: destruct s; only 1: now elim H; only 1: exact e; only 1: now elim H).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.101452	40301	3852
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.105976	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.086409	30335	3582
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_const	40	40.090735	32702	4590
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.psos_r1b	40	40.028737	8516	1293
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C4	40	40.034616	8341	3517
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.psos_r1	40	0.844265	49	21	1.0.0.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_morph	40	40.210104	12151	1342
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech7	40	40.028891	5856	1377
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dmult_const	40	40.045361	12272	3988
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_comm	40	40.066558	18334	1438
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.078557	21325	6074
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	40.041432	12691	3235
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P5	40	40.066307	19685	2849
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_eq_0	40	40.071150	16089	1714
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qcri	40	40.023427	6439	521
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonneg_derivative_1	40	40.061163	20359	4370
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	40	40.047507	14011	3725
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.reste_cv_R0	40	40.032620	7060	3638
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT	40	40.059804	16661	3544
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_CVU	40	40.065576	23749	3466
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.C_maj	40	40.033458	6402	1187
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rtotal_order	40	40.085358	31729	4073
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P3	40	40.063206	14630	4444
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdichotomy	40	0.074801	36	13	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Qri	40	40.035117	8772	640
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le	40	0.041402	21	9	0.0.1.1.0	synth with cache (only 1: red; only 1: left; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.D_x_no_cond	40	40.130928	12817	1554
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge	40	0.935585	413	132	0.0.0.10	synth with cache (only 1: unfold Rgt; only 1: red; only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_two_in_interval_works	40	40.092642	33073	3494
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_0	40	40.058570	19670	2800
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	40	40.061265	17683	2673
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_ge	40	3.527247	1690	393	8.4.4	synth with cache (only 1: intros x y H; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_le	40	0.023072	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_gt	40	0.007685	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_lt	40	0.004177	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.Reste_E_cv	40	40.024142	6672	3075
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40	40.024624	6778	3027
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI6	40	40.071476	12375	3212
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exists	40	40.026270	5504	3304
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_cos	40	40.036167	9707	3018
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rabs_derive_2	40	40.031830	7688	2765
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.pi2_int	40	40.042815	11392	3070
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.043394	9934	2275
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P5	40	40.088382	33894	3816
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CauchyAbsStable	40	40.109643	39231	3560
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.pos_Rl_P2	40	40.092907	31526	4465
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rlt_0_2	40	40.118731	49145	3361
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt_r	40	40.064106	19964	2487
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.073936	25840	2689
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.036139	10548	2889
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rdefinitions.up	40	31.944640	72564	1539	192	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RinvN_pos	40	0.014259	4	1	3	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Rlt_Qlt	40	40.092993	32325	2563
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.024442	7233	872
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Qcri	40	17.200713	2273	348	1.0.1.5.2.11	synth with cache (only 1: intro EQ; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.014307	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_opp	40	40.068925	24439	1703
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.min_ss	40	40.114663	42619	4798
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim1	40	40.055286	19174	3119
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morph_Proper	40	7.843200	2468	885	0.0.0.4.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: split; only 1: apply CRmult_morph; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity; only 1: apply CRmult_morph; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_nat	40	8.307780	12219	1314	11.5.21	synth with cache (only 1: intro Dec; only 1: unfold IZR, IPR; only 1: intuition eauto  4 with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morphT	40	0.352170	33	18	1.4.0	synth with cache (only 1: intros R x y exy z t ezt; only 1: rewrite exy, ezt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.036011	10043	2943
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.PI_2_3_7_ineq	40	40.052455	18159	3071
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_inv_ext	40	40.075001	26340	2094
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	40	40.081729	22936	5488
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.134184	54017	2625
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_zero_quot	40	40.120373	46469	1662
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.074841	26279	3441
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0.006868	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.cauchy_bound	40	40.107569	38235	6082
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.088429	19	7	0.3.0	synth with cache (only 1: intros; only 1: unfold create; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0.008467	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.062872	19354	4896
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.nsatzR_diff	40	40.104114	2986	783
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Rfloor	40	40.061966	23794	1039
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.P0Z_correct	40	0.229983	30	9	7.0	synth with cache (only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech11	40	40.049042	15127	2467
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C5	40	40.039499	6559	3142
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech12	40	0.031503	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dopp	40	40.061404	19409	3942
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.067565	20236	4277
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.061653	14341	5636
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40	40.052086	16401	4066
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lem_0	40	40.042111	10562	2891
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	0.889730	256	116	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.037629	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros H'; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.036188	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: auto; only 1: intros Eq0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qdi	40	40.041937	9728	910
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Z_one_zero	40	0.045883	4	2	0.2	synth with cache (only 1: intro EQ; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Zcri	40	0.025631	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40	40.046421	9934	311
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.038656	12679	2488
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_0	40	40.054125	16541	4442
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_min	40	40.076646	26811	4340
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.cos_plus	40	40.049423	10941	2773
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series	40	40.067623	18764	3694
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_continuity	40	40.054793	12456	3752
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_ge_one	40	40.057803	13611	4134
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P1	40	40.101185	19818	3635
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.Rabs_4	40	40.057791	15696	2609
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences	40	40.138408	52055	4559
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.048237	13012	4225
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_lt	40	40.060933	20525	2302
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.archimed_cor1	40	40.126956	47907	4815
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_plus	40	40.057884	20376	2765
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	40	40.052825	17326	4121
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ln	40	40.046067	13676	2505
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40	40.078749	27020	1935
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_cos_opp	40	40.036048	9384	2783
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rderivable_pt_abs	40	40.089881	31812	3022
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_minus	40	40.048238	14241	2400
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.lim_x	40	39.789591	39267	3740	13.30	synth with cache (only 1: intros H l; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_abs	40	24.311640	7497	1387	0.4.0.1.17.1	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: simpl; only 1: ring; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P6	40	40.076113	15381	2389
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_neg_nth	40	40.046602	12170	2456
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.Rlist_P1	40	40.102515	37611	4481
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	40	40.092522	36992	3726
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.218352	85	30	1.1.0.2.3	synth with cache (only 1: induction 1; only 1: constructor; only 1: eauto; only 1: auto; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	10.342673	9257	1281	1.0.8.0.9.4.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: induction 1; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.028582	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_lt	40	0.013196	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RinvN_cv	40	40.024889	6092	2504
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qlt_Rlt	40	40.083196	25629	2346
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_le	40	2.382567	707	245	3.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Q.Qdi	40	40.170817	5094	818
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_gt_le	40	0.089091	10	5	0.3.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_gt_ge	40	0.414504	174	60	2.4.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_minus	40	40.035280	7853	933
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_ge	40	0.104743	13	9	0.2.1.0	synth with cache (only 1: intros r1 r2 H; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Wn_decreasing	40	40.066957	24513	2792
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.IVT_interv	40	40.025737	6767	2418
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	8.769979	4707	397	0.0.15.2.26	synth with cache (only 1: intro n; only 1: intros; only 1: red; only 1: apply Zeq_bool_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.R0_fp_O	40	40.032815	7155	1730
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_l	40	40.044974	10454	4074
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	16.602231	2035	870	0.0.0.0.0.0.0.0.0.2.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: prove_sup0; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.QSORaddon	40	40.043611	10110	4082
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.Rlt_4	40	24.819603	8124	1420	0.3.0.2.2.4.0.0.2.6.4	synth with cache (only 1: intros f1 a x X; only 1: elim (Rplus_ne 1); only 1: cut (0 < 1); only 1: rewrite Rplus_0_r; only 1: intros r n H'; only 1: elim (Rplus_ne 1); only 1: intro; only 1: intro; only 1: intros; only 1: Lra.lra; only 1: apply Rlt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple	40	0.078482	6	2	4.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rlt_pow	40	40.056869	15384	3641
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.007745	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	40	40.154630	65004	1775
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rring	40	40.221254	45704	2005
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40	40.079601	24973	2813
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.060081	17866	4377
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.div_eq_inv	40	0.016627	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.GP_infinite	40	40.078782	25891	4588
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	0.930412	612	108	2.4.10	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	40	2.034298	546	160	0.1.3.3.0	synth with cache (only 1: intro; only 1: intro; only 1: intros H1; only 1: repeat rewrite S_INR; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple_var	40	3.120012	1651	149	11.3.11	synth with cache (only 1: intro H; only 1: unfold Rdiv; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.Rext	40	40.014141	2810	1015
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.Rset	40	0.052881	7	4	1.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C6	40	40.035069	7542	3549
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.scal_sum	40	40.083188	29036	2690
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dminus	40	40.039277	8376	3838
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.FQ_dense	40	40.018069	2281	960
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40	40.059117	14241	4058
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lem_1	40	40.144995	11340	2656
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.063962	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.088513	26703	6775
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.028471	6	5	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Zdi	40	40.023698	7125	724
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P6	40	40.052558	19867	2310
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.059147	19128	4140
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.066880	21538	3967
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40	41.697485	5251	415
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.052735	13124	2460
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_ge_zero	40	40.062951	7270	2655
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	40	40.078920	11952	286
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.050776	16267	3908
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.089529	16292	4387
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	40	40.045325	15193	1230
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.048246	15654	2271
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_pos	40	6.412594	2647	519	8.2.1.3.0	synth with cache (only 1: intros; only 1: left; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_cos	40	40.038483	9514	3533
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.791661	176	68	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_pos_pos	40	40.046071	15391	3264
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.056449	15477	3244
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_sin	40	0.035081	7	4	0.0.3.0	synth with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_inv	40	40.038459	11036	2826
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_cos_Rabs	40	40.030653	6718	3037
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.Rcontinuity_abs	40	40.058506	11801	3142
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2_cos2	40	40.057383	17350	2964
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRsum_eq	40	40.243056	39290	2857
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_plus	40	40.089627	12212	2661
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.044438	14377	2681
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.033493	9566	2792
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_nonneg	40	40.162540	31697	3757
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P0	40	40.103582	21062	4271
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40	40.128245	53096	4087
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40	40.159466	63454	4235
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_ext	40	40.034595	10373	2308
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_plus	40	40.063156	12806	2698
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_le	40	40.063304	22421	3199
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_mult	40	40.098199	21533	1562
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_not_le	40	0.017508	9	3	1.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_growing	40	40.087634	32535	2914
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.neighbourhood_P1	40	21.611375	16217	2098	3.1.0.1.2.0.0.0.2.1.12	synth with cache (only 1: intros f x X; only 1: intro; only 1: unfold neighbourhood; only 1: intros; only 1: elim H0; only 1: intros; only 1: unfold included; only 1: exists x0; only 1: intros; only 1: unfold included in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.f_interv_is_interv	40	40.030779	9172	2826
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	40	40.037064	11290	1942
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_tac.comm	40	40.028683	4925	325
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P2	40	1.125931	546	106	3.8.4	synth with cache (only 1: intros; only 1: intros P; only 1: firstorder  auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_r	40	40.031463	6524	2955
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40	40.037238	8902	2844
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.is_neg_true	40	40.112805	43574	2256
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	40	40.175456	80536	1830
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RringExt	40	40.093596	43020	286
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_div	40	40.052807	15755	3463
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift	40	40.093867	32815	4962
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.036453	10425	2436
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.poly	40	40.073064	20496	4224
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.080042	24932	4177
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.058670	30	7	7	synth with cache (only 1: auto using eqb_correct, eqb_complete).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.continuous_neq_0	40	40.079605	24340	2903
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.Rtheory	40	40.015597	3231	1578
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.decomp_sum	40	40.049588	16759	2087
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx_pow_n	40	40.075516	22635	4193
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.060377	16021	4364
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.067831	22497	2861
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.044286	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	40	40.096525	13177	2748
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	40	40.247669	35719	3541
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.056854	18654	3539
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P2	40	40.030330	8642	2498
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.039160	10492	3914
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Rabs	40	40.106813	11767	2581
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.024670	3712	567
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pow2	40	4.272280	1677	330	1.3.1.9	synth with cache (only 1: intros x; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_gt_zero	40	40.064746	7411	953
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40	40.050780	5860	102
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	40	40.042839	13658	3239
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	40	40.061600	18744	3689
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation	40	40.044935	12138	2951
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40	40.397410	17248	1327
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_decreasing	40	40.103966	21588	2203
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos	40	40.056503	16868	2931
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.exp_pos	40	40.026483	6351	3506
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.split_lt_succ	40	4.232641	1592	256	2.3.14	synth with cache (only 1: inversion 1; only 1: auto; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_cos	40	40.048270	11130	3327
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_Ropp	40	40.063187	19898	2410
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_sin	40	40.045987	10443	2823
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.continuity_finite_sum	40	40.045398	12257	3045
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos2	40	40.056746	17129	2197
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_eq_R0	40	40.080198	28344	2963
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2	40	0.102650	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_tan	40	40.043929	13864	2035
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.064955	17968	3421
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P8	40	40.037750	11809	2330
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.plus_sum	40	18.868014	5170	1718	4.0.0.0.0.1.6	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_right	40	40.090173	19284	2265
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P1	40	40.065989	20327	3949
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.Rdef_pow_add	40	40.041194	13112	2081
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.pow2_sqrt	40	13.661102	4810	1021	0.0.0.0.2.0.2.10	synth with cache (only 1: simpl; only 1: unfold sqrt; only 1: intro; only 1: rewrite Rmult_1_r; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40	40.087690	30477	4409
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P5	40	40.072025	17712	1924
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.CRlt_lpo_dec	40	40.114922	25269	3575
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_mult	40	40.041648	9506	2052
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.097380	37249	5286
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_not_ge	40	0.019548	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_lt	40	0.022400	4	4	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.105577	39	16	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.343719	51046	2821
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.138440	54	22	0.2.0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_gt	40	0.095796	27	13	0.0.2	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_le	40	0.012740	3	3	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge	40	0.021358	14	5	0.0.3	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_le_sym	40	0.016278	4	3	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.010461	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_asym	40	0.018863	4	3	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	40	40.055029	18993	2141
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_opp	40	4.950328	2175	275	2.0.2.14.1.6	synth with cache (only 1: intro n; only 1: unfold Qmult, Qeq, Q2R; only 1: ring_simplify; only 1: rewrite <- opp_IZR; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40	40.032790	10632	2618
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	40	40.058487	10733	5593
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P3	40	40.101067	32130	3624
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P4	40	0.070077	21	7	0.5.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRnegPartAbsMin	40	40.030445	6365	1778
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.071336	21830	4459
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.074694	9468	1592
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.is_neg_false	40	40.075821	24284	3378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	1.002470	651	111	2.4.11	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rleft_inverse	40	40.101968	34388	4516
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	40	40.063146	21600	4135
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift'	40	40.093917	33511	4661
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40	40.090355	31021	3107
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.068198	18085	4806
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Power_monotonic	40	40.064353	17529	3715
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.053411	12699	2108
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.Un_growing_shift	40	1.176425	568	127	3.7.0.1	synth with cache (only 1: intro; only 1: intros a Ha; only 1: intros eps; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.PolZadd_correct	40	40.060490	2955	920
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dcomp	40	40.053143	16520	4040
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_lt	40	40.107726	33496	5597
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_comm	40	40.082300	29894	2525
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	40	40.109040	33391	3885
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40	40.055334	15696	3358
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.positive_derivative	40	40.053716	16471	4780
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P3	40	40.052986	18704	2746
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self	40	40.043045	10818	1660
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	3.281444	702	120	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_mult	40	40.047419	13007	2013
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.063278	20705	3555
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_morph	40	40.048126	3598	676
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.044679	13904	2192
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	7.522840	6270	939	1.0.6.10.16	synth with cache (only 1: red; only 1: intros x y H'; only 1: intros Eq0; only 1: unfold opp_fct, limit1_in, limit_in, dist; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.073238	21758	4118
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	40	40.068422	20163	3586
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_unique	40	42.067752	20809	1886
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40	40.044621	15365	3193
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.041034	12101	3469
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.increase_seq_transit	40	40.099071	38123	3925
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	40	0.364812	43	23	1.4.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_increasing	40	40.044412	11945	3259
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	40	8.643923	876	40	0.0.39	synth with cache (only 1: split; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_sin_opp	40	40.037298	9757	2915
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.Zsth	40	0.048618	12	4	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.037422	10437	2569
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_const	40	40.072775	25916	2311
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.062882	20395	2782
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_increasing_interv	40	40.044677	14865	2278
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_minus	40	40.044981	9753	4012
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.049693	17148	2251
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq	40	40.073602	25278	2980
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_le_abs	40	40.064847	20125	3058
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P2	40	40.094592	32297	4009
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.RealField.R_power_theory	40	40.069439	25349	2000
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40	40.085415	16821	3816
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.026200	3	3	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.111191	40536	3031
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.maxN	40	40.046695	13830	3372
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_dec	40	40.082938	27334	3185
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_antisym	40	40.075842	26468	3394
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_antisym	40	0.022599	4	3	1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.215535	12714	2395
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_le_eq	40	0.063824	21	8	2.1	synth with cache (only 1: intros a b; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.017927	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.166840	56	16	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.020554	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.min_maj	40	40.118657	43795	4779
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.QCauchySeq_bounded_prop	40	40.038245	10063	1485
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_minus	40	40.043463	9102	2215
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P5	40	40.088673	26794	4245
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.052269	10352	2708
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_sym	40	40.049828	12692	3333
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40	40.051296	13714	3250
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.057884	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	40	25.898170	11485	979	0.2.8.12.22.49	synth with cache (only 1: intro n; only 1: replace (S n) with (1 + n)%nat; only 1: unfold pow_2_n; only 1: red; only 1: auto with real; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40	40.053739	19955	931
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40	40.121506	6208	3179
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_m_Proper	40	40.040770	8815	3819
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40	40.078306	14559	2363
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rinv_pos	40	40.099749	37467	2453
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_plus	40	40.077583	27402	4397
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	40.105539	14673	3018
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	40	40.240273	81261	1755
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.RPow_abs	40	40.068905	19816	4148
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40	40.072407	22016	2315
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.PolZmul_correct	40	40.017872	4979	579
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.D_pow_n	40	40.047380	12303	2649
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_bounds_le	40	40.060260	17124	2716
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.072365	17786	7414
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_r	40	0.040907	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.033982	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_right	40	0.026260	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P4	40	40.022498	5114	2573
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_limit	40	40.057058	10893	1289
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_one	40	40.047931	15011	1050
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.052356	17336	3428
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.factorDenom	40	17.148248	5858	1449	0.0.4.7.1.11	synth with cache (only 1: intros x y z; only 1: rewrite Qmult_comm; only 1: unfold Qeq, Qmult; only 1: rewrite Pos.mul_comm; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_trans_rot	40	40.037927	10158	2476
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.negative_derivative	40	40.034455	8879	3992
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.exist_PI	40	40.044918	9425	2267
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.038686	9626	3896
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.Endomorph_id	40	40.089286	8114	2066
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.decrease_seq_transit	40	40.089826	33321	4398
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exp	40	40.070271	22097	3079
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	22.654887	14159	1156	0.24.22	synth with cache (only 1: intro; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: discriminate || simpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	40	40.039161	13038	3300
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.158902	65	12	3.5	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	40	40.042351	11312	327
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_cos	40	40.045826	13482	2797
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.051503	27	5	7.0	synth with cache (only 1: intros; only 1: now destruct x).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.Zr	40	40.038971	8542	357
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.049138	12951	2682
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.multiTriangleIneg	40	40.100394	37986	2553
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.029600	7533	2899
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.057456	18085	2944
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_free	40	40.092315	29383	4266
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P10	40	40.063728	22086	3356
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_pos	40	40.076971	16941	2789
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sin_no_R0	40	4.375837	1196	319	0.0.0.0.11.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.uniqueness_sum	40	40.079647	25267	2718
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P3	40	40.048049	12494	4719
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.minus_sum	40	0.128281	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	40	40.050641	15504	2567
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	40.123702	43239	2846
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.034468	9821	2828
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_epsilon	40	40.301833	47076	2509
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_trans	40	40.100001	18181	3038
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.285004	10086	1283
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	6.247019	771	124	2.1.1.0.7.4	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.086712	32823	1761
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_min	40	40.073765	23328	5385
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	1.831163	1367	138	18.7.0	synth with cache (only 1: intros; only 1: intros Heq; only 1: inversion_clear 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.044729	6	3	0.0.3	synth with cache (only 1: red; only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_inv	40	40.097707	35300	2293
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp2	40	40.036385	9037	2268
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.disc_P1	40	40.091041	27189	4362
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_mult	40	40.045512	13602	1755
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_PI4	40	40.066303	19909	2013
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	40	40.174626	74801	3581
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40	40.028495	7985	2295
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.059986	17843	2619
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	3.286075	724	112	0.0.5.12	synth with cache (only 1: red; only 1: intuition; only 1: intuition_in; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	40.035201	1332	294
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	0.071390	10	3	1	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.066600	22299	4367
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rmult_pos	40	40.118855	47178	2208
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40	40.093207	11657	911
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.103553	36886	5515
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.068191	16298	1371
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.of_to	40	40.797447	44113	2336
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_extens	40	40.639681	46808	2743
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	3.993048	550	97	0.0.6.2.6	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: intros; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.043116	2	2	0.0	synth with cache (only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40	40.055917	17514	3935
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0.033997	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0.022454	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0.031804	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.R_power_theory	40	40.087522	3026	1039
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_ne_zero	40	3.956576	1035	231	1.1.0.6.1.1	synth with cache (only 1: simple induction n; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_bounds_lt	40	40.100800	34680	4616
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	40	40.054127	14730	3714
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.031855	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P7	40	40.055738	12085	3315
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound	40	0.020058	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete	40	0.016279	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.040612	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.022089	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.497882	124	70	2.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_complete	40	41.483380	21277	1741
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_proper	40	40.273783	26957	4786
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_cv	40	40.056656	17338	4023
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40	40.111813	14005	1741
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.RmaxRmult	40	5.337137	2337	478	1.1.1.1.1.1.7.2.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: do 2 (apply Rmax_case_strong; intro); only 1: case H0; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult	40	0.155664	134	14	12.0	synth with cache (only 1: destruct x as [xn limx]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40	40.136868	45610	2837
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	2.767374	1649	377	18.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: now case Pos.compare).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_0	40	40.046614	14454	4073
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.Alt_PI_ineq	40	40.136835	13253	1364
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_proper	40	40.359046	18550	2033
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40	40.102295	39450	2934
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_1	40	40.363592	26357	2224
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_cos_opp	40	40.039888	10449	3051
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Cring.Zcri	40	40.083071	9976	506
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40	40.108164	6844	1554
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40	40.075053	23882	1051
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40	40.055040	15411	2946
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_assoc	40	40.041845	11396	1811
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI2_lower_bound	40	40.042752	13518	2337
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI2	40	40.050069	14167	2348
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_mul	40	40.045342	9371	3457
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_opp	40	40.041862	10727	2835
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_sin	40	40.085782	26736	4111
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P4	40	40.076475	25490	3658
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_decomposition	40	40.054746	15851	1866
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_mult	40	40.039817	9624	3985
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P11	40	40.033750	9204	2299
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor2	40	40.042819	14308	2877
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P1	40	0.032073	3	3	0.0.0	synth with cache (only 1: simpl; only 1: intros r1 r2 H H0; only 1: reflexivity || apply Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_not_epsilon	40	40.160072	64112	3752
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_trans	40	40.090398	33007	4052
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	18.838371	7140	1255	8.13.0.6	synth with cache (only 1: revert q; only 1: unfold Pos.leb, Pos.le; only 1: intro m; only 1: now case Pos.compare).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rappart_repr	40	40.082935	28671	3081
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	40.596245	27243	1358
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cauchy_maj	40	40.062794	18317	5147
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Q2R_div	40	40.056058	8189	1329
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_Int_part1	40	40.047998	15455	2833
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_plus	40	40.034833	8899	1463
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P1	40	40.093871	21229	2526
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.059360	15932	2981
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_dicho	40	40.057451	19383	3615
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_N	40	40.109405	39827	2826
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qmult_integral	40	0.047082	4	4	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	40.100977	17361	3040
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	40.108236	39681	2203
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_minus	40	40.057064	16999	5039
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rplus_reg_l	40	40.121678	42421	4812
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40	40.065346	13563	4572
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	40	40.073462	23433	3057
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40	40.200976	6929	2268
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_trans	40	10.375382	10637	1324	10.1.1.4.9.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros le_mn0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	1.024214	189	64	6.0.2	synth with cache (only 1: intros f a b pr H; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1_decr	40	0.079018	5	5	0.0.0.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad g_wf f_deriv; only 1: apply f_deriv; only 1: apply g_wf; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_opp	40	40.575144	38704	2350
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnorme_spec	40	40.151768	63620	2046
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.038423	11323	2319
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_finite_sum	40	21.649042	8597	1878	0.0.0.0.0.0.0.21.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40	40.078517	27028	2423
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.norm_correct	40	40.019987	5395	684
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rinv_pow	40	40.060007	18101	3241
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.943107	1182	187	7.3.6.1.0	synth with cache (only 1: intros m x y; only 1: intros H'; only 1: red; only 1: generalize y; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.046683	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_abs	40	40.079973	24113	4746
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0.046719	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0.022625	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.558570	134	41	4.4.0	synth with cache (only 1: intros H1; only 1: intro; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_to	40	40.182251	60203	3608
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P8	40	40.064668	9782	3419
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtIsLinear	40	40.042631	9218	3162
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_inv	40	40.080366	26559	2265
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	40	40.050955	17104	3357
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.136924	48189	5674
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_comm	40	40.070481	20788	1664
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40	40.201341	91120	1613
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing	40	40.117340	24396	3924
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_lub	40	3.104980	841	237	0.0.0.0.0.2.8	synth with cache (only 1: intros l' d d' Hlen Hnth; only 1: apply Rmax_case_strong; only 1: intros; only 1: clear H; only 1: auto; only 1: intros; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.035759	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	40	40.104797	35636	3209
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_compose	40	40.120488	51694	423
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le	40	0.046164	10	6	1.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number	40	40.145654	64307	413
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_lt_inv	40	40.043600	11573	3600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_tan	40	40.040274	10185	2666
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40	40.048302	8986	771
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40	40.032236	7382	753
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.027385	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI2_3_2	40	40.058013	19088	2159
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_Rle	40	40.655156	37556	2520
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	1.150236	368	115	4.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_RGT_0	40	40.031583	6502	3350
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.single_limit	40	40.060923	15455	2254
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le_inv	40	3.923089	2101	405	10.1.0.3.2.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: destruct (CRltLinear R1); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_left	40	40.030126	3490	1241
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.095470	23012	2401
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_zero	40	0.149795	15	5	1.1.0	synth with cache (only 1: split; only 1: apply CRmorph_rat; only 1: apply CRmorph_rat).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_one	40	0.021151	2	2	0.0	synth with cache (only 1: intros; only 1: apply CRmorph_rat).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P5	40	40.057537	16760	3980
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_Rle	40	40.063527	19781	2537
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	40	40.049860	13347	3543
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.469386	69	40	0.0.0.1.2	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.147644	15	13	0.0.1.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P12	40	40.069606	18653	2097
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P2	40	40.055006	18425	3040
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.DDlow_below_up	40	40.082979	22718	2536
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40	40.077347	26247	4973
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_comm	40	40.143525	59123	3301
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.100026	21524	2576
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cauchy_opp	40	40.105582	37431	5050
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_Int_part2	40	40.051447	12403	5613
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_left	40	40.029099	6058	2600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P2	40	40.107584	25725	3635
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI4	40	40.063240	18007	3063
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.continuity_seq	40	40.052300	15591	4573
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	40	40.055241	17011	2725
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40	40.136128	22930	1691
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.054166	4	4	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_mult	40	40.058935	17493	4906
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.067864	8	5	0.0.0.3.0	synth with cache (only 1: unfold to_Z; only 1: generalize digits_ne_1; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	41.247307	7700	1367
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40	40.070895	15499	5106
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rzero_lt_one	40	40.209998	92485	546
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	40	40.147847	58793	4889
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_trans	40	40.182911	16793	3285
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le_trans	40	0.154935	51	25	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40	40.088294	14672	2196
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_plus	40	40.243393	46618	3186
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40	40.038390	10016	2803
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40	40.038301	10674	3427
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.PolZeq_correct	40	40.023815	6608	1010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnormf_spec	40	40.673701	55277	667
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.091099	29342	5050
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	40	40.062959	14655	6328
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	40.044515	11238	918
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	1.016978	432	100	4.1.1.3.1	synth with cache (only 1: destruct m; only 1: easy; only 1: simpl; only 1: intro H; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P9	40	40.049314	17104	2372
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.hnorme_spec	40	40.104216	39114	1958
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CRealAbsLUB	40	40.095333	5188	935
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CRpow_plus_distr	40	40.029392	6569	1674
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVU_derivable	40	40.053472	17829	3334
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	19.946836	20944	1321	6.0.0.0.24.26.5	synth with cache (only 1: split; only 1: destruct p; only 1: destruct b; only 1: easy; only 1: easy; only 1: first [ intuition congruence | auto ]; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	40	40.040186	10263	1129
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_0_l	40	40.678835	11813	2153
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	40.096461	40929	571
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_1	40	40.044305	12226	5186
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	40	40.083004	22308	7283
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	40	40.133736	57621	2236
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_inv	40	40.042020	11675	3042
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_tan	40	40.023790	4876	2340
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_pi_minus	40	0.069258	5	5	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.sin_pi_plus	40	0.064232	5	5	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.025834	3247	791
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.Abs_sum_maj	40	40.116545	40270	2879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.068810	18187	3377
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_4	40	40.060317	18201	2908
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI2_1	40	40.039416	10726	2753
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.042543	8	3	0.5.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_appart_0	40	40.048306	8652	3013
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sin_antisym	40	40.099736	20934	2807
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_comp	40	40.048899	12034	4034
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P6	40	40.070818	21742	5283
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_opp	40	40.645940	21898	1619
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rsum_abs	40	40.050748	13887	3138
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div_alt	40	40.073527	12476	3437
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_const	40	26.343200	9762	2769	0.0.0.0.0.0.0.0.0.0.0.0.0.6.0.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: red; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P13	40	40.020016	4727	1956
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_pi_minus	40	6.049524	2065	455	0.5.0.0.0.9.0	synth with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite <- cos_sym; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.cos_pi_plus	40	0.073935	5	5	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.061067	20954	2341
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_assoc_0	40	40.061947	18873	2245
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit_fix	40	40.336283	35695	2026
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI_neq0	40	8.969655	2230	256	0.0.0.2.9.10	synth with cache (only 1: apply Rlt_dichotomy_converse; only 1: unfold Rgt; only 1: right; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.109580	41903	4729
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.057767	18643	2633
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cauchy_min	40	40.095925	30832	6330
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P3	40	40.046849	11483	3211
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.038935	9180	3759
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_right	40	40.031021	6107	3039
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_3PI4	40	40.056105	14935	2661
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.071067	25824	3612
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qpower_positive_zero	40	40.034733	10570	1569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.125069	16979	1581
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40	40.034032	8249	1074
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.plus_IQR	40	40.079480	24586	2865
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	40	40.388734	23382	1537
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_gt_trans	40	40.082209	30129	3804
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40	40.037361	6249	3027
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_unique	40	40.081694	26891	2716
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40	40.118690	15629	2462
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_decr	40	40.018644	4255	1663
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.mult_l_correct	40	40.023994	6847	1038
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnorme_invol	40	40.135980	52805	2189
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_R1	40	40.087087	26571	3366
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.065295	16136	5551
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.797879	2717	248	18.17	synth with cache (only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40	40.037589	7072	575
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.hnorme_invol	40	40.475482	33878	1848
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	3.168630	3579	392	3.14.4.6	synth with cache (only 1: intro H; only 1: inversion 1; only 1: generalize dependent n; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.CR_double	40	40.026537	6154	1095
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveRcomplete.CRealComplete	40	40.104540	22883	2105
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40	40.055296	17391	2513
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40	40.090578	32962	3346
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_base	40	0.012192	5	2	2.1	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40	40.034874	10186	1013
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	40.072585	23061	1754
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	40.117832	44180	1174
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.derive_increasing_interv_ax	40	40.068354	23951	4134
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_neg	40	40.069703	15985	8056
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	2.540923	1160	122	21	synth with cache (only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.valid_le_compat	40	6.928650	7666	1048	5.0.2.4.7.0.0.10.0	synth with cache (only 1: intros x y z; only 1: destruct 1; only 1: intro E; only 1: trivial; only 1: constructor; only 1: Pos.Private_Tac.order; only 1: now f_equal; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.049640	13182	5019
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_mult	40	40.044696	13164	2552
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_increasing	40	40.043865	14678	2128
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40	40.087184	13749	1865
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.cond_pos_sum	40	40.040772	12317	1238
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_morph_Proper	40	40.035348	5127	2119
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.007939	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.sin_0	40	40.132106	29588	2783
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P7	40	40.060352	17993	4357
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_inv	40	40.051669	13010	3649
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_le_compat	40	4.762708	4017	592	0.2.0.4.5.6.0.2.2	synth with cache (only 1: intros x y H; only 1: simple destruct 1; only 1: trivial; only 1: right; only 1: intuition; only 1: Pos.Private_Tac.order || (right; Pos.Private_Tac.order) || (left; Pos.Private_Tac.order); only 1: eauto; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40	40.104858	15034	2078
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cte	40	40.056721	15875	3070
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.040009	9300	3337
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_scal	40	40.088959	30843	4487
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P14	40	40.031566	9303	2077
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_pi_minus	40	40.054261	16589	2219
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	40	15.392846	13353	2144	0.0.7.17	synth with cache (only 1: intros m Hm; only 1: intros; only 1: unfold list_nth; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P4	40	40.052678	16948	2659
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_assoc_1	40	40.092530	27463	3361
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40	40.029736	3413	560
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_growing	40	6.574667	3170	749	10.0.3.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit	40	40.151995	59704	3167
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_to	40	40.148597	61417	2826
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI	40	40.053278	15917	2923
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	8.970324	3540	815	0.2.0.0.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_sound	40	6.916710	18869	1618	0.44.3	synth with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_opp_r	40	40.114908	47710	2251
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.386414	276	138	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.032211	9628	1303
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_cv	40	40.091017	29468	4815
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	1.012194	344	95	3.0.0.0.2.0.4	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.026710	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	0.156482	14	7	6	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.398296	182	13	19	synth with cache (only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.008929	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0.106308	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part2	40	40.043349	10351	4110
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_inv	40	10.324667	3123	1186	1.4.0.10	synth with cache (only 1: intros a b n Hn; only 1: apply continuity_pt_inv; only 1: auto with real; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Rsepare	40	40.046293	10094	2990
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.067457	18167	2307
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt	40	40.031255	7068	2680
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_car	40	40.095084	11339	2808
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2RpowerRZ	40	40.055111	13275	2740
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40	40.140708	28155	1857
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.073533	7	6	0.1.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40	40.073266	22965	1651
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.mult_IQR	40	40.097603	16829	1960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_to	40	40.085024	26980	3646
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.078578	14562	1848
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	40	40.080391	24844	2799
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_exp	40	40.038262	7697	3029
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40	40.051679	16513	2716
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40	40.023299	6797	1554
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_eq	40	40.345382	29204	3327
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.compute_list_correct	40	40.070405	17115	1207
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_dec	40	1.392202	465	113	0.0.1.0.1.8	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_dec	40	0.110083	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_dec	40	0.111689	5	4	0.0.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_dec	40	0.155536	9	5	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le_dec	40	0.380575	47	18	0.4.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_dec	40	0.039611	5	3	1.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_dec	40	0.055970	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_gt_dec	40	0.322726	61	33	1.4.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.033489	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_or_ge	40	0.062431	25	15	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_or_lt	40	0.190844	30	13	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_or_gt	40	0.078200	34	19	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	40	40.087166	25531	6018
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_Rsqr	40	40.042809	10812	3626
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.dnormf_invol	40	40.201060	31022	3249
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_le	40	0.305882	51	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete	40	14.996988	32067	2335	0.34.6.13	synth with cache (only 1: intro x; only 1: intros; only 1: apply H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.090880	32389	3692
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.to_of	40	40.072799	23941	2035
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.050049	16770	1390
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoCvZero	40	40.065394	20659	2483
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40	40.050885	18216	789
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	18.386136	53495	478	280	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	40.100687	40271	1272
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	9.384697	4087	965	2.0.3.2.0.3.6	synth with cache (only 1: intros x y; only 1: unfold Rle; only 1: destruct (total_order_T x y); only 1: intro; only 1: auto; only 1: right; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.059170	13937	4532
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.derive_increasing_interv	40	40.025690	6064	3164
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLt_0_aboveSig	40	40.047955	8066	1157
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.044515	15983	1315
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_inj	40	40.027291	6639	2453
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.pos_sum_more	40	40.091060	31447	3217
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.044688	11808	3599
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P8	40	40.056516	17792	3530
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.122851	49806	3911
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40	40.045366	8118	1574
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_le	40	40.162330	18090	2996
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_Rinv	40
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	40	40.058090	17602	4016
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_null_zero	40	2.372717	3258	333	1.6.8.10	synth with cache (only 1: intros a0 a; only 1: intros m; only 1: destruct m; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_facts.tan_pi_plus	40	40.052389	16489	1311
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40	2.253402	2297	290	5.0.4.0.3.5	synth with cache (only 1: intros; only 1: induction p; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: first [ intuition congruence | auto ]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P15	40	40.036459	11349	2755
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.079518	25711	6043
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P5	40	40.038346	11117	2692
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_r	40	40.140336	52277	2749
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.079542	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.051533	15	3	7	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.to_of	40	40.081350	24318	5068
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.glb_dec_Q	40	40.146443	59596	2292
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.to_int_inj	40	0.034673	10	3	0.2	synth with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI	40	40.041051	7057	2227
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40	40.038445	11509	934
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	40.114496	8922	1802
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.072018	25025	1498
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.068892	20698	4343
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.min_cv	40	40.117997	46456	2710
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_div	40	40.057481	17097	4661
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_PI6	40	40.061551	18031	1615
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.restriction_family	40	40.073186	21058	4220
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.034029	10195	3160
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qpower0	40	40.030770	8744	1382
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40	40.064163	17379	3961
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.126991	22	10	0.2.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_contract	40	40.050382	13518	2491
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0.081559	27	6	6	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.070979	21164	2216
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_lt	40	40.110996	38900	2350
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.016952	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.to_of	40	40.081683	26013	4010
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_bool_bound	40	40.079330	29143	2005
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.047280	10984	2753
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40	40.018438	3929	1640
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40	40.248937	25922	2581
coq-tactician-stdlib.8.12.dev	Coq.nsatz.NsatzTactic.nsatz1.check_correct	40	40.032704	8516	673
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cauchy_eq	40	40.624588	37316	2277
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	40	41.441527	40092	3349
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.071022	17612	6673
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1_even	40	40.036810	10249	2230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	5.171538	824	243	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	3.321416	188	101	1.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_sound_alt	40	40.266397	75600	8694
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40	40.061099	18702	3042
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1_decr	40	2.055952	209	72	2.2.3.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	16.236092	2670	182	0.0.0.40	synth with cache (only 1: intros n; only 1: induction n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.to_of	40	40.630355	17484	2115
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	40.106312	40506	3920
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoFiniteSum	40	40.051701	15250	1232
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.to_hexadecimal_inj	40	40.153496	60780	2931
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40	40.102265	10494	1285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40	40.097949	38696	2674
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.093494	19390	914
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.inser_trans_R	40	40.067855	21933	3298
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_0_r	40	0.369526	8	5	0.3.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.derive_increasing_interv_var	40	40.025817	6152	3240
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_R0	40	40.094518	34627	2167
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ne	40	0.387663	21	8	0.0.0.1.2	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_l	40	0.256184	7	5	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat_correct	40	40.399397	7280	1152
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.to_int_inj	40	16.694209	17821	949	3.63.0	synth with cache (only 1: intro E; only 1: Z.bitwise; only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph	40	40.040642	7713	1915
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.068870	25405	1948
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40	6.826918	1760	219	6.2.1.16	synth with cache (only 1: intros a; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.031951	9585	2229
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_opp	40	40.067555	21633	2660
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_0	40	40.058683	17805	3183
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P9	40	40.121374	13616	2657
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	40.074811	14245	5228
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_minus_sym	40	40.033061	4934	1797
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_continue	40	40.044334	13376	3266
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.044641	11353	3842
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.family_P1	40	30.332907	23803	2938	7.10.9.12	synth with cache (only 1: intros x y H; only 1: intro abs; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P16	40	40.025042	6688	2496
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.070989	25144	2840
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	40	40.083921	31691	4099
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.031805	8393	2442
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40	40.106414	35789	2968
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.to_int_surj	40	40.135816	60391	586
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40	40.035241	8965	1824
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_bound	40	40.025225	4767	2871
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_comm	40	40.043713	10917	1019
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cauchy_abs	40	40.088502	31976	4231
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cond_eq	40	40.064990	19387	3510
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.not_Rlt	40	0.010533	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_glb	40	40.139347	52102	4875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_int_norm	40	4.278950	1927	485	5.0.11.0.0.1	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: generalize (DecimalPos.Unsigned.to_of d); only 1: simpl; only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_comp	40	40.050946	12806	3851
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI6	40	40.065684	10246	2627
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT	40	40.067742	24392	4145
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.080855	22956	4468
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_inj	40	3.221507	1800	341	4.13.0.0	synth with cache (only 1: intros; only 1: rewrite <- !Unsigned.to_of; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P10	40	16.961089	9724	1956	4.5.1.0.2.1.0.0.6.1	synth with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: apply S_pred with 0%nat; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.058415	16345	3105
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_glb	40	40.031249	6720	2720
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.lt_IQR	40	40.126024	48112	3198
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_eqb_isZero	40	40.083987	31978	3228
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.053473	12683	2691
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_exp	40	0.044636	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.042377	11953	2992
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_proper	40	40.072871	25489	2503
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40	40.135816	18246	2639
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.057179	14787	4196
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1_odd	40	40.052372	13460	3086
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40	40.088607	28605	2887
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.260817	69775	6346
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv	40	40.016504	3033	1336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40	40.111845	8061	919
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	40.089894	31510	3768
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40	40.202098	84160	3857
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.046248	18	5	0.1	synth with cache (only 1: intros n m Hn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoHalfBelowTwo	40	40.077575	20414	1826
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.to_hexadecimal_surj	40	40.057824	15125	3812
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.to_decimal_inj	40	40.114512	42561	2225
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40	40.052072	17700	861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.107686	37947	2595
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.IAF	40	40.055430	17442	4247
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_R1	40	40.059243	17539	2360
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.038606	13801	2173
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.028048	9	4	1.4.0	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.070859	48	14	1.4.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	7.050008	656	85	5.12	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.043848	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_bound_indep	40	40.060985	17843	2238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	1.271092	228	45	0.0.8.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	40.089135	32789	2325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.to_int_surj	40	40.096317	32904	5395
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph_prop_Proper	40	40.049193	10517	3853
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.R_uncountable	40	40.082572	30005	3342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.036366	9183	1075
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P6	40	35.035443	29597	3836	21.18.1	synth with cache (only 1: intros; only 1: intros HP; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.049569	13179	3410
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_scale	40	40.054693	17384	1901
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus	40	40.069249	21509	2141
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_lt	40	40.155717	16093	2035
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_plus	40	40.055310	14719	3559
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	40	40.051066	13806	3660
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	1.474778	276	135	0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	35.194536	39174	1742	0.0.0.0.0.0.4.107	synth with cache (only 1: intros n; only 1: case n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.038740	12268	2637
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_compat	40	40.099343	38814	2593
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	40	40.086948	31107	2833
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.044516	13486	3197
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.025906	1944	447
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.039223	10515	2822
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_assoc	40	40.060718	11826	1619
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_1	40	40.028018	9342	1121
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.046044	14039	3794
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_maj	40	40.144132	53248	4807
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_closed	40	40.114646	41758	5486
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	2.674390	1172	254	2.0.7.2.0.0.4	synth with cache (only 1: destruct x; only 1: intros x y H7; only 1: reflexivity; only 1: intro x; only 1: reflexivity; only 1: intros x y H7; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step1	40	40.039481	9969	2293
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.063602	16141	3232
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT_cor	40	40.071161	25370	4011
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Reval_formula_compat	40	40.361703	38388	3081
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_iff	40	40.287762	19996	3198
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P11	40	40.063284	19298	2602
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.106254	13856	2868
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_plus_quot	40	40.085951	29046	3935
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_assoc	40	40.039435	9182	1950
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.074204	26574	4303
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.021628	5	1	4	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.043685	10783	2619
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.024536	2	2	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_sinh	40	0.048050	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.056121	18534	3113
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	40	40.048572	3289	1396
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_morph	40	40.125945	20894	2702
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.invert_heap	40	1.476980	734	90	0.5.4.10	synth with cache (only 1: intros l l1 l2; only 1: intros; only 1: inversion_clear H; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	40	40.057216	15977	4077
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1_abs	40	40.070477	20647	4367
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_exp	40	3.726841	1960	342	0.1.15	synth with cache (only 1: intro H5; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_cosh	40	0.229358	21	10	1.0.5	synth with cache (only 1: intro eps; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.517324	35	29	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtEpsilon	40	40.683680	18581	1285
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_decr	40	40.027711	6730	2233
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40	40.061424	13274	2999
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40	40.048598	15973	1725
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtForget	40	3.420941	2038	259	10.12	synth with cache (only 1: intros [xn xd] [yn yd] Hxy; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_hexadecimal_hnorme	40	40.057005	16866	4425
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructivePower.GeoHalfTwo	40	40.051374	3508	888
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.to_decimal_surj	40	40.066858	19712	2091
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40	40.080881	17026	1126
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40	40.102296	34944	4130
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.IAF_var	40	40.060298	20399	4316
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.031173	5973	2026
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	40	40.285718	30085	2783
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40	40.096676	10594	1355
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40	40.055185	16120	2219
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyComparison.Zcompare_spec	40	40.060132	18826	3616
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_int_norm	40	40.056580	15697	3923
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.ub_lt_2_pos	40	9.921163	2384	812	2.0.0.2.2.4	synth with cache (only 1: intro H1; only 1: intro; only 1: intro H10; only 1: intros; only 1: unfold Rdiv; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_right	40	40.049928	13103	2530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.070378	24331	2108
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P1	40	40.201207	28619	3232
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.sum_plus	40	40.057129	16836	2547
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.frame_tan	40	40.062205	21442	2633
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang	40	40.070474	17645	2253
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_mult	40	40.065310	21910	2797
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos	40	40.107836	21344	2606
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.042434	9167	4015
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40	40.080526	17284	2190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ub_opp	40	4.564801	1941	270	18.4	synth with cache (only 1: intro; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P18	40	40.054929	19445	2192
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pos_opp_lt	40	0.034748	5	2	3.0	synth with cache (only 1: intros; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	40	40.070911	24922	2827
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.042625	13254	3061
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.110110	42214	3230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_lu_succ	40	0.007207	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	27.101597	13720	3499	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rinv_l	40	40.059116	21858	1894
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_cos	40	40.049542	13821	2570
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_1	40	40.031134	4944	721
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.040363	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_2	40	40.131278	49179	4801
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_min	40	40.046524	11310	3776
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40	40.023387	5347	1496
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.sig_lub	40	40.767444	25350	2605
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.049381	13379	4028
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_PI3	40	40.062190	17521	1564
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	40	40.134758	34551	3636
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Reval_nformula_dec	40	40.064487	20041	1881
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_uint_iter_D0	40	40.065326	23839	1340
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P12	40	40.056022	16069	4168
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_to	40	40.090460	27527	5403
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	40.177697	9121	1522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40	40.051146	11813	4508
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.IQR_mult_quot	40	40.158888	10094	1192
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRlt_min	40	40.126955	27994	8122
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_ltb_leb	40	40.044928	14371	2530
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.911629	408	73	15	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.097798	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.012657	3	2	0.1	synth with cache (only 1: intros n m; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.027734	2	2	0.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morph_Proper	40	1.088843	267	75	0.0.0.0.6.0	synth with cache (only 1: intros; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morphT	40	0.175644	26	12	0.5.0	synth with cache (only 1: intros R x y exy z t ezt; only 1: rewrite exy, ezt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.Un_cv_nat_real	40	40.241692	43399	2747
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.is_heap_rect	40	40.129826	39004	2107
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40	40.046386	15365	2788
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_mult	40	40.059914	17905	3260
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.is_heap_rec	40	2.484216	495	167	0.2.0.0.0.0.1.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.sinh_lt	40	40.074550	12081	2694
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.048082	12444	1456
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.112378	43825	3965
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0.032194	12	4	1.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_lpo_dec	40	40.384077	35769	3428
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_inj	40	40.061329	19710	2694
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	26.097607	22551	1037	48.25	synth with cache (only 1: intro p; only 1: now try destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.of_decimal_dnorme	40	40.449180	18111	1632
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40	40.086097	29693	3589
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40	40.123210	33805	1098
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.134389	22	9	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.024025	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left	40	40.056805	11858	5543
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_loc	40	40.055455	18342	3853
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.074368	23861	7399
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40	40.074711	23272	2571
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_inj	40	40.080795	25977	3616
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40	40.031840	5665	2323
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.mkposreal_lb_ub	40	40.055852	17182	2689
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_opp	40	40.044524	8803	1858
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.low_trans	40	12.780974	5159	1171	13.0.3.0.0.0.1	synth with cache (only 1: simple induction T; only 1: intros; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	17.867492	3395	1321	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40	40.094732	34865	1957
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P2	40	40.066246	9544	3685
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.decomp_sum	40	40.050828	16711	1943
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv	40	40.049134	13700	2969
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_O	40	40.038236	11271	2561
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.NatOfZ	40	40.120382	49417	1773
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	40	40.051193	7970	2602
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tech_opp_tan	40	40.051234	16084	3261
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P19	40	40.055067	18773	2286
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.056496	19670	2255
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P9	40	40.042278	13558	2827
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40	40.109224	41784	3188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_little_uint_succ	40	40.087812	30790	2825
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.073448	22344	3945
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.063761	23548	1225
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_cos	40	40.114081	17255	2351
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_0	40	40.035712	12704	1957
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq_R0	40	40.069751	21016	2754
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.UL_sequence	40	40.062750	19545	4055
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLUB.CR_sig_lub	40	40.101399	33591	6123
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.036352	10100	695
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In	40	40.082309	19720	3196
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step3	40	40.049858	15798	3583
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.055008	14497	2285
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	40	40.071866	23262	4778
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.095285	33606	3685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_int_iter_D0	40	40.052823	12837	4065
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P13	40	40.065627	21368	3020
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.to_of	40	40.062251	15912	4115
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.057151	14538	4217
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_right	40	26.854384	12511	2515	0.0.19.0.1.0.1.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rabove_pos	40	40.286436	120866	4124
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40	40.083905	30360	4064
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.072068	16506	3360
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub	40	40.075758	21868	6166
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40	40.043698	13936	2118
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.Un_cv_real_nat	40	40.194169	65064	3455
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P14	40	3.889446	1564	473	8.3.0.0.0.0.1	synth with cache (only 1: induction l; only 1: intro; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: symmetry; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_incr	40	40.066184	18227	5031
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.046290	10045	1892
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40	40.053255	13770	1766
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.007052	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_not_lt	40	40.047269	15912	2140
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalQ.of_iff	40	40.180526	17058	3113
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.092105	29779	3375
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.074800	26061	2381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.123619	22772	1193
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalQ.of_decimal_dnormf	40	40.041423	11546	2073
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.058426	19887	4124
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	40	40.050148	17344	2393
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	6.736956	2650	621	1.1.0.0.0.0.0.0.2.0.0.0.2.0	synth with cache (only 1: destruct z; only 1: intros Hn; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: intros; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.230051	96285	3229
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_iff	40	40.096695	32851	3871
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	40.162790	3395	592
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40	40.035062	9432	2657
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_minus_sym	40	40.043206	6698	1694
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.Equivalence_instance_0	40	40.085411	26472	1998
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.Proper_instance_0	40	0.702697	144	43	1.2.1.0.0.1	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	40.127799	51748	2281
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.088481	34826	1010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.006347	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0.175513	437	23	29	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.102291	361	133	5.0.1.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.reverse_sum	40	40.087545	30150	2754
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_EMP	40	40.178186	68893	3779
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_1	40	40.047009	14590	2532
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv2	40	40.390416	14789	1830
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_int	40	40.033566	5235	2491
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.042796	10213	3934
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P20	40	40.044799	14047	2622
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pre_atan	40	40.155645	9905	2359
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40	40.048919	15365	2060
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.062914	17159	2872
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_compat	40	40.081913	28122	3841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_lu_equiv	40	40.093793	29711	4655
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	0.250388	350	20	26	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	40	40.100482	33984	5128
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.011510	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.R1_neq_R0	40	40.177119	79425	1990
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_plus	40	40.048229	14128	2712
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_not_0_positive	40	40.058876	20259	2714
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_incr	40	40.077362	25763	3946
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_plus	40	40.107792	38109	4710
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40	40.017898	3542	1917
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.098012	26253	3307
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.061903	6	6	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_limite	40	40.055036	16974	3404
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_2PI3	40	40.048984	12530	2024
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.070121	23902	3114
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RTautoChecker_sound	40	40.235854	35933	3469
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.083875	26324	2456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.to_uint_inj	40	40.121250	45453	3086
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40	40.069717	19833	2542
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.055075	16386	2629
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.101197	36274	4485
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rarchimedean	40	40.368436	31066	2639
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_l	40	40.026134	5170	2158
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40	40.047548	14679	3128
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P15	40	40.066244	21560	3515
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.024130	7	4	0.3.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_minus	40	40.501829	13819	1327
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_R1_Rle	40	40.063305	17936	4271
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.Rplus_le_pos	40	25.025747	9885	1578	0.18.0.8.5	synth with cache (only 1: intros R x y H; only 1: rewrite <- CRplus_0_r, CRplus_assoc; only 1: apply CRplus_le_compat_l; only 1: rewrite CRplus_0_l; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40	40.045636	9593	1798
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_diff	40	40.082067	13021	2467
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	31.643977	13655	1016	14.0.0.18.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40	40.039363	5890	1461
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40	40.089624	21739	1467
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40	40.184805	77931	3683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.467702	44	15	0.0.4.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_eqn	40	40.057594	10951	815
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_abs	40	40.028504	6087	4074
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_0_l	40	40.051682	15646	2514
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	40.071892	24934	1725
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.048430	11913	1194
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_hex_uint_iter_D0	40	40.060930	16345	1050
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_left	40	40.061097	15200	5632
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40	40.403206	8416	1486
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	0.920430	293	91	0.10.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.merge	40	40.112106	37556	2683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40	40.080859	24287	2191
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_eqDom	40	40.237087	15261	3601
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_pow	40	40.035131	9148	2638
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_gt	40	40.074268	9000	894
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	40.040010	4206	1198
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_neg_0	40	40.059476	17954	3319
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P21	40	40.049386	15824	2983
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_bound	40	40.043007	13000	2729
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.618246	84	55	5	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.074605	26370	2699
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	14.973212	7262	822	4.12.0.4.13	synth with cache (only 1: intros A l; only 1: red; only 1: zify; only 1: f_equal; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.063020	22787	2914
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_0_r	40	40.071557	24752	2820
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_uint_alt	40	40.114073	41363	4213
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.083396	32608	2643
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle_le	40	40.086822	25745	6902
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40	40.062940	20760	1655
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	40	40.104447	39714	3023
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_minus	40	40.055698	16818	2868
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.065291	23178	2957
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inv	40	1.185513	359	137	0.0.3.4	synth with cache (only 1: intros r b; only 1: unfold Rsqr; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_asym	40	41.334628	10749	955
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cv_cvabs	40	40.060155	17993	4084
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cv_maj	40	40.076131	21817	3892
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.068630	21528	3790
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	40.030857	7866	1999
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq	40	40.070643	24010	3670
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_2PI3	40	40.042822	8427	1778
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.304593	58	32	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.049485	13	6	0.0.0.0.2	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	1.543546	838	217	12.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.074530	16750	1656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.to_uint_surj	40	40.081340	24550	4229
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_uint_norm	40	0.016768	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_inj	40	0.020486	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- !HexadecimalPos.Unsigned.to_of; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Unsigned.of_iff	40	0.045237	11	8	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- HexadecimalPos.Unsigned.of_uint_norm, E; only 1: apply HexadecimalPos.Unsigned.of_uint_norm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40	40.047446	10278	3898
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos	40	40.087100	25926	3803
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40	40.062450	18842	4285
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_r	40	13.075139	14437	1056	45	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.009128	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_0_l	40	0.009278	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.RabsLUB	40	40.077919	24746	2778
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_r	40	40.028461	5425	2600
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.061717	18437	3170
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.033503	9	4	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P16	40	40.066436	21646	2231
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.027648	7	3	0.2.2	synth with cache (only 1: unfold permutation; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.043969	13198	2925
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.034855	5	5	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_nonneg	40	40.070432	25980	3002
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rle_pow	40	40.049531	12423	3539
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.selectOneInSum	40	40.107275	38626	3138
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40	40.043694	10927	1814
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_le_iff	40	0.398619	94	34	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: now subst; only 1: destruct 1; only 1: Z.order').
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.lt_le_iff	40	0.010270	2	2	0.0	synth with cache (only 1: intros a; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig	40	40.322792	11448	1396
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_0_iff	40	1.571393	1286	248	0.1.7.8	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40	40.098810	36138	1465
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.059190	12156	1084
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.134582	52487	2716
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40	40.114306	24463	3357
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_revapp	40	40.036501	12395	852
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_R0	40	40.045965	14495	2109
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	40.086537	28434	3169
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.049950	11	7	1.0.0.0.0	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.932860	58	24	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_hex_int_iter_D0	40	40.045353	12451	2821
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang	40	40.054313	12344	4944
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_neg	40	6.259290	5696	738	3.7.0.11.4.1.0	synth with cache (only 1: intro n; only 1: split; only 1: intros H; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order; only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_r	40	40.040789	6201	2285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.Nadd_simpl	40	3.340699	1392	125	1.0.0.41	synth with cache (only 1: destruct n; only 1: N.nzsimpl; only 1: now N.nzsimpl'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.065265	4481	1014
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.insert	40	40.197886	81889	2171
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_eqn	40	2.006770	624	197	16	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40	40.087722	31882	3326
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P3	40	40.214079	20679	2529
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_lt	40	40.102866	19799	2722
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.Rabs_def1	40	40.043198	7645	1684
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_rat	40	40.053643	5495	1621
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_inj	40	40.047347	9705	3729
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	14.351768	9878	924	0.0.0.3.1.1.0.0.2.22.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: intros; only 1: trivial; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_atan	40	40.040984	11967	2869
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.077799	21898	2096
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P22	40	40.065692	18461	3022
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40	40.062858	12259	1188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40	40.068160	22561	2020
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.118838	45190	5074
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_eqn	40	40.039228	6292	195
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40	40.027422	6965	2480
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.064605	18395	1514
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	40.030702	6917	661
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_plus	40	40.041304	11193	2346
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos	40	40.058777	20252	2172
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.043499	13828	1956
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_Cauchy	40	40.088761	29344	5273
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_proper	40	40.317874	9797	1106
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r	40	19.657275	3725	613	0.15.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_mult_comm; only 1: apply CReal_inv_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_l_sym	40	0.032789	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_sym	40	0.033334	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_r	40	0.026647	3	2	0.1	synth with cache (only 1: intros; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.020507	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.NoDup_permut	40	40.076456	23082	4405
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40	40.018227	4505	965
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_2PI3	40	40.059097	16437	1871
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_In_In	40	0.463390	62	16	3.0.2	synth with cache (only 1: intros l1 l2 e; only 1: do 2 rewrite multiplicity_In; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	40	40.069208	23373	3874
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40	40.055944	3117	1759
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40	40.073441	22649	2308
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.of_to	40	40.083671	29885	3158
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow1	40	35.846593	12738	3348	3.0.3.2.1.12.2.3	synth with cache (only 1: intros [| n]; only 1: auto with real; only 1: pattern 1 at 1; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rle_abs	40	40.076196	20377	6279
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	40.068709	24439	2172
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40	40.052532	13461	3400
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.068807	23707	3159
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rcomplete	40	40.052788	14300	2895
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRposPartAbsMax	40	40.036667	8683	1836
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	40.072650	19075	4045
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40	40.038170	11220	2404
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P17	40	40.065698	21227	3265
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P18	40	0.055813	11	6	0.0.1.0.0	synth with cache (only 1: induction l as [| r r0 H]; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_scale	40	40.056496	18685	2512
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.splitSum	40	40.054282	15908	1693
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.064602	20691	3225
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above	40	40.089927	34782	2431
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	40.050686	14923	1698
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.284215	123394	3801
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40	40.139010	16714	3124
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	40.120066	27060	4100
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.010311	3	2	1.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.026198	1	1	0	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_sym	40	14.743652	3306	1431	0.1.2.0.1.10.0	synth with cache (only 1: intros; only 1: apply CRmult_morph; only 1: rewrite CRabs_minus_sym; only 1: unfold CRminus; only 1: rewrite (CRplus_comm x y); only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.double_norm	40	40.067848	18964	4635
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40	40.026273	4396	3049
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_le	40	40.077158	15037	1530
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.060712	20819	2987
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_assoc	40	40.047109	8249	1920
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	0.298485	92	10	0.13	synth with cache (only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0.019407	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.011771	3376	323
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.list_to_heap	40	40.251266	108897	2338
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_rev	40	40.043334	12835	1780
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.130484	51469	3103
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	2.330319	1246	155	11.8.3	synth with cache (only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0.033387	38	4	10	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	4.779838	1953	434	0.0.0.3.0.0.0.0.0.1.0.0.1.2	synth with cache (only 1: destruct z; only 1: intros Hb; only 1: simpl; only 1: easy; only 1: destruct p; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: auto; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	4.805549	1715	337	18	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0.170914	14	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.047275	15	5	3.0.2	synth with cache (only 1: repeat red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0.143790	10	3	2.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0.142028	64	8	12	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0.071306	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.073378	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.128286	3	2	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0.059597	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.051813	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_sqrt	40	40.031175	8377	2477
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_mult	40	40.058397	6758	1196
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P4	40	40.122960	30290	4207
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.887137	116	44	0.1.2.0.6	synth with cache (only 1: intuition; only 1: generalize (F.equal_iff s1 s2); only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40	40.108607	10153	1923
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0.076686	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0.059598	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.062370	17096	4689
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0.184737	12	5	2.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_pos	40	40.076641	23862	3245
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_opp	40	40.045058	14069	2050
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40	40.067126	4447	1571
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40	40.052486	10593	5561
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40	40.066716	11260	1224
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40	40.203579	86720	4616
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.055382	17896	2287
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_succ	40	40.080696	27665	3581
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P23	40	40.047117	14923	3141
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.093971	32547	2585
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	40.065336	21678	868
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.127996	8778	1577
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.057948	17097	2093
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq	40	40.075778	21923	5283
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.045921	12216	3659
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ne	40	40.054084	15541	3944
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_refl	40	40.869229	12280	1187
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.094823	15	14	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.009505	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.cos_5PI4	40	40.040023	8395	2486
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_cons_In	40	40.106081	38419	4176
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.018905	399	108	1.5.4	synth with cache (only 1: intros r1 r2 H H0; only 1: subst; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40	40.054117	18307	3982
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less	40	10.646794	2813	603	0.1.0.0.0.1.0.1.2.3.5	synth with cache (only 1: intro; only 1: intro; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.027127	6851	2353
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_pos	40	40.081513	24112	2381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.to_of	40	40.122843	46686	2888
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_Rabs	40	40.063986	16869	5335
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_le	40	40.058061	16812	2603
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	40.088381	31506	2282
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40	40.046385	11772	3046
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_mult	40	40.064593	19381	5450
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rrepr_morphism	40	40.127373	53757	804
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40	40.062801	16833	3645
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.037434	4	4	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40	40.051032	16613	2637
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P19	40	40.112921	40297	4117
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_const	40	40.105997	43813	2634
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_maj	40	40.600442	45627	1919
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40	40.041799	8195	4477
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above_same	40	40.120169	23461	1885
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.031936	7278	1222
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.102995	36189	3148
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.101535	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40	40.145960	22705	2844
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_plus	40	40.023154	4251	1998
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.of_hex_int_double	40	40.081618	27161	3373
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv	40	40.060084	14885	4960
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zsor	40	40.061855	21091	3014
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.061069	17654	3498
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_l	40	40.165028	2434	411
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.heap_to_list	40	40.192279	75567	1963
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40	40.279840	121715	2665
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.043922	14327	2445
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_alt	40	40.069548	19283	4318
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	40.179702	30424	1783
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.677043	264	45	1.0.9	synth with cache (only 1: intros a; only 1: zify; only 1: apply NZ_to_Z_mod).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.769749	284	97	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: rewrite elements_Empty in H; only 1: rewrite elements_iff in H0; only 1: rewrite InA_alt in H0; only 1: destruct H0; only 1: rewrite H in H0; only 1: destruct H0 as (_, H0); only 1: inversion H0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.081011	13452	2351
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P5	40	40.075403	20842	4762
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	40.053320	9955	639
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40	40.065622	19563	1890
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_def2	40	40.150278	16989	1606
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone	40	40.063362	20478	2658
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.759411	31	8	0.0.6	synth with cache (only 1: destruct (mem x s); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_atan	40	40.029390	7243	2509
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40	40.075985	26577	1148
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0.739309	38	12	1.0.4	synth with cache (only 1: generalize (mem_iff s x); only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	40.075136	22461	1433
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.638025	20	5	0.3	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.094469	32375	5407
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	6.251958	4845	472	7.5.18.0.6	synth with cache (only 1: intro n; only 1: unfold Same_set, Included, mkEns, In; only 1: repeat split; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_to_lu	40	40.097457	36784	3235
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.034023	7817	3204
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0.682088	23	8	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P9	40	40.066655	19522	2482
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.568356	45	9	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	40	40.102215	31978	2185
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power	40	40.042571	11896	2390
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40	40.019055	5014	611
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2a	40	40.054792	15506	2226
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_mult	40	40.042510	10242	4444
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_lt_trans	40	40.376574	19039	2076
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_5PI4	40	40.045622	10942	2681
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_nil	40	40.084087	25283	2977
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.063336	18506	2747
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.067703	17147	3072
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40	40.059605	19722	3392
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40	40.118377	49074	1892
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.078808	23645	2710
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.to_int_inj	40	40.093922	34215	2456
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	40	40.065794	15043	5847
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.054029	14916	2925
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	40.059278	13816	3555
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.048837	16037	3099
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	1.138624	366	106	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalConstructiveReals.Rabst_morphism	40	40.126375	52224	648
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	2.430018	922	292	0.0.0.1.0.0.3.5.1	synth with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: auto with real; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	40	40.059283	14770	3409
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.072620	26941	2282
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P20	40	40.095348	32652	3828
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P21	40	0.021843	4	3	0.1.0	synth with cache (only 1: intros a b [=]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.Rcv_cauchy_mod	40	40.058489	21664	2654
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_lt	40	40.156433	55470	3570
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P22	40	4.179321	1723	329	0.1.5.3.10	synth with cache (only 1: intros l H; only 1: elim l; only 1: easy || now destruct 1; only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40	40.069962	20063	3864
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qred_abs	40	40.104590	34749	2439
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.555989	303	46	1.8.3	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	0.250027	10	5	0.1.0	synth with cache (only 1: unfold create; only 1: intros m a b Ha Hb; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_asym	40	40.819612	21478	1827
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.043045	12149	2094
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.088543	15123	1644
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40	40.076457	19940	2909
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.038951	27	8	5	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0.034578	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0.053582	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0.017189	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0.035370	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0.060538	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.027446	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.018075	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0.042444	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.042858	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40	40.063618	17876	3531
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.091505	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0.033607	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.030302	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.159565	20	10	0.0.0.0.4	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0.049347	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0.044590	5	3	0.0.2	synth with cache (only 1: intro n; only 1: intros g_eq; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.060488	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_left	40	40.025202	4386	2318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalZ.double_to_hex_int	40	40.102424	35073	3501
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv2	40	40.046836	10995	3312
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZSORaddon	40	40.043128	13809	3059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.677486	16103	914
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRingExt	40	40.129372	14918	2396
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Heap.defs.treesort	40	40.147215	21508	1109
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	40.125646	28028	3048
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_rev	40	40.059404	16553	3761
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40	40.131679	43186	3509
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	11.044842	3202	572	10.3.1.0.0.1.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.074538	8919	2514
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_case	40	40.166188	67289	3388
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_carac	40	40.052772	10820	4918
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_morph_Proper	40	40.029590	3890	1252
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40	40.070128	25812	1209
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult	40	40.096779	12809	3662
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40	40.059084	18264	3144
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_increasing	40	40.033420	9287	2861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.057703	19667	1301
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.055998	17280	2680
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_revapp	40	40.027857	6772	917
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.071759	24699	4183
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.119717	25116	2958
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	40.080157	2524	473
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P25	40	40.033104	7591	3416
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	40	40.113301	42732	2720
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0.580202	39	14	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0.217441	5	2	0.3	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qinv_power_positive	40	40.184232	12548	1628
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2a_cos	40	40.045158	11257	2532
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.595851	21	13	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.630716	28	6	0.3	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZNpower	40	15.604395	4489	1755	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech9	40	40.065634	20345	3146
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40	40.041012	7454	932
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	40.052472	12782	1812
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_le_trans	40	40.094343	15780	1686
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.085063	25860	4383
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.209193	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.044662	3	3	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_r	40	40.056800	5734	1228
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.inv_sqrt	40	40.086877	31058	2986
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.061304	20361	3590
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.357248	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40	40.031971	3794	1730
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2a_sin	40	4.212381	767	228	0.0.4.0.0.1.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: intro H1; only 1: rewrite double; only 1: rewrite <- H1; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40	40.050456	11674	2336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.to_int_pos_surj	40	40.086890	25669	5052
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.053105	20132	1603
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40	40.068103	27388	522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40	40.061153	16452	3549
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	40	40.079653	25968	4023
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40	40.070474	17321	2909
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_length_1	40	8.140124	6386	876	0.22.4.2	synth with cache (only 1: unfold PermutSetoid.permutation, meq; only 1: intros H x; only 1: apply permut_length_1; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40	40.136190	32230	2148
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_opp_l	40	2.645608	697	361	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_growing_transit	40	40.071596	26509	3049
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_opp_r	40	1.329588	341	182	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs	40	40.203955	8316	360
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P24	40	40.068841	18191	3153
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	27.621124	7684	1116	0.20.4.1.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: Z.nzsimpl; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_canon	40	40.143067	54810	1859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40	40.084002	23928	2441
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_irrefl	40	40.092736	30973	6286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	40	40.216292	92637	1188
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.055830	12150	2283
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	40.087525	23391	1149
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0.098991	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0.662980	41	20	0.1.0.0.0.0.2	synth with cache (only 1: split; only 1: do 2 rewrite F.remove_iff; only 1: intros; only 1: fsetdec; only 1: do 2 rewrite F.remove_iff; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.455416	19	5	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.519371	20	9	0.4	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.203977	4	2	1.1	synth with cache (only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_right	40	40.029622	5488	2839
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CR_of_Q_abs	40	40.030071	6858	1430
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRle_abs	40	0.018113	3	3	0.0.0	synth with cache (only 1: intros; only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]; only 1: apply H1, CRle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_refl	40	6.849363	3077	402	2.9.9.1.0.6	synth with cache (only 1: intros; only 1: apply CRealLe_not_lt; only 1: intros; only 1: Z.nzsimpl'; only 1: ring_simplify; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_refl	40	1.423252	246	34	0.0.0.0.12	synth with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40	40.292067	51530	1718
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRing	40	40.315431	4802	2255
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40	40.112282	25358	2994
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double_gen	40	40.070719	23854	2303
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rle_Rpower	40	40.051267	14377	3097
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.124830	52064	1626
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_wd_Proper	40	40.063380	21639	2128
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_compact	40	40.081152	25109	3897
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_morph_Proper	40	40.027208	2299	700
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_pos	40	2.273047	916	182	4.0.0.3.1.4.0.1.1	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: ring; only 1: simpl; only 1: unfold Qred, Qeq in *; only 1: simpl; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.097673	26652	2801
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_neg	40	0.158074	35	21	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart	40	40.128923	23353	2617
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.079660	31727	439
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_0	40	40.585952	23317	1727
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40	7.539517	830	523	0.0.2.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: apply H0; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40	40.068194	6911	129
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	40.123615	32785	4503
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40	40.055648	16913	4442
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P11	40	40.038585	11610	2320
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_uint_acc_spec	40	40.034483	7605	1600
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	2.510840	263	165	0.8	synth with cache (only 1: intros EQ; only 1: apply CReal_isRingExt).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_sym	40	10.765883	5026	684	3.0.3.0.7.8	synth with cache (only 1: intro n; only 1: repeat split; only 1: destruct H; only 1: trivial; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P26	40	40.091704	25467	3480
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.054113	15537	2541
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qinv_power	40	40.056857	20584	1589
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qsor	40	40.058330	18901	583
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zeval_expr_compat	40	40.089518	34358	2521
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	40.039869	2224	783
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech13	40	40.141251	55682	3951
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.653376	52	16	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_trans	40	40.185946	13001	1476
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_integral	40	40.042187	11299	1677
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_nonneg	40	9.236104	3444	394	0.0.0.0.14.13	synth with cache (only 1: intros (c, Hc); only 1: simpl; only 1: unfold Qle in *; only 1: simpl in *; only 1: Z.nzsimpl; only 1: Z.order_pos').
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.024783	2235	662
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Zabs_Qabs	40	0.045120	13	5	1.2.1	synth with cache (only 1: intros p Hp; only 1: simpl; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_cauchy	40	40.066483	22064	3723
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.045191	9202	2476
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0.908149	66	15	0.0.0.9	synth with cache (only 1: split; only 1: intros; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_derive	40	40.101021	38480	3599
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.056112	13964	2314
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_2a	40	40.047453	13187	2576
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.143117	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_neg	40	0.090520	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40	40.118738	9449	1500
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.of_int_norm	40	40.093071	27467	4581
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_identity	40	40.073341	25578	1958
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40	40.057499	14064	3311
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	40.093999	32697	3580
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0.007723	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.159645	43	11	1.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.065650	12464	1779
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_length_2	40	40.071952	22430	3001
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.069958	19260	2790
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	7.455522	13128	581	6.0.13.18.0.80	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.286532	178	21	11.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.008466	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	0.009592	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.628296	69	50	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.280620	94	16	8.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_opp	40	40.067466	18902	2936
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.growing_ineq	40	40.176638	34227	3323
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.698189	68	52	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0.006190	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qopp_lt_compat	40	40.075124	22849	2292
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_unique	40	40.226053	62299	4168
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P25	40	40.089910	29970	4335
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40	40.131318	51870	4056
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_Z	40	2.272297	931	129	5.0.13	synth with cache (only 1: simpl; only 1: intros; only 1: apply Z.div_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.041949	12020	1694
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_opp_opp	40	4.335081	1857	643	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1	synth with cache (only 1: destruct a, b; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.179645	67914	2682
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40	40.036956	11200	1137
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.100883	40373	2053
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	22.708346	1336	812	1.2.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40	40.041260	5783	2694
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	40.073639	7498	2692
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.124900	7	5	1.0.1.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: fsetdec; only 1: do 2 rewrite F.union_iff; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_contract	40	40.042831	9976	2524
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.060475	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_pos	40	40.033808	7105	2285
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0.096030	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.093639	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40	40.035246	7134	585
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40	40.052017	16535	2653
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	6.869488	1330	514	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	12.282011	6277	536	1.1.0.30	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_opp	40	26.285769	12951	2473	13.1.0.8	synth with cache (only 1: red; only 1: simpl; only 1: intros (n, d); only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double	40	40.058620	16021	1759
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_succ_double	40	0.007910	1	1	0	synth with cache (only 1: apply of_lu_double_gen).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_lt_2	40	40.126850	32210	2768
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.128792	48683	2319
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	5.779841	1340	100	0.1.1.30	synth with cache (only 1: intro y; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0.133098	66	10	2.9	synth with cache (only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.prolongement_C0	40	40.080235	25437	2935
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_double	40	40.062803	16381	2425
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zmult_power	40	40.085852	22276	1123
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart_zero	40	40.130584	20666	1559
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40	40.161040	67541	3306
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	0.438430	120	25	10	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.014270	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_eq0	40	40.048315	16384	2122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.045563	11867	2047
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.090170	22881	2483
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.046066	14181	2269
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	5.405993	631	128	3.0.6.5	synth with cache (only 1: split; only 1: intros H; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	2.328410	3203	169	50	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.623662	76	56	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_dec	40	40.092302	32257	2758
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P27	40	40.039483	9439	3493
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR2	40	40.072820	17820	2045
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P12	40	40.094418	14671	2213
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_uint_alt	40	40.065744	15782	3395
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qdiv_power	40	40.121018	12085	2058
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QSORaddon	40	40.029737	7656	801
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zeval_formula_compat'	40	40.093290	33613	4440
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	28.252235	2694	2033	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_ineq	40	40.073292	22806	4278
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	0.886856	846	91	1.6.18	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QNpower	40	0.017649	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	40	40.059321	19892	3320
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.014581	3	2	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.006672	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	40	40.053182	15949	4577
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.086276	26085	2194
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.041372	11237	2932
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_trans	40	40.330323	11286	1306
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.034654	4379	709
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	40	0.736971	245	79	5.5	synth with cache (only 1: intros a m Hm; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	6.799455	1801	913	0.13.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.030587	3242	351
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.078936	26835	1149
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.593408	71	54	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.063285	14	5	4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_0	40	41.097509	27302	1293
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	1.111739	1291	82	41	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalN.Signed.of_inj_pos	40	40.093259	33394	2036
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_identity2	40	40.067982	21429	3357
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	27.427064	1474	960	1.2.0.0.1.0.0.0.0	synth with cache (only 1: intros x y H; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40	40.044815	9849	3389
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.047067	12333	2137
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.075009	22600	3746
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40	40.056888	12765	3199
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permut_length	40	40.120591	30707	3814
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_below	40	40.116270	45149	3269
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	10.638555	464	83	0.0.3.0.1.9	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intros; only 1: rewrite union_spec; only 1: rewrite remove_spec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0.051915	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0.044690	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_eq	40	40.105002	34255	4005
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.077831	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P26	40	40.056290	15677	4301
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.089119	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40	40.048875	15405	1576
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0.083762	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0.207829	4	2	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_Z	40	40.096879	31416	2764
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.196680	4	2	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_sgn	40	40.094920	25413	1549
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.173610	8	2	0.6	synth with cache (only 1: intro Dec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_pos	40	40.062272	20002	1564
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0.559008	39	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0.106510	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0.602187	11	3	1.3	synth with cache (only 1: intros; only 1: intuition fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0.622452	16	4	0.3	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.103778	28054	3037
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40	40.033632	5567	805
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0.658070	29	6	1.3	synth with cache (only 1: generalize (F.mem_iff s x); only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	2.123876	1073	280	0.7.0.5	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_appart_0	40	40.025493	4408	1046
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub_lt	40	40.080203	7080	1063
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.048937	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.093146	3259	798
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	7.406280	991	51	0.0.5.35	synth with cache (only 1: intro n; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40	40.036704	11492	1965
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40	40.038593	6644	1343
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40	40.069093	17507	3017
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_triangle	40	40.049142	14027	2264
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0.813291	51	9	0.0.9	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_to	40	40.084417	29039	2859
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.succ_double_alt	40	0.019379	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qmult	40	0.339243	147	47	2.0.2.0.1.0	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_ext	40	40.032778	8423	2749
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40	40.181948	73963	3080
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_cv	40	17.837942	11947	844	25.0.1.24	synth with cache (only 1: intros H; only 1: intros; only 1: destruct (series_cv_abs u cau); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub	40	40.119840	12554	1665
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.102881	21858	1324
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.055972	15292	3338
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_inv	40	40.092095	27446	3246
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_1	40	40.040293	12477	1728
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	40.102547	36852	1756
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.073515	24429	2922
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_eval_compat	40	40.063882	12706	2246
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	40.021296	2338	425
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40	36.298611	4439	3198	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_neg	40	32.360153	15551	1726	0.0.0.5.1.3.10.14	synth with cache (only 1: unfold tan; only 1: intros n; only 1: rewrite <- cos_sym; only 1: unfold Rdiv; only 1: rewrite sin_antisym; only 1: unfold sin; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.049744	15653	3198
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.078761	22566	2049
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_to	40	40.114783	42429	3164
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qinv_power_n	40	40.051219	16043	2582
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_lt_trans	40	40.086000	28060	2083
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40	34.106969	2707	1985	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P13	40	40.023783	5340	2668
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zeval_nformula_dec	40	40.113005	40005	3177
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_opp	40	40.109218	37694	5422
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_compat	40	40.161654	16100	1416
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	12.465543	732	172	1.2.0.10.1	synth with cache (only 1: intuition; only 1: split; only 1: rewrite inter_spec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_continuous	40	40.076204	25330	4930
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.042705	8909	2705
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40	40.056121	16606	2394
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	5.813793	324	87	1.1.1.1.6	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intuition; only 1: clear H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0.867727	29	11	0.5	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	40	40.049020	18212	2503
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.018997	2	2	0.0	synth with cache (only 1: intros r1 r2 H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.026052	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.039127	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_trans_flip	40	40.260646	11730	1399
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0.044883	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.070741	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0.046963	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0.046446	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0.068298	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.062993	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_refl	40	0.109919	15	8	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0.047468	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0.059070	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0.047663	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	0.112759	15	3	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.094035	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0.069012	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.060855	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0.089121	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0.091740	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0.084988	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.106493	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.057601	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0.525703	21	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	40.018994	1723	375
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0.636631	23	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	40.080296	24013	2556
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0.588527	39	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	40	3.524533	570	309	7.1	synth with cache (only 1: intros m n p; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_iff	40	40.079627	28702	2930
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40	40.054438	14831	3280
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40	40.073797	22805	3524
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40	40.050201	2849	1208
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	40	40.053404	14355	3114
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40	11.405361	1143	913	0.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	40.057330	11406	3861
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.113972	29101	3229
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	6.444913	680	93	3.4.0.4.15	synth with cache (only 1: intros EQ; only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.038155	9	5	3.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.143989	9	5	1.3	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.033058	26	8	2.3.1	synth with cache (only 1: split; only 1: split; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.048941	9	5	3.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.198158	9	5	1.3	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_above	40	40.121145	46517	3444
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0.172642	113	30	4.3.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros E; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P29	40	40.041175	8825	4421
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.154166	61648	4856
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40	18.466249	3038	1913	0.0.1.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct (mem x (diff s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.020726	6	3	0.0.3	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with fset).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_le	40	40.057336	13976	1327
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_sgn2	40	40.059207	23367	1291
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_neg	40	40.062771	13172	6664
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	2.150329	1562	188	19.17	synth with cache (only 1: intros l; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.037059	6505	1757
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40	40.509779	42322	661
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_sym	40	21.347324	4865	559	6.2.3.13	synth with cache (only 1: intros n H1 H2; only 1: red; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_mult	40	40.046285	13214	2328
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.091024	29376	4808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.051644	7145	1942
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40	40.062009	19476	3135
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	12.794608	10551	1151	2.23.7	synth with cache (only 1: intros Ha Eq; only 1: Ndec.eqb2eq; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_nonneg	40	11.485273	7316	613	0.1.0.0.6.7.10.46	synth with cache (only 1: eapply Qle_trans; only 1: auto with *; only 1: apply Qle_minus_iff; only 1: simpl; only 1: rewrite <- Qle_minus_iff; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0.006230	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40	40.051753	9721	2988
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.double_succ	40	40.074301	22550	3062
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.073397	26002	2091
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_assoc	40	40.035776	10137	1494
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_imp	40	40.034558	8937	2994
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.061582	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	2.466338	1162	276	7.0.1.0.1.0.1.0.0.2	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	0.616064	615	69	2.12.9	synth with cache (only 1: intro; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_opp	40	40.047029	13690	2097
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_glb	40	40.043884	7969	946
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40	40.062848	20864	1238
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.042697	8885	3510
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_rat_cv	40	40.436535	31705	2290
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_tan	40	40.035091	10467	2312
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.068503	21828	3131
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40	40.038801	11869	2338
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_minus	40	40.039250	9418	2129
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	40.089549	19145	2713
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.062242	4376	848
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_lu_sixteenfold	40	40.060306	14309	973
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_plus_positive	40	40.073182	23579	4692
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_le_trans	40	40.148358	22539	2933
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.035697	8428	3437
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZWeakChecker_sound	40	40.354895	40617	3511
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_ineq	40	40.043547	10168	4490
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.078173	26569	2346
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.092330	35209	4171
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.deg_rad	40	40.049297	10368	2123
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40	40.018019	2548	942
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40	40.168427	13823	2858
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	40.053055	2107	563
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0	40	40.214874	101730	1041
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_is_canon	40	40.131526	49264	3755
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0.539574	18	6	0.0.6	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	0.705181	166	36	0.1.7.1	synth with cache (only 1: generalize (F.mem_iff s x); only 1: red; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40	40.045661	10886	3469
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	40.057982	2638	1102
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40	40.052791	16140	2521
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	0.068670	8	4	1.3.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.661633	60	17	0.0.9	synth with cache (only 1: intro Streicher_K; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.776447	698	123	2.6.5	synth with cache (only 1: intros x y z H1 H2; only 1: inversion H1; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.277052	151	19	9.1	synth with cache (only 1: intros n; only 1: now BinInt.Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	0.060933	18	4	0.6	synth with cache (only 1: intros n m; only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	40	40.086784	28125	3999
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40	40.024826	4299	3757
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.020886	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	40	40.044966	12187	2404
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.069745	23	8	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.014271	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	0.941555	389	91	3.1.0.2.1.0.0.5	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	40.044663	2353	1684
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	2.687392	209	90	4.1.2	synth with cache (only 1: intro r; only 1: rewrite CReal_mult_comm; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40	40.094783	36214	3175
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.315025	10	5	2.0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.572367	109	49	0.8	synth with cache (only 1: intros H3; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	40.098090	33034	2440
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0.040997	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0.042517	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0.027311	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0.027913	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0.044675	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_down	40	40.505383	45520	3898
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0.053046	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0.088088	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0.035502	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0.104094	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0.094640	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_ceiling	40	40.039448	8864	2116
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_pos	40	40.069290	22210	4525
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.083684	29253	2080
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qsrt	40	40.048694	6931	1175
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40	40.060267	11409	1990
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40	40.060020	22280	625
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.121913	47015	3729
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	10.091733	547	304	1.0.7	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0.257641	8	4	0.2.1.1	synth with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.318103	31	15	1.6	synth with cache (only 1: simpl_relation; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	13.491891	1670	369	4.8.4	synth with cache (only 1: intros P1; only 1: intros a; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_trans	40	40.477585	11683	1935
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40	40.182948	68467	5631
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_lt	40	40.171110	30232	1609
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	2.028169	509	104	0.0.3.2.11	synth with cache (only 1: constructor; only 1: fsetdec; only 1: generalize (F.mem_iff s x); only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40	40.043715	11121	3140
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.215064	84883	2633
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	18.118374	10339	1243	1.0.0.28	synth with cache (only 1: intros F l1 l2; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_lu_succ	40	40.076770	23903	3725
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_S	40	0.034786	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qminus	40	40.060060	17807	1243
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_0	40	0.008355	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40	40.059814	12792	2876
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_min_mult_neg	40	40.047417	13911	1482
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dln	40	40.029800	6864	3029
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40	40.082674	19169	2159
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.016843	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.017226	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.007036	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.199546	176	16	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.177446	65809	1166
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	22.763351	19791	2597	0.3.7.0.25	synth with cache (only 1: intros a b; only 1: unfold eq, Equal; only 1: split; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.033213	8	2	6.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_scale	40	40.112287	10721	2022
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.009138	2	2	0.0	synth with cache (only 1: unfold In; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.015319	5	2	3.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.empty_1	40	0.009443	6	1	5	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40	40.097719	26723	2105
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_l	40	40.029029	2817	932
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_exists	40	40.079077	25442	3506
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_inv	40	40.026935	6929	2244
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.269572	111909	2263
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40	40.124227	43071	5032
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit	40	41.611705	20376	641
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.linear_reduce_aux	40	40.077148	28753	3073
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	1.546177	1215	222	21	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P30	40	40.059050	20205	2280
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_3PI2	40	40.047426	10580	2458
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_opp	40	40.141384	28764	3377
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_trans	40	40.141361	25887	3221
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.archimed	40	40.564687	46705	1424
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P15	40	40.041794	12179	2151
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_minus	40	40.039098	8387	4329
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_sub	40	40.108542	43835	3490
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_lu_0	40	40.043037	10511	2630
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.198036	44697	3483
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40	40.063281	21093	3447
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.034947	5684	1632
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	5.355104	4762	475	0.24.4.14.1	synth with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.102273	34	12	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40	14.527570	3589	975	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: destruct (in_inv H0); only 1: congruence; only 1: generalize H1; only 1: apply IHm2; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: generalize H0; only 1: apply IHm2).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.991402	216	87	4.1.0.1.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40	40.018359	3155	634
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40	40.064049	13555	2798
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.094663	33693	3961
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_eq_compat	40	0.090697	23	9	2.0	synth with cache (only 1: intros x y H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0	40	0.016816	9	2	2	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_decomp	40	40.129984	50775	3506
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40	40.052657	13224	3533
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40	40.064985	17455	3529
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	40.041613	3581	529
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.057287	15602	4188
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40	40.039491	13100	1986
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.038785	6	3	0.1.2	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.015867	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	0.009299	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	0.119421	16	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40	40.110299	40402	3881
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40	40.162842	61831	4138
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_up	40	40.301576	27635	2438
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_floor_ceiling	40	40.123545	12384	1338
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.050565	13447	3144
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	40	9.547521	3350	341	0.22.9	synth with cache (only 1: intros m Hm; only 1: subst; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.182176	27	21	0.0.2.0	synth with cache (only 1: intros Ha Hb; only 1: apply Z.rem_bound_pos; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.229556	17	5	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.076536	16	6	0.2.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.134549	24	10	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.135020	21	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.126555	27939	3061
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qsft	40	40.051419	7779	1462
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qpower_theory	40	2.389837	1141	75	2.0.0.0.0.39	synth with cache (only 1: constructor; only 1: destruct n; only 1: red; only 1: simpl; only 1: trivial; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40	40.057790	18226	943
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex1	40	0.009864	1	1	0	synth with cache (only 1: exact Qmult_plus_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex2	40	0.012612	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40	40.160656	21813	2882
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex3	40	0.128570	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex4	40	0.012279	2	1	1	synth with cache (only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex5	40	0.016227	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex6	40	0.020178	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex7	40	0.058129	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex8	40	0.026675	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex9	40	0.030365	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.compare	40	40.072937	26925	1532
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.In_compat	40	0.294877	61	21	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40	40.077495	11072	1620
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CReq_relT	40	40.534116	12045	1112
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40	40.116784	41780	3867
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_def1	40	40.054925	14910	1477
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	40.032560	5714	1126
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	40.069890	22213	765
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle	40	40.074737	23184	2662
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	40	40.061928	18028	3863
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_lhex_tenfold	40	40.038864	10591	1902
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qle_Qabs	40	40.092834	33346	3657
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRlt_max	40	40.073821	20078	3690
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.028905	6747	2650
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	40.096442	35268	2697
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	0.020066	6	3	3.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40	40.279244	119554	3172
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_plus	40	40.058847	14841	1894
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.mem_node	40	40.078544	24267	4332
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	40.112051	29513	1636
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_r	40	40.064685	3427	1402
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.085560	27648	2679
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_atan	40	40.056505	12254	2509
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.097266	30094	5314
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit_cv	40	40.192722	19067	2596
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.linear_reduce	40	40.075847	27164	3442
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.053951	18281	3349
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2PI	40	40.042387	9972	2776
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_minus_positive	40	40.048896	13980	2826
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_trans	40	40.032832	6757	2694
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P16	40	40.049476	11072	2697
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	13.432614	9631	1294	1.1.1.1.0.0.25	synth with cache (only 1: intros x y z; only 1: intros; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	40	40.082464	25713	4076
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_add	40	40.077213	29413	2340
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu_sixteenfold	40	40.050082	3189	801
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	0.760243	434	111	12.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QWeakChecker_sound	40	40.462830	27716	2057
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.completeness	40	40.117387	47666	2393
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40	40.066575	4040	2191
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40	40.060965	19916	3418
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	40.081902	25210	4756
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.062010	13762	2937
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_morph	40	18.814759	3872	1296	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros R x y H x0 y0 H0; only 1: destruct H, H0; only 1: destruct (CRltLinear R); only 1: split; only 1: intro; only 1: destruct (s x y x0); only 1: assumption; only 1: contradiction; only 1: destruct (s y y0 x0); only 1: assumption; only 1: assumption; only 1: contradiction; only 1: intro; only 1: destruct (s y x y0); only 1: assumption; only 1: contradiction; only 1: destruct (s x x0 y0); only 1: assumption; only 1: assumption; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40	40.072392	18654	2670
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_involutive	40	40.132134	35083	4139
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P4	40	13.887326	9176	1411	4.0.7.2.9.1	synth with cache (only 1: intros; only 1: intro H15; only 1: intros z0 H7; only 1: unfold intersection_domain; only 1: intro Hyp_F_NE; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40	40.068873	21364	3307
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40	40.051897	13105	3406
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	40.018544	2654	1555
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.067918	21114	3892
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.048391	15813	1711
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	0.008921	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40	40.055337	18816	2221
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40	40.035522	8808	1615
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmax_mult	40	24.575673	3281	1199	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros R p q r H; only 1: unfold CRmin, CRmax; only 1: setoid_replace (r * q - r * p) with (r * (q - p)); only 1: rewrite CRabs_mult; only 1: rewrite (CRabs_right r); only 1: rewrite <- CRmult_assoc; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: do 2 rewrite <- CRmult_plus_distr_l; only 1: reflexivity; only 1: reflexivity; only 1: exact H; only 1: unfold CRminus; only 1: rewrite CRmult_plus_distr_l, CRopp_mult_distr_r; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_le	40	40.138125	55261	4258
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qlt_floor	40	40.039327	12576	986
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.047720	15866	1805
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.127218	24	7	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Remainder_equiv	40	40.049867	15968	2805
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40	40.095863	29714	2894
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	40	2.474386	687	165	2.12	synth with cache (only 1: intros a n; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.017969	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_opp_opp	40	0.386577	44	16	1.2	synth with cache (only 1: intros n m; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40	4.409785	3553	573	0.7.7.3.2	synth with cache (only 1: intros l x e r; only 1: intros y' e'' eqky'; only 1: red; only 1: simpl; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40	40.049031	17415	788
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40	40.057517	17086	2613
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex10	40	40.050439	8846	1558
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qopp_plus	40	0.225928	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Qopp_opp	40	0.195214	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	40	4.847295	2758	567	6.12	synth with cache (only 1: intros a n; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.018998	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_r	40	0.025594	9	3	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.016876	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	40.190688	76706	3848
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr	40	0.019567	3	2	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.016736	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40	40.087481	5663	714
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveAbs.CRabs_def2	40	40.068660	20583	3031
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.029664	3921	764
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40	40.083630	12722	2024
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.103269	11222	1126
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40	40.063011	17954	3513
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_triangle_reverse	40	40.061179	16244	4362
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_lu_0	40	40.060258	15108	2554
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_imp	40	40.030089	7761	2936
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.231931	102531	1944
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.169487	59204	2199
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_minus	40	40.049125	11929	2437
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	40.121426	43061	4197
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower2_Psize	40	40.094160	22187	2894
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_l	40	40.032800	4971	805
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_eq	40	9.896689	3807	1181	1.10.0.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: unfold Rminus; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	40	40.035564	9592	2794
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_eq_0	40	0.167693	24	13	1	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40	40.018468	2631	732
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40	40.202837	79774	3547
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CauchyMorph_rat	40	40.076020	21524	1838
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	18.350817	6283	327	33.15.1	synth with cache (only 1: intuition; only 1: generalize H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P32	40	40.071065	26333	2957
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_2PI	40	40.039449	9380	2724
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_plus	40	40.037451	10950	2295
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_trans	40	40.342824	21501	2521
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.497360	49	27	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.036968	11243	2650
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.073187	29856	2010
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.decreasing_prop	40	40.072291	22253	3331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu	40	40.054373	13147	2429
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40	40.128059	49644	2696
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	5.473889	2853	176	38.2	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QTautoChecker_sound	40	40.813553	37600	2289
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp_fwd	40	40.034378	8329	3445
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40	40.270934	118630	3582
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.047063	9	3	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.064726	96	13	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_ext	40	13.906818	3627	1085	0.6.0.0.3.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: generalize H, H0; only 1: clear H0; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40	40.096850	11982	2960
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_morph_Proper	40	40.383904	8050	2095
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_relT	40	7.039227	3106	615	0.0.0.0.0.0.0.0.0.0.0.9.0.0.0.0.0.0.1.3.24	synth with cache (only 1: constructor; only 1: easy; only 1: split; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: red; only 1: intros; only 1: destruct H, H0; only 1: split; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: contradiction; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q2Qc_eq_iff	40	40.060133	17987	2896
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_P6	40	40.108625	27727	3833
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0.009897	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	0.013907	2	1	1	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0.018541	3	1	2	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.015652	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.018864	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.064924	16153	5559
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.357513	24	13	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.103904	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.061761	17559	3390
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	7.305440	7142	284	65	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	0.017171	4	1	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40	40.058278	16895	3720
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	40.028410	1948	1068
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	0.871490	549	40	27	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40	40.123663	46858	4051
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	40.043889	15016	1760
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	40.061558	8547	1216
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0.586536	70	19	7.1	synth with cache (only 1: intros q1 q2 r1 r2 Hr1 Hr2 EQ; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmin_max_mult_neg	40	40.027764	5626	1895
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_abs_cont	40	40.069892	23038	2277
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_lt	40	40.040958	9406	1517
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mod_unique_full	40	40.100147	38158	1966
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.501417	1743	190	23	synth with cache (only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_refl	40	40.060741	20253	1621
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	2.158580	1248	248	13.5	synth with cache (only 1: intros a; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40	40.084148	30165	3224
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	9.691119	3612	727	0.16.5	synth with cache (only 1: intro H; only 1: intros n IH a; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40	40.075643	19243	1548
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.023801	8	1	7	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40	40.050674	8531	1564
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_revapp	40	40.116323	47281	529
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	40.186197	73193	4360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_to	40	40.094225	23720	3708
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_of	40	0.757595	277	73	0.1.10.1	synth with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: unfold N.to_uint, Pos.to_uint; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40	40.116188	12777	2204
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	40.053110	2805	653
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.062666	9631	568
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40	40.057855	13863	3406
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40	40.049995	12405	3299
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qle_condition	40	40.048450	14972	2227
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu_tenfold	40	40.063213	4768	1153
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40	40.096614	32161	5096
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	0.014298	7	2	4.1	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0.007439	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40	40.138063	15206	1218
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_nonneg	40	40.282623	14913	2090
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	40.102479	36989	2503
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_mod	40	40.112953	29082	2752
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_r	40	40.082426	3156	1291
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.040338	11985	2831
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq	40	40.107419	26320	2635
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	40.021204	1842	958
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Qr	40	40.136049	32265	2470
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P33	40	40.125323	26058	2112
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_plus'	40	40.072657	11323	2249
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.045476	8491	2615
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P17	40	40.041045	13002	2420
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.091821	35187	2668
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	40	40.058233	16710	4510
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40	40.130374	46138	6204
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	21.220336	16188	2042	1.0.0.28.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct z; only 1: red; only 1: unfold snd; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp_rev	40	40.063252	20910	3204
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40	40.103101	38813	1986
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	1.882465	953	252	11.4	synth with cache (only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_correct	40	40.060397	18645	2552
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dpower	40	40.033290	9096	2866
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40	40.125582	19849	1917
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_morph	40	40.882295	10482	1523
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_0_l	40	40.133927	16913	2152
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qceq_alt	40	40.093499	30132	3328
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.016257	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcgt_alt	40	1.034258	590	126	1.2.1.11	synth with cache (only 1: unfold Pos.ge; only 1: destr_bool; only 1: symmetry; only 1: apply Z.gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_alt	40	0.029064	17	4	0.2	synth with cache (only 1: intros n m; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	40	40.110676	24157	2916
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40	40.051536	14956	3016
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cleb_sound	40	40.447609	8836	442
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40	40.061969	16176	4103
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def1	40	40.075738	20826	5508
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	40.027375	3138	702
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.074591	21611	289
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40	40.221591	103886	755
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	0.016337	3	2	1.0	synth with cache (only 1: intro; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0.009511	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	40.047298	12637	1716
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveMinMax.CRmorph_min	40	40.057111	15586	4112
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0.023470	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_dist_cont	40	40.050157	12112	1833
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_resp_le	40	40.132940	17820	2681
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_unique_full	40	40.074994	23038	3665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.088669	27	15	5.0.0	synth with cache (only 1: revert n; only 1: intros; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_unique_full	40	0.419310	150	36	0.0.0.0.7	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	40.039345	9952	1092
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcge_alt	40	10.745486	4806	805	1.0.11.11	synth with cache (only 1: intro; only 1: induction p; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	5.833217	3081	422	0.26	synth with cache (only 1: intros m'; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40	40.068812	25212	2383
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	40.058244	17903	2622
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.011154	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_of	40	40.038749	7733	2019
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40	40.042694	13382	1787
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40	40.029066	8798	717
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.009884	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_rev	40	40.112231	42955	670
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40	40.042425	9898	1771
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40	40.124951	46397	3428
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.is_lub_u	40	16.422859	4842	1012	3.5.3.7.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intro; only 1: intro A; only 1: intros n m Hn Hm (q, Hq) (r, Hr); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40	40.098489	32542	1961
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	6.565459	2758	410	2.0.22	synth with cache (only 1: intros x y H; only 1: rewrite add_spec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	40.034240	2057	547
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcle_Qcabs	40	40.087418	27606	4611
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40	40.043032	10350	3495
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40	40.106140	38217	3039
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.123390	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40	40.104181	12205	931
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_diff_Qle_condition	40	40.082400	10150	1183
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.Nadd_alt	40	40.035483	8514	2001
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.031725	7229	2971
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40	40.122830	51460	1084
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	40.163945	64385	3465
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	0.084112	78	17	0.8	synth with cache (only 1: intro a; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40	40.086676	20401	2328
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_eq	40	40.448571	16614	1826
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_left	40	40.056989	5030	1701
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.040961	13218	2792
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_minus	40	0.017255	3	2	0.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_converging	40	40.037230	12051	2203
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_eq_contra	40	0.129027	10	4	3.1.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_not_eq	40	0.189466	34	15	2.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_not_eq_right	40	0.023716	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	40	0.026836	9	3	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_minus_distr_r	40	0.083529	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40	40.035633	1992	915
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Ql	40	40.060079	12018	2764
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P34	40	40.046278	9466	1669
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_mult_positive	40	40.069556	17332	2846
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_period	40	40.052549	14994	2348
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40	36.932047	37345	6211	7.1.12.5.2.0.12	synth with cache (only 1: intro EQ; only 1: split; only 1: destruct (eq_dec x y) as [E| E]; only 1: intuition; only 1: intro; only 1: exact (add_3 E H); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P18	40	40.036635	10186	2440
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.062617	20932	2084
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	14.374688	11416	1088	9.12.15	synth with cache (only 1: intro n; only 1: intros Ha Eq x IN; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40	40.092163	31681	4253
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	18.609606	10244	2411	0.0.1.1.2.0.0.0.5.0.0.0.1.0.0.6	synth with cache (only 1: intro H; only 1: simpl; only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_fwd	40	40.039960	10596	3661
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40	40.049224	14917	2851
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_power	40	40.028065	7142	2492
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_complete	40	40.092821	31894	3976
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40	40.130764	25906	2864
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGt_morph	40	40.359420	8450	1422
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_0_r	40	40.068383	17329	2438
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40	40.078296	22982	4298
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.094784	20410	1651
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40	40.049958	10626	3961
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.099340	31727	5587
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.058597	17	13	1.1.0.0.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	0.020869	6	2	4.0	synth with cache (only 1: intros n m H; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40	40.020863	6240	374
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40	40.088152	27873	4015
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	40.031396	7499	3045
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.062369	11	4	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	32.476782	33959	2354	36.8.10	synth with cache (only 1: intros x y z; only 1: intuition auto; BinNat.N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift	40	40.101154	37865	3525
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.067735	19381	1803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.058488	16089	4335
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_pos	40	40.081780	29141	2464
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.041149	4397	612
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.008643	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0.009662	1	1	0	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.007534	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	4.249267	4497	389	8.28	synth with cache (only 1: intros n m H1 H2; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.009271	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0.009489	1	1	0	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.070274	5	5	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.089842	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.081934	28306	2555
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.036502	3	1	2	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.645893	44	9	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40	40.070694	24540	3457
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_uint_inj	40	40.156760	62495	3615
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40	40.090028	31291	2219
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.revapp_rev_nil	40	40.109375	43814	588
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.036315	7465	2495
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.175646	61419	4672
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.domain_P1	40	40.122031	23858	3176
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.141481	45111	3155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.018417	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.049329	14	4	4.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.069270	11	8	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40	40.115132	40247	3932
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.046960	11277	3431
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40	40.039812	9169	3490
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40	40.055326	8367	2157
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealArchimedean	40	40.131542	48587	1738
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu	40	40.056963	16027	3308
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r	40	40.091651	35028	2933
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.007712	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	40.041069	8645	4425
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40	40.171253	55409	3616
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.077031	24650	3689
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_remainder_maj	40	40.057993	15855	2892
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpow_mod_correct	40	40.065076	22295	1457
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_right	40	40.073101	5206	1981
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_exists_01	40	40.030628	8122	2133
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_1	40	40.074032	29407	1942
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	15.576143	1834	352	1.18.0	synth with cache (only 1: intros x y H a; only 1: intros n Hn; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40	40.016215	1706	856
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing	40	40.045740	10188	2011
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.041174	13047	2936
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_mult	40	40.054491	17310	3068
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_period	40	40.034896	7805	2231
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40	40.164380	61944	3300
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.510019	43526	3802
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	40.042244	6758	773
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.018333	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.100141	35976	3368
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.044386	13390	2570
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	1.813761	1297	286	0.0.12.4	synth with cache (only 1: intro H; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40	40.055861	17080	2439
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_rev	40	40.035342	8502	3382
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.085612	28573	4377
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_mult_distr	40	40.083467	13863	2886
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_eq_iff	40	40.078973	23445	5448
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	4.145043	2503	459	4.13.2.7.0	synth with cache (only 1: split; only 1: intros; only 1: intuition; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.097526	26718	2778
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_appart_morph	40	40.350173	8205	1292
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_l	40	40.369243	3146	578
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_r	40	0.097017	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Ropp_def).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	40.056861	14623	4066
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.080716	13090	1875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40	40.076038	19086	3504
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.RmaxAbs	40	40.073722	12577	3649
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.122433	40735	1225
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.016269	2	2	0.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0.010435	1	1	0	synth with cache (only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	40.020337	2189	627
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.070487	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40	40.185861	79771	935
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.027827	6343	848
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift'	40	40.070542	21752	5109
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	4.357819	326	55	16	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.074216	18295	2327
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	38.312988	26106	1411	101	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.117372	29574	3528
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_lt	40	40.070411	24260	2183
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_comp_Proper	40	1.933373	491	180	1.2.1.0.0.1.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_assoc	40	40.306609	34560	3798
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40	40.056588	18379	2348
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.to_uint_surj	40	40.066867	20867	2749
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40	40.047670	17975	696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.app_nil_r	40	40.078816	28841	308
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40	40.028676	7049	729
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40	40.133254	43738	6945
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Heine	40	40.095510	32633	3818
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.097878	30162	2249
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.195407	82565	2761
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	40.201647	22278	2366
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	40.040232	7084	2479
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40	40.075969	26677	2918
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_pos	40	40.130383	49339	1334
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l	40	40.071058	26416	2503
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0.006670	1	1	0	synth with cache (only 1: apply Z.divide_opp_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	40.034786	11057	1550
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40	40.310851	136375	2112
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_1	40	40.124338	46427	2957
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_divide	40	40.024560	8200	445
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_remainder	40	40.117579	15586	2177
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_left	40	40.097494	4342	1518
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_opp	40	40.049222	15318	2352
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	40	40.051270	17430	1749
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_involutive	40	0.030299	4	3	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	40.039626	13221	1590
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40	40.013223	1782	921
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_abs	40	40.062868	12307	4539
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P36	40	40.040748	10982	2697
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Zpower_Qpower	40	40.054374	18131	3008
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_shift	40	40.044024	10222	3002
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qsqr_nonneg	40	1.509314	562	158	2.0.0.0.1.5.3	synth with cache (only 1: simpl; only 1: intro n; only 1: induction n; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	40.033133	3458	2604
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	4.746838	646	106	5.8.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite ring_morphism0; only 1: Esimpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnormalise_correct	40	40.297267	18458	2514
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.076233	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_P1	40	40.067961	18314	2419
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.091171	34826	2249
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40	40.061698	18717	3969
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40	40.055387	17554	2245
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rlt_Rpower_l	40	40.044674	12835	2663
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.062973	13434	2412
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40	40.138595	53303	3473
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.076811	20032	2190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40	40.228000	13337	2363
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40	40.165824	63281	4400
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_0	40	40.889167	5557	628
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.OpMult_sound	40	40.106409	11510	1187
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.072895	21309	4257
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40	40.045869	10861	3979
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40	40.073715	24257	2517
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_of	40	40.067999	17454	5581
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40	40.035093	4762	897
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.089385	28033	3933
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.020188	4213	498
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.062170	18576	3623
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.101699	36382	3748
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.077838	26083	3503
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.061395	16900	2287
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.063342	22678	877
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.uint_of_char_spec	40	40.032694	8870	501
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40	40.124932	49414	3164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_uint_norm	40	40.062278	16618	4421
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40	40.042700	9128	821
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.app_int_nil_r	40	40.102243	38691	797
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40	40.033684	4459	672
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40	40.114995	40418	4412
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_of	40	40.090203	25625	2734
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40	40.104688	34353	5209
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40	40.092882	14430	2880
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.106340	36759	2722
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40	40.048902	15629	1589
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40	40.108844	24068	1957
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_max_distr_l	40	40.029929	6971	1485
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.067315	25973	2506
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	40.036997	11634	1639
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0.006222	1	1	0	synth with cache (only 1: apply Z.divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40	40.426052	30435	2039
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40	40.086624	31315	2472
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.113451	37844	5166
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_triangle	40	40.079547	23770	4888
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_right	40	40.032260	4463	1658
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sum_Ratan_seq_opp	40	40.046398	14552	2427
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_mult_distr	40	40.031938	7525	1580
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_inv_permute	40	0.030344	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	40.107572	39544	2958
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cv	40	40.192057	32494	2594
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P37	40	40.056958	18874	3044
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_shift	40	40.049150	7305	2304
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_decomp	40	40.047178	10666	1926
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_sin	40	0.497105	74	30	0.0.0.5.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.105785	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	40.064682	20459	1795
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P20	40	40.057780	20285	2159
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.012555	1983	818
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.915977	18528	2770
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40	40.076619	24071	3505
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.051667	14102	3745
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.130602	52654	3727
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	9.027055	3607	331	1.5.11.15	synth with cache (only 1: intro; only 1: intuition eauto  4 with real; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rle_Rpower_l	40	40.054249	17078	2565
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.062646	17925	4476
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	40	1.467061	239	56	0.0.0.2.4.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.182788	69639	5506
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.187621	14418	1188
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	40	40.091931	18905	4355
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_morph_Proper	40	40.293961	6317	1253
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.077987	26966	1557
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_compat_r	40	40.061004	7008	969
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40	40.057815	4439	1228
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.080069	17565	5014
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.042685	9437	4046
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	40.111134	39221	4762
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	7.468813	11984	743	0.42.2	synth with cache (only 1: intros; only 1: firstorder; only 1: apply (empty_1 H)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.027800	4	2	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonzero	40	40.085351	28155	3490
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	22.887660	22487	1518	24.0.1.0.20.2	synth with cache (only 1: intros; only 1: intuition; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40	40.103227	40018	2578
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0.010912	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.076107	20916	3738
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.023435	4027	392
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40	40.076453	22641	1878
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	40.090797	5090	266
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.065825	23245	2941
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.066741	23779	1251
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	40.128973	50411	4182
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_inj	40	40.054725	15793	2706
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	40.106408	12001	945
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.022364	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.revapp_revapp_1	40	40.101338	25737	2912
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGe_morph_Proper	40	14.796932	1449	451	0.0.2.1.1.0.1.1.0.0	synth with cache (only 1: intros x y H x0 y0 H0; only 1: split; only 1: intros H1 H2; only 1: rewrite <- H0 in H2; only 1: rewrite <- H in H2; only 1: contradiction; only 1: intros H1 H2; only 1: rewrite H0 in H2; only 1: rewrite H in H2; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	40	18.506185	4195	1830	0.0.0.4.6.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.usu	40	40.185537	84754	492
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40	40.074829	14596	8209
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.116738	40039	3059
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_l	40	2.204894	1964	423	0.13.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.093072	31105	1863
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_r	40	1.998462	1392	285	0.15.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40	40.102961	33094	5707
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_null	40	40.071536	17937	6381
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	3.799735	5153	785	6.1.3.17.1.1	synth with cache (only 1: split; only 1: intros H'; only 1: red; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40	40.074443	25095	1805
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealPosShift_correct	40	40.138854	16150	1223
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_max_distr_r	40	40.061173	7704	1523
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40	40.041312	9493	4816
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmult_one	40	40.032797	9880	1349
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0.007063	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40	40.170183	66670	3640
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.022406	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower	40	40.072019	22182	3211
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_subset	40	40.167500	64130	3039
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_shift	40	40.069024	11225	1455
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt_r	40	40.044455	5377	1815
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_l	40	5.864797	5729	948	1.21.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_exists_1	40	40.028432	7723	2440
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.uint_dec	40	40.102947	37403	1421
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	40.058419	15513	1600
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.679355	525	73	1.4.12	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.098097	11	3	0.3	synth with cache (only 1: intros def_n0; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0.735871	237	50	7.2	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0.622169	250	65	4.7	synth with cache (only 1: intros a b q Ha Hb H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cauchy_reverse	40	40.430084	38948	3067
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P38	40	40.047912	15546	2859
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_r	40	6.780631	5635	1171	0.22.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.SIN_bound	40	40.067553	19439	3341
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P21	40	40.055584	14617	2682
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	40.048854	10621	2173
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40	40.121483	48623	1782
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.normalise_correct	40	40.227395	28143	3588
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.039106	9166	3893
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40	40.018192	4994	855
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.131551	9467	1590
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.073524	10202	2011
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.007978	3	2	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40	40.064058	22536	2315
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	0.173949	38	10	4.4	synth with cache (only 1: intro a'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	1.239998	439	58	4.12	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	0.379329	297	55	10.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40	40.217807	36025	2170
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.classical_definite_description	40	40.270312	99451	4685
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.063795	18739	2690
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	7.482225	2876	471	0.6.7.4	synth with cache (only 1: intros s s' H; only 1: intros a b; only 1: rewrite singleton_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_reg_r	40	40.068545	14801	899
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	40	40.061366	17292	3534
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40	40.138379	18345	831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40	40.053934	12966	3897
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40	40.158626	60909	3826
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40	40.052753	17255	2483
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	2.285458	845	135	1.15.4	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonnil	40	40.077947	26357	2880
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.078805	9	3	6	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.029756	2	2	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.087619	27249	2395
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	40.025426	4755	3550
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.051879	16757	1556
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	2.845436	1577	138	0.30	synth with cache (only 1: intro n; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.099331	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0.073753	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40	40.024903	6328	509
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.056081	7903	1204
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.074317	25692	2262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40	40.103512	31215	7321
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.044572	12714	2606
coq-tactician-stdlib.8.12.dev	Coq.NArith.NArith.TestOrder.test	40	0.009973	1	1	0	synth with cache (only 1: N.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	40	8.779619	1368	453	1.1.0.1.0.1.0.3.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: intro H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros H; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_comm	40	40.067807	16768	1497
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_infty	40	0.068738	25	7	1.0.1.2	synth with cache (only 1: destruct a; only 1: simpl; only 1: now try N.order'; only 1: now try N.order').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40	40.163766	67522	3643
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Unsigned.of_iff	40	40.041788	8969	4177
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40	40.076471	10462	338
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_mult_simpl	40	40.030827	8504	2402
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.sus	40	40.118873	38649	5936
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.759466	181	63	3.0.0.3	synth with cache (only 1: intros x y z; only 1: intro; only 1: apply Rplus_lt_compat_l; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_pos	40	40.093415	30486	1746
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40	40.060856	7477	1078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	40.139752	56750	464
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40	40.068762	22686	2745
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40	40.088612	31153	3212
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.054083	18201	2243
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_cauchy	40	40.116032	17361	2461
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_min_distr_l	40	40.096309	7937	1453
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	40.042773	12228	3020
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.065931	21912	2699
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qminmax.Q.plus_min_distr_r	40	1.225391	214	69	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.155149	47080	3663
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.prime_power_prime	40	40.086517	28507	3720
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.070657	21307	4555
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.series_cv_shift'	40	40.049635	14474	1498
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.in_int	40	40.031781	7977	2558
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.posPartAbsMax	40	40.035206	5436	1021
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_revapp	40	40.117349	49142	496
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P39	40	40.060947	20773	2415
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.ConstCauchy	40	40.055185	17944	2069
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.051277	13996	3090
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	40	40.085061	29242	4357
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnegate_correct	40	40.423436	8481	1341
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.107964	42507	2134
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0.006981	1	1	0	synth with cache (only 1: apply of_lu_double_gen).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.024837	7832	459
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P22	40	40.033170	8355	3271
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.sinh_arcsinh	40	40.042766	11552	3030
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_comp_Proper	40	40.130928	17257	3868
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.048940	10057	639
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40	40.150469	55998	3721
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	40	40.171554	56755	2265
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40	40.088340	16042	2258
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_l	40	40.144516	10756	1333
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40	40.063580	18259	1441
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.148781	62518	1542
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40	40.108474	32577	3306
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.021395	2	1	1	synth with cache (only 1: now Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40	40.154231	25365	3442
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_inj	40	40.112171	39723	3923
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.273170	90	38	0.2.0.0.0.2.0	synth with cache (only 1: split; only 1: intros; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	40.070582	19945	1319
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40	40.101617	31096	2865
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.145846	51888	6273
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0.006695	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0.018328	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0.068195	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0.008868	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.008162	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.007822	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.008132	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0.007641	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0.007623	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.073498	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.007660	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0.010966	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.009483	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0.010135	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.008629	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0.023739	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40	40.222261	95438	665
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0.007785	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0.009657	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	3.277762	2595	390	11.2.6	synth with cache (only 1: intros n m; only 1: intros (p, H); only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40	40.021816	6208	362
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.representative_choice	40	40.047414	14922	2069
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40	40.072412	8869	1063
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.091354	30928	4286
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_exact_full	40	40.058383	20834	2427
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	40	40.057756	18180	2505
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_involutive	40	40.110623	39276	4336
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.166721	7	5	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_zeros	40	40.080642	25261	3316
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_assoc	40	1.725787	700	156	5.1.0.3.0.1	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40	40.076212	15547	1215
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_0_l	40	0.604411	478	61	6.1.7	synth with cache (only 1: induction n; only 1: qc; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.051313	13697	3074
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.of_to	40	40.094224	35647	2197
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_0_r	40	0.505307	213	45	1.0.6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_compat_r	40	40.044705	5562	1158
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.isi	40	40.137167	61417	1002
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_revapp	40	40.065858	23258	544
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40	40.110445	6027	1125
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	1.935849	894	318	2.8.2	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	40	40.109988	33793	2807
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.051203	20	8	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.152437	63984	1022
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40	40.108299	37448	4454
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40	40.051331	15235	2966
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_divide	40	40.041183	13790	1798
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	40.088117	29341	5369
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.006112	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0.012416	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0.007649	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0.007580	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0.009573	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40	40.088568	25975	2867
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.009657	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0.007493	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	0.085846	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0.005852	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_neg_lt_pos	40	40.084090	11750	486
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.069580	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.006276	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0.008385	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.007771	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.007448	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.005678	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.021163	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0.005911	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0.015439	6	3	3.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_mod	40	1.199570	519	132	0.0.3.0.4.0.0	synth with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: zero_or_not b; only 1: rewrite Hc; only 1: subst; only 1: apply Z.mod_mul; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40	40.255015	98249	2402
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.059951	17133	2987
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_1	40	40.107712	39543	3304
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRmorph_sum	40	40.060277	16043	4166
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRmorph_INR	40	0.010456	2	2	0.0	synth with cache (only 1: intros; only 1: apply CRmorph_rat).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan0_0	40	40.043977	13119	2642
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	23.804877	15491	2425	0.0.0.4.2.0.0.0.9.7.0	synth with cache (only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.constructive_indefinite_description	40	40.303227	124536	6061
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_rev	40	40.120633	48344	412
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.negPartAbsMin	40	40.038245	3330	701
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P40	40	40.039718	11754	2625
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q	40	40.153975	53575	5304
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_sin_0	40	40.169580	22891	2916
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40	40.073562	17237	3409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_to	40	40.098640	33694	3525
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.negate_correct	40	40.514688	28002	2876
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P23	40	40.028595	7037	2869
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_comp_Proper	40	40.053506	16342	2517
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40	40.041722	10430	3140
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.constructive_definite_description	40	40.346701	155234	5405
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.138720	55530	597
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalDescription.unique_choice	40	40.148350	38499	2718
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.GP_finite	40	40.052005	13495	2198
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.usu	40	40.129695	57317	598
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_r	40	40.097999	12563	1667
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40	40.057074	11636	2214
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40	40.055649	15186	3762
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.to_uint_pos_surj	40	40.085633	28029	3926
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.061955	18296	1553
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40	40.058064	12443	2318
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40	40.021570	4208	2446
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0.007088	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0.008364	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	0.040079	4	3	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0.008614	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.095591	33298	3444
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0.010997	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0.007859	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.007001	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0.007740	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	19.712905	35264	1667	0.1.14.0.4.58.2	synth with cache (only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: rewrite remove_spec; only 1: split; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	40.126979	45860	4965
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.080847	1353	384
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40	40.019013	6112	520
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	0.588477	9	7	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	40	30.074027	7523	1274	5.7.5.0.9	synth with cache (only 1: red; only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40	40.101505	20854	2567
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40	40.041232	6742	1184
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_le	40	40.087481	29105	3021
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.270326	329	155	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	40	0.066735	52	15	7.1	synth with cache (only 1: do 3 intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rminmax	40	40.064217	17451	4994
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_one	40	40.090493	27851	4123
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	40.102601	38205	4644
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.069598	21323	1620
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_l	40	40.064460	21816	1537
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.to_of	40	40.103236	36292	2791
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	8.258502	1285	91	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilEmpty.sis	40	40.097849	32377	5439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_rev	40	40.085055	29628	1892
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40	40.070241	21011	2818
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	40	40.064338	14085	2469
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.120799	45543	3135
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40	40.124663	49778	1755
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.047361	11245	1533
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	0.042632	6	3	3.0.0	synth with cache (only 1: intros; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Peqb_complete	40	0.012689	1	1	0	synth with cache (only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.344980	149390	5266
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Peqb_Pcompare	40	0.090671	19	8	0.4	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.024115	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.152849	57690	2775
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.013587	2907	1232
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0.005873	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0.006075	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	0.028318	4	3	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0.006349	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0.009183	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0.006756	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.006625	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0.006496	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40	40.654719	16050	1344
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_dec	40	40.096209	36037	2650
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_2	40	40.114954	40626	5255
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveSum.CRmorph_series_cv	40	40.051623	11333	1310
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_exists_1_opp	40	40.048994	16300	2480
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40	40.082518	28171	3363
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.small_drinkers'_paradox	40	40.312294	129590	6251
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.revapp_rev_nil	40	40.124451	52034	316
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Z_lt_neq	40	4.130360	2023	509	18.0	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_0_1	40	40.131925	57380	642
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_sym	40	40.047057	4260	1614
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P41	40	40.068449	17578	2923
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	40	40.268619	16303	2291
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.041643	12221	3411
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	40.109592	46511	627
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_sym	40	2.335321	361	169	2.1.5.0	synth with cache (only 1: intros; only 1: unfold CReal_max; only 1: rewrite CReal_abs_minus_sym; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	13.195964	3117	838	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_ceiling	40	40.043582	14431	2332
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.159971	12144	1763
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P24	40	40.042344	11435	3295
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_lt	40	40.041675	11092	3445
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	3.543584	1420	563	3.0.0.3.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40	40.078640	27571	6314
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.142634	30958	1458
coq-tactician-stdlib.8.12.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	40.084476	26306	734
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	40	40.088926	22148	3571
coq-tactician-stdlib.8.12.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.033175	3	3	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sus	40	40.153692	62207	2049
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	1.112338	140	82	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40	40.164548	22268	1497
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_uint_norm	40	40.061911	15681	4726
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat	40	40.243244	14130	1807
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40	40.043625	9881	3680
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.056607	16758	1994
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40	40.241376	17424	1879
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40	40.025630	5855	644
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40	40.070881	17740	1791
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	40.273448	100201	1867
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_pos	40	4.217071	1951	474	3.0.1.0.12	synth with cache (only 1: intros a b; only 1: apply Rle_ge; only 1: elim (Rplus_ne b); only 1: intros v w; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	40.120537	43610	3839
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40	40.043267	2904	384
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40	40.048096	12972	1716
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_le_upper_bound	40	40.110704	36635	4376
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.047346	12453	2403
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_compat	40	40.047191	8911	1612
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.074322	24419	3329
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_first_one	40	40.099302	33463	3862
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40	40.154351	66217	2535
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40	40.021228	5281	597
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.052307	17457	1676
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.to_int_inj	40	40.133187	51711	3352
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_comm	40	0.926663	753	142	1.0.0.3.6.2	synth with cache (only 1: intros n m; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40	40.027792	5559	342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_nzhead	40	40.163921	66088	425
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.uint_of_string_nonnil	40	40.236869	108048	2902
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40	40.060823	17209	2799
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.083157	26136	2420
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.lt_compat	40	40.048576	11865	1396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40	40.083437	23563	2659
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.functional_choice	40	40.249977	101873	5536
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neqb_Ncompare	40	40.142882	53994	2220
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.028710	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neqb_complete	40	0.026576	2	1	1	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.023734	8219	672
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_linear_shift	40	40.074770	20550	3196
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	5.008410	5623	430	2.1.1.3.32	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.eq_dec	40	40.099772	31930	4706
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_opp	40	40.029864	7459	2530
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40	40.067760	20659	3792
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.055791	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.iota_statement	40	40.209519	81732	5977
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_nil_r	40	40.112162	44856	793
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	40.064542	21022	2448
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	2.534253	1698	394	0.0.0.1.1.0.4.0.0.1	synth with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_injectQPos	40	40.058037	19582	1406
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P42	40	40.070636	26613	2817
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	40	40.035583	9687	2445
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40	40.049645	12653	3977
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_mult	40	40.060918	9918	1488
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.169482	72234	373
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.narrow_interval_lower_bound	40	40.088931	35510	2507
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_opp	40	40.061651	14768	1808
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.singleton_choice	40	40.059250	12930	1566
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_le	40	40.034383	8018	2576
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.034860	7429	2774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40	40.062418	18463	3698
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.033281	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.007781	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40	40.326751	147566	6195
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.Raw.to_N_of_pos	40	0.008729	6	1	5	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.isi	40	40.121601	49771	2099
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40	40.028630	4835	3251
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.094977	32624	3238
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.144077	40246	3301
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_inj	40	40.078208	23437	3503
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40	40.068683	22308	2630
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	40.117203	42912	1542
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40	40.046353	12423	1202
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRle_minus	40	40.380850	14009	1036
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.293818	53	22	3.2	synth with cache (only 1: unfold add, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.066406	12027	3191
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	40.021843	5442	1840
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.096599	32170	4210
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40	40.209359	71092	2369
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.141712	2	2	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_sym	40	40.097862	26728	5071
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	40.057886	17953	2542
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_0	40	4.874209	2798	545	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.057567	18090	4449
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_lt_upper_bound	40	40.069369	22449	3282
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.043347	13404	3323
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat	40	0.016024	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.034339	6439	734
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_idemp	40	40.091684	35792	2161
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40	40.190645	84577	2354
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40	40.149658	56541	1325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.to_int_pos_surj	40	40.095896	30685	3707
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_l	40	10.909918	3672	601	12.1.0.3.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.056182	17215	2359
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40	40.010851	3054	353
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_iter_D0	40	40.049910	9148	3560
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.sus	40	40.125834	50433	2728
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40	40.097986	32720	3446
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	4.312024	1210	288	0.3.0.2.0.4.1	synth with cache (only 1: destruct x; only 1: intros n' (HPn', Hn'); only 1: qc; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.151537	61150	3371
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40	40.057107	14203	5414
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	36.576897	31663	3857	1.0.0.0.0.18.8.7.2	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: assumption; only 1: cbn in *; only 1: auto; only 1: cbn in *; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.161876	92	31	2.1.1.1.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nxor_eq_true	40	40.231061	73993	2649
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	40.043919	12619	3042
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	20.124133	9204	1492	1.1.0.0.10.1.5.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: intros a'; only 1: destruct (eqA_dec a a'); only 1: simpl; only 1: destruct 1; only 1: auto with *; only 1: intros H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.052420	5	5	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	40.179303	15855	2844
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40	40.077665	23409	3047
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.035366	11181	2643
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.constructive_definite_description	40	40.331866	138933	4917
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_int_nil_r	40	40.079039	27731	1486
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.047514	15142	2933
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_injective	40	40.088662	30861	3818
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.144816	51837	4854
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ptestbit_Pbit	40	40.084410	27449	4162
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtQ	40	40.071558	20341	3828
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P43	40	40.088756	9905	2853
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40	40.062951	20410	3764
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.SIN	40	40.048823	14654	2914
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_plus	40	40.035839	6560	3368
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.114126	10708	1372
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	12.875338	4123	1781	5.7.0.3	synth with cache (only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: destruct (fold_0 s' i f) as (l', (Hl', (Hl'1, Hl'2))); only 1: apply fold_1b; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_0	40	40.052607	15827	2584
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_compare	40	40.179802	15112	1451
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.choice	40	40.197274	64542	4056
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_n0	40	29.650167	15886	3059	11.11.2.9	synth with cache (only 1: intros n; only 1: intuition; only 1: now subst; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.007395	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_le	40	0.402002	113	40	3.3.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto with *; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.393412	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_lt	40	0.757498	277	79	2.2.5.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.063264	19179	2906
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P26	40	40.028463	7024	2354
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.138498	55965	5474
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_N_of_N	40	40.077280	31866	1468
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.095278	31229	5419
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.027364	4573	2861
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.div_0_r_ext	40	40.069817	24628	3414
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40	40.094880	35226	3226
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_iff	40	40.031412	6252	2865
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40	40.088441	26891	1634
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	7.134324	1875	1022	0.0.0.0.0.2.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40	40.072216	21984	3815
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	40.051418	14910	3764
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40	40.075350	18923	2290
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	2.776710	3274	247	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.094900	8	6	0.0.1.1.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.062599	17126	2434
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.085877	25129	3025
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_refl	40	40.064579	17221	5128
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_eq	40	0.050969	11	6	0.0.1.0.0	synth with cache (only 1: intros H; only 1: unfold R_dist; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.167357	68897	3545
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0.009102	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_le_lower_bound	40	40.102988	35731	4784
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_compat	40	40.079778	31490	3528
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.092580	33295	3580
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	9.465672	3796	1301	0.1.9.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_comm	40	40.109030	38424	3670
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40	40.085264	31320	3476
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40	40.076762	27660	2166
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0.008955	1	1	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.of_int_norm	40	40.069343	19259	4269
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.eq_pos_inj	40	0.035060	4	4	0.0.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: congruence; only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_r	40	40.090530	14282	1637
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.397019	116	42	0.0.1.0.3.1	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	40	0.009564	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40	40.009719	2560	285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_nth	40	40.093038	32971	703
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.usu	40	40.105293	38106	3892
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.usu_nil	40	0.009014	4	2	1.1	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.031049	5903	1189
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_integral	40	40.055793	19884	1959
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.054603	16733	2785
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.132502	42008	5791
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nxor_eq_false	40	40.121076	29749	2763
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.049569	13350	2801
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_POS	40	40.067814	24746	3599
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l_pos	40	40.078090	15703	1430
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.127534	48719	2899
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow_lt_1_compat	40	40.035742	9610	2070
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.revapp_revapp_1	40	40.096613	38650	1230
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_le	40	40.069993	22504	3269
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.086441	29126	2972
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_alt	40	0.061620	9	5	2.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40	40.151527	56854	4458
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ntestbit_Nbit	40	40.107955	39172	4588
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtQopp	40	40.066805	17553	5313
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	11.288040	5815	1141	0.14.0.0.0.0.0.1.1	synth with cache (only 1: intros n m; only 1: split; only 1: destruct n; only 1: now split; only 1: discriminate; only 1: now split; only 1: intros (EQ, EQ'); only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.040100	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P44	40	40.054037	17036	3111
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.100212	34477	4551
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS	40	40.045733	12759	2935
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_plus	40	40.064397	4216	1988
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	40.141099	51736	4410
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.015792	2	2	0.0	synth with cache (only 1: exists a1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdiv_pol_correct	40	40.049022	18628	1908
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.042045	14374	1517
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_nat	40	0.184119	114	19	6.7	synth with cache (only 1: unfold Pos.to_nat; only 1: apply Pos2Nat.inj_iter).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40	40.063876	17626	4864
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P27	40	40.037796	12438	2426
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.choice	40	40.245307	107625	5790
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_Z_of_Z	40	40.128465	58743	923
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.027860	3883	2702
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40	40.084914	28691	4272
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	40.084873	32153	2800
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.nztail_to_hex_uint	40	40.104680	38438	1606
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40	40.057653	15399	2666
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40	40.073356	17512	4317
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	40.041592	9584	3646
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.057370	19829	2257
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	40.054472	12809	1598
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.084452	29558	2509
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	40.242373	107339	1482
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.017561	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_tri	40	40.123089	24693	4268
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.133858	42321	3854
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.043249	14773	2133
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_sgn	40	40.048765	12022	3681
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.066732	18929	3569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40	40.097423	16176	1993
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40	40.064382	16372	5551
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_assoc	40	40.107591	38513	3545
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.is_path_from_characterization	40	40.082459	27069	4142
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40	40.058674	21085	2694
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_O_l	40	0.828617	511	108	0.0.4.1.7	synth with cache (only 1: intros n; only 1: case n; only 1: trivial; only 1: unfold ni_min; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_O_r	40	0.047250	12	7	1.0.2.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_l	40	0.015545	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalNat.Signed.of_inj_pos	40	40.036963	11023	1153
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.403337	335	58	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	40.990724	21259	2003
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_le_compat	40	40.068582	9297	1036
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.z_max_spec	40	40.061497	15923	1795
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_N_of_N	40	40.070738	22650	2710
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.019093	3317	323
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.z_min_spec	40	0.616961	94	18	7.1	synth with cache (only 1: intros n m; only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyInst.pow_pos_strict	40	0.050183	5	2	3.0	synth with cache (only 1: intros a b Ha Hb; only 1: Z.order_pos).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	4.068413	1410	542	2.2.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nth_revapp_r	40	40.068323	14522	1466
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.usu_gen	40	40.119678	51937	1273
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_integral_l	40	40.061823	19520	2338
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.061505	12418	2771
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	25.854877	8421	2223	1.2.12.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	40.076250	26584	3719
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.048700	5	3	0.0.2	synth with cache (only 1: simpl; only 1: intro; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.036954	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nodd_not_double	40	40.180543	35112	3160
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40	40.092582	31374	3533
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod	40	40.049753	17640	3339
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_r	40	5.305626	2373	443	6.1.3.6.0	synth with cache (only 1: unfold Q2Qc; only 1: intuition; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l	40	40.070195	19794	2489
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40	40.176621	72868	3197
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.334339	484	119	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_Rabs	40	40.038092	10784	2719
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40	40.037526	10717	1308
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_pos	40	40.058350	14750	971
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qgt_alt	40	40.098723	33822	3865
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_alt	40	0.045678	19	5	6	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40	40.142719	52714	4854
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.101887	37112	3729
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_pos	40	4.656637	681	313	0.1.0.7	synth with cache (only 1: intros a b; only 1: intro; only 1: apply pow_lt; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_compare	40	40.047289	12471	1413
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	40.123751	22046	3262
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	40	40.082518	27930	4239
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_xeq	40	0.040630	15	5	3.1.1	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P45	40	40.030155	6478	3611
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	14.967642	10175	1084	0.3.0.8.2.1.3.0.8.2.0.3.1	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: rewrite <- Rmult_1_r; only 1: apply Rmult_lt_reg_l with 2; only 1: prove_sup0; only 1: rewrite <- Rmult_assoc; only 1: rewrite <- Rinv_r_sym; only 1: rewrite Rmult_1_l; only 1: generalize cos_pi2; only 1: intro x; only 1: lra; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt	40	40.082879	10029	1061
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40	40.184119	73086	2436
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_pol_ge	40	40.087920	27762	2886
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_Z	40	40.042191	13834	1598
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.247284	79	36	1.0.1.0.0.1	synth with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.062080	18483	2683
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.024625	5745	2787
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.072228	29211	2940
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40	40.066013	12618	7888
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sus	40	40.075585	22488	5072
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.119255	47712	3577
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.double_unorm	40	40.054833	13536	4065
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40	40.068014	19841	2696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40	40.034251	7758	3059
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	40.039604	9999	4166
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_pos	40	40.050221	16863	1926
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40	40.069062	6306	971
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40	40.104524	38602	2413
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.117233	39600	2571
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.016691	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.025742	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_plus	40	40.083148	24947	4736
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.146069	57593	3750
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.Z_of_of_Z	40	40.122623	51685	1805
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	26.620793	2394	180	0.1.0.33	synth with cache (only 1: induction x; only 1: simpl in *; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_plus	40	40.066859	23885	2491
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	40	40.105369	34654	11125
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40	40.070004	20442	3619
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.is_path_from_restrict	40	40.101630	37092	4614
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40	40.077588	23613	2189
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_refl	40	40.137699	57092	2025
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40	40.065415	13127	8306
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_le_lt_compat	40	40.089218	10859	1402
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_Z_of_Z	40	40.161855	63354	764
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40	40.004097	450	298
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.057687	14909	4953
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nth_revapp_l	40	40.043849	10194	1905
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_dec	40	40.092677	36971	2474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.isi	40	40.175973	73108	3698
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.isi_posnil	40	0.005365	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.isi_negnil	40	0.005761	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_antisym	40	4.648276	2929	458	7.1.4.2.0.7.0	synth with cache (only 1: intros x y; only 1: destruct x; only 1: intuition auto; BinInt.Z.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intro eq_rect_eq; only 1: inversion 1; only 1: rewrite ni_min_comm; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40	40.026248	4839	1112
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	28.036594	17569	1314	57	synth with cache (only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.166691	64482	2915
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40	40.078627	25691	3283
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.088225	33458	3109
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_r	40	40.126900	9286	1390
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40	40.159283	64774	3132
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.059664	19570	2998
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.119519	48790	2938
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_revapp	40	40.075996	19705	3601
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qge_alt	40	40.051634	15270	2307
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40	40.139502	48729	4596
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	40.161992	62270	4909
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Ntestbit	40	40.088757	30675	4692
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_nat_S	40	0.010736	2	2	0.0	synth with cache (only 1: intros len start; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_S	40	0.012269	4	2	2.0	synth with cache (only 1: intros a n; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.036798	10448	2228
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	22.870818	2389	252	0.0.22.3	synth with cache (only 1: intros l l'; only 1: destruct l; only 1: compute; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_Proper	40	40.088877	29281	3638
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_gt	40	40.115742	36865	5251
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	40	40.063095	19431	4528
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	24.956792	11866	2550	1.0.0.0.13.15.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_T	40	1.749949	629	142	10.10	synth with cache (only 1: intros a b; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.792713	466	103	0.0.0.0.0.0.8.3	synth with cache (only 1: intros; only 1: destruct H; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.052144	11781	4459
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P46	40	40.046703	14151	3348
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40	40.137677	21144	1801
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40	40.105616	40767	4185
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.094200	34873	1468
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.035740	9223	2118
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_assoc	40	40.037715	8156	1141
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.083256	33310	2330
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40	40.022381	3259	2837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.usu	40	40.138302	54834	2467
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.012355	4	2	1.1	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40	40.052861	19588	2054
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.double_nzhead	40	40.073339	20294	4775
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40	40.042988	10949	4164
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P29	40	40.044230	14117	2613
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40	40.261505	29237	2468
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40	40.046689	13671	2626
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_neg	40	40.041658	11644	1892
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.084173	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40	40.150726	11374	2180
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40	40.059977	22498	1502
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.085499	27307	2357
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.R_dist_mult_l	40	40.072056	17149	2014
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.019239	2	2	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.026829	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40	40.149388	55607	4501
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.080851	30652	2928
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	2.893834	728	271	1.2.0.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.075901	26904	2845
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.044841	8806	1454
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_intro	40	0.255258	118	33	0.0.4.3	synth with cache (only 1: intros le_mn2; only 1: destruct le_mn2; only 1: easy; only 1: now try Nat.order').
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.018392	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.024383	10	4	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.128335	46395	5102
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.076327	28613	3307
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_elim	40	2.284600	2523	269	21.0.0.0	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	40	40.059716	18094	3102
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.100177	34735	3562
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40	40.010466	3067	272
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_l	40	40.082099	12355	1774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.012305	4	2	2.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40	40.044817	10291	5287
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0.006931	1	1	0	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.612607	266	81	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.316735	181	47	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_spec	40	40.168548	72304	3100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalString.NilZero.sis	40	40.057717	15873	5120
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_trans	40	40.096324	31551	3299
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_revapp_0	40	40.079896	20986	2493
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.031428	7111	2279
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	3.094951	2043	316	8.0.1.11	synth with cache (only 1: intros H x; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40	40.086876	21432	3561
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.016800	3	2	0.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.182572	32918	2959
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	40	40.070850	19955	3894
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.046242	16750	2173
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_1	40	40.202238	19253	1469
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40	40.061959	19193	2781
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcdiv_mult_l	40	40.061248	20076	2287
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_divide_minus	40	40.027005	6874	2237
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_rev	40	40.083448	28786	2128
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qcompare_antisym	40	40.180505	61092	6932
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40	40.102304	33329	3915
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.eq_incl	40	0.074266	4	3	0.0.1	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_nat_equiv	40	40.066712	20748	3290
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40	40.089960	36125	839
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.034441	10038	2502
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40	40.129776	46305	3742
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_eq	40	2.799872	2758	365	9.0.1.1.13	synth with cache (only 1: intros n m; only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_le	40	0.010444	6	2	4.0	synth with cache (only 1: intros x y H; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_lt	40	0.032168	17	5	2.0	synth with cache (only 1: intros; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.Zlt_le_add_1	40	0.306953	63	16	6.1	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.add_le	40	0.011499	5	2	3.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.mul_le	40	0.025754	8	4	0.0.4.0	synth with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_eq	40	40.088578	27589	3509
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_opp_rev	40	40.173334	44672	3538
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_cauchy	40	40.101503	12533	1601
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp	40	0.005047	3	1	2	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	40	40.078658	29575	4087
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_gt_0	40	40.046484	13659	2911
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	3.649264	3401	255	15.15.14	synth with cache (only 1: intros x y; only 1: intros H'; only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	15.100850	2685	388	7.0.5.14.6	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40	40.082207	28100	2078
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_one	40	40.130373	56083	2293
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_exp	40	40.028861	6911	1990
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.010310	5	1	4	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	0.011893	8	2	6.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40	40.111505	44273	1790
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_max_mult_neg	40	40.031014	6071	1688
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.033293	6212	3411
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.usu_gen	40	40.096424	38762	863
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40	40.079386	21624	2677
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Unsigned.of_hex_uint_double	40	40.038262	9733	2212
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P30	40	40.043112	13317	2641
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.121485	27416	1833
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.078233	6177	1244
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.069755	20239	3472
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.040465	8620	3297
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.124651	29640	1674
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40	40.254725	104398	2666
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.038571	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.229765	93046	3130
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_pos_of_pos	40	40.122261	46850	3105
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.043159	11049	4244
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	1.853780	2611	213	0.0.0.25.0	synth with cache (only 1: intros P; only 1: intro; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	10.363735	4557	1052	5.1.3.5.0.5	synth with cache (only 1: case n; only 1: intros; only 1: reflexivity; only 1: intros Hn Hn'; only 1: now apply Pos.iter_swap_gen; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus_l	40	40.048045	15859	2058
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.159259	70410	698
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.107916	40916	3552
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.067625	23257	3076
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	9.382283	4413	270	27.5.9	synth with cache (only 1: intros x y H; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	18.101817	16254	882	72	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.058649	17894	2875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.016501	6	2	1.3	synth with cache (only 1: intro H0; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_pos_of_pos	40	40.081127	23675	1565
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.004231	629	250
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_r	40	40.039692	5361	1839
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	2.159785	2410	203	41	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.077360	30974	985
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_refl	40	40.184152	77594	4338
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_1	40	40.095811	35112	2546
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.074552	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring.BoolTheory	40	0.627879	199	64	0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_revapp	40	40.069660	19958	2591
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring.bool_eq_ok	40	0.010002	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	6.672459	3544	286	19.3.5.7	synth with cache (only 1: intros x y H; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	40.100580	37688	3200
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.042448	9577	2260
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.683825	998	111	13.17	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.034903	9	3	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_ok	40	40.067393	20360	2799
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	40	40.075355	23960	4062
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40	40.164057	28617	2705
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_remainder	40	40.100485	41692	3807
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40	40.247517	5943	1177
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40	40.096459	33109	3845
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.081685	29048	2774
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_refl	40	0.873633	1157	141	8.8.2.1	synth with cache (only 1: intro n; only 1: induction n; only 1: red; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_mod_minus	40	40.065674	20721	3135
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_nzhead	40	40.139752	60386	525
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qcompare_spec	40	40.101694	43310	404
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_refl	40	0.050650	4	2	0.2	synth with cache (only 1: red; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_sym	40	0.025641	4	2	2.0	synth with cache (only 1: symmetry; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40	40.186475	74390	3869
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_equiv_nat	40	40.052266	13991	4391
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.041823	12595	2401
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40	40.051621	2325	647
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_antisym	40	6.361839	2857	411	5.6.2.0.7	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: intros H; only 1: symmetry; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare	40	40.133644	46270	4283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	17.903782	3734	747	1.1.9.10	synth with cache (only 1: intros Eqf Lef x y; only 1: compute; only 1: intros n m; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mirr	40	40.044669	11951	3815
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.050931	16668	5255
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.belowMultiple	40	40.118628	42199	3309
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.054926	15327	2766
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40	40.206607	13471	2759
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40	40.104375	8323	3705
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_minus	40	40.050934	19293	1875
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	40.266261	24963	3188
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nbit0_neq	40	14.409719	7056	838	11.11.3.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intuition; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.012823	5	2	2.1	synth with cache (only 1: red; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_eq	40	0.301986	22	7	2.0.4	synth with cache (only 1: intuition; only 1: eqb2eq; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_neq	40	0.041129	3	3	0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_assoc	40	40.038719	7147	1563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.072099	21941	3273
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.isi	40	40.070855	21546	3793
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40	40.033543	5825	3724
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40	40.057803	20004	2472
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0.015223	3	2	1.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.005994	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.of_to	40	40.111470	39704	4013
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P31	40	40.039661	11643	2556
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40	40.059608	14987	3656
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40	40.089719	30631	2465
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.126709	16393	1385
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40	40.130748	46949	5790
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40	40.033985	7414	4035
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.061183	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40	40.127914	49843	1599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	13.309827	5519	672	0.1.2.2.9.12.3	synth with cache (only 1: repeat red; only 1: intros Hb; only 1: simpl; only 1: intros; only 1: unfold snd; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.974428	311	117	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.ArithRing.natSRth	40	40.035442	5970	1313
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.045640	15491	1923
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.707434	287	82	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.060262	19004	3282
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of	40	40.181640	80348	667
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_sym	40	24.410541	18261	1844	2.5.2.1.7.1.18	synth with cache (only 1: intros P Hrec; only 1: intros m [H3 H4]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sis	40	10.290661	5419	1242	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40	40.108451	39076	3777
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	40	40.126933	49699	5173
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	29.092013	16982	1566	2.7.1.0.0.5.18.6	synth with cache (only 1: intros m s1; only 1: intros n v le le'; only 1: symmetry; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	40	40.728754	26836	3388
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40	40.004015	464	263
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40	40.095412	37021	1808
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_assoc	40	40.062362	16540	1626
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_comm	40	0.042939	3	2	1.0	synth with cache (only 1: intros; only 1: apply (Radd_comm (CRisRing R))).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_sym	40	40.127978	53117	3106
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_case	40	40.095458	33347	2427
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.135627	33969	1523
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40	40.076124	7865	1235
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.058606	20335	2903
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Z_lt_abs_rec	40	40.160081	64000	3149
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.Zth	40	40.021070	5966	1643
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.008544	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0.009418	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.008032	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	40	40.070368	20808	3819
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mirr_rev	40	29.045421	11987	3460	1.2.2.0.0.0.0.0.4.0.1.0	synth with cache (only 1: intros f x H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: change (mirr_fct f) with (f o (- id))%F; only 1: rewrite Ropp_involutive; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mirr_prem	40	0.207929	64	28	0.0.0.0.1.0.0.0	synth with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_rev; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_eq	40	40.100444	45398	2610
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rinv_eq_compat	40	40.578985	12634	1342
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40	40.103165	40050	1521
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_head_nb_digits	40	40.118012	49970	528
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	3.855488	2355	150	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_trans	40	40.055943	10640	973
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_rev	40	40.048690	10392	1642
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.126981	44308	3799
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.084516	29915	3800
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_dec	40	40.271007	17437	1855
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_CV_0	40	40.042604	9629	2570
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.054978	5276	1070
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_trans	40	40.094498	34090	2966
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	40.200960	80691	2644
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.016962	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	5.698783	3595	206	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	40	40.048139	13754	5665
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_assoc	40	40.082860	26768	4603
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.042803	12091	2713
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub	40	40.092795	36922	3056
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40	40.127369	38283	2571
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40	40.403965	14305	3054
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40	40.243624	21873	3251
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.083724	5	5	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_bit_eq	40	40.077293	25369	1983
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub_lt	40	40.038049	3841	522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.118325	44663	2957
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40	40.060795	22858	2825
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40	40.080914	21193	5883
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.to_of	40	40.110173	34086	3192
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P32	40	40.043981	12441	3357
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	10.388769	5677	553	12.10.2.7.8	synth with cache (only 1: intros; only 1: elim ARth; only 1: intros x1 x2 Ex y1 y2 Ey; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	0.068092	8	2	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.093165	30181	3722
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	40.089716	18912	2459
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40	40.070612	16320	2218
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	40.153909	53601	7587
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0.021333	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	40.036848	11743	1554
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40	40.098488	34703	2233
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.ArithRing.nat_morph_N	40	40.034275	10889	2060
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	40.046234	15518	1851
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.058742	19117	2867
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_l	40	40.046729	13253	2833
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.151262	58583	5133
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_0	40	40.035068	11248	1373
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.find_left_path	40	40.131211	49251	4782
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	40	40.083985	29804	3048
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40	40.041036	9280	2475
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40	40.207112	83632	3152
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40	40.005800	583	191
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.057518	17764	1197
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_Proper	40	40.157929	7458	2655
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_eq	40	40.076016	23326	7647
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_neq	40	0.015775	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_compat	40	0.107400	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_total	40	40.095759	28963	4194
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40	40.147853	29343	1774
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40	40.065499	19084	2005
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Z_lt_abs_induction	40	40.072615	18636	5424
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40	40.056359	6306	1149
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40	40.135130	43615	2173
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.008486	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	40	40.076136	24154	3591
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	40	40.073272	22399	3611
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_eq_full	40	40.064916	26322	2680
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.085208	20	6	3	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.334661	921	39	42	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.020554	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.007231	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0.164772	269	26	20	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40	40.054281	9343	1262
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40	40.073098	25784	1432
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_del_head	40	40.100830	20124	2550
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_iter_D0	40	0.825095	318	77	0.1.1.10	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_nztail_rev	40	40.068857	22430	1310
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.066002	20927	815
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_D0	40	0.012150	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40	40.110391	34428	4984
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.067088	22256	3539
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_spec	40	40.340751	57885	4751
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_lim	40	40.031367	7444	2237
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_iter_D0	40	2.630780	2698	126	3.1.53	synth with cache (only 1: induction n; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_eq	40	40.129349	47431	4547
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40	40.063486	16276	2835
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	40.185125	77634	1538
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	40	40.054148	16430	7054
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.079688	54	18	4.4	synth with cache (only 1: intros Ha'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_comm	40	40.330139	8779	1711
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_ge_0	40	40.035282	8924	2740
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40	40.123942	48763	3075
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.102702	29146	3454
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	40.198336	12928	561
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndiv2_bit_neq	40	40.067978	18566	2326
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.186085	8	7	0.0.1.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: destruct s2 as [| c2 l2 x2 r2]; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	40.078532	26257	3550
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_1	40	28.851053	17821	1228	3.1.24.29.22	synth with cache (only 1: intros p; only 1: constructor; only 1: intuition; only 1: auto with zarith; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.014245	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.047579	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_contract	40	40.030685	4160	1076
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40	40.072297	27547	2639
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40	40.023401	3672	2573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.to_int_inj	40	40.092557	27492	6072
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P33	40	40.042624	13166	2210
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40	40.199081	21036	1024
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40	40.077596	23798	3619
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.085671	19238	2118
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.147148	22695	2341
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_eq	40	40.174277	43252	1485
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.071464	25179	3288
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40	40.182414	71168	3516
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.050911	16320	1975
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0.145541	5	3	2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	40.076361	26103	3301
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	0.039821	16	4	5	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	0.235403	34	8	9	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_distr_l	40	40.051958	17224	2333
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_weak	40	16.080428	15025	1431	4.32	synth with cache (only 1: intros m IH H; only 1: now apply Z.lt_le_incl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	3.349661	2093	371	0.4.0.2.9	synth with cache (only 1: intros a b c H H'; only 1: apply fold_rec; only 1: split; only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_lt_trans	40	0.411576	180	49	1.1.1.4.0	synth with cache (only 1: intros x y z; only 1: intuition auto; N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	2.650751	818	259	4.7.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40	40.063236	19392	2664
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40	40.195962	12268	1758
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.159819	143	22	16	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.Y_unique	40	40.089406	30602	4002
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.128770	51153	4709
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	40.139665	51417	3806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	40.070787	18512	4291
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40	40.006167	986	187
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40	40.113422	38066	2081
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_Proper	40	40.054950	8179	1294
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_Proper	40	0.042288	1	1	0	synth with cache (only 1: apply (CRisRingExt R)).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.get_correct	40	40.129387	49840	5771
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	2.428206	3862	293	50	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	22.352443	6363	2221	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.2.1	synth with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: split; only 1: auto; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_induc	40	40.067874	19576	2860
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	0.919640	477	69	16	synth with cache (only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.normalise_sound	40	40.109311	26920	2841
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40	40.116149	44309	4093
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.045776	17	6	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0.014307	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	3.074899	7202	277	73	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.016626	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.087168	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zcase_sign	40	40.115662	43821	2436
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.173587	69	13	0.2.8	synth with cache (only 1: intro; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.018477	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.022963	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40	40.068851	24839	1225
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.713788	163	14	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40	40.039120	4706	1103
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40	40.049762	12720	4241
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	40	40.093319	27961	4358
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_eq	40	40.062921	22622	3082
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	40	40.068227	22853	3762
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40	40.064119	5601	754
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.069195	20828	1742
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0.009212	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_nth	40	40.079899	27753	1877
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.087982	28224	2463
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40	40.111562	37731	3696
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftr_nat_spec	40	40.044468	14231	2729
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.le_ni_le	40	10.828205	5217	774	0.4.9.14.1	synth with cache (only 1: intros n m H; only 1: symmetry; only 1: unfold ni_min; only 1: rewrite Nat.min_l by trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_refl	40	40.252982	21297	2406
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_CVU_prelim	40	40.025065	6284	1978
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.revapp_nil_inv	40	40.058914	14377	2758
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40	40.087255	30117	3870
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	40.197613	84199	1947
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.014451	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.014866	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	40	40.071656	25698	3990
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_l	40	40.071201	15865	2355
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.042128	9518	2252
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_pol_div	40	40.161938	4465	481
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nneq_elim	40	40.063984	18010	2649
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.416506	126141	1316
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40	40.113890	39801	4864
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_opp	40	40.073207	24155	2235
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_contract	40	40.027762	2333	792
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.220883	91345	5669
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40	40.049205	7058	4566
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.059113	1687	166	4.2.18.2.8.2	synth with cache (only 1: split; only 1: auto with arith; only 1: auto with relations; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.to_int_pos_surj	40	40.058018	16032	3592
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.049795	16431	2358
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40	40.203261	18747	1362
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	40.058661	8135	1352
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40	40.046495	6972	2859
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_lt_nat	40	40.246466	54684	1710
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40	40.055667	19173	2385
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40	40.164095	60278	2749
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40	40.081792	25749	1892
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_distr_r	40	40.048564	14364	2858
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.088767	28273	4346
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40	40.125741	43056	3127
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40	40.057260	21461	1203
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	40.071933	19861	3246
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.Y_approx	40	40.087700	29867	3228
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	40	40.061411	22390	2419
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	40	40.188116	15699	2060
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_trans	40	4.151939	2823	799	0.0.1.2.2.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.415630	117	34	2.2.1.1.3	synth with cache (only 1: constructor; only 1: intuition; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40	40.077705	17098	3513
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcnot_lt_le	40	1.015870	221	71	3.4.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcnot_le_lt	40	0.037684	15	7	1.2.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.035618	11	6	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_not_lt	40	0.033754	9	5	5.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	0.671145	666	68	3.3.15	synth with cache (only 1: intros Az LS; only 1: elim ARth; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.010717	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	0.191843	102	13	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40	40.159071	68028	563
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.005647	1525	168
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_T	40	38.550874	11224	2167	3.7.0.4.1.1.6.1	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: intros H1 H2 H3; only 1: intro abs; only 1: destruct (CRltLinear R); only 1: intro; only 1: apply (CRisRingExt R); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.append_correct1	40	40.038321	11845	1686
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.191104	64267	5123
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.negate_correct	40	40.076482	5655	2184
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.of_int_norm	40	17.633552	15610	2131	0.7.0.24.0	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: simpl; only 1: now destruct nzhead).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.047742	15469	2403
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40	40.191341	78628	5853
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40	40.041467	2377	1009
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40	40.089538	27685	3720
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.006167	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_T	40	6.462174	1426	276	0.16.2	synth with cache (only 1: intros; only 1: intros x; only 1: apply (CRisRingExt R)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_T	40	0.653270	78	26	2.0.4	synth with cache (only 1: intros a Ha; only 1: intros m Hm; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40	40.060590	5945	1238
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.087453	29109	3395
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	40	40.068840	18764	5204
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.075938	28902	2624
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	18.739287	12581	512	87	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.098359	35370	4890
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.171849	138	20	10	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40	40.054698	8722	1006
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	2.224876	1617	78	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40	40.088025	27820	1041
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_head_nth	40	40.072440	21602	3010
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.106675	38098	2993
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40	40.116341	33000	2582
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.086157	28532	4563
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_le	40	40.082467	26306	3132
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_sym	40	40.375951	40828	2996
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	4.550620	474	234	2.5.1	synth with cache (only 1: intros x y z; only 1: intro; only 1: apply CReal_mult_proper_l, H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.018512	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_is_datan	40	40.035058	10046	2343
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_nil_inv	40	40.063004	13965	2919
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.053191	19214	1864
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40	40.052061	17279	1584
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.336910	106	49	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	40	40.085188	5525	1643
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_r	40	40.162118	21141	3073
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_le_0	40	40.053978	9608	3018
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40	40.041574	14559	1750
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	3.659333	6388	461	2.0.1.39.2	synth with cache (only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ndouble_or_double_plus_un	40	40.075856	31199	419
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.158766	59474	4352
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	40	40.293878	59635	3883
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.935511	273	123	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40	40.078954	29859	1461
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40	40.159720	63041	4363
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	40.049051	18914	668
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_const_bound	40	40.051024	16121	2688
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40	40.049811	14336	3423
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_antisym	40	40.055365	22177	418
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40	40.091214	21915	2988
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.051790	16990	2280
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.206204	85180	1784
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.093326	26354	937
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.051643	13338	3782
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40	40.073691	17307	1258
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40	40.040856	13216	1468
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_inj	40	40.072819	23259	2275
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.132854	55486	2512
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	40	40.173723	26881	3918
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.141679	15648	2255
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.085666	25362	2154
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_lt_or_eq	40	40.072362	24312	2537
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.131738	20801	1355
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40	40.005002	475	144
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40	40.170807	63984	1837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.052627	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.append_correct2	40	40.063125	22904	3809
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40	40.063677	12653	4524
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalPos.Signed.of_inj_pos	40	40.044975	10162	3539
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40	40.072646	24211	2482
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.053099	15501	3410
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40	40.080567	29561	2674
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40	40.047312	4067	596
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40	40.112032	37526	3188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	24.057820	14074	1954	2.0.0.5.5.0.6.0.1.0.2.0.2.0.6.0.2.0.2	synth with cache (only 1: induction d; only 1: split; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_Proper	40	40.044417	6865	2359
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.104588	39594	4224
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mod_unique	40	40.088302	35597	2082
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40	40.051732	5575	2253
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40	40.061192	17448	3864
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	40.060580	21155	2312
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	40	40.075330	26948	1359
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.061394	16633	1226
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nth_revapp_r	40	40.054395	18415	1782
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.076398	19741	8204
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.039151	7182	3754
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_eq_bool	40	0.008141	1	1	0	synth with cache (only 1: apply Qeq_bool_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40	40.095977	31943	4722
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.012473	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.016275	3	3	0.0.0	synth with cache (only 1: intros q r; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_lb	40	40.150780	61147	3897
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_eq	40	40.145241	13680	2811
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40	40.090407	22804	2878
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_neq	40	0.304128	2	1	1	synth with cache (only 1: t_eqb).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_compat	40	0.026446	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.rev_lnorm_rev	40	40.060315	15166	2295
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.026315	6923	1796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.033135	10307	2125
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_l	40	40.025660	5903	1649
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40	40.094707	27699	2285
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.035039	8555	3445
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.115506	43883	4542
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.123046	38190	6137
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_alt	40	40.056137	17226	1289
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	22.642157	17349	1164	2.9.1.7.9.2.7.20.7.2.11	synth with cache (only 1: compute; only 1: split; only 1: compute; only 1: now f_equal; only 1: compute; only 1: intro; only 1: now subst; only 1: compute; only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	40	40.373196	99148	1453
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.009669	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_unique	40	40.074937	21180	2297
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	11.029131	7469	1473	4.5.1.3.5.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: now auto with arith; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40	40.046786	17258	2031
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.054849	18501	1989
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_scal	40	40.065577	19113	2718
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40	40.053906	15141	3479
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_trans	40	40.875135	36031	3819
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40	40.045034	13807	1203
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40	40.146907	39310	1914
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40	40.093567	28088	1474
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.345873	222	37	0.8.3	synth with cache (only 1: intro H; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	0.147613	150	24	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40	40.072564	24592	3155
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem	40	40.055835	17174	3357
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40	40.074805	23578	2412
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.063332	21684	2008
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	1.722331	660	186	16	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0.013017	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_iff	40	40.048513	11940	3921
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	12.754936	3831	562	18.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_decidable	40	40.143532	53181	4450
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40	40.095399	29068	3157
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_dec	40	40.138362	52985	3158
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	40	40.091359	33643	1017
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40	40.002941	280	177
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	40	40.180022	80994	583
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.400024	56	12	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.substring_correct1	40	40.048836	15959	3863
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40	40.032294	10577	1711
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40	40.026587	7713	1684
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eq0_cnf	40	40.079049	25928	1580
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.085201	34440	1882
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40	40.115390	38461	4662
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	11.578287	2400	458	16.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_inj	40	40.060699	16323	3649
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40	40.070390	2640	725
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	40	40.085468	19182	3686
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_unique	40	40.114492	30957	4127
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_T	40	40.315023	8039	1478
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	40.072957	20079	3273
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40	40.044688	11493	2489
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	40.113491	47099	2086
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.191786	13452	1811
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	40.248714	16928	3345
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_lb	40	40.357531	39117	2541
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40	40.062206	16622	1047
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nth_revapp_l	40	40.069293	13555	2520
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.114598	43956	2011
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_N	40	40.094108	25706	2966
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ub	40	40.089589	32351	2350
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	10.147231	1263	327	0.0.0.0.0.0.0.2.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_N_embedding	40	40.193681	66950	3552
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40	40.130148	10471	1331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_nonzero	40	40.074951	21392	2533
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU	40	40.039082	11697	2076
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40	40.028802	7365	2200
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_r	40	40.033686	6846	2299
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	40.049763	13528	2155
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_invQ	40	3.669675	1907	270	13.10	synth with cache (only 1: intros a Ha; only 1: f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	40	40.040969	10741	3417
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.179512	75039	5389
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.091025	26774	5490
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_Nle	40	40.075972	21252	3626
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_refl	40	1.321885	520	94	1.2.0.1.0.4.11	synth with cache (only 1: apply eq_iff_eq_true; only 1: split; only 1: auto; only 1: intuition; only 1: unfold Nleb; only 1: apply Nat.leb_le; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40	40.329455	76355	2113
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.091953	23172	2871
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_0	40	8.107030	1325	371	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.1	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40	40.184337	76590	2625
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.165686	37	9	3.2	synth with cache (only 1: intros n m s1 s2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_tg	40	8.625388	1508	557	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40	40.083345	30581	3500
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.111883	39910	3300
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.019841	4528	2008
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.330504	1183	283	10.8	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40	40.046404	13029	2949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40	40.043176	11371	1734
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_not_eq	40	40.169711	6737	1668
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40	40.109722	22867	2702
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	40.128868	48455	2798
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	0.027532	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.049669	20	4	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.076883	29655	2621
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40	40.049373	11029	5740
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.109873	39868	3022
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40	40.044091	11073	2013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_to	40	40.076189	30735	1819
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_nonnil	40	10.446456	3050	930	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: unfold unorm; only 1: generalize (nzhead_nonzero d); only 1: destruct nzhead; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_D0	40	0.007790	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_iter_D0	40	0.015126	1	1	0	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40	40.046694	11458	1473
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.066968	16359	6159
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_dec	40	40.097522	32621	4743
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.046357	8865	1518
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40	40.006369	830	154
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_ind	40	0.710327	774	112	0.3.7.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40	40.148036	53781	3613
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.substring_correct2	40	40.058763	13186	8286
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_intro	40	3.468525	3750	385	6.20	synth with cache (only 1: intros x y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40	40.025186	7491	1036
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40	40.039510	11593	1679
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40	40.042263	13074	1893
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40	40.033569	7823	1157
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_iff	40	40.060235	16219	4987
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.087237	31360	4339
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_unique	40	40.104455	40978	4550
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	40.044921	14180	1087
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.062490	21	5	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_r	40	0.018148	4	4	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_0_l	40	0.426006	112	28	0.8.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_0_r	40	0.016853	4	4	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40	40.099083	35548	3538
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	23.515543	19414	2674	0.0.0.0.18.0.8.3.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros s2; only 1: rewrite <- 2!find_mapsto_iff; only 1: constructor; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.683131	461	97	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_1_r	40	0.067113	14	5	6.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	40.073568	24397	4442
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40	40.234752	17420	2636
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_involutive	40	41.198902	12189	1096
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	40.192401	14893	2466
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	40.143344	13638	2475
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.054923	162	12	18	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	3.555253	1407	356	0.0.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: intuition; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40	40.062236	15386	935
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_bl	40	40.655892	28583	887
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.094467	33583	3308
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pshiftl_nat_plus	40	40.086665	27205	6199
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_del_tail_head	40	40.068297	22248	2596
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_1	40	40.094957	34381	2401
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40	40.041805	12450	2548
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.N_ascii_embedding	40	40.080226	27966	2435
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40	40.047585	16521	1200
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_cases	40	40.110398	39043	3311
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	40	40.064756	7871	1647
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40	40.135466	25309	2630
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_le	40	40.099047	34735	5713
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_lt_0	40	40.034893	8005	3080
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealQ_dense	40	41.093085	29116	1208
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40	40.093679	33808	3075
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_dec	40	18.347576	17398	1483	3.0.9.33.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_antisym	40	40.090208	26470	4585
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.232314	42057	1139
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.011361	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	24.977004	4762	1026	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40	40.044487	15165	1762
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.022129	5163	2056
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40	40.265460	110293	6397
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.071511	23487	2028
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40	40.047296	11819	3518
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_eq	40	40.072346	23433	3207
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40	40.056943	16561	3059
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40	40.135007	52030	2231
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0.022028	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	0.011885	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.062663	19296	4782
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.xgmapi	40	40.056275	11287	2621
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40	40.059770	15045	4937
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.055541	17440	2714
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40	40.036587	10399	1891
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0.086814	8	1	7	synth with cache (only 1: apply two_power_pos_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_of	40	40.101563	34700	3674
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_gt	40	3.815930	3561	456	9.21	synth with cache (only 1: red; only 1: now apply N.gt_lt).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nb_digits_unorm	40	40.091353	28455	1805
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.WeakKonigsLemma	40	40.138055	58383	2909
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	40.075316	20908	4996
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.076368	23881	3483
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40	40.006011	1006	150
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40	40.069465	14719	4526
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.prefix_correct	40	40.100347	38398	4265
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.057773	15	6	0.0.0.2	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	40.085619	28698	2824
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.031525	8202	2201
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.045079	14446	2003
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40	40.041910	12695	700
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nztail_to_uint	40	40.091917	20466	2919
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_id	40	40.055276	16230	3710
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40	40.066860	22743	1235
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.056246	20271	2924
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	40	40.057392	21798	1719
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40	40.035463	7612	2288
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_gt_lt_contravar	40	40.294676	8720	470
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40	40.224396	10248	1603
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.279125	17402	3268
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40	40.034300	7361	2964
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.040410	8913	899
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.eqb_false	40	40.319662	4207	1590
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.076283	21340	4747
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.app_int_del_tail_head	40	40.063768	11730	3623
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.097634	33792	4155
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.114669	39793	3651
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_eq_sym	40	0.027985	5	2	1.2	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	40.036609	10813	1896
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40	40.090953	34876	1951
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.132098	50141	3090
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.N_ascii_bounded	40	40.030018	9718	1155
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	40	40.038465	10229	2246
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40	40.059853	15024	3629
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	40	40.091741	34634	1480
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.025554	5	4	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_correct	40	40.110667	37259	4437
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_gt_0	40	40.051801	14829	3485
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.115201	39547	3281
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_spec	40	40.320758	26601	1650
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.inject_Q_mult	40	40.104797	11659	2039
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_trans	40	40.084090	29924	2161
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	40	40.068787	7054	619
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40	40.283138	31268	3029
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.125032	23607	2085
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_continuity	40	40.036847	8971	2369
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	40.109270	41600	3444
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40	40.093879	32731	3466
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	40.077232	29237	1582
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	22.281671	16607	1724	2.2.1.12.6.6.4	synth with cache (only 1: intros a b n Hn; only 1: intros Ha Hb; only 1: rewrite Ha; only 1: induction n; only 1: trivial; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.203877	82	29	9	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.118170	43609	2559
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_r	40	40.052047	14272	3610
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.gmapi	40	40.067440	14951	2745
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	0.981180	265	73	0.4.3.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: destruct H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40	40.056967	13945	4869
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40	40.044727	11162	1495
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.064547	23288	1922
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.137500	51883	2772
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40	40.128331	49778	2774
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	1.712776	713	82	0.1.0.19	synth with cache (only 1: constructor; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_invol	40	40.092459	24871	4562
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.088653	27301	3832
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcle_minus_iff	40	40.657407	16031	2108
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40	40.006046	1678	146
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.155425	58248	2948
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct1	40	40.107280	37994	6888
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	22.498228	21301	2252	5.0.9.8.2.13	synth with cache (only 1: intros x y z; only 1: red; only 1: intros; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.088814	27149	2991
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.040692	5	5	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40	40.073505	29780	1788
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	10.061474	2005	482	0.0.0.0.0.0.0.3.0.0.4	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_spec; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	2.170151	357	118	1.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (CReal_plus_comm y), (CReal_plus_comm z) in H; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	13.399688	1730	477	0.4.8.1	synth with cache (only 1: destruct n; only 1: compute; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	7.124599	3100	1096	0.0.0.0.0.0.2.6	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.021791	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40	40.048513	6301	1099
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.051295	16619	912
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	40.798440	12178	1799
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.of_to	40	40.095086	31936	3005
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_comp	40	40.074050	28085	1771
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.075662	26709	2062
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zne_left	40	40.329771	30301	2745
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_mult	40	40.053980	20269	2989
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.465100	16	4	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left	40	0.435640	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40	40.064829	10908	2196
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.008774	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_rev	40	0.007270	2	1	1	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.006447	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_lt_cancel	40	40.057814	6048	2803
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.234724	12915	1716
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.297413	29204	3431
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.060417	13723	4718
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40	40.109298	37905	1405
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	8.649578	21228	255	0.2.0.0.2.195	synth with cache (only 1: generalize (PeanoNat.Nat.lt_succ_diag_r 0); only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro H; only 1: simpl; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_semantics	40	40.110951	39453	3126
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	40	40.101555	35172	2913
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_comm	40	40.102328	21711	2495
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_comm	40	40.111483	39517	3464
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	40.066521	19777	4526
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.059258	6189	109	0.0.108	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.of_to_nat	40	40.428494	34628	927
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.009882	3888	81	87	synth with cache (only 1: now BinInt.Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.371087	62	11	6.1.0	synth with cache (only 1: intros l2; only 1: compute; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zge_cases	40	40.156563	59504	2895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40	40.132984	53704	1182
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.150631	60186	2710
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.072471	25103	5949
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	40	40.141927	57742	2656
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.090195	29344	4711
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_lt_0	40	40.041892	9254	3248
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40	40.144181	51088	4983
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zsgn_spec	40	40.319401	20910	1444
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_nat	40	40.732803	42316	922
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_ltb_trans	40	40.074283	24006	1358
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.049281	12984	1823
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40	40.039428	12022	2336
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40	40.275910	129250	2031
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40	40.220971	13092	1140
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.041095	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40	40.132028	53234	3279
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	12.729750	5570	454	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.059773	5	4	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.add_m	40	40.072840	6593	3793
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	11.019644	3132	298	0.2.11.0.0.10	synth with cache (only 1: intros a; only 1: unfold Z.eq, Z.add; only 1: simpl in *; only 1: induction a; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	3.329429	654	108	1.5.9.1	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.445687	72	22	0.1.0.5.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	40	40.101200	34750	4995
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_l	40	40.062084	19901	4050
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_1	40	40.100527	28826	3192
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40	40.064232	16753	4624
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40	40.083086	30559	2808
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.037690	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	40.078001	22784	3681
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	40.115822	41208	3251
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	40.065005	21333	1483
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.039430	5	4	0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	0.050110	8	4	0.1.3.0	synth with cache (only 1: intros; only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nztail_invol	40	40.070999	18317	2295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_invol	40	0.020683	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.488713	689	89	0.0.0.0.0.0.20	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.169025	17877	2128
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	40.004543	685	198
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.095423	22459	2699
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct2	40	40.060370	17382	6214
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	7.500585	6187	806	1.2.3.3.3.1.15	synth with cache (only 1: destruct x; only 1: Z.swap_greater; only 1: intros; only 1: easy; only 1: intros; only 1: split; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.127010	48158	1996
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.051639	19100	1759
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.045968	9678	1978
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	40.265028	26630	2522
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40	40.085397	22308	5741
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.040980	11328	2281
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.042895	12040	2995
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.to_of	40	40.087745	25775	6010
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_opp	40	40.164823	67547	4642
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40	40.028823	6763	2566
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	18.239486	5496	581	1.0.0.24	synth with cache (only 1: intros a n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now rewrite add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_pos	40	40.089372	34643	3983
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40	42.232100	12034	1323
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	3.177918	1748	76	44	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40	40.068366	21602	1837
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.301488	13247	1434
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40	40.250967	16675	686
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.149486	10880	726
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_ge_le_contravar	40	40.097449	6497	1684
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.026144	7150	1228
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	4.610546	275	71	0.3.4	synth with cache (only 1: compute; only 1: intros (Hr, Hr'); only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	3.026011	1715	70	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Por_semantics	40	40.068581	18350	4925
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	40	40.119313	28750	3045
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ultra_1	40	40.072197	24561	2356
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_refl	40	40.173960	70355	3265
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.082510	24046	4336
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.711497	1996	260	0.0.0.27	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_cases	40	40.120097	42636	4021
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat	40	40.392948	7094	703
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40	40.058638	6687	1301
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40	40.062476	16421	8087
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.nat_ascii_embedding	40	40.074210	11334	1075
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Z_of_nat_set	40	40.151342	62800	2635
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40	40.162318	20237	3484
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40	40.031118	6414	3304
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.093209	30368	3813
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_nat_le	40	40.343919	33795	3058
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_0_compat	40	40.144300	6766	1277
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.075068	20639	3142
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	40	40.055899	11168	1553
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.042101	12120	2712
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_bezout	40	40.084950	28911	2468
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.409382	15803	2218
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40	40.135026	52512	4469
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_m	40	40.037449	6310	4055
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40	40.087008	15852	401
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	40.055292	17773	2745
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.109461	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_r	40	40.051949	14303	3563
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	7.760843	7874	1033	0.0.0.5.6.1.0.0.13.2.2.0	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_2	40	40.099754	27291	2809
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40	40.059862	14574	4396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.082024	23754	3984
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40	40.125732	44071	4245
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.norm_invol	40	40.096128	36501	425
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.083303	28574	3323
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0.047798	1	1	0	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_ge0	40	27.365036	22280	2022	0.0.1.2.32.2	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nor_semantics	40	23.960883	21871	2009	4.0.84	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40	40.005078	935	224
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_le_compat	40	40.104737	23030	3641
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.151410	61802	1102
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_S	40	40.091185	11839	1527
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct3	40	40.058102	17520	3898
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.118159	41508	1867
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.079137	23778	1743
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.032649	19	6	4.1	synth with cache (only 1: intros n m; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.031933	6238	1067
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.126183	65	21	7.1	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zge_left	40	34.871561	15079	2006	0.35.7.2	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left	40	0.175799	41	15	0.0.0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40	40.358499	25421	2662
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.025125	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_rev	40	0.028057	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	0.957283	576	41	0.0.0.0.29	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	0.971923	479	118	9.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40	40.062965	13333	5837
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40	40.044593	14034	2163
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.to_int_inj	40	40.088402	24165	6614
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_mirr	40	40.117400	45352	3617
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.069686	24032	2437
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40	40.020442	4584	1186
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.070244	7710	825
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40	40.267296	26356	223
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40	40.158992	9739	2071
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40	40.042911	9721	3682
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.063801	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.245385	32	18	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_plus_distr	40	40.302835	5588	1371
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	40.053696	3567	704
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	7.076188	2661	865	0.0.1.0.0.1.0.0.0.0.3.6.0	synth with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: rewrite filter_spec; only 1: destruct (f x); only 1: auto; only 1: generalize (H x); only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40	40.040001	8913	1906
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.857404	44	16	0.2.0.2.0	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: intro H; only 1: simpl; only 1: rewrite <- !mul_add_distr_l; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ultra	40	40.060542	17586	3273
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_1_l	40	2.548664	192	66	2.2.7	synth with cache (only 1: split; only 1: apply CRisRing; only 1: apply CRisRing).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40	40.073488	21744	2770
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_rev	40	40.043214	9955	1691
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.109997	32315	6407
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_imp_le	40	40.107621	41200	2383
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.106125	8	4	0.0.4.0	synth with cache (only 1: unfold Z.le, Z.min; only 1: intuition; only 1: apply Z.leb_le; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40	40.110026	30191	3455
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.067776	24591	3629
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.nat_ascii_bounded	40	40.075893	4225	226
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.natlike_ind	40	40.145773	59412	4758
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.060346	18551	4121
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form1	40	40.047137	13667	2364
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_1	40	40.099156	33362	3373
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.574713	325	77	3.0.2.4	synth with cache (only 1: intro H; only 1: intros; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_nat_lt	40	40.333312	29912	2604
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_trans	40	40.072002	19566	3315
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form2	40	1.799162	182	85	2.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.034166	10460	2581
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_mult	40	40.032349	6430	1270
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.037920	5155	819
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l	40	40.173345	3482	972
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40	40.145332	7183	774
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_iff	40	40.143385	1962	333
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmake_Qdiv	40	9.852834	7969	829	0.34.0.11	synth with cache (only 1: Z.bitwise; only 1: simpl; only 1: Z.nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.032805	10177	1307
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	18.180455	8480	1742	1.1.5.0.0.1.5.2.0.0.1.0	synth with cache (only 1: induction s; only 1: inversion 1; only 1: inv; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: inv; only 1: elim_compare x a; only 1: eauto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.086031	28418	3918
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.046357	15551	2188
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40	40.235655	99466	5764
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	3.501104	611	260	0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	0.103481	60	24	1.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.087525	20140	2621
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	0.782178	948	150	1.0.14	synth with cache (only 1: compute; only 1: intros A B P R H; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40	40.045579	9119	4485
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_inj_pos	40	40.061700	17202	3086
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.275802	222	47	0.4.0.6.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.054983	13664	2426
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.nzhead_app_nzhead	40	40.063011	18678	910
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40	40.171020	71283	2605
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_lt	40	40.078817	28971	3673
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	40.279404	24834	3607
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pand_semantics	40	40.075309	20239	5433
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nand_semantics	40	0.482965	163	78	0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_le_compat_r	40	40.045168	12034	2496
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	40.004028	780	152
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40	40.081000	29534	1789
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40	40.075116	26651	1873
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct4	40	40.069793	24744	3347
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40	40.085155	31695	2778
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_mult_approx	40	40.303113	15694	1835
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.135738	47046	2916
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat	40	40.300884	18158	2206
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40	40.057987	11404	5867
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.040187	11210	2368
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.026141	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	4.434161	4297	884	0.19.0.0.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: intros; only 1: simpl; only 1: rewrite ?H; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	40.104440	33398	5967
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.077477	25841	4009
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40	40.031508	7732	3580
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.040565	7	3	0.4.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	3.423359	850	93	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40	40.076540	23358	1859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40	40.076845	7671	2912
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.057646	20323	573
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40	40.038433	7203	3800
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40	40.058801	18688	3797
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.041036	4556	707
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.032255	9880	1273
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_ultra	40	40.139191	5449	1715
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40	40.060651	17417	4721
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_1_r	40	40.046110	3139	766
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	40	40.099016	39456	512
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_D0	40	0.015269	3	1	2	synth with cache (only 1: now destruct u).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_iter_D0	40	0.012287	1	1	0	synth with cache (only 1: now induction n; simpl; [  | rewrite IHn ]).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.090509	28508	2364
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40	40.053338	17664	5258
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.021060	4042	909
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	40.067670	5683	329
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.natlike_rec	40	40.149739	57058	4767
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.064356	20437	5204
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_3	40	40.113924	39122	4161
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.071682	20166	2050
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form3	40	40.036377	9579	1947
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40	40.050104	16195	2227
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_bezout	40	40.081273	29855	2325
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.062629	9665	1033
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_r	40	40.156368	2588	600
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40	40.136785	18211	2288
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.061798	8550	194
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.048959	17050	1825
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_l	40	1.423200	184	50	0.0.0.5.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CReal_mult_lt_compat_l x); only 1: exact H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.185034	27467	3763
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.054330	16232	2312
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_gt	40	40.079005	29140	2491
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_le	40	40.076253	21717	3549
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40	40.200998	8114	2561
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_2	40	40.075601	16392	2565
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0.008351	6	1	5	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.form4	40	10.754403	1199	650	0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40	40.043617	7689	4415
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40	40.302583	128994	7067
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.cmp_eq	40	40.141353	55766	2091
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40	40.065261	24600	1063
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.unorm_app_unorm	40	40.031429	7596	473
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_ge	40	40.107956	24559	2421
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.022778	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.265906	25248	3340
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.104249	34983	4187
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiff_semantics	40	0.249432	55	29	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	2.133875	646	216	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.048001	11143	2543
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	40.005998	1669	133
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40	40.061865	21019	1456
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40	40.054398	20826	848
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.096097	21989	2637
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.042268	13126	1735
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.326325	32480	2495
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40	40.048718	14526	2760
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_r	40	40.321813	11991	1746
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_spec	40	40.096177	35359	1892
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.271834	127747	3629
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.of_int_norm	40	40.125599	43155	6261
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_minus	40	40.099019	27255	4088
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40	40.031403	10391	1194
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40	40.108916	33946	1711
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.063953	18033	2055
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	4.304797	2718	120	68	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.066222	19204	2566
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40	40.282205	20118	613
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.054226	12560	3532
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	17.916661	14342	1779	0.2.1.3.0.2.20.4.2	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.048258	15844	851
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.111739	40233	4868
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	40.036362	11313	1852
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40	40.098636	33598	4335
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_assoc	40	40.141461	6764	1078
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	6.647799	1978	311	0.0.0.0.3.16	synth with cache (only 1: unfold Z.le, Z.ge; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.060820	14	7	0.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_comm	40	0.095974	7	3	0.4.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Rmul_comm).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.058243	15	6	2.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	40	40.077435	22406	2794
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	3.610384	6382	627	7.8.6.3.7	synth with cache (only 1: intros LE EQ; only 1: revert EQ; only 1: intro H; only 1: apply BinInt.Z.lt_nge in H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.140061	54803	3013
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	40	40.054275	17407	3293
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.087800	35	15	4.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_contravar	40	0.046600	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_contravar	40	0.096847	31	16	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.030339	4196	946
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40	40.039839	5064	859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	3.834214	5273	382	1.5.13.20.8	synth with cache (only 1: red; only 1: intros n; only 1: intros a b; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40	40.066336	15722	1779
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.424536	245	108	0.4.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.057190	33	11	0.2	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.in_bdepth	40	40.060914	20178	3761
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_contravar	40	0.168385	26	16	2	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_contravar	40	0.082678	4	4	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_spec	40	40.089027	27709	4477
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	11.421551	1073	587	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_mono	40	40.092186	25967	2863
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.atan_eq_ps_atan	40	40.030695	8114	2098
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.bezout_rel_prime	40	40.052818	19117	1422
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40	40.078209	24785	2055
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40	40.027867	4520	394
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	40	40.149126	10530	2080
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_r	40	40.138335	6072	928
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qopp_comp	40	40.065974	19879	3708
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.155144	13421	4025
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.051773	16097	2442
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.076890	26191	3594
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.040417	12287	2175
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_l	40	26.395162	4447	1572	0.0.0.0.0.0.0.0.0.0.0.4.0	synth with cache (only 1: intros [xn limx]; only 1: rewrite CReal_plus_comm; only 1: apply CRealEq_diff; only 1: intros; only 1: unfold CReal_plus, CReal_opp, inject_Q, proj1_sig; only 1: rewrite Qred_correct; only 1: setoid_replace (xn (2 * n)%positive + - xn (2 * n)%positive - 0)%Q with 0; only 1: unfold Qle; only 1: simpl; only 1: unfold Z.le; only 1: intro absurd; only 1: inversion absurd; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	4.149604	1398	329	7.8	synth with cache (only 1: intros x y Hx; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	40	0.202525	108	9	15	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	0.011011	3	1	2	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40	40.221129	22246	2299
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_0	40	40.050924	15531	3346
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.068651	24454	2229
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.cmp_antisym	40	40.086825	28349	4137
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_nat_bounded	40	40.044732	14868	185
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.030493	5896	2702
coq-tactician-stdlib.8.12.dev	Coq.Numbers.HexadecimalFacts.norm_app_int_norm	40	40.039359	7353	2043
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.092891	37089	3386
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.295149	14223	1578
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_faithful_0	40	40.161225	59895	4700
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40	40.136469	16453	3675
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.051141	13598	2869
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.007664	2216	119
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	2.685142	2166	321	10.3.7	synth with cache (only 1: intros; only 1: intro x; only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	40	40.048699	13394	2711
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_byte_of_string	40	34.302108	24389	2945	0.0.5.0.15.13.0.0.0.1	synth with cache (only 1: elim s; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: rewrite <- H  at 2; only 1: Morphisms.f_equiv; only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: destruct a; only 1: rewrite to_bits_of_bits; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40	40.049545	17279	746
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	7.295934	1618	530	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40	40.105771	43405	3246
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40	40.066052	17852	2657
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.132529	49337	2969
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Signed.of_inj_pos	40	40.068064	18719	4720
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_mult	40	40.096263	30879	4008
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.Nth	40	40.065010	4048	1262
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.Neqb_ok	40	0.407838	100	39	0.2.0.0.0.0.0.1	synth with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: now try N.order'; only 1: now try N.order'; only 1: now try N.order'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.010983	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40	40.088555	29910	1566
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_le_prime_inf	40	40.157334	31706	1672
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_const	40	3.639122	4245	444	0.0.0.0.36	synth with cache (only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40	40.045931	3578	590
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.593388	184	23	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor0	40	0.075920	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.082858	25533	3731
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40	40.161063	17102	2711
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor1	40	0.061126	10	9	1.0.0.0.0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40	40.066165	21157	199
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40	40.057391	18469	3937
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.666927	120	28	0.0.0.0.4.4	synth with cache (only 1: red; only 1: red; only 1: intros; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_l	40	40.036184	3803	710
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40	40.109715	22337	2933
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_r	40	0.413544	21	16	2.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Rdistr_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	40.059322	20313	1972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	40	40.056583	12556	3226
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	1.216236	847	118	9.20	synth with cache (only 1: compute; only 1: inversion_clear 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.092486	114	16	0.2.11	synth with cache (only 1: unfold PX.eqk, PX.eqke; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_total	40	40.072463	22760	3643
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_of_byte_via_N	40	40.060037	3768	856
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.098340	34679	1794
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40	40.091193	28457	3468
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40	40.173876	71377	4302
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.054860	17198	2806
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.019673	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.017867	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.018677	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_Psatz_sound	40	40.422209	13556	1525
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.162434	30	14	0.0.0.4	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.018000	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.074312	30217	1603
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_1	40	40.109791	37175	3905
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.034684	7	3	4.0.0	synth with cache (only 1: intros a n m H; only 1: rewrite remove_spec; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.052908	15	5	2.0.1.1	synth with cache (only 1: intros n m p; only 1: rewrite remove_spec; only 1: apply H || intro; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.065487	16203	3046
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.020926	3975	1715
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Gauss	40	40.072627	26967	2666
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_eq	40	40.032957	8737	2784
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	40	40.090052	28633	3005
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	40	40.063189	19838	2846
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.051463	16728	2495
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_lt_cancel	40	6.734142	2813	592	0.5.0.8.1.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: intro Hnotz; only 1: eapply Rlt_not_le; only 1: eauto; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.075904	46	15	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_iff	40	40.246434	10957	2208
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.084878	31711	3645
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot2_odd_remainder	40	40.052712	18648	1465
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_r	40	40.160412	7792	2110
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.subset_m	40	40.062854	19692	2679
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	25.203157	12981	559	56.22	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	40.466112	12109	938
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.cmp_lt	40	40.122122	46035	2151
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.050025	6885	2950
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.083605	24946	2727
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.of_nat_None_iff	40	40.044673	5046	366
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40	40.031574	5825	3257
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40	40.084027	32156	3513
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_l	40	4.264418	1000	635	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	16.514034	11022	2067	0.0.2.0.2.2.2.4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_faithful	40	40.140897	49567	5541
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_1	40	40.059352	20565	2177
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.260911	10279	2325
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40	40.003792	643	168
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.068039	20156	3154
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40	40.289805	66691	4106
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmax.Zmax_spec	40	40.229024	24628	1644
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.234065	107710	3725
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmax.Zmax_left	40	0.168244	39	17	0.6.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: intros; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40	40.177643	70456	2880
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40	40.071807	15317	2204
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmax.Zpos_max_1	40	2.167953	628	58	1.4.12.9	synth with cache (only 1: induction p; only 1: easy; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40	40.079094	30330	2285
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40	40.065872	5171	937
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40	40.070694	21252	3867
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.056716	15726	1758
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_scal	40	40.096171	33340	4240
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.138445	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40	40.098768	32190	3785
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40	40.086793	25677	3197
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	17.981229	13246	1095	5.7.7.8.1.24	synth with cache (only 1: intros m a b Ha; only 1: red; only 1: destruct m; only 1: intuition; only 1: inversion_clear H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.268392	2499	415
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.nat_N_Z	40	0.082336	62	20	2.0.0.3.1	synth with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40	40.283594	12496	938
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.039066	9049	541
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40	40.079196	26171	4509
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	2.089278	115	24	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans	40	40.098553	34626	2858
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.060454	13425	3102
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40	40.029372	10409	921
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRzero_double	40	40.053182	3357	1246
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_plus_mono	40	40.086755	32462	2224
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_pos	40	0.017162	27	3	9	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	40.371462	18352	1491
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	40	40.109085	40183	2212
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.101540	33715	4343
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_of_byte_via_nat	40	40.038530	8854	3399
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.038072	13219	1337
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Ztrichotomy	40	1.589036	496	183	2.0.0.0.1.1.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.075936	26123	4032
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	40.035311	8388	1680
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_1	40	40.188211	68909	5302
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.042285	7	3	2.0.2	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_mono_conv	40	40.170719	26376	2516
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.030230	6901	2063
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	40	6.210131	2022	500	1.1.0.1.0.1.2.0.0.1.0.1.0.0.0.1.0.0.0	synth with cache (only 1: revert d'; only 1: induction d; only 1: intro H; only 1: discriminate; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: intros d' H; only 1: destr_eq H; only 1: intros d' H; only 1: destr_eq H; only 1: intros d' H; only 1: destr_eq H; only 1: intros d' H; only 1: now rewrite ?IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: intros d' H; only 1: destr_eq H; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_mult	40	40.064294	22784	2478
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.038941	8760	1613
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI_ineq	40	40.045076	13214	2821
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	40	40.029920	6473	675
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_comp	40	40.049715	16545	2681
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_cancel	40	40.037776	10462	3245
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_0	40	29.330587	21011	1727	0.3.6.0.1.9.13.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.396452	67102	2531
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_min_pos	40	11.374965	3174	510	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.318234	717	156	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	40.086685	35651	1242
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.019751	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	13.609416	6267	902	0.9.0.5.7.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_odd	40	40.030446	9064	1141
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zge_is_le_bool	40	1.193831	637	140	0.3.0.10.0	synth with cache (only 1: unfold Z.leb, Z.le; only 1: split; only 1: now case Z.compare_spec; only 1: Z.swap_greater; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	9.146602	1079	494	0.0.1.0.0.0.1.0.0.0.1.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.equal_m	40	40.038935	6272	3247
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.240638	92	26	1.4.2	synth with cache (only 1: intros n; only 1: intro H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.072790	22517	1060
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.029321	958	159	1.2.0.2.10	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.902403	76	31	0.3.1.1	synth with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40	40.076680	21972	3563
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_lt	40	40.245435	106824	642
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	40	40.041712	9706	2688
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.035442	6390	3317
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_1	40	40.111648	45089	4562
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_Proper	40	40.269607	12632	2042
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40	40.161882	67294	3268
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful	40	40.097930	33883	4519
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_to_N	40	40.055228	7525	3975
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40	40.004488	480	149
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40	40.123733	5230	1825
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	4.031382	3436	398	18.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	3.079835	1368	434	2.0.1.0.0.3.1.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40	40.033845	7506	2297
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40	40.229506	63844	5707
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40	40.109092	43428	2168
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_1	40	40.126102	16901	2088
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	3.662906	1493	439	0.0.1.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: now destruct Hx).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.023292	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40	40.083654	31223	2973
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40	40.046514	9320	1361
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40	40.150094	48565	2979
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	40.548978	9471	1837
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_id	40	40.079516	20428	2861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.677386	294	57	2.0.0.4.3	synth with cache (only 1: intro x; only 1: intros n H; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40	40.056118	13624	3145
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40	40.078007	24888	3280
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N_nat_Z	40	40.070684	25133	2478
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.028298	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_Z	40	0.018529	4	3	0.1.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_nat	40	0.010050	3	2	0.1	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_N	40	0.042205	8	7	0.1.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.207082	5093	1273
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	40	40.454517	5177	981
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_N_nat	40	0.226390	249	50	15	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40	40.026793	6113	1103
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40	40.091458	31706	4046
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor4	40	40.262734	4049	651
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_nat_N	40	2.037405	957	76	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs_N_nat	40	0.154410	50	5	11	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor5	40	0.591606	12	4	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor6	40	0.014256	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.new_var	40	0.051325	22	6	0.4.2	synth with cache (only 1: intros; only 1: exists x; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA1	40	0.022391	2	2	0.0	synth with cache (only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA2	40	0.064353	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40	40.083294	22675	2043
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40	40.036954	11982	1802
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	40	40.458834	126894	497
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_0_r	40	40.781449	1371	182
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.090956	29719	3509
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_via_N	40	40.055845	5850	360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40	40.042940	7908	1426
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	24.391569	12199	1795	0.0.0.6.19	synth with cache (only 1: intros a0 a; only 1: intros E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.dec_Zne	40	40.088195	30589	1340
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.107198	22572	3084
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	40.064945	23775	2381
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_spec	40	40.099806	30661	5716
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.170035	28566	2824
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs_nat_N	40	8.751835	9342	193	0.0.0.0.0.119	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: apply positive_nat_N).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.id	40	0.007391	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_0	40	40.054166	10033	3924
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj	40	0.113216	31	21	1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_iff	40	0.595674	116	79	1.0.3.2	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros EQ; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.is_nonneg	40	0.044365	24	10	0.2.0.2.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.006074	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pos	40	0.006496	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_compare	40	0.436191	141	54	1.0.0.2.0.3.0	synth with cache (only 1: destruct n, m; only 1: easy || now destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_cross_prod	40	40.063312	19733	3242
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sin_atan	40	40.029360	7666	1933
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.046199	11144	1814
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.054261	15337	1722
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.082590	2	2	0.0	synth with cache (only 1: unfold add; only 1: now autorew).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.052497	14737	4621
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.142423	18	6	4	synth with cache (only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_le	40	3.042636	1387	357	2.4.0.0.0.0.4.1	synth with cache (only 1: unfold N.leb, N.le; only 1: destruct n, m; only 1: reflexivity; only 1: simpl; only 1: easy'; only 1: simpl; only 1: now split; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.078591	24901	4001
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_pos	40	40.119701	18260	2934
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	0.878922	338	160	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_ge	40	0.012433	3	2	0.1	synth with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_gt	40	0.012616	5	2	0.3	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.345285	31089	4413
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	40.160184	69967	1390
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.014891	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.017385	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.016051	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_even	40	40.055089	15950	2877
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_is_lt_bool	40	40.096226	32639	3583
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.369054	10094	967
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40	40.030059	6408	1410
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40	40.049833	9226	1106
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_gt	40	40.235626	103619	633
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	40.123642	47510	2952
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_eq	40	0.011260	4	1	3	synth with cache (only 1: now apply Ascii_as_OT.cmp_eq).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.029570	5853	2201
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	40	40.028293	6406	2515
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_T	40	40.306480	7440	1176
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.101888	32344	5100
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N	40	40.070170	20716	1411
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40	40.007775	368	122
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	40.054537	11451	1452
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.043251	10020	2369
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.023212	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	40.089295	26159	4846
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	1.144135	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.210763	61218	4969
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.126803	92	25	1.0.4.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	1.851554	720	213	0.0.2.0.7	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.016850	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.127910	43	11	0.0.6.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.115424	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.068315	18818	1650
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.114906	7805	1389
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	21.429867	51979	2494	0.1.1.0.38.21	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.076952	25406	3171
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40	40.085020	33626	2550
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40	40.043405	7112	1363
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40	40.097213	22516	3174
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.587746	131	51	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.029483	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0.008561	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.057491	16973	2929
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	40.268557	27241	2822
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40	40.057692	14900	1922
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.071772	20968	3216
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40	40.066202	14896	712
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.243083	12727	3755
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.086305	28818	4011
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.009890	1	1	0	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.062960	14263	2528
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.059539	15729	1380
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	40.068405	21054	2573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40	40.034622	12324	1299
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	40	40.472361	33889	2750
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_0_l	40	40.563165	2394	415
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_correct	40	20.821021	25836	3044	5.1.2.0.12.0.19.0	synth with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: simpl; only 1: split; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.232467	95271	3472
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_via_nat	40	40.074001	3926	827
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.608050	388	124	14.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.018376	5	3	0.2.0	synth with cache (only 1: destruct n; only 1: split; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40	40.046130	15926	1339
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_le	40	40.084517	31589	3950
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.dec_Zgt	40	40.131223	49369	3476
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	8.232307	676	376	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	32.296324	71188	1485	5.1.6.3.138.25	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_add	40	0.008275	3	1	2	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_mul	40	0.008472	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.genCuttingPlaneNone	40	40.093563	34390	4066
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.119105	42201	4018
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_mono	40	40.058434	16945	2205
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	40	40.061667	19906	1315
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_D0	40	0.009664	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_iter_D0	40	0.011251	1	1	0	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.067245	22379	3483
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.cos_atan	40	40.031492	7801	2220
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	40	40.065651	18859	935
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.036323	4039	1320
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	40	0.007208	1	1	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40	40.090985	17896	1804
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_comp	40	40.048914	14746	2496
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.106518	39498	3148
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.058677	923	146	18	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_compat	40	40.340104	24007	4054
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.084412	10	4	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.043067	17	5	0.3	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.172076	150	29	11.0	synth with cache (only 1: intros l a Hin; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.013528	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.069542	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.049057	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double	40	10.885479	6306	1370	0.1.0.0.7.8.0.1	synth with cache (only 1: intros a; only 1: intros H; only 1: N.bitwise; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	27.214829	8438	3611	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.581265	149	38	0.7.1	synth with cache (only 1: intuition_in; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.047708	17016	1874
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zeven_rem	40	40.086619	30745	2531
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.417399	745	119	0.13.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.074315	22349	4810
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.951148	249	58	10	synth with cache (only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.013403	3	3	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0.008689	1	1	0	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	6.920148	4007	554	0.2.2.0.15.0	synth with cache (only 1: simple induction 1; only 1: Z.nzsimpl'; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40	40.199178	33183	4592
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.082096	177	59	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.029559	7	4	0.0.0.3	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.030085	6486	2524
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.029061	7135	2354
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.034238	8165	2732
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.137367	58529	428
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_inj	40	40.041035	8480	2586
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	3.896046	899	307	0.0.2.1.0.1.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros x y; only 1: intro H; only 1: intros; only 1: rewrite <- H; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.017305	3	3	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.271376	74	32	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_correct	40	4.537197	1732	491	0.0.0.0.0.0.1.0.0.7	synth with cache (only 1: intros [| ] ?; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.empty_spec	40	0.228792	349	49	5.16	synth with cache (only 1: intro y; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.empty_ok	40	0.004634	8	1	7	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40	40.168593	12303	2279
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcrt	40	9.097699	1449	550	0.0.0.2.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.9	synth with cache (only 1: split; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: auto; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	2.782825	1547	371	6.0.4.0.0.0.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intro; only 1: inversion 1; only 1: simpl; only 1: intuition; only 1: constructor; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	40.076289	24785	2629
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_0	40	2.902073	881	69	29	synth with cache (only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40	40.055998	13458	2025
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40	40.246081	23365	1637
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	40.075357	21053	5307
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40	40.004409	486	120
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.014921	4	2	0.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.122908	5698	669
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0.095665	10	5	3.1.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.007931	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40	40.180298	15759	1613
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.136009	50899	5516
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	0.242444	70	17	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.091954	35384	3096
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40	40.111282	23940	4511
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40	40.071103	11439	1851
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	40	40.171731	48726	3693
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	8.407895	7308	1300	1.0.2.4.0.0.1.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	7.510558	3557	733	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	1.726600	1463	285	1.1.1.2.1.11	synth with cache (only 1: induction l as [| x xs Hl]; only 1: intuition; only 1: intro; only 1: intro; only 1: intro; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.066137	21005	3580
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40	40.073741	21033	3955
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.614033	12804	2944
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.645495	299	48	0.0.13	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_2	40	40.360726	6705	926
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40	40.105626	38814	3932
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40	40.145319	52078	3441
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	40.040488	10121	2303
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA4	40	40.076074	24604	944
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.not_Zeq_inf	40	40.095704	32984	2707
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40	40.032862	10655	1587
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	0.993190	106	30	6.0.3	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	40	40.446559	15598	2056
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40	40.119138	48033	2852
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_r	40	40.074348	2002	1160
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40	40.009067	545	171
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.069813	20866	2541
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.dec_Zge	40	40.103902	37310	3018
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_dec	40	3.788993	1248	398	3.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40	40.019148	3616	1603
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.266476	28079	5731
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.041298	13652	2174
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	40.064529	16907	2439
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_2	40	40.142175	48859	5680
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nb_digits_unorm	40	40.089200	29047	2435
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.409910	145	58	6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_equiv	40	40.198321	42110	1398
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_atan	40	40.035779	8093	1969
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	40	40.073154	13109	2043
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA5	40	11.429669	2602	434	12.13	synth with cache (only 1: intros n m; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qcompare_comp	40	40.077322	27526	2589
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	6.749224	2301	234	3.0.22	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40	40.026537	2604	426
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat_l	40	40.050015	15977	5147
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	40	40.246361	29625	3941
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zodd_rem	40	40.068149	23333	2972
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_is_le_bool	40	40.070021	22004	4035
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.026050	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_div	40	40.061526	16525	4518
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	40	40.335106	12244	2112
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.121736	44921	5644
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_opp	40	1.882019	670	265	1.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40	40.040884	12023	2516
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40	40.058665	3366	1906
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_1	40	3.416665	2179	190	1.2.1.19.2	synth with cache (only 1: intros H; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40	40.081337	14883	3693
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40	40.025721	4286	2786
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_increasing_0	40	40.036720	9936	2991
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_bit0	40	40.097477	34382	3154
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.188091	25971	4752
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcft	40	40.231166	5017	1346
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.test_field	40	0.758638	258	104	0.0.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	40.094990	32478	2456
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_plus_distr	40	40.219691	11992	1431
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.090882	31819	2189
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40	40.006844	379	100
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.098632	15017	298
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40	40.048009	12701	2721
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.fold_1	40	40.223173	19016	1949
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.091854	35287	2479
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.122634	34813	2654
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40	40.074212	13147	1329
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40	40.130342	34646	3066
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.368719	82493	5240
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	40.190189	26041	5703
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	2.978582	925	383	0.1.3.3.0.0.0	synth with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: easy; only 1: now discriminate Hb || clear Hb).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.660893	541	94	1.0.0.12	synth with cache (only 1: induction l as [| z l]; only 1: firstorder; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.030914	7	4	1.0.0.2	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp_rev	40	40.057485	16943	3840
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40	40.112326	38721	3832
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40	40.487412	18470	1678
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.064132	16213	3641
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40	40.092504	35047	2783
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40	40.125877	43456	2817
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40	40.041459	9922	2366
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA6	40	26.819523	7391	373	4.41.4.5	synth with cache (only 1: intro; only 1: intros EQ; only 1: Tactics.program_simpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	40	40.084307	13050	917
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40	40.029466	7688	1733
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.add	40	40.276334	25810	4006
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.116913	43157	3904
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_l	40	40.034830	2085	1083
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40	40.120602	47453	5785
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zeq	40	40.094155	32538	3089
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_lt	40	0.128570	8	2	6.0	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_dec'	40	40.124354	34014	3412
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.090835	12	5	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.353326	36	15	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40	40.023980	5590	1694
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.012188	8	2	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_not_le	40	0.207583	72	22	4.4	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub	40	40.287696	37693	3786
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_ge_lt	40	0.422812	377	45	0.21	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_lt_ge	40	0.024086	6	2	4.0	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_gt_le	40	0.024873	8	2	5.1	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.018746	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40	42.690492	6912	1515
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_mono_conv	40	40.077974	21948	3280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_head_nonnil	40	40.072877	24525	1353
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.117756	38316	6238
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_equiv	40	40.239449	65117	1432
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_0	40	40.035261	9168	2685
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	40	40.104225	6658	1270
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zne	40	6.141697	6389	381	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_succ	40	6.698241	4735	593	0.0.5.1.1.5.1.0.0.26	synth with cache (only 1: N.induct n; only 1: simpl; only 1: easy; only 1: intros; only 1: destruct n; only 1: rewrite H; only 1: Morphisms.f_equiv; only 1: simpl; only 1: f_equal; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_subset	40	40.069106	23964	2323
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_comp	40	40.044159	14394	1993
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat_r	40	40.029951	8190	3068
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.081400	14408	2021
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_asym	40	1.274755	303	72	2.0.9	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_irrefl	40	0.124366	120	20	3.6.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	1.810537	1654	288	11.6	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	40	3.518702	4483	324	3.0.0.0.17.29	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40	40.083936	30319	3685
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_is_eq_bool	40	40.106918	37380	4530
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.073648	21700	4760
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.101832	36766	4352
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	40	40.249812	18752	1316
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40	40.026334	6541	2321
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0.009676	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0.009636	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.008980	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.008940	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pred	40	3.070243	2192	352	4.0.19	synth with cache (only 1: destruct n; only 1: easy || now destruct 1; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_rel_prime_0	40	40.071039	26094	1816
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	40.083408	24554	4687
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.029653	4520	3431
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_div2	40	40.070858	25114	2659
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40	40.022586	4074	2482
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_increasing_1	40	40.023886	5128	2074
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.323871	13446	3421
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	39.521267	32996	2609	28.2.0.5.14	synth with cache (only 1: intros x y H; only 1: red; only 1: unfold Subset, Empty, impl; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	40	9.144609	7940	1442	12.7	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_involutive	40	40.071082	12568	3377
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	40	40.171968	69272	1794
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40	40.004363	501	114
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.037119	8086	2803
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_bounded	40	40.104806	32364	662
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	40.052924	15143	1479
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_1	40	40.314241	6213	665
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	3.516085	35	9	5.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40	40.146808	56475	3441
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40	40.051814	11681	2321
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	1.552550	13	4	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.884486	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40	40.199805	46470	4638
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_def.Zpower_theory	40	40.080545	12757	988
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0.240317	65	15	2.5.1	synth with cache (only 1: simpl_relation; only 1: compute in H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0.006712	3	1	2	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0.017697	5	2	3.0	synth with cache (only 1: destruct p; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.011415	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0.107628	81	16	4.0.4	synth with cache (only 1: intros (U, V); only 1: compute in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0.006122	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0.007843	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	32.727912	33741	4287	1.5.2.21.5	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hx; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0.013026	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.188709	27517	5498
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	0.766218	1625	50	56	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.776225	423	99	1.4.0.7	synth with cache (only 1: induction 1; only 1: compute in H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mirr	40	40.078615	26816	3472
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40	40.076912	22382	3552
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40	40.031363	6380	3943
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40	40.488480	6429	1568
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40	40.058938	20285	1365
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.534803	2880	830
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.052586	13113	1134
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	40.041775	10273	1882
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.101916	3	3	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Piter_op_square	40	40.093287	17125	2206
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	40	40.508038	60287	1976
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.075566	24339	3819
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_r	40	40.096382	10497	1023
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.118702	47326	5762
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	40.026991	6269	2230
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.066117	15023	3663
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40	40.583474	13428	3326
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.del_tail_nonnil	40	40.060575	17135	1599
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_1	40	40.107144	34019	5529
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.060415	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_bool_iff	40	40.145250	57111	6069
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_1	40	40.036040	9905	2362
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	15.053192	25143	1371	0.4.1.2.1.0.2.0.48.3	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: exists y; only 1: firstorder; only 1: compute in H; only 1: intuition; only 1: compute in H; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.051757	5982	1302
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	2.165601	669	286	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40	40.407269	86114	3677
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_jump	40	40.076798	29962	2892
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_compat	40	40.047714	15125	2086
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.eqb_eq	40	40.230388	72992	3874
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.106931	29712	2314
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_trans	40	0.115826	10	6	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_gt_trans	40	0.202863	106	21	0.0.9	synth with cache (only 1: intros H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_even_bool	40	2.789320	3263	289	0.0.0.0.0.0.0.0.0.0.17.1.0.8.23	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: split; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_le_trans	40	0.030601	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.035466	2167	408
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	6.502794	4823	1020	12.0.1.8	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	0.010578	2	1	1	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0.009675	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.082870	28564	3600
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_eq	40	40.082177	27192	3844
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40	40.058775	22924	1465
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40	40.195134	30572	4166
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	40	40.125840	12873	2713
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.104866	39954	1076
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zge_trans	40	4.178979	1784	373	9.4.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_min	40	40.294180	39486	3285
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_mod	40	40.068081	21315	3549
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.024055	3696	2801
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.116749	42355	3438
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nneg_bit0	40	40.099292	35948	3199
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	40	40.036759	9640	2914
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	7.322528	9058	850	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.221835	39108	2480
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.065147	22768	2049
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.045813	14957	3192
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40	40.019840	3971	1422
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	3.433476	1909	447	0.0.7.2.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intros; only 1: intuition; only 1: exists e; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40	40.342594	30571	2645
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40	40.115056	45856	2644
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40	40.144033	10199	1457
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_N_None_iff	40	40.149194	4299	589
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.151533	13628	2165
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	40.148706	45627	5377
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40	40.036831	7342	2894
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40	40.003073	353	97
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40	40.309162	63751	3348
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.019609	7	4	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.298905	25163	5154
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0.146955	14	5	2.1.1	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mirr_rev	40	40.071456	24700	3032
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	40.144368	46348	4951
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.044324	10596	490
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA8	40	39.029522	15303	1621	1.16.2.1.10.2.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40	40.080940	25828	3922
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	3.100035	336	101	4.1.1.3	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder  auto with crelations; only 1: firstorder  auto with crelations; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.126032	47004	2318
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.122186	4	2	0.2	synth with cache (only 1: repeat red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40	40.639915	8565	1381
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	28.305532	27983	2325	0.0.12.12.20.2.0.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: compute in H; only 1: compute; only 1: left; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_2	40	40.373041	3028	957
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40	40.034214	8308	2154
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_equiv	40	40.163318	53308	4118
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0.005793	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat	40	17.090403	10049	2128	26	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_max	40	23.747787	22574	3014	0.0.0.0.0.0.2.0.8.10.4.0.17.0.0.0.1.0.0.0.6	synth with cache (only 1: unfold N.max, N.le; only 1: destruct n as [| n], m as [| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: revert m; only 1: unfold Z.le, Z.max; only 1: simpl; only 1: intros H; only 1: case Pos.compare_spec; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros E1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	40	40.549543	77620	2360
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40	40.087466	29620	4649
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_compat_l	40	40.086156	34497	3161
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_l	40	40.127904	5132	1513
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.027132	6883	1177
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_add	40	40.109262	41688	1980
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_Ncompare	40	40.080710	15649	4159
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_invol	40	40.069923	18265	2698
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40	40.072757	15614	3101
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_inv_sqrt2	40	40.042758	12889	2067
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	29.160611	41594	2368	2.2.2.4.2.2.2.2.4.0.2.0.51.9	synth with cache (only 1: pattern n; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.085426	4534	2312
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.389377	19164	2764
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_tail	40	40.109634	41526	4089
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeqb_comp	40	40.062572	21313	1935
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.eqb_neq	40	40.186022	81704	3179
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_spec	40	40.058923	16572	3220
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_spec	40	40.084118	28023	2956
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_Zmod_pos	40	40.062833	20515	4304
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.133021	52491	4636
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40	40.146014	59940	3925
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.171670	29951	3252
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	40	40.243290	10743	5007
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40	40.031907	10118	892
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.079601	25476	3547
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.730762	59	44	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_mod_rev	40	40.045493	13909	3111
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.057937	13676	4698
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nneg_bit0_1	40	40.097823	35857	2437
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nneg_bit0_2	40	0.042046	20	6	1.0.0.2	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.036427	9309	3201
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_dec	40	10.873540	11203	984	0.0.2.0.2.2.3.0.0.0.4.5.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	40	40.160886	14770	1996
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_dec	40	1.330067	385	238	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.047862	14663	2585
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40	40.059076	15996	2708
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40	40.019013	3778	1959
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.103517	14484	3180
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40	40.602338	20124	2074
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40	40.075429	21548	4713
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.136308	28255	1467
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40	40.070634	19786	4035
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40	40.053671	15265	2512
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40	40.068813	12859	1903
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.003579	541	110
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	35.475238	42067	1938	6.1.71	synth with cache (only 1: compute; only 1: intro; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.386510	45212	3270
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.055252	16870	3372
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40	40.221856	47322	4573
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	40	12.825918	7204	2832	0.0.0.1.0.2.0.0.3.4.0.1.0.2.0.0.0.1.1	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p; only 1: intros; only 1: intros Hb; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.050635	5	5	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40	40.058275	15271	3321
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA9	40	40.045886	13021	930
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_Sn	40	2.018047	1155	214	4.6.4.0	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40	40.076361	27300	4013
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.095283	31632	2724
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.310462	29460	962
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40	40.104807	34517	4718
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.029815	3	3	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0.025262	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_3	40	40.277995	3570	1471
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	40.053802	14695	3692
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40	40.105894	26411	1831
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	40.291013	17555	2126
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.260371	25459	3642
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.496102	49311	2661
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.042647	11838	964
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.eq_dec	40	0.138021	28	8	0.0.7	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_r	40	40.213706	4249	474
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.024451	6254	1846
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_simpl	40	40.115628	42768	4079
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	40.065148	15424	4093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nztail_invol	40	40.050889	11644	2212
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_invol	40	0.019006	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40	40.038439	8143	1174
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40	40.332514	74935	6675
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_opp	40	40.029246	7226	2395
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	40	40.073069	6996	1682
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	40	40.284741	70246	4556
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_acc	40	40.091959	33614	5390
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qleb_comp	40	40.064462	22401	2367
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.ltb_lt	40	40.165575	48798	1447
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_apart_0_1	40	0.025961	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_1	40	40.135763	46778	5811
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.020994	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.479615	137	44	1.0.3.0.0.0.1	synth with cache (only 1: induction x; only 1: rewrite diff_spec; only 1: tauto; only 1: rewrite diff_spec; only 1: intuition congruence; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_Zmod_zero	40	40.070123	21493	2873
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.196713	86780	1441
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.084178	26641	4577
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_succ_Gt	40	40.078221	29097	2641
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.172676	7829	3554
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.111325	35306	1749
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.085423	31281	1314
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.039912	2792	507
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40	40.072229	24507	2487
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40	40.129745	47500	2359
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nsame_bit0	40	40.103360	38239	2423
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_inj	40	40.029288	6605	3209
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	40	40.170516	22005	2687
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.055587	16369	3579
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.103369	37808	3241
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40	40.022603	4447	1478
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_plus	40	40.040156	6229	1901
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40	40.048467	13646	2778
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_one	40	0.007989	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40	40.152716	10014	2792
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	5.162443	2178	381	6.0.4.2.10	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_nat_via_N	40	40.071815	18264	3411
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40	40.050700	14146	2442
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.120904	33595	2903
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40	40.003748	560	108
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.064185	12887	2251
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.218433	51316	4534
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	40.619140	3908	683
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_minus	40	40.049958	13806	4129
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40	40.243954	53554	4686
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.064414	13188	2501
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA10	40	40.084926	13391	420
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.085887	5	3	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.081456	27445	4219
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40	40.073368	22775	2149
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	40.176997	33668	4764
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40	40.328902	12174	2239
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	40	40.444374	6313	1531
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	40.052903	14703	3522
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0.008729	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	40.114937	30601	2136
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	0.155907	143	11	17	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	40	40.077631	24713	6755
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_mod	40	40.315300	36158	3930
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus_full	40	40.052447	18531	3072
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	40	40.272739	34145	3090
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	40	40.350276	25464	5307
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_pred	40	7.534202	4933	702	2.18.3.0	synth with cache (only 1: boolify_even_odd; only 1: intros; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_r	40	40.051213	5468	1415
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_tl	40	40.052404	18137	814
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_succ	40	0.058566	29	7	4.2	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Lt_Nltb	40	40.068910	15819	3832
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40	40.019850	3825	2079
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.080613	28160	827
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40	40.847065	11473	1513
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.189622	46867	3911
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_bound	40	40.037017	9220	2421
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.033929	5753	1194
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.130684	41468	4290
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.339324	63959	4215
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.340434	203	14	20	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.080627	26457	4426
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	40	40.227093	71475	3473
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_0_l	40	1.576904	1294	177	0.0.0.17	synth with cache (only 1: intros l; only 1: unfold Qeq; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.fold_1	40	40.129476	47156	4969
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_0_r	40	1.369051	422	81	1.8.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: now rewrite Pos.mul_1_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat	40	40.119555	20004	2892
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40	40.126520	16109	3158
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	40	40.070899	8427	3241
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.054719	18691	1911
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.027112	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.008243	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.005559	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40	40.050307	17536	1419
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_divisors	40	40.046783	15857	1466
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.del_spec	40	40.029981	7862	1491
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40	40.042247	7464	4982
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_less	40	40.109711	39891	3885
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_diff	40	40.036205	10223	2380
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40	40.167575	60488	5859
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_Permutation	40	40.231466	34207	4317
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.193921	30966	2784
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	40.020991	6184	1246
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_gt	40	4.054847	1999	631	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comm	40	8.819628	3103	915	0.0.0.0.1.0.3.6.3	synth with cache (only 1: destruct x; only 1: intros; only 1: generalize 1%Z; only 1: red; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	40	40.060211	18976	2836
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_lt	40	40.060669	19997	2532
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.042182	10305	3856
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.063091	22909	1096
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_N_via_nat	40	40.051866	5298	647
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40	40.038756	10108	2082
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	40.167431	70176	2629
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40	40.003147	455	101
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40	40.067159	12376	2060
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40	40.472526	6980	1074
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40	40.342561	22938	2630
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.028552	7	4	0.1.2.0	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.132429	19	17	0.0.0.1.2	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.048871	13884	4059
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.301575	78154	3757
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40	40.064728	20281	3321
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA12	40	40.053858	17593	653
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40	40.087847	27824	3522
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.235808	23631	4412
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.243894	11171	2485
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.144744	29	11	1.0.2.2	synth with cache (only 1: split; only 1: now destruct 1; only 1: unfold In, MapsTo; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.102387	18227	4346
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40	40.065150	23041	4498
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	40.079177	27130	3283
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.042990	27	7	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	0.101399	42	17	1.0.6	synth with cache (only 1: firstorder; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.023992	6	3	3.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.067087	21384	9391
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	6.911850	1773	665	0.0.0.0.0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: unfold fct_cte, derivable_pt_lim; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.100832	37872	4765
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.095174	33937	5984
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	40	40.582397	77589	3186
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	40	40.230764	39047	4720
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_pred	40	40.189169	33591	4123
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.006538	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0.007151	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_div2	40	0.016787	1	1	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.030782	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0.006081	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.163255	144	17	0.0.15	synth with cache (only 1: split; only 1: CRelationClasses.simpl_crelation; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40	40.221399	92010	4587
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0.099950	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_l	40	40.079288	3859	1863
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.jump_pred_double	40	40.158845	54879	6286
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.296899	20	6	1.0.5	synth with cache (only 1: compute; only 1: intros x y z (Hxy, Hxy') (Hyz, Hyz'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0.011969	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.236710	316	30	24	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0.008532	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.008864	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.408678	63	8	0.11	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0.009108	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.008482	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_1	40	40.089824	22979	2996
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead_eq	40	40.055535	13175	2634
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.014929	2834	1663
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40	40.017705	3372	2079
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	40.280783	50632	4387
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_bound_lt	40	40.025490	5571	2221
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	3.535550	2313	178	0.0.25.4.0	synth with cache (only 1: repeat red; only 1: intros x x' Hxx' y y' Hyy'; only 1: apply H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_div2	40	5.421171	996	300	0.0.3.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	32.599031	29875	602	2.2.0.42.81	synth with cache (only 1: intro m; only 1: induction m; only 1: simpl; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	11.573982	4434	762	1.15.1.0.0.7	synth with cache (only 1: intros [| x l] H; only 1: intuition; only 1: discriminate; only 1: simpl; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.049151	15400	957
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.021455	4	3	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.leb_le	40	40.119148	16079	3838
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.851765	24041	2281
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	40	40.421157	76828	5485
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.049225	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.104795	37139	4205
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.040064	10092	1673
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_succ_compat	40	40.129763	16521	3899
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40	40.360708	15797	3710
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ	40	40.054213	18160	2167
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_rel_prime	40	40.078288	26845	3189
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.In_m	40	40.074675	22377	3476
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.335554	68	31	0.3.3	synth with cache (only 1: intro z; only 1: intros y (Hy, Hy'); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.del_ok	40	40.019150	3504	509
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_increasing_0	40	40.047469	14194	2887
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	40.201654	29286	6943
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_nil	40	40.231119	17667	3682
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	40	40.156766	11277	3166
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.206925	57	29	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40	40.116081	40340	1895
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	3.923973	2607	494	15.6.4	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_not_refl	40	40.131170	45172	4602
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qopp_involutive	40	40.043458	9190	1773
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Q	40	40.149450	8350	1224
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	40	40.065509	21327	2591
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40	40.163875	16736	4780
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.032998	9377	1108
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.150188	5	4	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.137995	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.057275	4830	969
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	40	6.686306	6234	662	0.0.0.4.13.1.8.0.12	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: intros Ha Eq; only 1: easy; only 1: simpl; only 1: induction l as [| a l IH]; only 1: intro H; only 1: inversion 1; only 1: auto; only 1: now auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40	40.060059	18582	2127
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40	40.176841	61158	2737
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	40	0.783310	443	108	0.0.0.0.0.2.1.10	synth with cache (only 1: intro; only 1: functional induction min_elt s; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	26.414787	27943	3663	0.0.0.0.1.2.3.0.1.2.2.6.0.0.0.1.2.3.0.1.2.2.6.0.9	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40	40.005813	935	122
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40	40.102396	17671	1961
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_opp_r	40	7.793888	2721	385	0.14.2.1.0	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: intros; only 1: Z.nzsimpl'; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40	40.137332	12873	3072
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40	40.526267	12048	1756
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40	40.284060	73249	4070
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40	40.072949	21234	2909
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.375361	275	104	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA13	40	40.038733	12214	534
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.299038	62	13	6.1	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0.009221	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0.009075	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.015228	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.033470	8	4	3.0.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros n m; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.283553	53	11	5.2	synth with cache (only 1: intros i j Hi Hj E; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA14	40	0.547171	30	13	0.1.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	11.196131	2582	384	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40	40.067387	20833	2495
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	40.213810	12848	2937
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.312918	13431	2231
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	2.919879	3853	159	0.0.1.0.8.65	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	40	40.057368	10689	2606
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	40	40.038102	10169	2649
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.068822	23	10	0.2.0.1.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.563252	376	83	0.1.0.9.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_scal	40	40.050523	14049	3206
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.074016	10	7	1.3.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_rem	40	40.330254	44155	4163
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.724524	834	102	0.0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot2	40	0.015518	3	3	0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.066200	26017	2972
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.235030	13726	2333
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40	40.240158	97387	6114
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_spec	40	40.100647	25163	3484
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_jump	40	0.037575	18	5	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l_half	40	40.044158	4397	2095
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.154024	49358	2579
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40	40.015439	2782	1465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead	40	40.050895	12313	2451
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	2.212713	2533	349	4.21.2	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40	40.029481	5144	3675
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sin_asin	40	40.039707	11800	2173
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.157013	28673	7337
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	40	40.041885	13743	843
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.045429	14938	1657
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_quot2	40	0.143420	14	8	2.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.032857	8589	1777
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40	40.050877	8984	1475
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.leb_nle	40	40.189002	57239	3038
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	1.235629	1061	129	13.1.6	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.382008	42041	3403
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40	40.388062	71067	2303
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_f_morph	40	40.263297	51237	5535
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	40.077909	25830	3202
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.map_simpl	40	0.035765	19	6	1.0.4	synth with cache (only 1: induction l as [| a tail]; only 1: reflexivity; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.090375	30777	4257
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.064555	18040	5869
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.109639	37808	3943
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40	40.224914	39143	5266
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_mult	40	40.078169	19186	2160
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_spec	40	40.025965	4711	1077
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.154375	8	5	1.1.1.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_increasing_1	40	40.025800	5500	3074
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_cons	40	40.097140	33685	4155
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.399523	129584	5123
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2	40	11.821982	2172	744	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	40	0.457191	39	25	5.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40	40.062067	21318	2538
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40	40.099342	35353	3415
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_1	40	40.087700	27909	4694
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40	40.062231	18518	3173
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.lt_inject_Q	40	40.095926	32721	2966
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40	40.173317	14031	4319
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_0	40	6.841258	15576	439	5.68.25	synth with cache (only 1: intuition; only 1: case H; only 1: Z.order').
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40	40.052554	3320	749
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40	40.065834	22068	2634
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	40	40.072283	22747	2291
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_2	40	5.292046	2173	805	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	40	40.195827	19465	5480
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.003519	848	93
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_1	40	4.720138	3290	102	77	synth with cache (only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_r	40	40.094993	34315	3255
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.164926	56479	3957
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	40.545303	28730	1727
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.065811	18443	2450
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.033282	7	2	5.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.147670	4	2	2.0	synth with cache (only 1: intros; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	40.178146	16387	1945
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA15	40	40.041897	9123	808
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.093237	8	2	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA17	40	0.076762	2	2	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40	40.033065	9643	1096
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.523695	262	49	1.6.0.4.3	synth with cache (only 1: split; only 1: auto; only 1: auto; only 1: intros l1 l2; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.211720	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.062912	18845	2576
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.247673	11310	1864
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40	40.290144	19108	3867
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40	40.345537	34783	2526
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	40	40.184472	5374	2211
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	1.801654	683	166	0.1.1.3.2.3	synth with cache (only 1: induction 1; only 1: compute in H; only 1: destruct H; only 1: left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	1.722907	421	116	0.0.0.0.0.6	synth with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.058807	15450	3201
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.059520	17891	3625
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	40	40.696608	17020	2458
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	4.754347	2165	417	0.0.1.5.14	synth with cache (only 1: intros Hc; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.094073	36107	3956
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_testbit	40	0.088478	24	18	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.064766	24342	2685
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.id	40	0.031867	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	40	40.428464	6647	2012
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_pred_double	40	40.108597	26619	4588
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r_half	40	40.044390	5309	2170
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.110948	36069	2586
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_4	40	0.073435	14	4	3.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_5	40	0.402441	42	15	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_del_tail_unorm	40	40.048779	10685	3101
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40	40.014492	2819	1558
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40	40.127849	47222	1310
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40	40.047153	10582	4694
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	40.226926	24458	7571
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_sin	40	40.033540	9489	2272
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	10.589256	4917	772	2.3.2.18	synth with cache (only 1: intros a0 y H H0; only 1: do 2 rewrite InA_alt; only 1: firstorder; only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40	40.037089	11068	2096
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA18	40	13.702093	4354	490	34	synth with cache (only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.201666	62526	1691
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	40	40.082709	25855	2425
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40	9.251982	2656	643	0.0.0.0.7.0.3.2	synth with cache (only 1: rewrite InA_cons; only 1: intuition; only 1: invlist Sorted; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40	40.064676	20244	2466
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.240381	50359	5639
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	17.516371	8977	1677	0.3.1.6.0.12	synth with cache (only 1: intros def_n0; only 1: intros x y z; only 1: compute; only 1: intros; only 1: rewrite <- H0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.132268	25	7	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZTautoChecker_sound	40	40.393879	53185	3689
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.filter_1	40	40.123858	43251	4075
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40	40.246324	37056	3074
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	0.010534	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.006189	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.005773	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.remove_spec	40	40.086946	29773	4997
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_l	40	40.159405	30767	3799
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_le_succ	40	40.059904	19375	3080
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40	40.100107	30690	5326
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	10.782675	5415	1674	0.0.0.5.1.0.2.0.8	synth with cache (only 1: intros HE; only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.069848	8913	1960
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_opp	40	38.212019	22080	2444	1.2.0.0.0.6.3.2.0.32	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: unfold Z.ggcd, Z.opp; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: now f_equal; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.027841	6575	2902
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_app_cons	40	40.198690	35034	4444
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	40.305443	83824	4331
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.151261	194	91	0.1.1.6	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.038768	11	4	0.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.mem_m	40	40.109109	19925	2226
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40	40.072357	22606	2479
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.le_inject_Q	40	40.068454	21858	2660
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.176595	16222	3190
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40	40.041100	4666	1110
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40	40.100417	5068	1401
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.069814	23635	2269
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.187289	24029	4186
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_3	40	40.116257	45317	3174
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40	40.002800	414	85
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.231366	22437	5132
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_2	40	40.047766	16780	1549
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.071723	13374	2179
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40	40.237922	50290	4174
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40	40.655069	5479	727
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	10.098211	3544	1299	1.0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: induction s; only 1: unfold Empty, empty; only 1: red; only 1: intros; only 1: inv; only 1: inversion H).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	0.018957	3	2	1.0	synth with cache (only 1: unfold elements; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.028651	8054	1032
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40	40.226266	10721	2170
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.254152	25338	3011
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0.019358	1	1	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.289066	4714	2179
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40	40.140330	52183	2927
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_r	40	40.063805	20066	7459
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	1.976563	603	150	0.1.6.3	synth with cache (only 1: intros H; only 1: rewrite H; only 1: unfold In, MapsTo; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.037262	12	7	4.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.022357	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.251326	27	15	0.3.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: destruct (split (A:=l)); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.045704	11350	4338
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj	40	40.088167	31353	5117
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.131388	56889	4606
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	40	40.255259	11207	2070
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	4.056680	1584	274	4.15	synth with cache (only 1: rewrite InA_cons; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	40	40.411536	29412	2163
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_r	40	40.044880	7025	1270
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_iff	40	3.508998	1160	370	10.0.0.2.1	synth with cache (only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.006899	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pos	40	0.031388	8	7	0.1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.006806	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.068193	14805	4465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_del_tail_int_norm	40	40.042349	10088	2264
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_4	40	0.064801	4	3	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.118770	44520	3724
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	3.159925	862	204	0.0.1.13	synth with cache (only 1: intros; only 1: invlist InA; only 1: firstorder  auto with crelations; only 1: firstorder  auto with crelations).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.035925	11202	935
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40	40.051085	18432	2031
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.cos_asin	40	40.038938	11084	2176
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40	40.240656	65759	6970
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	40	4.332382	3204	475	5.3.6.7	synth with cache (only 1: intro n; only 1: intros; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	0.203561	165	26	5.3.2	synth with cache (only 1: simpl in *; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0.010370	1	1	0	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0.327604	159	26	5.9	synth with cache (only 1: unfold phi; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40	40.108466	27770	3990
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.049389	38	4	10	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0.009064	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40	40.054914	19576	898
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0.016102	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0.050407	5	2	3.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.010370	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA19	40	40.056144	14755	1443
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA20	40	0.101832	4	4	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_add	40	5.236933	1024	481	3.6.5	synth with cache (only 1: unfold Z.le, Z.min; only 1: intros; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	40.061019	14650	3053
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.172990	21789	2718
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ez_correct	40	40.147159	68080	2411
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40	40.029971	7796	1658
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_mul	40	0.423173	133	58	1.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40	40.107727	34377	5240
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40	40.313614	39553	4551
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	32.591931	19478	4387	2.0.0.8.5.0.1.5.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: exists x; only 1: invlist InA; only 1: split; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.filter_2	40	40.100598	32845	2989
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	40.267063	80868	2618
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.119737	11749	4826
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.105153	37784	5096
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	40	0.098068	323	19	25	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_gt_succ	40	40.108607	36665	4148
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_succ	40	0.006414	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_le_succ	40	0.005855	1	1	0	synth with cache (only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ_le	40	0.017933	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40	40.087448	28181	4017
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_succ_le	40	0.007023	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_succ_gt	40	0.019663	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.393029	326	23	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.040587	14	8	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_Order	40	0.345226	160	81	2.0.0.0.0.0.0.0.0.3	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.095628	93	16	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	40	40.181232	24417	4809
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.037968	10016	1454
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40	40.075076	24801	3445
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_split	40	40.105408	36823	4182
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_1	40	40.026412	6013	2915
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40	40.250845	32406	6719
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.069404	22061	3323
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40	40.059717	14171	5848
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_le	40	40.076352	20491	3553
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.filter_3	40	12.793800	12391	1159	2.0.6.0.29	synth with cache (only 1: intros Hbeq; only 1: unfold filter; only 1: destr_bool; only 1: rewrite xfilter_spec; only 1: intuition discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40	40.059822	14957	4282
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40	40.045481	12309	2869
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.072110	23425	2491
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_4	40	40.130749	49866	3843
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1	40	40.181328	19624	4640
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	40	40.221978	28569	6126
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.116150	123	31	14	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_succ	40	18.880979	8176	1642	1.0.1.0.0.0.0.2.7.14	synth with cache (only 1: unfold Z.le, Z.max; only 1: intuition; only 1: simpl in *; only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: unfold N.succ, N.add; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.002704	170	56
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_3	40	40.040519	12345	1712
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1.235297	2376	179	0.0.0.2.1.35	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_assoc	40	40.059427	19363	2858
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.030702	3	3	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_r	40	0.266016	21	7	0.1.1.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	1.118546	999	77	0.2.0.1.24	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40	40.280748	68967	5134
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40	40.287320	38490	2179
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.038532	8499	1587
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40	40.021105	4738	1861
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40	40.295493	6514	1975
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	40	40.052421	12011	2654
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40	40.066471	19972	2276
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.044443	13911	3840
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	40	40.083595	25902	4776
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pow	40	1.121606	655	99	0.0.0.0.12.6	synth with cache (only 1: intros; only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	21.809680	9419	1343	4.1.1.2.0.5.14.2	synth with cache (only 1: red; only 1: red; only 1: destruct s as [| c l y r]; only 1: inversion 2; only 1: inversion 1; only 1: intros; only 1: destruct delmin as (x0, s0); only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40	40.077189	29687	2945
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.766936	21485	2212
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_1	40	40.082623	11622	938
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.nzhead_app_nzhead	40	40.049761	11968	2168
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40	40.156548	61161	5565
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40	40.281235	44558	4917
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.029500	8633	1188
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_asin	40	40.026073	6356	2038
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.271749	39684	6094
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40	40.107203	34013	2977
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.244048	15686	2116
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	40.044787	15799	1478
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40	40.190718	11711	4508
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.intro_Z	40	40.050056	10886	1736
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.313026	42961	1689
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40	40.034412	6473	1607
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40	40.044056	11226	3482
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40	40.083092	24917	3318
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	41.011020	33957	872
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40	40.193902	27846	6468
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40	40.104937	33162	6404
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.540736	443	75	0.4.2.0.11	synth with cache (only 1: destruct l as [| x xs]; only 1: inversion 1; only 1: constructor; only 1: exfalso; only 1: invlist InA).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.227668	74253	3657
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_pow	40	12.961471	4045	1266	0.0.13.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: rewrite Rmult_0_l; only 1: replace (fun _ : R => 1) with (fct_cte 1); only 1: apply derivable_pt_lim_const; only 1: reflexivity; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow_pos; only 1: apply Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.013674	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_sym	40	0.009372	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.008618	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	16.145275	22089	859	30.14.4.25	synth with cache (only 1: intros a; only 1: destruct a; only 1: now simpl; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_elim	40	40.162951	35969	3259
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.077244	27320	3718
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.577667	3391	249	1.0.1.0.32	synth with cache (only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	0.497447	211	53	2.1.4.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.068403	30	11	0.1.0.0.1	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.029084	11	6	0.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zge_compare	40	0.023535	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zgt_compare	40	0.020180	2	2	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_succ_le	40	40.095441	34044	3460
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40	40.168626	20956	5038
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	5.152085	1092	232	3.1.3.6	synth with cache (only 1: intro n; only 1: unfold relation_equivalence in *; only 1: intros x x' Exx' y y' Eyy'; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.nat_po	40	40.264476	47680	3371
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0.371785	26	13	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.010700	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.009770	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.102608	12	8	2.0.0	synth with cache (only 1: simpl_relation; only 1: reduce in H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.022096	5	3	0.2.0	synth with cache (only 1: intro; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0.032957	15	8	0.0.0.0.0.2	synth with cache (only 1: split; only 1: reduce; only 1: firstorder; only 1: reduce; only 1: unfold pointwise_relation in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40	40.138935	24907	4314
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.136890	145	31	5.2.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Z_modulo_2	40	40.028192	8569	1002
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_refl	40	40.159386	60922	3906
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_0	40	40.021718	4048	2275
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40	40.258413	59345	6624
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	7.438831	3369	830	2.0.0.1.3.0.4.0.1.2	synth with cache (only 1: intros x l; only 1: constructor; only 1: induction 1; only 1: auto; only 1: constructor; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	0.884704	845	93	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu	40	8.020183	4159	784	0.4.3.2.2.7	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.add_m	40	40.048383	14938	1988
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.051393	15067	1523
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Z_plus	40	40.030960	5447	859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	40.066368	18036	4663
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_refl'	40	6.004079	5158	632	3.8.1.1.16	synth with cache (only 1: intros l2; only 1: intros l HC; only 1: subst; only 1: rewrite <- app_nil_r  at 1; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_sym	40	1.067725	555	163	0.9.4	synth with cache (only 1: intros l1 l2; only 1: induction 1; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40	40.086310	26831	4896
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.044897	92	8	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40	40.122373	14724	1903
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40	40.040180	7839	3709
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_z	40	40.097741	36841	2724
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec2'	40	40.194963	28908	3998
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_sub	40	40.094263	35384	4890
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pred	40	0.038154	14	6	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_compare	40	0.337974	106	56	1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40	40.002078	237	52
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_ge_2	40	40.075298	26425	2134
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.049502	16823	1483
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_r	40	0.090363	13	11	0.1.0.0.0.0	synth with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40	40.427541	57017	5029
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_le	40	2.150252	891	207	0.2.20	synth with cache (only 1: unfold N.le, N.ge; only 1: intros; only 1: now rewrite N2Z.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_total_order	40	16.103027	12590	1865	1.0.0.9.2.7.6.8	synth with cache (only 1: constructor; only 1: intro H'0; only 1: intros n m; only 1: simpl; only 1: destruct (le_gt_dec n m); only 1: intros H; only 1: intuition PeanoNat.Nat.order; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.166250	59904	6771
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_comm	40	1.908617	538	137	6.2.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	19.113088	5249	927	3.11.3.0.6	synth with cache (only 1: intuition; only 1: red; only 1: simpl; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40	40.052990	14854	2821
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	40.563652	30714	1436
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40	40.187346	27505	2780
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	40.056178	12001	4058
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40	40.045152	15717	894
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	40	0.023629	4	2	1.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	40	0.013034	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.035922	10	3	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_r	40	40.057134	17301	5834
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40	40.105240	37826	2606
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.405552	1354	52	1.0.48	synth with cache (only 1: intros EQ; only 1: simpl in *; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40	40.098957	37970	5089
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	2.020773	1656	103	0.0.0.2.42	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: easy; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.674740	23628	2561
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_l	40	40.039704	4816	2242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.unorm_app_unorm	40	40.053833	11003	2819
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.107997	38473	4281
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	40.355671	42073	8059
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40	40.027484	7866	866
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_asin	40	40.024101	5343	2079
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.502930	43681	2812
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	40.158373	33031	4004
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	40.052151	18623	1949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40	40.031729	6048	1803
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40	40.073210	21947	3888
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0.025944	10	4	3.1	synth with cache (only 1: intro s; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	0.017902	5	2	2.1	synth with cache (only 1: intros m H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	40.357182	17253	5653
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.136488	12805	2209
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40	40.078679	24793	3961
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct2	40	40.080292	31698	2700
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	40.402802	15859	4427
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	40	40.485878	21578	3150
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	40.048349	12608	4535
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	40.247791	81670	4704
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ_pred	40	40.109254	40520	3276
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_succ_pred	40	0.006370	1	1	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40	40.127789	11924	4396
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl'	40	40.181538	42463	5447
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zsplit2	40	40.041683	15680	442
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_ex	40	0.048716	8	4	2.1.0.1	synth with cache (only 1: intros; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_ex	40	0.121524	25	15	0.0.0.0.1	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	4.886663	3096	496	6.9.8	synth with cache (only 1: destruct H; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.020734	3827	2441
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.144413	15736	2554
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	40.090979	29073	5766
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	17.171274	6922	1153	1.1.0.0.0.11.3.0.9.2.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: intros HF; only 1: constructor; only 1: intros; only 1: simpl in *; only 1: inversion H; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu_xeq	40	40.061676	19390	3443
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40	40.348210	49005	1752
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.024365	4966	802
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.035629	11900	713
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.pos_eq_refl	40	40.201231	39528	4882
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Z	40	40.036898	9822	612
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.152465	56927	3584
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation.CPermutation_trans	40	40.234820	32236	6001
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40	40.076815	22999	3719
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40	40.051482	8664	1440
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	34.871781	24577	3441	0.0.1.0.3.0.2.3.0.0.1.0.0.0.2.0.2.3.2.0.0.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: intros n m; only 1: split; only 1: trivial; only 1: N.order; only 1: easy || now destruct y; only 1: simpl; only 1: intros a n; only 1: unfold Z.lt; only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: simpl; only 1: destruct H; only 1: now f_equal; only 1: red; only 1: intuition; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app	40	0.204831	102	30	3.5	synth with cache (only 1: intros; only 1: eauto using Add_app).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_comm	40	0.038310	13	6	5.1	synth with cache (only 1: intros l1 l2; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_rot	40	0.017285	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite (app_assoc l2)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40	40.056318	18758	1523
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_1	40	40.116637	43812	3321
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec2	40	40.161292	58097	4263
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Z_0_1_more	40	40.083418	29845	2946
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.261998	54744	5712
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40	40.211189	49037	6516
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40	40.001879	104	40
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40	40.152436	53476	4427
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.059577	12639	1800
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40	40.076864	17652	1560
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.141496	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40	40.176576	11079	2884
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.535301	8776	1300
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40	40.368499	31802	2836
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.042200	14383	1111
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	40	40.290819	24521	4491
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_minus	40	40.061258	20168	5683
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_minus	40	0.027259	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.068015	25353	4011
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40	40.124228	48931	2356
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_mult_distr	40	40.028886	4715	1126
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_app_int_norm	40	40.055109	13868	2967
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.028228	7407	1692
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.062934	17351	2107
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_asin	40	40.030034	8528	1809
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	40	40.469262	9894	2385
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	40.061639	22427	1660
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40	40.319337	9554	1800
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40	40.949818	6500	1013
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40	40.042829	8653	3719
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	40.141471	9353	1508
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40	40.063399	17716	1445
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	40.136768	59630	1818
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40	40.371621	63479	4890
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	4.081122	1274	286	0.2.13.0	synth with cache (only 1: intros; only 1: inversion H; only 1: intuition; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	40	40.720312	23436	210
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.203159	37	13	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40	40.414911	54035	413
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.058267	16130	4543
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40	40.253294	43340	2597
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	40.097431	40257	1679
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.052939	14	4	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.017050	4	2	0.2	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_pos_0	40	0.012554	2	2	0.0	synth with cache (only 1: intro n; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.014448	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_neg_0	40	0.010448	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	40.046783	10438	4650
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.194057	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	40	40.096852	35416	5245
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.043745	14476	1950
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	0.941784	541	200	1.0.0.8	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.024687	5054	2296
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40	40.134847	48793	6566
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40	40.295515	76638	9531
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.296173	178	36	0.1.9	synth with cache (only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.deriv_maximum	40	40.063278	13933	2852
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.057699	19191	2016
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40	40.306316	15232	2913
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40	40.314911	7961	2342
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40	40.056504	17456	2202
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.form_eq_refl	40	40.255510	66564	5097
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_alt	40	40.110244	34377	2983
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	12.831859	10539	1834	0.7.0.2.3.2.2.1.4	synth with cache (only 1: intros n m; only 1: revert m; only 1: unfold eq; only 1: Bool.destr_bool; only 1: destruct compare; only 1: intuition; only 1: now right; only 1: right; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	40.137545	34293	3976
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40	40.050454	18190	1370
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40	40.038912	11001	1994
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_min	40	40.309584	41678	3981
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.106030	35522	3513
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_cons_append	40	40.192497	5342	732
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_2	40	40.125631	47271	2739
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec2w	40	40.117569	39286	3384
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Im_def	40	40.116446	38176	6159
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_alt	40	40.078607	30179	1724
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40	40.254426	53565	5743
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.200235	26829	7475
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.184361	65137	4283
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.061962	22104	1984
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40	40.131591	47349	2788
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40	40.078794	20182	3467
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40	40.581960	12105	3149
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40	40.001900	165	29
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_nat	40	20.426895	23604	2046	30.0.0.34	synth with cache (only 1: intros n H; only 1: simpl in *; only 1: apply (Nat.lt_irrefl (S n)); only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40	40.025137	6540	1852
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40	40.201792	21147	2624
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	40	40.311811	29333	3419
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.046649	14486	4582
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_full	40	40.033348	11530	2170
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_minus	40	4.423003	1085	372	0.1.6.4.0	synth with cache (only 1: intros a b; only 1: unfold Rle; only 1: intros [?| ?]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	40.114589	46391	2565
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	6.044797	2321	456	20.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	0.022050	4	3	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRinv_morph	40	40.362560	8703	1213
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.077439	22692	1854
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40	40.021857	4395	1931
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_atan	40	40.033531	9339	1978
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	40.046034	13950	1230
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	40	40.290704	9476	2775
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40	40.064138	17355	2509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40	40.016572	3810	1542
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.048667	10705	2904
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40	40.059996	14186	2390
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40	40.105983	41328	4333
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.006653	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.006815	1	1	0	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_1	40	0.006318	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.005879	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	40	40.212914	15161	2312
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.005628	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_add	40	1.196624	90	32	9	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.008234	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0.005857	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0.005284	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.004710	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0.006751	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.005103	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0.005457	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40	40.202227	25304	1682
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.fold_spec	40	40.081406	31902	2539
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.124046	50595	3546
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.189582	18422	4968
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0.007962	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0.016570	6	2	4.0	synth with cache (only 1: intros m x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0.030352	11	4	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	0.808242	629	114	4.0.1.0.3.7	synth with cache (only 1: induction m; only 1: simpl; only 1: intros p l inlist; only 1: auto; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	7.272071	3589	603	5.3.0.0.0.3.7.4	synth with cache (only 1: intros s; only 1: intros x y z; only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite <- H0; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40	40.480585	31373	4480
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	40.044559	16402	1322
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_morph_transp	40	40.199064	51978	4561
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.040489	13	8	0.0.0.0.1.1	synth with cache (only 1: repeat red; only 1: intros x y l1 l2 Hin; only 1: subst; only 1: intros HE; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Gt_Psucc	40	40.240306	11717	2865
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.028477	6151	2885
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40	40.065182	17557	6058
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.299355	17951	2865
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0.009839	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0.011728	2	1	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.009030	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.008548	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0.008758	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.008691	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0.009323	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0.007815	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.027993	15	6	2.1.0	synth with cache (only 1: red; only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.007235	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.446776	412	58	2.13.2	synth with cache (only 1: intro H; only 1: unfold not; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0.007855	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0.008223	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0.006760	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.inter_m	40	40.040713	11636	1757
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.448258	9617	1850
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40	40.429882	12394	2776
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.046031	14687	1643
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.049020	11	4	4.0	synth with cache (only 1: intros a b H; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.142366	53786	6776
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.212864	47	17	0.0.1.4	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.deriv_minimum	40	40.034234	8109	3599
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Psucc_Gt	40	3.969372	1329	312	0.0.0.1.2.1.0.1.2.1	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.map_app	40	0.072395	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.length_map	40	0.045200	5	5	0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	2.031183	395	114	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_map_NoDup	40	40.063805	14196	3312
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.559800	140	34	0.3.4.1	synth with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40	40.249848	49859	5724
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.116738	39313	3149
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	39.474891	21907	2273	1.15.2.19	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: generalize LT; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40	40.046659	14781	1337
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.041900	12323	2068
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_morph_cons	40	40.100630	34333	4206
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.293516	30482	3005
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_trans	40	40.087287	17876	1863
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40	40.072671	21923	3264
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Im_add	40	40.076168	20607	5289
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.117519	45877	2842
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose1	40	7.631318	4913	1047	8.0.4.3.1.0.1	synth with cache (only 1: induction F; only 1: auto; only 1: intro e; only 1: intro x; only 1: intros; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	5.559897	1481	596	6.7.1	synth with cache (only 1: symmetry; only 1: generalize (F.mem_iff s x); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40	40.365587	30370	4678
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_infinite	40	40.163569	24722	1341
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40	40.252839	51237	4337
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral_l	40	40.040800	12943	1469
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.060634	18282	2218
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.063512	17489	3451
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40	40.005698	104	30
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40	40.270371	13981	3379
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	40.081419	27163	2702
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40	40.027331	8084	1816
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.image_empty	40	9.722302	4898	1015	1.1.2.3.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	40	40.273373	11673	1884
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_r	40	40.073761	27781	3634
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_minus	40	40.040240	12939	3021
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.066928	21882	3877
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40	40.366722	27925	3226
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRlt_minus	40	40.201146	7723	602
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40	40.068582	17173	2402
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_asin	40	40.027203	7066	1791
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.asin_acos	40	0.188427	6	6	0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: unfold acos, asin; only 1: repeat case Rle_dec; only 1: lra; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.098963	40086	276
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.481607	15044	3325
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40	40.048202	15750	1007
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.022144	4150	1516
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	15.600761	4064	1075	1.5.4.0.2.9	synth with cache (only 1: repeat red; only 1: intros x y; only 1: compute; only 1: symmetry; only 1: f_equiv'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.047841	14105	2075
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	0.032376	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	40	40.027477	6457	1355
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	40	40.137222	38858	3590
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	34.129337	15240	3934	0.0.0.2.1.0.0.7.14	synth with cache (only 1: intro l'; only 1: intros l HF; only 1: induction 1; only 1: auto; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto; only 1: discriminate || auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.530211	20150	862
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.011410	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40	40.066678	26893	1431
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0.755741	1590	64	2.52	synth with cache (only 1: split; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40	40.181752	50434	5116
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	2.020609	4848	215	64	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.235325	17690	3081
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	2.404769	1701	406	1.1.0.0.0.0.6.0.3	synth with cache (only 1: unfold or_cnf_opt; only 1: intros; only 1: rewrite orb_comm; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	0.646272	721	68	36	synth with cache (only 1: auto with typeclass_instances).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	6.491531	1774	490	3.0.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40	40.068029	20405	3098
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_plus_Zodd	40	40.089770	36447	2340
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.064502	1868	148	0.1.3.5.0.1.40	synth with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: simpl_relation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.492118	22601	3134
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.id	40	40.219342	61069	2733
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.649324	208	26	0.0.0.16	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40	40.096599	31789	6961
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_0	40	40.044179	12633	3247
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.301089	82324	4444
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.diff_m	40	40.054617	17424	2150
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	0.023414	9	3	1.0	synth with cache (only 1: unfold Equal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40	40.251736	6489	2829
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	40.060139	14730	3898
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	3.263843	729	64	23	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.deriv_constant2	40	40.038130	8715	4238
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0.049334	9	3	1.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Lget_map	40	40.097822	23165	3363
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	0.866956	398	38	15.3	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.058635	15	3	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.105282	15	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	0.038385	26	7	2.5	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.006662	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0.010056	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_list_carac	40	40.049233	8673	3037
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	40	40.293738	20088	2641
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.exists_1	40	40.087369	27668	2215
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40	40.207565	37518	7975
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	4.940414	5590	869	0.0.0.0.0.0.3.0.0.3.0.3.0.0.6.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: destruct (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40	40.188932	81428	2539
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40	40.091152	9985	1681
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.389064	198	66	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_div	40	40.083284	27431	5283
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	2.710517	2877	374	17.3.0.3.0.2.2.28	synth with cache (only 1: constructor 1; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: solve_proper; only 1: reflexivity; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_total	40	40.067172	20040	3051
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1	40	40.318373	78989	4623
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_cardinal	40	40.216130	30745	4071
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	1.063529	3101	120	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	1.759369	683	56	19.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_div_prime	40	40.106115	38814	3289
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose2	40	40.288619	22374	4279
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	0.705149	740	64	20.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	40.082192	24204	4264
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	1.251114	877	138	13.5	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40	40.133473	49799	5676
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40	40.254441	53995	4075
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_plus	40	40.058594	16083	2005
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_mult	40	0.023379	4	2	2.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	40.032204	8560	2084
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.inject_Z_opp	40	0.008652	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	2.839881	1227	297	0.0.2.7.3	synth with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40	40.044268	10265	2637
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.107750	32	12	1	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40	40.001635	67	28
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	40	40.032840	5920	1047
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.211084	51435	6333
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.041418	13923	1657
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.736962	600	124	6.2.3.0	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.finite_image	40	40.285407	78571	6824
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	40	40.315640	12778	3180
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_r	40	40.039780	13977	2510
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose3	40	11.315981	7551	1393	4.5.12.0.0.0.0.0	synth with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_lt	40	40.073246	21398	7978
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Im_inv	40	5.022990	3186	732	12.0.3.0.2	synth with cache (only 1: intros H'5 H'8; only 1: intros x0 H'; only 1: elim H'; only 1: elim H'; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_spec	40	40.145349	54100	3939
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40	40.344569	19883	3383
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_le	40	40.069065	13389	1359
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40	40.050425	10496	1068
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_0	40	40.030258	8621	1647
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40	34.253369	23607	4474	0.0.0.0.0.0.1.0.7.1.17	synth with cache (only 1: intros l H; only 1: intros x y Heq; only 1: subst; only 1: induction 1; only 1: simpl in *; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.072808	27162	1342
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_impl_true	40	0.125928	63	20	2.3.0.1	synth with cache (only 1: induction l; only 1: constructor; only 1: intros HF; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.450837	30770	2736
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40	40.027498	8405	1172
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_impl_map	40	0.815948	546	126	1.1.6.2.1	synth with cache (only 1: induction l; only 1: intros; only 1: reflexivity || discriminate; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	32.211424	16935	2828	0.1.0.0.0.0.11.4.0.1.2.0	synth with cache (only 1: simple induction x; only 1: intros H; only 1: discriminate; only 1: simpl; only 1: induction l as [| z l]; only 1: intros H; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: intuition; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40	40.057146	17638	2498
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	40.559777	17443	1021
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40	40.389129	9089	1577
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	40	40.056957	17230	1761
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt	40	9.346088	3865	1459	0.0.0.4.2.4.0	synth with cache (only 1: intros; only 1: red; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_cons	40	2.637322	1338	423	1.1.2.1.1.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: easy; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.058442	18217	3166
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40	40.196784	21290	4487
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.098551	37938	4797
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.064869	18055	2874
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_plus_Zeven	40	40.088773	33351	1927
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.063214	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.061712	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40	40.251005	30360	4001
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj	40	40.197674	36512	3414
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40	40.183903	71832	6809
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.035490	8707	3348
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_iff	40	0.653413	349	102	5.2.1.0.0.0.2	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.subset_m	40	40.059723	20541	1497
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	40	40.073837	19119	3645
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40	40.619733	45132	2101
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Lget_app	40	40.119218	31445	3116
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.104603	33039	4927
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_carac	40	40.073475	15664	4447
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	40	40.330822	9087	1409
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.exists_2	40	40.161553	58426	4046
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40	40.083305	24341	5311
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.076628	25354	3330
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40	40.049258	13392	2514
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	40.229068	42141	6625
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_mod	40	40.273943	21565	4111
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_N2Bv	40	40.115624	46098	2822
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1_inv	40	40.222230	30841	4037
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_app	40	40.253032	40472	4022
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.HdRel_inv	40	0.077408	23	7	3.3	synth with cache (only 1: inversion 1; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_inv	40	0.037910	12	4	5.0.0	synth with cache (only 1: inversion 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_is_gcd	40	40.070226	24255	3282
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40	40.319763	30372	469
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40	40.114604	38173	9733
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.719077	486	126	0.2.0.0.0.2.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.240163	50029	2538
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_involutive	40	40.059881	20024	2096
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	1.399980	833	323	1.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	25.067696	11216	2457	0.0.0.1.5.0.1.1.1.5.2.0.0.2	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: unfold not; only 1: intro Hneg; only 1: intros [Hc1| Hc2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	28.713256	13605	1579	0.0.11.2.1.5.2.2.3.0	synth with cache (only 1: intros A B SetoidFunChoice R T Hequiv Hexists; only 1: intros x; only 1: pose (T' := fun x y => forall x', R x x' -> T x' y); only 1: assert (Hcompat : forall (x x' : A) (y : B), R x x' -> T' x y -> T' x' y) by firstorder; only 1: destruct SetoidFunChoice with (R := R) (T := T) as (f, Hf); only 1: easy; only 1: intros; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.151286	37641	5259
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40	40.035977	4687	1998
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.039379	5732	1043
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	40.051976	14985	2129
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.019536	4964	1496
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40	40.205948	43895	7300
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.001543	61	21
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.073621	5963	1269
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	3.033158	8005	482	0.4.0.1.1.39.1	synth with cache (only 1: intro; only 1: apply NNPP; only 1: red; only 1: intro H'0; only 1: elim H'0; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40	40.092658	35982	5763
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.weaken	40	40.204776	37639	6452
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.257252	67444	4747
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40	40.077798	26175	3958
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_Proper	40	40.043344	8628	1113
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_1	40	40.115379	12442	1781
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40	40.158828	29368	6047
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40	40.031965	9210	2777
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	1.605123	1120	297	0.0.1.1.0.1.9	synth with cache (only 1: induction l; only 1: simpl; only 1: intros l l' Hperm; only 1: intuition; only 1: intros l2 m Hin; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40	40.021629	4907	2008
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.517723	42228	2372
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	25.479628	5692	2459	0.0.0.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40	40.061734	18423	3064
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	40.512028	15138	1240
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.065226	21517	7158
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_le	40	0.117035	15	14	0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40	40.067474	18946	2852
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40	40.035610	8326	1977
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_impl	40	40.206887	25678	6039
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.031333	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.186808	43	15	0.0.4.1	synth with cache (only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.filter_spec	40	40.073609	22694	4478
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.152899	64995	3942
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.227875	24133	3378
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40	40.024848	7005	1932
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40	40.064992	23234	2281
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40	40.162803	28980	3366
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.026425	5560	3313
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.142750	21541	5265
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_double	40	40.122668	9999	2100
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.equal_m	40	40.044439	8467	5272
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Lget_app_Some	40	40.294821	17835	3597
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_sort	40	40.269601	34800	1943
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.016193	5	1	4	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	2.374461	3795	165	61	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.120030	26641	3836
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Surjective_list_carac	40	40.172149	60178	3500
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40	40.134113	7948	2016
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.partition_filter	40	40.189172	76024	2994
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40	40.060650	20680	2439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.054270	19467	1477
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40	40.209443	33461	5843
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.078904	3	3	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_Nsize	40	40.133100	51963	2765
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_swap	40	40.150041	53736	3075
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot	40	40.289564	23774	5080
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.262032	50208	1604
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.322222	35456	4233
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	5.781964	1363	406	1.3.5.0.0.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: generalize (mem_iff s x); only 1: intros; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_spec	40	40.081105	29289	2449
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.711114	606	85	10.7	synth with cache (only 1: repeat red; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.174155	16	16	1.0.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: rewrite mem_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.064575	5	3	1.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.322816	15117	448
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.142647	46482	3200
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	7.234891	4349	1034	2.2.0.6.0.0.2.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: destruct (eq_dec x x); only 1: auto; only 1: constructor; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inv_r	40	40.025885	7822	1175
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40	40.131818	30835	6424
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.061728	14449	2018
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.195779	11098	3934
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_1	40	40.153052	35186	4343
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_l	40	40.076313	8025	1389
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	40.076608	23252	2648
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40	40.037363	7796	2280
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40	40.033953	11199	856
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40	40.002794	465	34
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	5.273000	4342	826	4.0.0.0.4.0.12	synth with cache (only 1: induction l; only 1: constructor; only 1: intro y; only 1: intros; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40	40.062858	22533	4394
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40	40.242747	57259	7353
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_1	40	40.104489	7667	1857
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.project_In	40	40.136375	50493	6394
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.cardinal_Im_intro	40	40.203190	45120	6210
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.059998	16345	4796
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.eq_inject_Q	40	40.117149	7997	1050
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_opp	40	40.033416	8156	2620
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_T	40	1.287609	168	62	0.0.0.0.0.0.4.1	synth with cache (only 1: intros; only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.153308	24644	5910
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	12.395372	1643	1088	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40	40.022152	6234	1356
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40	40.261425	27937	3506
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.170080	19222	5956
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.041551	8555	3555
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_ge	40	40.048674	14158	5576
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.027329	7267	932
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.514156	22345	3072
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_in	40	40.321080	37281	5188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40	40.024724	5306	982
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.033050	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	40.075230	23730	3175
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	15.736638	14000	2385	0.16.0.10.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intros LT; only 1: rewrite H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40	40.294851	60498	1343
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40	40.053832	13949	4359
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.radd_term_term	40	40.224461	60827	4461
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40	40.100426	37368	2621
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	40.110930	48174	1825
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.228074	16201	4143
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_1	40	40.028808	6522	3429
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40	40.232855	58716	6825
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	40	40.172151	21683	2582
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_succ	40	0.025980	8	6	1.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	40	40.249619	30721	3115
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.leb_1	40	40.066925	20127	3470
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.785205	9625	1740
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_empty	40	0.063774	10	7	0.2.0.0	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Surjective_carac	40	40.434043	22719	2419
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.165105	8319	1403
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.034524	6	3	0.0.3	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.partition_1	40	40.078861	23945	3641
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.183919	5	3	0.2.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.120200	28	9	0.0.3	synth with cache (only 1: intros n m Hn; only 1: rewrite partition_filter; only 1: apply eq_refl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.214537	15	8	1.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40	40.048884	8918	2047
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40	40.134379	54875	1055
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_Nsize_1	40	40.093120	32016	2982
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2	40	40.211679	24719	5420
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.288974	25828	5690
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_app	40	40.119217	38895	3346
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	11.585741	4993	827	6.3.4.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40	40.088417	25795	5990
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.052898	8	5	0.2.0.1.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: subst; only 1: inversion H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_div2	40	1.796596	1091	184	0.0.1.1.1.1.11.1.0.1.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl Z.to_N; only 1: trivial; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.507115	382	60	13.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	40.074564	25621	2322
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	34.847579	11581	3373	0.0.0.4.1.4.1.2.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold not; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: intro; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	40.033313	9202	1045
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40	40.197628	27270	227
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	34.275986	45	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.254952	49607	4121
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.047553	13793	2514
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40	40.079986	23755	8222
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.one_succ	40	0.009436	6	2	0.4	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.009216	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_0_l	40	0.006792	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40	40.136588	51057	3712
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.025537	7755	1415
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0.006555	1	1	0	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.062644	20116	1933
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0.007458	2	1	1	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	40	0.009656	2	1	1	synth with cache (only 1: apply Z.add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	40	0.009672	2	1	1	synth with cache (only 1: apply Z.add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.010610	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0.011801	4	1	3	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.025575	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.026699	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40	40.085535	24388	2746
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.027565	8195	1183
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_l	40	40.047472	19117	2464
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.237754	61933	7378
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_2	40	40.080317	18818	2555
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.project	40	40.175929	29968	5887
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	8.712143	9	7	2.0.0.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.128112	43456	6489
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.039999	11971	1456
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	2.529383	420	185	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	9.845635	6127	719	0.0.3.19.0.5.0.1	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: intuition; only 1: intro x; only 1: abstract now inversion 1; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_inv_sqrt2	40	40.047367	14562	2130
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_opp	40	40.297613	3819	348
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.038508	9206	3061
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40	40.164351	24482	3883
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40	40.026788	8094	1464
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.280929	26721	3666
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.043622	9281	4232
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.tech_Rplus	40	40.071337	5481	1174
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40	40.099557	38527	1188
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.063829	6	6	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40	40.474578	19373	3304
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_app	40	40.228715	32937	5806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.038713	4536	252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.034383	2	2	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	0.096080	4	3	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40	40.082903	27221	3863
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.091981	25077	6552
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.269763	171	45	0.1.0.2.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	0.424439	198	63	5.0.0.1.2	synth with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: intros; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.radd_term_term'	40	40.073991	26544	4551
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.086443	18830	2446
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40	40.045723	12725	3272
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_mult_Zodd	40	40.117758	45974	3252
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.282763	24080	4784
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_0_1	40	40.045770	13637	2773
coq-tactician-stdlib.8.12.dev	Coq.Logic.WeakFan.Y_unique	40	40.247730	46274	5569
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.163099	22035	6428
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_add	40	40.148425	19569	1572
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	40.079942	10765	1145
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.238758	7764	2260
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.214607	16275	2867
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.653986	24310	2319
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40	40.079308	22835	4499
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40	40.194698	9055	2482
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.048225	16308	1894
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.043592	10462	2363
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bv2N_upper_bound	40	40.047039	17259	765
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2_inv	40	40.198069	18879	4520
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.247517	54011	2663
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.403051	28266	4115
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	40	40.331156	22972	1780
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.028842	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.086169	28280	4937
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_gcd	40	40.073135	25755	2725
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	40	40.062804	14946	3974
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	40.060405	19001	1376
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.110010	5	3	0.2.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	3.497077	1545	537	2.0.2.0.0.1.7	synth with cache (only 1: intros l; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40	40.275295	50386	699
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	8.172922	7293	723	7.3.0.6.18	synth with cache (only 1: intros (l, L); only 1: induction l; only 1: constructor; only 1: eassumption; only 1: now repeat constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40	40.323705	93408	3847
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.042869	9993	2387
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.106724	36030	5874
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_0	40	0.007561	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	40.055194	14953	1984
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_compat_r	40	40.094969	37636	2913
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_succ	40	1.986268	1922	212	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.054183	15057	1664
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.159417	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40	40.032928	10492	1396
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.046549	16510	3153
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40	40.158943	54356	8719
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40	40.001776	119	28
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.interp_proof	40	40.165056	64299	5816
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.159341	24755	4441
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.079014	26936	2311
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	40.053892	12472	2956
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40	40.069886	20474	1670
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_testbit	40	15.527333	17580	2120	0.1.0.2.1.20.2.6.4	synth with cache (only 1: intros H; only 1: assert (Hn : 0 <= n); only 1: trivial; only 1: destruct a; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: apply Z.testbit_Zpos; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.028258	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.015710	2	2	0.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id_abs	40	0.005954	2	1	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.007349	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_0	40	0.007638	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.009104	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.006447	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.180364	21	12	0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_bound	40	40.026392	5967	2600
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.652057	389	147	1.1.3.1.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	5.690244	9	3	3.1	synth with cache (only 1: intros; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.450348	77	46	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.033821	6414	3864
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	40.138360	26133	4235
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_pos	40	40.062352	10936	818
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	16.674990	8804	555	49.11	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.021342	5367	1641
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40	40.133167	46999	2670
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_sqr	40	40.062079	21895	2638
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.131091	20753	3664
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.056792	16006	2705
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	2.563463	1650	139	24.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	40.361638	64656	1407
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_rapp	40	40.292827	27501	5361
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.204452	18	10	0.0.2	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.031931	8917	855
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	2.112749	643	93	14.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	0.106745	93	10	14	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	40.112191	41630	4372
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40	40.229298	27744	6099
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.118295	38340	4329
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40	40.093423	31432	5142
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.xror_clause_clause	40	40.272772	85379	3881
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40	40.508354	20718	2595
coq-tactician-stdlib.8.12.dev	Coq.Logic.WeakFan.Y_approx	40	40.233898	38493	6478
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.165694	28067	2537
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_0_0	40	40.099075	36135	2580
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.099400	31598	3895
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.195110	28604	3841
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	40.072267	10531	1429
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.100527	30128	5106
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_1	40	40.152881	54860	4376
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40	40.053993	14734	3299
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.738127	10339	1704
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40	40.047583	13249	2326
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.ByteV2N_upper_bound	40	40.025073	8370	776
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.053865	15203	1904
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_elt_inv	40	40.204858	22057	3862
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_rev	40	40.311267	74650	2185
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.087748	28644	4932
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap0	40	40.057714	29265	2187
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	40	40.056008	11846	4411
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.040857	13811	1389
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_extends	40	40.145879	13094	3562
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Surjective_inverse	40	40.318256	16904	1469
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.253250	73418	6178
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_div_r	40	40.062621	22580	3105
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_compat	40	40.065561	7107	3988
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_compat_l	40	40.101889	43122	3243
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.succ_pred	40	40.256222	31970	7992
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.057251	17622	3111
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.022265	5901	604
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_mod	40	40.065383	37846	5052
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.141096	21612	4715
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.Reflect	40	40.246668	137926	6494
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_elements	40	40.091969	34124	2957
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.cardinal_decreases	40	40.119633	49263	8768
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_1	40	40.093387	13103	2201
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.040533	7611	960
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_bound_lt	40	40.031449	11545	2845
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.129304	26164	3307
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_inv	40	40.034981	9359	1014
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.031571	10342	899
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.134331	32305	3823
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.067116	29088	10176
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40	40.188463	24992	3351
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40	40.452555	19141	1186
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_app	40	40.333845	19172	3099
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40	40.231772	34781	535
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40	40.086090	29730	11215
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.083574	3	3	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.012872	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.106833	35	8	4.3	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.030275	2	1	1	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0.011830	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.035281	4	2	0.2	synth with cache (only 1: intros l'; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0.025728	1	1	0	synth with cache (only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.042645	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.056900	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sub_0_r	40	3.608638	8713	506	0.0.0.0.0.46	synth with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.494141	152	71	10	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	2.330386	698	116	0.13.3	synth with cache (only 1: intros x y z; only 1: compute; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40	40.106414	34657	4158
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_0_compat	40	40.117723	19366	2126
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40	40.069288	10843	1721
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_split	40	40.113484	38050	4104
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.057066	14963	6005
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.079085	24211	3879
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40	40.055533	16250	2440
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	40.068950	26785	1722
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.167638	7415	1606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.019748	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40	40.001844	223	27
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40	40.067206	21201	1774
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.156666	20225	3586
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_ext	40	40.046621	5949	2563
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_plus_distr	40	31.877838	8426	1410	8.0.3.3.2.0.0.3	synth with cache (only 1: intros x y; only 1: unfold Qplus, inject_Z; only 1: simpl; only 1: unfold Qeq; only 1: intro H0; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_minus_distr	40	0.728601	266	105	0.0.0.4.1	synth with cache (only 1: red; only 1: intros; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40	40.301726	67800	4624
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_cons_inv	40	40.191635	26377	5228
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.max_elt	40	40.148503	15653	4474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.195277	38749	2304
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	40.139360	49907	4918
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.070617	21160	4342
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_2	40	40.047354	11779	4342
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sub_succ_r	40	40.096465	28293	6778
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_0_l	40	0.007275	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat_r	40	40.075489	29488	2496
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.042007	10	3	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.022073	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ror_clause_clause	40	40.171166	7524	3243
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_sub	40	40.078933	24135	4864
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.074786	28706	2728
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.399603	27779	1942
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	3.214222	1029	344	0.0.0.3.0.0.0.0.5	synth with cache (only 1: intros m x e f; only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: intros; only 1: simpl; only 1: inversion_clear H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	1.050291	198	94	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	40.249478	23994	3481
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.129073	29493	2809
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.040783	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.264619	9	2	2	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.129248	6291	3077
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.354339	17	8	0.0.0.1	synth with cache (only 1: unfold eqk, eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_spec	40	40.049538	16222	1673
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.028855	7699	909
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_0	40	40.054099	15426	2646
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	7.718136	1547	238	3.1.2.1.0.18.0.0.3	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: apply Build_preorder; only 1: unfold eqk, ltk; only 1: auto with *; only 1: unfold eqk, eqke; only 1: red; only 1: eauto using PeanoNat.Nat.Private_OrderTac.Tac.eq_trans, PeanoNat.Nat.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.127366	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40	40.068919	20232	3279
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.039205	14980	772
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40	40.025311	6149	855
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l	40	40.086488	12218	2803
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40	40.064884	9574	1003
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add	40	40.085106	27651	2239
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_ass	40	40.062334	23463	2320
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.036330	5640	3021
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	40	40.047509	12397	2885
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_1	40	0.016486	4	3	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_1	40	0.033634	14	6	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40	40.100654	39423	1845
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.066436	21516	2574
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40	40.362335	6738	1411
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40	40.441975	19460	1845
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.002237	115	27
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40	40.056447	13144	1030
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.111984	36568	2588
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	31.100465	10109	2549	0.0.0.3.2.0.0.0.1.1.0.0.6.4	synth with cache (only 1: intros; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: unfold Z.pred; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	19.802139	26381	763	0.1.5.47.61.1	synth with cache (only 1: constructor; only 1: intro y; only 1: destruct y; only 1: compute; only 1: order; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_r	40	40.043997	12327	2800
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40	40.285933	60367	4758
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_rev	40	40.173186	17539	1564
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.empty_1	40	40.207448	56604	3502
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40	40.237914	52278	3501
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_sort_ok	40	40.327836	9295	1371
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.069678	20748	4075
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.cos_acos	40	40.035996	9611	2315
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	40.076192	28753	1479
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_succ_l	40	40.281299	27824	6577
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.008036	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod	40	40.072880	26412	3093
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40	40.405987	17201	251
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ror_cnf_cnf	40	40.229972	35762	2798
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	0.283493	378	21	27	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40	40.264162	18575	3163
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	7.074917	15903	173	0.176	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40	40.111233	38441	4528
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.150788	54485	3894
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.077218	7867	1663
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_ok	40	40.038196	5197	513
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40	40.030689	7758	959
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.041527	11605	2692
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.032691	11013	875
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40	40.107985	37096	3420
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_rot	40	24.076837	2930	867	2.8.5.1.0.0.0.1	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: rewrite app_nil_r; only 1: trivial; only 1: rewrite app_assoc; only 1: rewrite app_assoc; only 1: now rewrite <- app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40	40.027081	6582	816
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r	40	40.063743	13714	2463
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.067503	25281	2837
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40	40.035471	8928	1292
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.115597	39750	3061
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.106741	34946	3312
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	40	40.074436	19294	5193
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.087780	30497	3200
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	40	4.203989	968	522	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40	40.180125	8550	556
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.494867	13474	2589
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40	40.001791	174	25
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40	40.066448	20743	1926
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.138771	49755	2422
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.334421	28445	3809
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.019586	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.025652	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40	40.375343	10722	2160
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.055431	14344	3224
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40	40.425525	124318	3674
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_in	40	40.085319	27470	4726
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40	40.190732	18988	834
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.for_all_spec	40	40.091669	30709	4094
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.082006	25402	5140
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.acos_cos	40	40.046945	12724	1978
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.066489	19008	3299
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0.006976	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.105059	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.eqb_eq	40	40.311937	22811	6240
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.413226	197	31	7.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.043303	8	3	5.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.075770	28308	3279
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40	40.049180	7203	2896
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40	40.056516	16105	2422
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40	40.436219	9289	1005
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	0.274702	297	18	24	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0.023903	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0.291656	19	6	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	40.118904	40517	4949
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40	40.083280	28159	4002
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40	40.048135	12834	2423
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.370132	33	8	0.0.5	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40	40.042405	6642	2676
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.126156	16	7	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40	40.094644	32894	3099
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_refl	40	12.894202	29187	1083	111	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40	40.042550	10863	2451
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.232670	23504	3533
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40	40.291455	134802	905
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_swap_app	40	40.604491	7599	1532
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.030602	8099	624
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_pos	40	40.040047	7154	813
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_min	40	24.556209	10388	3460	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros Hn Hm; only 1: rewrite !abs_N_nonneg; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: unfold Z.min, N.min; only 1: simpl; only 1: now case Pos.compare; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct Hn || now destruct Hm || clear; only 1: Z.order; only 1: Z.order; only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	20.168749	6676	2469	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.060401	21737	2771
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40	40.070043	21654	1962
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40	40.060794	18524	2356
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.105876	34135	3177
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Pigeonhole	40	40.091560	27631	6635
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit0_Blow	40	40.116978	38817	3429
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_lt_contravar	40	40.071617	18381	5165
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40	40.701453	32110	1716
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40	40.165605	5658	1631
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40	40.069975	23691	2049
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.603478	112	26	1.1.0.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3w	40	40.184318	67059	3382
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40	40.001542	78	26
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40	40.387947	11493	2344
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.034651	2	2	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0.043239	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0.040500	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40	40.229211	90182	4032
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_in'	40	40.214433	26890	4790
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40	40.238601	57153	4782
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	2.035596	600	113	1.5.0.11	synth with cache (only 1: induction 1; only 1: left; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.exists_spec	40	40.127901	36735	4063
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.sin_acos	40	40.026544	6241	2177
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ltb_lt	40	40.312144	34626	5788
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_compat	40	40.106538	42570	2775
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	40.088565	24794	4377
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.019163	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.ratom_cnf	40	40.245020	39920	2686
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40	40.061320	18837	1810
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	40.059222	11711	808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40	40.254918	7493	1017
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40	40.084880	26745	4971
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.079655	24743	4262
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.lt_strorder	40	40.097351	29852	3631
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec	40	40.079932	25406	4325
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_antisym	40	40.068743	21716	2510
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40	40.037956	10688	2375
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40	40.105425	33767	5115
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin_Finite	40	40.487478	17647	3103
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_middle	40	40.104352	8819	1933
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_appart_zero	40	40.122338	14482	2311
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.028714	9601	788
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_max	40	40.305441	15946	5426
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40	40.067932	19737	3438
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.065541	24129	2829
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40	40.040165	12182	1347
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40	40.033449	9124	1213
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40	40.095711	9924	1412
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.Pigeonhole_principle	40	40.091872	28597	6300
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.083384	28264	3744
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	40	40.049464	10678	3318
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	40	0.152521	66	19	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40	40.059223	20608	2012
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40	40.056832	17305	1870
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_1	40	40.099319	31886	2787
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.001475	41	27
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.523294	4700	1138
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.353054	99236	3031
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_map	40	40.269456	6876	1046
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_1	40	40.121379	43319	5101
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40	40.886745	18141	2683
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec'	40	40.180687	68239	3331
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_acos	40	40.027020	7037	2111
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.leb_le	40	40.262648	23573	5418
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40	40.096197	32962	5279
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_compat	40	40.143161	59680	2222
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.163179	45	14	0.0.3	synth with cache (only 1: intros n m p; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.238866	19	6	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0.119335	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.026668	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0.008765	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.034890	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.036825	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.rxcnf_xcnf	40	40.615373	34615	1883
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40	40.309298	21592	1192
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40	40.054991	17060	2061
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.156094	13248	1946
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40	40.078200	22733	5609
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	40.114642	38521	5820
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.lt_compat	40	40.081869	11944	2345
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	40.042564	10498	2238
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.015946	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_trans	40	40.088558	31934	2416
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_irrefl	40	0.272140	107	14	14	synth with cache (only 1: apply Z.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.041052	11764	2664
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.076964	21947	4336
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_ok	40	40.208608	29202	3700
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40	40.445839	9762	1937
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.023505	7046	619
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_quot	40	40.074654	23007	4542
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.127218	44596	4968
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_l	40	40.210745	34340	2641
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.078866	30615	2486
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40	40.053427	12809	4372
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40	40.042642	9941	3840
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.112775	40715	4984
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	40	40.068996	18086	5397
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	40	40.081642	25813	4635
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	40	2.135170	483	255	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: intros H0 [| ]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.192682	21688	5219
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.078106	4406	713
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40	40.051576	13584	2967
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_2	40	40.124222	40146	4451
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40	40.001519	72	29
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40	40.627620	4148	909
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_map_inv	40	40.081226	23734	5091
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40	40.326510	77974	2598
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	40.163055	62010	6264
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.128546	47721	3784
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_acos	40	40.024356	5387	2161
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	40	40.084754	23062	6526
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	40.067333	21350	4383
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.018532	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	0.012837	9	2	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	0.011726	3	2	1.0	synth with cache (only 1: intros n m H; only 1: now rewrite <- ?Z.add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat	40	40.116035	44682	2469
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.307498	21971	1191
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40	40.167800	4419	1037
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	40.096011	34247	2740
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40	40.049728	14491	2437
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.056736	14894	4358
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.570024	17758	1940
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	40.133863	44230	4087
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.061649	5827	1325
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.012754	2	2	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.126555	48685	2821
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.034735	8659	2943
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40	40.087468	25798	5095
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.189514	22195	2344
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40	40.549524	12606	1593
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.031698	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.084785	24459	5074
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.021566	6186	536
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.055138	14698	4428
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_r	40	40.092445	29664	3437
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_divide	40	40.122530	48601	4004
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.053989	11845	5099
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.051490	11430	4698
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.106892	38448	4266
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	18.186217	6592	791	1.0.17.1.10.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: split; only 1: destruct 1; only 1: reflexivity; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_tt	40	0.095601	3	3	0.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_plus_1	40	40.070678	20488	3946
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.125320	45711	5078
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Full_push_compat	40	40.065745	16980	5481
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40	41.615737	7659	994
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_empty	40	40.149533	51687	4488
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40	40.001444	51	21
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.033264	6898	3435
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40	40.573132	5316	390
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_image	40	40.299023	62576	4996
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	40.322255	23890	3463
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_1	40	40.385551	36021	2298
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.060219	13542	1941
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.tech_Rgt_minus	40	14.138898	3877	1052	0.0.0.1.0.4.9	synth with cache (only 1: intros x y H'; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.799073	24163	2384
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_INR	40	0.667027	82	18	0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derive_pt_acos	40	40.027212	7099	1662
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_sub	40	40.288986	30011	7597
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	40.096768	29248	2878
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_O_plus_INR	40	2.792573	525	143	2.0.3.0.0.2.1	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_compat2	40	40.096262	34422	1666
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40	40.160033	14907	2780
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40	40.402748	17670	1014
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	40.165173	63727	4756
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_0	40	40.049963	12293	4175
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_antisym	40	3.870320	2345	630	0.3.2.0.0.0.0.0.0.3.0.0.2.0.2.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite CompOpp_involutive; only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.033453	9	7	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	4.128691	2425	226	4.1.14.7.0.6.0	synth with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: auto with relations; only 1: intros H; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_le_iff	40	0.180094	33	19	3.0	synth with cache (only 1: revert m; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.compare_spec	40	40.078417	19096	4272
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_compat	40	3.678600	1449	276	4.0.4.0.0.0.7	synth with cache (only 1: destruct m as [| m| m]; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n; only 1: Z.swap_greater; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.018439	4	2	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_init	40	40.080569	23121	5548
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40	40.112228	32664	3172
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.157975	119	29	8.1	synth with cache (only 1: revert l1 l2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.129827	51759	3653
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	9.677143	2026	430	7.1.1.2.8	synth with cache (only 1: intros x y z; only 1: unfold eqke, ltk; only 1: intuition; only 1: compute; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40	40.115833	39627	4653
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.137607	32853	4051
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40	40.194255	34877	4416
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle2	40	40.565548	7293	1306
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	0.457637	154	39	3.5	synth with cache (only 1: inversion 1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40	40.022872	5987	1236
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pow	40	40.336725	18836	3259
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.058641	14251	4368
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRup_nat	40	40.119537	44936	3167
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_4	40	40.064281	13274	6343
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_4	40	40.050795	10508	4336
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nxor_BVxor	40	40.086683	32524	3142
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_and_opt	40	40.163482	10469	1391
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	7.608051	2074	616	1.1.1.1.0.0.0.0.11	synth with cache (only 1: destruct n; only 1: rewrite !abs_N_nonneg; only 1: now apply Z2N.inj_succ; only 1: Z.order; only 1: Z.order_pos; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_sub	40	40.264362	46709	4226
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.137692	19322	3517
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Full_index_one_empty	40	40.095153	28724	6508
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	2.018427	455	184	7.0.0.0.0.1	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.pos p ÷ Z.pos q) = (N.pos p / N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_quot; only 1: now apply Z.quot_pos; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0.013055	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.005850	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.069973	21955	2307
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	21.584165	5775	1080	0.1.5.0.7.2.0.8	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: constructor; only 1: unfold eqk, ltk; only 1: constructor; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3'	40	40.132859	44788	2842
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40	40.001617	121	30
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40	40.062929	21809	1905
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.541562	10215	1263
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.170761	4	3	0.0.1	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_Forall	40	40.212334	25164	4226
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.302103	70021	4853
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40	40.587411	194542	2511
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.033336	7510	2348
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	3.596600	235	34	0.0.0.0.16	synth with cache (only 1: split; only 1: rewrite !InA_cons; only 1: tauto; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.191905	51	10	0.0.9	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_INR	40	40.051707	13548	3965
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_succ	40	15.509709	3388	1005	0.0.0.0.3.0.0.0.2.6	synth with cache (only 1: unfold Z.succ, Z.pred; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40	40.209914	4409	712
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.372665	17846	983
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40	40.155991	31136	6674
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40	40.064733	18626	4961
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	2.384959	2057	159	3.0.2.24.1	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40	40.059535	22150	1969
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	40.104811	35852	3381
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lt_succ_r	40	40.262220	23689	4929
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_1	40	40.036354	8874	3550
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_drop	40	40.078649	24795	2283
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.158707	29043	3222
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.id	40	1.548746	435	82	0.4.0.1.17	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zlt_Qlt	40	40.114202	37673	4485
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40	40.126474	17716	2844
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_Exists	40	14.485434	7357	1334	0.0.0.4.0.7.0.7.0	synth with cache (only 1: intros l1 l2 HP; only 1: intros HE; only 1: apply Exists_exists in HE; only 1: induction HP; only 1: destruct HE as [a [Hin HP]]; only 1: apply Exists_exists; only 1: exists a; only 1: apply in_app_or in Hin; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	24.537220	24050	3318	7.4.13.0.1.3	synth with cache (only 1: unfold get, push, index; only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: intro H; only 1: destr_eq H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40	8.598410	984	196	2.16	synth with cache (only 1: compute; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40	40.171022	72004	727
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.225705	42037	3510
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	2.554721	1021	166	0.0.1.12	synth with cache (only 1: unfold pow; only 1: intro y; only 1: rewrite recursion_0; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40	40.212520	45009	5826
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_elt	40	40.420398	10684	1806
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40	40.052635	12079	4356
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40	40.027509	8361	930
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRfloor	40	40.837900	22667	800
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.072159	16677	6047
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.019300	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.022689	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.062278	15163	5076
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.023047	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.024958	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nand_BVand	40	40.073760	26173	3039
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.add_term_correct	40	40.291082	11935	1071
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_pred	40	40.181412	27705	4311
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_nodup	40	40.277288	25540	3893
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	11.070813	2127	431	0.1.10.5.0.1	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40	41.077570	9995	932
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40	40.809557	9786	1616
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.086799	23658	4108
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001713	144	26
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	7.673380	3328	174	51.4	synth with cache (only 1: intros; only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_1	40	40.056218	16691	985
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	9.342864	7234	1023	0.1.0.1.0.2.1.0.30	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: intros H0 [| ]; only 1: tauto; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40	40.331148	87848	3112
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40	40.044750	12064	2944
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subset_spec	40	40.077543	27248	3257
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.217215	567	27	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40	40.493020	7010	1205
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	33.897028	25938	2771	0.0.1.2.2.3.5.1.4.3.0.0.0.5.1.22.7	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: Z.nzsimpl; only 1: intros Ha; only 1: Z.order'; only 1: easy || now destruct y; only 1: easy; only 1: intro LT; only 1: auto; only 1: now split; only 1: unfold Z.lt; only 1: simpl; only 1: easy || now destruct 1; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.137190	15	4	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_INR	40	40.069564	22445	3155
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40	40.178683	32766	7455
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40	40.301154	21824	973
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40	40.135868	49334	4780
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.223461	25030	2713
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_l	40	40.103992	31162	5061
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_eq	40	40.062553	21868	1332
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.062602	19158	4348
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40	40.095939	30363	3433
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj	40	40.354249	26201	4516
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lteq	40	40.068287	20773	2947
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.121385	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.170229	26960	2477
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_r	40	2.852777	1000	395	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_Forall2	40	40.194540	20213	3758
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.MapsTo_1	40	1.951732	590	156	0.0.0.0.8.0	synth with cache (only 1: intros m x y e; only 1: CRelationClasses.simpl_crelation; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_In	40	40.103596	32395	6150
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40	40.146438	56310	3943
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40	40.248090	52721	3176
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	40.173450	6632	1289
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.016879	4058	1241
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40	40.081896	24435	4946
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_l	40	40.055967	15532	2652
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.choose_equal	40	40.086288	28422	3081
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.choose_equal	40	40.097213	31896	3231
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	40.064234	23200	2371
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40	40.152783	18704	3971
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.222942	44903	4923
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.102881	17609	3048
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40	40.121482	1942	357
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40	40.080302	21514	5286
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.637517	6952	1162
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40	40.001844	202	34
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_clause_correct	40	40.045512	7457	1851
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40	33.909364	9386	1019	15.13.1.0.6.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: simpl; only 1: intuition; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	40.264223	47780	5454
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40	40.306161	55838	6291
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_2	40	40.361161	23353	4557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	40	40.069309	22472	2202
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_Leq	40	40.108054	36698	6541
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.073142	24870	2299
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_INR	40	40.049757	12740	4119
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40	40.082816	28089	5125
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40	40.138934	19110	3987
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.264507	22590	1353
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40	40.090896	15523	1931
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_lt	40	40.028783	7262	2182
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_le_weak	40	40.123428	45014	3163
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.354924	24300	6294
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.nil_cons	40	0.079137	41	15	8	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.min_l	40	40.294683	36211	5637
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.min_r	40	0.105581	28	12	0.0.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	4.885307	2463	609	0.0.1.0.15	synth with cache (only 1: destruct m; only 1: auto with sets; only 1: inversion 1; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_1	40	40.054989	11885	1816
coq-tactician-stdlib.8.12.dev	Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40	40.242577	13373	1699
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.346784	78616	4113
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.360227	27649	2570
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40	40.097596	32733	2782
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40	40.124713	46007	5331
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40	40.101802	33972	4106
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40	40.210411	18222	2376
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40	40.032237	8623	1063
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.051562	12146	4593
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_r	40	40.049153	11177	3367
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40	40.172455	76595	991
coq-tactician-stdlib.8.12.dev	Coq.Logic.WeakFan.WeakFanTheorem	40	40.488346	115063	4683
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.118951	38008	4611
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_compare	40	40.259963	64303	3134
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	40	40.247493	16544	3391
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.087658	17695	3666
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.038433	12321	1514
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40	40.074935	18201	4661
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40	40.127517	18104	4071
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40	40.001727	166	26
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_clause_cnf_correct	40	40.047896	12758	1592
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40	40.063646	16466	1782
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.284269	59207	4907
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.054782	13844	4279
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40	40.234644	38123	2977
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.460053	267	65	0.0.4.0.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	22.733641	30859	2842	4.2.0.0.42	synth with cache (only 1: intros x x' Hx y y' Hy Hr; only 1: apply fold_rec; only 1: intros; only 1: trivial; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40	40.030697	6564	1165
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.092962	36159	1546
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_square_simpl	40	40.080883	30034	2448
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zgt_square_simpl	40	0.033162	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	3.036607	651	106	19	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.017278	3	2	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.019457	2	2	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pow_INR	40	40.040717	10811	2049
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_empty	40	40.110746	41095	3350
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40	40.221814	21709	3301
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.INV_rev	40	40.084296	29751	2296
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.091226	31626	2897
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_le	40	40.060790	15621	4888
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_cons	40	12.208315	1795	561	1.0.0.0.1.0.0.0.2.0.1.2	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: generalize nil as acc; only 1: simpl; only 1: induction f; only 1: intros; only 1: unfold eval_clause; only 1: simpl; only 1: tauto; only 1: intros; only 1: unfold eval_clause; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.destruct_list	40	40.164182	64758	2680
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.171410	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.peano_ind	40	40.435708	108422	6175
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40	40.147874	24835	5026
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.129827	49569	5175
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.empty_1	40	0.235354	407	47	3.0.22	synth with cache (only 1: intros H; only 1: simpl in *; only 1: inversion_clear 1).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	19.116279	4866	1087	0.0.3.1.1.7.2.6	synth with cache (only 1: intros x l' H H0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply SortA_InfA_InA; only 1: eauto with *; only 1: eauto with *; only 1: solve_proper; only 1: eauto with *; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tmap_Tadd	40	40.263648	41374	5106
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40	40.280448	24124	3165
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40	40.061107	15202	1171
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_injective	40	40.139028	52516	5269
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40	40.148807	20986	5536
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.032858	6	6	0.0.0.0.0.0	synth with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40	40.209971	17139	3340
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40	40.044798	14670	1700
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_l	40	40.110113	3382	497
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.039294	8346	3848
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	4.707265	1542	564	0.0.1.0.1.5	synth with cache (only 1: intros X Y H'; only 1: intro IT; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.091394	41069	455
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	40	40.162169	23900	3404
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_max	40	40.201959	35371	5474
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	40	40.162974	31069	2187
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.167137	113	29	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.eq_dec	40	40.168698	26415	3843
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	40.227686	20522	2381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40	40.046142	12580	1724
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40	40.102457	32568	3638
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.076573	14409	1070
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40	40.001554	112	26
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_iff	40	40.048544	11859	3473
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_3	40	40.245690	45124	3860
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40	40.361646	65649	2872
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.110248	36546	4746
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_compat	40	40.042557	9007	1969
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zeq_plus_swap	40	40.027137	7610	1143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40	40.027910	8656	176
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_INR	40	40.095761	31827	4240
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40	40.073842	25468	2347
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	4.980356	2556	572	0.0.0.10.3	synth with cache (only 1: intros; only 1: rewrite elements_node; only 1: unfold elements; only 1: simpl; only 1: now rewrite !app_assoc_reverse).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.083026	25584	6805
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.085364	27966	2640
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_le_trans	40	40.065854	19423	3867
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_lt	40	40.203594	13518	2922
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.174936	16026	2897
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_cnf_correct	40	40.038175	7945	1550
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40	40.092422	30294	6722
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.bi_induction	40	40.399899	53655	6260
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.157418	34	10	2.1	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.061034	17	12	0.0.0.0.1	synth with cache (only 1: unfold le, min; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.108362	52	20	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.142371	55516	3660
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	32.389053	17976	5434	1.0.0.0.5.2.0.0.1.2.0	synth with cache (only 1: unfold Add at 1; only 1: intros A NI; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros H'1 H'2; only 1: elim H'0; only 1: intro; only 1: clear H'0; only 1: elim H'1; only 1: auto with sets; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.648764	7009	1616
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.get_map	40	40.079596	22299	5701
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify_map	40	40.459268	27852	1304
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40	40.163256	63187	4757
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	0.017839	8	1	7	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40	40.097002	33729	3957
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	6.577571	4659	657	13.3.2.4	synth with cache (only 1: intro n; only 1: intros H; only 1: inversion 1; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40	40.054428	16853	1616
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.020555	4117	1243
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	10.675197	4444	963	0.0.8.17	synth with cache (only 1: revert n m; only 1: intros a Ha; only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.076965	22717	4892
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_r	40	40.176998	18374	2119
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.eta	40	40.259485	66850	2110
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40	40.191952	31159	4227
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.159265	20051	2735
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.discr	40	40.302629	43291	7455
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.040378	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall	40	40.456130	17382	3213
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40	40.284843	94700	8016
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40	40.373977	9116	1933
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.065038	9166	4495
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.097019	28911	2893
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40	40.001615	96	32
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	24.482640	7463	3423	0.0.0.0.0.1.0.0.2.2.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.083743	27527	4135
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40	40.201959	60026	4752
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40	40.122968	44607	3855
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_1	40	40.273355	53299	6330
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.096272	29666	5858
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	40	40.087924	35380	484
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_INR	40	40.095000	32466	4232
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	22.072833	14214	2645	2.0.0.0.0.0.0.0.1.0.0.0.0.17.0	synth with cache (only 1: intros m x y e; only 1: reduce; only 1: apply InA_eqA with (x, e); only 1: split; only 1: eauto; only 1: eauto; only 1: red; only 1: unfold Raw.PX.eqke; only 1: intuition; only 1: eauto; only 1: congruence; only 1: unfold Raw.PX.eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40	40.080548	26469	3762
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.cons_1	40	40.095538	30533	3790
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.044666	13905	2176
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40	40.055502	13523	3309
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_trans	40	40.070224	20396	3418
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.or_cnf_opt_correct	40	40.038171	7945	1769
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40	40.153476	24136	7539
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_2	40	40.067601	22216	2706
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	40.307275	21576	1649
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.014227	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_0_r	40	0.008868	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.map_push	40	40.086775	26678	5161
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40	40.703032	5460	813
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.076244	28117	1345
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify	40	40.214938	20206	4770
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.103753	36677	4091
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.length_zero_iff_nil	40	40.297691	67757	2475
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_nil	40	0.009347	2	1	1	synth with cache (only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.016514	4	2	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.231187	20495	2432
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	8.508339	7283	1106	6.7.8.5	synth with cache (only 1: intros H H'; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_le_lt	40	1.584784	1135	164	19.7	synth with cache (only 1: intros H; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_le	40	0.006261	2	1	1	synth with cache (only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.017416	3340	1118
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_gt	40	40.388839	15235	3125
coq-tactician-stdlib.8.12.dev	Coq.Reals.Abstract.ConstructiveReals.CRapart_morph	40	40.211456	12342	4294
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_cons_not_nil	40	4.897260	3912	480	2.0.4.3.15	synth with cache (only 1: intros n IH; only 1: induction n; only 1: intro; only 1: discriminate; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_nil_l	40	0.021264	2	2	0.0	synth with cache (only 1: simpl; only 1: now destruct l).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_not_lt	40	3.613031	4060	415	26.0.6	synth with cache (only 1: intro; only 1: apply Z.nlt_ge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.eq_nth_iff	40	40.141772	26797	8881
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.206301	34111	4537
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_iter	40	40.135224	55215	3296
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.id	40	0.239789	152	35	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_succ	40	40.143971	51188	7061
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.007687	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_succ	40	0.033510	5	5	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Exists	40	40.289974	12539	2030
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40	40.126406	24941	4004
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40	40.060237	11432	4950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40	41.629526	5532	1114
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40	40.002114	251	44
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40	40.083350	23912	2892
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40	40.137334	20961	6228
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.072697	21827	4642
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.077380	22392	5272
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40	40.267040	30407	3568
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	40.299112	57898	4852
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro2	40	1.546236	442	142	0.0.2.0.5.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	2.134496	811	407	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.297777	16	11	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	2.914959	586	206	4.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_minus_le	40	40.085352	29013	3576
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.008441	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40	40.100994	39330	1645
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_1_INR	40	40.101463	33623	4358
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_1	40	40.077364	24243	3966
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40	40.091895	27801	6103
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	40.161330	64241	1641
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_div	40	40.089792	31643	3932
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40	40.028344	4730	760
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.xcnf_correct	40	40.069738	17781	1798
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40	40.079533	22262	6379
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.add_1	40	40.085674	25367	3604
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_succ_r	40	40.247365	8260	1838
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_neg_r	40	1.386304	401	111	0.0.1.1.2.1.5	synth with cache (only 1: revert m; only 1: destruct m; only 1: now destruct n; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.079645	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Full_map	40	40.211801	29610	7213
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.080766	30567	2558
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.610197	10859	2044
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	16.578054	68526	1529	0.0.0.107	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	0.330288	103	31	7.0	synth with cache (only 1: intros; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.216900	38846	3988
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.352716	342	63	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40	40.218866	3390	1269
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40	40.051185	14097	906
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	40	40.400851	40437	5342
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40	40.432706	31985	822
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	3.768531	710	185	0.0.7.0.0.2	synth with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: simpl in *; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_nil_r	40	40.270919	66853	3871
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_nil_end	40	0.151532	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	40.061852	18657	3272
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	40	40.196153	41248	2932
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40	40.110926	35455	4553
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_hd	40	40.217971	41855	3082
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj	40	40.333398	97901	5189
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.220703	49	23	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.bi_induction	40	40.312948	65902	8283
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall2	40	40.132629	23905	3205
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40	40.268414	41395	5413
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40	40.055705	10698	4599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40	40.186237	14144	2362
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40	40.003675	284	44
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.085705	28201	2109
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40	40.327942	49807	2230
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40	40.206655	16516	3732
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_elim	40	40.270092	21957	3921
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40	40.081847	22270	3052
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40	40.083162	13437	2781
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.119711	39690	3866
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	28.464320	32226	2683	0.0.0.0.2.4.8.9.1.17	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply find_2; only 1: simpl; only 1: rewrite ?add_find, ?bal_find; only 1: destruct X.compare; only 1: order; only 1: auto using find_1, add_1 with ordered_type; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	40.099584	34254	3138
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorDef.BASES.trunc	40	40.247079	73443	5718
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40	40.050234	10825	4968
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	1.606565	1951	292	0.0.1.6.7.20	synth with cache (only 1: intros H; only 1: simpl in *; only 1: intro n; only 1: unfold Raw.empty; only 1: intro abs; only 1: inversion abs).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40	40.074246	22976	3055
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_mult_le	40	40.059896	19513	2858
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_ok	40	40.066205	20434	3426
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40	40.345528	103357	6000
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.108328	29938	1710
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.add_2	40	40.049753	10754	1705
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.square_spec	40	40.235039	5845	817
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR	40	11.343891	4767	883	2.1.0.13.6	synth with cache (only 1: red; only 1: induction n; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40	40.171272	65473	4786
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.250763	38999	1834
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.165413	1882	722
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40	40.242688	86813	8360
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.eq_dec	40	0.022711	2	1	1	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	40	0.026012	39	7	9	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40	40.013331	2502	1089
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40	40.310924	47115	6311
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_add	40	40.443544	11309	1750
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_assoc	40	40.110789	35187	4453
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_assoc_reverse	40	0.048297	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_comm_cons	40	0.011307	1	1	0	synth with cache (only 1: auto using app_assoc).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_dec	40	40.091953	17153	4476
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_nil	40	1.633502	619	170	0.3.0.1.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	21.930778	12485	1646	1.15.9.1.0	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: intros; only 1: simpl_relation; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	40	40.135388	17016	3513
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.NNPP	40	40.483674	62764	5255
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_tl	40	40.165650	41560	4220
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.Peirce	40	0.885749	691	67	24.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_double	40	40.206194	19362	2230
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0.136897	9	2	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_succ	40	0.017634	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.030111	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_add	40	0.020006	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.162344	33709	3087
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionality.proof_irrelevance	40	40.250057	90912	4296
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_0	40	0.009975	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40	40.216216	17454	2277
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40	40.240300	47640	4485
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40	40.083375	8728	2265
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	2.720516	1116	303	6.2.2.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	0.028543	8	4	3.0.1.0	synth with cache (only 1: unfold Subtract at 1; only 1: intros A x y H'; only 1: induction H'; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.054204	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.le_lt_SS	40	3.532297	2361	327	32	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.004231	423	44
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_ext	40	40.323467	45043	1582
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.086742	25710	3814
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.275323	43015	5222
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40	40.197258	13976	5242
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.160663	23758	4060
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_imply_elim	40	12.764106	13105	1530	2.22.24	synth with cache (only 1: intros a Ha; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_imply_elim2	40	0.076013	17	7	7	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40	40.077353	21788	3053
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	2.528122	1863	54	60	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	6.802925	3065	382	0.18.4	synth with cache (only 1: intros x y; only 1: compute; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_to_or	40	1.709916	622	191	0.9.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.073146	22048	3143
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	1.125454	144	40	7.2	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	13.781882	14454	1075	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_mul	40	0.018950	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_div2	40	0.017482	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_to_and	40	1.121381	232	110	3.1.2.2	synth with cache (only 1: intros; only 1: apply NNPP; only 1: intro; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.or_to_imply	40	0.074875	15	7	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40	40.061157	15376	5366
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.133392	50859	4353
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40	40.112769	36361	4351
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_and_or	40	1.797315	473	182	8.4	synth with cache (only 1: Bool.destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.Splus_lt	40	8.501250	10002	1015	100	synth with cache (only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.or_not_and	40	0.286984	19	7	6.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.124588	15825	2396
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.not_or_and	40	0.234767	5	4	0.0.0.1	synth with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.020973	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_and_or	40	0.031080	6	2	3.1	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.imply_and_or2	40	0.032301	3	2	0.1	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40	40.070599	22978	2443
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare.discrete_nat	40	40.132709	26631	3425
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.410891	72644	6259
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.tauto_checker_sound	40	40.040315	10287	2170
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.add_3	40	40.060187	16993	2864
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	40	40.316506	19610	1333
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_lt	40	40.114005	39044	4038
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40	40.261506	38345	3094
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.158640	49	24	0.0.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40	40.157893	58357	6947
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.316703	125539	8914
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40	40.013526	2251	935
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_discr	40	40.355988	118533	2983
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_double_spec	40	0.007890	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	1.996869	2457	444	18.1.0	synth with cache (only 1: unfold not; only 1: intros ? ? f; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40	40.176548	15384	5163
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_mul	40	40.376861	11218	1715
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_le_dec	40	40.076057	24703	3296
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_unit	40	40.189196	26752	3650
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.zerop	40	0.285161	32	9	4.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_3	40	40.044670	13201	1844
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	40	40.135331	18164	5217
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	40	0.161317	13	5	5.0	synth with cache (only 1: unfold to_nat; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	24.444274	16843	1182	0.0.1.0.2.0.6.18.35	synth with cache (only 1: intros n IH; only 1: intros x x' Hxx'; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_last	40	40.174891	15302	2157
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_succ	40	40.170370	65661	4110
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.one_succ	40	0.005699	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.two_succ	40	0.011232	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_0	40	0.006004	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_spec	40	0.025172	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.015437	8	3	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40	40.327664	18449	3289
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	4.882068	1766	805	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40	40.333870	5139	1367
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.541851	181	89	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_succ	40	0.013698	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_sub	40	0.313301	171	44	7.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.431649	405	73	2.12.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_0_l	40	0.032506	9	8	2.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40	40.002694	212	50
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40	40.128319	35344	2531
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	40	40.388420	21120	1690
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40	40.130301	12778	5971
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_nodup	40	40.099087	32747	4652
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.521124	109	58	0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.026862	4	4	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.255163	42742	5023
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40	40.042143	8944	4438
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.034370	11	8	1.1.0.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intro; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40	40.257871	12399	2584
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_compare	40	40.200515	81353	7549
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_min	40	0.020486	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_max	40	0.072253	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40	40.061862	14601	5768
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	40.079831	27723	3359
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_Cmp	40	40.175909	64162	3656
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.SSplus_lt	40	40.093979	23127	8081
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_odd	40	40.048681	17698	1687
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40	40.491745	56221	3683
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40	40.101714	34483	3159
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.050397	11471	1684
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_bf_map	40	40.089773	20666	1596
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.eucl_dev	40	40.262235	68540	3920
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_INR	40	40.094045	15739	3497
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrt_spec	40	40.276963	15774	2746
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrt_neg	40	0.050913	24	8	4	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_not_0	40	0.283704	69	24	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.152451	55512	6888
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40	40.068530	22425	3143
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.557123	1601	671	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_em	40	40.311016	122017	14354
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	40.186242	47170	7405
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.011191	1900	769
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.336931	125543	3887
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.316689	179	68	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_sub_max	40	40.405888	22079	4302
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	5.297190	1264	514	0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.541070	151	74	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.125150	49240	1284
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.elt_eq_unit	40	40.223466	41979	4204
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	40	40.275921	24788	2814
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40	40.053176	14384	1718
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.141022	20054	2605
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40	40.083963	24694	2864
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	40	1.558707	165	96	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	8.535425	2126	242	0.0.0.7.16.7	synth with cache (only 1: intros x x' Hxx'; only 1: intro H; only 1: induction n; only 1: eauto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_ext	40	40.164189	40616	4886
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40	40.081004	22253	2908
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40	40.167279	5833	1112
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.129962	45314	6796
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.089582	46	20	0.4.1.1	synth with cache (only 1: destruct n; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40	40.002443	232	75
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40	40.113236	39998	3497
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.318998	40304	1486
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40	40.145861	22218	5069
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_intro	40	40.149824	21945	4647
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	40	40.053067	14126	4064
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40	40.215509	25563	3097
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40	40.238712	14922	2149
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iter	40	40.227856	47278	4928
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40	40.052366	11166	5511
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_1	40	40.109004	37731	3990
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.compare_spec	40	40.113810	38301	4285
coq-tactician-stdlib.8.12.dev	Coq.funind.Recdef.max	40	40.077903	25141	5228
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_even	40	40.048114	16612	1583
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_n_S	40	0.129768	11	6	0.2.3	synth with cache (only 1: revert m; only 1: intros H; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S_n	40	0.005748	1	1	0	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40	40.086725	23877	6333
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.013795	3	2	0.1	synth with cache (only 1: intuition; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_2	40	40.062681	18445	2776
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.quotient	40	40.204290	38902	3283
coq-tactician-stdlib.8.12.dev	Coq.Arith.Factorial.lt_O_fact	40	40.213171	22877	5743
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.073069	22255	3698
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_0_INR	40	40.078573	10885	2011
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	36.567384	39612	5547	0.14.7.3.0.10	synth with cache (only 1: apply NNPP; only 1: unfold not; only 1: intros; only 1: apply H; only 1: intros h hn; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.285475	62596	5473
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	40	40.290200	114377	9498
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	40	0.442684	666	124	9.0.0.4.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	40.014802	2676	852
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_double_succ	40	40.557180	218437	1954
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.double_succ	40	0.009253	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.408700	76	35	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_sub	40	40.392951	19601	2578
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.add_1	40	40.203279	81820	5549
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qopp_le_compat	40	40.077003	24125	3788
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.026686	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	3.003102	1671	490	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall n (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	0.160591	49	30	1	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.005855	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	3.551656	12851	1004	0.10.14.0.20.1	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intros H ?; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_inj_tail	40	40.220930	37236	3494
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40	40.064424	20613	2717
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.135623	11521	1293
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_length	40	1.355590	462	139	1.3.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40	40.095764	20030	3222
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	5.295822	2248	631	0.0.0.2.2.0.4.2	synth with cache (only 1: induction n; only 1: split; only 1: intro H; only 1: rewrite <- PeanoNat.Nat.odd_spec in H; only 1: discriminate; only 1: inversion_clear 1; only 1: elim IHn; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_lt_dec	40	40.188421	33519	2369
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.230176	42292	1500
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	6.670699	12869	629	0.0.0.0.1.74	synth with cache (only 1: red; only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_not_1	40	0.021445	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.last_length	40	1.657923	1106	163	1.3.0.2.7.5	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40	40.728130	117415	2679
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_succ	40	0.921389	325	120	1.1.1.0.0.2.0.0.0.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	40	22.532524	7297	1331	1.10.5.3	synth with cache (only 1: compute; only 1: intros; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.026685	6	5	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.017749	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.022944	4	4	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40	40.468843	11551	1154
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_inv_head	40	6.916226	3754	745	3.12.1.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now symmetry; only 1: simpl; only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.056339	18644	1341
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_succ_r	40	40.202270	34492	5430
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mul_0_l	40	0.006995	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40	40.001541	81	23
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40	40.106393	24405	2214
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_inj	40	40.133401	49881	3500
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40	40.181868	36309	5597
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim1	40	40.142968	16279	5015
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	40	40.073127	21600	3673
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40	40.299783	14345	2069
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S	40	36.880525	30023	3449	1.2.41	synth with cache (only 1: inversion 1; only 1: auto with relations; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_pred	40	0.007254	2	1	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_not_gt	40	0.006326	1	1	0	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_not_le	40	0.080977	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_S_gt	40	0.151843	37	15	2.0.0.4	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S_le	40	0.005495	1	1	0	synth with cache (only 1: apply Peano.le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_S	40	0.009012	2	1	1	synth with cache (only 1: apply Nat.le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_S	40	0.006595	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_2	40	40.083924	27254	4869
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40	40.052642	12853	5185
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.075889	22036	4752
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_assoc_reverse	40	40.160192	7603	1925
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zodd_mod	40	40.060824	15247	1362
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec'	40	40.065189	19679	3147
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_3	40	40.042127	8594	1436
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.modulo	40	40.058218	16050	3860
coq-tactician-stdlib.8.12.dev	Coq.Arith.Factorial.fact_neq_0	40	40.221053	38816	5055
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	25.999155	18526	4305	4.0.0.0.1.1.0.1.0.0.0.1.0.1.1.2.2.0.1.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: right; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: right; only 1: now destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: intuition; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: right; only 1: simpl; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec	40	5.995239	955	485	0.1.0.1.0.0.0.0.0.0.2	synth with cache (only 1: intros s1 s2 B1 B2; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_INR	40	40.061543	16502	4672
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.266720	16121	2450
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.031128	7	6	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.add_3	40	34.256096	25021	5311	0.0.0.0.15.0.12	synth with cache (only 1: unfold not; only 1: intros s x y; only 1: intro H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred	40	3.215069	1372	540	1.0.1.0.0.0.8.3	synth with cache (only 1: intro H; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.013461	2873	818
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_assoc_reverse	40	10.611754	1749	460	1.0.4.0.0.0.8	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: now intros ->; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.059370	17678	2281
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_minus_iff	40	40.053651	6280	1528
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.100673	30668	6842
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40	40.619993	275483	9709
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40	40.123482	41585	3735
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	40	40.146758	55774	3839
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40	40.077061	17586	3244
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	40.150517	18465	2134
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_last	40	40.256218	55783	6004
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_ge_dec	40	0.723635	137	76	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_gt_dec	40	0.165396	18	11	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40	40.309517	24275	5343
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_O	40	22.203267	27512	2732	9.0.0.12.22.1.2	synth with cache (only 1: destruct n; only 1: intro H; only 1: now left; only 1: destruct m; only 1: intro; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.ind_0_1_SS	40	40.161446	18831	3228
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.O_or_S	40	14.383967	27858	1550	0.0.0.36.42	synth with cache (only 1: induction n; only 1: right; only 1: reflexivity; only 1: left; only 1: now exists n).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.162301	12585	2933
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	40	1.136173	290	137	1.1.0.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: unfold munion; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_left	40	1.036200	254	126	0.1.1.2.0.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: destruct x; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40	40.620643	7132	1207
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_right	40	0.153332	9	9	1.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_inv_tail	40	40.213718	40222	4584
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_eq	40	0.009990	2	2	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_cons	40	0.127346	59	19	0.0.0.1.3	synth with cache (only 1: intros; only 1: generalize H; only 1: simpl; only 1: right; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.not_in_cons	40	0.536173	84	29	2.2.1.2	synth with cache (only 1: simpl; only 1: split; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_nil	40	0.018666	4	3	1.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40	40.059977	18198	2321
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mul_succ_l	40	40.196324	34155	5127
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40	40.077345	21446	1193
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.002949	375	68
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_sanity	40	40.203496	31680	2234
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.176082	19281	3437
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim2	40	40.183476	4208	1699
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.544646	90	40	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	40	40.044172	12220	2426
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.025225	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.384581	6857	1388
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_trans	40	40.113306	26747	3718
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.077332	23913	3665
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40	40.072782	26802	1229
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_app_or	40	10.710549	6536	1236	3.0.8.12.4	synth with cache (only 1: intros l H; only 1: compute; only 1: induction l as [| a tail]; only 1: firstorder  discriminate; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zeven_mod	40	40.055641	19125	2013
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same	40	0.290890	67	34	0.1.2.2	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_or_app	40	1.734539	770	211	9.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Factorial.fact_le	40	35.588279	16872	3101	8.7.5.0.3.2.0.0.0.8	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.089509	32734	3224
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_n_O	40	0.022813	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40	40.073249	21966	3441
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_eq	40	40.087477	27324	4412
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.even_spec	40	40.290203	23513	4896
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_R	40	15.608022	14503	1083	12.6.31.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_1	40	40.259810	7985	1648
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.189487	45	28	0.0.0.1	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_inj	40	40.184777	42334	4758
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_app_iff	40	11.478298	4779	1462	11.0.1.0.0.0.0.6.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: split; only 1: auto; only 1: intro H; only 1: elim H; only 1: intro H0; only 1: elim H0; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_reg_l	40	40.206128	22073	3111
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred	40	40.112987	31157	4534
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40	40.013049	2325	1032
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.056800	16102	4345
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf	40	40.190619	23910	4396
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40	40.610668	277079	9242
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_1	40	40.066865	20002	1575
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	40	40.170189	29898	3055
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.063189	15062	3060
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	40	40.179678	19583	3534
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	40	40.153955	17900	3243
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_one	40	40.191368	27824	3680
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.342005	18707	6084
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	4.345064	5349	542	2.9.26	synth with cache (only 1: intros y1 y2 Hy1 Hy2; only 1: apply L.find_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.lt_div2	40	40.137638	26653	7271
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.154048	17619	2124
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_dec	40	5.913897	2496	554	2.0.0.1.0.0.0.2.1.2.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: left; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	40	40.067915	15266	5060
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40	40.466741	8577	763
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	40	1.630663	468	235	0.3.1.2	synth with cache (only 1: intros; only 1: unfold meq; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40	40.049293	12058	1655
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.eqb_eq	40	40.089027	26339	7427
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.117904	21119	2176
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40	40.002825	353	54
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40	40.157894	24692	6045
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.lt_dec	40	7.553435	3299	598	7.7.4.2.5	synth with cache (only 1: destruct m; only 1: auto with arith; only 1: destruct (le_gt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.068698	16913	5615
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_dec	40	0.008060	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.ge_dec	40	0.201746	52	20	0.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: apply le_dec; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	40	40.092822	31403	3554
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40	40.314279	12686	1700
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_trans	40	40.131003	31496	4094
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_1	40	40.116660	43119	4349
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40	40.091377	30751	1035
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.063594	16430	5205
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_2	40	40.070629	21365	2327
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_1	40	0.006241	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.013392	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	2.051206	5281	283	0.4.42	synth with cache (only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_Sn_m	40	40.067746	19563	3828
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.pred_of_minus	40	0.051405	1	1	0	synth with cache (only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_O_le	40	25.712209	8463	2458	13.0.1.0.0.0.1.0.0.1.5	synth with cache (only 1: revert m; only 1: induction n; only 1: intro m; only 1: Nat.nzsimpl; only 1: right; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40	40.042527	10596	2924
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_le	40	40.098827	31304	4585
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.odd_spec	40	40.308807	27969	4615
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.double_spec	40	0.007982	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.R_sanity	40	40.283349	16423	3044
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.succ_double_spec	40	0.753599	91	38	0.1.0.0.0.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_double_spec	40	0.008938	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	40.369662	103374	5975
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_N_succ	40	40.136768	25476	3688
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_1_r	40	0.008233	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_1_l	40	0.007953	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_split	40	40.259493	53530	3637
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_reg_l	40	40.122070	48758	3122
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_min	40	40.427073	19121	3494
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_le_compat	40	40.041914	9705	2360
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rect1	40	40.333030	92683	4633
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rect	40	0.005804	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rec1	40	0.005146	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_rec	40	0.004948	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.004851	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.gt_wf_rect	40	0.008396	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.gt_wf_rec	40	0.007153	1	1	0	synth with cache (only 1: exact lt_wf_rect).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40	40.011264	1968	860
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_elt	40	2.895055	3899	365	4.1.6.1.18.11	synth with cache (only 1: intros l H; only 1: elim H; only 1: intro; only 1: simpl; only 1: auto using in_app_or, in_or_app; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40	40.184322	75124	1911
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.156987	23050	4020
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40	40.078925	21438	3921
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.107323	13735	4281
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40	40.336295	37465	5638
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40	40.133267	47223	2912
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_div2	40	40.148569	34720	5261
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.le_unique	40	40.216136	57987	5734
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40	40.502715	6644	1431
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_diag_reverse	40	22.457042	15806	1799	0.0.2.7.36.3	synth with cache (only 1: symmetry; only 1: Nat.induct ltac:(n); only 1: apply Nat.sub_0_r; only 1: simpl; only 1: intros n IH; only 1: now rewrite IH).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	40	40.075431	17406	5123
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40	40.140954	14804	1151
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ltb_lt	40	40.151713	16630	5763
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40	40.081311	24266	2625
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	2.673992	289	47	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40	40.001920	226	24
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40	40.179806	37783	6156
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_nodup	40	40.165104	25724	5099
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_le	40	40.238567	30450	3188
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_lt	40	0.030748	18	3	5	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_gt	40	0.011364	3	1	2	synth with cache (only 1: apply Nat.lt_decidable).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.102588	33705	5190
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40	40.339093	43095	1488
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans	40	40.173579	28550	3228
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_2	40	40.068617	21547	4171
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40	40.053743	11262	5666
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_plus	40	40.040276	9502	2096
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	4.258906	5150	482	4.6.22	synth with cache (only 1: unfold lt; only 1: intros A P; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.148557	61490	4228
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.cardinal_1	40	0.021062	7	2	5.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.095081	36441	3967
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_ok	40	40.059708	20358	1751
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_1_INR	40	40.112199	7301	1860
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZN	40	0.449645	208	35	0.1.0.9	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.depair_sanity	40	40.256048	17686	1196
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.132853	51922	2052
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40	40.268386	109852	5907
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.232383	180	43	0.1.7.0	synth with cache (only 1: unfold singleton; only 1: intros; only 1: case (M.singleton x); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_spec	40	40.139968	26460	2732
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.227545	43779	2771
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.026990	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.bet_eq	40	27.212551	35541	3360	33.2.6.4	synth with cache (only 1: intros a; only 1: intros; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_r	40	0.827568	241	58	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.009916	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.435150	36864	5174
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_le_compat	40	40.161486	19043	2478
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_le	40	1.581425	447	113	3.0.5.2	synth with cache (only 1: intros n m; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_double_rect	40	40.165137	17864	2799
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.036936	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.038417	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_elt_inv	40	40.246754	35995	3864
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_inv	40	0.006579	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.027766	6171	440
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40	40.061978	15244	7259
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.id	40	3.660138	1574	458	0.1.0.0.0.1.4.0.1.3	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj	40	40.085567	23195	6668
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.189155	37	21	2.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.086728	24727	3562
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_replace_eq	40	40.125288	18808	3958
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40	40.065290	6158	768
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40	40.466988	25300	3414
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.odd_div2	40	40.206705	34681	4545
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.569412	11021	2018
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.146154	18075	4583
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40	40.053837	11859	2242
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_r	40	16.336101	6899	1004	1.8.23	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.leb_le	40	40.060875	16183	4504
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.plus_minus	40	40.181571	27880	3581
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.001422	39	22
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40	40.069868	20225	1770
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj	40	14.897047	8216	1617	1.21.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: f_equal; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.029285	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.143285	22410	5865
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_0	40	0.271994	63	8	0.11	synth with cache (only 1: Nat.bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pos	40	0.007453	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.007746	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus	40	1.575376	1199	110	32	synth with cache (only 1: now apply Nat.add_sub_eq_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.186947	4931	2121
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.dec_ge	40	40.208425	47452	2812
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_eq	40	0.011972	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_le	40	0.009253	1	1	0	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_gt	40	0.012891	3	1	2	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_ge	40	0.013248	2	1	1	synth with cache (only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_lt	40	0.010296	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	40	40.065919	17940	4689
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.029865	5	4	1.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans_S	40	40.103056	20403	2286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40	8.094956	3775	728	0.1.0.1.4.2.0.2.0.12	synth with cache (only 1: intros Hn Hm; only 1: assert (Hij : 0 <= i / j) by (apply Z_div_pos; auto with zarith); only 1: case (Z_mod_lt i j); only 1: auto with zarith; only 1: rewrite (Z_div_mod_eq i j); only 1: intros; only 1: apply Zdiv_lt_upper_bound; only 1: Z.order'; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_3	40	40.070311	21742	4379
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40	40.043610	9776	3235
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_0_eq	40	1.751106	1347	168	5.0.28	synth with cache (only 1: Nat.cases ltac:(n); only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.006177	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.007236	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.le_plus_minus_r	40	4.972490	1553	454	0.0.0.0.1.0.6.0.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_add	40	5.353594	2314	625	0.0.0.0.1.7.0.3.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intro H; only 1: intros; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.060671	17035	4582
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.214496	36	18	3.1.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_1	40	1.209669	398	66	1.0.1.9	synth with cache (only 1: intros a n Hn; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40	40.272168	30689	2298
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_mul	40	2.923327	885	256	0.0.0.0.0.3.0.3.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	4.054917	1015	296	0.0.2.2.6.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.145917	6	5	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.fold_1	40	40.157754	65313	4569
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.048412	12960	3204
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_r	40	40.222284	35544	4230
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IPR	40	40.071612	21885	3517
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.081130	24826	3363
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	40	40.376787	46226	4601
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.084174	27604	2935
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.086847	22	13	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.022560	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.192003	18761	4817
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_le_l	40	40.241432	12640	1450
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_Sk_l	40	40.237247	35693	3884
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40	40.313874	12098	2074
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40	40.016944	4175	661
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_dec	40	40.218194	21520	2205
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40	40.422359	192264	12032
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	40	40.133576	18326	5395
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40	40.059548	9594	1484
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_order_replace_neq	40	40.166988	13425	4465
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	40.130437	40220	4210
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_even	40	40.154126	58312	5157
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.377265	41605	6132
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.le_plus_minus	40	26.639652	9263	3299	0.0.0.0.1.0.6.0.0.4	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_restr	40	12.383917	8802	1012	3.2.21.3	synth with cache (only 1: intros x y; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.071816	18035	4468
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_m	40	40.496976	8617	1818
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat	40	40.144004	31049	3370
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.173465	21929	5607
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_lt_iff	40	0.025492	5	5	0.0.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_le_iff	40	0.013224	2	2	0.0	synth with cache (only 1: unfold leb, le; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.001392	43	25
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40	40.091516	32075	2846
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_le_S	40	5.435497	5891	653	1.1.5.16.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40	40.166895	32972	6614
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim1	40	40.047586	3867	1629
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_lt	40	40.151528	11730	4917
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.068292	20203	4422
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.find_1	40	40.104468	37260	4327
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40	40.563830	12162	2239
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40	40.064302	13730	3661
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40	40.076880	10629	3122
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40	40.416678	25857	3165
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_succ	40	40.381470	27691	3919
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_POS_correct	40	40.056033	16876	1774
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.equal_1	40	40.079935	29016	2354
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat	40	40.241172	75346	5146
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IZR_INZ	40	40.176493	23637	4043
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40	40.100089	31178	4857
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_eq	40	40.193129	18727	4298
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div_mod	40	40.371428	44875	4330
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.050579	14556	3095
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.027119	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.086815	29	13	0.1.0.3	synth with cache (only 1: intros; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.121843	13002	5657
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_le_r	40	40.111975	5097	1717
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40	40.026658	7660	1114
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40	40.167725	40154	8383
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_in_or_default	40	40.149239	29359	3647
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.018961	4	3	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40	40.323617	135636	10182
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	40	40.067932	18938	5303
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	40.091592	30494	3215
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.replace_id	40	40.098580	13740	4841
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	40.152920	62702	1999
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_odd	40	40.142773	52353	4929
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40	40.233505	89417	4799
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.378344	39352	3006
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	40	40.213427	12351	3686
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40	40.069598	18114	2897
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.198037	30541	2699
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_le_compat	40	0.008360	2	1	1	synth with cache (only 1: apply Nat.add_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_antisym	40	40.205658	31732	7825
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40	40.086607	29543	2763
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40	40.001506	94	20
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_S_le	40	40.197293	24819	3325
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_intro	40	0.132630	84	26	0.3.5	synth with cache (only 1: intro z; only 1: intros n m H1 H2; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.158437	25510	6621
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_lt	40	0.642361	516	88	7.3.0.3	synth with cache (only 1: intros L R n; only 1: intro H; only 1: firstorder; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim2	40	40.201245	4675	1772
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_gt	40	40.161141	15486	5634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	40.073310	21580	4909
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_le_S	40	0.041544	7	5	0.0.1.0.1	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order_pos; only 1: intros n IH; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_Sm_le	40	0.005493	1	1	0	synth with cache (only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_n_Sm	40	0.019671	5	3	0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_not_lt	40	0.250285	28	12	0.6	synth with cache (only 1: intros; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_not_le	40	0.150437	23	10	0.6	synth with cache (only 1: intro H2; only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.neq_0_lt	40	0.018222	2	2	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_0_neq	40	0.023124	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_S	40	0.005576	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_S_n	40	0.015133	10	2	2	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40	40.066553	7704	754
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.find_2	40	40.173180	71720	4973
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0.013802	6	2	4.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.S_pred	40	0.439793	189	64	0.0.2.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros a Ha; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.011627	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.S_pred_pos	40	0.558580	318	90	1.0.0.0.0.6	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros n H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.054983	2871	142	5.40	synth with cache (only 1: destruct m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.018832	6	2	4.0	synth with cache (only 1: intros m; only 1: constructor 1).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_odd_div2	40	16.708514	8269	2117	19.0.0.0.1.0.0.0.0.0.0.3.5	synth with cache (only 1: split; only 1: split; only 1: rewrite even_equiv; only 1: intros (p, ->); only 1: rewrite Nat.div2_succ_double; only 1: apply Nat.div2_double; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: trivial; only 1: apply odd_div2 in Od; only 1: rewrite <- Od; only 1: intro Od'; only 1: elim (n_Sn _ Od'); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40	40.132709	5817	2748
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_equiv	40	40.185027	45112	7126
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40	40.085520	27278	4896
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_sub	40	40.095246	31384	4549
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod'_correct	40	40.054581	19110	1856
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.equal_2	40	40.093768	36492	3800
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_S_lt_compat_l	40	40.116419	20397	3142
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	40	40.051159	13516	2052
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.043563	5437	1570
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eq_dec	40	40.289863	59130	4463
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40	40.083667	25488	3385
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_1	40	40.173712	14740	3416
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.025918	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_l	40	40.191021	16571	5591
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.cast	40	4.792260	2878	634	10.4.4	synth with cache (only 1: intros x y; only 1: intro; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	3.475419	866	426	1.0.0.0.0.0.1.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.mem x s); only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_l	40	40.051652	10924	1779
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.018616	4508	648
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.522871	33042	5780
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.180032	29428	6866
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_refl	40	0.273217	557	44	2.12.13	synth with cache (only 1: induction n; only 1: now try Nat.order'; only 1: now rewrite <- ?Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40	40.312934	139465	6148
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	40	40.130870	15093	5547
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.replace_replace_eq	40	40.191179	24826	5034
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40	40.084903	28471	4957
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	6.279410	1132	449	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	40.203113	88099	1785
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40	40.158194	34406	6444
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.not_le_minus_0	40	40.152481	36376	4746
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	40.065717	15010	4299
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40	40.166498	60899	4616
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat	40	40.128139	16860	2035
coq-tactician-stdlib.8.12.dev	Coq.Arith.Le.le_n_0_eq	40	0.049147	16	4	0.1	synth with cache (only 1: inversion 1; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_l	40	40.249202	56269	5444
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.095500	31131	3805
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40	40.001634	145	18
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_p_Sq	40	40.207112	27225	3344
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_S	40	0.013840	2	2	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_Sp_q	40	0.013101	2	2	0.0	synth with cache (only 1: intros * []; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_iff	40	40.150190	16497	3842
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_l	40	4.339523	2695	396	5.3.0.8.0.16	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl; only 1: intros m IH; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_le	40	40.164062	13020	5862
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	40	40.078955	23232	4942
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40	40.145079	10966	1830
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred	40	40.087260	32155	3812
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.331112	169	56	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.fold_1	40	40.175159	70465	4666
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_S	40	40.221005	34589	3545
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_r	40	5.327872	2699	482	7.1.2.0.1.2.1.1.19	synth with cache (only 1: revert m; only 1: induction n; only 1: intro; only 1: Nat.nzsimpl; only 1: left; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.088767	27344	3845
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_equiv	40	40.190155	24696	3932
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.056477	19342	2297
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_or_eq	40	3.435039	1608	401	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40	40.287069	75074	2469
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_extended	40	40.077121	25825	3447
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_1	40	40.070746	22419	3621
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.088903	34074	3792
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_IZR	40	40.034676	10376	1652
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_spec	40	40.065155	18467	3562
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	40	40.109761	19744	3273
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_no_neutral	40	40.257147	46891	4397
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_nodup	40	18.739042	7878	2127	1.0.0.0.14.0.0.0.1	synth with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: intuition; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_or_odd	40	11.969477	27131	1010	3.3.64.19	synth with cache (only 1: Nat.induct n; only 1: intuition; only 1: intro p; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.291840	64627	2731
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_odd_dec	40	0.022093	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.not_even_and_odd	40	0.750369	435	104	4.0.2.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40	40.020562	2374	675
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	2.333811	550	181	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_In	40	40.191391	39890	4394
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40	40.321966	73372	4477
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_is_eq	40	40.165660	28819	4717
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_eq_nat	40	0.031958	6	6	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	0.209272	120	24	8.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_eq	40	0.336817	24	13	2	synth with cache (only 1: apply eq_nat_is_eq).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.133303	51309	5875
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	40	40.069648	18492	4947
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.replace_replace_neq	40	40.206721	10436	2199
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.069039	20477	3759
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_compat_r	40	40.045841	14509	1995
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.092427	33680	2785
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.588197	36023	3844
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	8.991022	364	177	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_singleton	40	40.263353	28538	2704
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40	40.315930	13982	1382
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_r	40	40.194566	32020	6540
coq-tactician-stdlib.8.12.dev	Coq.Arith.Le.le_elim_rel	40	40.174851	20460	2764
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	40.145594	54089	2428
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40	40.001475	65	27
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_in_int	40	40.272748	58151	5434
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_between	40	0.042011	13	7	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40	40.080540	23650	4933
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.208337	10676	3943
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40	40.733136	10374	1765
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_1	40	40.045680	8216	1038
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_plus	40	40.119240	24439	4063
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_trans	40	40.189712	41945	4098
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40	40.064803	18020	2613
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_compare	40	40.473915	40395	4211
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.nat_total_order	40	40.165846	15603	1928
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.264505	19068	3013
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.div_Zdiv	40	40.098766	36325	3955
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_2	40	40.083824	25838	6665
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.140540	34095	3669
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	4.630332	2242	466	4.5.3.1.3	synth with cache (only 1: intros x y z; only 1: intuition auto; MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: rewrite <- H0; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_IZR	40	40.108309	20602	2337
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	40.058101	15631	3078
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.098398	15011	5171
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.167046	11669	4038
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.fold_1	40	40.203001	25599	4096
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0.010943	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_split	40	40.179406	45395	2399
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_eq	40	20.080298	10895	1930	2.0.0.0.0.0.0.6.6.0.11.1	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: intros H; only 1: intros; only 1: reflexivity || destruct H; only 1: reflexivity; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0.014276	2	1	1	synth with cache (only 1: apply Nat.compare_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.010471	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_split	40	0.959936	73	16	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth	40	40.239106	35515	3615
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	40	40.083734	26291	3609
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.recursion_0	40	0.006587	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_elim	40	40.354066	36614	5304
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40	40.123424	47235	5152
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	10.527352	2354	429	6.1.0.2.0.1.9	synth with cache (only 1: intros x y l1 l2 Hin; only 1: intro EQ; only 1: inversion_clear 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	40	40.063860	17607	4006
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.147104	3708	1240
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.const_nth	40	40.123362	23200	2891
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40	40.058208	11545	2792
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40	40.049819	14581	2550
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40	40.055794	15040	1381
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_id	40	2.299752	2244	302	4.2.6.0.6.7	synth with cache (only 1: Bool.destr_bool; only 1: induction v; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_map	40	1.379414	836	216	1.0.0.2.0.12	synth with cache (only 1: intros n k1; only 1: induction v; only 1: auto; only 1: simpl; only 1: rewrite IHv; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40	40.612996	66318	4035
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.013147	1901	816
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.eq_nat_decide	40	12.513624	4775	1202	5.0.0.0.0.1.0.0.3.0.1.1.1	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40	40.312356	12760	2446
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.max_l	40	40.096631	26598	5671
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.max_r	40	0.037617	7	6	1.0.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.089124	15616	3467
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_refl	40	1.840995	2338	119	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40	40.094487	31519	3079
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.002068	56	25
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40	40.176486	4637	1369
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_true	40	2.206402	652	210	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_in_int	40	40.210986	51719	4970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.049055	9814	2119
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	24.192006	31931	2380	2.4.22.24	synth with cache (only 1: intros a b c0; only 1: intros l H; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_2	40	40.064209	19971	4077
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_odd_double	40	40.216729	27032	5822
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40	40.559121	10067	2810
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.lt_plus_trans	40	40.298475	12138	788
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_false	40	6.034372	4542	597	0.0.3.2.5.0.1.16	synth with cache (only 1: Nat.double_induct n m; only 1: intros a Ha; only 1: intro H1; only 1: subst; only 1: discriminate; only 1: now try Nat.order'; only 1: intros a b Ha Hb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40	40.175738	8146	993
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.090541	28818	4550
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_O	40	3.560220	2192	410	8.2.0.0.0.0.6	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: intros n IH; only 1: intro H; only 1: inversion H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40	40.043279	10377	2490
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_eq	40	4.105074	1965	378	1.0.3.0.0.0.1.0.7	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: contradiction || auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.mod_Zmod	40	40.038095	12702	1370
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_1	40	40.056041	10871	1638
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.009517	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	0.010912	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0.008673	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_S_le_reg_l	40	40.214751	32675	5372
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pow_IZR	40	40.050297	12754	2257
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40	40.079385	24163	4142
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.quotrem_eq	40	40.099182	29511	6785
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.168454	11266	4059
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	3.969377	1333	516	7.1.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: unfold flip in *; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	22.940478	14356	1530	0.0.35	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_equiv	40	40.202675	16725	3821
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_even_plus	40	40.193855	16335	2792
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_l	40	0.058487	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_r	40	0.058953	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_even_plus	40	0.078822	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_overflow	40	40.096210	26056	4392
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_aux	40	0.345877	13	4	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	40	40.105622	34377	4969
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.016652	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.005935	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_even_inv_r	40	0.074964	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.one_succ	40	0.005830	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.two_succ	40	0.004848	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.add_0_l	40	0.006646	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.023376	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_even_inv_l	40	0.058727	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.063958	32	14	0.0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_odd_inv_r	40	0.061590	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_odd_inv_l	40	0.059179	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_even_inv_l	40	0.060579	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_even_inv_r	40	0.059624	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.087560	28861	4902
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_odd_inv_l	40	0.077626	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_odd_inv_r	40	0.058536	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.079868	23480	5079
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40	40.084282	8018	1774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	0.044370	12	6	1.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.119915	7841	774
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	40.057700	9126	3923
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.026077	6005	1168
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.057320	19579	1928
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_aux	40	4.950435	1758	334	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_l	40	0.041399	9	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_r	40	0.059340	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_inv_r	40	0.058645	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_inv_l	40	0.058520	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult	40	0.109649	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult_inv_l	40	0.041786	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult_inv_r	40	0.038423	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_ext_in	40	40.179510	44103	5266
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.map_ext	40	0.043264	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction v; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40	40.410126	18908	3289
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40	40.028222	7871	931
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_elt_inv	40	40.096026	10140	2188
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_succ_r	40	40.138486	12629	4010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40	40.094938	11969	4316
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40	40.189565	16561	2608
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_exists	40	40.277298	27515	2927
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_spec	40	3.758930	430	83	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	40	18.107653	15941	3340	2.0.7.4.0.0.5.10	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: destruct m; only 1: now destruct n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.004645	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40	40.094363	13959	4714
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_1	40	40.043943	11116	2917
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.086429	27963	4590
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.even_2n	40	40.214203	65362	4808
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.odd_S2n	40	0.020715	11	4	0.0.1	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_double	40	0.072151	21	9	1	synth with cache (only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40	40.179072	6092	805
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.div2_double_plus_one	40	0.590981	207	64	0.8.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40	40.117013	21235	2253
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	4.357755	1257	350	0.0.3.0.0.1.3	synth with cache (only 1: intros a b c0; only 1: unfold compat_bool, compat_P, Proper, respectful, impl; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.432169	19210	3934
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.116344	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.673182	53	29	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.046194	6	5	0.0.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_one	40	40.200320	45790	3350
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40	40.082696	25175	3893
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.109628	38221	4501
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.075723	10081	2790
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40	40.066040	23584	2264
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40	40.119222	21871	3539
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.odd_even_lem	40	40.240740	41348	2319
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.succ_IZR	40	40.051393	13307	3202
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	4.708349	1531	195	1.2.18.0	synth with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.quot_rem'	40	40.092149	31062	1999
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.quot_rem	40	0.191669	15	15	0.0.1.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.129341	22728	6231
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_ok	40	40.069975	20446	3330
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_spec	40	16.859202	5088	1550	0.0.0.2.8.2	synth with cache (only 1: simpl; only 1: unfold succ, add; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_r	40	2.454525	706	304	0.3.1.0.1.2.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_add	40	2.363207	298	147	0.0.0.3.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40	40.132599	44684	5095
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_iff_conv	40	40.334924	12886	3827
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.opp_IZR	40	8.487574	6916	651	3.1.1.0.2.12.9.4	synth with cache (only 1: intro; only 1: unfold IZR, IPR; only 1: destruct n; only 1: auto with real; only 1: rewrite <- (Z.opp_involutive (Z.pos p)); only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_indep	40	40.097513	26595	4598
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_nth1	40	0.976288	187	71	0.0.5.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.070728	23226	3942
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40	40.066289	17333	5425
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_add	40	3.698037	279	96	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_mul	40	0.047010	9	8	1	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40	40.103633	24163	3253
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.062520	16955	3509
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_mul	40	1.704824	159	88	2.7	synth with cache (only 1: rewrite add_comm; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_double	40	0.018068	4	3	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_succ_double	40	0.008792	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40	40.063152	18082	2292
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_l	40	40.028826	6602	1461
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	40.090232	30680	4175
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	8.971166	6181	1044	0.0.0.0.0.0.0.6.7.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: simpl in *; only 1: now elim H; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_map	40	40.187987	31616	5210
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40	40.575353	10145	2285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40	40.125990	21743	4373
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_nth2	40	10.750111	3275	1089	0.0.8.0.0.3.0.1.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: intros l' d [| n]; only 1: simpl; only 1: now destruct l; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_nth2_plus	40	0.290870	32	20	1.1.0.1.0.0	synth with cache (only 1: induction l; only 1: intros l' d [| n]; only 1: auto; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_middle	40	1.054677	349	123	3.1.0.0.0.1.1.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intros [| ] ?; only 1: intros; only 1: auto; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40	40.189668	10584	3303
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_inv	40	40.101504	15897	2755
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40	40.083080	7064	2172
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_or_exists	40	40.153036	38919	3547
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40	40.174185	19003	2626
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.092858	23258	9007
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40	40.069421	14943	4280
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_2	40	40.095349	31309	4811
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40	40.158648	26365	1740
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40	40.053777	11144	2658
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40	40.267008	10777	956
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_min	40	40.442227	22898	4215
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.730936	260	85	0.5.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intros a n H H'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_tail_plus	40	40.169297	11272	3418
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.071706	13098	2355
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_1	40	40.097672	35445	4715
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40	40.104322	17487	3503
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40	40.111173	44983	1099
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.057380	10997	2753
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_acc_aux	40	40.126736	13259	4033
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40	40.054446	9356	2492
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_bound_pos	40	40.075783	20482	4940
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.026320	5506	2305
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	4.094804	698	217	0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.268013	9749	2720
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_correct	40	39.370595	23017	4557	17.1.0.0.0.1.3.0.0.0.0.0.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros m H; only 1: destruct m; only 1: now split; only 1: simpl; only 1: rewrite IHn; only 1: trivial; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete	40	0.011597	1	1	0	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_correct_conv	40	0.036608	3	2	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.027507	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_IZR	40	40.056940	16000	3133
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40	40.072110	28777	2513
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	40	40.102532	32767	3720
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40	40.125668	13893	2694
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.053982	12395	2483
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_inj	40	40.188529	29966	4004
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40	23.209617	5718	2421	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0); only 1: pos_or_neg b; only 1: rewrite abs_eq in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: rewrite <- opp_0, eq_opp_r; only 1: rewrite abs_neq' in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: now apply mod_always_pos; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_compat_r	40	40.058000	14162	3824
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	40.057521	16735	1068
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.058820	15927	2367
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.succ_plus_discr	40	18.774490	11109	1672	4.10.2.13.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: red; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40	40.055185	14234	1462
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.071659	8	7	0.1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.nth_map2	40	40.184835	27889	2887
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40	40.065933	16134	3180
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.256402	9711	3581
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	0.582101	323	19	25	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.020940	3	2	0.1	synth with cache (only 1: intros a; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.844244	632	349	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_split	40	40.218112	24668	3772
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40	40.075434	11855	2500
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_cons_inv	40	40.357116	13573	2263
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40	40.091038	8210	1932
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_not_exists	40	40.232442	51651	4603
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40	40.210023	6678	2490
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.108909	28792	9395
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_1	40	40.055634	13634	2137
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40	40.146271	8931	1041
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40	40.072911	15533	4181
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_max	40	40.454502	29776	5328
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0.010674	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.019582	2	2	0.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.182205	14745	1730
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40	40.064294	15815	5010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	4.001423	767	400	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_2	40	40.061570	18284	5064
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	1.671157	540	192	0.2.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.026695	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.118692	11906	3204
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	3.358294	1760	441	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id	40	0.020353	5	4	0.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.004856	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0.007890	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.008052	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40	40.109228	23150	4438
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.097689	38363	1504
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_tail_mult	40	40.036138	9714	2439
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_l'	40	40.118009	41296	3041
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	5.164633	1435	638	0.0.0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40	40.068720	13244	2590
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	3.975834	757	379	0.7.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40	40.076249	17558	7628
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.306114	81	44	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	40	40.071228	18983	5578
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_r'	40	4.257574	2443	580	0.0.0.0.0.0.0.2.0.1.0.0.0.0.3.3.3.0.3	synth with cache (only 1: destruct b as [| b| b]; only 1: reflexivity; only 1: unfold rem; only 1: simpl; only 1: destruct a as [| a| a]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: induction a; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_compare	40	40.183958	10728	4508
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	4.621853	1995	459	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Z_R_minus	40	40.076396	15391	3202
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.028452	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40	40.303518	133706	9608
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40	40.204537	34023	4076
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_l	40	4.205667	1342	741	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40	40.109649	14914	2804
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40	40.078746	18953	2903
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_inj	40	40.100500	30799	4821
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40	40.099223	27415	5111
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_r	40	40.041192	10868	1955
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40	40.041831	8781	1227
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_2	40	40.143042	50820	4801
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.294506	14	7	3.1.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.079920	8	6	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.rem_opp_r	40	3.867542	1854	616	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.3	synth with cache (only 1: intuition; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40	40.098723	6928	556
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40	40.042029	11044	2511
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40	40.073356	15821	8151
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40	40.298446	62502	1856
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.137498	29616	2097
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.387956	171	59	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.033060	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.050619	6220	2147
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	40.657642	30548	2940
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40	40.062881	9100	3818
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_ext	40	40.224041	20168	2691
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40	40.064676	11553	3261
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40	40.370345	8137	2600
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.nth_le	40	40.185105	39590	4673
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40	40.190299	6450	2414
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	40	40.084388	22415	5378
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.115808	38819	5358
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40	40.109870	13205	1559
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	12.400586	2961	821	1.2.2.8.3	synth with cache (only 1: induction n; only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	40.195371	15449	2917
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.event_O	40	9.822292	28228	842	1.12.34.16.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40	40.100141	11068	3894
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.019800	7	3	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0.014102	4	2	2.0	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.124670	13208	3257
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.074404	24550	3625
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40	40.018717	4220	1816
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40	40.065253	16737	2578
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.063925	19080	4512
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add	40	2.203889	664	223	0.0.0.0.1.1.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.091744	25824	5008
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40	40.042967	9458	3488
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.036183	6773	3402
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.071578	15894	5939
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	3.935972	2466	655	0.5.5.3.2	synth with cache (only 1: intros; only 1: apply neq_0_lt_0; only 1: apply pow_pos_nonneg; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_IZR	40	40.082310	27966	2179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	40.112173	25369	5664
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40	40.140925	28200	1078
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.170095	64974	8608
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_min	40	40.075823	19064	7173
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40	40.105365	17839	2818
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.073439	12435	1963
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_lt	40	40.054530	15003	2312
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.116849	31696	4892
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.563440	73	42	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.040670	8433	2255
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.090979	29652	2617
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.073447	5936	1683
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos	40	40.094157	28304	5015
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40	40.081812	6970	1172
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40	40.046735	10141	2927
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40	40.090889	31322	3912
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.325218	118141	1802
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_O	40	0.017696	7	2	5.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40	40.101351	21254	3748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40	40.039906	6329	3502
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.076921	7437	3931
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_In	40	40.227542	28653	4310
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40	40.094726	9340	3579
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40	40.039684	8329	2560
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_le_mono	40	13.364674	4556	1341	0.0.0.0.4.4.0.5.0	synth with cache (only 1: unfold min, le; only 1: destruct n, m; only 1: auto; only 1: apply iff_refl; only 1: apply iff_refl; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.147363	338	93	0.0.0.0.0.0.0.0.5	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40	40.230447	7523	2137
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.leb_le	40	40.104481	25785	7315
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_le_mono	40	0.275002	54	31	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_0_r	40	0.478442	315	47	5.15	synth with cache (only 1: inversion 1; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_0_r	40	0.012838	3	2	0.1	synth with cache (only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.106021	36079	4975
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	40.290872	28694	2374
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.047173	11603	3484
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	21.278231	6827	1015	1.0.1.1.2.25	synth with cache (only 1: induction 1; only 1: intros H; only 1: eauto; only 1: intros; only 1: constructor; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_1	40	40.200945	6086	1895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40	40.078133	18985	1925
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.074221	5681	589
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.054582	11119	3203
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.074273	19471	5537
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40	40.134262	52987	1191
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_1	40	40.122231	48046	4219
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.458405	21043	2610
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	32.653172	77175	11613	5.13.8.1.14.0	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: right; only 1: trivial; only 1: left; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_spec	40	40.080294	18611	7535
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40	40.060048	14980	3838
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.181760	16826	5131
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO	40	0.010849	4	2	0.2	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40	40.063986	17813	4409
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_IZR	40	40.086872	26407	5182
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40	40.073138	18439	4759
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40	40.141652	42268	1477
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_max	40	40.093355	26589	7409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40	40.100554	11792	1934
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40	40.061641	10697	3354
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40	40.064779	16411	3637
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.040882	13195	1481
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_2	40	40.113265	38352	4674
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40	40.116120	39749	2878
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.058606	10900	4286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40	40.118634	13798	4840
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	10.497273	10945	863	0.1.0.1.2.1.0.7.0.5.24.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: eauto; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	40.083932	27555	3776
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_idem	40	40.171373	25670	3595
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	1.865380	309	146	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	1.150747	844	151	9.1.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_app	40	1.935954	825	249	0.2.0.2.0.3.1.0	synth with cache (only 1: intros; only 1: generalize dependent n; only 1: induction v; only 1: reflexivity; only 1: intro Hneq; only 1: simpl; only 1: rewrite IHv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.176334	20624	853
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.take_prf_irr	40	1.511013	569	200	0.0.0.1.0.3.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: now subst; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.012072	6	2	0.4	synth with cache (only 1: intros m w le; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.append_comm_cons	40	0.015481	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40	40.105249	16133	1725
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.081613	23	10	2.1.1	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.087976	8211	3682
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth_error	40	40.250845	37785	4129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.126111	8200	2648
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40	40.130344	11987	2095
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.091971	21678	5914
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.012966	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_succ_r	40	40.160105	16426	1410
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40	40.307083	11415	2310
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	11.098131	11872	1071	1.41.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: inversion H; only 1: invrb).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_2	40	40.064083	15512	5246
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	9.712932	3667	1142	1.8.2.5	synth with cache (only 1: intros a Ha; only 1: apply sqrt_le_square; only 1: apply le_0_l; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40	40.644393	20322	2623
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40	40.052091	17649	1462
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_app	40	40.050329	6789	1586
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_2	40	40.041954	9636	3539
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40	40.088545	18327	1740
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.127554	8119	1441
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_neg_r	40	10.221307	5167	862	25	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.180015	22358	2983
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	40.108077	11401	1280
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40	40.049567	15223	1584
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_2	40	40.064345	17287	3321
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	2.953359	2241	315	0.0.0.0.0.0.0.20	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.521504	221	55	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_sub	40	40.499887	37472	4416
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.275041	112300	10370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.033214	6019	2824
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.185124	14605	6231
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40	40.061997	15325	4778
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR_R0	40	40.072923	21333	3475
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40	40.094847	23299	5740
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	20.786535	9983	4207	0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40	40.208978	24051	850
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_iter	40	40.193304	32305	5513
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40	40.116046	18821	3613
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40	40.058390	15055	3276
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40	40.076797	20446	3938
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.053666	15953	2208
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map2_1	40	40.281229	7102	934
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.splitat_append	40	33.755813	23947	3108	1.3.3.1.0.7.17	synth with cache (only 1: intros n1 le_mn1; only 1: induction v; only 1: now simpl; only 1: simpl; only 1: intuition; only 1: rewrite IHv; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.057226	15971	2355
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	4.084933	777	450	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40	40.085063	21009	6340
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.069828	17474	3496
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40	40.084053	6215	651
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	40.098408	17663	3792
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.041589	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40	40.140968	4539	919
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	4.404876	954	426	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.219343	16	7	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_None	40	40.065817	15075	3583
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.033534	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.032805	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.031479	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40	40.040897	7174	3379
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40	40.175927	23227	3100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40	40.252457	14295	2148
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40	40.050536	12152	3266
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	40.070718	15979	4394
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.056714	8539	1864
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40	40.484979	9887	2504
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	12.196819	2341	850	0.0.0.3.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	40.015474	3929	777
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40	40.066393	16337	2380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40	40.074428	23310	3531
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	3.235885	597	295	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.107617	14896	737
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.square_spec	40	40.186283	31652	3137
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40	40.085287	12405	3482
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40	40.101428	17740	2386
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40	40.054010	17624	1718
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_refl	40	40.177153	72695	3347
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40	40.187837	19354	1871
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pred	40	40.448353	25702	1545
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40	40.183538	68782	10573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40	40.035816	7023	2826
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.129295	17401	5422
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	40.118023	11117	2978
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.141758	16	9	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR	40	40.049871	10575	5753
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40	40.084041	19348	5352
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	40	40.091292	23320	6920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40	40.157490	52165	1724
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.id	40	40.258875	59840	5196
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40	40.114798	7680	2367
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40	40.105105	26877	4977
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_div_l	40	40.056589	13953	3987
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.append_splitat	40	40.161941	30018	4819
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map2_2	40	40.164977	29553	3213
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ggcd_gcd	40	40.095724	27154	5342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.097096	7621	2620
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40	40.082924	20643	6147
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.049326	12843	3949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	12.851024	4141	862	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40	40.130876	25651	4347
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	11.566147	4569	1958	0.0.0.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	4.791749	1802	587	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.534060	223	82	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.098215	38	16	1.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.040843	7	5	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.196065	28	20	1.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.019005	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40	40.095026	9129	3412
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.016441	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40	40.059773	13723	4122
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_Some	40	40.058274	11376	4464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.050931	11655	4081
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	40	2.996661	1468	648	3.0.2.0.0.2.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: reflexivity || destruct H; only 1: destruct m; only 1: simpl; only 1: split; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_succ	40	0.066344	26	20	2.2.0	synth with cache (only 1: revert m; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.893063	425	152	0.1.4.0.1.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.142384	25	14	1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.013384	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.013418	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.066720	8939	3543
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.938458	284	116	0.0.0.2.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.155457	24	14	0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.max_l	40	1.583233	670	360	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.246151	65	31	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.254456	44	28	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map	40	40.188752	8255	1575
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.max_r	40	1.470960	549	320	0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	2.030793	346	65	0.0.0.0.0.0.0.9	synth with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.191082	20924	3050
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40	40.061241	17082	3857
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_l	40	3.501815	1602	744	0.0.0.0.0.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.073580	18380	3016
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.033799	6106	1982
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_r	40	4.352251	2310	918	0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.831620	5443	1706
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	40	0.013872	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.011659	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.070161	26	8	2.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.011308	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40	40.061607	13030	1343
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	40.056090	13547	1882
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	40.055829	16780	2557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40	40.053711	12482	1592
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40	40.125328	12334	2623
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_log2	40	40.181243	29074	3270
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40	40.267767	6619	811
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.070595	19745	2409
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40	40.014056	3501	1247
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.089253	30731	4627
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40	40.106545	22676	4452
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_compare	40	39.486649	24497	5432	3.0.0.0.2.0.0.0.0.14.0.0.0.0.0.0.0.0.1.5.0	synth with cache (only 1: intros Hn Hm; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: simpl; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: simpl; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: now destruct Hn || now destruct Hm || clear; only 1: symmetry; only 1: simpl; only 1: apply Pos2Nat.inj_compare; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: rewrite <- ?Pos.compare_antisym, ?Z.pos_sub_spec; only 1: now destruct Hn || now destruct Hm || clear).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.022601	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.018431	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.148108	50828	11702
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	5.103652	500	98	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_diag	40	40.162545	29931	5215
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	40.055050	12356	3070
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_0_IZR	40	40.042669	9022	3784
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.088339	19166	5755
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	12.162024	1556	257	0.0.3.1.0.1.2.2.8	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.112414	7	6	0.1.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: intuition; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40	40.177281	3730	686
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.id_max	40	40.095496	32862	4018
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.083865	23693	3111
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40	40.104686	12401	2410
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.055791	18026	2235
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall_impl	40	40.290533	56530	4737
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40	40.089346	31018	2153
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	40.149773	27592	4722
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	8.668633	2518	849	2.2.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.111236	8	7	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40	40.101192	35855	4723
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40	40.046244	10562	3503
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40	40.101220	24283	3378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.050808	12409	4622
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40	40.224682	29711	3336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40	40.243691	18004	2474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40	40.041823	8557	3995
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_split	40	40.205056	15072	3502
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40	40.135414	8635	3657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	40.075101	16998	7950
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	3.881155	7532	459	0.4.2.5.6.14.14	synth with cache (only 1: red; only 1: red; only 1: intros l; only 1: destruct l; only 1: constructor; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map_inv	40	40.178220	19480	1463
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.069356	13641	3457
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40	40.049612	9463	5057
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.046655	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	14.099919	9389	2301	0.2.0.0.1.3.10	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.044853	8	7	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.046691	9758	2966
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	31.029894	14045	1900	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	40.023028	4171	2252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.028559	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40	40.234344	74902	3797
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.047026	11129	2898
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40	40.533838	10675	2885
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40	40.060797	17302	3636
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40	40.077026	15960	2694
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40	40.057374	12113	2689
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_gt	40	40.166128	24887	2314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.124124	19332	2431
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.013625	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.126861	48034	4088
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40	40.054774	12426	4493
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_min	40	40.457983	25167	4581
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40	40.213721	84560	11639
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	14.006011	31440	1292	65.16.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40	40.051685	9392	1668
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.264732	62923	3478
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.007022	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_0_IZR	40	40.080874	24295	4341
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.064215	10316	4239
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	29.939241	17543	2284	0.0.0.8.0.2.0.13.3.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: apply eq_opp_r; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40	40.096138	4238	872
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40	40.140778	4403	1096
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj	40	40.073169	23651	4621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	1.757353	496	169	14.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	28.926786	9714	1812	0.0.0.0.0.3.17	synth with cache (only 1: intro z; only 1: intros n m H; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: intuition order; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.216393	59	23	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.077222	16760	4036
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40	40.066536	8080	3169
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_div_r	40	40.056984	14828	3869
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall_forall	40	40.101491	29390	9599
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_l	40	40.091631	26089	4838
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40	40.096956	20073	1964
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.738282	219	85	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40	40.068870	21505	2657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	40.038079	7662	3124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.359682	44	16	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	4.732062	3585	471	13.12	synth with cache (only 1: intros z n H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	0.941865	176	40	0.2	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	40.052131	12482	3645
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.093542	16742	2450
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_app1	40	40.189198	12298	2964
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	4.022633	661	292	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40	40.055482	12229	4304
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.068913	15695	6563
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.171699	15196	2682
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_image	40	40.148717	28015	2573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	37.099044	27721	2889	0.0.0.0.1.41	synth with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40	40.267005	8107	2695
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40	40.056724	14404	4865
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40	40.080250	20199	4703
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	40.021386	3816	2024
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_app2	40	9.216062	2139	794	0.0.0.1.0.3.1.1.0.0.4.0	synth with cache (only 1: revert l; only 1: revert n; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	24.698474	2801	1016	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40	40.224282	56030	3988
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.810722	878	129	0.0.0.27	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	40.340559	24136	2729
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40	41.873412	3419	455
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.043294	8668	2379
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40	40.054471	7781	1199
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40	40.108386	13112	3858
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_le	40	40.175620	21697	3642
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.079827	22222	4425
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	5.424085	707	290	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.100320	35745	4785
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.089547	26796	4883
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_max	40	40.079663	23415	3928
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.132033	47427	4418
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.255123	101723	13167
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40	40.119420	11392	3033
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.983160	217	90	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	9.981983	2915	431	0.0.0.0.6.0.4.1.0.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_case	40	40.260329	50265	6289
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_IZR	40	40.086365	28190	3484
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth	40	15.251797	6141	1516	5.1.0.6.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40	40.068883	17505	5036
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	8.527759	1028	405	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40	40.104957	6605	776
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_iff	40	40.158958	21873	4125
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.020323	4	3	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40	40.119919	31565	3958
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	1.723657	392	98	1.0.3.1.1.3	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.122286	5763	1360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	40.076133	19071	4861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40	40.125297	31962	4297
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	3.792679	790	317	1.0.0.1.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40	40.057902	4375	1818
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.048702	14787	2424
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.019966	4	4	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40	40.049599	9772	1414
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	2.605406	1900	283	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall_nth_order	40	40.151709	23604	6130
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.095766	16811	2657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	1.169642	790	187	0.1.8.1	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_greatest	40	40.100923	19755	4317
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	4.596393	3388	458	0.0.0.0.25	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: order'; only 1: apply Private_NZDiv.div_small; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.318058	145	33	0.0.0.0.8	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	24.718509	7764	2174	1.0.1.5.1.0.1.6.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40	40.047196	14566	2410
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	40.045979	10620	3503
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.151275	10423	2917
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40	40.089171	8452	3433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40	40.246006	93358	5139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	40.072339	17632	5985
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth'	40	17.791826	5529	1847	0.0.0.0.1.0.4.0.0.1.7.0.0.0.0	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: intros; only 1: solve [ inversion H ]; only 1: simpl; only 1: intros; only 1: now auto with arith; only 1: intros [| n]; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40	40.233734	30655	3877
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.072509	25109	2588
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.186854	29	10	0.0.4	synth with cache (only 1: intros; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_elt_map_inv	40	40.173779	9135	2485
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.127840	8	3	2.3.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.044292	13	5	0.0.3.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40	40.062867	12689	4453
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	40.076002	13993	3490
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40	40.064170	15173	2636
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40	40.045628	11033	3475
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.last_last	40	9.208337	7492	999	0.1.0.0.21.0.0.0.7	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: destruct l; only 1: simpl in *; only 1: intros; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.086681	14896	4145
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.037188	7728	2006
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.462108	11232	1902
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	8.579141	2416	1118	1.0.6.1.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.431306	225	70	0.0.5.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40	40.075483	9807	4237
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_spec	40	40.071518	19351	3291
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.077209	10	9	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40	40.057184	12962	2748
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.149783	419	155	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.082522	28853	4396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40	40.042525	10365	3716
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	40.100228	29956	3736
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40	40.147907	51074	10627
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	5.201647	1547	626	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.057990	15828	3842
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.340886	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40	40.030846	8192	1135
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	1.649029	284	120	1.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40	40.265719	55226	5214
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.270476	14975	1346
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	16.970525	4349	1865	0.0.1.0.0.0.0.0.7	synth with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_IZR_R1	40	40.076454	25384	2584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40	40.059041	14886	3997
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	37.954407	4573	1519	0.0.1.0.4.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_pred	40	40.177761	29134	5949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.159771	17007	3241
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40	40.083084	21644	2444
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	40.028915	4124	1068
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	40.090693	11861	3136
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40	40.062635	12685	4351
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_l	40	40.067768	20787	2338
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	40.038756	6565	1477
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	3.174413	1234	204	9.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.Forall2_nth_order	40	40.253980	23060	5838
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.087243	26215	4769
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.013718	4	3	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_nonneg	40	40.075681	22188	4466
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	9.527027	1198	535	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40	40.172896	3149	1022
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	1.263003	442	120	0.0.2.0.2.0.4.0	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.060078	8899	1421
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40	40.095831	29629	3515
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40	40.045248	10563	3650
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40	40.108022	10968	2997
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	21.355409	6106	1092	1.0.1.0.0.0.1.0.1.1.0.0.0.0.0.0.0.2.29	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40	40.051513	8604	3086
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40	40.387047	161369	3357
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40	40.050504	8104	5144
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.178604	360	205	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40	40.242489	38143	2019
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_flat_map	40	40.220694	7397	1168
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40	40.048982	10283	2428
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40	40.139261	10305	3741
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40	40.069689	9926	2627
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	15.418457	1592	583	2.0.0.1.2.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.248740	20607	3430
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.179874	26670	6406
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	14.151379	4695	1464	0.0.0.7.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.064279	19032	3215
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40	40.233098	7299	720
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	3.699139	459	208	0.0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	40.150463	9349	4167
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40	40.073149	17847	4181
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.even_spec	40	40.218530	39211	4392
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40	40.074405	15117	3513
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.compare	40	40.177486	72866	5421
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40	40.054057	13875	4093
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40	40.325312	142770	9827
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	2.715221	737	331	2.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.349676	169	66	0.0.3.2	synth with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	5.111907	1140	508	3.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40	40.037235	8144	3397
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	40.058588	17472	2305
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	40	40.150487	55234	5484
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	3.121057	1624	418	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.610449	16571	1710
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	40.040838	8278	2494
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_ge	40	40.075688	23267	3330
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40	40.076452	11608	4760
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_add	40	40.172870	22471	3683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.045512	11670	2370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40	40.042831	10592	3476
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40	40.047634	9941	1993
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40	40.065383	4634	1938
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.057231	19084	1915
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40	40.041445	6238	1508
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	40.104739	22568	2239
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.335078	444	143	0.1.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	40.092255	27492	5103
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.131252	51	19	0.2.0.1.1	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: intro H; only 1: right; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ggcd_opp	40	40.122531	27784	3529
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.049290	11982	2514
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.455620	502	238	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	2.593173	1161	411	0.0.0.0.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40	40.154633	9929	2692
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.056877	14749	4244
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40	40.077739	22814	2722
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	3.313629	1662	359	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	40.080272	7978	3888
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40	40.175610	8003	1300
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40	40.070003	18724	3895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40	40.344208	142721	5038
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_neq	40	40.106270	37644	3535
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.193119	66	22	0.0.5.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.059038	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.183918	32	13	0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.491162	2115	302	0.0.0.0.0.0.0.0.0.0.7.33	synth with cache (only 1: simpl_relation; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare	40	40.071582	28656	447
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.014389	2	2	0.0	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.012351	4	2	1.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	25.552540	8821	2766	0.0.3.0.0.1.0.0.1.5.0.0.1.0.0.5.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: apply divide_0_r; only 1: trivial using divide_refl; only 1: trivial; only 1: apply gcd_unique_alt; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: intros q; only 1: rewrite divide_opp_r; only 1: split; only 1: split; only 1: apply divide_0_r; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.141581	12144	1686
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40	40.163178	19274	2805
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40	40.146152	49286	3721
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40	40.028449	6250	2001
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.exists_last	40	40.122514	37311	4439
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.odd_spec	40	40.140014	28533	5657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40	40.216175	9928	2806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40	40.095468	19340	3548
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.097923	5533	794
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40	40.115715	33097	3341
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.odd_spec	40	40.196793	30353	4225
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40	40.085189	24933	3831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.678800	187	74	0.0.1.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40	40.032454	7239	2019
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40	40.072842	12361	3788
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.107814	34833	4632
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40	40.032594	7346	2146
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.234602	61357	5043
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_equiv	40	40.170599	34471	6942
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_l	40	0.010409	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	40.085177	25239	5623
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.415307	180	71	0.0.0.2.0.1.0.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40	40.062778	15278	2563
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_le	40	40.067626	21256	2773
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40	40.045522	5829	3402
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	40.679252	14704	2844
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	13.546411	3009	1247	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_mul	40	40.153763	21941	3625
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40	40.037964	9099	2231
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40	40.056719	14646	4568
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40	40.118227	6498	1505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	40.143097	44925	6571
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.061831	16735	3559
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40	40.041116	10715	1357
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.517913	167	57	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.471346	142	76	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.177843	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.047477	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40	40.114245	17647	2185
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.073592	21331	3026
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40	40.075163	23005	3314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	13.391141	4556	1729	0.4.0.3.0.4	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40	40.134401	15114	3515
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.694974	149	73	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40	40.052056	14507	3330
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.054759	17547	2055
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zneg	40	40.088510	28308	3428
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.008610	8	1	7	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_0_l	40	0.009131	6	1	5	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.074537	39	9	9	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40	40.081532	7038	3266
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40	40.107993	10634	2157
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_minus2	40	40.076249	16468	3046
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	40.077603	20397	4947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.141051	51333	3354
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	13.846308	2607	777	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.219370	19321	1962
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.035166	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	3.693374	957	286	0.1.1.10.0	synth with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	13.722326	8225	2061	0.4.0.0.0.0.0.4.0.1.3	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40	40.176613	9805	3846
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.192242	13412	1242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.153597	13841	2809
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	21.057018	4414	1650	1.0.0.3.1.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40	40.116321	35134	4589
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	40.106725	36789	3560
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.removelast_app	40	40.121001	20264	3918
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.removelast_last	40	0.701224	255	77	0.0.0.1.0.0.0.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: destruct l; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	40	40.153609	19355	2368
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40	40.095009	20579	3578
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	0.269217	98	28	0.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite add_comm; only 1: apply add_sub).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.153354	8139	1981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.115006	16680	5465
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.281852	70348	1936
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.163945	65839	1732
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	4.619581	889	398	0.2.0.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- add_sub_assoc by apply le_refl; only 1: rewrite sub_diag; only 1: now rewrite add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xO_r	40	35.545851	13367	4411	0.0.0.1.1.2.0.0.9.2.5	synth with cache (only 1: revert q; only 1: intros H; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40	40.047960	13008	2716
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	13.703709	3189	1429	0.0.0.0.0.0.1.0.0.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: auto with relations; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40	40.072159	15557	4737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40	40.079141	26916	2639
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40	18.327749	5553	759	4.0.1.0.24.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40	40.039420	8608	2887
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40	40.227387	59205	6761
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.101977	8564	1631
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_lt	40	40.073256	22447	3390
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40	40.077959	10904	4342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	40.235635	5998	1950
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.078077	23213	5367
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40	40.065345	15474	2464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.648278	342	52	0.12.0	synth with cache (only 1: intros n m; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40	40.042320	8838	2015
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_r	40	40.050752	16778	1453
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_neq	40	5.111428	1521	420	2.2.2.0.4.0	synth with cache (only 1: intros n m H; only 1: red; only 1: intros H0; only 1: apply H; only 1: apply eq_IZR; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40	40.070957	21005	3618
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40	40.096333	15377	4519
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	40.196372	34852	3356
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.036848	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40	40.049937	13820	2705
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	26.430671	6009	2385	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	40.054321	16134	2704
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.029142	9	5	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.122127	16	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.899582	276	120	1.0.0.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.237163	66	24	0.6.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.248662	127	34	3.4.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	6.436652	2581	757	0.1.0.0.1.1.0.8	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.293012	4578	1297
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40	40.054717	15201	3463
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40	40.107376	35996	4859
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_0	40	40.099121	34476	2414
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40	40.118526	11658	2110
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	40.089898	22069	4437
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40	40.082158	18253	3261
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.030542	6400	1492
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_0	40	3.575670	4690	368	3.3.46	synth with cache (only 1: destruct (N.le_gt_cases a 0) as [Ha| Ha]; only 1: now destruct a; only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_2	40	40.211748	20502	3861
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40	40.071192	14017	2920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	6.173330	2403	600	0.0.0.0.0.2.4.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intro H; only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.058545	16144	3031
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.158791	18893	2095
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40	40.098275	9676	1364
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40	40.075426	22372	2396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40	40.062986	16785	2814
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_cons	40	40.287409	53820	3829
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div_mod	40	40.185471	17259	4303
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40	40.128669	6624	1071
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.141006	15469	3718
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div_eucl_spec	40	40.220497	39466	5391
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.097686	13487	3168
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.135783	16020	5915
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40	40.156024	24998	3278
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.087574	12311	1967
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40	40.090148	10909	3803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	14.247583	6048	1411	6.1.8.3	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40	40.063565	17416	3761
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40	40.092119	14745	2837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	40.050264	7001	3166
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.034823	9266	1337
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40	40.268210	85841	4718
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.110366	2698	1114
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40	40.034803	6533	3452
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.150727	8327	878
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.181545	34625	4261
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.102338	3	2	0.1	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40	40.028868	6706	1679
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_lt_contravar	40	40.071469	5433	975
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.074191	25532	2836
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40	40.056181	17089	3244
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Find.findA_NoDupA	40	40.049130	10677	2313
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	40.109934	22202	5702
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.870191	298	103	0.0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.109881	359	159	1.0.0.0.0.0.1.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.018888	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.019796	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40	40.104845	17499	4388
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40	40.065714	8386	2175
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.066557	21052	3850
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.078218	14456	3283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40	40.063587	18896	3096
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.709927	293	72	2.0.0.8.0	synth with cache (only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40	40.069818	23219	3316
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40	13.497785	3610	447	0.0.1.0.18.7	synth with cache (only 1: intros n H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: now nzsimpl'; only 1: intros; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40	40.118505	12186	2850
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.074730	20861	4624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	7.952879	1815	717	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.079541	20079	3474
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.052335	13444	3019
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40	40.087814	28069	1384
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.247130	34699	1196
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.788281	207	59	0.1.1.1.1.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40	40.026768	6476	1565
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	40.048004	11461	3351
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40	40.149349	16821	3414
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40	40.123376	23607	2134
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40	40.081960	22843	3850
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.045729	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.052426	9791	3164
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_app	40	40.071245	17117	3668
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	40	40.162968	25018	4479
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	40.197914	8002	2613
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.139405	22951	3677
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div_mod'	40	40.097769	30585	5237
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.478950	301	82	9.1.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	0.025341	8	2	6.0	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.035623	15	4	0.0.5	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.056976	14949	3331
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_comm	40	40.133692	17734	5731
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40	40.040979	11635	1680
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div_mod	40	2.367936	848	233	0.10.0.1	synth with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: intros H; only 1: now destruct div_eucl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	40.068438	22945	1955
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40	40.079270	8455	4122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40	40.066232	12899	3525
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40	40.125801	30456	6690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.146433	29134	3383
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40	40.093385	7764	3145
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40	40.041889	10380	2748
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40	40.322286	81812	3767
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40	40.084009	18443	8308
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40	40.089045	20435	4028
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_min	40	40.092565	27329	5919
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.035099	9017	1591
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_r_R1	40	40.094537	31726	4021
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qpower_positive_comp	40	40.064862	21081	2257
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.105371	37214	2093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	40.122542	24224	4584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.109935	21851	3502
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.653588	189	67	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40	40.104105	5461	1626
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	2.289427	91	40	0.0.0.0.2	synth with cache (only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	4.905327	1657	458	0.0.1.1.0.1.15	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	16.103138	10236	2498	0.0.1.3.0.4.1.25	synth with cache (only 1: reduce; only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in; only 1: simpl; only 1: clear IHl IHr; only 1: descolor; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.129249	12247	2303
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.065184	19392	2935
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.024931	6730	1718
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.077103	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40	40.065025	17021	3992
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	1.457794	812	221	0.0.1.0.1.4.10	synth with cache (only 1: intros; only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.240956	5882	483
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	40.053581	11966	4960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.125642	10053	2117
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40	40.103484	13775	1956
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40	40.148405	14700	2139
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.062357	15541	4696
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40	40.219932	18474	1711
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	25.059744	9494	2328	1.7.2.7.1	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40	40.050808	9626	1509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40	40.038489	8953	2515
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40	40.162947	57943	6232
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40	40.217999	28004	3535
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	5.450366	1287	520	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	16.950058	11899	1360	0.0.0.0.0.1.28.15	synth with cache (only 1: transitivity 1; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.021002	3195	1555
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.110661	33395	4869
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40	40.082905	18591	5021
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	2.811258	1239	319	1.0.0.0.1.11.0.0	synth with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.118835	7	6	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.346891	52	22	1.1.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	30.527948	8578	1367	4.2.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_In	40	40.090942	24307	4408
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40	40.214829	12170	2888
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40	40.095145	16463	3003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	16.536489	8411	637	1.2.2.5.7.5.29.5	synth with cache (only 1: rewrite one_succ; only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite <- (add_0_l 0); only 1: rewrite opp_succ; only 1: apply lt_pred_le; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.104782	24474	6992
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.186457	14374	3941
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_remainder	40	40.213365	39093	4228
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40	40.068549	19266	3196
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.050129	8446	4025
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40	40.087519	30667	3797
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.098255	22313	4307
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.065254	19353	1971
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40	40.099685	13070	2695
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.057192	12153	2750
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40	40.170342	64960	3132
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.105267	17108	4212
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.008148	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	10.181238	8051	987	0.0.0.15.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.038412	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	1.300202	304	124	0.0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_max	40	40.205382	32108	5594
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.944637	239	103	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.391271	154	70	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.single_z_r_R1	40	40.052532	12305	3662
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qpower_comp	40	40.163075	9736	1162
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.105375	32763	7198
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_refl	40	0.014713	5	4	1.0.0.0	synth with cache (only 1: intros; only 1: destruct b; only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_trans	40	0.087639	51	9	9	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_true	40	0.006430	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.false_le	40	0.005929	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_compat	40	0.066141	28	12	3.3	synth with cache (only 1: reduce; only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_irrefl	40	0.009991	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_trans	40	0.015424	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_compat	40	0.011759	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_trichotomy	40	0.066146	7	5	0.0.0.1.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_total	40	0.032151	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_le_incl	40	0.012059	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_lteq_dec	40	0.030924	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_lteq	40	0.189982	42	19	1.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40	40.130690	10540	2834
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.155807	14756	2070
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40	40.084808	15914	4430
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.522767	163	106	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.182754	44	27	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.112918	11115	3047
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.019126	4695	1618
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40	40.112936	36241	5055
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40	40.064313	17024	3261
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.le_preorder	40	9.524418	25674	776	0.48.4.66.2	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: destr_bool; only 1: hnf; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolOrder.lt_strorder	40	0.186892	110	39	0.0.2.1.1.2	synth with cache (only 1: split; only 1: compute; only 1: destr_bool; only 1: intros b; only 1: destr_bool; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.062630	16808	3914
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.118642	25	15	0.0.0.1.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.075291	9927	1850
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.348727	111	40	0.2.4	synth with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40	40.081911	8527	842
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.157026	22018	3324
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec_aux	40	40.058376	13941	4013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.788808	744	222	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40	40.093630	30209	3822
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40	40.067375	17245	1922
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.071555	20	10	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	40.038649	9063	1387
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	2.122171	1469	238	20.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.037166	8255	3325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	2.877635	484	168	0.0.0.0.1.4.1	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	3.138171	714	236	0.0.0.1.0.1.2.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.174106	8918	2866
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40	40.077053	21761	5010
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40	40.082204	4187	1583
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40	40.096087	20065	9416
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.045095	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40	40.131062	47722	3656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.081796	17137	6058
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	2.411350	559	190	0.0.0.1.0.2.3.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.241470	64	31	1.3.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40	40.160942	60053	4587
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	40.116133	8007	792
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.031280	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.154365	50	29	0.0.0.3.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.035613	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.239151	22	14	0.0.0.0.0.2	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.184006	51	20	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.231608	64	26	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.038483	7	5	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.801817	206	76	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.notin_remove	40	40.074701	16774	4051
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.211114	13961	3797
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.013865	4	2	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	6.906055	3030	835	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: reflexivity || destruct H; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.050582	13319	4151
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40	40.108395	28213	6848
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.501206	164	59	0.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: intros; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: symmetry; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	11.826391	2292	619	0.0.0.0.0.0.4.6	synth with cache (only 1: intros n m H; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	40	40.119722	18944	5042
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.047631	12792	2069
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_lt	40	40.264816	29350	3892
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40	40.232879	3925	776
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.115744	44949	3286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.043846	13	6	0.0.0.2	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40	40.092005	17932	4764
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	4.859902	1340	646	0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(H); only 1: intro EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40	40.068191	19924	3904
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.128544	23792	3663
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40	40.361274	3896	1335
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.099447	21680	5361
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.prop_congr	40	0.014847	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	40	40.353057	151057	3672
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.is_true_true	40	0.149339	125	10	16	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.not_false_is_true	40	0.009623	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.is_true_locked_true	40	0.011976	2	2	0.0	synth with cache (only 1: unlock; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbT	40	0.126876	4	1	3	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbTE	40	0.007568	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	4.829003	1468	659	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbF	40	0.008769	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbFE	40	0.008325	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbK	40	0.127583	573	32	3.29	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbNE	40	0.005017	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_inj	40	0.266327	645	42	0.32	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbLR	40	0.020468	7	1	6	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbRL	40	0.041016	24	4	8	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contra	40	0.525398	349	49	6.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraL	40	0.011676	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraR	40	0.012183	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraLR	40	0.011457	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraT	40	0.532113	223	33	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.wlog_neg	40	0.008126	1	1	0	synth with cache (only 1: by case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2SuccNat.id_succ	40	40.142159	13880	2420
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFT	40	0.653642	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40	40.092013	12694	3873
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFN	40	0.903445	209	19	3.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.tech_single_z_r_R1	40	40.059425	18246	2029
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.110767	37	18	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	40	40.207205	82710	6806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	9.242623	6987	1251	0.0.5.0.0.1.1.10.4	synth with cache (only 1: cases ltac:(n); only 1: apply le_ngt; only 1: rewrite pred_0; only 1: apply le_ngt; only 1: order; only 1: intro; only 1: nzsimpl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraTF	40	0.677419	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	1.014481	443	139	0.0.3.0.2.2	synth with cache (only 1: intros z n H; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraNF	40	0.786479	165	16	2.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	5.118555	1427	623	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.967463	725	244	5.4.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n IH; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40	40.109041	9065	1859
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFF	40	4.613268	3970	300	0.1.30.14	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity || destruct H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40	40.098703	6294	1359
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	1.315832	53	24	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40	40.115806	21080	4323
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.163301	8745	2424
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	8.299106	4568	1081	3.0.0.0.0.3.1.1.0.0.0.6	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intro p; only 1: intros; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply le_le_succ_r; only 1: intros k H1 H2; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.019092	4511	1481
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.012631	2	2	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40	40.082481	25287	4299
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ins_arb	40	40.050769	13404	2957
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	40	40.152847	45496	11164
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.108653	38	12	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40	40.118560	11512	1413
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40	40.110054	37906	3025
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.080424	23012	5273
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40	40.076261	22209	5094
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40	40.080586	23508	1599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40	40.388278	168605	2459
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40	40.056153	13823	4216
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	1.122068	503	128	0.0.0.7.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.162101	12323	4082
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40	40.095763	7281	1875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	40.120372	41294	3566
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40	40.130812	14503	3170
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_list_sum	40	40.313578	15835	2384
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.062085	16068	3089
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40	40.070644	20077	4053
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.121504	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.535730	69	32	0.0.0.0.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40	40.063016	13215	2917
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.362894	58	23	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.698476	160	84	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.in_remove	40	40.063055	14817	3754
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	40	40.176852	20453	4256
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	2.487611	999	305	0.0.0.0.1.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	3.925127	770	255	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	40.037298	9355	2721
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	40	1.070976	2138	209	0.7.18.0.0.23	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with relations; only 1: intros x' x'' Hx' Hx''; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.079875	24341	1488
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.Seq_refl	40	0.010648	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.Seq_sym	40	0.015347	2	2	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.Seq_trans	40	0.062122	11	9	2.0.0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.gen_st	40	0.015734	5	1	4	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40	40.056660	14256	2049
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.131100	17231	5433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40	40.039367	8306	2167
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.195524	14742	3554
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40	40.111622	17818	3575
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40	40.082586	12756	3311
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	1.358511	267	99	0.0.0.0.0.5.0.3	synth with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.453784	1160	235	2.1.5.8	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.562339	140	54	0.0.0.1.0.4	synth with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	37.163213	133961	6129	4.57.3.6.0	synth with cache (only 1: Bool.destr_bool; only 1: compute; only 1: intro Hxz; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.017010	19	3	6	synth with cache (only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40	40.062200	12081	2389
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40	40.057252	16369	2872
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	14.674157	3976	1806	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.114560	33741	5679
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2SuccNat.pred_id	40	40.038905	7957	2126
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_le_contravar	40	40.040032	8546	2536
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.087330	23574	7960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	40.090096	10552	4143
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40	40.106107	29574	5061
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.040601	15	8	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.115314	5276	1960
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	6.051419	4352	820	0.0.11.5.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: induction n; only 1: trivial; only 1: f_equal; only 1: simpl; only 1: rewrite <- IHn; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	34.514974	13990	3221	0.0.3.1.2.3.6.1.0.2	synth with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: intros _ H; only 1: rewrite pred_succ; only 1: apply le_succ_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifP	40	40.176538	13314	359
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.509871	297	20	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.012798	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifF	40	0.005984	1	1	0	synth with cache (only 1: by move ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifN	40	0.011370	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_same	40	0.007071	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_neg	40	0.005987	3	1	2	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.006606	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.006312	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifE	40	0.114322	38	4	10	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	21.901089	5449	1135	0.0.0.0.9.1.7.0	synth with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzsimpl; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.143546	7	6	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.030748	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.041587	8503	1665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40	40.119622	10568	2339
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40	40.024915	6439	2057
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40	40.030590	7377	1478
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.055494	7	5	0.0.0.2.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.025108	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.078292	23617	4645
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.add_rb	40	40.081939	25505	3759
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40	40.107692	28316	10607
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40	40.080524	4973	1277
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.049067	4610	1171
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.063852	15651	4674
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40	40.054775	13763	3230
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40	40.066580	13664	1245
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40	40.059325	14021	5455
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40	40.114803	33396	4331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	3.267463	134	67	0.0.0.0.0.2.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40	40.080679	22587	6343
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40	40.169674	10952	3113
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.385871	98	58	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	14.581857	9029	2196	1.1.9.10	synth with cache (only 1: intros n1 m1 H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.080843	22729	3936
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.589485	602	119	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.040956	7	6	1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.587519	156	68	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_list_max	40	40.285268	10962	2186
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40	40.033805	8957	2195
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.in_in_remove	40	40.073517	17666	4016
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.log2_spec	40	40.175214	21333	4127
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.032653	16	5	0.1	synth with cache (only 1: inversion 1; only 1: now apply pred_0).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40	40.083555	23978	5923
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.160324	57838	4548
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40	40.038661	8307	1607
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_l	40	40.120661	15780	4425
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrtrem_sqrt	40	40.273077	33286	4977
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40	40.129569	16622	3097
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.137461	35082	4247
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40	40.065674	12170	4708
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.054614	14021	2434
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.012448	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_symmetric	40	0.010758	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_transitive	40	0.013089	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	40	40.151182	46963	8114
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0.005860	1	1	0	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.089076	12793	2334
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40	40.105302	9762	3308
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.079952	12485	3355
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40	40.109260	17450	6921
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.055526	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.143424	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.058085	13911	4533
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.104539	27667	10749
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.201700	66	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.109012	14313	2037
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40	40.080834	16563	7122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40	40.108517	6521	1934
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	0.965802	220	77	6.1.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.169187	20970	5040
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.introNTF	40	40.290875	14318	514
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.introTF	40	0.011607	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.011839	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimTF	40	0.007144	1	1	0	synth with cache (only 1: by move <-; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40	40.107296	11209	1950
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.090599	31332	3461
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_equivalence	40	17.080701	2123	251	0.0.27.0.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros x; only 1: intros; only 1: now transitivity y).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0.009486	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40	40.043680	7437	4950
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0.012528	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.007409	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40	40.077843	15559	3185
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	40.025791	6779	1975
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40	40.098499	32079	4292
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40	40.054866	11131	3329
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0.014565	3	2	1.0	synth with cache (only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	1.998445	1126	253	2.0.6.0.2.1.1.3	synth with cache (only 1: hnf; only 1: split; only 1: red; only 1: intro z; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.009647	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.023906	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	40	0.025034	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.015259	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.165867	57751	5791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40	40.160536	7818	1421
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	1.361907	301	79	3.4.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.022255	2	2	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.014676	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.iff_impl_subrelation	40	0.017845	5	3	2.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.015698	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.059617	13942	5295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40	40.065395	10251	2866
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40	40.049652	14296	2622
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	40.105598	31255	3882
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40	40.158427	57296	3610
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.320792	7588	1854
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	40.105994	21071	4331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40	40.093806	27620	4311
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40	40.061958	15617	4273
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_reflexive	40	0.012159	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.005260	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_transitive	40	0.012282	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.070574	19789	5311
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_equivalence	40	0.241484	13	4	7	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40	40.080862	24909	2954
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0.007588	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0.009007	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0.007175	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	1.306702	553	188	0.0.0.1.0.0.0.3	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_sym	40	40.103168	32993	2392
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	1.926178	2159	352	1.3.1.4.5.7	synth with cache (only 1: split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0.006709	3	1	2	synth with cache (only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0.014122	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.122628	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0.005435	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.012213	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.005225	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0.035019	15	5	3.2	synth with cache (only 1: intro; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.010943	5	3	2.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0.004448	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.008943	2	2	0.0	synth with cache (only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0.005648	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_remove_comm	40	40.068907	15014	3886
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	40	40.126865	21880	4387
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40	40.046163	12417	2468
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40	40.122222	47140	2914
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40	40.036611	7999	1863
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.195139	18063	5036
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrtrem_spec	40	40.287454	43585	4539
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40	40.101012	21992	4791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40	40.167206	8692	3005
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.055074	14581	2420
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.trans	40	40.152431	53372	4054
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40	40.043370	10545	2447
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.102723	12969	2989
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.047979	8224	2262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	40.105286	19030	5782
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	16.845757	9888	2014	7.0.1.0.0.0.0.12	synth with cache (only 1: intro LS'; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_div	40	40.050644	10125	1043
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40	40.231261	93447	7560
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40	40.095616	8355	2796
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_div_den	40	1.560463	472	105	1.0.0.6.2	synth with cache (only 1: intro; only 1: intuition; only 1: unfold Rdiv; only 1: field; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40	40.078215	23992	2518
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double	40	0.051731	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.626888	778	275	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40	40.156035	20648	2932
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.125361	47189	4673
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.203583	22347	808
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	3.058042	970	448	5.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.075904	9594	2220
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40	40.075697	19600	6975
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.xorPif	40	3.004537	1231	81	0.0.38	synth with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40	40.096915	11773	2904
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40	40.073972	11594	2428
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40	40.024287	6579	1789
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40	40.118063	37191	5077
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.remove_rb	40	40.080615	23180	3768
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.591247	257	81	0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.202856	323	19	25	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	40	40.096803	32055	3108
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.118205	5723	804
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.054728	7021	390
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	4.100788	1658	400	7.0.3.4.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.096831	30000	3879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.062797	9924	3952
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.031437	8174	1732
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40	19.445457	9804	2426	0.0.0.5.0.1.0.10.1	synth with cache (only 1: intros n m H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intuition order; only 1: intros k H1 H2; only 1: nzsimpl; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40	40.179147	16785	1469
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40	40.118738	43248	2067
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	24.439261	7946	2033	10.8.4.0	synth with cache (only 1: unfold lcm; only 1: intros n m; only 1: rewrite <- gcd_div_swap; only 1: apply abs_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	2.293039	359	69	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40	40.079862	21864	5179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40	40.232865	7804	3287
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40	40.054864	9311	3919
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40	40.080973	27974	2480
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.602194	225	70	5.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.073342	20	15	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_equiv	40	40.129996	47193	1753
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40	40.130317	6778	707
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0.174377	114	15	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0.039186	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_remove_eq	40	40.220103	16204	3764
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0.151068	49	26	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	40.158631	28011	4521
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.008991	2	2	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	0.834820	205	179	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.891882	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	0.896462	149	140	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.115942	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	40.048796	10109	2016
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.742888	321	165	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.138967	18183	1514
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40	40.061786	15180	4046
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.216753	29155	3809
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	1.241070	355	137	0.0.1.3.2.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.196738	14103	4419
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40	40.082014	24767	3971
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_neg	40	0.012124	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.138990	9139	3391
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40	3.659770	22127	203
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40	40.063418	16020	3841
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.071925	12741	2262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40	40.079260	22297	4412
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0.008954	1	1	0	synth with cache (only 1: eauto using eq_trans, eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40	40.117519	12061	5554
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40	40.142798	21398	5376
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40	40.097504	9364	2818
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double_var	40	40.055668	16260	1392
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.319996	134900	3931
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.028361	6	3	1.0.2	synth with cache (only 1: red; only 1: compute; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	0.146385	97	30	4.6	synth with cache (only 1: repeat red; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	40.099317	21675	2694
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	0.852392	891	84	19.2	synth with cache (only 1: intro X; only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.014989	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.161400	30	6	0.7	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0.012956	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0.015505	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.115820	17643	2272
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.018730	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	4.797107	2746	345	22.7	synth with cache (only 1: intros a b; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inv	40	40.128865	49795	4887
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.009910	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.023773	4	4	0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0.023148	5	2	0.3	synth with cache (only 1: intros y H'1; only 1: auto  7 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	12.373604	5951	1682	1.0.0.0.3.9.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	40	40.080756	20919	7000
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40	40.127871	11810	1780
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.673003	228	120	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.020746	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.024188	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.unitE	40	0.364764	822	74	3.9.21	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0.009441	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.164196	63	8	0.11	synth with cache (only 1: intros; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.172808	16143	621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40	40.026439	7207	1709
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.070324	11327	2082
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.070731	20673	2700
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.092685	31918	2603
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40	40.098798	31997	4085
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.049704	6598	1359
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0.020431	8	1	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40	40.076182	7491	2570
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.land_spec	40	40.075938	20343	4798
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.201196	5285	1298
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40	40.058353	15467	4054
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.658217	330	74	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0.399878	158	77	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.031514	7517	1636
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	15.105603	12113	1918	34	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.010493	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.060324	15359	3663
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40	40.162727	57278	2395
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40	40.137715	16089	3926
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.107188	31231	3755
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40	40.133996	48460	3946
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.221550	11089	3078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40	40.066361	20021	3641
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	3.237291	525	314	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40	40.053818	15165	3207
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	5.040300	993	396	0.1.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_cons	40	40.078071	12873	1793
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	2.186856	1338	273	7.0.0.0.5.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_length_le	40	40.232837	17222	3965
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.199721	22634	3988
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.176236	115	19	13	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.078865	22669	5048
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_double	40	2.284870	1044	181	0.2.0.0.3.10.2	synth with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now nzsimpl; only 1: simpl; only 1: nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.187714	33	18	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	40.059280	7887	7185
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0.012242	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0.200990	63	6	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.012325	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	40	40.091327	27608	4568
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.064055	16296	3608
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.017323	2	2	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.112118	6	4	0.2.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.079235	23197	4501
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.134865	35598	5027
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.109722	7571	3087
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.085247	22469	4711
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.045387	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.095897	10	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40	40.079150	20110	4622
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40	40.069678	18726	4158
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.117908	28804	9122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40	40.116906	12656	2834
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	4.087872	604	213	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	0.294802	52	24	1.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.025268	3	3	0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.035833	5	4	0.1.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	21.619138	5089	4447	4.3.2	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.R_rm	40	40.053706	12828	4684
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.143911	33	14	1.2.1.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.098311	19	12	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40	40.124086	26221	2430
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.095658	30277	4731
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	34.978384	159956	5152	4.48.81.13	synth with cache (only 1: intros; only 1: intro z; only 1: rewrite -> H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0.005834	4	2	2.0	synth with cache (only 1: intros H ?; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40	40.089570	30902	1353
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40	40.227593	54049	7237
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	11.039718	2566	2235	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.055408	7831	1697
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40	40.087735	17539	5920
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.328528	30121	1456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40	40.024087	6460	1656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40	40.113064	17582	2661
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40	40.044568	11716	1938
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.065067	20872	2714
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.292622	114484	8114
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.009344	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.UIP_refl_refl	40	0.565081	576	104	24	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.008998	6	1	5	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_left	40	0.230385	124	32	1.1.4.3	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_right	40	0.014436	5	3	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.deletion	40	0.010525	4	2	1.1	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.041116	8925	2578
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.035000	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_heq	40	0.196875	151	32	0.2.4.2	synth with cache (only 1: intros H H'; only 1: subst; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.040487	8	6	0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.105942	33064	6937
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40	40.053289	13177	4295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.042313	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.048589	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_existT2	40	0.215211	103	25	0.0.0.5.1	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40	40.094903	5864	1692
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	3.355864	1738	839	0.0.0.1.0.0.0.0.0.2	synth with cache (only 1: generalize Rstar_contains_Rplus; only 1: intro T; only 1: red in T; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 H'0; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.121036	39916	4659
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40	40.067999	16413	5654
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.075510	15469	4508
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40	40.085484	26302	2535
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	3.189107	752	507	0.0.6.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.047629	8	5	1.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	0.016318	3	2	1.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40	40.231911	10403	1975
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.019427	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40	40.078672	22104	4161
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40	40.212148	81326	1317
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	40.045087	11037	3824
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40	40.029410	7460	1704
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_Permutation_transp	40	40.071689	18880	2993
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	13.074060	4534	2054	0.0.0.0.0.0.0.0.0.0.0.0.3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: intuition; only 1: right; only 1: split; only 1: intuition; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.028784	2	2	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.subset_eq	40	40.170790	57624	8329
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_length_lt	40	40.257847	22383	4342
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.match_eq_rewrite	40	3.730594	6973	698	2.11.1.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	4.429308	7787	887	2.27.3	synth with cache (only 1: red; only 1: compute; only 1: destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40	40.091473	25701	5091
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.le_div2	40	40.138220	37597	4843
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.031331	3360	613
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.010788	7	2	0.5	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.022636	4	3	0.0.1	synth with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.008115	3	2	1.0	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	40	0.003874	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.033211	14	5	3	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.005418	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.004380	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_proper	40	0.033389	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0.029450	12	2	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	40	0.004850	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	11.868643	5758	1548	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	18.953545	20530	2498	19.2.8.1.7.1.8.0.5.6	synth with cache (only 1: split; only 1: now try order'; only 1: intros a; only 1: revert a; only 1: intros; only 1: firstorder; only 1: intros a; only 1: intros n m; only 1: intros H H1 H2; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_reg_r	40	40.218702	18892	5608
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40	40.082488	18526	3648
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.274740	42130	2858
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	40.179133	54626	1200
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	2.853042	1313	452	0.2.0.0.0.1.0.0.3	synth with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40	40.192161	12232	3507
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40	40.064907	16045	3143
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	5.982779	25019	774	2.2.0.2.34.55	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40	40.061723	13134	6083
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	40.086545	22030	5635
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.282804	41	13	0.0.0.7	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.147332	71	33	0.2.0.1.0.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0.015944	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.022386	5	3	0.2.0	synth with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrsetoid.compat_Reflexive	40	0.009702	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	12.238327	4410	1682	0.0.0.2.0.0.0.0.0.12	synth with cache (only 1: intros n m; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.111395	27	20	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.252916	264	49	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.050294	13259	2208
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	20.225989	3654	2063	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.544342	44	28	2.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.167317	39	25	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.208029	29	20	0.0.0.1.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40	40.057873	15022	2951
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	40	14.397121	8121	1250	0.6.7.7.2.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: induction (Rwf x); only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	2.799226	994	279	6.0.0.1.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	4.847938	850	346	8.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	40	5.312323	26738	318
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_epsilon	40	40.047058	11380	2728
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.054778	17774	2583
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.129981	32955	5989
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.356356	153703	4700
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40	40.125623	46510	5980
coq-tactician-stdlib.8.12.dev	Coq.Relations.Relations.inverse_image_of_equivalence	40	40.228549	81562	12378
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.100125	34173	5016
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.157393	23442	2618
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	40.065293	7667	6789
coq-tactician-stdlib.8.12.dev	Coq.Relations.Relations.inverse_image_of_eq	40	0.761895	626	199	0.2.0.0.5.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40	40.053560	7094	1578
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.007306	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	40	32.778016	17867	7874	0.2.3.0.1.2.1.0.0.0	synth with cache (only 1: intros U R; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: intros z1 H'5; only 1: elim H'; only 1: intros H'8 H'10; only 1: elim H'5; only 1: exists z1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	2.463953	1521	663	1.1.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_existT1	40	35.628953	163423	4987	0.13.3.58.11.22	synth with cache (only 1: intro Streicher_K; only 1: intro H; only 1: apply Streicher_K; only 1: dependent rewrite H; only 1: reflexivity; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40	40.133352	23986	796
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.simplification_K	40	0.012173	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0.009070	6	2	2.2	synth with cache (only 1: intros U R H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0.007911	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40	40.178670	67204	7487
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	17.178295	6975	1395	0.0.0.0.0.0.18	synth with cache (only 1: intuition; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40	40.066912	15875	1983
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40	40.073706	21962	4965
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40	40.079619	18776	10007
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.051423	13396	3602
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lxor_spec	40	40.105458	31649	4761
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.041632	5962	2102
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	8.418435	2215	1601	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	1.016605	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40	40.067860	18397	3802
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40	40.061062	16870	2512
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40	40.109109	38615	3048
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40	40.071828	22738	3189
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40	40.248058	12542	2285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.088469	23876	7184
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.109955	17773	5252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.071704	18383	3292
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_transp.Permutation_ind_transp	40	40.095516	5644	748
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	12.265042	6296	2539	0.0.0.1.1.1.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	32.965590	15116	3098	1.0.1.6.1.21	synth with cache (only 1: intros n m p q; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: f_equiv; only 1: f_equiv; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.master_key	40	0.004632	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	3.288636	1498	331	0.0.15.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.642750	1086	303	0.0.1.0.0.0.1.0.0.1.8	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_In	40	40.222751	21641	3872
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40	40.075351	19529	4801
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	40	40.288318	107061	7064
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_div2	40	40.078051	21538	5346
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.flip_arrow	40	40.029170	8161	1732
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_flip	40	0.020413	4	2	0.2	synth with cache (only 1: intros; only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	5.305422	20594	835	0.77.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0.007949	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_sym	40	0.830285	1247	111	0.12.15	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_reg_l	40	40.079897	24569	7286
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_trans	40	0.020063	8	3	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.116111	39	22	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.109282	46	23	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	40	2.731614	423	102	3.7.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.065366	12715	2943
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_divide_l	40	40.120460	33187	2302
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	40.068008	17493	4765
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.137299	17182	3323
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.055169	12306	3744
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.113540	190	30	0.16	synth with cache (only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40	40.967649	473901	9434
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	2.689032	1491	446	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.021531	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40	40.136946	42168	6534
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_divide_r	40	2.146767	785	254	1.0.2.3.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (EQ, EQ'); only 1: exists bb; only 1: simpl; only 1: now rewrite Pos.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.le_refl	40	0.509552	505	66	16	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.018501	2	2	0.0	synth with cache (only 1: red; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.square_xO	40	0.039425	25	7	1.5.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.046451	12044	1851
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40	40.071566	16079	4723
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	24.865577	15021	2417	0.0.28.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.142965	45152	2038
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.214961	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40	40.069844	20433	3231
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.036960	10854	2093
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	40	40.140750	58593	2844
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.completeness_weak	40	40.077177	21129	6556
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.050917	15684	2802
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40	40.072030	17783	7547
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag	40	40.679203	316193	3187
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag2	40	0.015106	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Sig.svalP	40	0.003588	3	1	2	synth with cache (only 1: apply proj2_sig).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40	40.089421	29452	7712
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Sig.s2valP	40	1.707282	11448	144
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Sig.s2valP'	40	0.005250	1	1	0	synth with cache (only 1: by case : u ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig	40	0.009946	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig2	40	0.015756	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.089248	29007	4337
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40	40.058044	7888	1842
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.466078	208658	10368
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0.008942	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.073512	21221	7157
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	0.016678	6	4	2.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.288244	194	57	2.2.0.2.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: apply H; only 1: red in H0; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	0.033845	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.141885	10	2	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0.032827	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.033223	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.004471	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0.006043	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	40.139511	31577	1364
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.239702	92688	11096
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40	40.117785	37992	8954
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	1.522308	9842	133
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_pcan	40	4.107124	13844	749	3.31.35	synth with cache (only 1: intros Hfst Hsnd; only 1: rewrite -> Hfst; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40	40.057804	16283	2598
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.101585	36194	6557
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40	40.093139	36177	1335
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	1.192748	4586	163	75	synth with cache (only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.270616	164	41	0.6.2.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.068088	10	5	0.1.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40	40.083700	14395	4876
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40	40.120894	14151	2250
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	2.112255	687	415	0.0.0.0.0.0.0.4.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: intros; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.599056	191	102	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gt_lt_iff	40	40.034411	8507	2576
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.034702	8448	3159
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	40.063461	7416	6763
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.043302	13	6	4.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.026282	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.016818	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.101956	8504	1777
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gt_lt	40	3.173883	1508	327	4.2.0.11	synth with cache (only 1: destruct (le_gt_cases m n); only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff; only 1: apply N.gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	9.188667	15020	2964	1.0.0.0.0.0.21.0.1	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lt_gt	40	0.006528	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40	40.115951	35367	4676
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.union_rb	40	3.478984	2160	587	1.1.2.5.0.0.0.12	synth with cache (only 1: intuition_in; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: unfold elt in *; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.037597	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40	40.082019	23867	8351
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40	40.087960	29773	3653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40	40.048270	7746	2254
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40	40.154249	9565	3036
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.126821	40224	2920
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	2.372177	1376	403	0.0.0.9.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40	40.183917	38610	6523
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.lock	40	40.506011	224267	7898
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.075255	21528	5557
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.074765	23748	5903
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.150309	12	3	0.3	synth with cache (only 1: unlock; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_not_In	40	40.050871	5656	1878
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_nil	40	0.024130	4	2	2.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ge_le_iff	40	4.678264	1241	442	4.2.6	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_gt_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.086306	22099	7208
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	40	40.161826	57106	6979
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_decr	40	40.153867	41476	5890
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.double_twice	40	0.025840	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.055985	20	7	1.1.3	synth with cache (only 1: induct ltac:(n); only 1: trivial; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.unlock	40	3.797014	24859	311
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ge_le	40	3.139317	931	364	0.0.0.1.0.6.1	synth with cache (only 1: unfold le, min; only 1: case compare_spec; only 1: intuition; only 1: easy; only 1: intuition; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.le_ge	40	0.006453	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40	40.192242	77830	4422
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40	40.142826	46300	6894
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.043460	9	4	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.369477	151488	8339
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.008384	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40	40.617464	11890	2064
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.010682	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	0.034356	21	5	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.036961	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0.297102	10	2	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind	40	40.447881	167471	8246
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.042095	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rec	40	0.015207	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	40	40.059293	19871	3259
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.027247	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rect	40	0.033977	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0.097437	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.083704	16836	3058
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.023905	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0.007017	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.094167	118	15	4.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	40	0.018240	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.iffT_Transitive	40	0.020731	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	7.980924	3710	1087	0.0.0.0.8.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40	40.045233	5141	1455
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40	40.220957	82283	8012
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40	40.317840	129013	12803
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_greatest	40	40.097515	24059	4626
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40	40.079480	18630	5086
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.square_xI	40	40.156980	19533	4377
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_left	40	40.199351	50021	6967
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_right	40	0.028895	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gcd_nonneg	40	0.104632	44	17	1	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_refl	40	0.014483	4	1	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_even_0	40	0.335895	483	36	2.2.24	synth with cache (only 1: induction a; only 1: split; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_odd_0	40	0.008604	1	1	0	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40	40.034858	7805	2514
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	2.265291	2585	482	0.0.4.17	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.022491	8	4	2.0.1.1	synth with cache (only 1: red; only 1: intros y H2; only 1: apply Acc_intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40	40.078453	11297	3753
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_trans	40	3.174041	2149	448	0.0.3.12.1	synth with cache (only 1: destruct x; only 1: intro; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_sym	40	0.025036	4	3	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.020069	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40	40.063813	12011	4249
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.309923	104288	6143
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.031321	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.058873	15807	2869
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40	40.063611	17908	4284
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	2.273644	1321	202	0.7.2.3.9	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.039732	13192	1521
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.466505	275	44	13.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	40	40.079832	20310	8091
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40	40.101094	37033	4168
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	0.014775	7	2	3.2	synth with cache (only 1: apply max_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	7.205404	17764	2112	2.4.2.4.0.1.1.9.9	synth with cache (only 1: red; only 1: intro x; only 1: intro; only 1: destruct 1; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	0.087243	181	31	8.0.2	synth with cache (only 1: red; only 1: intros h1 h2; only 1: destruct h2).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0.006265	1	1	0	synth with cache (only 1: destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_right	40	6.117808	4749	1028	17.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	0.682147	640	191	1.4.1.2	synth with cache (only 1: intros B C H'; only 1: intro; only 1: left; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.011353	2	2	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.690057	1288	207	0.9.4.2.0	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40	40.062681	13893	2799
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40	40.113867	40433	6884
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.141234	19025	5801
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.075864	8726	1946
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	40	40.070258	18678	9162
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.176563	30311	871
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.282517	117094	7433
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	40.109796	27540	14288
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.334840	142200	7103
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.009353	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.506058	807	95	1.3.17	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40	40.077191	23348	3631
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canRL	40	0.128744	95	21	7.3	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40	40.082897	23360	7759
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Some_inj	40	0.478937	534	77	0.0.18	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.of_voidK	40	0.019514	17	4	0.7	synth with cache (only 1: intro H; only 1: destruct H).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.esymK	40	0.525916	1177	98	0.10.16.0	synth with cache (only 1: red; only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.etrans_id	40	0.101983	125	12	0.15	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.120698	144	14	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40	40.044406	10436	3582
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40	40.120457	15118	2087
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	19.992982	3601	1673	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.107196	15153	3294
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	3.764439	8869	374	7.48.24	synth with cache (only 1: intros Hfst Hsnd; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	40.030078	4888	1474
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.008047	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.012550	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip1	40	0.021339	5	4	0.0.1.0	synth with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip2	40	0.006857	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.028794	7	4	0.0.1.2	synth with cache (only 1: hnf; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0.006525	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0.008850	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_proper	40	0.952604	271	139	0.0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0.030027	7	1	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Normalize.flip_atom	40	0.009113	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_comm	40	16.644853	11137	2731	12.5.2.2	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.071617	18224	3387
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	40	40.126672	41293	10921
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.098557	30478	3953
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_ass	40	0.779030	233	132	1.0.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.106171	30618	6621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.087191	28696	3105
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.044643	7756	1640
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	3.638474	8318	389	3.29.52	synth with cache (only 1: intro; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40	40.267551	11067	2246
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_left	40	1.810820	508	275	1.0.3.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40	40.098674	21425	4522
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_right	40	0.544462	118	82	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40	40.093046	23798	4886
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.061187	17291	4993
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdiv_plus_distr	40	22.373990	7597	1066	1.1.0.2.13.10	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros a b; only 1: intros x y z; only 1: intro; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	6.340287	5698	523	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.042774	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.100479	30	14	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.035637	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.034491	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.221495	20885	3590
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_cons_eq	40	0.055108	9	6	1.0.0.0.2	synth with cache (only 1: simpl; only 1: intros Hnin; only 1: destruct (eq_dec x y); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_cons_neq	40	0.033869	3	3	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.188895	78675	2392
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.085454	21411	5963
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.128724	44917	6874
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	7.219608	1339	397	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	40.166802	36858	3403
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.021716	8	4	0.1.3.0	synth with cache (only 1: intro H; only 1: intro EQ; only 1: contradict ltac:(H); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0.013799	1	1	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0.011793	1	1	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0.107105	2	1	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.006712	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0.006887	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.006934	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0.015034	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.016462	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.006586	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0.006179	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0.005831	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.005299	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.008577	2	2	0.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.005031	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0.005110	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0.005207	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gtb_ltb	40	40.075460	21594	3317
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0.005473	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.locked_withE	40	40.459216	180598	7608
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.unlock_with	40	0.006512	2	1	1	synth with cache (only 1: by case : k ).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	0.023993	8	3	1.4.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.150394	59178	3612
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	38.688248	8071	1452	0.0.0.0.1.3.1.0.15	synth with cache (only 1: intro H; only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: apply Hf; only 1: auto; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.037682	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.349927	151068	7005
coq-tactician-stdlib.8.12.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40	40.257882	56804	4977
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.057267	16913	3183
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.342954	120596	5895
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rec_r	40	0.027282	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_rect_r	40	0.015691	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_congr	40	0.053641	9	7	2.0.1.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.036640	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40	40.149514	30584	3684
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40	40.075160	22212	4249
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.013360	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_JMeq	40	0.021163	2	2	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0.009102	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40	40.057585	13321	3011
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.146925	9	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.106539	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.144496	44293	9407
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.106612	6362	2577
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.021946	4	4	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	40	40.159359	37041	4023
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_succ_r_div2	40	40.218844	15687	3185
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40	40.033500	5742	1957
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	7.054413	2630	864	2.2.0.1.0.1.0.1.0.4.3	synth with cache (only 1: split; only 1: intro EQ; only 1: intuition; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40	40.039122	7404	4403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	37.921788	16320	2905	4.17.7	synth with cache (only 1: intros n m Hn; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	19.471584	3208	1052	0.0.0.6.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.223508	19	11	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	34.987995	122118	9673	1.2.3.0.36.1.3.8	synth with cache (only 1: red; only 1: intro; only 1: destruct 1; only 1: intro p; only 1: elim (Noone_in_empty x); only 1: red; only 1: destruct p; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40	40.122319	38527	5158
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_swap	40	6.653449	7158	848	0.10.0.0.0.0.0.17	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	40	40.081826	24551	3210
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	40	40.053668	16775	2557
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_odd_succ	40	7.637036	2311	694	1.0.0.0.0.0.0.3.0.3.1	synth with cache (only 1: nzsimpl; only 1: destruct n; only 1: now destruct a; only 1: destruct a as [| a]; only 1: intros _; only 1: simpl; only 1: trivial; only 1: discriminate || intros _; only 1: simpl; only 1: f_equal; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_even_succ	40	0.029602	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.testbit_neg_r	40	0.023962	5	1	4	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.049065	13511	3779
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	11.445205	75319	761
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_eq_dep	40	0.477927	194	44	1.0.3.2.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: apply eq_sigT_eq_dep; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40	40.061289	16036	3948
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.766143	1255	92	0.18.16	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.144034	50546	7796
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.153024	18599	4805
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.tl_nth_tl	40	1.922713	838	244	2.0.0.10	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	40.118226	6119	1347
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40	40.151931	32835	8210
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introF	40	40.186345	11325	681
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.115067	39766	6607
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40	40.029083	4406	555
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.015761	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.047056	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.Iftrue_inv	40	0.496229	852	107	1.0.1.14	synth with cache (only 1: intro H; only 1: destruct 1; only 1: intuition; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.Iffalse_inv	40	0.020790	7	6	0.0.0.1.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40	40.095644	19433	7076
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.105947	34440	3880
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40	40.050679	13294	3638
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.090618	4464	2529
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.flip_arrow	40	40.057940	4078	897
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_flip	40	0.017833	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40	40.062787	15179	2932
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.085635	25385	6716
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_flip_2	40	1.025196	252	64	3.1.6	synth with cache (only 1: compute; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40	40.059317	17991	1530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40	40.044787	10721	4127
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_true	40	8.165944	21949	1894	0.34.17	synth with cache (only 1: intro p; only 1: inversion 1; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_false	40	0.033359	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_or	40	0.021613	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.042021	10337	3080
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.269765	108563	5394
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40	40.222399	7827	2174
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	28.695855	3512	1338	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40	40.092642	17372	5505
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_rotate	40	40.075513	16016	5608
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.107821	25532	5872
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rdiv_minus_distr	40	40.074321	25181	1862
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40	40.078820	19449	8631
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_EM_T	40	0.038678	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_half_prf	40	0.006163	1	1	0	synth with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40	29.629098	14332	3176	1.3.0.3.13.1	synth with cache (only 1: intros n m p q H1 H2; only 1: rewrite mul_comm; only 1: apply (mul_lt_mono_pos_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: order'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.367894	119	43	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40	40.137761	15572	3080
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.321272	28868	4403
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec2	40	40.107177	42449	2813
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.173352	929	133	0.1.1.4.12	synth with cache (only 1: intros A P H; only 1: red; only 1: red; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	4.176079	10813	591	2.19.52	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_sum	40	5.249829	5947	1267	0.0.5.3.0.0.5.3.2	synth with cache (only 1: intros A B []; only 1: intros; only 1: left; only 1: inversion H; only 1: assumption; only 1: intros; only 1: right; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.008194	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	40	0.009597	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.over_rel	40	0.007200	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0.008183	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0.006473	1	1	0	synth with cache (only 1: now unfold Over_rel).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_id_left	40	0.008327	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_id_right	40	0.009954	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_assoc	40	0.017859	10	4	0.6	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.flip_flip	40	0.008372	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.prod_uncurry_curry	40	0.012224	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40	40.083578	22426	5177
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	40	40.152428	34746	2703
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	40	7.241254	1726	400	0.2.2.9.1	synth with cache (only 1: intros; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_not_not	40	3.320134	9062	1075	7.4.0.0.0.13.0	synth with cache (only 1: intro A; only 1: intro H1; only 1: unfold not; only 1: intro H; only 1: elim H1; only 1: trivial; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_True	40	0.015254	15	4	2.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_False	40	0.008471	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.geb_leb	40	40.059226	15435	3424
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.nary_congruence	40	40.145063	48458	6871
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40	40.160147	61823	4283
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.114400	194	31	2.8	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	40	0.007748	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40	40.170246	69533	3260
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	40	0.005671	1	1	0	synth with cache (only 1: by case : eqPQ ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	40	0.024104	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0.007785	1	1	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_or	40	1.090417	1506	344	1.0.17	synth with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_and	40	0.028547	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_not	40	0.015565	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_imp	40	0.116824	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_iff	40	0.031069	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_not	40	0.008104	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_or	40	0.009570	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.075621	4829	1818
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_and	40	0.021033	3	2	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp	40	0.019999	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.imp_simp	40	0.015301	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_iff	40	0.047985	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_true_iff	40	0.026734	38	9	8	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_false_iff	40	0.004157	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_not_iff	40	0.012457	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.contrapositive	40	0.037524	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_l_iff_1	40	0.020096	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_l_iff_2	40	0.018601	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_r_iff_1	40	0.020645	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.or_not_r_iff_2	40	0.020061	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.imp_not_l	40	0.021390	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_or_iff	40	0.026741	16	5	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_and_iff	40	0.009666	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_iff	40	0.029329	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.068159	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	10.632372	4359	999	0.0.6.4.4.3.0.0.0.3.0.15	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40	40.118488	3634	1227
coq-tactician-stdlib.8.12.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40	40.224608	55068	6695
coq-tactician-stdlib.8.12.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.043075	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	40.269910	111139	7126
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.046901	48	10	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40	40.084365	25850	3840
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40	40.096440	10649	2959
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	9.240215	5874	1162	1.1.0.1.0.0.0.4.2.1.2.3	synth with cache (only 1: unfold Add; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40	40.351155	131795	7711
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.forall_hprop	40	40.339667	102728	8153
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	11.976887	7570	1724	1.2.1.0.0.0.5.12.0	synth with cache (only 1: intro X; only 1: split; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: red; only 1: simpl; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	13.246198	3294	1126	0.0.0.5.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.779815	2656	193	2.12.18.4	synth with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	35.804620	76036	9579	0.21.2.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40	40.106303	10642	2175
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.421684	242	87	0.1.2.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.018677	5	3	1.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.014866	3	3	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.062854	11	8	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.433338	277	70	1.1.2.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.069643	15204	3517
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40	40.348491	152619	8151
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.106903	22867	3828
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	4.117449	3423	943	4.0.0.0.13.1.2.1.8	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40	40.063289	15712	3996
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_succ	40	40.249235	46313	4389
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40	40.099174	30633	3523
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	6.901578	11641	1234	0.8.2.1.17.0.2.13	synth with cache (only 1: red; only 1: split; only 1: reflexivity; only 1: intro p; only 1: destruct p; only 1: simpl in *; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_unit	40	16.144306	7414	2041	0.12.0.0.0.0.1.9	synth with cache (only 1: induction l; only 1: simpl; only 1: intros Hnin; only 1: auto; only 1: intros H; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.047346	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	40.837667	406480	3146
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_succ_r	40	40.139347	22635	3259
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	40.053607	13694	4903
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.436970	196	67	1.2.1.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.012030	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.abstract_context	40	13.599097	109879	1422	1.109.94	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.449695	477	79	0.6.1.5.3	synth with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.016948	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40	40.082362	17413	5205
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40	40.142000	50098	7707
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40	40.174781	29044	3020
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	26.793112	11234	3857	0.0.4.1.5.0.1.5.0	synth with cache (only 1: intros a b Ha Hb; only 1: intuition; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: exfalso; only 1: order; only 1: apply mod_small; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.101549	25118	5940
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	0.180872	72	20	4.0.0.1	synth with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	5.458447	2912	634	0.0.2.0.9.8	synth with cache (only 1: destruct (lt_total n m); only 1: solve_max; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: intuition; only 1: now apply max_l; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0.035849	10	3	1	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.085905	20070	4685
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Newman	40	40.061680	17677	6583
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.mkapp2	40	0.057591	51	8	1.9	synth with cache (only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introN	40	40.128957	18760	1047
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.mkapp	40	0.014901	8	2	6.0	synth with cache (only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.mkrel	40	0.015502	7	2	5.0	synth with cache (only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.118988	46904	2673
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0.009375	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0.020542	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.204415	9	4	1.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.016095	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	8.159419	23900	1411	0.59.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	40.069656	15586	8393
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	1.044200	1885	184	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	40.086084	17805	2360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40	40.078770	23835	3942
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	26.695823	8180	1205	4.4.4.12.2	synth with cache (only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.and_morph	40	5.896736	9513	1864	4.1.0.0.1.2.0.0.0.0.7	synth with cache (only 1: intro H; only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.StrictProp.Spr1_inj	40	3.689703	20277	690	1.47.17.34	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.or_morph	40	0.142060	6	4	0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.impl_morph	40	0.017667	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.iff_morph	40	0.034309	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.not_morph	40	0.012784	2	2	0.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40	40.343026	7163	1696
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.eq_iff	40	0.048435	61	22	0.0.1.5	synth with cache (only 1: intros A B []; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyClasses.rew_iff	40	0.009129	5	2	1.2	synth with cache (only 1: intro p; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_left	40	1.781450	2154	443	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.101303	29398	9606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40	40.089146	29320	1107
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	7.889774	18230	1286	4.39.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.304014	198	31	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40	40.119114	6607	2415
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40	40.101828	30651	4320
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_congr	40	40.066374	13628	5540
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	1.696639	2165	256	0.10.0.0.14.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.024067	3	3	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.021813	10	3	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	40.075750	8800	2676
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.247457	90615	8329
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_right	40	6.309274	4267	2006	1.10.1.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	40	40.210576	76588	8528
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40	40.298231	121076	4458
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	2.349649	2397	316	0.11.0.0.15.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.164381	17	16	1.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f	40	0.156729	204	37	0.11.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.016794	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.063254	27	9	1.1.1.2	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.050191	10393	2406
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.prod_curry_uncurry	40	40.428391	184578	6841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	2.953675	795	393	1.2.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.317776	126879	7939
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	40.177176	24883	3886
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gtb_lt	40	40.063631	14830	4321
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40	40.194743	75599	4385
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40	40.229424	99317	2950
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40	40.046191	8395	2389
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_functional_relation	40	40.146751	51999	6108
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	40.076183	21673	3337
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40	40.088741	5787	1947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40	40.083886	22613	2883
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.sumbool_of_bool	40	0.882459	2487	202	18.0.15.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.bool_eq_rec	40	0.058044	45	12	1.1.4	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.bool_eq_ind	40	0.016291	3	3	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40	40.067213	9807	1665
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	40	40.414139	177218	6703
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40	40.123273	40849	7342
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	40.049287	8793	2996
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.372623	158	55	1.0.0.0.0.2	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.and_hprop	40	40.223599	72281	6291
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.052507	13128	3369
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.026739	9	5	2.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.087663	33	10	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.008409	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0.009360	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.impl_hprop	40	0.053049	4	4	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.125170	54	26	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.023738	5	5	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.false_hprop	40	0.018343	2	2	0.0	synth with cache (only 1: intros p q; only 1: destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.true_hprop	40	0.038741	8	3	4.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.not_hprop	40	0.070470	7	5	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40	40.043769	4764	1825
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.058884	9	6	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	40.108352	29772	8403
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.015503	3	3	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40	40.042588	9909	2289
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.037450	4	3	0.1.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.104760	15849	8128
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.306547	96	61	0.2.0.1.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.088090	14	8	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.013041	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	0.013620	3	2	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.087368	19194	4082
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.711045	1166	193	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.pred_Sn	40	0.020045	8	5	2.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: split; only 1: simpl; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.not_eq_S	40	0.055263	45	14	0.8	synth with cache (only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.O_S	40	0.083456	82	21	10	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.n_Sn	40	0.028943	23	8	3.1.2	synth with cache (only 1: induction n; only 1: discriminate; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_O	40	0.086093	71	21	0.1.0.7	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	11.235132	6168	1224	0.0.1.1.0.3.1.3.0.1.7.8	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_O_n	40	0.023819	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	40.126275	35376	12215
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_Sm	40	0.076098	36	14	1.0.1.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_Sn_m	40	0.028843	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_O	40	0.022510	6	5	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.479654	149	47	5.2.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: intro p; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.033922	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.068804	19	6	1.3.0	synth with cache (only 1: compute; only 1: destruct 1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40	40.091031	26285	3364
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	3.181421	485	273	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_succ_r	40	40.231238	33713	6878
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_involutive	40	40.136102	38600	3850
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.bool_dec	40	40.228335	84370	7114
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.diff_true_false	40	0.008638	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.diff_false_true	40	0.008118	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	1.578978	319	125	0.0.0.0.6	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40	40.386517	128073	3846
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_succ_r	40	40.299979	19894	1720
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40	40.382856	168559	7018
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.907667	3412	452	1.1.14.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_true_is_false	40	0.141359	135	22	2.7.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_is_true	40	0.021780	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	10.124870	2410	772	0.0.0.1.0.6.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_true_iff_false	40	0.718163	330	108	0.0.0.5.4	synth with cache (only 1: intro A; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_iff_true	40	0.026287	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40	40.050156	12266	3426
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.le_implb	40	1.298192	653	207	1.0.1.0.9	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.compare_spec	40	0.041251	7	5	2.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_subst	40	0.015869	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_reflx	40	0.011898	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_prop	40	0.008599	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_true_iff	40	0.029459	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_false_iff	40	0.035688	6	5	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_orb	40	0.038995	17	7	0.0.1.0.2	synth with cache (only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_andb	40	0.010228	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_involutive	40	0.008451	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_involutive_reverse	40	0.007727	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_sym	40	0.009497	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.009017	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_negb1	40	0.006567	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_negb2	40	0.006969	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.if_negb	40	0.007606	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	20.350235	22546	2872	0.1.5.27.1.5.3.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_true_iff	40	0.016078	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_false_iff	40	0.016669	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_iff	40	0.039515	8	5	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_iff	40	0.044617	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.037413	17	7	0.1.1.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_elim	40	0.027686	5	4	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_prop	40	0.048689	12	8	0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_intro	40	0.158746	40	21	1.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_intro	40	0.030285	12	5	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_elim	40	0.161424	36	20	0.0.3.1	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_diag	40	0.008228	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_r	40	0.006962	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_l	40	0.005176	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_r	40	0.006472	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_l	40	0.006255	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_negb_r	40	0.006502	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_negb_l	40	0.006626	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40	40.049246	12947	4865
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_comm	40	0.009940	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_assoc	40	0.013973	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_iff	40	0.035858	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_iff	40	0.038366	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_eq	40	0.104934	19	13	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40	40.055158	13377	4863
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	40.093240	31792	3537
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_intro1	40	0.051616	9	8	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_intro2	40	0.022224	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	40.061148	16316	4289
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_plus	40	40.075949	19086	3534
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_r	40	0.010304	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_l	40	0.006747	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_diag	40	0.006648	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_r	40	0.006993	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_l	40	0.006485	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_elim	40	0.033449	13	5	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_negb_r	40	0.005321	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_negb_l	40	0.006654	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_comm	40	0.008401	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_assoc	40	0.019230	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.013716	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.014177	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_andb_distrib_r	40	0.069768	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_andb_distrib_l	40	0.012860	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absorption_andb	40	0.008702	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absorption_orb	40	0.009511	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_true_iff	40	0.034966	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_false_iff	40	0.041336	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_orb	40	0.009013	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_negb_orb	40	0.007589	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_true_r	40	0.007008	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_false_r	40	0.006496	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_true_l	40	0.008860	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_false_l	40	0.008074	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_same	40	0.009363	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_contrapositive	40	0.009180	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_negb	40	0.009277	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_curry	40	0.013770	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_andb_distrib_r	40	0.015419	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_orb_distrib_r	40	0.012822	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.implb_orb_distrib_l	40	0.013047	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_r	40	0.008332	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_l	40	0.009368	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_r	40	0.007225	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.106662	17478	5357
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	7.384571	17145	1084	0.5.10.45	synth with cache (only 1: intro p; only 1: red; only 1: destruct p; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_l	40	0.141033	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	0.030254	18	4	1.6	synth with cache (only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_nilpotent	40	0.006378	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_comm	40	0.007483	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.013418	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_eq	40	0.010958	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_l_r_1	40	0.028090	10	3	5.0	synth with cache (only 1: intros; only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_l_r_2	40	0.016555	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.016277	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.017702	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_xorb_l	40	0.009635	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_xorb_r	40	0.026723	5	5	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_negb_negb	40	0.008633	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.048912	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_iff_eq	40	0.173381	65	27	2.2.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.014211	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_not_negb	40	0.011379	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.019292	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_true	40	0.014185	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.trans_eq_bool	40	0.014119	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.015744	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_left	40	0.010276	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.013947	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_refl	40	0.007271	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introNf	40	40.373521	14482	735
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_eq	40	0.031081	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_prop_elim	40	1.566135	1128	340	0.0.8.0.8	synth with cache (only 1: intros n m; only 1: intros; only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_prop_intro	40	0.078563	37	13	7.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_prop_intro	40	0.022947	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_prop_elim	40	0.026303	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_intro	40	0.022847	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.019836	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_elim	40	0.012734	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_intro	40	0.013540	3	2	1.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_classical	40	0.011828	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.014520	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_if	40	0.012997	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_if	40	0.006672	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_lazy_alt	40	0.009604	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_lazy_alt	40	0.004971	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40	40.220000	72962	6493
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.047537	14003	2550
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	40.104115	26148	4450
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	6.399747	2173	764	0.0.0.6.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.PartialOrder_proper	40	40.055535	2267	623
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.358214	75	45	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.030083	8	5	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0.013536	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.031981	8	5	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.064914	12	7	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.013890	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.133330	18	11	2	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_iff	40	2.941118	1851	372	3.0.1.0.2.12	synth with cache (only 1: red; only 1: intros A B []; only 1: intuition; only 1: repeat split; only 1: intuition; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.iff_reflect	40	0.034599	13	4	2.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_dec	40	0.023314	7	4	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_spec	40	0.027191	6	5	1.0.0.0.0	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40	40.188312	8149	1701
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.318059	135056	7423
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.connectives.sumbool_and	40	25.735116	90915	6342	0.0.1.1.0.11.0.0.0.7.24.21	synth with cache (only 1: destruct H2; only 1: elim H1; only 1: left; only 1: split; only 1: assumption; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.connectives.sumbool_or	40	0.031874	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.connectives.sumbool_not	40	0.028003	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT_eta	40	1.356123	4498	201	0.59	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig_eta	40	0.017689	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2_eta	40	0.021872	3	2	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2_eta	40	0.019404	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.exists_to_inhabited_sig	40	0.361328	570	66	0.0.2.10.4	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	40.104804	30106	9552
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40	40.084475	24965	3795
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.274920	5720	1370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40	40.024102	5175	1444
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_perm_left	40	40.072345	14879	5260
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	3.441845	2075	786	0.0.0.0.0.2.0.0.0.0.2.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40	40.066264	14742	7181
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	7.077415	44275	929	0.0.0.68.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.035142	4	4	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40	40.280639	112158	5472
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.599418	279261	4769
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40	40.039084	10272	1923
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40	40.140531	15429	4690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.040644	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.153300	53289	8520
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40	40.167744	23224	4299
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.geb_le	40	40.049495	10614	3851
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	40	40.268102	108837	5480
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.034291	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_left	40	0.019073	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.305825	129070	3643
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40	40.187490	78416	2782
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	40	40.074474	22448	2005
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.064949	15143	3551
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.030502	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40	40.086284	8259	1952
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.050092	14292	2572
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.105421	74	13	0.8.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40	40.025522	2544	1015
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.103411	32596	8466
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40	40.090512	24097	4761
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hprop	40	40.322752	50951	3898
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.star_monotone	40	11.435982	5823	2681	0.0.5.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.of_bits_to_bits	40	40.436546	182654	2139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.027705	6181	2069
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.036084	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	8.083351	2754	989	0.0.0.3.2.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.034937	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.192515	36	21	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.042030	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.051442	11303	3129
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40	40.156292	53265	6270
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.891860	471	190	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.207053	75146	9293
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_Sm	40	40.202165	77457	8541
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	4.618013	2324	742	7.7.1	synth with cache (only 1: intros x y z; only 1: unfold Add; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40	40.123026	14188	4869
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.042898	9676	2974
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.Acc_inv	40	0.091582	35	14	2.4.0	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_add	40	40.090682	26745	5668
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_eq_app	40	40.100427	27599	5020
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	14.179200	6189	877	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40	40.087086	9705	3243
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40	40.120472	34770	3025
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.111369	15724	3730
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	2.037427	305	151	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	6.448658	2251	660	0.2.0.6.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40	40.114649	16891	4369
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.077783	9742	1897
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	40	40.058700	12391	5218
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_fst	40	0.674159	459	141	1.1.6.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.081028	25346	7171
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_left	40	39.594135	111199	8395	2.41.0.7.0.10.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: reflexivity || destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40	40.085882	23402	4651
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.011128	3	2	1.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_right	40	0.021748	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.012025	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.010857	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.026998	13	6	0.0.0.0.1	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.023486	20	5	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.014279	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	4.455902	1350	485	0.0.4.1.0.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rect_r	40	0.015023	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.EqSt_reflex	40	40.176709	35710	3785
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Conjunction.proj1	40	0.003609	0	1
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Conjunction.proj2	40	0.004132	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_refl	40	0.003518	2	1
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.017559	34	12	2.2.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.005060	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_iff_compat_l	40	0.134150	639	178	2.0.2.0.2.0.1.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_iff_compat_r	40	0.094444	257	102	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_l	40	0.203931	1035	124
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_r	40	0.513373	1363	363	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.068573	11087	3526
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.162395	67505	2942
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_l	40	0.232140	947	107	9.9.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.945120	2842	579	10.10.0.9	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introTn	40	40.210459	20813	1153
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.not_iff_compat	40	0.010632	6	4	1.1.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.neg_false	40	0.270672	823	149	1.1.11.0.1.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40	40.223518	85977	8097
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.043495	10968	1166
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40	40.069015	16438	5115
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.557666	455	105	0.0.0.13.0	synth with cache (only 1: intros; only 1: intro x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	40	40.146762	4158	473
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.sym_EqSt	40
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40	40.058706	16934	3068
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.068686	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.053354	4	3	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40	40.115738	37166	7214
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.047938	41	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40	40.123699	8193	1476
coq-tactician-stdlib.8.12.dev	Coq.Bool.Sumbool.bool_of_sumbool	40	40.540939	229999	8747
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40	40.053386	11638	4092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	19.905435	7350	1199	0.12.14	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40	40.060794	4978	1428
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.uniset_twist1	40	40.069825	14610	5395
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40	40.267703	5642	1466
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	28.177530	5696	3395	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40	40.061826	13065	7176
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_length	40	1.061349	286	150	1.1.0.0.0.0.0.0.2	synth with cache (only 1: induction l as [| y l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: rewrite <- plus_n_Sm, plus_n_O; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	40	40.416614	182538	4660
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried	40	0.028958	3	3	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.031660	2	2	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_can	40	40.312430	125859	4637
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	40	40.849440	403404	4537
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.015452	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.015795	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	40	40.151981	12573	6870
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gtb_spec	40	40.099358	8474	2278
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.290631	113957	9991
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.perm_right	40	40.198551	79754	6043
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	4.451154	1349	594	0.0.5.0.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40	40.170305	63780	4082
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40	40.065405	17719	3828
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.291979	115140	9342
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.386650	162	63	1.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40	40.067312	11254	3132
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.028571	8	3	5.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.027321	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.029250	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.024874	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.029074	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0.039367	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.035406	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.119209	21	13	1.0.0.2.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: now transitivity y).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40	40.106827	17956	3802
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40	40.080757	23327	4741
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40	40.050809	12763	2360
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40	4.413151	42462	409
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.096097	26367	4214
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	40	9.002682	10940	924	0.43.0	synth with cache (only 1: destruct p, q; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40	40.100494	32379	8206
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.eq_trans_cancel	40	40.116891	35040	3325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	31.646544	8983	3639	0.0.6.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	14.023205	4298	1067	0.5.13.0	synth with cache (only 1: intros n m p; only 1: revert n m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.to_bits_of_bits	40	40.049023	11627	1012
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.043272	9727	2018
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.075530	12	5	0.2.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40	40.176417	58310	9279
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40	40.211974	79993	9425
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_pred	40	40.137908	41868	10826
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	7.129422	1021	367	2.3.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.021021	6	3	0.3.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	40.061147	16125	5353
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40	40.078542	20663	3552
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	40	40.427228	184507	4151
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_induction	40	0.031757	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.033890	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_ind	40	40.270244	52970	6309
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	40	5.826675	4917	422	0.9.21	synth with cache (only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	1.029711	967	74	1.29	synth with cache (only 1: intros f [x]; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.in_rev	40	40.074817	18447	4868
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_high	40	40.261567	16295	4776
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40	40.456270	98335	3030
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.geb_spec	40	16.185386	2691	794	1.0.1.0.0.0.7.6	synth with cache (only 1: rewrite <- (succ_pred m); only 1: rewrite <- (succ_pred m); only 1: rewrite geb_leb; only 1: case leb_spec0; only 1: constructor; only 1: order; only 1: constructor; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40	40.041550	10211	2214
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.073031	13541	3474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.053409	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sig_snd	40	40.059078	13270	4886
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	12.309047	3650	1519	0.0.0.5.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: apply divide_refl; only 1: auto with relations; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.058267	16369	3489
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.060956	11596	2708
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_prop	40	40.489196	209190	14025
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	1.020796	143	58	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40	40.075158	13963	3490
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.300267	131593	5464
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introFn	40	40.180929	14527	548
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	3.368432	6143	408	23.1.6.28	synth with cache (only 1: intro x; only 1: destruct 1 as (eq_qp, H); only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	13.041821	4253	1191	1.2.4.9	synth with cache (only 1: intros z Base Step; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_l	40	40.459151	204744	15787
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.067380	18	8	0.0.4.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	15.490757	93372	610
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.011823	2	2	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.043496	11	9	2.0.0.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_true_intro	40	4.738929	16668	1297	0.0.4.17.28	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40	40.063592	7670	3328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.067690	7535	1854
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40	40.178222	65779	6119
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_ind_r	40	1.092086	5830	340	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_rec_r	40	0.011280	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_rect_r	40	0.012607	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	40	40.086927	10439	917
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.surjective_pairing	40	0.025890	20	6	0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.trans_EqSt	40	40.069186	9759	4106
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40	40.047807	12529	4159
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.906112	802	348	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40	40.218779	87396	9499
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40	40.108667	18985	4378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	7.904374	1827	889	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	24.539208	7926	1804	0.24	synth with cache (only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.046450	9892	3453
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_r	40	11.080732	16429	3904	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: apply Hr; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_comm	40	0.117527	72	48	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40	40.120672	6985	2036
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.uniset_twist2	40	40.070165	14532	5285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40	13.978790	5956	1525	3.7.0.4.5.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with (a mod b); only 1: now apply mod_always_pos; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.073349	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40	40.335978	7423	2446
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_nth	40	40.074837	22264	4149
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimT	40	40.304331	55353	1448
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40	40.285887	112222	4000
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	1.575727	1907	279	9.4.1.5	synth with cache (only 1: simpl; only 1: induction l; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	40.128317	19326	4636
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.perm_left	40	40.051278	10880	6468
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40	40.975847	471919	4707
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	40.078281	14512	3938
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40	40.125307	42158	5619
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40	1.220039	10557	138
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40	40.260899	92286	8148
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40	40.092000	12071	2862
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40	40.058652	11438	1805
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40	40.109904	12014	3364
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	40.985247	451081	4336
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_invariant	40	40.183456	18854	2662
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40	1.220480	10557	138
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Lemma1	40	40.078497	21496	9093
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hOneType	40	40.124120	37406	3667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	40.034264	7593	1492
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	16.727362	3701	1312	3.1.1.6.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.296991	70	19	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.024665	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.137961	46441	9706
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_S_n	40	40.267097	100065	14433
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_0_n	40	0.011574	6	3	0.1.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_n_S	40	0.036522	25	10	1.1.0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.408323	194	97	0.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	40.076167	22540	5905
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.024465	10	4	0.1.1	synth with cache (only 1: intro; only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_case	40	0.623493	1010	140	1.0.8.10	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40	40.144892	14314	1340
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_double_ind	40	1.615557	3110	455	1.1.17.1.1.1	synth with cache (only 1: induction n; only 1: intro p; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pow_1_r	40	40.165433	36953	4817
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	40.151524	37405	4272
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	40.230291	93130	4959
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.196264	67429	3478
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_append_rev	40	40.092207	24294	4507
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_nil	40	0.010068	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_cons	40	0.055248	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: intro y; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.266967	21171	3467
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_spec	40	0.012062	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40	40.319358	34604	2783
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.073708	16419	2504
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40	40.045537	9773	1737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.129223	7072	3028
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40	40.056945	12645	3951
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40	40.348082	4995	796
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_reg_r	40	0.653364	257	75	0.11	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.081607	12421	3881
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	40.174326	64808	8186
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	19.416799	7870	1681	11.0.2.2.14	synth with cache (only 1: compute; only 1: intros a n m H; only 1: revert a m; only 1: intros m Hm; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.222377	23030	1189
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.300776	114724	6277
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_alt	40	40.194761	32073	5620
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.086667	18605	6312
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40	40.110868	36459	2848
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40	40.047226	7473	1859
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	40	26.400057	6605	3646	0.8.5.1.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40	40.102730	32216	7823
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	40	40.063841	16070	2217
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.injective_projections	40	40.307850	114287	8889
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.eqst_ntheq	40	40.088080	10284	6087
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	6.330304	1728	266	0.0.1.0.0.0.0.1.26	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: now f_equal; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_diag	40	0.135036	4	3	0.0.1	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40	40.068310	4866	1509
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.compare_opp	40	1.330393	462	192	0.0.1.0.1.1.0.2.0.0.0.0.0.0.4	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.301994	126419	9785
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.020132	18	5	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.198571	7392	1353
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40	40.044012	10562	2601
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	40.069384	10609	1854
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.078969	9262	2417
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.treesort_twist1	40	40.061938	12521	4925
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_assoc	40	40.268077	105819	10617
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40	40.075303	11945	2084
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40	40.192234	10651	5049
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimN	40	40.185170	29082	1235
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Bijections.bij_inj	40	40.326330	138812	8666
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	15.345127	45380	2294	0.4.21.37.1.10	synth with cache (only 1: red; only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: destruct h2; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	0.451423	496	90	11.0.0.0	synth with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.177844	69947	4670
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_cons	40	0.013982	7	2	1.4	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.205459	16310	5716
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	40.057380	14655	3380
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	12.604990	4683	1216	0.0.0.0.0.1.11	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40	40.709706	339291	3076
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimNf	40	40.448312	41614	1214
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40	40.218700	82663	7309
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	4.115995	6184	861	2.8.0.2.6.3	synth with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40	40.078875	6738	1333
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40	40.063663	16961	2406
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.934702	820	110	2.17.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mul_reg_l	40	30.245716	16749	2589	3.2.30	synth with cache (only 1: destruct (min_spec n m); only 1: apply mul_cancel_l; only 1: apply mul_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	10.468918	861	320	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pow_succ_r	40	40.140869	19778	4912
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hprop_hprop	40	40.109188	28755	5074
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40	40.128213	52591	1781
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.032526	8	3	0.5.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.048261	10006	2369
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.in_map	40	8.880816	5797	1420	1.5.0.0.4.0.0.0.4	synth with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: intros x Hin; only 1: firstorder; only 1: simpl; only 1: left; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40	40.111698	32883	9997
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.list_eq_dec	40	15.365602	9473	1451	25	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.096226	28550	7744
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0.010553	1	1	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.014872	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_length	40	0.094327	13	10	0.0.0.1.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.096709	30733	3095
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.652961	315	113	0.0.1.0.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.277259	68	36	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.square_spec	40	40.075381	20528	4607
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_nth	40	1.181081	520	138	0.0.6.0.0.0.1.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.max_l	40	40.168280	52313	10819
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	40	40.154862	19505	5110
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40	40.072008	20258	2362
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.eq_sigT_rect	40	40.326541	125383	3035
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT.rew_sigT	40	0.029928	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.210137	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40	40.100869	27459	1728
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_sig_uncurried	40	0.062028	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_app	40	40.112439	32733	4371
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.309892	35149	2620
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40	40.111254	28376	3329
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_app	40	0.610202	155	75	1.0.0.0.0.2.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.max_r	40	3.114692	1866	794	0.0.0.0.5.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_last	40	0.493431	107	51	3.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40	40.018142	3180	1559
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.031053	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.024943	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_l	40	1.745302	840	410	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_r	40	2.184188	1008	493	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40	40.096964	5517	2613
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40	40.044005	11759	2994
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.771134	651	158	2.3.1.0.0.7	synth with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	12.354506	2803	727	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	40.380640	5247	1081
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_plus	40	0.430407	230	76	0.0.1.3.1.0.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.116394	8100	1706
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.195962	68713	9743
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.065846	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	1.658790	447	117	2.10.0	synth with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	12.365938	14869	3189	0.0.0.0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40	40.086545	26863	4817
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimTn	40	40.254129	41039	1877
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.280760	606	62	0.0.5.17	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.292132	225	17	0.20	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.in_concat	40	40.198900	31571	6466
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40	40.107429	27150	5980
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	0.594300	1215	119	0.0.8.12.12	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.011324	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	0.015982	3	1	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.103135	72	23	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_nil	40	0.956559	435	155	4.3.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.in_map_iff	40	17.257992	10651	2433	0.0.19.3.2.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: easy; only 1: destruct 1; only 1: tauto; only 1: firstorder; only 1: destruct H0; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40	40.073696	21602	3437
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40	40.054931	12366	2485
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.twist	40	40.048318	11025	5435
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.338749	132600	11953
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.rew_pair	40	0.013982	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.ntheq_eqst	40	40.135574	26317	5222
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.treesort_twist2	40	34.855362	11675	4302	2.1.1.1.4.0.0.0.0.0.1	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_sym; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_left; only 1: apply union_perm_left; only 1: apply union_ass).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_compare_mono_l	40	40.077515	23147	2991
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.248239	10303	1866
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimFn	40	40.406460	51429	1458
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.028785	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40	40.054116	15176	3718
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.042075	9929	2384
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40	40.079733	23394	3132
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40	40.115246	9723	1895
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_cancel_l	40	40.255661	96004	10166
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	12.007820	5820	1273	0.9.1.2.0.0.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_comm	40	0.352540	337	133	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introP	40	40.141724	27040	1037
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Bijections.bij_can_sym	40	40.377685	157785	4205
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40	40.084461	10630	3560
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.210388	8803	3418
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40	40.089774	15494	5187
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40	40.075433	26437	2590
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40	40.267417	118997	2033
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.205176	51591	1708
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.210601	81465	10256
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.344821	484	51	2.14.0.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0.007102	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	40	0.003343	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40	40.072765	22331	3962
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40	40.088204	25141	3538
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.198512	76863	8461
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	0.038917	16	7	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.f_eq_dep	40	0.029013	12	4	1.2	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.079838	28	13	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.010023	2	2	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_mod_pow2	40	40.048524	13544	851
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.054026	13039	4111
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40	40.204688	14179	2906
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.605577	168	61	0.0.4.0.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: now try order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.decP	40	0.212613	143	11	17	synth with cache (only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP	40	0.144660	77	7	13	synth with cache (only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	6.984382	946	422	0.0.4.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hprop_hset	40	40.112446	33990	4589
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40	40.137781	49727	3026
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.046262	13	5	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.157088	61	19	0.3.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.id	40	0.011046	2	1	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj	40	0.008673	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.020262	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.is_pos	40	0.015283	5	1	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0.032595	8	1	7	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.007958	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.179309	4	2	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.016815	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.015625	3	2	1.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.014749	2	2	0.0	synth with cache (only 1: simpl; only 1: now rewrite Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40	40.056907	14559	3291
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40	40.071075	20125	5903
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	40	40.167912	25237	7099
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_nth_error	40	40.264281	23665	3544
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.043092	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	40.246926	14638	4873
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.128437	21792	2296
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_sig_rect	40	40.263786	112416	3071
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.391631	141703	3406
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	6.707214	1033	425	0.1.0.0.0.1.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.272326	24	15	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lxor_spec	40	40.357655	60884	2199
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40	40.079661	16322	3732
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_rev	40	40.088280	23964	3891
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.027991	2955	1384
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	2.050382	899	239	6.4.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.rew_sig	40	0.024220	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_cons	40	33.425415	17098	3259	4.6.0.1.1.0.4.0.15	synth with cache (only 1: destruct l as [| x xs]; only 1: intros [| ] ? Heq; only 1: firstorder  discriminate; only 1: simpl in *; only 1: easy; only 1: intros; only 1: simpl in *; only 1: injection H as [=H H0]; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.flat_map_concat_map	40	0.172087	57	22	0.0.0.0.2.1	synth with cache (only 1: intros l1; only 1: induction l; only 1: reflexivity || discriminate; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40	40.128503	6394	2807
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.053249	13463	3894
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.246674	4547	1226
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_cancel_r	40	40.219596	81644	12570
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.iff_and	40	0.008505	3	2	1.0	synth with cache (only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.iff_to_and	40	0.269840	205	87	1.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.inst	40	0.021035	26	7	5.2	synth with cache (only 1: intro H1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.gen	40	0.007813	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.absurd	40	0.358362	485	144	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.008379	6	2	1.3	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.011313	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	40.049459	10450	2283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40	40.062162	6782	1531
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.009178	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.009048	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40	40.395435	172614	9546
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.094617	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	0.586704	1562	126	29.1	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.012084	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.010594	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.012030	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.012114	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.sumboolP	40	40.214366	41287	1095
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40	40.079795	20675	3675
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.203819	74840	9558
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	1.337024	3603	217	2.46	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	4.538413	659	287	0.9.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	2.061275	9662	278
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.018333	5	3	0.1.1	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_r	40	0.011051	3	2	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_l	40	0.014361	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal2	40	0.142732	13	7	1.0.1.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 1; only 1: destruct 1; only 1: repeat split).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal3	40	0.017618	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal4	40	0.156302	17	11	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal5	40	0.025020	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_app	40	40.126968	44473	5563
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal_compose	40	0.362088	471	87	0.6.4.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_l	40	0.008606	5	2	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.007951	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_involutive	40	0.008461	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_sym_inv_l	40	0.008497	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_sym_inv_r	40	0.008886	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_assoc	40	0.053777	41	14	0.2.3.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.071196	8360	2358
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_map	40	0.030276	19	7	0.1.5	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40	40.138068	45961	3004
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.comparison_eq_stable	40	40.437060	189170	14980
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompOpp_involutive	40	0.017458	6	5	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40	40.073080	17412	4335
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	10.407895	3453	760	0.0.1.0.15.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.131392	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	0.411811	190	30	5.5.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.067034	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_map	40	0.047394	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompOpp_inj	40	1.622730	2252	577	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_ones	40	40.107042	36355	2981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40	40.237258	6026	1112
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add	40	40.177646	6722	2581
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.314678	120417	3953
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.144909	53716	4173
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40	40.041319	10989	2078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40	40.031982	7016	1401
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.impliesP	40	0.998580	2552	149	5.45	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.184986	51	16	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.229736	77	21	0.7.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	5.872716	557	242	5.4.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40	40.066254	17458	3241
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40	40.056887	6886	1706
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_assoc	40	40.351049	142592	11062
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst	40	0.009162	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst_map	40	0.011809	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_swap	40	0.010724	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_compose	40	0.010019	5	3	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.impliesPn	40	3.751854	6324	472	0.8.45	synth with cache (only 1: destruct 1; only 1: intro p; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40	40.214367	18058	3213
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unlessL	40	0.929816	2982	200	9.3.26.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unlessR	40	0.645681	2387	173	13.3.18.3	synth with cache (only 1: repeat split; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.sameP	40	40.188782	22722	840
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Bijections.bij_can_eq	40	40.373555	160238	5123
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40	40.069421	8043	2011
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	40	40.108281	15587	5177
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.032485	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.163704	15	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	16.470476	16417	4103	0.0.0.0.0.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.concat_map	40	21.785466	19747	3163	7.0.2.0.0.0.4.3.0.0.0.9.1	synth with cache (only 1: intros l2; only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: rewrite map_app; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_id	40	0.033303	7	6	1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.302190	168	81	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_map	40	1.327222	509	175	2.4.0.0.0.5	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40	40.072502	21626	3406
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	7.305070	3397	643	0.0.4.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: revert a; only 1: intros n; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.decPcases	40	40.369169	36322	607
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.139926	43507	9466
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40	40.102840	32286	5700
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40	40.061096	16898	2665
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unless_sym	40	6.801729	26432	918	2.1.9.22.22.50.4	synth with cache (only 1: split; only 1: intro H; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.154879	19038	4839
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40	40.116962	5212	3064
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.207846	54906	2608
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	40.060179	13486	3939
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.048533	8	4	0.0.3.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.779443	144	90	0.0.3.2	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.013223	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.031558	7	5	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.275792	37	17	0.1.3.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0.011335	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.013590	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.count_occ_map	40	40.153726	63997	2591
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub	40	40.073636	21911	5130
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.992795	196	70	0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.373938	185	50	0.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.010421	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.417223	35	14	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40	40.057270	12741	5536
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40	40.050864	11218	3472
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40	40.083901	22477	7511
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.092555	11740	2535
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	1.091727	243	160	0.1.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.flat_map_app	40	40.375783	11352	4544
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in	40	11.038163	8661	1303	0.4.19.1.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto with arith; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	40.090304	23589	6398
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext	40	0.474299	65	31	0.0.1.0.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40	40.191447	3869	1218
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.flat_map_ext	40	0.251245	78	25	0.0.0.2.1.1	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	1.444361	310	80	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.046905	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40	40.105709	34048	3965
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.179384	18	4	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lor_spec	40	40.115359	14694	5256
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.073373	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.in_flat_map	40	40.077210	20659	3434
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40	40.041880	10618	2519
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.042443	7	4	3.0.0.0	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.471416	217784	2266
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	1.134327	434	89	0.0.0.3.2.0.2	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_map	40	33.830487	80641	6343	3.28.4.11.8	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40	40.073609	21501	3972
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompOpp_iff	40	32.197261	34657	10134	0.0.0.0.0.0.0.0.0.8.0.0.0.2.0.0.0.2.0.0.0.2.2.5.5	synth with cache (only 1: intros; only 1: split; only 1: destruct c; only 1: destruct c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c, c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: auto; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.342391	6640	1258
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40	40.048675	11014	1783
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40	40.068469	18347	2330
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.altP	40	40.243905	59009	644
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40	40.061141	12693	4301
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40	40.302668	126151	7346
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	2.024639	493	104	0.12.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicW	40	0.669457	1640	87	0.44	synth with cache (only 1: red; only 1: by move  =>b b' ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	1.768996	116	50	0.0.0.0.0.0.3	synth with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.152553	8735	3441
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.325706	9387	1442
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40	40.113466	10327	2581
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.remove_concat	40	40.111250	38801	4669
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	8.668060	4385	840	2.2.2.6.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: simpl in *; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl; only 1: apply eq_existT2_uncurried).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_right_app	40	0.320567	104	41	0.1.0.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.110115	36162	4255
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.ForAll_map	40	40.144886	28107	2601
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in_iff	40	16.240653	9083	2265	0.0.0.0.0.0.0.0.3.1.0.0.0.0.6.6	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| y l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40	40.397760	5531	1592
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40	40.197241	17839	5411
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40	40.052738	15150	1572
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40	40.090817	7255	1714
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40	40.055045	14270	2587
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40	40.072485	23625	4046
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.008305	1	1	0	synth with cache (only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.010555	3	2	1.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.007728	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.006832	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.013146	2	2	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.004770	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	40.221737	8728	1879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40	40.057991	7475	1638
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_l	40	40.570891	256449	6574
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_refl_map_distr	40	0.007016	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.152804	5830	1634
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_map_distr	40	1.759350	3379	386	1.1.1.3.20.0	synth with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_map_distr	40	0.009068	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_sym_distr	40	0.025251	18	6	0.4.1	synth with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_rew_distr	40	0.013797	12	3	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_const	40	0.011086	13	3	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unlessP	40	40.407967	160727	8640
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.363395	147743	4673
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	40.251849	9003	2063
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40	40.057901	15416	3373
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40	40.137016	44370	9418
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.057866	14651	5483
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.113078	13072	3346
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.188357	65720	9440
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.bind_unless	40	40.360821	141421	5510
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.092827	29923	3976
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	2.281795	665	317	0.0.2.1.0.0.1.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.050162	7231	1544
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.unless_contra	40	40.190823	68150	3203
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.eqb_eq	40	40.083112	22880	6931
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40	40.189632	7614	3186
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicP	40	40.316078	121232	5619
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	3.229402	714	361	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.030924	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0.014842	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.027695	8	7	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.050232	15	7	3.3	synth with cache (only 1: intros Hnm Hpq; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and3	40	0.012618	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.066511	15	8	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.012521	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.016261	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and5	40	0.020917	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.162278	26	13	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.pair_andP	40	0.018268	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ext_in_map	40	40.092552	29834	5419
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40	10.479239	12722	2610	0.0.0.0.0.13.0.0.0.0.0.0.0.0.0.0.12.0	synth with cache (only 1: split; only 1: induction 1; only 1: right with x; only 1: auto; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	40.075703	23274	2893
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40	40.073222	19085	5322
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40	40.048877	12142	3039
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.295644	29286	5816
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40	40.114932	20113	3767
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.709521	479	108	0.0.0.0.1.9	synth with cache (only 1: intros n m; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.387874	585	214	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.176023	28076	7461
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.898522	112	43	1.0.0.0.1.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.307021	57	31	0.0.0.0.3.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40	40.174434	12468	2732
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.050076	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.048258	7	6	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.047864	7	6	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.nth_nth_nth_map	40	40.293721	15020	3782
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.052330	8	6	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.017008	10	3	2.3	synth with cache (only 1: revert q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	40	0.006485	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40	40.085121	12302	4630
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0.004791	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0.111720	9	2	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.negP	40	0.007142	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0.005068	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0.006273	1	1	0	synth with cache (only 1: by case b1; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lor_spec	40	40.157486	39331	2840
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	40.113826	8994	2158
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.846008	85	47	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40	40.035427	8283	2722
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.107857	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.153748	7	5	1.1.0.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_length	40	40.147035	25747	2701
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.017363	167	79	1.1.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.107715	7	2	0.5	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.496900	58	17	0.8	synth with cache (only 1: apply min_l; only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.idP	40	11.193414	32909	391	2.2.196	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	40	5.549881	3717	956	4.5.4.1.5	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_r	40	40.437926	192890	8447
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40	40.051804	14090	3229
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompareSpec2Type	40	40.587537	257740	9025
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	40	3.606596	2091	545	3.3.9.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40	40.374466	168622	4657
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_bind	40	40.239215	83118	3628
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.PropNeqType.paradox	40	40.398029	179743	11323
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.276769	6702	1406
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.152944	13936	2184
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.104411	36929	2526
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.037407	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.043873	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_rev_right	40	40.102158	30925	5525
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.134891	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	40.433604	6478	1481
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_max	40	34.162723	24425	4598	0.0.0.0.0.5.1.10.5.23	synth with cache (only 1: revert q; only 1: unfold Z.le, Z.max; only 1: unfold Pos.max; only 1: intros H; only 1: simpl in *; only 1: case Pos.compare_spec; only 1: congruence; only 1: congruence; only 1: intros; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.083116	22081	2471
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.011465	4	2	0.2	synth with cache (only 1: unfold Z.sqrtrem, Z.sqrt, Pos.sqrt; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.004246	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	1.750730	84	22	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_app	40	1.293177	332	194	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Exists_map	40	40.061440	13675	4389
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	1.528375	77	26	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40	40.149011	3131	731
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_symmetric	40	40.256189	40873	5731
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	1.664480	83	20	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.272632	18295	3733
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.807299	262	74	0.7.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.073979	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.115519	13665	2160
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	4.107359	1176	361	2.2.5.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40	40.116022	5184	2194
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	40	40.242212	31256	6279
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40	40.052891	12373	3685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40	40.146182	12499	1463
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40	40.044253	8118	4261
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_min	40	23.407956	12774	2799	0.23.0.2	synth with cache (only 1: unfold Pos.min; only 1: rewrite Pos2Nat.inj_compare; only 1: unfold Z.le, Z.min; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40	40.152723	20855	3148
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40	40.087806	14135	4886
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	1.930798	1007	243	0.6.0.1.0.1.6.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.008050	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.022105	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0.009363	1	1	0	synth with cache (only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.026100	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0.010614	5	1	4	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0.028396	13	3	3	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0.006526	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.013498	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0.014562	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0.008162	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40	40.188345	6589	2087
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.unique_existence	40	40.432102	185528	9483
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_EM	40	40.267847	97072	3450
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40	40.375725	155828	4858
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.filter_app	40	9.832492	10525	1705	0.0.0.0.1.1.1.1.0.27	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: case_eq (f a); only 1: intros l2; only 1: simpl; only 1: rewrite IHl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40	40.175292	14223	5028
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40	40.071287	8656	892
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40	40.158678	14073	2671
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_pick	40	40.187140	65895	3094
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40	40.063891	15711	5266
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.046477	9215	2072
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_imply	40	40.224086	81716	3544
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	40.269947	16629	4567
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	3.921329	1377	593	1.0.0.0.0.0.1.0.8	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: intro; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40	40.201533	3298	1580
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.026332	7	6	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.272178	62	35	0.0.0.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.113038	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.064419	18155	4130
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.605229	500	111	0.2.3.1.1.7	synth with cache (only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.100543	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.existsb_exists	40	40.082342	25519	4851
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40	40.440711	193595	6714
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.existsb_nth	40	40.083027	18524	3728
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40	40.091628	24256	4117
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.063881	13784	3731
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	12.795980	5711	1468	1.0.8.3.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros H; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.021525	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.820386	372	138	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.154592	18798	4785
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40	40.195208	13180	2428
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.existsb_app	40	40.087108	26050	2226
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.andP	40	40.266582	7514	680
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.305035	27972	3572
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	40.046030	10290	3260
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.035813	8345	2452
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_forall	40	40.172688	7678	1414
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_none	40	4.750308	1431	381	0.3.7.0.1.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intuition; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40	40.175617	9659	2031
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_cons2	40	0.021481	2	2	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	1.591163	221	105	0.1.0.1.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.561940	64783	768
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40	40.056829	14539	4661
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0.017504	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	40	40.211539	78894	10835
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.018269	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0.010249	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andTb	40	0.006361	5	1	4	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andFb	40	0.005150	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.exists_inhabited	40	0.286331	670	103	8.8.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.inhabited_covariant	40	0.012360	14	4	0.0.4	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbT	40	0.087334	111	13	2.12	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_stepl	40	0.059111	53	17	0.0.7	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.iff_stepl	40	0.012968	4	4	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbF	40	0.071160	80	11	2.10	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbb	40	0.006394	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	3.525363	834	316	1.1.4.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbC	40	0.692374	1247	45	0.48	synth with cache (only 1: intro H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.CompSpec2Type	40	40.313119	119974	10420
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbA	40	0.006615	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbCA	40	0.009813	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbAC	40	0.021310	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbACA	40	0.035586	50	5	11	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orTb	40	0.005534	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orFb	40	0.005318	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbT	40	0.010033	3	1	2	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbF	40	0.006603	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbb	40	0.006624	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbC	40	0.009556	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbA	40	0.015155	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbCA	40	0.016032	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbAC	40	0.015658	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbACA	40	0.030226	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbN	40	0.009298	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andNb	40	0.008999	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbN	40	0.010709	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orNb	40	0.008809	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_cons1	40	7.758502	2620	535	0.1.1.8.3.0.5	synth with cache (only 1: intros; only 1: simpl; only 1: case_eq (f a); only 1: rewrite H; only 1: intros; only 1: reflexivity; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_orl	40	0.029150	5	1	4	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_orr	40	0.007292	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_sub_mask	40	40.096289	27817	6815
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_andl	40	0.016985	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_andr	40	0.017074	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40	40.075277	18681	3399
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_idl	40	0.421181	179	21	8.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_idr	40	0.015960	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2l	40	0.018858	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2r	40	0.027273	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idl	40	0.016367	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idr	40	0.015886	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2l	40	0.028257	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2r	40	0.028123	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_and	40	0.055012	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_or	40	0.012352	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and4P	40	40.416209	37484	536
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbK	40	0.010700	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andKb	40	0.010686	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbK	40	0.010518	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orKb	40	0.010553	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybT	40	0.010304	7	1	6	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybF	40	0.008439	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyFb	40	0.006821	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyTb	40	0.007767	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybb	40	0.006869	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_imply	40	0.011416	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybE	40	0.011002	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyNb	40	0.008849	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybN	40	0.008806	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyb_idl	40	0.014451	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybNN	40	0.010988	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyb_idr	40	0.013540	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyb_id2l	40	0.023136	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addFb	40	0.005302	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbF	40	0.005296	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbb	40	0.007693	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbC	40	0.006819	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbA	40	0.015527	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbCA	40	0.011808	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbAC	40	0.029138	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addl	40	0.011914	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbACA	40	0.030625	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addr	40	0.012130	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addKb	40	0.010479	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbK	40	0.006739	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	40.145091	6639	1348
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbI	40	0.018800	3	1	2	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addIb	40	0.020639	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addTb	40	0.006236	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbT	40	0.009432	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbN	40	0.008578	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addNb	40	0.011342	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.074678	21130	4999
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40	40.147493	51643	4447
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.107832	12538	2524
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.filter_In	40	40.068038	20809	4187
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUl	40	2.787142	4219	348	0.20.0.7.25	synth with cache (only 1: intro H; only 1: simpl; only 1: Bool.destr_bool; only 1: elim eq_sym with (1 := H0); only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40	40.043835	8949	2123
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40	40.081767	9210	1776
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbP	40	3.600595	1873	72	1.0.0.0.55	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_refl	40	0.093152	278	22	3.19	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.293436	27704	5422
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.150824	8	3	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40	40.107623	12774	2327
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.082210	21	21	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_le_iff	40	0.020470	4	3	0.0.1	synth with cache (only 1: unfold le; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40	40.188533	2465	947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.087219	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	40	0.249674	48	19	2.1	synth with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gt_lt	40	0.016773	2	2	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_rect	40	40.107464	37560	2487
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_gt	40	0.007611	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.029304	9	4	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le	40	0.020075	2	2	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.rew_sig2	40	0.035862	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_ge	40	0.007701	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40	40.201662	5832	2253
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40	40.049816	11764	3429
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gt_iff_add	40	40.060125	16511	6488
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.095704	5015	1364
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.047125	7501	2957
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUr	40	5.104104	8643	662	15.13.9.31	synth with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.010604	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40	40.083579	6430	2633
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40	40.101122	14821	3118
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_ext_in	40	4.697984	2431	594	0.2.1.0.0.0.0.0.12	synth with cache (only 1: induction l as [| y l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	40.101813	35464	3117
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.012038	5	2	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.014938	8	2	6.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.007929	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.014333	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0.008638	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.009439	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.008127	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.007684	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0.006432	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.013462	4	1	3	synth with cache (only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0.009355	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.055901	12784	2465
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0.009015	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	40	40.359347	152613	9914
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.546578	46021	519
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40	40.351087	146577	4565
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.135380	47020	5167
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.land_spec	40	40.181641	24205	3495
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.674020	892	124	0.0.1.0.2.2.2.2.7.4	synth with cache (only 1: unfold testbit; only 1: destruct divmod as (q', u'); only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: fold testbit; only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40	40.076793	21429	3872
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.372572	9814	1119
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.297356	9342	411
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	11.137019	1853	424	0.0.0.0.0.14	synth with cache (only 1: unfold log2_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.or3P	40	40.260163	30496	311
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.081074	16841	2828
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0.009791	1	1	0	synth with cache (only 1: by case : msp  => _ /= ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.009397	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0.005533	3	1	2	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.005685	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.421628	158	54	0.2.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40	40.163833	6976	1708
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_antisym	40	40.078756	20422	6741
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40	40.058967	16791	3135
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.074157	20047	6012
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_some	40	40.134308	25647	4751
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40	40.150159	53876	8544
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_ext	40	0.023592	4	4	0.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40	40.085585	29129	2869
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.remove_alt	40	1.643570	617	179	0.10.0.0.0.0	synth with cache (only 1: induction l as [| y l]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: now destruct (eq_dec x y)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40	40.086900	14062	2794
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.061452	17549	2711
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.073726	18650	6645
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.174633	7383	2251
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.land_spec	40	40.088845	29076	3223
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.or4P	40	40.206163	38751	434
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	40	14.932080	4414	1256	0.0.0.1.0.0.0.3.8	synth with cache (only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.047154	10355	3425
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.qualifE	40	0.006203	2	1	1	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_length	40	40.078986	21189	5375
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.partition_inv_nil	40	40.085668	21622	4638
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40	40.238711	5409	1563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40	40.028663	6045	3188
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.632373	314362	4228
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40	40.044401	9694	3433
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.179492	97	30	0.0.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex2.rew_ex2	40	0.015270	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.230382	157	75	1.0.1.0.0.0.1	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	27.858335	10390	987	53.1	synth with cache (only 1: intros RS' n; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.elements_in_partition	40	40.050666	9975	3955
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_antisym	40	40.100352	29062	7422
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40	40.065159	22877	870
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_r	40	5.453483	1553	705	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_length_r	40	0.079743	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	18.058942	6566	2652	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40	40.057372	12386	4171
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	40.069138	20113	4048
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	13.296130	10781	1554	0.0.50	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40	40.061797	10541	2768
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.nlt_1_r	40	0.118959	21	5	5	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_1_succ	40	0.112096	19	6	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.012953	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_nle	40	0.126634	23	11	0.4	synth with cache (only 1: unfold ltb, lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_le_incl	40	0.102557	18	6	0.0.3	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Choice_lemmas.Choice	40	37.503680	232989	2494
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40	40.065049	15728	2087
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_map	40	40.067859	18894	4040
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40	40.347128	4374	918
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40	40.532996	227026	1675
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.129779	7543	2063
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	40.054118	9440	1479
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_succ_r	40	40.222835	37457	8173
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40	40.038779	6872	1656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40	40.105620	28291	6827
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_succ_l	40	40.116676	12994	5159
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.111464	12054	2590
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	21.078438	20959	4313	0.0.1.0.0.1.0.1.0.0.1.0.1.1.1.0.0.1.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: apply IHclos_refl_trans2; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40	40.048069	9434	4632
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.420034	163845	2564
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.065697	16623	3709
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40	40.116003	21074	4238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.055498	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.103092	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.063807	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.075620	28002	1462
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_1_l	40	10.362720	7575	1751	0.4.3.1.1.14	synth with cache (only 1: apply ltb_ge; only 1: induction p; only 1: now f_equal; only 1: trivial; only 1: unfold ltb, lt; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40	40.056198	10821	2553
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.rew_ex	40	40.437320	194849	7202
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_inj	40	40.241846	94211	12123
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.251948	399	41	3.3.18	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40	17.424576	7375	2395	0.0.0.1.0.0.5.0.0.0.5.0.0	synth with cache (only 1: intros; only 1: destruct (lt_ge_cases 0 b); only 1: apply div_small; only 1: destruct (mod_pos_bound a b); only 1: intuition; only 1: intuition; only 1: rewrite <- div_opp_opp by trivial; only 1: apply div_small; only 1: rewrite <- opp_lt_mono, opp_nonneg_nonpos; only 1: destruct (mod_neg_bound a b); only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.064000	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40	40.425999	175650	2285
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.233182	46191	4105
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	40.057333	15005	3040
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.755198	822	115	2.0.14.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.030032	8	4	3.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.045162	5999	1217
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40	40.366329	3964	1268
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.310201	118667	2258
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.060065	18233	2404
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	1.296579	213	89	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.468154	203243	2227
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40	40.072984	18822	5790
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.132915	9546	3453
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.179174	2228	776
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	1.629536	470	198	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	13.377859	6757	1618	10.2.0.0.0.3.4	synth with cache (only 1: unfold Z.testbit; only 1: destruct n; only 1: intro Hn; only 1: now destruct a as [| [| | ]| ]; only 1: now destruct 1 || intros _; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0.009709	1	1	0	synth with cache (only 1: apply Z.testbit_Zpos).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40	40.137414	53795	3773
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.count_occ_alt	40	40.045831	12621	2671
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.101864	20363	3703
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40	40.084513	20195	5390
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.combine_length	40	1.069806	543	144	2.5.0.0.0.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	40.055981	14293	1796
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_ldiff_spec	40	40.306218	27421	3530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40	40.060923	16444	3044
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_l	40	40.113000	37551	5892
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.KeyPred.keyed_predE	40	40.212715	71261	4201
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_l	40	20.413248	12253	2773	0.0.5.3.2.2.3.0.3.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| ] ? Heq; only 1: simpl; only 1: intros; only 1: right; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod_aux	40	0.717686	320	96	1.2.0.0.5	synth with cache (only 1: intro H; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40	40.096898	5357	1796
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_nth	40	40.087323	23837	4285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40	40.062409	19190	3053
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.097171	31103	2475
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40	40.046443	7641	1016
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_succ_succ	40	40.072776	18198	6661
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_length_l	40	40.076409	22984	3543
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.split_combine	40	40.092358	27535	4080
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_refl	40	0.810762	759	57	28	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_cons_cons	40	0.036723	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_cons	40	0.021152	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40	40.057664	14351	4224
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_tail	40	0.024804	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.188905	74	35	0.1.0.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40	40.103412	27360	3839
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40	40.074153	27214	1410
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40	40.035027	2025	850
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_lt_succ	40	40.220131	48837	5131
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40	40.064528	18601	3003
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_compat	40	0.241452	53	10	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Choice_lemmas.Choice2	40	40.512562	228998	2453
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.combine_split	40	40.110332	37225	5058
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_nil_l	40	0.031380	9	3	1	synth with cache (only 1: now destruct l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40	40.049329	8312	2166
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40	40.309577	118607	1620
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_r	40	21.490486	14216	3293	0.1.19.0.0.0.0.0.7.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: red; only 1: tauto; only 1: destruct l'; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.096590	10	4	0.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40	40.031072	9593	742
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40	40.082596	5167	1651
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.078258	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.071131	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.021268	4	3	0.1.0	synth with cache (only 1: destruct l; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_lt_mono	40	40.103431	32615	4844
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_refl	40	0.016882	3	2	0.1	synth with cache (only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.091886	22668	8235
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_tl	40	0.741638	342	123	2.1.1.3.1	synth with cache (only 1: intros x l; only 1: destruct l; only 1: intro l'; only 1: firstorder  discriminate; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_tran	40	0.020045	7	3	3.0.1	synth with cache (only 1: induction l; only 1: auto with datatypes; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_appl	40	0.011378	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40	40.129707	4439	1135
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_appr	40	0.013588	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.169964	60105	9989
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.160985	34959	4373
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40	40.069184	16844	2044
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.045761	8954	4573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.050549	14	8	0.0.0.2.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	1.878000	2006	450	0.4.0.0.12	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	2.015837	891	193	9.6.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_tag_cond_dep	40	40.360696	139728	3772
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.024598	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40	40.054093	15650	3615
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_trans	40	40.222455	30738	3764
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.065508	16341	2879
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_le_trans	40	8.078098	3088	1167	0.0.0.0.3.15	synth with cache (only 1: intros EQ; only 1: intros H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_tag_cond	40	40.346094	132367	3213
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	40	40.195089	47524	4949
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_spec	40	0.012493	4	1	3	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0.006909	1	1	0	synth with cache (only 1: inversion H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40	40.054175	13227	3653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.020308	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	40.076210	21295	3254
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond_dep	40	40.340118	131831	2674
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	40.057558	16354	3307
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	40.051949	9608	1992
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40	40.036955	9179	2950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40	40.053728	8623	2157
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.354194	138001	3401
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.005610	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.024920	7	2	0.5	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.009575	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.011109	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.042519	2	2	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.268363	137	19	15	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2T	40	0.015668	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3T	40	0.009153	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0.008279	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	0.014205	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	0.013139	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1W	40	0.103478	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_nil	40	21.723037	18487	2371	18.3.0.0.13	synth with cache (only 1: destruct l' as [| y l']; only 1: intros Hnin; only 1: auto; only 1: firstorder; only 1: now destruct l).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0.009006	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on2W	40	0.009658	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1T	40	0.015010	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on1lT	40	0.015063	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on2T	40	0.009813	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon1	40	0.017095	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0.013803	1	1	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_cons_inv	40	0.056083	6	5	0.0.1.0.0	synth with cache (only 1: unfold incl; only 1: simpl; only 1: intros l l1 l2; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon2	40	0.022096	3	1	2	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_ind	40	40.071790	23499	2477
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_cons	40	16.115221	15426	1934	5.3.0.6.9.7.8	synth with cache (only 1: intros F l1 l2; only 1: intros d ie; only 1: intro y; only 1: simpl; only 1: intuition; only 1: elim H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40	40.212693	3247	786
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app_app	40	0.203429	29	12	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app_inv	40	0.019381	4	2	2.0	synth with cache (only 1: unfold incl; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	40.071345	19300	3879
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.088853	26643	1013
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_trans	40	26.467178	16483	2338	0.0.2.9.2.0.2.0.4.0.0.9.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: destruct l; only 1: inversion H; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.064004	18845	2572
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40	40.106105	21674	4119
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40	40.056845	15140	3651
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_filter	40	4.926253	1857	468	4.0.10.0.0.0.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: firstorder  (subst; auto); only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.combine_nth	40	40.085934	26047	5464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40	40.065935	18274	2208
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40	40.035753	7293	2112
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.170520	37650	3096
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_trans	40	18.088548	11248	2382	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod	40	40.071527	18902	5343
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40	40.335841	129691	3787
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod_iff	40	40.054384	14319	3489
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.017916	5	2	0.3	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all	40	0.366023	219	49	4.1.0.1.5	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_O	40	0.007463	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	14.444992	9865	1650	0.0.1.13.0.0.0.0.1.0.6.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_up_eqn; only 1: rewrite sqrt_pred_square; only 1: apply (lt_succ_pred 0); only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite <- (add_0_l 0); only 1: nzsimpl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_preorder	40	2.221467	2430	226	1.0.0.0.14.9.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40	40.103145	18262	1553
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.prod_length	40	40.075652	17969	3076
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.078174	15191	2753
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app	40	13.169002	4311	1284	2.2.3.1.0.7	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: intros y H0 H1; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40	40.111106	26816	2617
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all2	40	6.269828	2029	897	0.5.0.0.0.2.1.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: intros Hnin; only 1: reflexivity; only 1: simpl; only 1: now destruct l; only 1: intros [| ] ?; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.079749	22184	2653
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_strorder	40	40.129900	46460	4335
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_app	40	3.124367	1117	453	0.0.0.1.1.0.0.0.0.0.1.5	synth with cache (only 1: induction n as [| n IH]; only 1: intros l1; only 1: intros; only 1: induction l1; only 1: simpl; only 1: auto; only 1: apply IHl1; only 1: intros [| x l] H; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: now rewrite IH).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.066373	17917	4699
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	19.149443	2335	664	1.0.1.9.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj	40	40.102453	33785	5088
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_le_length	40	10.027534	5002	1690	4.1.3.0.1.1.2.0.1.4	synth with cache (only 1: induction n; only 1: destruct l; only 1: now simpl; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: now auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40	40.045809	3091	1124
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.060860	11939	3566
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.153359	17664	6846
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	40	40.477913	208977	2084
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_l_nil	40	40.091138	27902	5219
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40	40.255247	93703	4111
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40	40.059932	16821	3600
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	40.429615	6675	1343
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_lt_trans	40	40.169531	28170	3762
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40	40.146006	8373	1129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.033480	7625	1983
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	0.990510	801	134	5.10.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.061842	17618	3033
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.044459	9874	3568
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40	40.238073	2971	1443
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	1.624578	887	193	1.4.0.7	synth with cache (only 1: intros Hab; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40	40.175209	58438	10411
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	18.266435	25338	1131	26.53.17	synth with cache (only 1: intros; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0.018875	1	1	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0.013404	2	1	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.014216	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.059690	16495	3505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.024035	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.025077	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40	40.292312	105747	3330
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.065258	20093	3553
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0.018984	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0.025553	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0.025936	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40	40.051010	11839	2094
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.125639	19746	4608
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	4.312709	4381	155	0.68	synth with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.316257	122059	3663
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0.032837	1	1	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in2	40	0.346161	254	42	5.5.4	synth with cache (only 1: intros; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in12	40	0.513286	149	16	3.13	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in21	40	0.012069	1	1	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in3	40	0.937619	993	116	12.15	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	40	40.142006	8602	3385
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40	40.045098	11904	2248
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40	40.047204	13462	2230
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.rev_trans	40	40.183832	59304	3832
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0.099401	38	4	10	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40	40.047072	11525	3344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40	40.053579	11250	2527
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40	40.107360	35125	2167
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.009706	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_antisym	40	40.184872	31056	6113
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.020636	6	4	0.0.2.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.106562	6187	2013
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	40.098040	27318	8105
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_iff	40	40.069060	17703	3960
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.011477	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.remove_incl	40	40.084079	23158	2871
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_O	40	0.034215	4	4	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40	40.070724	21140	3457
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.530199	344	48	0.0.0.19	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_cons	40	0.013187	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all	40	0.049742	7	4	1.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.088853	29495	3558
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.099600	14723	2023
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.incl_map	40	40.076392	25999	2947
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_nil	40	40.089039	26804	8010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.064061	16336	4092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40	40.058398	9279	2631
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all2	40	3.295986	834	301	1.0.0.0.0.5.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: destruct l; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length	40	1.589437	687	224	2.0.1.0.0.0.0.0.4	synth with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt_iff	40	40.237308	17857	3814
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40	40.083617	18304	4261
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_length	40	1.942686	789	177	1.0.0.0.0.2.0.0.0.0.3	synth with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: split; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_partorder	40	40.141736	19485	3615
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_app	40	1.411758	561	203	0.0.0.5.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40	40.075125	16604	3581
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.069099	16374	3461
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40	40.067693	20521	2733
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	33.683504	18096	3818	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.052519	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40	40.115672	22350	3147
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_app_2	40	40.085079	24440	5155
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40	40.075949	4724	401
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.141032	16465	5059
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.015119	5	3	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_firstn	40	40.111139	35754	4744
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40	40.049334	7826	2088
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	40.104729	38762	1819
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.014226	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn_comm	40	40.085582	25639	4723
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_le_mono_l	40	9.294999	3742	1259	4.0.0.8.3	synth with cache (only 1: revert p q r; only 1: intros a b Ha; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40	40.049377	10056	2753
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.165414	22703	6298
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40	40.269130	105348	3606
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.absurd_set	40	0.012855	3	3	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_firstn_comm	40	40.092691	29450	4753
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_nil	40	0.020437	5	4	0.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	40.158168	58543	2107
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_firstn_l	40	0.747788	219	96	2.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_add_diag_r	40	40.160746	17013	7392
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.048911	12933	2504
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40	40.170084	7569	1735
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40	40.344549	6133	915
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt	40	15.567355	5660	1009	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_gt	40	0.006760	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	30.276495	70479	1902	20.120	synth with cache (only 1: red; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	40.058548	14627	4310
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40	40.060352	17728	3211
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	40.064275	17832	3289
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40	40.062121	16317	2690
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40	40.117485	34482	7575
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn_len	40	9.241924	7440	1091	2.0.0.0.14.4.0.2.2	synth with cache (only 1: intro; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.inW_bij	40	40.164538	56781	1666
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_firstn_r	40	3.646144	2558	655	0.0.0.0.0.1.0.0.0.0.7.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: destruct l'; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	40.071398	21374	3221
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.063173	19688	3229
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40	40.045290	10054	1575
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le	40	0.019684	3	2	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.le_ge	40	0.009454	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono_l	40	40.141928	21198	6224
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.076141	28	15	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.165159	56478	1523
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40	40.217536	8929	2386
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40	40.087093	25373	3851
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.070129	10498	2310
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le_iff	40	13.239639	3577	1125	4.3.2.1.1.4.0.0.0.2.0	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: split; only 1: intros H; only 1: order; only 1: intros H; only 1: easy; only 1: easy'; only 1: easy'; only 1: revert q; only 1: intro n; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40	40.240738	85133	2726
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40	40.061417	15060	4036
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0.009373	1	1	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40	40.153409	8959	1781
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40	40.038563	7893	1337
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.206948	74938	2687
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.022038	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.099888	30805	4858
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.016356	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.016957	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.217240	9872	2736
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40	40.072879	19833	6352
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_double	40	40.105105	33803	1181
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	1.778658	1867	392	0.0.0.0.0.0.0.0.1.12	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40	40.122074	34810	3347
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40	40.081713	23229	4257
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	40.104900	10611	1724
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn	40	40.098617	29103	6749
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.075624	19794	3772
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40	40.053801	12568	2125
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	24.377143	2285	561	0.0.1.4.11	synth with cache (only 1: unfold Basics.flip, respectful; only 1: unfold clearbit; only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40	40.032890	8465	1695
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn_rev	40	40.088596	25316	3462
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_rev	40	40.030270	6773	2088
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_length	40	0.243258	87	33	2.0.0.2.1.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: split; only 1: simpl in *; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.121287	10533	3514
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_rev	40	40.033282	4881	1897
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	12.609288	1257	259	0.14	synth with cache (only 1: unfold clearbit; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	8.621881	7798	683	2.0.22.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40	40.056133	14769	3933
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40	40.058647	8114	2872
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	39.425561	12669	3368	0.0.1.17.1	synth with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_in	40	4.387551	1247	361	5.0.5.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl in *; only 1: intros; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40	40.050436	12247	1628
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.058761	15849	3763
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_le_mono	40	40.156137	23815	3939
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_add_r	40	0.010923	2	2	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	4.139692	1453	138	0.0.19.4	synth with cache (only 1: intros x x' Hxx'; only 1: apply min_mono; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	10.911645	4269	1140	1.10.3	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.027534	6	5	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40	40.080925	3530	876
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ	40	40.102568	42762	1425
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_l	40	40.075632	20004	5514
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_removelast	40	40.057901	13926	4353
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.078305	23292	3964
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_r	40	40.063618	16047	5589
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_1_r	40	0.086462	46	19	9	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	30.521955	5612	936	0.0.0.0.0.17.1	synth with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: pose proof H as H'; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.006809	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40	40.238292	88426	1689
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.044612	11786	2524
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.150471	17175	5801
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	40.041428	10449	2616
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40	40.241473	89564	1643
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40	40.075179	23374	3211
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40	40.070245	20793	3666
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.460540	7036	1455
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.092034	28228	4483
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40	40.098063	25928	8278
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Combining.combine_firstn	40	40.080345	18930	6373
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_app	40	40.043490	11927	754
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.205726	72317	1611
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.045358	11648	2336
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.057985	4	4	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.067210	21028	3606
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_low	40	40.055808	9580	2119
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono	40	40.166353	30075	5839
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.024987	4	4	0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	8.227953	3415	1881	0.0.1.0.0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.142841	47750	2291
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	40	40.235866	11091	3113
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.058127	12301	5625
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.TestOrder.test	40	0.020898	13	3	1	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40	40.055115	13577	3916
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_high	40	40.210064	11338	2651
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40	40.063987	16895	3979
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40	40.137607	44986	1828
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40	40.074606	7947	1860
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40	40.088213	28982	2064
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono	40	40.174492	24129	4740
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40	40.168750	11918	2495
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_add	40	40.071836	23875	2558
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pred_div2_up	40	10.626079	3979	1350	0.3.0.6.0.0.6.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: now f_equal; only 1: bitwise; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_swap	40	0.028536	4	3	0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.114469	38244	3640
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.044048	10160	3261
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.028281	6058	2181
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_split	40	40.074918	22373	4803
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_succ	40	3.576666	1015	301	0.0.0.1.2.7	synth with cache (only 1: intros n H; only 1: intros m IH; only 1: destruct n; only 1: split; only 1: simpl; only 1: apply Pos.iter_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40	40.068648	13338	2404
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	7.545174	4896	595	14.1.12	synth with cache (only 1: intro RS'; only 1: intros; only 1: now apply mul_lt_mono_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.143355	48	24	1.0.1.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.069718	19857	4539
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40	40.164512	5284	1538
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_inv	40	40.126086	44060	6916
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40	40.118261	42288	3191
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.040592	4651	1072
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40	40.046453	9757	4931
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.incl_Add_inv	40	40.104319	31759	4345
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40	40.092146	12732	4758
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	40.060514	14282	2678
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.145500	26348	4699
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40	40.142104	36019	2538
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.066981	17019	5197
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove	40	40.122122	41712	5712
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40	40.083226	19752	1409
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.055011	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.053029	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	15.395602	14658	489	0.1.0.0.0.0.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.060043	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.042908	9769	2703
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.060399	19020	2685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	40.128624	4161	1413
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pow_gt_1	40	40.113130	36744	5270
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.091011	26415	6421
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.164126	65078	2647
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_succ_r	40	40.077973	19956	5204
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40	40.040646	7851	2159
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40	40.050102	13502	2782
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40	40.148881	52077	1909
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos'	40	40.106140	31128	5726
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.042710	9499	3315
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40	40.153939	52280	1914
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.066973	18760	4413
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.036335	9335	1969
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40	40.279120	1702	578
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.065455	18405	3551
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40	40.128659	43368	1520
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_2	40	40.081937	25673	5200
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40	40.024466	5292	1558
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_rev	40	40.110864	33097	5851
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40	40.079467	26306	3434
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_add	40	40.191050	26731	6117
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40	40.163026	52514	7909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40	40.064222	17222	2916
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40	40.037610	9780	2295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40	40.040153	8887	2684
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_swap_gen	40	40.110531	36573	4209
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_add	40	0.074848	8	5	0.0.3.0.0	synth with cache (only 1: induction p using Pos.peano_ind; only 1: intros; only 1: auto; only 1: intros; only 1: now rewrite Pos.add_succ_l, !Pos.iter_succ, IHp).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40	40.077814	21285	4877
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40	40.090370	5621	2344
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_sub	40	40.205481	21640	5477
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40	40.162260	7858	2044
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.043172	8875	3310
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.067221	17377	2899
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40	40.081429	22693	5290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40	40.093069	2833	1146
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_succ_r	40	40.075270	16230	6261
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_filter	40	40.081593	25767	4720
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40	40.042832	9384	2170
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40	40.068000	19937	3894
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40	40.113924	35386	4178
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40	40.054041	12368	5021
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40	40.217492	7442	1047
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.073296	23816	4416
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	40.061850	14984	6282
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.016317	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.016219	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40	40.026853	5486	2159
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_ind	40	14.298315	17598	1813	14.1.11.0.14.0	synth with cache (only 1: intros; only 1: induct ltac:(n); only 1: trivial; only 1: intros; only 1: rewrite Pos.iter_succ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40	40.062084	4096	1235
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_In	40	40.055877	13830	2970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40	40.107732	26822	4634
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	40.081762	21695	3612
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	1.108185	236	67	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40	40.175420	27494	3405
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_incl	40	40.116774	38980	3356
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_r	40	40.084939	16048	4533
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_nodup	40	40.201986	82392	5960
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	40.075425	7858	3222
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow	40	40.055164	17422	2023
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40	40.099832	26885	6472
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40	40.080798	25791	3443
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.060775	5	5	0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40	40.078137	12968	2598
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.105381	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.058691	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_l	40	40.327321	24234	5060
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_compare	40	2.021964	903	200	0.2.3.2.0.0.12	synth with cache (only 1: intros H; only 1: destruct x; only 1: intros; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_inv	40	40.071754	21226	4108
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.054311	13350	5021
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_l	40	40.206413	29773	4504
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.022231	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40	40.039475	5578	1099
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.020672	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.cons_seq	40	0.016834	5	3	0.2.0	synth with cache (only 1: simpl; only 1: intros n m; only 1: f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40	40.111317	36232	4361
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_r	40	40.086863	23634	5529
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	26.439028	5741	1533	1.0.0.17.1	synth with cache (only 1: intros; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.034978	8264	1593
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.034519	7229	1665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40	40.061650	19044	1970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40	40.361912	7505	1413
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40	40.067322	18985	2551
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_count_occ	40	40.064474	19345	5197
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_count_occ'	40	40.069521	19573	4846
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40	40.037507	10150	1632
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	1.758435	826	119	14.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40	40.052513	11668	2242
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_r	40	40.215845	32317	5398
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.062280	16648	2738
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.135233	47112	4609
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40	40.164776	55219	10564
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.062153	12274	2114
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40	40.038525	10559	1639
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40	40.077803	20295	4860
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_nth_error	40	40.068059	20137	4266
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40	40.047502	10588	1489
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_sub_assoc	40	40.069202	17231	4663
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.040238	5674	3216
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_lt	40	1.401535	481	195	0.0.0.0.0.0.5	synth with cache (only 1: unfold lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: congruence; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_add_distr	40	40.176686	13617	4751
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40	40.064824	13179	2964
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40	40.059317	12688	4754
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40	40.025973	4393	1150
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.iter_invariant	40	40.414963	42228	4262
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_nth	40	40.073251	22697	5085
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40	40.060554	17688	2391
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	40.051073	14057	1512
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	5.913502	534	301	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40	40.079699	6137	1250
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	40.057309	14466	4362
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40	40.058543	5811	1359
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_incl_length	40	40.063586	19124	3620
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.057854	13482	4851
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40	40.204834	80432	9662
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40	40.027473	3546	1465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40	40.041622	9352	3313
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_length_incl	40	40.074341	20269	3639
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	40.213615	79854	2260
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_sub_distr	40	40.082452	22186	5712
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40	40.104425	23579	4062
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	3.466975	1745	340	1.3.4.2.0.9	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_incl_NoDup	40	40.056551	12486	4036
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	1.142401	550	81	0.2.18	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NoDup_map_inv	40	40.113049	38000	6668
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.175603	88	20	0.4.1.2	synth with cache (only 1: split; only 1: firstorder; only 1: solve [ inversion H ]; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40	40.071916	19118	4184
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_max	40	40.069215	22458	2285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40	40.067308	9175	3050
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.243711	123	46	2.0.0.0.0.0.6	synth with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.094885	18	6	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xO_xO	40	40.143966	48299	4572
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_min	40	40.096568	33748	3461
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.011615	2	2	0.0	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.ZL0	40	0.006431	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.245414	32	5	8	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.049396	9	2	4	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.041974	8622	2512
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40	40.059067	16358	3019
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_r	40	1.085220	317	112	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: trivial; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_length	40	40.129755	48766	4071
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_xO_xI	40	40.230980	48285	5695
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40	40.065660	14949	3619
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	40.188495	18650	6579
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40	40.054188	5407	2545
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.046794	14253	1883
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	40.059197	18334	1985
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	9.230498	3606	808	1.2.5.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: destr_bool; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.044579	13748	1661
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40	40.150701	4527	1071
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	10.083545	9774	1188	0.5.0.17.13	synth with cache (only 1: split; only 1: inversion 1 as [H1| ?]; only 1: auto; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_nth	40	40.079497	17679	4667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.093640	34151	2594
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.035424	9	4	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.051322	9	4	1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.083063	25882	4207
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.098591	33190	2357
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.061014	8705	1766
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_r	40	8.931094	4634	1190	3.0.0.0.2.0.0.0.3.0	synth with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: apply le_nlt in H; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.039755	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_1_l	40	0.009015	3	2	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_1_r	40	0.040229	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_diag	40	28.961819	20415	3778	1.0.2.2.0.1.18.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	40.104831	5466	1063
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40	40.067631	20516	2598
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_neg	40	40.175582	21787	5644
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.062915	17092	2417
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_fold_right	40	3.524408	2573	572	0.0.0.3.7.1.1.1.1.0.1.0	synth with cache (only 1: split; only 1: induction l; only 1: inversion 1; only 1: inversion_clear 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: induction l as [| a1 l]; only 1: firstorder; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.198531	29519	6948
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40	40.044989	6951	1577
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40	40.134651	41054	7944
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.037486	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_max_distr_l	40	2.619573	982	240	1.0.7.2.0.2	synth with cache (only 1: apply max_monotone; only 1: repeat red; only 1: intros q r; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.051928	12	6	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.023775	6	4	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40	40.063867	7453	2027
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40	40.040723	10028	3019
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.070481	17586	4541
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_l	40	4.403250	2047	506	0.0.13.2	synth with cache (only 1: apply max_monotone; only 1: intros H; only 1: intros Hnm Hpq; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.in_seq	40	40.124616	48724	2446
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40	40.213194	11160	2386
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	8.605021	4497	1161	0.0.0.0.0.0.0.3.0.1.0.0.13	synth with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.123616	60	20	0.0.6	synth with cache (only 1: intros x l; only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv_tail	40	0.020439	3	3	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_NoDup	40	40.188491	71873	2200
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_nat_monotone	40	40.075021	21768	5274
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40	40.084093	23561	3305
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.017775	7	3	0.0.4	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.135537	5	4	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40	40.082230	20212	3997
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.057857	14616	3597
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_elt	40	2.907652	1794	290	0.1.0.3.0.3.0.0.5.1.4	synth with cache (only 1: induction l1; only 1: simpl; only 1: intros; only 1: inversion H; only 1: trivial; only 1: simpl; only 1: intuition; only 1: generalize H; only 1: intros HF; only 1: inversion_clear HF; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_app	40	40.035042	9530	2451
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.063600	18651	2581
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40	40.041535	9917	1613
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.153797	14575	2599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40	40.089036	9545	1755
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.069242	20256	4131
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.iter_op_succ	40	4.380435	2720	493	1.2.14.1.0	synth with cache (only 1: induction p; only 1: simpl; only 1: congruence; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.of_nat_succ	40	2.172347	1845	232	1.6.0.0.2.0.0.0.27	synth with cache (only 1: PeanoNat.Nat.cases n; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: induction n; only 1: auto; only 1: f_equal; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40	40.307933	4866	1538
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_S	40	40.086998	26878	5172
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.049514	6134	2355
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40	40.089964	11302	4766
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	9.263178	5142	965	1.1.15.1	synth with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	40.043773	8819	1799
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.091183	25517	4086
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.248278	29888	5112
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40	40.161231	37656	4059
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.100856	27207	3810
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40	40.042472	7831	4393
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nth	40	40.117125	22173	4258
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.044002	9588	2325
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_le	40	40.077717	23404	3508
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40	40.048401	14196	2445
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zplus_minus_eq	40	40.113926	43933	3748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40	40.044107	7333	2949
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_l	40	40.107924	34763	4217
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.039207	3157	1395
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40	40.066762	18450	2708
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40	40.143086	10399	1653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.081308	22516	3763
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.min_l	40	40.264830	34918	5397
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_app	40	40.098411	31641	3550
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.048810	4888	968
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_fold_right	40	7.871864	4928	1025	0.0.0.0.5.0.0.0.2.1.0.0.0.14	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: split; only 1: inversion 1; only 1: inversion_clear H; only 1: split; only 1: inversion 1; only 1: apply Forall_nil; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40	40.045924	5847	2456
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_l	40	40.289065	54243	4509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40	40.083199	23664	2872
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40	40.048252	12694	2937
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40	40.078797	17652	2692
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_rev	40	40.049039	12460	3323
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.069673	17320	4094
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.065142	21130	2473
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_app	40	27.126908	18635	2941	1.21.1.0.0.0.0.0.2.16.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: split; only 1: intros HE; only 1: intuition; only 1: intros HE; only 1: intuition; only 1: simpl; only 1: split; only 1: intros HE; only 1: inversion_clear HE; only 1: intuition; only 1: intros HE; only 1: intuition; only 1: inversion H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40	40.077588	23909	3435
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40	40.060858	2072	758
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40	40.062293	17537	3020
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.037640	8692	1994
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.map_ext_Forall	40	7.660777	5480	1148	1.0.1.2.13.0.0	synth with cache (only 1: intros f g H l; only 1: apply map_ext_in; only 1: induction l as [| a l IH]; only 1: apply ext_in_map; only 1: simpl; only 1: reflexivity; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.incl_Exists	40	40.158469	56292	3882
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.114832	13380	2924
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_max_distr	40	40.193765	17953	3979
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_min_distr	40	40.082761	21788	4636
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	40.066373	19848	2332
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.042655	10227	2157
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	2.379778	504	295	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	40.056811	5796	1094
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_max_distr_r	40	40.075290	21390	4546
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.120223	34132	9685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40	40.067240	15419	2603
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40	40.125165	15474	2959
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.069664	19179	3987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40	40.034291	7847	2182
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_impl	40	16.060044	7964	1422	2.0.1.9.1.2.2.7	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros HE; only 1: inversion_clear HE; only 1: constructor; only 1: intuition; only 1: intuition; only 1: now apply Exists_cons_tl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.196560	24898	3536
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_nth	40	40.082186	24581	5561
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40	40.282289	8704	2004
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_impl	40	12.527759	12682	2037	3.3.14.12.0.0	synth with cache (only 1: intros P Q H l H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.107207	13220	4043
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40	40.052484	12156	2093
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rev	40	40.054029	9502	2740
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40	40.021816	5185	1447
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.171580	65701	5726
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.063376	8573	1748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40	40.036447	7809	2140
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.246332	4175	2591
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40	40.090433	17432	3494
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	3.025620	1032	358	0.0.4.5	synth with cache (only 1: intros x y z; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.177888	4	3	1.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_and_inv	40	20.730733	9615	2249	0.5.8.1.12	synth with cache (only 1: intro H; only 1: intros HF; only 1: intros Hincl; only 1: rewrite !Forall_forall; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	40.149932	56738	4211
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	35.479621	8331	1229	0.0.0.0.13.0.17	synth with cache (only 1: compute; only 1: intros x1 x2 H1 x3 x4 H2; only 1: split; only 1: rewrite H1; only 1: now rewrite H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40	40.063154	4564	2222
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40	40.047260	8261	2023
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40	40.101357	34894	4685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.083832	8660	4299
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.112185	15437	2248
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40	40.027279	3642	1770
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	40.090761	23167	3811
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_of_nat	40	40.112297	37170	5885
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.289768	12	5	0.0.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40	40.040918	7994	3854
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.incl_Forall	40	40.122015	38743	3275
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.042516	8436	3121
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40	40.062355	15384	4437
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.102463	35252	3700
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.067206	19656	3052
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.059213	14868	1944
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40	40.023041	2651	1129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40	40.055822	12699	4586
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40	40.060603	14681	3413
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40	40.038395	4075	1321
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrt_spec	40	40.088884	24604	4394
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40	40.046757	10425	2175
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.049192	7387	2383
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	40.126169	38140	4821
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40	40.067548	18955	3490
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.043073	10438	3372
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_or	40	40.103339	35453	4120
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40	40.032708	7522	2072
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40	40.072450	18424	4709
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_or_inv	40	40.068869	20051	4601
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.051669	14046	3144
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.047070	6119	2111
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_and	40	39.620547	22750	4704	2.2.34	synth with cache (only 1: intros l2 m Hin; only 1: rewrite !Forall_forall; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.075012	20564	3956
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_refl	40	0.004466	1	1	0	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.062239	15036	4548
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xI	40	40.118112	38625	5226
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.117035	27309	7083
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.032086	7904	1551
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.exists_Forall	40	21.070656	18325	2890	1.0.4.1.0.22.2.0.1	synth with cache (only 1: induction l; only 1: firstorder  auto with datatypes; only 1: firstorder  (subst; auto); only 1: inversion H; only 1: subst; only 1: constructor; only 1: inversion H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.060335	11912	2760
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40	40.033764	7491	2238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40	40.057887	11188	1898
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_mul_l	40	40.078057	21635	6008
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40	40.173644	59215	9474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40	40.061960	12945	2171
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.056135	9700	2149
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40	40.071328	18190	3420
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40	40.057285	14339	3704
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.059745	13845	4937
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40	40.060275	14568	2947
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_mul_r	40	40.103553	26265	6148
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40	40.058962	16861	3999
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	40.043608	9162	2104
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40	40.048567	7294	1622
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40	40.068888	8936	3079
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40	40.080852	14181	3513
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.incl_Forall_in_iff	40	40.063035	12588	3472
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40	40.037488	7944	3585
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40	40.068952	15520	4332
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40	40.035858	3062	1462
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40	40.032848	4889	2360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.060473	18243	2904
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_length	40	0.030378	6	4	1.0.0.1	synth with cache (only 1: induction n as [| n IH]; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.059971	13123	3512
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	40.115170	37723	5003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40	40.192818	42941	3993
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40	40.051290	11201	4541
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall_image	40	40.126112	44870	6008
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40	40.078620	18481	2347
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.007468	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40	40.054785	12028	4474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40	40.111332	23177	5177
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.039980	6095	1468
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_gcd	40	40.134466	44638	5598
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.045476	8981	4720
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.concat_nil_Forall	40	40.075782	19856	4752
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40	40.064340	17870	3593
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	40.108322	37310	5429
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.repeat_to_concat	40	1.266866	378	103	6.0.0.1.8	synth with cache (only 1: induction n as [| n IH]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.164467	60914	3154
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40	40.064814	14577	5199
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40	40.042825	9802	3111
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	40.087949	24021	4207
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40	40.068366	14256	3323
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_l	40	40.173415	64349	5248
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.127596	14414	2894
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40	40.036244	8367	2008
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.109546	34653	4431
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.054389	14500	3665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40	40.057250	16149	3243
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.050290	12055	4262
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.in_flat_map_Exists	40	40.085054	25273	4591
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40	40.058042	12988	3557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.071451	19451	3857
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40	40.054890	13739	4214
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.notin_flat_map_Forall	40	40.092149	28891	5181
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.135265	49988	4478
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_app_inv_l	40	40.107220	34527	5537
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.054826	15547	2566
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40	40.125201	5964	1488
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40	40.032685	7112	1958
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40	40.054611	11764	3192
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.103913	36216	3790
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_greatest	40	40.086881	25241	5213
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40	40.052181	13650	2984
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_app_inv_r	40	40.101487	31323	5520
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.043963	9915	2542
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_cons	40	20.038251	27247	1321	0.14.27.0.51	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40	40.024449	5171	1829
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.154725	57469	6299
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40	40.231601	4490	796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40	40.051489	8200	2241
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40	40.059897	12443	2402
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40	40.050933	14059	2261
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40	40.048747	14423	2288
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40	40.049999	11571	4657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40	40.034444	5588	1635
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Forall2.Forall2_app	40	40.088892	23213	4699
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40	40.056278	15322	4151
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40	40.134463	51219	4521
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Peqb_true_eq	40	40.271972	76333	5214
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40	40.031717	5925	702
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_spec	40	35.672753	68817	3938	1.2.1.2.6.9.0.2.2.36.16	synth with cache (only 1: revert n; only 1: destruct n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: compute; only 1: induction n as [| n IH]; only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.054581	13874	3809
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40	40.073013	17165	3303
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40	40.040083	9445	3146
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40	40.042807	8781	3250
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40	40.046834	14595	1784
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40	40.045607	8270	2476
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40	40.045404	9740	3333
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	16.749502	10716	2411	0.0.10.2.7.0	synth with cache (only 1: intros a n H; only 1: symmetry; only 1: pose proof (land_lnot_diag_low a n H) as H'; only 1: apply add_sub_eq_l; only 1: rewrite add_nocarry_lxor, lxor_lor by trivial; only 1: now apply lor_lnot_diag_low).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40	40.070986	16183	2793
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40	40.042518	9100	2216
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pminus_mask_Gt	40	40.173790	43589	5336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40	40.072739	22064	3328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40	40.035526	4956	876
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pplus_minus	40	40.107602	47064	6124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40	40.039268	9473	889
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_sum_app	40	40.076094	21881	3017
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40	40.067248	18354	4564
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40	40.049038	13398	3159
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Dcompare	40	40.248511	79926	3253
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40	40.062996	18219	2985
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40	40.052060	14664	2443
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40	40.033323	8238	1757
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40	40.029624	1928	989
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40	40.051636	14552	3084
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40	40.059186	13171	3665
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_max_app	40	40.102389	30533	5965
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.028853	7104	1453
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.055965	19341	4721
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.077836	26720	3263
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_max_le	40	40.079846	33104	6737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.060708	18366	3084
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.056090	16480	3019
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.list_max_lt	40	40.074997	23799	4773
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40	40.051923	18255	3940
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40	40.060233	25405	3613
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.053638	4601	1077
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.043145	15070	4211
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40	40.062013	20243	6406
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40	40.044853	2906	924
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.053948	17968	3230
