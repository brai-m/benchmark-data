
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	22	synth with cache (only 1: firstorder).	0.825941801071	486
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	12	synth with cache (only 1: firstorder).	0.0867841243744	56
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	9	synth with cache (only 1: firstorder).	0.0429809093475	23
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.2.0	synth with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: auto; only 1: simpl; only 1: auto).	0.0273070335388	7
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	21	synth with cache (only 1: destr_bool).	0.551728010178	592
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0	synth with cache (only 1: auto).	0.0153849124908	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0	synth with cache (only 1: reflexivity).	0.0147449970245	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	3.0.10.3.12	synth with cache (only 1: intros l H; only 1: inversion H; only 1: destruct l; only 1: reflexivity; only 1: discriminate).	3.44864177704	3815
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.0.16.5	synth with cache (only 1: intros; only 1: induction f; only 1: reflexivity; only 1: auto).	0.521636962891	746
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	1.1.0.6.9.8.0.9.16	synth with cache (only 1: intros l; only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: firstorder  (subst; auto); only 1: destruct a; only 1: induction l as [| a l IH]; only 1: auto; only 1: auto; only 1: auto).	28.9496290684	68864
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40	2.11.37	synth with cache (only 1: intros H; only 1: fix gcd_divide 1; only 1: auto).	4.14287018776	7562
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	1.0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: reflexivity).	0.458678007126	159
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	2.6	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.0504398345947	51
Coq.rtauto.Bintree.map_app	40	0.0.1.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0383999347687	21
Coq.rtauto.Bintree.length_map	40	0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0156691074371	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.0.0.13.7.1	synth with cache (only 1: induction l; only 1: now intros []; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	6.58527898788	10300
Coq.rtauto.Bintree.Lget_app_Some	40	0.1.7.0.5.2.9.0	synth with cache (only 1: induction l; only 1: intros l m a; only 1: easy; only 1: intros l' n; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	39.8029308319	39328
Coq.rtauto.Bintree.Store.Tget_Tempty	40	5.3	synth with cache (only 1: intros; only 1: now destruct p).	0.0128359794617	10
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	4	synth with cache (only 1: now intros []).	0.00920987129211	5
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40	2.14.1.5.1	synth with cache (only 1: unfold empty, index, get, contents; only 1: intros i j; only 1: case i; only 1: fix sqrtrem_spec 1; only 1: auto).	10.2782120705	14983
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40	0.17	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	1.75813603401	2093
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	3	synth with cache (only 1: reflexivity).	0.0110700130463	4
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	11	synth with cache (only 1: now rewrite ?H, ?IHp).	0.111054897308	70
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	24	synth with cache (only 1: firstorder).	0.564038038254	567
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	0.0.0.1	synth with cache (only 1: constructor; only 1: congruence; only 1: congruence; only 1: congruence).	0.0190670490265	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.9.1.1.9.1.4	synth with cache (only 1: constructor; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: auto; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: auto).	4.06789493561	4147
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.1	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0560538768768	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	2.11	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).	0.0682339668274	78
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	2.9	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).	0.0581171512604	49
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	2.6	synth with cache (only 1: intros a b H; only 1: auto).	0.0198481082916	10
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.0.0.0.3	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.0326189994812	8
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	6	synth with cache (only 1: solve_proper).	0.147974967957	7
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	1	synth with cache (only 1: reflexivity).	0.0107078552246	2
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.00994992256165	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	2.0.6.2.2.1.5.5.4	synth with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intros x y H; only 1: auto).	1.11933803558	1899
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	7	synth with cache (only 1: simpl_relation).	0.206176042557	16
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	5.9	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).	0.125805139542	190
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	5.4	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).	0.0430181026459	30
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	9.8	synth with cache (only 1: intros a b H; only 1: firstorder).	0.176584005356	351
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	7.6	synth with cache (only 1: intros a b H; only 1: firstorder).	0.389559984207	184
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	7	synth with cache (only 1: firstorder).	0.0556468963623	13
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	11	synth with cache (only 1: firstorder).	0.0886790752411	84
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	9	synth with cache (only 1: auto).	0.030956029892	17
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.00717401504517	1
Coq.ssr.ssrbool.is_true_true	40	2	synth with cache (only 1: exact (erefl _)).	0.00372099876404	3
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: by case).	0.0048611164093	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.5	synth with cache (only 1: unlock; only 1: by [  ]).	0.00704407691956	7
Coq.ssr.ssrbool.negbT	40	0.0.5	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.0622458457947	8
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.00507211685181	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.00432586669922	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.00482821464539	1
Coq.ssr.ssrbool.negbK	40	0	synth with cache (only 1: by case).	0.147808074951	1
Coq.ssr.ssrbool.negbNE	40	3	synth with cache (only 1: by case : b ).	0.00576996803284	4
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	3	synth with cache (only 1: Bool.destr_bool).	0.0117599964142	13
Coq.ssr.ssrbool.negbRL	40	2.9.1	synth with cache (only 1: intros; only 1: subst; only 1: by case : b ).	0.052757024765	129
Coq.ssr.ssrbool.contra	40	1.25	synth with cache (only 1: Bool.destr_bool; only 1: tauto).	0.301002025604	453
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.00797080993652	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.00797319412231	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.00795984268188	1
Coq.ssr.ssrbool.contraT	40	12.21	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.485252857208	990
Coq.ssr.ssrbool.wlog_neg	40	1	synth with cache (only 1: by case : b  => // ->).	0.00722098350525	2
Coq.ssr.ssrbool.contraFT	40	6.0.2.3.2.9	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: trivial; only 1: simpl; only 1: Bool.destr_bool; only 1: trivial; only 1: by move ->).	0.98625421524	1568
Coq.ssr.ssrbool.contraFN	40	4.14	synth with cache (only 1: Bool.destr_bool; only 1: auto).	7.03005194664	206
Coq.ssr.ssrbool.contraTF	40	2.17	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	11.9374680519	189
Coq.ssr.ssrbool.contraNF	40	2.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	26.512624979	171
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.0431180000305	1
Coq.ssr.ssrbool.BoolIf.ifT	40	1	synth with cache (only 1: by case : b ).	0.01251912117	11
Coq.ssr.ssrbool.BoolIf.ifF	40	2	synth with cache (only 1: by case : b ).	0.0134780406952	12
Coq.ssr.ssrbool.BoolIf.ifN	40	1	synth with cache (only 1: by case : b ).	0.0072979927063	2
Coq.ssr.ssrbool.BoolIf.if_same	40	1	synth with cache (only 1: by case  def_b: b ; constructor).	0.127717971802	2
Coq.ssr.ssrbool.BoolIf.if_neg	40	0	synth with cache (only 1: by case b).	0.0850369930267	1
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.00591111183167	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.00573492050171	1
Coq.ssr.ssrbool.BoolIf.ifE	40	5	synth with cache (only 1: trivial).	0.0101280212402	6
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0496559143066	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.049663066864	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.00573396682739	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	1.1.5	synth with cache (only 1: destruct 1; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.122627019882	17
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	8	synth with cache (only 1: constructor).	0.0773570537567	9
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.5	synth with cache (only 1: intros Hfst Hsnd; only 1: auto).	0.0111880302429	7
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0	synth with cache (only 1: by [  ]).	0.00442290306091	1
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0103979110718	1
Coq.ssr.ssrfun.Sig.svalP	40
Coq.ssr.ssrfun.Sig.s2valP	40	1	synth with cache (only 1: by case : u ).	0.0438239574432	2
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.0445508956909	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0466270446777	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	1.1983859539	1
Coq.ssr.ssrfun.Injections.can_pcan	40	2.24.8.23	synth with cache (only 1: Bool.destr_bool; only 1: intro z; only 1: rewrite H; only 1: tauto).	0.81461596489	4238
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.258386135101	2
Coq.ssr.ssrfun.Injections.canLR	40	3.8	synth with cache (only 1: intro H; only 1: by move ->).	1.82213592529	82
Coq.ssr.ssrfun.Injections.canRL	40	4.4	synth with cache (only 1: destruct 2; only 1: auto).	0.303200006485	16
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	16	synth with cache (only 1: by case).	1.27989816666	108
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40	0.16	synth with cache (only 1: subst; only 1: reflexivity).	0.116681098938	126
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	1	synth with cache (only 1: by move  =>eq_fg x).	0.0256569385529	2
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	3.5.8	synth with cache (only 1: intros; only 1: intro x; only 1: auto).	0.776277065277	196
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.0.13	synth with cache (only 1: refine (@rectS _ _ _ _); only 1: intro n; only 1: now simpl; only 1: now simpl).	4.24425196648	2647
Coq.Vectors.VectorSpec.const_nth	40	0.0.15.11	synth with cache (only 1: pattern a; only 1: induction p; only 1: now simpl; only 1: now simpl).	10.6569309235	7338
Coq.Vectors.VectorSpec.nth_map	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	0	synth with cache (only 1: discriminate).	0.0045440196991	1
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.00401210784912	1
Coq.Bool.Bool.eq_true_false_abs	40	2.14.10	synth with cache (only 1: intro H; only 1: inversion 1; only 1: discriminate).	0.163584947586	1741
Coq.Bool.Bool.not_true_is_false	40	0.12.1	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.025367975235	157
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0059289932251	2
Coq.Bool.Bool.not_true_iff_false	40	2.0.1.1	synth with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.0217039585114	48
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00783586502075	3
Coq.Bool.Bool.leb_implb	40	1.0.1.0.5.8	synth with cache (only 1: intros; only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.281719923019	948
Coq.Bool.Bool.eqb_subst	40	1	synth with cache (only 1: destr_bool).	0.00673890113831	2
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.00532698631287	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.00664091110229	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0103108882904	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0122549533844	5
Coq.Bool.Bool.negb_orb	40	2.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0095489025116	5
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.00648713111877	1
Coq.Bool.Bool.negb_involutive	40	0	synth with cache (only 1: destr_bool).	0.00579905509949	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.00567388534546	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.00704097747803	1
Coq.Bool.Bool.no_fixpoint_negb	40	1	synth with cache (only 1: destr_bool).	0.0056300163269	2
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.00535011291504	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.0040271282196	1
Coq.Bool.Bool.if_negb	40	1	synth with cache (only 1: destr_bool).	0.00529289245605	2
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00694799423218	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00721287727356	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0127739906311	5
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0118601322174	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.00936603546143	5
Coq.Bool.Bool.orb_prop	40	1.1.1.1.1	synth with cache (only 1: destruct a, b; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.00892090797424	10
Coq.Bool.Bool.orb_true_intro	40	1.0.0.0.0.0	synth with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destr_bool; only 1: intuition).	0.00837707519531	7
Coq.Bool.Bool.orb_false_intro	40	0	synth with cache (only 1: destr_bool).	0.00681281089783	1
Coq.Bool.Bool.orb_false_elim	40	0.0.4.0.0	synth with cache (only 1: destruct b1; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: auto).	0.007493019104	9
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.00531196594238	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00531315803528	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00581884384155	1
Coq.Bool.Bool.orb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0053288936615	1
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0052490234375	1
Coq.Bool.Bool.orb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00533509254456	1
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.00640106201172	1
Coq.Bool.Bool.orb_assoc	40	1	synth with cache (only 1: destr_bool).	0.0719330310822	2
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0119118690491	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.013041973114	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.00795698165894	9
Coq.Bool.Bool.andb_false_intro1	40	0	synth with cache (only 1: destr_bool).	0.00579214096069	1
Coq.Bool.Bool.andb_false_intro2	40	1.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00666379928589	4
Coq.Bool.Bool.andb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0429780483246	1
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00467109680176	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.00471711158752	1
Coq.Bool.Bool.andb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00520014762878	1
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0051441192627	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.1	synth with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0117030143738	15
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00477910041809	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.005863904953	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0079128742218	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.00747895240784	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.00867605209351	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.00837206840515	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.00817584991455	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.00656700134277	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.0063259601593	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.00583910942078	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00587797164917	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0055410861969	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.00483798980713	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.00594305992126	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.00762391090393	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.00802803039551	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.00707793235779	1
Coq.Bool.Bool.xorb_move_l_r_1	40	3	synth with cache (only 1: destr_bool).	0.0135719776154	13
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.00847387313843	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.00826406478882	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.00831913948059	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.00640201568604	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00722098350525	5
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.00643515586853	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0218410491943	5
Coq.Bool.Bool.eq_true_iff_eq	40	4.0.1.3	synth with cache (only 1: destruct b1; only 1: intuition; only 1: destr_bool; only 1: intuition).	0.153440952301	223
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00736999511719	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00629591941833	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00742983818054	5
Coq.Bool.Bool.absurd_eq_true	40	4.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.00646305084229	8
Coq.Bool.Bool.trans_eq_bool	40	1	synth with cache (only 1: destr_bool).	0.00855183601379	2
Coq.Bool.Bool.Is_true_eq_true	40	2.1	synth with cache (only 1: destr_bool; only 1: auto).	0.00660300254822	5
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.00609707832336	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00555205345154	3
Coq.Bool.Bool.eqb_refl	40	2	synth with cache (only 1: destr_bool).	0.00633192062378	3
Coq.Bool.Bool.eqb_eq	40	0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0083019733429	4
Coq.Bool.Bool.orb_prop_elim	40	1.0.1.0.1.3.1.0.1	synth with cache (only 1: destr_bool; only 1: constructor; only 1: auto; only 1: right; only 1: auto; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto).	0.421807050705	1765
Coq.Bool.Bool.orb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: tauto; only 1: tauto).	0.00816297531128	4
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.00889301300049	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0090868473053	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0604951381683	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00872993469238	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00696301460266	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.00727415084839	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.00603294372559	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00631213188171	3
Coq.Bool.Bool.andb_if	40	0	synth with cache (only 1: destr_bool).	0.00664687156677	1
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.00497317314148	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.00712704658508	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.00491499900818	1
Coq.Bool.Bool.reflect_iff	40	4.3.0.1	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: inversion_clear H).	0.21252989769	282
Coq.Bool.Bool.iff_reflect	40	3.4.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0274391174316	51
Coq.Bool.Bool.reflect_dec	40	0.0.0	synth with cache (only 1: destruct 1; only 1: tauto; only 1: tauto).	0.00826191902161	3
Coq.Bool.Bool.eqb_spec	40	1.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.00963282585144	7
Coq.Lists.ListSet.first_definitions.set_In_dec	40	0.25.12	synth with cache (only 1: intro Ha; only 1: fix even_spec 1; only 1: auto).	6.88387393951	6964
Coq.Lists.ListSet.first_definitions.set_mem_ind	40	0.0.13.2.1.1.0.4.1	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: intuition; only 1: case (Aeq_dec a a0); only 1: auto; only 1: auto).	18.0361201763	21176
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	0.1.14.1.0.4.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: firstorder; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: auto; only 1: auto).	9.38551807404	11126
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	3.0.2.1.1.1.0	synth with cache (only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	4.90807008743	3177
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	0.0.0.1.5.0.0.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).	10.7456159592	10613
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40	0.1.0.1.0.3.0.7.0.1.2	synth with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: subst; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: auto; only 1: right; only 1: auto).	24.4549708366	29561
Coq.Lists.ListSet.first_definitions.set_add_intro	40	1.1.4	synth with cache (only 1: intros H H0 H1 [| ]; only 1: auto; only 1: auto with datatypes).	0.142621994019	66
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	1.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	2.25464081764	1455
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	0.7.0.6.3.1.0.2.4	synth with cache (only 1: simple induction x; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate).	11.2808849812	14728
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.List.Facts.nil_cons	40	7.0	synth with cache (only 1: CRelationClasses.reduce; only 1: discriminate).	0.0118768215179	9
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.0.0.0	synth with cache (only 1: destruct l as [| x xs]; only 1: intros; only 1: discriminate; only 1: discriminate).	0.0118038654327	4
Coq.Lists.List.Facts.length_zero_iff_nil	40	0.0.0.0.3.23	synth with cache (only 1: destruct l; only 1: firstorder; only 1: split; only 1: simpl; only 1: now discriminate; only 1: now discriminate).	1.25594997406	2682
Coq.Lists.List.Facts.hd_error_nil	40	0	synth with cache (only 1: reflexivity).	0.00743103027344	1
Coq.Lists.List.Facts.hd_error_cons	40	1.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0086829662323	3
Coq.Lists.List.Facts.in_eq	40	1.0	synth with cache (only 1: intros; only 1: firstorder  discriminate).	0.00841999053955	3
Coq.Lists.List.Facts.in_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.00837302207947	2
Coq.Lists.List.Facts.not_in_cons	40	1.0.3.0.0	synth with cache (only 1: split; only 1: simpl; only 1: firstorder; only 1: intros (H1, H2); only 1: firstorder).	0.0191421508789	9
Coq.Lists.List.Facts.in_nil	40	2.0	synth with cache (only 1: simpl; only 1: auto with sets).	0.00861692428589	4
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.00631213188171	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00856709480286	2
Coq.Lists.List.Facts.app_nil_r	40	0.7.3.0.4	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.597912073135	993
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0138468742371	7
Coq.Lists.List.Facts.app_assoc	40	2.0.0.2.0.0.0	synth with cache (only 1: induction l; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: f_equal; only 1: auto).	0.131675004959	150
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0157580375671	7
Coq.Lists.List.Facts.app_comm_cons	40	0.2.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.0353767871857	20
Coq.Lists.List.Facts.app_eq_nil	40	1.0.0	synth with cache (only 1: induction l as [| a tail]; only 1: firstorder; only 1: firstorder  discriminate).	0.0167319774628	4
Coq.Lists.List.Facts.app_eq_unit	40	0.3.1.6.4.0.1.0.0	synth with cache (only 1: destruct x as [| a l]; only 1: auto; only 1: destruct l as [| x l]; only 1: simpl; only 1: intros n m; only 1: inversion 1; only 1: firstorder; only 1: intros; only 1: discriminate H).	19.8066790104	20424
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40
Coq.Lists.List.Facts.in_app_or	40	8.4.3	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder).	1.99982690811	1955
Coq.Lists.List.Facts.in_or_app	40	4.0.4.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: firstorder).	0.640311956406	883
Coq.Lists.List.Facts.in_app_iff	40	3.3.0.2.0.3	synth with cache (only 1: intros; only 1: elim l; only 1: firstorder; only 1: simpl; only 1: intros y H0 H1; only 1: intuition).	5.19115209579	5410
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	1.0.0.3.0.0.3.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor; only 1: trivial; only 1: auto).	0.842815160751	885
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.2.0.0.2.0	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.158283948898	89
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	3.0.3.0	synth with cache (only 1: split; only 1: firstorder; only 1: inversion_clear H; only 1: firstorder).	0.0320670604706	10
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.0.1.1.0.1.1.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.556776046753	457
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	13	synth with cache (only 1: inversion 1).	0.140836000443	161
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.0.2.0.1.2.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.274420022964	207
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	3.3.0.4.2.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: trivial; only 1: trivial; only 1: intro; only 1: firstorder; only 1: constructor; only 1: firstorder; only 1: firstorder).	21.202242136	25282
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.0.0.1.5.0.8.0	synth with cache (only 1: intros x y z H; only 1: induction 1 as [| a l [| ]]; only 1: constructor; only 1: transitivity ltac:(y); only 1: auto; only 1: trivial; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel).	6.44855999947	1766
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.0.1.0.3	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.218397140503	13
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.NArith.BinNat.N.eq_dec	40	1.0	synth with cache (only 1: decide equality; only 1: decide equality).	0.0321290493011	3
Coq.NArith.BinNat.N.discr	40	0.1.14.6.0.26	synth with cache (only 1: induction n; only 1: auto; only 1: left; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	2.06639409065	5405
Coq.NArith.BinNat.N.peano_rect_base	40	0	synth with cache (only 1: trivial).	0.0092191696167	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.00773906707764	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0163378715515	5
Coq.NArith.BinNat.N.bi_induction	40	1.0.0.11.2.0	synth with cache (only 1: intros A A_wd A0 AS; only 1: intro n; only 1: apply Pos.peano_ind; only 1: assumption; only 1: intros; only 1: now apply -> AS).	1.11355280876	2508
Coq.NArith.BinNat.N.recursion_wd	40	1.7.11.0.0.0.0.0	synth with cache (only 1: intros a a' Ha f f' Hf n n' Hn; only 1: subst n'; only 1: induction n; only 1: simpl; only 1: auto; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	14.9225950241	14159
Coq.NArith.BinNat.N.recursion_0	40	0	synth with cache (only 1: trivial).	0.00777411460876	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	synth with cache (only 1: trivial).	0.00926303863525	1
Coq.NArith.BinNat.N.two_succ	40	0	synth with cache (only 1: trivial).	0.00851798057556	1
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: reflexivity).	0.00826382637024	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?IHp).	0.0191550254822	7
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0144989490509	5
Coq.NArith.BinNat.N.pos_pred_succ	40	1.0.1.4.0.8	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	1.12067580223	876
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.0.4.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial).	4.12786984444	3456
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: apply Pos.pred_N_succ).	0.0131599903107	3
Coq.NArith.BinNat.N.pred_sub	40	0.2.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p).	0.0170340538025	6
Coq.NArith.BinNat.N.succ_0_discr	40	0.0.5.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: destr_eq H; only 1: discriminate).	0.0162999629974	9
Coq.NArith.BinNat.N.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.00907611846924	1
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	1	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.0101299285889	2
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: reflexivity).	0.00803518295288	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	7.5.0	synth with cache (only 1: revert m; only 1: fix sqrtrem_spec 1; only 1: auto).	1.24168205261	937
Coq.NArith.BinNat.N.ltb_lt	40	10.4.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	1.98908901215	2986
Coq.NArith.BinNat.N.leb_le	40	10.4.4	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: now destruct (PeanoNat.Nat.even n)).	1.91989803314	3319
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	2.0	synth with cache (only 1: unfold ltb, lt; only 1: now split).	0.0102159976959	4
Coq.NArith.BinNat.N.compare_le_iff	40	0.1.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: destruct m; only 1: reflexivity; only 1: reflexivity).	0.0201358795166	10
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	7	synth with cache (only 1: inversion_clear 1).	0.0317099094391	11
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.3	synth with cache (only 1: unfold Empty, empty; only 1: auto).	0.0111291408539	5
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	0.25	synth with cache (only 1: fix even_spec 1; only 1: auto).	27.3272078037	2314
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	2.1.1.2.3	synth with cache (only 1: unfold Empty, empty; only 1: intros m; only 1: case m; only 1: auto; only 1: inversion_clear 1).	0.845731019974	476
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FMapList.Raw.Elt.empty_1	40	5	synth with cache (only 1: inversion_clear 1).	0.0194458961487	6
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	2	synth with cache (only 1: constructor).	0.00888299942017	3
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	2.2.0.0.0.6	synth with cache (only 1: unfold Empty, empty; only 1: intros m; only 1: case m; only 1: auto; only 1: simpl; only 1: inversion_clear 1).	1.59172797203	1126
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0197961330414	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0194330215454	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0193631649017	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0176601409912	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0950219631195	48
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	2.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0306830406189	13
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.3.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	1.91995310783	859
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	2.09143710136	916
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.6.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	5.49160814285	2176
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	0.413851976395	116
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	2.0.0.1.5	synth with cache (only 1: nzinduct n; only 1: intuition order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.313359022141	347
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.11.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.241935968399	254
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.1.0.0	synth with cache (only 1: intro; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0142638683319	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	3.2.1.6.1.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl n); only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_succ_r; only 1: now nzsimpl').	5.62145400047	4040
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	5.9.1.1	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).	24.3955230713	19895
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.1.14.0	synth with cache (only 1: intros n m H; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: order).	3.09672904015	4156
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.0.1	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0844058990479	69
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0110528469086	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.1.0.8.0	synth with cache (only 1: intro; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.311432123184	353
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	2.0.5	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.0245521068573	10
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	1.51285099983	1179
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.014955997467	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.1.1.0.0.0.1.0.1.1.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	14.9224510193	11133
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.0.1.1.4.0.2.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: intuition; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	6.9808909893	6319
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0149810314178	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	1.7.0.1.2.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: intuition; only 1: destruct (mod_neg_bound a b); only 1: order; only 1: right; only 1: auto).	20.2160601616	17146
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_succ_l, pred_succ).	0.0285720825195	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	10.14.1	synth with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: apply le_0_l).	10.8842589855	14627
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.1.7.1	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.718172073364	877
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.1.1	synth with cache (only 1: intro H; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.117358922958	86
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	0.0.4.3.2.0.0.5.4	synth with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: split; only 1: intro H; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intro H; only 1: apply neq_succ_0).	18.4389169216	22397
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	1.0.0.5.4	synth with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.540355920792	716
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.0.0.0.0.0.0.2.1.6	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: rewrite lt_succ_r; only 1: split; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: now apply eq_le_incl).	4.13363599777	4643
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	6.1.1.9.0.0.0.0	synth with cache (only 1: intro n; only 1: induct ltac:(m); only 1: intro H; only 1: false_hyp H nlt_0_r; only 1: intro m; only 1: intros _ H; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	16.1286218166	18175
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.15.0.1	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	5.61905097961	4861
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: nzsimpl; only 1: order).	0.137233018875	59
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0371379852295	18
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	2.0.2.1	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply le_0_l).	0.0729069709778	43
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.2.1.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: auto').	0.0224859714508	13
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0142071247101	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.014328956604	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.0.3.11.3.0.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl').	4.59619092941	8956
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.0.2.3.0.5	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	0.865756034851	1236
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0125241279602	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0126631259918	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	2.1.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	0.114720106125	70
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.0.1.3.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: intuition; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.58362698555	288
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	1.2.4.0.0.6.7	synth with cache (only 1: intuition; only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: apply mod_le; only 1: auto'; only 1: order).	12.6487510204	16465
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.1.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0851700305939	36
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	0.0.0.1.2.4.8.0.3	synth with cache (only 1: split; only 1: intros Hab; only 1: rewrite <- div_small_iff; only 1: auto; only 1: auto'; only 1: auto'; only 1: intros Hab; only 1: apply Private_NZDiv.div_small; only 1: auto').	34.501940012	40511
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	1.4.0.1.1.5.2.2.1	synth with cache (only 1: intros; only 1: intuition; only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: rewrite <- Private_NZDiv.div_small_iff in LT; only 1: order; only 1: order; only 1: auto; only 1: apply Private_NZDiv.div_str_pos; only 1: auto').	28.1826651096	28332
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	2.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).	0.0216910839081	21
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0263710021973	11
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	1.1.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0136568546295	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.1.0.0.0.0.0.1.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l; only 1: apply le_0_l).	4.36171078682	691
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.041002035141	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	0.0.3.1	synth with cache (only 1: intro n; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	0.120389938354	8
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	7.35085201263	1618
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	0.4.8.2	synth with cache (only 1: intros a b Ha Hb; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order).	1.5108230114	1700
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.3.0.7.0	synth with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).	2.90677499771	1705
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.0.0.0.3	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').	0.129261016846	46
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.283816814423	265
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.1.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	0.0705029964447	45
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.1.0.0.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: order).	0.0177719593048	10
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	15.1.4	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: CRelationClasses.simpl_crelation).	0.444195985794	731
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.2.2.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.0142650604248	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	6.0.1.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: trivial).	0.522714138031	97
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0335118770599	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.100332975388	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	1.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.0961239337921	7
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0595619678497	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.4.2.1.2.47	synth with cache (only 1: apply log2_unique; only 1: order; only 1: split; only 1: now nzsimpl; only 1: apply pow_gt_1; only 1: apply lt_1_2; only 1: apply lt_succ_diag_r).	1.75120687485	2821
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	2.1.14.2.1.0.6.6.0	synth with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order; only 1: nzsimpl; only 1: order'; only 1: now nzsimpl).	9.54935002327	11552
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	0.192557096481	96
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	27.9.8.9.13	synth with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: repeat red; only 1: apply Logic.eq_trans).	21.7928409576	67240
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	4.0.1.0.0.12.1	synth with cache (only 1: split; only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	0.271826028824	782
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.3	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.201472997665	74
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.00918698310852	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	synth with cache (only 1: order).	0.00915312767029	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.00917315483093	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	synth with cache (only 1: order).	0.00982308387756	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	synth with cache (only 1: order).	0.00803995132446	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.1.1.0	synth with cache (only 1: destruct (compare x y); only 1: intuition; only 1: intuition; only 1: auto).	0.0172629356384	6
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.00858998298645	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.00845098495483	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	synth with cache (only 1: order).	0.00824308395386	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.00830698013306	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	synth with cache (only 1: order).	0.00815510749817	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.00764679908752	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0080509185791	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.00770807266235	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	6.4.6.15.4	synth with cache (only 1: intros x y; only 1: destruct (compare x y); only 1: order; only 1: eauto; only 1: order).	1.8224568367	5016
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	1.24033308029	521
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.518961906433	367
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.3	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0243320465088	18
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	2.0.1.0.1.0.0.0.0.1.1.2.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: simpl_relation).	12.0649750233	6804
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.1.2.0.0.0.0.0.1.1.1.0.2	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	13.5190169811	4131
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.1.0.0.0.1.2.1.0.0.1.1.2.1.2	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).	10.6738770008	5069
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	3.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.00658297538757	5
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	7.0.0	synth with cache (only 1: compute; only 1: intros x y; only 1: order).	0.0188510417938	27
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	1.5	synth with cache (only 1: repeat red; only 1: iorder).	0.066999912262	60
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.00754380226135	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	1.21.24.10.12	synth with cache (only 1: destr_bool; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: iorder; only 1: iorder; only 1: intuition).	37.6167299747	98000
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.4.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: firstorder; only 1: auto; only 1: auto).	0.060868024826	37
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	4.0	synth with cache (only 1: intros; only 1: iorder).	0.0452959537506	34
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	7.1	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0517289638519	32
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.00982093811035	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1.4.0	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: subst; only 1: auto).	0.0168058872223	9
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	3.0.0.0.0.0.1	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	0.182785987854	122
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.0.13.1.1.0.3	synth with cache (only 1: destruct l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	4.47844099998	4835
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.2.11	synth with cache (only 1: intros x y z H; only 1: rewrite <- H; only 1: auto).	0.32595205307	452
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	0.0.5.0.0.12.1.2.1.1.4	synth with cache (only 1: simple induction l; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: setoid_replace x with a; only 1: auto; only 1: auto; only 1: transitivity a; only 1: auto; only 1: auto).	21.0867021084	21531
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.1.0.4	synth with cache (only 1: simple induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0201909542084	10
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	6.1.7	synth with cache (only 1: simple induction l; only 1: auto; only 1: intuition).	0.180080890656	241
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	20	synth with cache (only 1: solve_proper).	1.76567792892	1405
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	8.16.0	synth with cache (only 1: unfold eqk, ltk; only 1: unfold RelCompFun; only 1: solve_proper).	17.5921139717	5326
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1	synth with cache (only 1: firstorder).	0.00816512107849	2
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.024181842804	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0240240097046	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	2	synth with cache (only 1: firstorder).	0.0282011032104	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	synth with cache (only 1: auto).	0.0236320495605	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	synth with cache (only 1: reflexivity).	0.0231671333313	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1	synth with cache (only 1: firstorder).	0.0270779132843	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	3	synth with cache (only 1: now destruct 1).	0.02774310112	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	synth with cache (only 1: auto).	0.0244410037994	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: auto).	0.0243668556213	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	synth with cache (only 1: firstorder).	0.0245890617371	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	3.4	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.0926759243011	26
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	2.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0465669631958	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.0.7.0.17	synth with cache (only 1: intro H; only 1: induction 1; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).	3.64433217049	1899
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.7.4	synth with cache (only 1: unfold In, MapsTo; only 1: firstorder; only 1: invlist InA).	1.09022593498	434
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.1.1.0.0.2.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.143718957901	226
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.1.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	13.0727908611	7192
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	1.2.3.3.13	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros R R' EQ a a' Ha WF; only 1: order).	4.68245506287	4623
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.ZArith.Znat.nat_N_Z	40	2.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0257811546326	7
Coq.ZArith.Znat.N_nat_Z	40	0.1.0.0.0.0.2.0.0.16	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	1.2281908989	909
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0178489685059	5
Coq.ZArith.Znat.positive_N_Z	40	0.1.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: simpl; only 1: f_equal).	0.0142230987549	4
Coq.ZArith.Znat.positive_N_nat	40	1	synth with cache (only 1: trivial).	0.00855493545532	2
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0210399627686	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0204150676727	5
Coq.ZArith.Znat.Z_nat_N	40	0.0.1.0.0.0.1.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	1.18595480919	630
Coq.ZArith.Znat.Zabs_N_nat	40	0	synth with cache (only 1: now destruct n).	0.00994300842285	1
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.024099111557	9
Coq.ZArith.Znat.N2Z.id	40	0	synth with cache (only 1: now destruct n).	0.0103409290314	1
Coq.ZArith.Znat.N2Z.inj	40	1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).	1.48741793633	590
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros; only 1: now Morphisms.f_equiv).	2.51611804962	797
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.4.22	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.4371509552	408
Coq.ZArith.Znat.N2Z.inj_0	40	1	synth with cache (only 1: trivial).	0.00906705856323	2
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.00832986831665	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0282900333405	9
Coq.ZArith.Znat.N2Z.inj_le	40	2	synth with cache (only 1: now destruct n, m).	0.755784034729	173
Coq.ZArith.Znat.N2Z.inj_lt	40	4.2	synth with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0157577991486	8
Coq.ZArith.Znat.N2Z.inj_ge	40	3	synth with cache (only 1: now destruct n, m).	0.012687921524	4
Coq.ZArith.Znat.N2Z.inj_gt	40	4	synth with cache (only 1: now destruct n, m).	0.0122580528259	5
Coq.ZArith.Znat.N2Z.inj_abs_N	40	4.4.0.45.7	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: trivial; only 1: trivial).	8.67010498047	8939
Coq.ZArith.Znat.N2Z.inj_add	40	2	synth with cache (only 1: now destruct n, m).	0.0125460624695	3
Coq.ZArith.Znat.N2Z.inj_mul	40	1	synth with cache (only 1: now destruct n, m).	0.0108919143677	2
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.25	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	14.8374261856	16028
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.1.0.1.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.141020059586	121
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	8	synth with cache (only 1: now destruct n).	0.0945730209351	9
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	synth with cache (only 1: now destruct n).	0.0113780498505	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	synth with cache (only 1: now destruct n).	0.0101580619812	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	1.0.3	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: auto).	0.0211780071259	7
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	0.0.1.3	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.0219399929047	8
Coq.Sorting.Permutation.Permutation_cons	40	0.3.2	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: subst; only 1: auto).	0.0243449211121	8
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	0.4.0.0.2.1.0.0.6	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto; only 1: firstorder; only 1: auto).	24.1896510124	11833
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	0.0.0.0.10.5	synth with cache (only 1: intros l m a; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.01154494286	820
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: reflexivity || destruct H).	0.0046660900116	2
Coq.Init.Peano.not_eq_S	40	0.2	synth with cache (only 1: intro H; only 1: auto).	0.00687599182129	4
Coq.Init.Peano.O_S	40	3	synth with cache (only 1: discriminate).	0.00568795204163	4
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.3.0.2	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.00734901428223	9
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0068039894104	5
Coq.Init.Peano.plus_n_Sm	40
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00688099861145	6
Coq.Init.Peano.mult_n_O	40	0.0.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00644493103027	5
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.7	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00492596626282	10
Coq.Init.Peano.le_n_S	40	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.00481390953064	3
Coq.Init.Peano.nat_case	40	0.3.3.4	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: trivial).	0.0258710384369	152
Coq.Init.Peano.nat_double_ind	40	4.0.6.10.9.7.10	synth with cache (only 1: intros P b H H0; only 1: induction n; only 1: auto; only 1: intro; only 1: elim m; only 1: auto; only 1: auto).	0.95703792572	10640
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.45981812477	4353
Coq.Init.Peano.min_l	40	0.0.0.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.28906202316	4556
Coq.Init.Peano.min_r	40	0.0.1.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.530200004578	1715
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	3.0.0.4.1.0	synth with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.419803857803	1283
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.00502705574036	3
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40
Coq.Init.Logic.Equivalence.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.2.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.0661599636078	831
Coq.Init.Logic.imp_iff_compat_l	40	3.3.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0061252117157	10
Coq.Init.Logic.imp_iff_compat_r	40	2.1.3.0.1.0.2.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.0235359668732	384
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00575399398804	4
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40	0.2.1.0.0.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: assumption).	5.84878993034	64936
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.00604200363159	9
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	1.1.0.1.1.0.2.1.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.206893920898	2465
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	3.0	synth with cache (only 1: intros; only 1: assumption).	0.00717210769653	25
Coq.Init.Logic.iff_to_and	40	0.0.1.1.0.0.0.0.1	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0371608734131	251
Coq.Init.Logic.universal_quantification.inst	40	2.4	synth with cache (only 1: intro H1; only 1: auto).	0.00635409355164	8
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.00458288192749	2
Coq.Init.Logic.Logic_lemmas.absurd	40
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.1.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00574207305908	4
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00541615486145	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.006187915802	3
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.8.11	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: auto).	0.0300309658051	502
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00558018684387	3
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00540494918823	3
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00550103187561	3
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	7.0.10.5	synth with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: trivial).	0.141854047775	463
Coq.Init.Logic.rew_opp_r	40	1.2.3.0	synth with cache (only 1: intros A C h1 h2; only 1: intros; only 1: destruct H; only 1: auto).	0.00694394111633	10
Coq.Init.Logic.rew_opp_l	40	0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00654602050781	4
Coq.Init.Logic.f_equal2	40	0.1.8	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0238409042358	151
Coq.Init.Logic.f_equal3	40	1.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00693798065186	5
Coq.Init.Logic.f_equal4	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00746893882751	6
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0978949069977	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	2.1	synth with cache (only 1: destruct e; only 1: auto).	0.00492382049561	5
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0044219493866	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00416707992554	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0044219493866	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00483512878418	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	3.3.1	synth with cache (only 1: intros A C h1 h2; only 1: destruct H; only 1: reflexivity).	0.00653696060181	11
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00469589233398	3
Coq.Init.Logic.map_subst_map	40	2.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00519299507141	5
Coq.Init.Logic.rew_swap	40	1.2.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00553488731384	6
Coq.Init.Logic.rew_compose	40	4.5.1	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.0101099014282	64
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	1.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00394892692566	3
Coq.Init.Logic.eq_trans_map_distr	40	0.10.9.4.8.1	synth with cache (only 1: destruct e; only 1: unfold f_equal; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.166067838669	1636
Coq.Init.Logic.eq_sym_map_distr	40	1.4	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00587010383606	14
Coq.Init.Logic.eq_trans_sym_distr	40	1.3.1	synth with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.00690698623657	8
Coq.Init.Logic.eq_trans_rew_distr	40	2.4	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.00698304176331	14
Coq.Init.Logic.rew_const	40	1.2	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00574398040771	14
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	10.7.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.0539610385895	676
Coq.Init.Logic.inhabited_covariant	40	11.0.4	synth with cache (only 1: intro H; only 1: destruct 1; only 1: auto).	0.0280690193176	393
Coq.Init.Logic.eq_stepl	40	0.3.2.5	synth with cache (only 1: intros x' x'' Hx' Hx''; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0172989368439	114
Coq.Init.Logic.iff_stepl	40	3.3.0.1	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0144739151001	137
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.1.3.1.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.00803780555725	15
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.00670504570007	2
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	4	synth with cache (only 1: firstorder).	0.00347089767456	5
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.0045018196106	2
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00348806381226	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	0.1.16.8.3.10	synth with cache (only 1: intro z; only 1: constructor; only 1: intros; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	4.6643781662	30162
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.00372791290283	1
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	2.1	synth with cache (only 1: intro z; only 1: simpl_crelation).	0.0172739028931	5
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.00383496284485	1
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.00401496887207	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	6	synth with cache (only 1: simpl_crelation).	0.0907518863678	7
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.00772404670715	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	2	synth with cache (only 1: firstorder).	0.00754594802856	3
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.2	synth with cache (only 1: reduce; only 1: firstorder).	0.00516796112061	4
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00413084030151	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	1	synth with cache (only 1: firstorder).	0.00596594810486	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.00424695014954	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	7	synth with cache (only 1: firstorder).	0.00812983512878	8
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.116566181183	1
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0722770690918	1
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	3.2.2	synth with cache (only 1: transitivity x0; only 1: firstorder; only 1: firstorder).	5.47428417206	539
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	2.1.2.0.0	synth with cache (only 1: transitivity y; only 1: transitivity y; only 1: firstorder; only 1: firstorder; only 1: firstorder).	2.02438592911	206
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	3.3.1	synth with cache (only 1: transitivity y; only 1: firstorder; only 1: firstorder).	1.55728197098	698
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0647311210632	1
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.235739946365	83
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	2.0.2.0.0	synth with cache (only 1: split; only 1: intros; only 1: firstorder; only 1: intros; only 1: firstorder).	2.24727511406	191
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0	synth with cache (only 1: firstorder).	0.00526881217957	1
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	3	synth with cache (only 1: firstorder).	0.00731611251831	4
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.3.4	synth with cache (only 1: red; only 1: destruct 1; only 1: firstorder).	0.00931000709534	21
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	2	synth with cache (only 1: firstorder).	0.00449895858765	3
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.00645899772644	1
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0	synth with cache (only 1: firstorder).	0.00382399559021	1
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.00377511978149	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.3.1	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.00601601600647	7
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.00386905670166	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.00387787818909	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.3	synth with cache (only 1: intros; only 1: reduce; only 1: subst; only 1: firstorder).	0.0263302326202	7
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0	synth with cache (only 1: firstorder).	0.00442290306091	1
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.00454783439636	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	6.1	synth with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: simpl_crelation).	0.113128900528	9
Coq.Classes.CMorphisms.proper_sym_flip_2	40	2.2.4.2.0	synth with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: unfold respectful, relation_equivalence in *; only 1: intros x x' Hxx'; only 1: firstorder; only 1: simpl_crelation).	3.54029512405	539
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.00768995285034	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.4	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.294808149338	49
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	4	synth with cache (only 1: reflexivity).	0.0042359828949	5
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00619912147522	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00567507743835	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	6.0.1.1.12.23	synth with cache (only 1: split; only 1: red; only 1: intro H; only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.69386100769	4844
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	2.2	synth with cache (only 1: reduce; only 1: firstorder).	0.00501203536987	6
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0106000900269	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	1	synth with cache (only 1: firstorder).	0.00416302680969	2
Coq.Classes.Morphisms.Relations.subrelation_proper	40	3	synth with cache (only 1: firstorder).	0.00476098060608	4
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	1.4.6	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.325779914856	109
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.0	synth with cache (only 1: unfold subrelation; only 1: firstorder).	0.00464200973511	2
Coq.Classes.Morphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.00845408439636	1
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00422787666321	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0044150352478	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	22	synth with cache (only 1: firstorder).	0.0554699897766	231
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0775740146637	1
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0431611537933	1
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	2.2.1	synth with cache (only 1: transitivity x0; only 1: firstorder; only 1: firstorder).	5.43833398819	654
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	2.1.2.0.0	synth with cache (only 1: transitivity y; only 1: transitivity y; only 1: firstorder; only 1: firstorder; only 1: firstorder).	1.87215018272	217
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	12	synth with cache (only 1: firstorder).	4.07036781311	7086
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	2.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.0404951572418	11
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	10	synth with cache (only 1: firstorder).	0.0809469223022	145
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	2	synth with cache (only 1: firstorder).	1.87948894501	426
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0	synth with cache (only 1: firstorder).	0.00518798828125	1
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	2	synth with cache (only 1: firstorder).	0.00657296180725	3
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.1.3	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.00747895240784	7
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0	synth with cache (only 1: firstorder).	0.00431299209595	1
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.00594997406006	1
Coq.Classes.Morphisms.GenericInstances.flip1	40	0	synth with cache (only 1: firstorder).	0.00394296646118	1
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.00397515296936	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.1.1	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.00679707527161	5
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.00403213500977	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.00404906272888	1
Coq.Classes.Morphisms.proper_proper	40	0.2.0.3	synth with cache (only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl_relation; only 1: firstorder).	0.117594003677	55
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	3.2	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.00797986984253	7
Coq.Classes.Morphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0047299861908	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.1.3	synth with cache (only 1: intros; only 1: reduce; only 1: firstorder).	0.045905828476	7
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.4.7.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: intros H; only 1: compute; only 1: firstorder).	2.21667695045	472
Coq.Classes.Morphisms.proper_sym_impl_iff	40	2.1.0.0.2	synth with cache (only 1: simpl_relation; only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: red in H0; only 1: firstorder).	0.279509067535	61
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.PArith.Pnat.Pos2Nat.inj_succ	40	0.18.2	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.813357114792	1188
Coq.PArith.Pnat.Pos2Nat.inj_add	40	1.14.20.0	synth with cache (only 1: unfold to_nat; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: trivial).	5.43277287483	6343
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	synth with cache (only 1: trivial).	0.0148861408234	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40	1.8	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.0898478031158	145
Coq.PArith.Pnat.Pos2Nat.is_pos	40	1.2.1	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.0218040943146	7
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	5.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now f_equal).	0.0272388458252	10
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40	2.5.7	synth with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: trivial).	5.93696403503	4715
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	synth with cache (only 1: decide equality).	0.0164980888367	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	1	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0107619762421	2
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: reflexivity).	0.00616502761841	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.0.1.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.016487121582	10
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.00743913650513	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	synth with cache (only 1: now destruct p).	0.0157549381256	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.015251159668	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.1.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	1.39692616463	773
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	0.1.0.0.0.1.0	synth with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	0.0497050285339	16
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.1.3.10.1.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	15.992675066	14183
Coq.PArith.BinPos.Pos.add_1_r	40	0	synth with cache (only 1: now destruct p).	0.0076949596405	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.00763487815857	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.Arith.Even.even_equiv	40	6.1.3	synth with cache (only 1: fix even_spec 1; only 1: intros; only 1: trivial).	1.02729296684	492
Coq.Arith.Even.odd_equiv	40	9.3.0	synth with cache (only 1: fix even_equiv 1; only 1: intros; only 1: trivial).	1.67681002617	950
Coq.Arith.Even.even_or_odd	40	4.3.14.4	synth with cache (only 1: Nat.induct n; only 1: intuition; only 1: fix even_equiv 1; only 1: tauto).	1.64935278893	1618
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0257680416107	5
Coq.Arith.Even.not_even_and_odd	40	3.3.0.5.3.4.5.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: induction n; only 1: inversion_clear H0; only 1: inversion_clear 1; only 1: auto with arith).	4.60522508621	5705
Coq.Arith.Even.even_plus_split	40	2.0.5.0.2.16	synth with cache (only 1: revert m; only 1: induction n; only 1: auto with arith; only 1: fix odd_equiv 1; only 1: intro H; only 1: auto with arith).	2.66235899925	2537
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.16370511055	1
Coq.Arith.Even.even_even_plus	40	1	synth with cache (only 1: parity_binop).	0.223298072815	2
Coq.Arith.Even.odd_plus_l	40	1	synth with cache (only 1: parity_binop).	0.0940129756927	2
Coq.Arith.Even.odd_plus_r	40	0	synth with cache (only 1: parity_binop).	0.0979850292206	1
Coq.Arith.Even.odd_even_plus	40	0	synth with cache (only 1: parity_binop).	0.128561019897	1
Coq.Arith.Even.even_plus_aux	40	0	synth with cache (only 1: parity_binop).	0.385281085968	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0948090553284	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0887370109558	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0894889831543	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.160490036011	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0944929122925	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.097235918045	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.1126101017	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0938150882721	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.295178890228	1
Coq.Arith.Even.even_mult_l	40	5	synth with cache (only 1: parity_binop).	0.0682940483093	6
Coq.Arith.Even.even_mult_r	40	0	synth with cache (only 1: parity_binop).	0.0682849884033	1
Coq.Arith.Even.even_mult_inv_r	40	2	synth with cache (only 1: parity_binop).	0.200190067291	12
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0903310775757	1
Coq.Arith.Even.odd_mult	40	1	synth with cache (only 1: parity_binop).	0.13768696785	15
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0611979961395	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0663571357727	1
Coq.Arith.Between.Between.bet_eq	40	11.1.1.4	synth with cache (only 1: intros a n; only 1: intros EQ; only 1: rewrite <- EQ; only 1: now left).	0.885143995285	1515
Coq.Arith.Between.Between.between_le	40	0.26.13	synth with cache (only 1: intros EQ; only 1: fix le_div2 1; only 1: trivial).	10.630562067	9462
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40	2.0.0.3.3	synth with cache (only 1: intro z; only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.324791908264	225
Coq.Arith.Between.Between.exists_le_S	40	0.0.1	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.14466714859	13
Coq.Arith.Between.Between.exists_S_le	40	0.12.9	synth with cache (only 1: intros EQ; only 1: fix le_div2 1; only 1: trivial).	2.11662793159	4195
Coq.Arith.Between.Between.in_int_intro	40	0.0.14	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	0.485633850098	666
Coq.Arith.Between.Between.in_int_lt	40	5.1	synth with cache (only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order).	0.0117180347443	8
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Plus.plus_assoc_reverse	40	7.2.1.4.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: intros EQ; only 1: now Morphisms.f_equiv; only 1: congruence).	16.7113170624	10329
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	synth with cache (only 1: apply Nat.add_le_mono_l).	0.00860095024109	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.00856685638428	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	synth with cache (only 1: apply Nat.add_le_mono).	0.00850582122803	2
Coq.Arith.Plus.plus_lt_compat	40	2.23.15	synth with cache (only 1: intro H2; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	3.39489197731	4806
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	4.09257102013	7251
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Compare_dec.zerop	40	1.0.0.0	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	0.0226199626923	5
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	1.16590285301	288
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	1.3.0.0.7.2.3.0.8.12	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	9.64502191544	5479
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.425354957581	123
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0255420207977	3
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.6	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0408580303192	9
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	0	synth with cache (only 1: apply le_dec).	0.0162811279297	1
Coq.Arith.Compare_dec.ge_dec	40	1	synth with cache (only 1: apply le_dec).	0.0170269012451	2
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	1	synth with cache (only 1: apply Nat.le_decidable).	0.0165708065033	2
Coq.Arith.Compare_dec.dec_gt	40	0	synth with cache (only 1: apply Nat.le_decidable).	0.0159239768982	1
Coq.Arith.Compare_dec.dec_ge	40	1	synth with cache (only 1: apply Nat.le_decidable).	0.0168359279633	2
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0187609195709	1
Coq.Arith.Compare_dec.not_le	40	0	synth with cache (only 1: apply Nat.lt_nge).	0.0167100429535	1
Coq.Arith.Compare_dec.not_gt	40	3	synth with cache (only 1: apply Nat.le_ngt).	0.0203418731689	4
Coq.Arith.Compare_dec.not_ge	40	4	synth with cache (only 1: apply Nat.nle_gt).	0.0264129638672	19
Coq.Arith.Compare_dec.not_lt	40	3	synth with cache (only 1: apply Nat.le_ngt).	0.0502541065216	12
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	1	synth with cache (only 1: auto).	0.00491499900818	2
Coq.Arith.PeanoNat.Nat.recursion_succ	40	0.0.2.2.0	synth with cache (only 1: intros A A_wd A0 AS; only 1: intros; only 1: induction n; only 1: firstorder; only 1: firstorder).	0.0253870487213	9
Coq.Arith.PeanoNat.Nat.pred_succ	40	0	synth with cache (only 1: auto).	0.00478315353394	1
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.00452303886414	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.00459790229797	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.00455117225647	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.00562000274658	2
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00767612457275	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.0.3	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.00799894332886	8
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	synth with cache (only 1: auto).	0.00457811355591	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.00865197181702	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.0.0.0.2.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	27.5769200325	42046
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.Gt.gt_n_S	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.00788807868958	1
Coq.Arith.Gt.gt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0068781375885	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.00710797309875	1
Coq.Arith.Gt.le_not_gt	40	0	synth with cache (only 1: apply Nat.le_ngt).	0.00641489028931	1
Coq.Arith.Gt.gt_not_le	40	0	synth with cache (only 1: apply Nat.lt_nge).	0.00637817382812	1
Coq.Arith.Gt.le_S_gt	40	1.0	synth with cache (only 1: intro H; only 1: trivial).	0.00710892677307	3
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Nat.lt_succ_r).	0.00703001022339	1
Coq.Arith.Gt.gt_le_S	40	0	synth with cache (only 1: apply Nat.le_succ_l).	0.0063738822937	1
Coq.Arith.Gt.le_gt_S	40	0	synth with cache (only 1: apply Nat.lt_succ_r).	0.00631999969482	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40	24.0.8.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: auto; only 1: intuition).	22.9685370922	52120
Coq.Arith.Gt.gt_trans_S	40	32.0.9.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: auto with arith).	39.1971838474	60145
Coq.Arith.Gt.gt_0_eq	40	9.8.10	synth with cache (only 1: induction n; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: intuition).	0.994516134262	1858
Coq.Arith.Gt.plus_gt_reg_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0068690776825	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.00714898109436	1
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	1.1.1.2.3.0.0.0.4.0.0	synth with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: exact p2b; only 1: exact b2p; only 1: exact B; only 1: exact h; only 1: auto; only 1: auto; only 1: auto).	0.787138938904	3030
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	1.15.35.27	synth with cache (only 1: intros H ?; only 1: intro p; only 1: destruct p; only 1: auto).	0.805437088013	6799
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).	0.100461959839	165
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	3.0.0.0.5	synth with cache (only 1: intros Ext A Ha; only 1: apply (Ext A True); only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.0320069789886	154
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	22.12	synth with cache (only 1: intros Ext EM A; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.837875127792	1572
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	5.0.4.13	synth with cache (only 1: intros (l, F); only 1: induction l; only 1: auto; only 1: firstorder).	2.22322297096	2041
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.12	synth with cache (only 1: inversion 1; only 1: auto).	0.0223309993744	115
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.00619220733643	3
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	5.13	synth with cache (only 1: inversion 1; only 1: apply eq_dep_intro).	0.140866041183	802
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: exact eq_refl).	0.00703692436218	7
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.2.0.0.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.0461039543152	146
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.00656700134277	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.5.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: exact eq_refl).	0.0101070404053	8
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.3.6.0.0.4.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: intro H; only 1: rewrite H; only 1: exact eq_refl).	0.350522994995	1185
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.8.6.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: exact eq_refl).	0.174911022186	614
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: destruct H; only 1: reflexivity).	0.0109059810638	14
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	2.0.2	synth with cache (only 1: red; only 1: intros; only 1: auto).	0.00651597976685	7
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	6.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.00718808174133	11
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	0.6.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: intro Streicher_K; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0201139450073	59
Coq.Logic.EqdepFacts.f_eq_dep	40	0.4	synth with cache (only 1: destruct 1; only 1: auto).	0.00819396972656	15
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00615096092224	2
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.0053539276123	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	8.2	synth with cache (only 1: intros Ext A P Q Eq; only 1: auto).	0.0331790447235	109
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	6.1.0	synth with cache (only 1: intros Ext A Ha; only 1: change A with ((fun _ => A) I); only 1: now apply Ext).	0.0225999355316	61
Coq.Logic.Decidable.dec_not_not	40	2.0.3.2	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: contradiction).	0.0198860168457	42
Coq.Logic.Decidable.dec_True	40	2.2	synth with cache (only 1: constructor; only 1: auto).	0.00924706459045	6
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.00840497016907	2
Coq.Logic.Decidable.dec_or	40	1.6.3	synth with cache (only 1: unfold decidable, not; only 1: intro x; only 1: tauto).	0.0732088088989	132
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0350630283356	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0153329372406	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0231330394745	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0348680019379	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0122389793396	2
Coq.Logic.Decidable.not_or	40	0	synth with cache (only 1: tauto).	0.0148057937622	1
Coq.Logic.Decidable.not_and	40	2.1.4	synth with cache (only 1: unfold not; only 1: unfold decidable; only 1: tauto).	0.062399148941	20
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0258231163025	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0177681446075	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0599770545959	2
Coq.Logic.Decidable.not_true_iff	40	1.1.2	synth with cache (only 1: split; only 1: tauto; only 1: tauto).	0.0113179683685	7
Coq.Logic.Decidable.not_false_iff	40	1	synth with cache (only 1: tauto).	0.00933885574341	2
Coq.Logic.Decidable.not_not_iff	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0212299823761	3
Coq.Logic.Decidable.contrapositive	40	1.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0212080478668	3
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0248429775238	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0249240398407	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0239429473877	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0257179737091	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0462620258331	2
Coq.Logic.Decidable.not_or_iff	40	0	synth with cache (only 1: tauto).	0.0199620723724	1
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.0163431167603	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0335400104523	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0324108600616	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0.0.0.7	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0558080673218	70
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	1.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0429930686951	6
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	9.1.0.9	synth with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: intuition_in).	8.2146320343	1028
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: auto; only 1: simpl; only 1: ok).	0.0266799926758	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.504011869431	642
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.010036945343	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0102369785309	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	0.0.1.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	0.432533979416	148
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	0.1.1.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	0.716637134552	387
Coq.MSets.MSetGenTree.Props.isok_iff	40	4.0	synth with cache (only 1: fix even_spec 1; only 1: intuition_in).	0.0171680450439	6
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40	2.10.4.0.0.7	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros R R' EQ a a' Ha WF; only 1: subst; only 1: eauto).	25.0186131001	16044
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.7.2	synth with cache (only 1: split; only 1: intuition_in; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.367639064789	85
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	3	synth with cache (only 1: intuition_in).	0.109279155731	41
Coq.MSets.MSetGenTree.Props.lt_leaf	40	3.11.3	synth with cache (only 1: intuition; only 1: unfold lt_tree; only 1: intuition_in).	0.388998985291	571
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0202240943909	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.6.5	synth with cache (only 1: red; only 1: intuition_in; only 1: order).	0.542453050613	160
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.15	synth with cache (only 1: red; only 1: intuition_in; only 1: order).	0.769644975662	520
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.0.3.3.0	synth with cache (only 1: intros n m; only 1: intros; only 1: intro H'; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).	0.123085021973	54
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.6	synth with cache (only 1: intros; only 1: eauto).	0.0597867965698	26
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	1.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.0203890800476	4
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	1	synth with cache (only 1: eauto).	0.0484108924866	15
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	12.0.0.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	16.8891708851	11691
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.4.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.543407917023	161
Coq.MSets.MSetGenTree.Props.empty_spec	40	6	synth with cache (only 1: inversion 1).	0.0223569869995	7
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	synth with cache (only 1: auto).	0.0152149200439	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	2.2.1.1	synth with cache (only 1: fix even_spec 1; only 1: induction s as [| c l IHl y r IHr]; only 1: auto; only 1: auto).	0.0943088531494	80
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	2	synth with cache (only 1: firstorder).	0.0265800952911	3
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	1.27.15	synth with cache (only 1: intro Pdec; only 1: fix le_div2 1; only 1: auto).	17.3454639912	17296
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	12	synth with cache (only 1: solve_proper).	1.3050801754	258
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	0.3.17	synth with cache (only 1: intros a b; only 1: fix odd_spec 1; only 1: auto).	15.3670549393	3901
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	3.1.0	synth with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	0.0259020328522	19
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	0.0.1.0.1.0.0.0.0.0.1.7	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	16.6380028725	4830
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	4.1	synth with cache (only 1: intros; only 1: intuition).	0.0203919410706	7
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.1.0.1.5	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	2.69162297249	303
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	1.1	synth with cache (only 1: apply <- isok_iff; only 1: auto).	0.0143449306488	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.0.13.0	synth with cache (only 1: unfold empty; only 1: repeat red; only 1: intros a H; only 1: inv).	0.0989370346069	193
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	1.2.1	synth with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	0.0154130458832	7
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	1.0.3.0.1	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.116806983948	23
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0.3	synth with cache (only 1: intros; only 1: auto).	0.0157468318939	5
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0	synth with cache (only 1: auto).	0.00984191894531	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0	synth with cache (only 1: auto).	0.00754499435425	1
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	0.4.3	synth with cache (only 1: intros x l; only 1: fix even_spec 1; only 1: auto).	0.0358510017395	35
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	0.39	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	11.4530379772	12994
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	0.0.3.3.1.0.0.1.0	synth with cache (only 1: simple induction s; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: eauto; only 1: auto; only 1: auto).	15.540653944	6713
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.1.1.0.1.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	9.76410102844	1831
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0	synth with cache (only 1: auto).	0.010822057724	1
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.1.3.7.6	synth with cache (only 1: intro l; only 1: unfold singleton; only 1: intro n; only 1: rewrite InA_cons, InA_nil; only 1: tauto).	2.8467271328	3132
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0107929706573	4
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.3.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0890920162201	182
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto with sets; only 1: auto with sets).	0.0119450092316	6
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.6.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.0262489318848	71
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Sets.Uniset.defs.leb_refl	40	3	synth with cache (only 1: destr_bool).	0.00766396522522	4
Coq.Sets.Uniset.defs.incl_left	40
Coq.Sets.Uniset.defs.incl_right	40	1.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00894618034363	5
Coq.Sets.Uniset.defs.seq_refl	40	1	synth with cache (only 1: auto).	0.00565004348755	2
Coq.Sets.Uniset.defs.seq_trans	40	0.1.6.0.8.6	synth with cache (only 1: destruct x; only 1: intro x; only 1: unfold seq; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.8877851963	4738
Coq.Sets.Uniset.defs.seq_sym	40	1	synth with cache (only 1: auto).	0.00583076477051	2
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.00640296936035	3
Coq.Sets.Uniset.defs.union_empty_right	40	6.2.0.1	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: destr_bool; only 1: intuition).	0.177698850632	372
Coq.Sets.Uniset.defs.union_comm	40	2.1.3.13.1.5.2.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: destruct y; only 1: destr_bool; only 1: destruct b; only 1: intuition; only 1: rewrite (orb_false_r (charac x a)); only 1: auto).	11.2505049706	51134
Coq.Sets.Uniset.defs.union_ass	40	2.1.1.0.0.0	synth with cache (only 1: unfold seq; only 1: destruct x; only 1: unfold charac; only 1: destruct y; only 1: destr_bool; only 1: auto with bool).	0.0166289806366	22
Coq.Sets.Uniset.defs.seq_left	40	1.0.3.0.1.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto with bool).	0.678434848785	1335
Coq.Sets.Uniset.defs.seq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.010999917984	9
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	17.5	synth with cache (only 1: intros; only 1: auto  6 with sets).	0.451731204987	808
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.0112180709839	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0100450515747	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.011501789093	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	18.8	synth with cache (only 1: intros a b; only 1: auto  10 with sets).	1.57937979698	1523
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0114758014679	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	2	synth with cache (only 1: auto  7 with sets).	0.0185348987579	3
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	1.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.84600687027	1077
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	12.6883990765	12005
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.1.1.1.0.1.1.1.1.2.3	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets).	1.35573387146	1337
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0	synth with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	6.5848839283	6361
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	8.0.1.7	synth with cache (only 1: intros a b; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	3.461769104	2836
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	0.1.3.3.0.4.3.1.1.3.1.4	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	16.6836810112	17620
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.1.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	0.0156760215759	5
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	1.2.1	synth with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto with sets).	0.133290052414	17
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	0.7	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.13575387001	26
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	7.1.3.0.5	synth with cache (only 1: intros; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: red; only 1: auto  10 with sets).	12.2502748966	6233
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	5.3.1.3.1	synth with cache (only 1: intros a b X H' H'0; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: red; only 1: auto  10 with sets).	2.74506402016	1819
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0	synth with cache (only 1: auto with sets).	0.0087308883667	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40