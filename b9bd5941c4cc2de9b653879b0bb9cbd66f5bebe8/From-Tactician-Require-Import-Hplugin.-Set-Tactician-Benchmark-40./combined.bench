
Coq.micromega.ZifyBoolX.Z_of_bool_bound	40
Coq.micromega.ZifyBoolX.Z_eqb_isZero	40
Coq.micromega.ZifyBoolX.Z_leb_sub	40
Coq.micromega.ZifyBoolX.Z_ltb_leb	40
Coq.micromega.ZifyBoolX.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBoolX.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBoolX.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBoolX.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBoolX.leZeroSpec_ok	40
Coq.micromega.RingMicromegaX.rplus_morph_Proper	40
Coq.micromega.RingMicromegaX.rtimes_morph_Proper	40
Coq.micromega.RingMicromegaX.ropp_morph_Proper	40
Coq.micromega.RingMicromegaX.rle_morph_Proper	40
Coq.micromega.RingMicromegaX.rlt_morph_Proper	40
Coq.micromega.RingMicromegaX.rminus_morph_Proper	40
Coq.micromega.RingMicromegaX.cleb_sound	40
Coq.micromega.RingMicromegaX.cneqb_sound	40
Coq.micromega.RingMicromegaX.cltb_sound	40
Coq.micromega.RingMicromegaX.OpMult_sound	40
Coq.micromega.RingMicromegaX.OpAdd_sound	40
Coq.micromega.RingMicromegaX.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromegaX.nformula_times_nformula_correct	40
Coq.micromega.RingMicromegaX.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromegaX.eval_Psatz_Sound	40
Coq.micromega.RingMicromegaX.ge_bool_cases	40
Coq.micromega.RingMicromegaX.extract_hyps_app	40	0	search with cache (only 1: induction ln1).	0.158540964127	1
Coq.micromega.RingMicromegaX.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromegaX.check_inconsistent_sound	40
Coq.micromega.RingMicromegaX.checker_nf_sound	40
Coq.micromega.RingMicromegaX.eval_pol_sub	40	7	search with cache (only 1: apply (Psub_ok (SORsetoid sor) RingMicromega.Rops_wd (Rth_ARth (SORsetoid sor) RingMicromega.Rops_wd (SORrt sor)) (RingMicromega.SORrm (R:=addon)))).	0.178738117218	12
Coq.micromega.RingMicromegaX.eval_pol_add	40	9	search with cache (only 1: apply (Padd_ok (SORsetoid sor) RingMicromega.Rops_wd (Rth_ARth (SORsetoid sor) RingMicromega.Rops_wd (SORrt sor)) (RingMicromega.SORrm (R:=addon)))).	0.117089986801	10
Coq.micromega.RingMicromegaX.eval_pol_mul	40	8	search with cache (only 1: apply (Pmul_ok (SORsetoid sor) RingMicromega.Rops_wd (Rth_ARth (SORsetoid sor) RingMicromega.Rops_wd (SORrt sor)) (RingMicromega.SORrm (R:=addon)))).	0.118417024612	9
Coq.micromega.RingMicromegaX.eval_pol_opp	40	11	search with cache (only 1: apply (Popp_ok (SORsetoid sor) RingMicromega.Rops_wd (Rth_ARth (SORsetoid sor) RingMicromega.Rops_wd (SORrt sor)) (RingMicromega.SORrm (R:=addon)))).	0.265160083771	33
Coq.micromega.RingMicromegaX.eval_pol_norm	40	24	search with cache (only 1: apply (norm_aux_spec (SORsetoid sor) RingMicromega.Rops_wd (Rth_ARth (SORsetoid sor) RingMicromega.Rops_wd (SORrt sor)) (RingMicromega.SORrm (R:=addon)) (RingMicromega.SORpower (R:=addon)))).	1.97270202637	388
Coq.micromega.RingMicromegaX.normalise_sound	40
Coq.micromega.RingMicromegaX.negate_correct	40
Coq.micromega.RingMicromegaX.cnf_of_list_correct	40
Coq.micromega.RingMicromegaX.eq0_cnf	40
Coq.micromega.RingMicromegaX.xnormalise_correct	40
Coq.micromega.RingMicromegaX.xnegate_correct	40
Coq.micromega.RingMicromegaX.cnf_normalise_correct	40
Coq.micromega.RingMicromegaX.cnf_negate_correct	40
Coq.micromega.RingMicromegaX.eval_nformula_dec	40
Coq.micromega.RingMicromegaX.xdenorm_correct	40
Coq.micromega.RingMicromegaX.denorm_correct	40
Coq.micromega.RingMicromegaX.eval_pexprSC	40	6	search with cache (only 1: induction s).	0.32776594162	7
Coq.micromega.RingMicromegaX.eval_formulaSC	40
Coq.micromega.ZCoeffX.req_refl	40
Coq.micromega.ZCoeffX.req_sym	40
Coq.micromega.ZCoeffX.req_trans	40
Coq.micromega.ZCoeffX.rplus_morph_Proper	40
Coq.micromega.ZCoeffX.rtimes_morph_Proper	40
Coq.micromega.ZCoeffX.ropp_morph_Proper	40
Coq.micromega.ZCoeffX.rle_morph_Proper	40
Coq.micromega.ZCoeffX.rlt_morph_Proper	40
Coq.micromega.ZCoeffX.rminus_morph_Proper	40
Coq.micromega.ZCoeffX.ring_ops_wd	40	0.0.0.0	search with cache (only 1: constructor; only 1: exact ZCoeff.rplus_morph; only 1: exact ZCoeff.rtimes_morph; only 1: exact ZCoeff.ropp_morph).	0.314015865326	4
Coq.micromega.ZCoeffX.Zring_morph	40	0	search with cache (only 1: exact (gen_phiZ_morph (SORsetoid sor) ZCoeff.ring_ops_wd (SORrt sor))).	0.163733959198	1
Coq.micromega.ZCoeffX.phi_pos1_pos	40	0.0.0.0.0.0.0.0.0.0.0.13	search with cache (only 1: induction x as [x IH| x IH| ]; only 1: apply (Rplus_pos_pos sor); only 1: apply (Rlt_0_1 sor); only 1: apply (Rtimes_pos_pos sor); only 1: apply (Rplus_pos_pos sor); only 1: apply (Rlt_0_1 sor); only 1: apply (Rlt_0_1 sor); only 1: apply (Rtimes_pos_pos sor); only 1: apply (Rplus_pos_pos sor); only 1: apply (Rlt_0_1 sor); only 1: apply (Rlt_0_1 sor); only 1: apply (Rlt_0_1 sor)).	6.47475600243	500
Coq.micromega.ZCoeffX.phi_pos1_succ	40
Coq.micromega.ZCoeffX.clt_pos_morph	40
Coq.micromega.ZCoeffX.clt_morph	40
Coq.micromega.ZCoeffX.Zcleb_morph	40
Coq.micromega.ZCoeffX.Zcneqb_morph	40
Coq.micromega.ZMicromegaX.eq_le_iff	40		search with cache ().	0.0457029342651	0
Coq.micromega.ZMicromegaX.lt_le_iff	40	1.0.0.2	search with cache (only 1: apply Zlt_succ_le; only 1: ring_simplify; only 1: apply Zle_lt_succ in H; only 1: ring_simplify in H).	0.198647022247	7
Coq.micromega.ZMicromegaX.le_0_iff	40	2.1	search with cache (only 1: apply Zle_minus_le_0; only 1: apply Zle_0_minus_le).	0.0721979141235	5
Coq.micromega.ZMicromegaX.le_neg	40
Coq.micromega.ZMicromegaX.eq_cnf	40
Coq.micromega.ZMicromegaX.Zsor	40
Coq.micromega.ZMicromegaX.ZSORaddon	40
Coq.micromega.ZMicromegaX.ZNpower	40
Coq.micromega.ZMicromegaX.Zeval_expr_compat	40
Coq.micromega.ZMicromegaX.Zeval_formula_compat'	40
Coq.micromega.ZMicromegaX.Zeval_nformula_dec	40	0	search with cache (only 1: apply (eval_nformula_dec ZMicromega.Zsor)).	0.0489439964294	1
Coq.micromega.ZMicromegaX.ZWeakChecker_sound	40
Coq.micromega.ZMicromegaX.eval_pol_sub	40
Coq.micromega.ZMicromegaX.eval_pol_add	40	0	search with cache (only 1: apply (eval_pol_add ZMicromega.Zsor ZMicromega.ZSORaddon)).	0.0523700714111	1
Coq.micromega.ZMicromegaX.eval_pol_mul	40	1	search with cache (only 1: apply (eval_pol_mul ZMicromega.Zsor ZMicromega.ZSORaddon)).	0.0530450344086	2
Coq.micromega.ZMicromegaX.eval_pol_norm	40
Coq.micromega.ZMicromegaX.Zunsat_sound	40
Coq.micromega.ZMicromegaX.xnnormalise_correct	40
Coq.micromega.ZMicromegaX.eval_pol_Pc	40		search with cache ().	0.0197870731354	0
Coq.micromega.ZMicromegaX.xnormalise_correct	40
Coq.micromega.ZMicromegaX.cnf_of_list_correct	40
Coq.micromega.ZMicromegaX.normalise_correct	40
Coq.micromega.ZMicromegaX.xnegate_correct	40
Coq.micromega.ZMicromegaX.negate_correct	40
Coq.micromega.ZMicromegaX.Zdivide_ceiling	40
Coq.micromega.ZMicromegaX.narrow_interval_lower_bound	40
Coq.micromega.ZMicromegaX.isZ0_0	40	7	search with cache (only 1: destruct x).	0.63777089119	62
Coq.micromega.ZMicromegaX.isZ0_n0	40	0	search with cache (only 1: destruct x).	0.0598111152649	1
Coq.micromega.ZMicromegaX.Zdiv_pol_correct	40
Coq.micromega.ZMicromegaX.Zgcd_pol_ge	40	1.1.5.1.2.0	search with cache (only 1: induction p; only 1: case_eq (ZMicromega.Zgcd_pol p3); only 1: apply Z.le_ge; only 1: case_eq (ZMicromega.Zgcd_pol p1); only 1: transitivity 1; only 1: apply Z.le_max_r).	3.39232707024	625
Coq.micromega.ZMicromegaX.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromegaX.Zdivide_pol_one	40
Coq.micromega.ZMicromegaX.Zgcd_minus	40
Coq.micromega.ZMicromegaX.Zdivide_pol_sub	40
Coq.micromega.ZMicromegaX.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromegaX.Zgcd_pol_div	40
Coq.micromega.ZMicromegaX.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromegaX.is_pol_Z0_eval_pol	40	0.26.2	search with cache (only 1: unfold eval_pol; only 1: destruct p; only 1: destruct z).	9.10599589348	3438
Coq.micromega.ZMicromegaX.pos_le_add	40
Coq.micromega.ZMicromegaX.max_var_le	40
Coq.micromega.ZMicromegaX.max_var_correct	40
Coq.micromega.ZMicromegaX.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromegaX.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromegaX.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromegaX.max_var_nformalae_correct	40
Coq.micromega.ZMicromegaX.in_bdepth	40
Coq.micromega.ZMicromegaX.eval_Psatz_sound	40
Coq.micromega.ZMicromegaX.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromegaX.cutting_plane_sound	40
Coq.micromega.ZMicromegaX.genCuttingPlaneNone	40
Coq.micromega.ZMicromegaX.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromegaX.eval_nformula_bound_var	40
Coq.micromega.ZMicromegaX.agree_env_subset	40	1.0.51	search with cache (only 1: red; only 1: apply H; only 1: eapply Pos.le_trans).	2.51695609093	1955
Coq.micromega.ZMicromegaX.agree_env_jump	40
Coq.micromega.ZMicromegaX.agree_env_tail	40	5.3.0.0.1.0	search with cache (only 1: unfold Env.tail; only 1: apply ZMicromega.agree_env_jump; only 1: unfold agree_env; only 1: apply H; only 1: eapply Pos.le_trans; only 1: now rewrite Pos.add_1_r).	5.04907894135	925
Coq.micromega.ZMicromegaX.max_var_acc	40
Coq.micromega.ZMicromegaX.agree_env_eval_nformula	40
Coq.micromega.ZMicromegaX.agree_env_eval_nformulae	40
Coq.micromega.ZMicromegaX.eq_true_iff_eq	40	8.53	search with cache (only 1: apply Nat.eqb_eq; only 1: destr_bool).	2.49329900742	2007
Coq.micromega.ZMicromegaX.ZChecker_sound	40
Coq.micromega.ZMicromegaX.ZTautoChecker_sound	40
Coq.micromega.TautoX.eval_f_morph	40
Coq.micromega.TautoX.map_simpl	40	11	search with cache (only 1: destruct l).	0.0517890453339	33
Coq.micromega.TautoX.is_X_inv	40
Coq.micromega.TautoX.if_same	40	24.7	search with cache (only 1: clear; only 1: by case : b ).	0.672943115234	815
Coq.micromega.TautoX.is_cnf_tt_cnf_ff	40		search with cache ().	0.0174000263214	0
Coq.micromega.TautoX.is_cnf_ff_cnf_ff	40		search with cache ().	0.0187170505524	0
Coq.micromega.TautoX.is_cnf_tt_inv	40	3.40	search with cache (only 1: compute; only 1: destruct f1).	0.824378013611	996
Coq.micromega.TautoX.is_cnf_ff_inv	40
Coq.micromega.TautoX.if_cnf_tt	40	13	search with cache (only 1: induction f).	0.41917014122	109
Coq.micromega.TautoX.or_cnf_opt_cnf_ff	40
Coq.micromega.TautoX.abs_and_pol	40
Coq.micromega.TautoX.abs_or_pol	40
Coq.micromega.TautoX.xcnf_true_mk_arrow_l	40
Coq.micromega.TautoX.or_cnf_opt_cnf_ff_r	40	12	search with cache (only 1: induction f).	0.684685945511	109
Coq.micromega.TautoX.xcnf_true_mk_arrow_r	40
Coq.micromega.TautoX.abst_form_correct	40
Coq.micromega.TautoX.radd_term_term	40
Coq.micromega.TautoX.radd_term_term'	40
Coq.micromega.TautoX.xror_clause_clause	40
Coq.micromega.TautoX.ror_clause_clause	40
Coq.micromega.TautoX.ror_cnf_cnf	40
Coq.micromega.TautoX.ror_opt_cnf_cnf	40
Coq.micromega.TautoX.ratom_cnf	40
Coq.micromega.TautoX.rxcnf_xcnf	40
Coq.micromega.TautoX.eval_cnf_app	40
Coq.micromega.TautoX.eval_cnf_ff	40
Coq.micromega.TautoX.eval_cnf_tt	40		search with cache ().	0.0165460109711	0
Coq.micromega.TautoX.eval_cnf_and_opt	40
Coq.micromega.TautoX.add_term_correct	40
Coq.micromega.TautoX.no_middle_eval_tt	40		search with cache ().	0.0326659679413	0
Coq.micromega.TautoX.or_clause_correct	40
Coq.micromega.TautoX.or_clause_cnf_correct	40
Coq.micromega.TautoX.eval_cnf_cons	40
Coq.micromega.TautoX.eval_cnf_cons_iff	40
Coq.micromega.TautoX.or_cnf_correct	40
Coq.micromega.TautoX.or_cnf_opt_correct	40
Coq.micromega.TautoX.xcnf_correct	40
Coq.micromega.TautoX.cnf_checker_sound	40
Coq.micromega.TautoX.tauto_checker_sound	40	11.15	search with cache (only 1: apply (Tauto.xcnf_correct (Env:=t) (Term:=true)); only 1: eapply Tauto.cnf_checker_sound).	35.3206260204	1741
Coq.micromega.TautoX.eval_bf_map	40	26.60	search with cache (only 1: compute; only 1: induction f).	7.79230117798	7461
Coq.micromega.ZifyInstX.eq_pos_inj	40		search with cache ().	0.0254929065704	0
Coq.micromega.ZifyInstX.of_nat_to_nat_eq	40		search with cache ().	0.0409998893738	0
Coq.micromega.ZifyInstX.z_max_spec	40	4.11.8	search with cache (only 1: Z.solve_max; only 1: Z.solve_max; only 1: generalize (Z.max_spec_le n m)).	9.20849394798	1319
Coq.micromega.ZifyInstX.z_min_spec	40	0.0.0	search with cache (only 1: Z.solve_min; only 1: Z.solve_min; only 1: generalize (Z.min_spec_le n m)).	0.417572021484	3
Coq.micromega.ZifyInstX.pow_pos_strict	40	11	search with cache (only 1: apply Z.pow_pos_nonneg).	0.184020996094	33
Coq.micromega.ZifyComparisonX.Z_of_comparison_bound	40
Coq.micromega.ZifyComparisonX.Zcompare_spec	40
Coq.micromega.OrderedRingX.rplus_morph_Proper	40
Coq.micromega.OrderedRingX.rtimes_morph_Proper	40
Coq.micromega.OrderedRingX.ropp_morph_Proper	40
Coq.micromega.OrderedRingX.rle_morph_Proper	40
Coq.micromega.OrderedRingX.rlt_morph_Proper	40
Coq.micromega.OrderedRingX.rminus_morph_Proper	40
Coq.micromega.OrderedRingX.Rneq_symm	40	109	search with cache (only 1: destruct (OrderedRing.SORsetoid sor) as (_, Equivalence_Symmetric, _)).	4.65007400513	6120
Coq.micromega.OrderedRingX.Rplus_0_l	40	13	search with cache (only 1: ring).	0.304869890213	60
Coq.micromega.OrderedRingX.Rplus_0_r	40	0	search with cache (only 1: ring).	0.0527420043945	1
Coq.micromega.OrderedRingX.Rtimes_0_r	40	2	search with cache (only 1: ring).	0.0507650375366	3
Coq.micromega.OrderedRingX.Rplus_comm	40	0	search with cache (only 1: ring).	0.0569660663605	1
Coq.micromega.OrderedRingX.Rtimes_0_l	40	0	search with cache (only 1: ring).	0.0500710010529	1
Coq.micromega.OrderedRingX.Rtimes_comm	40	0	search with cache (only 1: ring).	0.0557479858398	1
Coq.micromega.OrderedRingX.Rminus_eq_0	40	2.19.0.16.18	search with cache (only 1: setoid_replace n with (n - m + m) by ring; only 1: rewrite H; only 1: ring; only 1: rewrite H; only 1: ring).	11.7153689861	3377
Coq.micromega.OrderedRingX.Rplus_cancel_l	40	2.0.2.22	search with cache (only 1: setoid_replace n with (- p + (p + n)) by ring; only 1: rewrite H; only 1: ring; only 1: rewrite H).	8.21170496941	979
Coq.micromega.OrderedRingX.Req_em	40
Coq.micromega.OrderedRingX.Req_dne	40
Coq.micromega.OrderedRingX.Rle_lt_eq	40
Coq.micromega.OrderedRingX.Rlt_trans	40
Coq.micromega.OrderedRingX.Rle_lt_trans	40
Coq.micromega.OrderedRingX.Rlt_le_trans	40
Coq.micromega.OrderedRingX.Rle_gt_cases	40
Coq.micromega.OrderedRingX.Rlt_neq	40	2	search with cache (only 1: rewrite Rlt_le_neq in H).	0.137251853943	3
Coq.micromega.OrderedRingX.Rle_ngt	40
Coq.micromega.OrderedRingX.Rlt_nge	40
Coq.micromega.OrderedRingX.Rplus_le_mono_l	40
Coq.micromega.OrderedRingX.Rplus_le_mono_r	40
Coq.micromega.OrderedRingX.Rplus_lt_mono_l	40
Coq.micromega.OrderedRingX.Rplus_lt_mono_r	40
Coq.micromega.OrderedRingX.Rplus_lt_mono	40
Coq.micromega.OrderedRingX.Rplus_le_mono	40
Coq.micromega.OrderedRingX.Rplus_lt_le_mono	40
Coq.micromega.OrderedRingX.Rplus_le_lt_mono	40
Coq.micromega.OrderedRingX.Rplus_pos_pos	40
Coq.micromega.OrderedRingX.Rplus_pos_nonneg	40
Coq.micromega.OrderedRingX.Rplus_nonneg_pos	40
Coq.micromega.OrderedRingX.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRingX.Rle_le_minus	40
Coq.micromega.OrderedRingX.Rlt_lt_minus	40
Coq.micromega.OrderedRingX.Ropp_lt_mono	40
Coq.micromega.OrderedRingX.Ropp_pos_neg	40
Coq.micromega.OrderedRingX.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRingX.Rtimes_pos_neg	40
Coq.micromega.OrderedRingX.Rtimes_neg_neg	40
Coq.micromega.OrderedRingX.Rtimes_square_nonneg	40
Coq.micromega.OrderedRingX.Rtimes_neq_0	40
Coq.micromega.OrderedRingX.Ropp_neg_pos	40
Coq.micromega.OrderedRingX.Rlt_0_1	40
Coq.micromega.OrderedRingX.Rlt_succ_r	40
Coq.micromega.OrderedRingX.Rlt_lt_succ	40
Coq.micromega.Fourier_utilX.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_utilX.Rlt_zero_pos_plus1	40	0.9	search with cache (only 1: rewrite Rplus_comm; only 1: apply (Rle_lt_0_plus_1 x (Rlt_le 0 x H))).	0.0865919589996	21
Coq.micromega.Fourier_utilX.Rle_zero_pos_plus1	40	14.18.0.4	search with cache (only 1: unfold Rle; only 1: left; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1).	25.1842119694	8135
Coq.micromega.Fourier_utilX.Rle_mult_inv_pos	40	3.4.12	search with cache (only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	2.95542502403	842
Coq.micromega.EnvRingX.radd_ext_Proper	40
Coq.micromega.EnvRingX.rmul_ext_Proper	40
Coq.micromega.EnvRingX.ropp_ext_Proper	40
Coq.micromega.EnvRingX.rsub_ext_Proper	40
Coq.micromega.EnvRingX.Peq_ok	40
Coq.micromega.EnvRingX.Peq_spec	40
Coq.micromega.EnvRingX.Pphi0	40	0	search with cache (only 1: apply (morph0 CRmorph)).	0.157489776611	1
Coq.micromega.EnvRingX.Pphi1	40
Coq.micromega.EnvRingX.env_morph	40
Coq.micromega.EnvRingX.Pjump_add	40	0.2.0.0	search with cache (only 1: apply EnvRing.env_morph; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.5929479599	6
Coq.micromega.EnvRingX.Pjump_xO_tail	40	0.1	search with cache (only 1: apply EnvRing.env_morph; only 1: now jump_simpl).	0.382446050644	3
Coq.micromega.EnvRingX.Pjump_pred_double	40	0.0.0	search with cache (only 1: apply env_morph; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.527866840363	3
Coq.micromega.EnvRingX.mkPinj_ok	40	3.11	search with cache (only 1: induction P; only 1: now rewrite EnvRing.Pjump_add).	1.69014692307	97
Coq.micromega.EnvRingX.pow_pos_add	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	1.08972716331	12
Coq.micromega.EnvRingX.ceqb_spec	40	0.1	search with cache (only 1: generalize (morph_eq CRmorph c c'); only 1: destruct (c ?=! c')).	6.69130301476	66
Coq.micromega.EnvRingX.mkPX_ok	40
Coq.micromega.EnvRingX.PaddC_ok	40
Coq.micromega.EnvRingX.PsubC_ok	40
Coq.micromega.EnvRingX.PmulC_aux_ok	40
Coq.micromega.EnvRingX.PmulC_ok	40
Coq.micromega.EnvRingX.Popp_ok	40
Coq.micromega.EnvRingX.PaddX_ok	40
Coq.micromega.EnvRingX.Padd_ok	40
Coq.micromega.EnvRingX.PsubX_ok	40
Coq.micromega.EnvRingX.Psub_ok	40
Coq.micromega.EnvRingX.PmulI_ok	40
Coq.micromega.EnvRingX.Pmul_ok	40
Coq.micromega.EnvRingX.Psquare_ok	40
Coq.micromega.EnvRingX.Mphi_morph	40
Coq.micromega.EnvRingX.Mjump_xO_tail	40	0.0	search with cache (only 1: apply EnvRing.Mphi_morph; only 1: now jump_simpl).	0.365188121796	2
Coq.micromega.EnvRingX.Mjump_pred_double	40	0.0.0	search with cache (only 1: apply Mphi_morph; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.542726039886	3
Coq.micromega.EnvRingX.Mjump_add	40	0.2.0.0	search with cache (only 1: apply EnvRing.Mphi_morph; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.630469799042	6
Coq.micromega.EnvRingX.mkZmon_ok	40
Coq.micromega.EnvRingX.zmon_pred_ok	40
Coq.micromega.EnvRingX.mkVmon_ok	40	0.0.3.7	search with cache (only 1: destruct M; only 1: rewrite EnvRing.zmon_pred_ok; only 1: rewrite EnvRing.pow_pos_add; only 1: rsimpl).	2.28757619858	75
Coq.micromega.EnvRingX.Mphi_ok	40
Coq.micromega.EnvRingX.POneSubst_ok	40
Coq.micromega.EnvRingX.PNSubst1_ok	40
Coq.micromega.EnvRingX.PNSubst_ok	40
Coq.micromega.EnvRingX.PSubstL1_ok	40
Coq.micromega.EnvRingX.PSubstL_ok	40
Coq.micromega.EnvRingX.PNSubstL_ok	40
Coq.micromega.EnvRingX.mkX_ok	40
Coq.micromega.EnvRingX.Ppow_pos_ok	40
Coq.micromega.EnvRingX.Ppow_N_ok	40
Coq.micromega.EnvRingX.norm_aux_PEadd	40
Coq.micromega.EnvRingX.norm_aux_PEopp	40	27	search with cache (only 1: now destruct pe).	28.0357029438	970
Coq.micromega.EnvRingX.norm_aux_spec	40
Coq.micromega.RMicromegaX.Rsrt	40
Coq.micromega.RMicromegaX.Rsor	40
Coq.micromega.RMicromegaX.Rinv_1	40	10	search with cache (only 1: field).	0.0707230567932	32
Coq.micromega.RMicromegaX.Qeq_true	40
Coq.micromega.RMicromegaX.Qeq_false	40
Coq.micromega.RMicromegaX.Qle_true	40
Coq.micromega.RMicromegaX.Q2R_0	40
Coq.micromega.RMicromegaX.Q2R_1	40
Coq.micromega.RMicromegaX.Q2R_inv_ext	40
Coq.micromega.RMicromegaX.QSORaddon	40
Coq.micromega.RMicromegaX.is_neg_true	40
Coq.micromega.RMicromegaX.is_neg_false	40	2.0.30.0.0	search with cache (only 1: destruct z; only 1: apply Z.le_ge; only 1: destruct z; only 1: Z.swap_greater; only 1: now induction n).	30.2303760052	6071
Coq.micromega.RMicromegaX.Q2R_m_Proper	40	0.10	search with cache (only 1: apply Qeq_true; only 1: apply Qeq_bool_iff).	0.262253046036	70
Coq.micromega.RMicromegaX.Q2R_pow_pos	40
Coq.micromega.RMicromegaX.Q2R_pow_N	40	0.0.0.0.5.0.0.0	search with cache (only 1: destruct n; only 1: compute; only 1: apply Rinv_1; only 1: induction p; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult).	0.849913835526	184
Coq.micromega.RMicromegaX.Qmult_integral	40
Coq.micromega.RMicromegaX.Qpower_positive_eq_zero	40
Coq.micromega.RMicromegaX.Qpower_positive_zero	40	5.4.5.0	search with cache (only 1: unfold Qpower_positive; only 1: unfold Qeq, Qnum, Qden; only 1: induction p; only 1: induction p).	6.51075696945	506
Coq.micromega.RMicromegaX.Q2RpowerRZ	40
Coq.micromega.RMicromegaX.Qpower0	40
Coq.micromega.RMicromegaX.Q_of_RcstR	40
Coq.micromega.RMicromegaX.Reval_formula_compat	40
Coq.micromega.RMicromegaX.Reval_nformula_dec	40
Coq.micromega.RMicromegaX.RWeakChecker_sound	40
Coq.micromega.RMicromegaX.RTautoChecker_sound	40
Coq.micromega.ZifyClassesX.mkapp2	40		search with cache ().	0.015743970871	0
Coq.micromega.ZifyClassesX.mkapp	40		search with cache ().	0.0125930309296	0
Coq.micromega.ZifyClassesX.mkrel	40		search with cache ().	0.0227210521698	0
Coq.micromega.ZifyClassesX.and_morph	40		search with cache ().	0.0317749977112	0
Coq.micromega.ZifyClassesX.or_morph	40		search with cache ().	0.0375790596008	0
Coq.micromega.ZifyClassesX.impl_morph	40		search with cache ().	0.0290110111237	0
Coq.micromega.ZifyClassesX.iff_morph	40		search with cache ().	0.112649917603	0
Coq.micromega.ZifyClassesX.not_morph	40		search with cache ().	0.0164070129395	0
Coq.micromega.ZifyClassesX.eq_iff	40		search with cache ().	0.0112540721893	0
Coq.micromega.ZifyClassesX.rew_iff	40		search with cache ().	0.0129151344299	0
Coq.micromega.ReflX.make_impl_true	40	3.0	search with cache (only 1: destruct l; only 1: induction l).	0.248448848724	27
Coq.micromega.ReflX.make_impl_map	40
Coq.micromega.ReflX.make_conj_cons	40
Coq.micromega.ReflX.make_conj_impl	40	3.3.3.3	search with cache (only 1: induction l as [| x l]; only 1: induction l as [| a l IH]; only 1: induction l as [| x l]; only 1: induction l as [| a l IH]).	1.7588570118	441
Coq.micromega.ReflX.make_conj_in	40	1.0.28	search with cache (only 1: induction l; only 1: destruct l; only 1: destruct l).	1.34101986885	487
Coq.micromega.ReflX.make_conj_app	40
Coq.micromega.ReflX.make_conj_rapp	40
Coq.micromega.ReflX.not_make_conj_cons	40
Coq.micromega.ReflX.not_make_conj_app	40
Coq.micromega.ZtacX.eq_incl	40		search with cache ().	0.022057056427	0
Coq.micromega.ZtacX.elim_concl_eq	40		search with cache ().	0.0261437892914	0
Coq.micromega.ZtacX.elim_concl_le	40	0	search with cache (only 1: destruct (Z_lt_le_dec y x)).	0.0394840240479	1
Coq.micromega.ZtacX.elim_concl_lt	40	3.3.0	search with cache (only 1: destruct (Z_lt_le_dec y x); only 1: destruct (Z_lt_le_dec x y); only 1: destruct (Z_lt_le_dec x y)).	8.5980348587	299
Coq.micromega.ZtacX.Zlt_le_add_1	40	1.0	search with cache (only 1: Z.nzsimpl; only 1: apply Z.le_succ_l).	0.123773813248	3
Coq.micromega.ZtacX.add_le	40
Coq.micromega.ZtacX.mul_le	40	21	search with cache (only 1: auto with zarith).	2.01943898201	983
Coq.micromega.QMicromegaX.Qsor	40
Coq.micromega.QMicromegaX.QSORaddon	40
Coq.micromega.QMicromegaX.Qeval_expr_simpl	40	24	search with cache (only 1: induction e).	0.386440038681	290
Coq.micromega.QMicromegaX.QNpower	40	2	search with cache (only 1: destruct n).	0.0233390331268	3
Coq.micromega.QMicromegaX.Qeval_expr_compat	40
Coq.micromega.QMicromegaX.Qeval_formula_compat	40
Coq.micromega.QMicromegaX.Qeval_nformula_dec	40
Coq.micromega.QMicromegaX.QWeakChecker_sound	40
Coq.micromega.QMicromegaX.QTautoChecker_sound	40
Coq.micromega.EnvX.jump_add	40
Coq.micromega.EnvX.jump_simpl	40
Coq.micromega.EnvX.jump_tl	40	2.0.5.0	search with cache (only 1: unfold tail; only 1: induction j; only 1: rewrite <- ?jump_add; only 1: rewrite <- ?jump_add).	0.764252901077	165
Coq.micromega.EnvX.jump_succ	40	1.0.0.5	search with cache (only 1: induction j; only 1: rewrite <- !jump_add; only 1: rewrite <- !jump_add; only 1: rewrite <- ?jump_add).	0.447597026825	106
Coq.micromega.EnvX.jump_pred_double	40
Coq.micromega.EnvX.nth_spec	40
Coq.micromega.EnvX.nth_jump	40
Coq.micromega.EnvX.nth_pred_double	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0439519882202	3
Coq.Vectors.FinX.of_nat_ext	40	0	search with cache (only 1: now rewrite (Peano_dec.le_unique _ _ h h')).	0.030483007431	1
Coq.Vectors.FinX.of_nat_to_nat_inv	40
Coq.Vectors.FinX.to_nat_of_nat	40
Coq.Vectors.FinX.to_nat_inj	40
Coq.Vectors.FinX.L_sanity	40
Coq.Vectors.FinX.L_R	40	63	search with cache (only 1: destruct n).	2.45875906944	2035
Coq.Vectors.FinX.R_sanity	40
Coq.Vectors.FinX.depair_sanity	40
Coq.Vectors.FinX.eqb_nat_eq	40
Coq.Vectors.FinX.eqb_eq	40
Coq.Vectors.FinX.eq_dec	40
Coq.Vectors.FinX.cast	40		search with cache ().	0.0135989189148	0
Coq.Vectors.VectorSpecX.eta	40	1	search with cache (only 1: apply caseS with (v := v)).	0.0866739749908	2
Coq.Vectors.VectorSpecX.eq_nth_iff	40
Coq.Vectors.VectorSpecX.nth_order_hd	40	0	search with cache (only 1: now rewrite (Vector.eta v)).	0.0258159637451	1
Coq.Vectors.VectorSpecX.nth_order_tl	40	0.0.0	search with cache (only 1: rewrite (Vector.eta v); only 1: unfold nth_order; only 1: now rewrite (Fin.of_nat_ext H (Lt.lt_S_n _ _ HS))).	0.059690952301	3
Coq.Vectors.VectorSpecX.nth_order_last	40
Coq.Vectors.VectorSpecX.nth_order_ext	40	0.0	search with cache (only 1: unfold nth_order; only 1: now rewrite (Fin.of_nat_ext H1 H2)).	0.0343821048737	2
Coq.Vectors.VectorSpecX.shiftin_nth	40
Coq.Vectors.VectorSpecX.shiftin_last	40	1	search with cache (only 1: induction v).	0.0231418609619	2
Coq.Vectors.VectorSpecX.shiftrepeat_nth	40
Coq.Vectors.VectorSpecX.shiftrepeat_last	40
Coq.Vectors.VectorSpecX.nth_order_replace_eq	40
Coq.Vectors.VectorSpecX.nth_order_replace_neq	40
Coq.Vectors.VectorSpecX.replace_id	40	0.0.4	search with cache (only 1: induction p; only 1: rewrite 2!(VectorSpec.eta v); only 1: rewrite 2!(VectorSpec.eta v)).	0.0667231082916	7
Coq.Vectors.VectorSpecX.replace_replace_eq	40
Coq.Vectors.VectorSpecX.replace_replace_neq	40
Coq.Vectors.VectorSpecX.const_nth	40	0	search with cache (only 1: now induction p).	0.0212841033936	1
Coq.Vectors.VectorSpecX.map_id	40	5	search with cache (only 1: induction v).	0.024866104126	6
Coq.Vectors.VectorSpecX.map_map	40
Coq.Vectors.VectorSpecX.map_ext_in	40	0.3.1.11	search with cache (only 1: induction v; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: apply H).	2.42463493347	177
Coq.Vectors.VectorSpecX.map_ext	40	4	search with cache (only 1: apply Vector.map_ext_in).	0.212694168091	5
Coq.Vectors.VectorSpecX.nth_map	40
Coq.Vectors.VectorSpecX.nth_map2	40
Coq.Vectors.VectorSpecX.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpecX.to_list_of_list_opp	40	0.1.1	search with cache (only 1: induction l; only 1: unfold to_list; only 1: now f_equal).	0.123620033264	23
Coq.Vectors.VectorSpecX.take_O	40		search with cache ().	0.00962901115417	0
Coq.Vectors.VectorSpecX.take_idem	40
Coq.Vectors.VectorSpecX.take_app	40
Coq.Vectors.VectorSpecX.take_prf_irr	40
Coq.Vectors.VectorSpecX.uncons_cons	40		search with cache ().	0.0100450515747	0
Coq.Vectors.VectorSpecX.append_comm_cons	40		search with cache ().	0.0101900100708	0
Coq.Vectors.VectorSpecX.splitat_append	40	0.5	search with cache (only 1: induction v; only 1: rewrite IHv).	0.125643968582	15
Coq.Vectors.VectorSpecX.append_splitat	40
Coq.Vectors.VectorSpecX.Forall_impl	40	32.4	search with cache (only 1: induction v; only 1: induction H0).	14.939332962	3136
Coq.Vectors.VectorSpecX.Forall_forall	40
Coq.Vectors.VectorSpecX.Forall_nth_order	40
Coq.Vectors.VectorSpecX.Forall2_nth_order	40
Coq.Vectors.VectorEqX.eqb_nat_eq	40
Coq.Vectors.VectorEqX.eqb_eq	40
Coq.Vectors.VectorEqX.eq_dec	40
Coq.Vectors.VectorEqX.cast	40		search with cache ().	0.0161690711975	0
Coq.Vectors.VectorDefX.trunc	40
Coq.rtauto.BintreeX.Gt_Psucc	40
Coq.rtauto.BintreeX.Psucc_Gt	40	12.9.12.5	search with cache (only 1: induction p; only 1: now destruct compare || now destruct p; only 1: rewrite <- Pos.compare_succ_succ; only 1: now destruct compare || now destruct p).	21.0779719353	9400
Coq.rtauto.BintreeX.map_app	40	4	search with cache (only 1: rewrite map_app).	0.0336441993713	5
Coq.rtauto.BintreeX.length_map	40	2	search with cache (only 1: induction l).	0.0494809150696	3
Coq.rtauto.BintreeX.Lget_map	40
Coq.rtauto.BintreeX.Lget_app	40
Coq.rtauto.BintreeX.Lget_app_Some	40
Coq.rtauto.BintreeX.Tget_Tempty	40	10	search with cache (only 1: destruct p).	0.033135175705	21
Coq.rtauto.BintreeX.Tget_Tadd	40
Coq.rtauto.BintreeX.get_empty	40	4	search with cache (only 1: destruct i).	0.02108502388	5
Coq.rtauto.BintreeX.get_Full_Gt	40
Coq.rtauto.BintreeX.get_Full_Eq	40
Coq.rtauto.BintreeX.get_push_Full	40
Coq.rtauto.BintreeX.Full_push_compat	40
Coq.rtauto.BintreeX.Full_index_one_empty	40
Coq.rtauto.BintreeX.push_not_empty	40	1.35	search with cache (only 1: injection H as [=H H0]; only 1: pose proof (Pos.succ_not_1 (index S)) as h).	0.61619591713	697
Coq.rtauto.BintreeX.get_In	40
Coq.rtauto.BintreeX.Tget_Tmap	40
Coq.rtauto.BintreeX.Tmap_Tadd	40
Coq.rtauto.BintreeX.get_map	40
Coq.rtauto.BintreeX.map_push	40
Coq.rtauto.BintreeX.Full_map	40
Coq.rtauto.RtautoX.pos_eq_refl	40
Coq.rtauto.RtautoX.form_eq_refl	40
Coq.rtauto.RtautoX.compose0	40
Coq.rtauto.RtautoX.compose1	40
Coq.rtauto.RtautoX.compose2	40
Coq.rtauto.RtautoX.compose3	40
Coq.rtauto.RtautoX.weaken	40
Coq.rtauto.RtautoX.project_In	40
Coq.rtauto.RtautoX.project	40
Coq.rtauto.RtautoX.interp_proof	40
Coq.rtauto.RtautoX.Reflect	40
Coq.Setoids.SetoidX.Seq_refl	40	18	search with cache (only 1: firstorder).	0.170837163925	145
Coq.Setoids.SetoidX.Seq_sym	40	0	search with cache (only 1: unfold Setoid_Theory in s).	0.0245449542999	1
Coq.Setoids.SetoidX.Seq_trans	40	0.2	search with cache (only 1: unfold Setoid_Theory in s; only 1: transitivity ltac:(y)).	0.0360090732574	4
Coq.Setoids.SetoidX.gen_st	40	21	search with cache (only 1: split).	0.523468017578	223
Coq.Bool.ZerobX.zerob_true_intro	40		search with cache ().	0.0084969997406	0
Coq.Bool.ZerobX.zerob_true_elim	40	12	search with cache (only 1: induction n).	0.16116809845	46
Coq.Bool.ZerobX.zerob_false_intro	40	55	search with cache (only 1: destruct n).	1.46455097198	1902
Coq.Bool.ZerobX.zerob_false_elim	40		search with cache ().	0.0166018009186	0
Coq.Bool.BoolX.bool_dec	40
Coq.Bool.BoolX.diff_true_false	40		search with cache ().	0.0149319171906	0
Coq.Bool.BoolX.diff_false_true	40		search with cache ().	0.013927936554	0
Coq.Bool.BoolX.eq_true_false_abs	40		search with cache ().	0.0162129402161	0
Coq.Bool.BoolX.not_true_is_false	40	12	search with cache (only 1: destr_bool).	0.535952091217	46
Coq.Bool.BoolX.not_false_is_true	40	12	search with cache (only 1: destr_bool).	0.707775115967	46
Coq.Bool.BoolX.not_true_iff_false	40	12	search with cache (only 1: destr_bool).	0.554079055786	46
Coq.Bool.BoolX.not_false_iff_true	40	12	search with cache (only 1: destr_bool).	0.726808786392	46
Coq.Bool.BoolX.le_implb	40	1.1	search with cache (only 1: Bool.destr_bool; only 1: Bool.destr_bool).	0.0663850307465	4
Coq.Bool.BoolX.compare_spec	40
Coq.Bool.BoolX.eqb_subst	40
Coq.Bool.BoolX.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.0379869937897	1
Coq.Bool.BoolX.eqb_prop	40	0.0.20	search with cache (only 1: destruct b; only 1: destr_bool; only 1: destr_bool).	0.528356075287	232
Coq.Bool.BoolX.eqb_true_iff	40	0.0	search with cache (only 1: destr_bool; only 1: destr_bool).	0.134713172913	2
Coq.Bool.BoolX.eqb_false_iff	40	0.0	search with cache (only 1: destr_bool; only 1: destr_bool).	0.129653930664	2
Coq.Bool.BoolX.negb_orb	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.038666009903	1
Coq.Bool.BoolX.negb_andb	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0404839515686	1
Coq.Bool.BoolX.negb_involutive	40	3	search with cache (only 1: Bool.destr_bool).	0.0332989692688	4
Coq.Bool.BoolX.negb_involutive_reverse	40	3	search with cache (only 1: by case : b ).	0.0336129665375	4
Coq.Bool.BoolX.negb_sym	40	3	search with cache (only 1: by case : b ).	0.0343689918518	4
Coq.Bool.BoolX.no_fixpoint_negb	40	55	search with cache (only 1: destruct b).	0.76055598259	1551
Coq.Bool.BoolX.eqb_negb1	40	0	search with cache (only 1: by case : b ).	0.0332589149475	1
Coq.Bool.BoolX.eqb_negb2	40	0	search with cache (only 1: by case : b ).	0.0327041149139	1
Coq.Bool.BoolX.if_negb	40	1	search with cache (only 1: by case b).	0.0333640575409	2
Coq.Bool.BoolX.negb_true_iff	40	6	search with cache (only 1: Bool.destr_bool).	0.0531709194183	7
Coq.Bool.BoolX.negb_false_iff	40	6	search with cache (only 1: destr_bool).	0.0531010627747	7
Coq.Bool.BoolX.orb_true_iff	40	2.6	search with cache (only 1: Bool.destr_bool; only 1: eauto with bool).	0.180077075958	10
Coq.Bool.BoolX.orb_false_iff	40	8.18	search with cache (only 1: Bool.destr_bool; only 1: Bool.destr_bool).	0.729113101959	397
Coq.Bool.BoolX.orb_true_elim	40	4	search with cache (only 1: destruct b1).	0.0785658359528	5
Coq.Bool.BoolX.orb_prop	40	0	search with cache (only 1: apply Bool.orb_true_iff).	0.0716731548309	1
Coq.Bool.BoolX.orb_true_intro	40	0	search with cache (only 1: apply Bool.orb_true_iff).	0.0675320625305	1
Coq.Bool.BoolX.orb_false_intro	40		search with cache ().	0.0151507854462	0
Coq.Bool.BoolX.orb_false_elim	40	9.19	search with cache (only 1: Bool.destr_bool; only 1: destr_bool).	0.69687795639	466
Coq.Bool.BoolX.orb_diag	40	3	search with cache (only 1: by case : b ).	0.0377819538116	4
Coq.Bool.BoolX.orb_true_r	40	0	search with cache (only 1: by case : b ).	0.0384459495544	1
Coq.Bool.BoolX.orb_true_l	40		search with cache ().	0.0136089324951	0
Coq.Bool.BoolX.orb_false_r	40	4	search with cache (only 1: by case : b ).	0.0404760837555	5
Coq.Bool.BoolX.orb_false_l	40		search with cache ().	0.0137231349945	0
Coq.Bool.BoolX.orb_negb_r	40	0	search with cache (only 1: by case : b ).	0.0379738807678	1
Coq.Bool.BoolX.orb_negb_l	40	0	search with cache (only 1: by case : b ).	0.038113117218	1
Coq.Bool.BoolX.orb_comm	40	4	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0396361351013	5
Coq.Bool.BoolX.orb_assoc	40	0	search with cache (only 1: <ssreflect_plugin::ssrtclseq@0> case b1 ; first  by constructor; constructor 1).	0.0383341312408	1
Coq.Bool.BoolX.andb_true_iff	40	38.3	search with cache (only 1: Bool.destr_bool; only 1: Bool.destr_bool).	4.50064492226	3964
Coq.Bool.BoolX.andb_false_iff	40	3.2.64	search with cache (only 1: inversion H; only 1: by case b1; case b2; constructor; auto; case; auto; only 1: Bool.destr_bool).	19.0126461983	2610
Coq.Bool.BoolX.andb_true_eq	40	31.15	search with cache (only 1: destruct a, b; only 1: Bool.destr_bool).	5.61031317711	4914
Coq.Bool.BoolX.andb_false_intro1	40		search with cache ().	0.0150430202484	0
Coq.Bool.BoolX.andb_false_intro2	40	0	search with cache (only 1: apply Bool.andb_false_iff).	0.0360069274902	1
Coq.Bool.BoolX.andb_false_r	40	0	search with cache (only 1: by case : b ).	0.0348391532898	1
Coq.Bool.BoolX.andb_false_l	40		search with cache ().	0.0139169692993	0
Coq.Bool.BoolX.andb_diag	40	2	search with cache (only 1: by case : b ).	0.0359439849854	3
Coq.Bool.BoolX.andb_true_r	40	2	search with cache (only 1: by case : b ).	0.0358240604401	3
Coq.Bool.BoolX.andb_true_l	40		search with cache ().	0.013720035553	0
Coq.Bool.BoolX.andb_false_elim	40	3	search with cache (only 1: destruct b1).	0.0689549446106	4
Coq.Bool.BoolX.andb_negb_r	40	0	search with cache (only 1: by case : b ).	0.0353109836578	1
Coq.Bool.BoolX.andb_negb_l	40	0	search with cache (only 1: by case : b ).	0.0356919765472	1
Coq.Bool.BoolX.andb_comm	40	15	search with cache (only 1: intuition).	0.201913118362	91
Coq.Bool.BoolX.andb_assoc	40	0	search with cache (only 1: by case b1; case b2; case b3; constructor; try by case).	0.0404551029205	1
Coq.Bool.BoolX.andb_orb_distrib_r	40	0	search with cache (only 1: <ssreflect_plugin::ssrtclseq@0> case b1 ; first  by constructor; constructor 1).	0.0380630493164	1
Coq.Bool.BoolX.andb_orb_distrib_l	40	0	search with cache (only 1: by case b1; case b2; case b3; constructor; try by case).	0.0401799678802	1
Coq.Bool.BoolX.orb_andb_distrib_r	40	0	search with cache (only 1: <ssreflect_plugin::ssrtclseq@0> case b1 ; first  by constructor; constructor 1).	0.0392000675201	1
Coq.Bool.BoolX.orb_andb_distrib_l	40	6	search with cache (only 1: destr_bool).	0.0991110801697	24
Coq.Bool.BoolX.absorption_andb	40	10	search with cache (only 1: destr_bool).	0.0669269561768	21
Coq.Bool.BoolX.absorption_orb	40	7	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0444929599762	8
Coq.Bool.BoolX.implb_true_iff	40	1	search with cache (only 1: Bool.destr_bool).	0.0582468509674	2
Coq.Bool.BoolX.implb_false_iff	40	0.0	search with cache (only 1: Bool.destr_bool; only 1: Bool.destr_bool).	0.0848858356476	2
Coq.Bool.BoolX.implb_orb	40	1	search with cache (only 1: Bool.destr_bool).	0.037407875061	2
Coq.Bool.BoolX.implb_negb_orb	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0373570919037	1
Coq.Bool.BoolX.implb_true_r	40	1	search with cache (only 1: Bool.destr_bool).	0.0402109622955	2
Coq.Bool.BoolX.implb_false_r	40		search with cache ().	0.0141568183899	0
Coq.Bool.BoolX.implb_true_l	40		search with cache ().	0.0142889022827	0
Coq.Bool.BoolX.implb_false_l	40		search with cache ().	0.0141689777374	0
Coq.Bool.BoolX.implb_same	40	3	search with cache (only 1: destr_bool).	0.0406150817871	4
Coq.Bool.BoolX.implb_contrapositive	40	1	search with cache (only 1: destr_bool).	0.0361299514771	2
Coq.Bool.BoolX.implb_negb	40	1	search with cache (only 1: destr_bool).	0.0360150337219	2
Coq.Bool.BoolX.implb_curry	40	0	search with cache (only 1: by case b1; case b2; constructor; auto).	0.0371861457825	1
Coq.Bool.BoolX.implb_andb_distrib_r	40	0	search with cache (only 1: <ssreflect_plugin::ssrtclseq@0> case b1 ; first  by constructor; constructor 1).	0.0388209819794	1
Coq.Bool.BoolX.implb_orb_distrib_r	40	0	search with cache (only 1: <ssreflect_plugin::ssrtclseq@0> case b1 ; first  by constructor; constructor 1).	0.0388350486755	1
Coq.Bool.BoolX.implb_orb_distrib_l	40	4	search with cache (only 1: destr_bool).	0.0459978580475	5
Coq.Bool.BoolX.xorb_false_r	40	44	search with cache (only 1: by case : b ).	0.583213090897	990
Coq.Bool.BoolX.xorb_false_l	40	8	search with cache (only 1: by case  def_b: b ; constructor).	0.0507278442383	9
Coq.Bool.BoolX.xorb_true_r	40		search with cache ().	0.0144898891449	0
Coq.Bool.BoolX.xorb_true_l	40		search with cache ().	0.0142869949341	0
Coq.Bool.BoolX.xorb_nilpotent	40	1	search with cache (only 1: Bool.destr_bool).	0.0441179275513	2
Coq.Bool.BoolX.xorb_comm	40	23	search with cache (only 1: destr_bool).	0.546736001968	310
Coq.Bool.BoolX.xorb_assoc_reverse	40	6	search with cache (only 1: Bool.destr_bool).	0.0433621406555	7
Coq.Bool.BoolX.xorb_eq	40	17.21.118	search with cache (only 1: destruct b; only 1: destr_bool; only 1: destr_bool).	23.7996749878	20113
Coq.Bool.BoolX.xorb_move_l_r_1	40	70	search with cache (only 1: destr_bool).	4.19327497482	3385
Coq.Bool.BoolX.xorb_move_l_r_2	40	4.8.44	search with cache (only 1: destruct b; only 1: destr_bool; only 1: destr_bool).	1.00487995148	1826
Coq.Bool.BoolX.xorb_move_r_l_1	40	62	search with cache (only 1: destr_bool).	0.792708873749	1971
Coq.Bool.BoolX.xorb_move_r_l_2	40	51	search with cache (only 1: destr_bool).	0.565739870071	1333
Coq.Bool.BoolX.negb_xorb_l	40	41	search with cache (only 1: destr_bool).	0.669810056686	858
Coq.Bool.BoolX.negb_xorb_r	40	31	search with cache (only 1: destr_bool).	0.435020208359	483
Coq.Bool.BoolX.xorb_negb_negb	40	31	search with cache (only 1: destr_bool).	0.506536960602	483
Coq.Bool.BoolX.eq_iff_eq_true	40	19.87	search with cache (only 1: destruct b2; only 1: destr_bool).	14.8175661564	6262
Coq.Bool.BoolX.eq_true_iff_eq	40	19.87	search with cache (only 1: destruct b2; only 1: destr_bool).	14.1888139248	6262
Coq.Bool.BoolX.eq_true_negb_classical	40	16	search with cache (only 1: destr_bool).	0.243725061417	108
Coq.Bool.BoolX.eq_true_not_negb	40	16	search with cache (only 1: destr_bool).	0.252875089645	108
Coq.Bool.BoolX.absurd_eq_bool	40		search with cache ().	0.0144958496094	0
Coq.Bool.BoolX.absurd_eq_true	40		search with cache ().	0.0139670372009	0
Coq.Bool.BoolX.trans_eq_bool	40		search with cache ().	0.0157558917999	0
Coq.Bool.BoolX.Is_true_eq_true	40	17	search with cache (only 1: destruct x).	0.286693096161	126
Coq.Bool.BoolX.Is_true_eq_left	40		search with cache ().	0.0142550468445	0
Coq.Bool.BoolX.Is_true_eq_right	40		search with cache ().	0.0143330097198	0
Coq.Bool.BoolX.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.0644338130951	1
Coq.Bool.BoolX.eqb_eq	40
Coq.Bool.BoolX.orb_prop_elim	40
Coq.Bool.BoolX.orb_prop_intro	40
Coq.Bool.BoolX.andb_prop_intro	40	12	search with cache (only 1: destr_bool).	0.108716964722	46
Coq.Bool.BoolX.andb_prop_elim	40	6.6	search with cache (only 1: destr_bool; only 1: destr_bool).	0.19813990593	78
Coq.Bool.BoolX.eq_bool_prop_intro	40	10	search with cache (only 1: destr_bool).	0.0882749557495	21
Coq.Bool.BoolX.eq_bool_prop_elim	40		search with cache ().	0.0161919593811	0
Coq.Bool.BoolX.negb_prop_elim	40	14	search with cache (only 1: destr_bool).	0.0986320972443	75
Coq.Bool.BoolX.negb_prop_intro	40	14	search with cache (only 1: destr_bool).	0.0863041877747	75
Coq.Bool.BoolX.negb_prop_classical	40	14	search with cache (only 1: destr_bool).	0.0850729942322	75
Coq.Bool.BoolX.negb_prop_involutive	40	14	search with cache (only 1: destr_bool).	0.0984899997711	75
Coq.Bool.BoolX.andb_if	40	16	search with cache (only 1: destruct b).	0.198871135712	108
Coq.Bool.BoolX.negb_if	40	8	search with cache (only 1: by case b).	0.0358428955078	9
Coq.Bool.BoolX.andb_lazy_alt	40		search with cache ().	0.0143179893494	0
Coq.Bool.BoolX.orb_lazy_alt	40		search with cache ().	0.0142500400543	0
Coq.Bool.BoolX.reflect_iff	40
Coq.Bool.BoolX.iff_reflect	40	1.94	search with cache (only 1: destruct b; only 1: intuition).	7.14762592316	4709
Coq.Bool.BoolX.reflect_dec	40
Coq.Bool.BoolX.eqb_spec	40	9	search with cache (only 1: destr_bool).	0.0475120544434	10
Coq.Bool.SumboolX.sumbool_of_bool	40	3	search with cache (only 1: destruct b).	0.0655190944672	12
Coq.Bool.SumboolX.bool_eq_rec	40	25	search with cache (only 1: Bool.destr_bool).	0.893081903458	306
Coq.Bool.SumboolX.bool_eq_ind	40	25	search with cache (only 1: Bool.destr_bool).	0.84781908989	306
Coq.Bool.SumboolX.sumbool_and	40		search with cache ().	0.0282669067383	0
Coq.Bool.SumboolX.sumbool_or	40		search with cache ().	0.0264410972595	0
Coq.Bool.SumboolX.sumbool_not	40		search with cache ().	0.0229589939117	0
Coq.Bool.SumboolX.bool_of_sumbool	40	2.0	search with cache (only 1: exists true; only 1: exists false).	0.153202772141	12
Coq.Bool.IfPropX.Iftrue_inv	40
Coq.Bool.IfPropX.Iffalse_inv	40
Coq.Bool.IfPropX.IfProp_true	40
Coq.Bool.IfPropX.IfProp_false	40	0	search with cache (only 1: inversion H).	0.0312390327454	1
Coq.Bool.IfPropX.IfProp_or	40
Coq.Bool.IfPropX.IfProp_sum	40
Coq.Bool.DecBoolX.ifdec_left	40		search with cache ().	0.0134010314941	0
Coq.Bool.DecBoolX.ifdec_right	40		search with cache ().	0.0135109424591	0
Coq.Bool.BoolEqX.beq_eq_true	40		search with cache ().	0.0195889472961	0
Coq.Bool.BoolEqX.beq_eq_not_false	40		search with cache ().	0.0264258384705	0
Coq.Bool.BoolEqX.beq_false_not_eq	40		search with cache ().	0.0278601646423	0
Coq.Bool.BoolEqX.exists_beq_eq	40		search with cache ().	0.0239660739899	0
Coq.Bool.BoolEqX.not_eq_false_beq	40
Coq.Bool.BoolEqX.eq_dec	40
Coq.Bool.BoolOrderX.le_refl	40	12.6	search with cache (only 1: red; only 1: by case : b ).	0.231294155121	240
Coq.Bool.BoolOrderX.le_trans	40	70.51	search with cache (only 1: red; only 1: destruct b1, b2).	10.9907069206	10171
Coq.Bool.BoolOrderX.le_true	40	0	search with cache (only 1: destr_bool).	0.0167560577393	1
Coq.Bool.BoolOrderX.false_le	40		search with cache ().	0.00801110267639	0
Coq.Bool.BoolOrderX.le_compat	40	0	search with cache (only 1: intros x x' Exx' y y' Eyy').	0.0451939105988	1
Coq.Bool.BoolOrderX.lt_irrefl	40	37.3	search with cache (only 1: absurd (false = true); only 1: destr_bool).	2.02298617363	1546
Coq.Bool.BoolOrderX.lt_trans	40	38	search with cache (only 1: destr_bool).	1.33572411537	735
Coq.Bool.BoolOrderX.lt_compat	40	0	search with cache (only 1: <Coq.Strings.String.t_eqb>).	0.0489928722382	1
Coq.Bool.BoolOrderX.lt_trichotomy	40	17	search with cache (only 1: destr_bool).	0.937388896942	355
Coq.Bool.BoolOrderX.lt_total	40
Coq.Bool.BoolOrderX.lt_le_incl	40	56	search with cache (only 1: destr_bool).	1.99764800072	1608
Coq.Bool.BoolOrderX.le_lteq_dec	40	1	search with cache (only 1: destr_bool).	0.041631937027	2
Coq.Bool.BoolOrderX.le_lteq	40
Coq.Bool.BoolOrderX.le_preorder	40
Coq.Bool.BoolOrderX.lt_strorder	40
Coq.Lists.SetoidPermutationX.Equivalence_instance_0	40
Coq.Lists.SetoidPermutationX.PermutationA_cons	40		search with cache ().	0.0559909343719	0
Coq.Lists.SetoidPermutationX.PermutationA_app_head	40	8.0	search with cache (only 1: induction l; only 1: intuition).	0.181616067886	10
Coq.Lists.SetoidPermutationX.PermutationA_app	40
Coq.Lists.SetoidPermutationX.PermutationA_app_tail	40
Coq.Lists.SetoidPermutationX.PermutationA_cons_append	40
Coq.Lists.SetoidPermutationX.PermutationA_app_comm	40
Coq.Lists.SetoidPermutationX.PermutationA_cons_app	40
Coq.Lists.SetoidPermutationX.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0524480342865	1
Coq.Lists.SetoidPermutationX.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutationX.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutationX.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutationX.PermutationA_decompose	40
Coq.Lists.SetoidPermutationX.Permutation_PermutationA	40
Coq.Lists.SetoidPermutationX.eqlistA_PermutationA	40	29	search with cache (only 1: induction H).	1.72087788582	543
Coq.Lists.SetoidPermutationX.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutationX.PermutationA_preserves_NoDupA	40
Coq.Lists.SetoidListX.InA_altdef	40
Coq.Lists.SetoidListX.InA_cons	40	23	search with cache (only 1: inversion H).	3.04293298721	462
Coq.Lists.SetoidListX.InA_nil	40		search with cache ().	0.0265259742737	0
Coq.Lists.SetoidListX.InA_alt	40
Coq.Lists.SetoidListX.NoDupA_altdef	40
Coq.Lists.SetoidListX.incl_nil	40		search with cache ().	0.0303549766541	0
Coq.Lists.SetoidListX.eqlistA_altdef	40	2.2	search with cache (only 1: elim H; only 1: elim H).	0.093631029129	6
Coq.Lists.SetoidListX.equivlist_equiv	40	43	search with cache (only 1: firstorder).	2.29820489883	945
Coq.Lists.SetoidListX.eqlistA_equiv	40
Coq.Lists.SetoidListX.eqlistA_equivlistA	40
Coq.Lists.SetoidListX.InA_compat	40
Coq.Lists.SetoidListX.InA_eqA	40
Coq.Lists.SetoidListX.In_InA	40	11	search with cache (only 1: induction l as [| a l IH]).	0.324089050293	33
Coq.Lists.SetoidListX.InA_split	40
Coq.Lists.SetoidListX.InA_app	40
Coq.Lists.SetoidListX.InA_app_iff	40	1.0.4.0.4	search with cache (only 1: induction l1; only 1: inv; only 1: induction l1; only 1: inv; only 1: induction l1).	2.87839913368	143
Coq.Lists.SetoidListX.InA_rev	40
Coq.Lists.SetoidListX.InA_singleton	40	0	search with cache (only 1: invlist InA).	0.0542080402374	1
Coq.Lists.SetoidListX.InA_double_head	40	0	search with cache (only 1: invlist InA).	0.0847239494324	1
Coq.Lists.SetoidListX.InA_permute_heads	40	0.0.0.0	search with cache (only 1: rewrite !InA_cons; only 1: invlist InA; only 1: rewrite !InA_cons; only 1: invlist InA).	0.446478128433	4
Coq.Lists.SetoidListX.InA_app_idem	40
Coq.Lists.SetoidListX.NoDupA_app	40
Coq.Lists.SetoidListX.NoDupA_rev	40
Coq.Lists.SetoidListX.NoDupA_split	40
Coq.Lists.SetoidListX.NoDupA_swap	40
Coq.Lists.SetoidListX.NoDupA_singleton	40	34	search with cache (only 1: constructor).	1.75397896767	585
Coq.Lists.SetoidListX.equivlistA_cons_proper	40
Coq.Lists.SetoidListX.equivlistA_app_proper	40
Coq.Lists.SetoidListX.equivlistA_cons_nil	40
Coq.Lists.SetoidListX.equivlistA_nil_eq	40
Coq.Lists.SetoidListX.equivlistA_double_head	40	2.1.0	search with cache (only 1: red; only 1: rewrite !InA_cons; only 1: inv).	0.216720104218	6
Coq.Lists.SetoidListX.equivlistA_permute_heads	40	1.0.1.0.3	search with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: invlist InA; only 1: rewrite !InA_cons; only 1: invlist InA).	4.57787489891	182
Coq.Lists.SetoidListX.equivlistA_app_idem	40
Coq.Lists.SetoidListX.equivlistA_NoDupA_split	40
Coq.Lists.SetoidListX.fold_right_eqlistA	40	41.11	search with cache (only 1: induction H; only 1: firstorder).	5.69106507301	2491
Coq.Lists.SetoidListX.ForallOrdPairs_inclA	40
Coq.Lists.SetoidListX.fold_right_commutes_restr	40
Coq.Lists.SetoidListX.fold_right_equivlistA_restr	40
Coq.Lists.SetoidListX.fold_right_add_restr	40
Coq.Lists.SetoidListX.fold_right_commutes	40	2.1.12	search with cache (only 1: induction s1; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp).	0.770503997803	141
Coq.Lists.SetoidListX.fold_right_equivlistA	40
Coq.Lists.SetoidListX.fold_right_add	40
Coq.Lists.SetoidListX.fold_right_eqlistA2	40
Coq.Lists.SetoidListX.fold_right_commutes_restr2	40
Coq.Lists.SetoidListX.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidListX.fold_right_add_restr2	40
Coq.Lists.SetoidListX.fold_right_commutes2	40
Coq.Lists.SetoidListX.fold_right_equivlistA2	40
Coq.Lists.SetoidListX.fold_right_add2	40
Coq.Lists.SetoidListX.InA_dec	40
Coq.Lists.SetoidListX.removeA_filter	40	9.13	search with cache (only 1: induction l; only 1: destruct (eqA_dec x a)).	1.74896478653	315
Coq.Lists.SetoidListX.removeA_InA	40
Coq.Lists.SetoidListX.removeA_NoDupA	40
Coq.Lists.SetoidListX.removeA_equivlistA	40
Coq.Lists.SetoidListX.InfA_ltA	40
Coq.Lists.SetoidListX.InfA_compat	40
Coq.Lists.SetoidListX.InfA_eqA	40
Coq.Lists.SetoidListX.SortA_InfA_InA	40
Coq.Lists.SetoidListX.In_InfA	40	15	search with cache (only 1: induction l as [| a l' Hrec]).	0.260698080063	91
Coq.Lists.SetoidListX.InA_InfA	40	29	search with cache (only 1: destruct l).	1.21225690842	420
Coq.Lists.SetoidListX.InfA_alt	40
Coq.Lists.SetoidListX.InfA_app	40	13	search with cache (only 1: inversion H).	0.253905057907	60
Coq.Lists.SetoidListX.SortA_app	40
Coq.Lists.SetoidListX.SortA_NoDupA	40
Coq.Lists.SetoidListX.eqlistA_length	40
Coq.Lists.SetoidListX.app_eqlistA_compat	40
Coq.Lists.SetoidListX.eqlistA_app	40
Coq.Lists.SetoidListX.eqlistA_rev_app	40
Coq.Lists.SetoidListX.rev_eqlistA_compat	40
Coq.Lists.SetoidListX.eqlistA_rev	40
Coq.Lists.SetoidListX.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidListX.filter_sort	40
Coq.Lists.SetoidListX.filter_InA	40
Coq.Lists.SetoidListX.filter_split	40
Coq.Lists.SetoidListX.findA_NoDupA	40
Coq.Lists.StreamsX.unfold_Stream	40
Coq.Lists.StreamsX.tl_nth_tl	40
Coq.Lists.StreamsX.Str_nth_tl_plus	40
Coq.Lists.StreamsX.Str_nth_plus	40
Coq.Lists.StreamsX.EqSt_reflex	40
Coq.Lists.StreamsX.sym_EqSt	40
Coq.Lists.StreamsX.trans_EqSt	40
Coq.Lists.StreamsX.eqst_ntheq	40
Coq.Lists.StreamsX.ntheq_eqst	40
Coq.Lists.StreamsX.ForAll_Str_nth_tl	40
Coq.Lists.StreamsX.ForAll_coind	40
Coq.Lists.StreamsX.Str_nth_tl_map	40
Coq.Lists.StreamsX.Str_nth_map	40
Coq.Lists.StreamsX.ForAll_map	40
Coq.Lists.StreamsX.Exists_map	40
Coq.Lists.StreamsX.Str_nth_tl_zipWith	40
Coq.Lists.StreamsX.Str_nth_zipWith	40
Coq.Lists.ListX.nil_cons	40		search with cache ().	0.0626151561737	0
Coq.Lists.ListX.destruct_list	40	4	search with cache (only 1: induction l as [| a tail]).	0.266219854355	45
Coq.Lists.ListX.hd_error_tl_repr	40	33	search with cache (only 1: destruct l).	1.01016902924	550
Coq.Lists.ListX.hd_error_some_nil	40		search with cache ().	0.0297241210938	0
Coq.Lists.ListX.length_zero_iff_nil	40	2	search with cache (only 1: now destruct l).	0.0556890964508	3
Coq.Lists.ListX.hd_error_nil	40		search with cache ().	0.0121669769287	0
Coq.Lists.ListX.hd_error_cons	40		search with cache ().	0.012766122818	0
Coq.Lists.ListX.app_cons_not_nil	40	53	search with cache (only 1: induction x as [| x l IHl]).	1.32895088196	2181
Coq.Lists.ListX.app_nil_l	40		search with cache ().	0.0127229690552	0
Coq.Lists.ListX.app_nil_r	40	35	search with cache (only 1: induction l).	0.743157148361	787
Coq.Lists.ListX.app_nil_end	40	16	search with cache (only 1: generalize (List.app_nil_r (A:=l))).	0.182775974274	108
Coq.Lists.ListX.app_assoc	40	2	search with cache (only 1: induction l).	0.193402051926	25
Coq.Lists.ListX.app_assoc_reverse	40	2	search with cache (only 1: induction l).	0.194043159485	25
Coq.Lists.ListX.app_comm_cons	40		search with cache ().	0.0136699676514	0
Coq.Lists.ListX.app_eq_nil	40	0.6	search with cache (only 1: induction l as [| x l IH]; only 1: destruct l).	0.134639024734	8
Coq.Lists.ListX.app_eq_unit	40	17.47	search with cache (only 1: induction x as [| x l IHl]; only 1: destruct l).	34.3994889259	16293
Coq.Lists.ListX.elt_eq_unit	40
Coq.Lists.ListX.app_inj_tail	40
Coq.Lists.ListX.app_length	40	3	search with cache (only 1: induction l).	0.0506789684296	4
Coq.Lists.ListX.last_length	40	0	search with cache (only 1: rewrite List.app_length).	0.0555009841919	1
Coq.Lists.ListX.app_inv_head	40	35	search with cache (only 1: induction l as [| x l IH]).	3.95024299622	726
Coq.Lists.ListX.app_inv_tail	40
Coq.Lists.ListX.in_eq	40		search with cache ().	0.0139698982239	0
Coq.Lists.ListX.in_cons	40		search with cache ().	0.0622568130493	0
Coq.Lists.ListX.not_in_cons	40		search with cache ().	0.0285749435425	0
Coq.Lists.ListX.in_nil	40		search with cache ().	0.0130369663239	0
Coq.Lists.ListX.in_app_or	40	16	search with cache (only 1: intuition).	0.4880027771	136
Coq.Lists.ListX.in_or_app	40
Coq.Lists.ListX.in_app_iff	40
Coq.Lists.ListX.in_split	40	1.10.25	search with cache (only 1: induction l; only 1: exists [],l; only 1: exists (a :: l1),l2).	6.39243388176	3088
Coq.Lists.ListX.in_elt	40	0	search with cache (only 1: apply List.in_or_app).	0.0319178104401	1
Coq.Lists.ListX.in_elt_inv	40	26	search with cache (only 1: induction l1).	1.88924098015	912
Coq.Lists.ListX.in_inv	40		search with cache ().	0.020635843277	0
Coq.Lists.ListX.in_dec	40
Coq.Lists.ListX.nth_in_or_default	40
Coq.Lists.ListX.nth_S_cons	40		search with cache ().	0.0195770263672	0
Coq.Lists.ListX.nth_default_eq	40
Coq.Lists.ListX.nth_In	40
Coq.Lists.ListX.In_nth	40
Coq.Lists.ListX.nth_overflow	40
Coq.Lists.ListX.nth_indep	40
Coq.Lists.ListX.app_nth1	40
Coq.Lists.ListX.app_nth2	40
Coq.Lists.ListX.app_nth2_plus	40	5	search with cache (only 1: rewrite List.app_nth2, minus_plus).	0.0519349575043	6
Coq.Lists.ListX.nth_middle	40	0.6	search with cache (only 1: rewrite plus_n_O  at 1; only 1: rewrite app_nth2, minus_plus).	0.0855531692505	8
Coq.Lists.ListX.nth_split	40
Coq.Lists.ListX.nth_ext	40
Coq.Lists.ListX.nth_error_In	40
Coq.Lists.ListX.In_nth_error	40	7.7.1	search with cache (only 1: induction l as [| a l IH]; only 1: exists 0; only 1: exists (S n)).	1.08712291718	259
Coq.Lists.ListX.nth_error_None	40
Coq.Lists.ListX.nth_error_Some	40
Coq.Lists.ListX.nth_error_split	40
Coq.Lists.ListX.nth_error_app1	40
Coq.Lists.ListX.nth_error_app2	40
Coq.Lists.ListX.nth_error_nth	40	0.0.10	search with cache (only 1: apply List.nth_error_split in H; only 1: rewrite List.app_nth2; only 1: rewrite Nat.sub_diag).	0.467923879623	65
Coq.Lists.ListX.nth_error_nth'	40	0.9.10.10	search with cache (only 1: apply List.nth_split with (d := d) in H; only 1: rewrite H; only 1: rewrite List.nth_error_app2; only 1: repeat rewrite Nat.sub_diag).	3.76987695694	1419
Coq.Lists.ListX.last_last	40	10.72	search with cache (only 1: induction l; only 1: destruct l).	16.6607270241	16031
Coq.Lists.ListX.app_removelast_last	40	15.18.0.5	search with cache (only 1: induction l; only 1: destruct l; only 1: generalize (List.app_nil_r (A:=l)); only 1: rewrite IHl).	29.8530368805	8372
Coq.Lists.ListX.exists_last	40
Coq.Lists.ListX.removelast_app	40	0.0.3.4	search with cache (only 1: induction l as [| x l IH]; only 1: assert (l ++ l' <> []); only 1: destruct l; only 1: destruct (l ++ l')).	3.26914787292	236
Coq.Lists.ListX.removelast_last	40	1.10	search with cache (only 1: rewrite List.removelast_app; only 1: apply app_nil_r).	0.173330068588	47
Coq.Lists.ListX.remove_cons	40	0	search with cache (only 1: destruct (eq_dec x x)).	0.0791280269623	1
Coq.Lists.ListX.remove_app	40	0.17	search with cache (only 1: induction l1; only 1: destruct (eq_dec x a)).	0.439706087112	145
Coq.Lists.ListX.remove_In	40	4.13	search with cache (only 1: induction l as [| a0 l IHl]; only 1: destruct eq_dec).	1.55797791481	473
Coq.Lists.ListX.notin_remove	40	0.12	search with cache (only 1: induction l; only 1: destruct (eq_dec x a)).	0.676769971848	153
Coq.Lists.ListX.in_remove	40
Coq.Lists.ListX.in_in_remove	40
Coq.Lists.ListX.remove_remove_comm	40
Coq.Lists.ListX.remove_remove_eq	40	1.2.12	search with cache (only 1: induction l as [| y l]; only 1: destruct (eq_dec x y); only 1: destruct (eq_dec x y)).	0.791614055634	251
Coq.Lists.ListX.remove_length_le	40	2.18	search with cache (only 1: induction l; only 1: destruct eq_dec).	0.894442081451	211
Coq.Lists.ListX.remove_length_lt	40	4.18.4.46	search with cache (only 1: induction l as [| z l]; only 1: destruct (eq_dec x x); only 1: apply Nat.lt_succ_r, List.remove_length_le; only 1: destruct (eq_dec x z)).	27.32523489	11250
Coq.Lists.ListX.count_occ_In	40
Coq.Lists.ListX.count_occ_not_In	40	0.7.2.0.2	search with cache (only 1: induction l as [| y l]; only 1: destruct eq_dec as [->| Hneq]; only 1: induction l as [| y l]; only 1: destruct (eq_dec x x); only 1: destruct eq_dec as [->| Hneq]).	5.98285198212	466
Coq.Lists.ListX.count_occ_nil	40		search with cache ().	0.0172190666199	0
Coq.Lists.ListX.count_occ_inv_nil	40	0.2.0.3.5.2	search with cache (only 1: induction l as [| x l]; only 1: induction l; only 1: specialize (H x); only 1: destruct eq_dec as [_| NEQ]; only 1: specialize (H x); only 1: destruct eq_dec as [_| NEQ]).	1.45429301262	341
Coq.Lists.ListX.count_occ_cons_eq	40
Coq.Lists.ListX.count_occ_cons_neq	40	0	search with cache (only 1: now destruct (eq_dec x y)).	0.101682901382	1
Coq.Lists.ListX.rev_app_distr	40
Coq.Lists.ListX.rev_unit	40	14	search with cache (only 1: apply (List.rev_app_distr [a])).	0.163790941238	75
Coq.Lists.ListX.rev_involutive	40	10.8	search with cache (only 1: induction l as [| ? ? H]; only 1: rewrite (List.rev_unit a)).	0.777596950531	376
Coq.Lists.ListX.rev_eq_app	40
Coq.Lists.ListX.in_rev	40
Coq.Lists.ListX.rev_length	40	0.27	search with cache (only 1: induction l; only 1: rewrite List.app_length).	1.38329100609	894
Coq.Lists.ListX.rev_nth	40
Coq.Lists.ListX.rev_append_rev	40
Coq.Lists.ListX.rev_alt	40
Coq.Lists.ListX.rev_list_ind	40	44	search with cache (only 1: induction l).	3.53481388092	2877
Coq.Lists.ListX.rev_ind	40
Coq.Lists.ListX.concat_nil	40		search with cache ().	0.0141890048981	0
Coq.Lists.ListX.concat_cons	40		search with cache ().	0.0148940086365	0
Coq.Lists.ListX.concat_app	40	3.8.15.17	search with cache (only 1: induction l1; only 1: induction l1; only 1: rewrite List.app_nil_r; only 1: rewrite IHl1, List.app_assoc).	2.46151900291	1865
Coq.Lists.ListX.in_concat	40
Coq.Lists.ListX.list_eq_dec	40
Coq.Lists.ListX.map_cons	40		search with cache ().	0.0160758495331	0
Coq.Lists.ListX.in_map	40	15	search with cache (only 1: induction l as [| a l IH]).	0.512292861938	91
Coq.Lists.ListX.in_map_iff	40	1.1	search with cache (only 1: induction l; only 1: induction l).	0.211678028107	4
Coq.Lists.ListX.map_length	40	2	search with cache (only 1: induction l).	0.0991151332855	3
Coq.Lists.ListX.map_nth	40
Coq.Lists.ListX.map_nth_error	40	19.4	search with cache (only 1: apply nth_error_split in H; only 1: induction l1).	1.7955801487	665
Coq.Lists.ListX.map_app	40	35	search with cache (only 1: induction l).	0.700936079025	621
Coq.Lists.ListX.map_last	40	6	search with cache (only 1: induction l).	0.0550079345703	7
Coq.Lists.ListX.map_rev	40	2.23.2	search with cache (only 1: induction l; only 1: destruct l; only 1: rewrite List.map_app).	1.34264302254	820
Coq.Lists.ListX.map_eq_nil	40	5	search with cache (only 1: destruct l).	0.0493030548096	6
Coq.Lists.ListX.map_eq_cons	40	0	search with cache (only 1: destruct l).	0.128914117813	1
Coq.Lists.ListX.map_eq_app	40
Coq.Lists.ListX.count_occ_map	40
Coq.Lists.ListX.flat_map_app	40
Coq.Lists.ListX.in_flat_map	40
Coq.Lists.ListX.flat_map_concat_map	40	5	search with cache (only 1: induction l as [| x l IH]).	0.0521740913391	6
Coq.Lists.ListX.concat_map	40
Coq.Lists.ListX.remove_concat	40
Coq.Lists.ListX.map_id	40	10	search with cache (only 1: induction l).	0.142773151398	30
Coq.Lists.ListX.map_map	40	5	search with cache (only 1: induction l).	0.100731134415	6
Coq.Lists.ListX.map_ext_in	40	3.0.17	search with cache (only 1: induction l; only 1: rewrite IHl; only 1: rewrite H by intuition).	1.80990505219	559
Coq.Lists.ListX.ext_in_map	40	5	search with cache (only 1: induction l as [| x l IH]).	0.0891239643097	6
Coq.Lists.ListX.map_ext_in_iff	40	0.1.23.7	search with cache (only 1: induction l as [| x l IH]; only 1: induction l; only 1: rewrite H by intuition; only 1: rewrite IHl).	6.49108815193	1777
Coq.Lists.ListX.map_ext	40	2	search with cache (only 1: apply map_ext_in).	0.0495779514313	3
Coq.Lists.ListX.flat_map_ext	40	39	search with cache (only 1: induction l as [| x l IHl]).	1.94793605804	776
Coq.Lists.ListX.nth_nth_nth_map	40
Coq.Lists.ListX.fold_left_app	40
Coq.Lists.ListX.fold_left_length	40
Coq.Lists.ListX.fold_right_app	40	9	search with cache (only 1: induction l).	0.0905480384827	19
Coq.Lists.ListX.fold_left_rev_right	40
Coq.Lists.ListX.fold_symmetric	40
Coq.Lists.ListX.existsb_exists	40
Coq.Lists.ListX.existsb_nth	40
Coq.Lists.ListX.existsb_app	40
Coq.Lists.ListX.forallb_forall	40
Coq.Lists.ListX.forallb_app	40	24.2.28	search with cache (only 1: induction l1 as [| x l1 IH]; only 1: rewrite IH; only 1: apply andb_assoc).	3.43753695488	2427
Coq.Lists.ListX.filter_In	40
Coq.Lists.ListX.filter_app	40	0.1	search with cache (only 1: induction l as [| x l IH]; only 1: destruct (f x)).	0.112169981003	3
Coq.Lists.ListX.concat_filter_map	40	9.5.13.7.4.15	search with cache (only 1: induction l; only 1: induction l; only 1: rewrite List.app_nil_r; only 1: f_equal; only 1: rewrite List.app_nil_r; only 1: rewrite List.filter_app).	29.1246430874	10881
Coq.Lists.ListX.find_some	40
Coq.Lists.ListX.find_none	40
Coq.Lists.ListX.partition_cons1	40
Coq.Lists.ListX.partition_cons2	40	19.9	search with cache (only 1: rewrite H; only 1: destruct (f a)).	2.47683095932	718
Coq.Lists.ListX.partition_length	40
Coq.Lists.ListX.partition_inv_nil	40	0.0	search with cache (only 1: destruct l as [| a l']; only 1: destruct (f a), (List.partition (A:=l'))).	0.105668067932	2
Coq.Lists.ListX.elements_in_partition	40
Coq.Lists.ListX.filter_map	40
Coq.Lists.ListX.filter_ext_in	40	19.5.7	search with cache (only 1: induction l; only 1: rewrite H; only 1: rewrite IHl).	22.1807830334	3765
Coq.Lists.ListX.ext_in_filter	40	42.5	search with cache (only 1: rewrite List.filter_map in H; only 1: induction l as [| v l IHl]).	22.1865231991	7005
Coq.Lists.ListX.filter_ext_in_iff	40	0.1.42.0	search with cache (only 1: rewrite filter_map in H; only 1: induction l as [| v l IHl]; only 1: rewrite filter_map; only 1: apply map_ext_in).	39.8228139877	10446
Coq.Lists.ListX.filter_ext	40	2	search with cache (only 1: apply filter_ext_in).	0.0427489280701	3
Coq.Lists.ListX.remove_alt	40	1.15	search with cache (only 1: induction l as [| y l]; only 1: destruct (eq_dec x y)).	0.679637908936	260
Coq.Lists.ListX.count_occ_alt	40
Coq.Lists.ListX.in_split_l	40	0.0.15	search with cache (only 1: induction l; only 1: destruct (List.split (A:=l)); only 1: destruct (List.split (A:=l))).	2.31664800644	528
Coq.Lists.ListX.in_split_r	40	0.0.11	search with cache (only 1: induction l; only 1: destruct (split l); only 1: destruct (split l)).	0.490496873856	119
Coq.Lists.ListX.split_nth	40
Coq.Lists.ListX.split_length_l	40	0.4	search with cache (only 1: induction l; only 1: destruct (List.split (A:=l))).	0.226345062256	20
Coq.Lists.ListX.split_length_r	40	0.2	search with cache (only 1: induction l; only 1: destruct (List.split (A:=l))).	0.124009847641	4
Coq.Lists.ListX.split_combine	40	0.7	search with cache (only 1: induction l; only 1: destruct (List.split (A:=l))).	0.209706068039	30
Coq.Lists.ListX.combine_split	40
Coq.Lists.ListX.in_combine_l	40
Coq.Lists.ListX.in_combine_r	40
Coq.Lists.ListX.combine_length	40
Coq.Lists.ListX.combine_nth	40
Coq.Lists.ListX.in_prod_aux	40	12	search with cache (only 1: induction l).	0.159591913223	46
Coq.Lists.ListX.in_prod	40
Coq.Lists.ListX.in_prod_iff	40
Coq.Lists.ListX.prod_length	40	1.0.1	search with cache (only 1: induction l; only 1: rewrite List.app_length; only 1: rewrite List.map_length).	0.153128862381	5
Coq.Lists.ListX.lel_refl	40		search with cache ().	0.0202767848969	0
Coq.Lists.ListX.lel_trans	40	3.0	search with cache (only 1: unfold lel; only 1: apply Nat.le_trans with (length m)).	0.089339017868	5
Coq.Lists.ListX.lel_cons_cons	40	21	search with cache (only 1: apply le_n_S).	0.687815904617	253
Coq.Lists.ListX.lel_cons	40		search with cache ().	0.0254859924316	0
Coq.Lists.ListX.lel_tail	40	3.2.0	search with cache (only 1: unfold lel; only 1: replace (1 + length l) with (S (length l)); only 1: auto with arith).	0.209513187408	11
Coq.Lists.ListX.lel_nil	40
Coq.Lists.ListX.incl_nil_l	40		search with cache ().	0.0262479782104	0
Coq.Lists.ListX.incl_l_nil	40	0.0	search with cache (only 1: induction l as [| x l]; only 1: specialize (H x)).	0.0566549301147	2
Coq.Lists.ListX.incl_refl	40		search with cache ().	0.0151898860931	0
Coq.Lists.ListX.incl_tl	40		search with cache ().	0.0299379825592	0
Coq.Lists.ListX.incl_tran	40		search with cache ().	0.0196690559387	0
Coq.Lists.ListX.incl_appl	40	11	search with cache (only 1: auto using in_app_or, in_or_app).	0.590194940567	103
Coq.Lists.ListX.incl_appr	40	11	search with cache (only 1: auto using in_app_or, in_or_app).	0.608433008194	103
Coq.Lists.ListX.incl_cons	40	3	search with cache (only 1: intros Hincl).	0.0541019439697	4
Coq.Lists.ListX.incl_cons_inv	40	5.45	search with cache (only 1: intuition; only 1: auto with datatypes).	4.26384592056	2828
Coq.Lists.ListX.incl_app	40	6.9.5.4	search with cache (only 1: induction l; only 1: intros Hincl; only 1: intuition; only 1: firstorder).	9.24370980263	2892
Coq.Lists.ListX.incl_app_app	40		search with cache ().	0.0226020812988	0
Coq.Lists.ListX.incl_app_inv	40	2.10.3.14.1.16	search with cache (only 1: induction l1; only 1: intros HF; only 1: intuition; only 1: intuition; only 1: induction l1; only 1: intuition).	14.932970047	4114
Coq.Lists.ListX.incl_filter	40	24.3.1	search with cache (only 1: induction l as [| x l IH]; only 1: destruct (f x); only 1: intros H).	11.2761559486	2244
Coq.Lists.ListX.remove_incl	40
Coq.Lists.ListX.incl_map	40
Coq.Lists.ListX.firstn_nil	40	40	search with cache (only 1: destruct n).	4.24235892296	852
Coq.Lists.ListX.firstn_cons	40		search with cache ().	0.0163879394531	0
Coq.Lists.ListX.firstn_all	40	16	search with cache (only 1: induction l).	0.976164102554	203
Coq.Lists.ListX.firstn_all2	40
Coq.Lists.ListX.firstn_O	40		search with cache ().	0.01531291008	0
Coq.Lists.ListX.firstn_le_length	40
Coq.Lists.ListX.firstn_length_le	40
Coq.Lists.ListX.firstn_app	40
Coq.Lists.ListX.firstn_app_2	40	19	search with cache (only 1: induction l1).	11.9271428585	2417
Coq.Lists.ListX.firstn_firstn	40
Coq.Lists.ListX.firstn_skipn_comm	40
Coq.Lists.ListX.skipn_firstn_comm	40
Coq.Lists.ListX.skipn_O	40		search with cache ().	0.014121055603	0
Coq.Lists.ListX.skipn_nil	40	1	search with cache (only 1: induction n).	0.0351369380951	2
Coq.Lists.ListX.skipn_cons	40		search with cache ().	0.0145130157471	0
Coq.Lists.ListX.skipn_all	40	15	search with cache (only 1: now induction l).	0.780618906021	235
Coq.Lists.ListX.skipn_all2	40
Coq.Lists.ListX.firstn_skipn	40
Coq.Lists.ListX.firstn_length	40
Coq.Lists.ListX.skipn_length	40
Coq.Lists.ListX.skipn_app	40
Coq.Lists.ListX.firstn_skipn_rev	40
Coq.Lists.ListX.firstn_rev	40
Coq.Lists.ListX.skipn_rev	40
Coq.Lists.ListX.removelast_firstn	40
Coq.Lists.ListX.removelast_firstn_len	40	5.4	search with cache (only 1: induction l; only 1: destruct l).	0.107198953629	26
Coq.Lists.ListX.firstn_removelast	40
Coq.Lists.ListX.combine_nil	40	1.2	search with cache (only 1: apply List.length_zero_iff_nil; only 1: rewrite List.combine_length).	0.0808210372925	5
Coq.Lists.ListX.combine_firstn_l	40
Coq.Lists.ListX.combine_firstn_r	40
Coq.Lists.ListX.combine_firstn	40
Coq.Lists.ListX.Add_app	40	1	search with cache (only 1: induction l1).	0.0466389656067	2
Coq.Lists.ListX.Add_split	40
Coq.Lists.ListX.Add_in	40
Coq.Lists.ListX.Add_length	40
Coq.Lists.ListX.Add_inv	40	42	search with cache (only 1: induction l).	0.809944152832	949
Coq.Lists.ListX.incl_Add_inv	40
Coq.Lists.ListX.NoDup_Add	40
Coq.Lists.ListX.NoDup_remove	40
Coq.Lists.ListX.NoDup_remove_1	40	3	search with cache (only 1: now apply List.NoDup_remove with a).	0.0491948127747	4
Coq.Lists.ListX.NoDup_remove_2	40
Coq.Lists.ListX.NoDup_cons_iff	40	29.56	search with cache (only 1: inversion H; only 1: inversion H).	15.1079189777	12232
Coq.Lists.ListX.NoDup_rev	40
Coq.Lists.ListX.NoDup_filter	40
Coq.Lists.ListX.nodup_fixed_point	40
Coq.Lists.ListX.nodup_In	40
Coq.Lists.ListX.nodup_incl	40
Coq.Lists.ListX.NoDup_nodup	40
Coq.Lists.ListX.nodup_inv	40
Coq.Lists.ListX.NoDup_count_occ	40
Coq.Lists.ListX.NoDup_count_occ'	40
Coq.Lists.ListX.NoDup_nth_error	40
Coq.Lists.ListX.NoDup_nth	40
Coq.Lists.ListX.NoDup_incl_length	40
Coq.Lists.ListX.NoDup_length_incl	40
Coq.Lists.ListX.NoDup_incl_NoDup	40
Coq.Lists.ListX.NoDup_map_inv	40
Coq.Lists.ListX.cons_seq	40		search with cache ().	0.018630027771	0
Coq.Lists.ListX.seq_length	40
Coq.Lists.ListX.seq_nth	40
Coq.Lists.ListX.seq_shift	40
Coq.Lists.ListX.in_seq	40
Coq.Lists.ListX.seq_NoDup	40
Coq.Lists.ListX.seq_app	40
Coq.Lists.ListX.seq_S	40
Coq.Lists.ListX.Exists_exists	40
Coq.Lists.ListX.Exists_nth	40
Coq.Lists.ListX.Exists_nil	40		search with cache ().	0.027184009552	0
Coq.Lists.ListX.Exists_cons	40	6	search with cache (only 1: inversion H).	0.0748767852783	7
Coq.Lists.ListX.Exists_app	40
Coq.Lists.ListX.Exists_rev	40
Coq.Lists.ListX.Exists_dec	40
Coq.Lists.ListX.Exists_fold_right	40
Coq.Lists.ListX.incl_Exists	40
Coq.Lists.ListX.Forall_forall	40
Coq.Lists.ListX.Forall_nth	40
Coq.Lists.ListX.Forall_inv	40	0	search with cache (only 1: inversion H).	0.0439999103546	1
Coq.Lists.ListX.Forall_inv_tail	40	1	search with cache (only 1: inversion H).	0.0449938774109	2
Coq.Lists.ListX.Forall_app	40
Coq.Lists.ListX.Forall_elt	40	24.1.5	search with cache (only 1: induction l1; only 1: inversion H; only 1: inversion H).	6.41062808037	1470
Coq.Lists.ListX.Forall_rev	40
Coq.Lists.ListX.Forall_rect	40
Coq.Lists.ListX.Forall_dec	40
Coq.Lists.ListX.Forall_fold_right	40	0.25.25	search with cache (only 1: destruct H; only 1: induction H0; only 1: induction l).	16.3600788116	8495
Coq.Lists.ListX.incl_Forall	40
Coq.Lists.ListX.map_ext_Forall	40	14	search with cache (only 1: apply List.map_ext_in, List.Forall_forall).	0.666524887085	175
Coq.Lists.ListX.Exists_impl	40
Coq.Lists.ListX.Exists_or	40	0.0	search with cache (only 1: induction H0; only 1: induction H0).	0.1384100914	2
Coq.Lists.ListX.Exists_or_inv	40	3.9	search with cache (only 1: induction l; only 1: inversion H).	1.7021048069	142
Coq.Lists.ListX.Forall_impl	40	8	search with cache (only 1: induction H0).	0.116042852402	13
Coq.Lists.ListX.Forall_and	40
Coq.Lists.ListX.Forall_and_inv	40	17.4.16.7	search with cache (only 1: induction l; only 1: inversion H; only 1: induction l; only 1: inversion H).	34.0892388821	10513
Coq.Lists.ListX.Forall_Exists_neg	40
Coq.Lists.ListX.Exists_Forall_neg	40
Coq.Lists.ListX.neg_Forall_Exists_neg	40	9.7	search with cache (only 1: apply List.Exists_Forall_neg; only 1: firstorder).	3.1642742157	532
Coq.Lists.ListX.Forall_Exists_dec	40
Coq.Lists.ListX.incl_Forall_in_iff	40
Coq.Lists.ListX.exists_Forall	40	8.9	search with cache (only 1: induction l; only 1: inversion H).	2.0802321434	514
Coq.Lists.ListX.Forall_image	40
Coq.Lists.ListX.concat_nil_Forall	40
Coq.Lists.ListX.in_flat_map_Exists	40
Coq.Lists.ListX.notin_flat_map_Forall	40
Coq.Lists.ListX.Forall2_refl	40		search with cache ().	0.0205471515656	0
Coq.Lists.ListX.Forall2_app_inv_l	40
Coq.Lists.ListX.Forall2_app_inv_r	40
Coq.Lists.ListX.Forall2_app	40	5.2.0	search with cache (only 1: induction l1 in l1', H, H0 |- *; only 1: inversion H; only 1: inversion H).	0.162019014359	10
Coq.Lists.ListX.ForallOrdPairs_In	40
Coq.Lists.ListX.ForallPairs_ForallOrdPairs	40	3.8.5.1.3.3.6.1.6	search with cache (only 1: induction l as [| a l' Hrec]; only 1: destruct Hrec as [Hl'| Hl']; only 1: intros l1 l2; only 1: intuition; only 1: constructor; only 1: constructor; only 1: firstorder  auto with datatypes; only 1: apply <- List.Forall_forall; only 1: firstorder  auto with datatypes).	11.132422924	5339
Coq.Lists.ListX.ForallOrdPairs_ForallPairs	40
Coq.Lists.ListX.repeat_length	40	0	search with cache (only 1: induction n as [| k Hrec]).	0.0620009899139	1
Coq.Lists.ListX.repeat_spec	40	0	search with cache (only 1: induction n as [| k Hrec]).	0.0439760684967	1
Coq.Lists.ListX.repeat_cons	40	0	search with cache (only 1: induction n).	0.0470290184021	1
Coq.Lists.ListX.repeat_to_concat	40	0	search with cache (only 1: induction n).	0.0487401485443	1
Coq.Lists.ListX.list_sum_app	40	9	search with cache (only 1: induction l1).	0.213270902634	10
Coq.Lists.ListX.list_max_app	40	8	search with cache (only 1: induction l1).	0.120410919189	9
Coq.Lists.ListX.list_max_le	40	0.12.4.12	search with cache (only 1: induction l; only 1: apply Nat.max_lub_iff in H; only 1: induction l; only 1: inversion_clear H as [| ? ? Hle HF]).	6.74858784676	1438
Coq.Lists.ListX.list_max_lt	40
Coq.Lists.StreamMemoX.memo_get_correct	40
Coq.Lists.StreamMemoX.imemo_get_correct	40
Coq.Lists.StreamMemoX.dmemo_get_correct	40
Coq.Lists.StreamMemoX.dimemo_get_correct	40
Coq.Lists.ListDecX.In_decidable	40	4.10	search with cache (only 1: induction l as [| a l' Hrec]; only 1: intuition).	0.435594081879	101
Coq.Lists.ListDecX.incl_decidable	40
Coq.Lists.ListDecX.NoDup_decidable	40
Coq.Lists.ListDecX.incl_dec	40
Coq.Lists.ListDecX.NoDup_dec	40
Coq.Lists.ListDecX.uniquify_map	40
Coq.Lists.ListDecX.uniquify	40
Coq.NArith.BinNatX.N.eq_dec	40
Coq.NArith.BinNatX.N.discr	40	0	search with cache (only 1: destruct n).	0.046217918396	1
Coq.NArith.BinNatX.N.peano_rect_base	40		search with cache ().	0.00922393798828	0
Coq.NArith.BinNatX.N.peano_rect_succ	40	0.2	search with cache (only 1: destruct n; only 1: now rewrite Pos.peano_rect_succ).	0.0475368499756	4
Coq.NArith.BinNatX.N.peano_rec_base	40		search with cache ().	0.010449886322	0
Coq.NArith.BinNatX.N.peano_rec_succ	40	0.1	search with cache (only 1: destruct n; only 1: now rewrite Pos.peano_rect_succ).	0.050843000412	3
Coq.NArith.BinNatX.N.bi_induction	40	5	search with cache (only 1: BinNat.N.induct ltac:(n)).	0.199850082397	6
Coq.NArith.BinNatX.N.recursion_wd	40
Coq.NArith.BinNatX.N.recursion_0	40		search with cache ().	0.0107681751251	0
Coq.NArith.BinNatX.N.recursion_succ	40
Coq.NArith.BinNatX.N.one_succ	40		search with cache ().	0.00976014137268	0
Coq.NArith.BinNatX.N.two_succ	40		search with cache ().	0.00997495651245	0
Coq.NArith.BinNatX.N.pred_0	40		search with cache ().	0.00974416732788	0
Coq.NArith.BinNatX.N.pos_pred_spec	40		search with cache ().	0.0101461410522	0
Coq.NArith.BinNatX.N.succ_pos_spec	40	0	search with cache (only 1: now destruct n).	0.0243051052094	1
Coq.NArith.BinNatX.N.pos_pred_succ	40	2.0.0.0	search with cache (only 1: destruct n; only 1: destruct p; only 1: f_equal; only 1: induction p).	0.0637619495392	6
Coq.NArith.BinNatX.N.succ_pos_pred	40	1.0.0	search with cache (only 1: destruct p; only 1: f_equal; only 1: induction p).	0.06019115448	4
Coq.NArith.BinNatX.N.pred_succ	40	2.0.0.0	search with cache (only 1: destruct n; only 1: destruct p; only 1: f_equal; only 1: induction p).	0.0605170726776	6
Coq.NArith.BinNatX.N.pred_sub	40	0	search with cache (only 1: now BinNat.N.nzsimpl').	0.0612518787384	1
Coq.NArith.BinNatX.N.succ_0_discr	40	13.1	search with cache (only 1: pose proof (BinNat.N.pred_succ n) as EQ'; only 1: destruct n).	0.389151096344	154
Coq.NArith.BinNatX.N.add_0_l	40		search with cache ().	0.0097541809082	0
Coq.NArith.BinNatX.N.add_succ_l	40	0	search with cache (only 1: BinNat.N.nzsimpl).	0.0736870765686	1
Coq.NArith.BinNatX.N.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.0224759578705	1
Coq.NArith.BinNatX.N.sub_succ_r	40	0.0.0.2	search with cache (only 1: destruct n as [| p], m as [| q]; only 1: now destruct p; only 1: rewrite Pos.sub_mask_succ_r, Pos.sub_mask_carry_spec; only 1: now destruct (Pos.sub_mask p q) as [| [r| r| ]| ]).	0.0719239711761	6
Coq.NArith.BinNatX.N.mul_0_l	40		search with cache ().	0.0101058483124	0
Coq.NArith.BinNatX.N.mul_succ_l	40	0	search with cache (only 1: BinNat.N.nzsimpl).	0.197616100311	1
Coq.NArith.BinNatX.N.eqb_eq	40
Coq.NArith.BinNatX.N.ltb_lt	40
Coq.NArith.BinNatX.N.leb_le	40
Coq.NArith.BinNatX.N.compare_eq_iff	40
Coq.NArith.BinNatX.N.compare_lt_iff	40		search with cache ().	0.0120670795441	0
Coq.NArith.BinNatX.N.compare_le_iff	40		search with cache ().	0.0138118267059	0
Coq.NArith.BinNatX.N.compare_antisym	40	0.0	search with cache (only 1: destruct n, m; only 1: apply Pos.compare_antisym).	0.0405490398407	2
Coq.NArith.BinNatX.N.min_l	40	27	search with cache (only 1: BinNat.N.solve_min).	0.863305091858	590
Coq.NArith.BinNatX.N.min_r	40	5	search with cache (only 1: BinNat.N.solve_min).	0.411852121353	59
Coq.NArith.BinNatX.N.max_l	40	9	search with cache (only 1: BinNat.N.solve_max).	0.26601099968	10
Coq.NArith.BinNatX.N.max_r	40	9	search with cache (only 1: BinNat.N.solve_max).	0.503008842468	61
Coq.NArith.BinNatX.N.lt_succ_r	40
Coq.NArith.BinNatX.N.double_spec	40		search with cache ().	0.00983190536499	0
Coq.NArith.BinNatX.N.succ_double_spec	40	0	search with cache (only 1: now destruct n).	0.0252940654755	1
Coq.NArith.BinNatX.N.double_add	40	0	search with cache (only 1: now destruct n, m).	0.025820016861	1
Coq.NArith.BinNatX.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0242428779602	1
Coq.NArith.BinNatX.N.double_mul	40	0	search with cache (only 1: now destruct n, m).	0.0237789154053	1
Coq.NArith.BinNatX.N.succ_double_mul	40	0.0.0.0	search with cache (only 1: destruct n; only 1: destruct m; only 1: destruct m; only 1: now rewrite Pos.add_comm).	0.153976917267	4
Coq.NArith.BinNatX.N.div2_double	40	0	search with cache (only 1: now destruct n).	0.0234260559082	1
Coq.NArith.BinNatX.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.111285924911	1
Coq.NArith.BinNatX.N.double_inj	40	0.1	search with cache (only 1: rewrite <- (BinNat.N.div2_double n), H; only 1: apply BinNat.N.div2_double).	0.13011097908	3
Coq.NArith.BinNatX.N.succ_double_inj	40	0.1	search with cache (only 1: rewrite <- (BinNat.N.div2_succ_double n), H; only 1: apply BinNat.N.div2_succ_double).	0.0428330898285	3
Coq.NArith.BinNatX.N.succ_double_lt	40
Coq.NArith.BinNatX.N.double_lt_mono	40	0	search with cache (only 1: destruct n as [| n], m as [| m]).	0.0315339565277	1
Coq.NArith.BinNatX.N.double_le_mono	40	2	search with cache (only 1: destruct n as [| n], m as [| m]).	0.0423209667206	3
Coq.NArith.BinNatX.N.succ_double_lt_mono	40	0	search with cache (only 1: destruct n as [| n], m as [| m]).	0.0316801071167	1
Coq.NArith.BinNatX.N.succ_double_le_mono	40
Coq.NArith.BinNatX.N.compare_0_r	40	0	search with cache (only 1: now destruct n).	0.0302259922028	1
Coq.NArith.BinNatX.N.pow_0_r	40		search with cache ().	0.0114929676056	0
Coq.NArith.BinNatX.N.pow_succ_r	40	0.0.1	search with cache (only 1: destruct n, p; only 1: f_equal; only 1: apply Pos.pow_succ_r).	0.0527789592743	4
Coq.NArith.BinNatX.N.pow_neg_r	40	0	search with cache (only 1: now destruct p).	0.0318231582642	1
Coq.NArith.BinNatX.N.square_spec	40	0.0.0	search with cache (only 1: destruct n; only 1: f_equal; only 1: apply Pos.square_spec).	0.047532081604	3
Coq.NArith.BinNatX.N.size_log2	40	0	search with cache (only 1: destruct n as [| [n| n| ]]).	0.0329480171204	1
Coq.NArith.BinNatX.N.size_gt	40
Coq.NArith.BinNatX.N.size_le	40
Coq.NArith.BinNatX.N.log2_spec	40	0.1.0.2.2.0	search with cache (only 1: destruct n as [| [p| p| ]]; only 1: apply (BinNat.N.size_le (pos p)); only 1: apply Pos.size_le; only 1: destruct n as [| [p| p| ]]; only 1: apply Pos.size_gt; only 1: apply Pos.size_gt).	0.705090045929	82
Coq.NArith.BinNatX.N.log2_nonpos	40	0.5	search with cache (only 1: le_elim H; only 1: destruct n as [| [p| p| ]]).	0.103838920593	7
Coq.NArith.BinNatX.N.even_spec	40
Coq.NArith.BinNatX.N.odd_spec	40
Coq.NArith.BinNatX.N.pos_div_eucl_spec	40
Coq.NArith.BinNatX.N.div_eucl_spec	40
Coq.NArith.BinNatX.N.div_mod'	40	0.0.2	search with cache (only 1: generalize (BinNat.N.div_eucl_spec a b); only 1: unfold BinNat.N.div, BinNat.N.modulo; only 1: now destruct div_eucl).	0.120410919189	5
Coq.NArith.BinNatX.N.div_mod	40	0.0.18	search with cache (only 1: generalize (BinNat.N.div_eucl_spec a b); only 1: unfold BinNat.N.div, BinNat.N.modulo; only 1: now destruct div_eucl).	1.1248049736	601
Coq.NArith.BinNatX.N.pos_div_eucl_remainder	40
Coq.NArith.BinNatX.N.mod_lt	40
Coq.NArith.BinNatX.N.mod_bound_pos	40	0.2.1.0.9.0.0	search with cache (only 1: destruct b as [| b]; only 1: destruct a as [| a]; only 1: apply le_0_l; only 1: destruct b as [| b]; only 1: unfold modulo; only 1: destruct a as [| a]; only 1: apply pos_div_eucl_remainder).	12.5461261272	2230
Coq.NArith.BinNatX.N.sqrtrem_sqrt	40
Coq.NArith.BinNatX.N.sqrtrem_spec	40
Coq.NArith.BinNatX.N.sqrt_spec	40
Coq.NArith.BinNatX.N.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0247781276703	1
Coq.NArith.BinNatX.N.ggcd_gcd	40	0.0.0	search with cache (only 1: destruct a as [| p], b as [| q]; only 1: pose proof (Pos.ggcd_gcd p q) as H; only 1: destruct Pos.ggcd as (g, (aa, bb))).	0.102021932602	3
Coq.NArith.BinNatX.N.ggcd_correct_divisors	40	0.0.0.0.1	search with cache (only 1: destruct a as [| p], b as [| q]; only 1: now rewrite Pos.mul_1_r; only 1: now rewrite Pos.mul_1_r; only 1: generalize (Pos.ggcd_correct_divisors p q); only 1: destruct Pos.ggcd as (g, (aa, bb))).	0.121453046799	15
Coq.NArith.BinNatX.N.gcd_divide_l	40	1.0.0.0.0	search with cache (only 1: rewrite <- BinNat.N.ggcd_gcd; only 1: generalize (BinNat.N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: exists aa; only 1: now rewrite BinNat.N.mul_comm).	0.0850470066071	6
Coq.NArith.BinNatX.N.gcd_divide_r	40	3.3.0.1.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: exists bb; only 1: now rewrite BinNat.N.mul_comm).	3.30204319954	440
Coq.NArith.BinNatX.N.gcd_greatest	40
Coq.NArith.BinNatX.N.gcd_nonneg	40	4	search with cache (only 1: apply BinNat.N.le_0_l).	0.0302469730377	5
Coq.NArith.BinNatX.N.testbit_even_0	40	8	search with cache (only 1: now destruct a).	0.0311238765717	9
Coq.NArith.BinNatX.N.testbit_odd_0	40
Coq.NArith.BinNatX.N.testbit_succ_r_div2	40	0.0.0.0.1	search with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: f_equal; only 1: apply Pos.pred_N_succ; only 1: f_equal; only 1: apply Pos.pred_N_succ).	0.195559024811	6
Coq.NArith.BinNatX.N.testbit_odd_succ	40	0.0.0	search with cache (only 1: rewrite BinNat.N.testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.163113832474	3
Coq.NArith.BinNatX.N.testbit_even_succ	40	0.0.0	search with cache (only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.165174007416	3
Coq.NArith.BinNatX.N.testbit_neg_r	40	39	search with cache (only 1: false_hyp ltac:(H) nlt_0_r).	2.46203804016	775
Coq.NArith.BinNatX.N.shiftr_succ_r	40	0.0	search with cache (only 1: destruct n; only 1: apply Pos.iter_succ).	0.0410778522491	2
Coq.NArith.BinNatX.N.shiftl_succ_r	40	0.0.0	search with cache (only 1: destruct n, a; only 1: f_equal; only 1: apply Pos.iter_succ).	0.0588948726654	3
Coq.NArith.BinNatX.N.shiftr_spec	40
Coq.NArith.BinNatX.N.shiftl_spec_high	40
Coq.NArith.BinNatX.N.shiftl_spec_low	40
Coq.NArith.BinNatX.N.div2_spec	40		search with cache ().	0.00993990898132	0
Coq.NArith.BinNatX.N.pos_lxor_spec	40
Coq.NArith.BinNatX.N.lxor_spec	40	1.1.1.0	search with cache (only 1: destruct a, a'; only 1: now destruct Pos.testbit; only 1: now destruct Pos.testbit; only 1: apply BinNat.N.pos_lxor_spec).	0.0946629047394	7
Coq.NArith.BinNatX.N.pos_lor_spec	40
Coq.NArith.BinNatX.N.lor_spec	40	1.0.0	search with cache (only 1: destruct a, a'; only 1: now rewrite orb_false_r; only 1: apply BinNat.N.pos_lor_spec).	0.0935230255127	4
Coq.NArith.BinNatX.N.pos_land_spec	40
Coq.NArith.BinNatX.N.land_spec	40	0.1.0	search with cache (only 1: destruct a, a'; only 1: now rewrite andb_false_r; only 1: apply BinNat.N.pos_land_spec).	0.143209934235	4
Coq.NArith.BinNatX.N.pos_ldiff_spec	40
Coq.NArith.BinNatX.N.ldiff_spec	40	1.0.0	search with cache (only 1: destruct a, a'; only 1: now rewrite andb_true_r; only 1: apply BinNat.N.pos_ldiff_spec).	0.0651850700378	4
Coq.NArith.BinNatX.N.gt_lt_iff	40
Coq.NArith.BinNatX.N.gt_lt	40	3.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite BinNat.N.compare_antisym, CompOpp_iff).	12.9833519459	280
Coq.NArith.BinNatX.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.135673999786	1
Coq.NArith.BinNatX.N.ge_le_iff	40
Coq.NArith.BinNatX.N.ge_le	40
Coq.NArith.BinNatX.N.le_ge	40	1	search with cache (only 1: apply ge_le_iff).	0.223698139191	20
Coq.NArith.BinNatX.N.pos_pred_shiftl_low	40
Coq.NArith.BinNatX.N.pos_pred_shiftl_high	40
Coq.NArith.BinNatX.N.pred_div2_up	40	0.2.0.0.0	search with cache (only 1: destruct p as [p| p| ]; only 1: destruct p; only 1: f_equal; only 1: induction p; only 1: now destruct p).	0.128444910049	7
Coq.NArith.BinNatX.N.iter_swap_gen	40	0.157	search with cache (only 1: destruct n; only 1: now apply Pos.iter_swap_gen).	13.6498560905	12865
Coq.NArith.BinNatX.N.iter_swap	40	1.0.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply BinNat.N.iter_swap_gen).	0.175711870193	12
Coq.NArith.BinNatX.N.iter_succ	40
Coq.NArith.BinNatX.N.iter_succ_r	40	0	search with cache (only 1: now rewrite BinNat.N.iter_succ, BinNat.N.iter_swap).	0.0487911701202	1
Coq.NArith.BinNatX.N.iter_add	40
Coq.NArith.BinNatX.N.iter_ind	40
Coq.NArith.BinNatX.N.iter_invariant	40	0	search with cache (only 1: apply BinNat.N.iter_ind with (P := fun _ => Inv)).	0.0305519104004	1
Coq.NArith.NArithX.test	40	9	search with cache (only 1: intuition N.Private_Tac.order).	0.0421299934387	10
Coq.NArith.NdigitsX.Ptestbit_Pbit	40
Coq.NArith.NdigitsX.Ntestbit_Nbit	40
Coq.NArith.NdigitsX.Pbit_Ptestbit	40	0	search with cache (only 1: now rewrite <- Ndigits.Ptestbit_Pbit, N2Nat.id).	0.0196170806885	1
Coq.NArith.NdigitsX.Nbit_Ntestbit	40	0.0.0.1.1.10.13	search with cache (only 1: rewrite <- !Ndigits.Ntestbit_Nbit; only 1: f_equal; only 1: destruct n; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: f_equal; only 1: apply Pos2Nat.inj).	6.45822691917	2374
Coq.NArith.NdigitsX.Nshiftr_nat_S	40		search with cache ().	0.00876903533936	0
Coq.NArith.NdigitsX.Nshiftl_nat_S	40		search with cache ().	0.00855302810669	0
Coq.NArith.NdigitsX.Nshiftr_nat_equiv	40	1.0.6.1.0.6.49.1	search with cache (only 1: N.bitwise; only 1: destruct a as [| a], n; only 1: f_equal; only 1: symmetry; only 1: apply Pos2Nat.inj_iter; only 1: f_equal; only 1: symmetry; only 1: apply Pos2Nat.inj_iter).	30.6642069817	29109
Coq.NArith.NdigitsX.Nshiftr_equiv_nat	40	0	search with cache (only 1: now rewrite <- Ndigits.Nshiftr_nat_equiv, Nat2N.id).	0.0205681324005	1
Coq.NArith.NdigitsX.Nshiftl_nat_equiv	40
Coq.NArith.NdigitsX.Nshiftl_equiv_nat	40	0	search with cache (only 1: now rewrite <- Ndigits.Nshiftl_nat_equiv, Nat2N.id).	0.0215711593628	1
Coq.NArith.NdigitsX.Nshiftr_nat_spec	40
Coq.NArith.NdigitsX.Nshiftl_nat_spec_high	40
Coq.NArith.NdigitsX.Nshiftl_nat_spec_low	40
Coq.NArith.NdigitsX.Pshiftl_nat_0	40		search with cache ().	0.00943803787231	0
Coq.NArith.NdigitsX.Pshiftl_nat_S	40		search with cache ().	0.00980186462402	0
Coq.NArith.NdigitsX.Pshiftl_nat_N	40
Coq.NArith.NdigitsX.Pshiftl_nat_plus	40	4.4.9	search with cache (only 1: nzinduct n; only 1: induction m; only 1: induction m).	0.967845916748	248
Coq.NArith.NdigitsX.Pxor_semantics	40	0.0	search with cache (only 1: rewrite <- Ndigits.Ntestbit_Nbit, <- !Ndigits.Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	0.0977299213409	2
Coq.NArith.NdigitsX.Nxor_semantics	40	0.0	search with cache (only 1: rewrite <- !Ndigits.Ntestbit_Nbit; only 1: apply N.lxor_spec).	0.0939571857452	2
Coq.NArith.NdigitsX.Por_semantics	40	0.0	search with cache (only 1: rewrite <- !Ndigits.Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	0.0969288349152	2
Coq.NArith.NdigitsX.Nor_semantics	40	0.0	search with cache (only 1: rewrite <- !Ndigits.Ntestbit_Nbit; only 1: apply N.lor_spec).	0.0507919788361	2
Coq.NArith.NdigitsX.Pand_semantics	40	0.0	search with cache (only 1: rewrite <- Ndigits.Ntestbit_Nbit, <- !Ndigits.Ptestbit_Pbit; only 1: apply N.pos_land_spec).	0.0347628593445	2
Coq.NArith.NdigitsX.Nand_semantics	40	0.0	search with cache (only 1: rewrite <- !Ndigits.Ntestbit_Nbit; only 1: apply N.land_spec).	0.0355448722839	2
Coq.NArith.NdigitsX.Pdiff_semantics	40	0.0	search with cache (only 1: rewrite <- Ndigits.Ntestbit_Nbit, <- !Ndigits.Ptestbit_Pbit; only 1: apply N.pos_ldiff_spec).	0.0370759963989	2
Coq.NArith.NdigitsX.Ndiff_semantics	40	0.0	search with cache (only 1: rewrite <- !Ndigits.Ntestbit_Nbit; only 1: apply N.ldiff_spec).	0.0339050292969	2
Coq.NArith.NdigitsX.Pbit_faithful_0	40
Coq.NArith.NdigitsX.Pbit_faithful	40
Coq.NArith.NdigitsX.Nbit_faithful	40
Coq.NArith.NdigitsX.Nbit_faithful_iff	40	2	search with cache (only 1: apply Ndigits.Nbit_faithful).	0.0230710506439	3
Coq.NArith.NdigitsX.Nbit0_correct	40	1.0	search with cache (only 1: destruct n; only 1: destruct p).	0.0384361743927	3
Coq.NArith.NdigitsX.Ndouble_bit0	40	1	search with cache (only 1: destruct n).	0.0211689472198	2
Coq.NArith.NdigitsX.Ndouble_plus_one_bit0	40	1	search with cache (only 1: destruct n).	0.0223848819733	2
Coq.NArith.NdigitsX.Ndiv2_double	40	18.1	search with cache (only 1: destruct n as [| p]; only 1: destruct p).	0.710905790329	388
Coq.NArith.NdigitsX.Ndiv2_double_plus_one	40	3.1.21.0.27	search with cache (only 1: apply Nbit_faithful; only 1: destruct n as [| p]; only 1: intros EQ; only 1: rewrite <- Ndigits.Ntestbit_Nbit, <- !Ndigits.Ptestbit_Pbit; only 1: induction p as [p IH| p IH| ]).	5.73536014557	3287
Coq.NArith.NdigitsX.Ndiv2_correct	40	14.4	search with cache (only 1: destruct a; only 1: destruct p).	34.4135429859	2704
Coq.NArith.NdigitsX.Nxor_bit0	40	0.0	search with cache (only 1: rewrite <- Ndigits.Nbit0_correct, (Ndigits.Nxor_semantics a a' 0); only 1: rewrite Ndigits.Nbit0_correct, Ndigits.Nbit0_correct).	0.0731868743896	2
Coq.NArith.NdigitsX.Nxor_div2	40	0.0.2.0	search with cache (only 1: apply Ndigits.Nbit_faithful; only 1: intro; only 1: rewrite (Ndigits.Nxor_semantics (N.div2 a) (N.div2 a') n), Ndigits.Ndiv2_correct, (Ndigits.Nxor_semantics a a' (S n)); only 1: rewrite 2!Ndigits.Ndiv2_correct).	0.0976150035858	6
Coq.NArith.NdigitsX.Nneg_bit0	40	0	search with cache (only 1: rewrite <- xorb_true_l, <- H, Ndigits.Nxor_bit0, xorb_assoc_reverse, xorb_nilpotent, xorb_false_r).	0.0242259502411	1
Coq.NArith.NdigitsX.Nneg_bit0_1	40	0.0	search with cache (only 1: apply Ndigits.Nneg_bit0; only 1: rewrite H).	0.0379540920258	2
Coq.NArith.NdigitsX.Nneg_bit0_2	40	0.0	search with cache (only 1: apply Ndigits.Nneg_bit0; only 1: rewrite H).	0.0429911613464	2
Coq.NArith.NdigitsX.Nsame_bit0	40	0.1.4	search with cache (only 1: rewrite <- (xorb_false_r (N.odd a)); only 1: assert (H0 : N.odd (N.pos p~0) = false) by reflexivity; only 1: rewrite <- H0, <- H, Ndigits.Nxor_bit0, <- xorb_assoc_reverse, xorb_nilpotent, xorb_false_l).	0.055449962616	8
Coq.NArith.NdigitsX.Nbit0_less	40
Coq.NArith.NdigitsX.Nbit0_gt	40	0.1.0.0.2.0.0.0.0.3	search with cache (only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: rewrite H, H0; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: rewrite H, H0; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2).	6.09633302689	594
Coq.NArith.NdigitsX.Nless_not_refl	40	5.0	search with cache (only 1: unfold Nless; only 1: rewrite (N.lxor_nilpotent a)).	0.0380289554596	7
Coq.NArith.NdigitsX.Nless_def_1	40
Coq.NArith.NdigitsX.Nless_def_2	40	0.0.4	search with cache (only 1: destruct a, a'; only 1: unfold Nless; only 1: destruct (Pos.lxor p p0)).	0.143647909164	16
Coq.NArith.NdigitsX.Nless_def_3	40	0.0.1	search with cache (only 1: apply Ndigits.Nbit0_less; only 1: apply Ndigits.Ndouble_bit0; only 1: apply Ndigits.Ndouble_plus_one_bit0).	0.153306007385	4
Coq.NArith.NdigitsX.Nless_def_4	40	0.0.1	search with cache (only 1: apply Ndigits.Nbit0_gt; only 1: apply Ndigits.Ndouble_plus_one_bit0; only 1: apply Ndigits.Ndouble_bit0).	0.0535941123962	4
Coq.NArith.NdigitsX.Nless_z	40	8.7	search with cache (only 1: destruct a; only 1: induction p).	1.00833702087	441
Coq.NArith.NdigitsX.N0_less_1	40	2	search with cache (only 1: destruct a).	0.0324230194092	3
Coq.NArith.NdigitsX.N0_less_2	40	5.10.1	search with cache (only 1: induction a; only 1: exfalso; only 1: induction p as [| p IHp| ]).	0.611171960831	331
Coq.NArith.NdigitsX.Nless_trans	40
Coq.NArith.NdigitsX.Nless_total	40
Coq.NArith.NdigitsX.Bv2N_N2Bv	40
Coq.NArith.NdigitsX.Bv2N_Nsize	40
Coq.NArith.NdigitsX.Bv2N_Nsize_1	40
Coq.NArith.NdigitsX.Bv2N_upper_bound	40	2.0.0.0	search with cache (only 1: induction bv; only 1: destruct h; only 1: apply N.succ_double_lt; only 1: apply N.double_lt_mono).	0.0656960010529	6
Coq.NArith.NdigitsX.ByteV2N_upper_bound	40	0	search with cache (only 1: apply Ndigits.Bv2N_upper_bound).	0.0197432041168	1
Coq.NArith.NdigitsX.N2Bv_N2Bv_gen	40
Coq.NArith.NdigitsX.N2Bv_N2Bv_gen_above	40	0.0.4.1.0	search with cache (only 1: destruct a; only 1: destruct k; only 1: induction p; only 1: unfold Bcons; only 1: unfold Bcons).	0.104108095169	10
Coq.NArith.NdigitsX.N2Bv_Bv2N	40
Coq.NArith.NdigitsX.Nbit0_Blow	40
Coq.NArith.NdigitsX.Bnth_Nbit	40
Coq.NArith.NdigitsX.Nbit_Nsize	40
Coq.NArith.NdigitsX.Nbit_Bth	40
Coq.NArith.NdigitsX.Nxor_BVxor	40
Coq.NArith.NdigitsX.Nand_BVand	40
Coq.NArith.NdigitsX.N2Bv_sized_Nsize	40	0.0.2.1	search with cache (only 1: destruct n; only 1: induction p; only 1: rewrite IHp; only 1: rewrite IHp).	0.0642268657684	7
Coq.NArith.NdigitsX.N2Bv_sized_Bv2N	40
Coq.NArith.NdigitsX.N2Bv_N2Bv_sized_above	40	4.0	search with cache (only 1: destruct a; only 1: induction p).	0.046972990036	6
Coq.NArith.NdecX.Peqb_complete	40
Coq.NArith.NdecX.Peqb_Pcompare	40	0.1	search with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.0358121395111	3
Coq.NArith.NdecX.Pcompare_Peqb	40
Coq.NArith.NdecX.Neqb_Ncompare	40
Coq.NArith.NdecX.Ncompare_Neqb	40
Coq.NArith.NdecX.Neqb_complete	40
Coq.NArith.NdecX.Nxor_eq_true	40
Coq.NArith.NdecX.Nxor_eq_false	40
Coq.NArith.NdecX.Nodd_not_double	40
Coq.NArith.NdecX.Nnot_div2_not_double	40
Coq.NArith.NdecX.Neven_not_double_plus_one	40
Coq.NArith.NdecX.Nnot_div2_not_double_plus_one	40
Coq.NArith.NdecX.Nbit0_neq	40	9	search with cache (only 1: eqb2eq).	0.220759868622	19
Coq.NArith.NdecX.Ndiv2_eq	40	0	search with cache (only 1: eqb2eq).	0.0248019695282	1
Coq.NArith.NdecX.Ndiv2_neq	40	0	search with cache (only 1: eqb2eq).	0.079106092453	1
Coq.NArith.NdecX.Ndiv2_bit_eq	40
Coq.NArith.NdecX.Ndiv2_bit_neq	40
Coq.NArith.NdecX.Nneq_elim	40
Coq.NArith.NdecX.Ndouble_or_double_plus_un	40
Coq.NArith.NdecX.Nleb_alt	40
Coq.NArith.NdecX.Nleb_Nle	40
Coq.NArith.NdecX.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0214841365814	1
Coq.NArith.NdecX.Nleb_antisym	40
Coq.NArith.NdecX.Nleb_trans	40
Coq.NArith.NdecX.Nleb_ltb_trans	40
Coq.NArith.NdecX.Nltb_leb_trans	40
Coq.NArith.NdecX.Nltb_trans	40
Coq.NArith.NdecX.Nltb_leb_weak	40
Coq.NArith.NdecX.Nleb_double_mono	40
Coq.NArith.NdecX.Nleb_double_plus_one_mono	40
Coq.NArith.NdecX.Nleb_double_mono_conv	40
Coq.NArith.NdecX.Nleb_double_plus_one_mono_conv	40
Coq.NArith.NdecX.Nltb_double_mono	40
Coq.NArith.NdecX.Nltb_double_plus_one_mono	40
Coq.NArith.NdecX.Nltb_double_mono_conv	40
Coq.NArith.NdecX.Nltb_double_plus_one_mono_conv	40
Coq.NArith.NdecX.Nltb_Ncompare	40
Coq.NArith.NdecX.Ncompare_Gt_Nltb	40
Coq.NArith.NdecX.Ncompare_Lt_Nltb	40
Coq.NArith.NdecX.Nmin_le_1	40	3.3	search with cache (only 1: unfold Nleb; only 1: apply leb_correct).	0.0680630207062	17
Coq.NArith.NdecX.Nmin_le_2	40	3.4	search with cache (only 1: unfold Nleb; only 1: apply leb_correct).	0.130980014801	26
Coq.NArith.NdecX.Nmin_le_3	40
Coq.NArith.NdecX.Nmin_le_4	40
Coq.NArith.NdecX.Nmin_le_5	40
Coq.NArith.NdecX.Nmin_lt_3	40
Coq.NArith.NdecX.Nmin_lt_4	40
Coq.NArith.NdistX.Nplength_infty	40	25.27	search with cache (only 1: N.bitwise; only 1: now destruct a).	2.23260807991	3052
Coq.NArith.NdistX.Nplength_zeros	40
Coq.NArith.NdistX.Nplength_one	40
Coq.NArith.NdistX.Nplength_first_one	40
Coq.NArith.NdistX.ni_min_idemp	40	16.14	search with cache (only 1: destruct d; only 1: induction n).	1.00533699989	810
Coq.NArith.NdistX.ni_min_comm	40
Coq.NArith.NdistX.ni_min_assoc	40
Coq.NArith.NdistX.ni_min_O_l	40
Coq.NArith.NdistX.ni_min_O_r	40	10.19	search with cache (only 1: destruct d; only 1: elim n).	0.886656045914	506
Coq.NArith.NdistX.ni_min_inf_l	40		search with cache ().	0.0108540058136	0
Coq.NArith.NdistX.ni_min_inf_r	40
Coq.NArith.NdistX.ni_le_refl	40	23.19.195	search with cache (only 1: red; only 1: destruct d; only 1: induction n).	9.72238516808	31190
Coq.NArith.NdistX.ni_le_antisym	40	0.0	search with cache (only 1: inversion H0; only 1: rewrite ni_min_comm).	0.0330009460449	2
Coq.NArith.NdistX.ni_le_trans	40
Coq.NArith.NdistX.ni_le_min_1	40
Coq.NArith.NdistX.ni_le_min_2	40	3.0.10	search with cache (only 1: unfold ni_le; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp).	0.853754997253	454
Coq.NArith.NdistX.ni_min_case	40
Coq.NArith.NdistX.ni_le_total	40
Coq.NArith.NdistX.ni_le_min_induc	40
Coq.NArith.NdistX.le_ni_le	40
Coq.NArith.NdistX.ni_le_le	40
Coq.NArith.NdistX.Nplength_lb	40
Coq.NArith.NdistX.Nplength_ub	40
Coq.NArith.NdistX.Npdist_eq_1	40
Coq.NArith.NdistX.Npdist_eq_2	40
Coq.NArith.NdistX.Npdist_comm	40
Coq.NArith.NdistX.Nplength_ultra_1	40
Coq.NArith.NdistX.Nplength_ultra	40
Coq.NArith.NdistX.Npdist_ultra	40
Coq.NArith.NnatX.N2Nat.id	40	0.0.0.1.0	search with cache (only 1: destruct a as [| p]; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: f_equal; only 1: apply Pos2Nat.inj).	0.177531003952	6
Coq.NArith.NnatX.N2Nat.inj	40	3	search with cache (only 1: rewrite <- (Nnat.N2Nat.id a), <- (Nnat.N2Nat.id a')).	0.0283260345459	4
Coq.NArith.NnatX.N2Nat.inj_iff	40	3	search with cache (only 1: rewrite <- (id a), <- (id a')).	0.11997795105	4
Coq.NArith.NnatX.N2Nat.inj_double	40	0	search with cache (only 1: destruct a).	0.157019138336	1
Coq.NArith.NnatX.N2Nat.inj_succ_double	40	0	search with cache (only 1: destruct a).	0.158921003342	1
Coq.NArith.NnatX.N2Nat.inj_succ	40		search with cache ().	0.0249230861664	0
Coq.NArith.NnatX.N2Nat.inj_add	40		search with cache ().	0.103774785995	0
Coq.NArith.NnatX.N2Nat.inj_mul	40		search with cache ().	0.0261220932007	0
Coq.NArith.NnatX.N2Nat.inj_sub	40		search with cache ().	0.0265438556671	0
Coq.NArith.NnatX.N2Nat.inj_pred	40		search with cache ().	0.0281181335449	0
Coq.NArith.NnatX.N2Nat.inj_div2	40
Coq.NArith.NnatX.N2Nat.inj_compare	40	0.0.0.0	search with cache (only 1: destruct a, a'; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: apply Pos2Nat.inj_compare).	0.0675868988037	4
Coq.NArith.NnatX.N2Nat.inj_max	40		search with cache ().	0.0286841392517	0
Coq.NArith.NnatX.N2Nat.inj_min	40		search with cache ().	0.0303189754486	0
Coq.NArith.NnatX.N2Nat.inj_iter	40	4.8	search with cache (only 1: destruct a; only 1: apply Pos2Nat.inj_iter).	0.659415960312	267
Coq.NArith.NnatX.Nat2N.id	40		search with cache ().	0.0305788516998	0
Coq.NArith.NnatX.Nat2N.inj	40		search with cache ().	0.0428240299225	0
Coq.NArith.NnatX.Nat2N.inj_iff	40		search with cache ().	0.0434610843658	0
Coq.NArith.NnatX.Nat2N.inj_double	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.10879611969	1
Coq.NArith.NnatX.Nat2N.inj_succ_double	40	0.2.55	search with cache (only 1: destruct n; only 1: f_equal; only 1: apply Pos2Nat.inj).	5.97795701027	2533
Coq.NArith.NnatX.Nat2N.inj_succ	40	2	search with cache (only 1: now destruct n).	0.0376431941986	3
Coq.NArith.NnatX.Nat2N.inj_pred	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0324859619141	1
Coq.NArith.NnatX.Nat2N.inj_add	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0356512069702	1
Coq.NArith.NnatX.Nat2N.inj_sub	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0356969833374	1
Coq.NArith.NnatX.Nat2N.inj_mul	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0707921981812	1
Coq.NArith.NnatX.Nat2N.inj_div2	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0320420265198	1
Coq.NArith.NnatX.Nat2N.inj_compare	40	0	search with cache (only 1: now rewrite Nnat.N2Nat.inj_compare, !Nnat.Nat2N.id).	0.0215408802032	1
Coq.NArith.NnatX.Nat2N.inj_min	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0527219772339	1
Coq.NArith.NnatX.Nat2N.inj_max	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0346078872681	1
Coq.NArith.NnatX.Nat2N.inj_iter	40	0	search with cache (only 1: now rewrite Nnat.N2Nat.inj_iter, !Nnat.Nat2N.id).	0.0238790512085	1
Coq.NArith.Ndiv_defX.Pdiv_eucl_remainder	40	0	search with cache (only 1: now apply (N.pos_div_eucl_remainder a (N.pos b))).	0.0913200378418	1
Coq.Strings.ByteX.byte_dec_lb	40	171	search with cache (only 1: easy || now destruct y).	37.8747279644	38343
Coq.Strings.ByteX.byte_dec_bl	40
Coq.Strings.ByteX.eqb_false	40	7.2	search with cache (only 1: cbv[eqb] in H; only 1: destruct y).	2.07939100266	77
Coq.Strings.ByteX.of_to_nat	40	37	search with cache (only 1: destruct x).	3.95207905769	696
Coq.Strings.ByteX.to_of_nat	40	4	search with cache (only 1: do 256 try destruct x as [| x]).	37.2930757999	5
Coq.Strings.ByteX.to_of_nat_iff	40
Coq.Strings.ByteX.to_of_nat_option_map	40
Coq.Strings.ByteX.to_nat_bounded	40
Coq.Strings.ByteX.of_nat_None_iff	40
Coq.Strings.ByteX.of_to_N	40	2	search with cache (only 1: destruct x).	0.205579996109	3
Coq.Strings.ByteX.to_of_N	40
Coq.Strings.ByteX.to_of_N_iff	40
Coq.Strings.ByteX.to_of_N_option_map	40	0.11	search with cache (only 1: do 256 try destruct x as [| x]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x end).	1.72376990318	132
Coq.Strings.ByteX.to_N_bounded	40	5.0	search with cache (only 1: generalize (Byte.to_of_N_option_map (Byte.to_N x)); only 1: destruct x).	1.7384428978	7
Coq.Strings.ByteX.of_N_None_iff	40
Coq.Strings.ByteX.to_N_via_nat	40	5	search with cache (only 1: destruct x).	1.96404695511	30
Coq.Strings.ByteX.to_nat_via_N	40
Coq.Strings.ByteX.of_N_via_nat	40
Coq.Strings.ByteX.of_nat_via_N	40
Coq.Strings.BinaryStringX.Raw.to_N_of_pos	40		search with cache ().	0.0172510147095	0
Coq.Strings.BinaryStringX.to_N_of_N	40
Coq.Strings.BinaryStringX.Z_of_of_Z	40
Coq.Strings.BinaryStringX.to_nat_of_nat	40
Coq.Strings.BinaryStringX.to_pos_of_pos	40
Coq.Strings.OctalStringX.Raw.to_N_of_pos	40		search with cache ().	0.0108160972595	0
Coq.Strings.OctalStringX.to_N_of_N	40
Coq.Strings.OctalStringX.to_Z_of_Z	40
Coq.Strings.OctalStringX.to_nat_of_nat	40
Coq.Strings.OctalStringX.to_pos_of_pos	40
Coq.Strings.HexStringX.Raw.to_N_of_pos	40		search with cache ().	0.0117020606995	0
Coq.Strings.HexStringX.to_N_of_N	40
Coq.Strings.HexStringX.to_Z_of_Z	40
Coq.Strings.HexStringX.to_nat_of_nat	40
Coq.Strings.HexStringX.to_pos_of_pos	40
Coq.Strings.AsciiX.ascii_dec	40
Coq.Strings.AsciiX.eqb_spec	40
Coq.Strings.AsciiX.eqb_refl	40	1.7	search with cache (only 1: destruct x; only 1: destr_bool).	0.272440910339	10
Coq.Strings.AsciiX.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0287089347839	1
Coq.Strings.AsciiX.eqb_eq	40
Coq.Strings.AsciiX.eqb_neq	40	0.0.134.10	search with cache (only 1: absurd (false = true); only 1: destruct H as [x [Hxm Hfx]]; only 1: t_eqb; only 1: t_eqb).	39.9404239655	30015
Coq.Strings.AsciiX.eqb_compat	40		search with cache ().	0.013179063797	0
Coq.Strings.AsciiX.ascii_N_embedding	40
Coq.Strings.AsciiX.N_ascii_embedding	40
Coq.Strings.AsciiX.N_ascii_bounded	40	6	search with cache (only 1: destruct a as [[| ] [| ] [| ] [| ] [| ] [| ] [| ] [| ]]).	0.49511885643	11
Coq.Strings.AsciiX.ascii_nat_embedding	40	1	search with cache (only 1: destruct a as [[| ] [| ] [| ] [| ] [| ] [| ] [| ] [| ]]).	0.371403932571	11
Coq.Strings.AsciiX.nat_ascii_embedding	40
Coq.Strings.AsciiX.nat_ascii_bounded	40
Coq.Strings.AsciiX.ascii_of_byte_of_ascii	40	0.3.6	search with cache (only 1: apply Pos.eqb_eq; only 1: destruct x; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x end).	0.6442091465	49
Coq.Strings.AsciiX.byte_of_ascii_of_byte	40	92	search with cache (only 1: destruct x).	4.86922502518	4761
Coq.Strings.AsciiX.ascii_of_byte_via_N	40	0	search with cache (only 1: destruct x).	0.209621191025	1
Coq.Strings.AsciiX.ascii_of_byte_via_nat	40
Coq.Strings.AsciiX.byte_of_ascii_via_N	40
Coq.Strings.AsciiX.byte_of_ascii_via_nat	40	0.0	search with cache (only 1: rewrite <- (ascii_of_byte_of_ascii x); only 1: destruct (byte_of_ascii x)).	2.95862007141	2
Coq.Strings.StringX.string_dec	40
Coq.Strings.StringX.eqb_spec	40
Coq.Strings.StringX.eqb_refl	40
Coq.Strings.StringX.eqb_sym	40	0.25	search with cache (only 1: apply Nat.eqb_eq; only 1: t_eqb).	0.357164859772	333
Coq.Strings.StringX.eqb_eq	40
Coq.Strings.StringX.eqb_neq	40
Coq.Strings.StringX.eqb_compat	40		search with cache ().	0.0111720561981	0
Coq.Strings.StringX.get_correct	40
Coq.Strings.StringX.append_correct1	40
Coq.Strings.StringX.append_correct2	40
Coq.Strings.StringX.substring_correct1	40
Coq.Strings.StringX.substring_correct2	40
Coq.Strings.StringX.prefix_correct	40
Coq.Strings.StringX.index_correct1	40
Coq.Strings.StringX.index_correct2	40
Coq.Strings.StringX.index_correct3	40
Coq.Strings.StringX.index_correct4	40
Coq.Strings.StringX.string_of_list_ascii_of_string	40
Coq.Strings.StringX.list_ascii_of_string_of_list_ascii	40
Coq.Strings.StringX.string_of_list_byte_of_string	40	0.13.0.1.27	search with cache (only 1: elim s; only 1: cbn; only 1: erewrite List.map_map, List.map_ext, List.map_id, String.string_of_list_ascii_of_string; only 1: destruct a as [[| ] [| ] [| ] [| ] [| ] [| ] [| ] [| ]]; only 1: apply ascii_of_byte_of_ascii).	37.7496459484	4803
Coq.Strings.StringX.list_byte_of_string_of_list_byte	40	0.8.1.2	search with cache (only 1: induction s as [| ? ? IHs]; only 1: cbn; only 1: f_equal; only 1: apply byte_of_ascii_of_byte).	0.452131986618	155
Coq.nsatz.NsatzTacticX.psos_r1b	40
Coq.nsatz.NsatzTacticX.psos_r1	40	2.0.2.0.0	search with cache (only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: cring; only 1: setoid_rewrite H; only 1: cring).	0.486633062363	9
Coq.nsatz.NsatzTacticX.nsatzR_diff	40
Coq.nsatz.NsatzTacticX.P0Z_correct	40		search with cache ().	0.0194499492645	0
Coq.nsatz.NsatzTacticX.Rext	40
Coq.nsatz.NsatzTacticX.Rset	40	7	search with cache (only 1: apply ring_setoid).	0.125236988068	8
Coq.nsatz.NsatzTacticX.Rtheory	40
Coq.nsatz.NsatzTacticX.PolZadd_correct	40
Coq.nsatz.NsatzTacticX.PolZmul_correct	40
Coq.nsatz.NsatzTacticX.R_power_theory	40
Coq.nsatz.NsatzTacticX.norm_correct	40
Coq.nsatz.NsatzTacticX.PolZeq_correct	40
Coq.nsatz.NsatzTacticX.mult_l_correct	40
Coq.nsatz.NsatzTacticX.compute_list_correct	40
Coq.nsatz.NsatzTacticX.check_correct	40
Coq.nsatz.NsatzX.Rsth	40	2	search with cache (only 1: constructor).	0.168205022812	3
Coq.nsatz.NsatzX.Rri	40
Coq.nsatz.NsatzX.R_one_zero	40	47.15	search with cache (only 1: pose proof Rlt_sqrt3_0 as H1; only 1: Lra.lra).	10.0449340343	4968
Coq.nsatz.NsatzX.Rcri	40
Coq.nsatz.NsatzX.Rdi	40
Coq.nsatz.NsatzX.Qri	40
Coq.nsatz.NsatzX.Q_one_zero	40		search with cache ().	0.0288438796997	0
Coq.nsatz.NsatzX.Qcri	40	8.7.0.23	search with cache (only 1: unfold Qminus; only 1: red; only 1: apply Q_Setoid; only 1: apply Qsrt).	6.87713909149	1764
Coq.nsatz.NsatzX.Qdi	40
Coq.nsatz.NsatzX.Z_one_zero	40		search with cache ().	0.0261759757996	0
Coq.nsatz.NsatzX.Zcri	40	43.11.0.2	search with cache (only 1: unfold Z.sub; only 1: red; only 1: apply Ncring_initial.Zsth; only 1: intuition).	35.5585701466	18163
Coq.nsatz.NsatzX.Zdi	40
Coq.Reals.Ranalysis4X.derivable_pt_inv	40
Coq.Reals.Ranalysis4X.pr_nu_var	40	2.18	search with cache (only 1: pose proof (proj2_sig pr2) as H4; only 1: apply derive_pt_eq_0).	1.91168403625	564
Coq.Reals.Ranalysis4X.pr_nu_var2	40
Coq.Reals.Ranalysis4X.derivable_inv	40
Coq.Reals.Ranalysis4X.derive_pt_inv	40
Coq.Reals.Ranalysis4X.Rabs_derive_1	40
Coq.Reals.Ranalysis4X.Rabs_derive_2	40
Coq.Reals.Ranalysis4X.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4X.Rcontinuity_abs	40
Coq.Reals.Ranalysis4X.continuity_finite_sum	40
Coq.Reals.Ranalysis4X.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4X.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4X.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4X.derivable_finite_sum	40	3.1.10	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H).	2.5733230114	387
Coq.Reals.Ranalysis4X.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4X.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4X.derivable_pt_exp	40
Coq.Reals.Ranalysis4X.derivable_pt_cosh	40
Coq.Reals.Ranalysis4X.derivable_pt_sinh	40
Coq.Reals.Ranalysis4X.derivable_exp	40	0.0.0.2	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.158557891846	6
Coq.Reals.Ranalysis4X.derivable_cosh	40	0.0.0.8	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	1.21505594254	165
Coq.Reals.Ranalysis4X.derivable_sinh	40	0.0.0.0	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.153104066849	4
Coq.Reals.Ranalysis4X.derive_pt_exp	40	2.6	search with cache (only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.187767028809	11
Coq.Reals.Ranalysis4X.derive_pt_cosh	40
Coq.Reals.Ranalysis4X.derive_pt_sinh	40	2.0	search with cache (only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	3.79821586609	171
Coq.Reals.Ranalysis4X.sinh_lt	40
Coq.Reals.R_sqrX.Rsqr_neg	40	0.4.12.9.2	search with cache (only 1: rewrite <- (Ropp_involutive x); only 1: replace (- x) with (-1 * x) by ring; only 1: unfold IZR; only 1: unfold Rsqr; only 1: ring).	6.79421186447	2047
Coq.Reals.R_sqrX.Rsqr_mult	40	0	search with cache (only 1: ring_Rsqr).	0.0514259338379	1
Coq.Reals.R_sqrX.Rsqr_plus	40
Coq.Reals.R_sqrX.Rsqr_minus	40	0	search with cache (only 1: ring_Rsqr).	0.057501077652	1
Coq.Reals.R_sqrX.Rsqr_neg_minus	40	0	search with cache (only 1: ring_Rsqr).	0.0534110069275	1
Coq.Reals.R_sqrX.Rsqr_1	40	0.0	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0526268482208	2
Coq.Reals.R_sqrX.Rsqr_gt_0_0	40
Coq.Reals.R_sqrX.Rsqr_pos_lt	40	10	search with cache (only 1: auto with real).	0.404949903488	33
Coq.Reals.R_sqrX.Rsqr_div	40	0.5.2	search with cache (only 1: rewrite Rsqr_neg; only 1: unfold Rsqr; only 1: field).	0.293380022049	17
Coq.Reals.R_sqrX.Rsqr_eq_0	40
Coq.Reals.R_sqrX.Rsqr_minus_plus	40	33	search with cache (only 1: ring_Rsqr).	31.1045320034	5019
Coq.Reals.R_sqrX.Rsqr_plus_minus	40	0	search with cache (only 1: ring_Rsqr).	0.0536799430847	1
Coq.Reals.R_sqrX.Rsqr_incr_0	40
Coq.Reals.R_sqrX.Rsqr_incr_0_var	40
Coq.Reals.R_sqrX.Rsqr_incr_1	40	8.6	search with cache (only 1: unfold Rsqr; only 1: auto with real).	3.26559305191	396
Coq.Reals.R_sqrX.Rsqr_incrst_0	40
Coq.Reals.R_sqrX.Rsqr_incrst_1	40
Coq.Reals.R_sqrX.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqrX.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqrX.neg_pos_Rsqr_le	40
Coq.Reals.R_sqrX.neg_pos_Rsqr_lt	40
Coq.Reals.R_sqrX.Rsqr_bounds_le	40
Coq.Reals.R_sqrX.Rsqr_bounds_lt	40
Coq.Reals.R_sqrX.Rsqr_abs	40	9.0.4	search with cache (only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: ring_Rsqr).	4.00136303902	678
Coq.Reals.R_sqrX.Rsqr_le_abs_0	40
Coq.Reals.R_sqrX.Rsqr_le_abs_1	40
Coq.Reals.R_sqrX.Rsqr_lt_abs_0	40
Coq.Reals.R_sqrX.Rsqr_lt_abs_1	40
Coq.Reals.R_sqrX.Rsqr_inj	40
Coq.Reals.R_sqrX.Rsqr_eq_abs_0	40
Coq.Reals.R_sqrX.Rsqr_eq_asb_1	40	2.3	search with cache (only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y)).	0.594519853592	28
Coq.Reals.R_sqrX.triangle_rectangle	40
Coq.Reals.R_sqrX.triangle_rectangle_lt	40
Coq.Reals.R_sqrX.triangle_rectangle_le	40
Coq.Reals.R_sqrX.Rsqr_inv	40	0.13	search with cache (only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr).	0.601463079453	99
Coq.Reals.R_sqrX.canonical_Rsqr	40
Coq.Reals.R_sqrX.Rsqr_eq	40
Coq.Reals.Sqrt_regX.sqrt_var_maj	40
Coq.Reals.Sqrt_regX.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_regX.sqrt_continuity_pt	40
Coq.Reals.Sqrt_regX.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_regX.derivable_pt_sqrt	40
Coq.Reals.Sqrt_regX.derive_pt_sqrt	40
Coq.Reals.Sqrt_regX.continuity_pt_sqrt	40
Coq.Reals.Rtrigo_altX.pre_sin_bound	40
Coq.Reals.Rtrigo_altX.pre_cos_bound	40
Coq.Reals.PartSumX.tech1	40
Coq.Reals.PartSumX.tech2	40
Coq.Reals.PartSumX.tech3	40
Coq.Reals.PartSumX.tech4	40
Coq.Reals.PartSumX.tech5	40		search with cache ().	0.0126011371613	0
Coq.Reals.PartSumX.tech6	40
Coq.Reals.PartSumX.tech7	40
Coq.Reals.PartSumX.tech11	40
Coq.Reals.PartSumX.tech12	40		search with cache ().	0.0151340961456	0
Coq.Reals.PartSumX.scal_sum	40
Coq.Reals.PartSumX.decomp_sum	40
Coq.Reals.PartSumX.plus_sum	40	2.0.4	search with cache (only 1: induction N as [| N HrecN]; only 1: rewrite HrecN; only 1: ring).	0.0731930732727	9
Coq.Reals.PartSumX.sum_eq	40	1.0.1	search with cache (only 1: induction N as [| N HrecN]; only 1: rewrite HrecN; only 1: rewrite (H (S N))).	0.0674669742584	5
Coq.Reals.PartSumX.uniqueness_sum	40
Coq.Reals.PartSumX.minus_sum	40	2.1.1	search with cache (only 1: induction N as [| N HrecN]; only 1: rewrite HrecN; only 1: ring).	0.137094020844	7
Coq.Reals.PartSumX.sum_decomposition	40
Coq.Reals.PartSumX.sum_Rle	40
Coq.Reals.PartSumX.Rsum_abs	40
Coq.Reals.PartSumX.sum_cte	40
Coq.Reals.PartSumX.sum_growing	40	2.0.1.0.0.0.0	search with cache (only 1: induction N as [| N HrecN]; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l).	0.955709934235	36
Coq.Reals.PartSumX.Rabs_triang_gen	40	3.1.0.1.0	search with cache (only 1: induction N as [| N HrecN]; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l).	0.23072719574	11
Coq.Reals.PartSumX.cond_pos_sum	40
Coq.Reals.PartSumX.cauchy_abs	40
Coq.Reals.PartSumX.cv_cauchy_1	40
Coq.Reals.PartSumX.cv_cauchy_2	40
Coq.Reals.PartSumX.sum_eq_R0	40	12.1.0.1	search with cache (only 1: induction N as [| N HrecN]; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: ring).	0.92414689064	514
Coq.Reals.PartSumX.sum_incr	40
Coq.Reals.PartSumX.sum_cv_maj	40
Coq.Reals.RListX.MaxRlist_P1	40
Coq.Reals.RListX.MinRlist_P1	40
Coq.Reals.RListX.AbsList_P1	40	4	search with cache (only 1: induction l as [| r0 l Hrecl0]).	0.0624430179596	5
Coq.Reals.RListX.MinRlist_P2	40
Coq.Reals.RListX.AbsList_P2	40	25	search with cache (only 1: induction l as [| r0 l Hrecl0]).	0.6429271698	309
Coq.Reals.RListX.MaxRlist_P2	40
Coq.Reals.RListX.pos_Rl_P1	40	6	search with cache (only 1: destruct l).	0.0541179180145	7
Coq.Reals.RListX.pos_Rl_P2	40
Coq.Reals.RListX.Rlist_P1	40
Coq.Reals.RListX.RList_P0	40
Coq.Reals.RListX.RList_P1	40
Coq.Reals.RListX.RList_P2	40
Coq.Reals.RListX.RList_P3	40
Coq.Reals.RListX.RList_P4	40
Coq.Reals.RListX.RList_P5	40
Coq.Reals.RListX.RList_P6	40
Coq.Reals.RListX.RList_P7	40
Coq.Reals.RListX.RList_P8	40
Coq.Reals.RListX.RList_P9	40
Coq.Reals.RListX.RList_P10	40	2.26	search with cache (only 1: induction l as [| r r0 H]; only 1: case (Rle_dec r a)).	11.4804759026	2730
Coq.Reals.RListX.RList_P11	40
Coq.Reals.RListX.RList_P12	40
Coq.Reals.RListX.RList_P13	40
Coq.Reals.RListX.RList_P14	40	0.24	search with cache (only 1: induction l as [| ? ? H]; only 1: induction l as [| r l Hrecl]).	5.94136500359	1787
Coq.Reals.RListX.RList_P15	40
Coq.Reals.RListX.RList_P16	40
Coq.Reals.RListX.RList_P17	40
Coq.Reals.RListX.RList_P18	40	1	search with cache (only 1: induction l as [| r l Hrecl]).	0.0577368736267	2
Coq.Reals.RListX.RList_P19	40	17	search with cache (only 1: destruct l as [| a l']).	0.432713985443	160
Coq.Reals.RListX.RList_P20	40
Coq.Reals.RListX.RList_P21	40		search with cache ().	0.0177090167999	0
Coq.Reals.RListX.RList_P22	40	0	search with cache (only 1: induction l1 as [| r l1 Hrecl1]).	0.0438230037689	1
Coq.Reals.RListX.RList_P24	40
Coq.Reals.RListX.RList_P25	40
Coq.Reals.RListX.RList_P26	40
Coq.Reals.RListX.RList_P29	40
Coq.Reals.ClassicalDedekindRealsX.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindRealsX.lowerCutBelow	40
Coq.Reals.ClassicalDedekindRealsX.lowerCutAbove	40
Coq.Reals.ClassicalDedekindRealsX.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindRealsX.DRealQlim	40
Coq.Reals.ClassicalDedekindRealsX.DRealAbstr	40
Coq.Reals.ClassicalDedekindRealsX.UpperAboveLower	40
Coq.Reals.ClassicalDedekindRealsX.DRealRepr	40
Coq.Reals.ClassicalDedekindRealsX.Rle_antisym	40
Coq.Reals.ClassicalDedekindRealsX.lowerUpper	40
Coq.Reals.ClassicalDedekindRealsX.DRealOpen	40
Coq.Reals.ClassicalDedekindRealsX.DRealReprQ	40
Coq.Reals.ClassicalDedekindRealsX.DRealReprQup	40
Coq.Reals.ClassicalDedekindRealsX.DRealQuot1	40
Coq.Reals.ClassicalDedekindRealsX.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindRealsX.DRealQuot2	40
Coq.Reals.Ranalysis2X.formule	40
Coq.Reals.Ranalysis2X.maj_term1	40
Coq.Reals.Ranalysis2X.maj_term2	40
Coq.Reals.Ranalysis2X.maj_term3	40
Coq.Reals.Ranalysis2X.maj_term4	40
Coq.Reals.Ranalysis2X.D_x_no_cond	40
Coq.Reals.Ranalysis2X.Rabs_4	40
Coq.Reals.Ranalysis2X.Rlt_4	40
Coq.Reals.Ranalysis2X.quadruple	40	0	search with cache (only 1: ring_Rsqr).	0.0258798599243	1
Coq.Reals.Ranalysis2X.quadruple_var	40	1	search with cache (only 1: field).	0.0385448932648	2
Coq.Reals.Ranalysis2X.continuous_neq_0	40
Coq.Reals.RIneqX.Rle_refl	40		search with cache ().	0.0195119380951	0
Coq.Reals.RIneqX.Rge_refl	40		search with cache ().	0.0195739269257	0
Coq.Reals.RIneqX.Rlt_irrefl	40
Coq.Reals.RIneqX.Rgt_irrefl	40	0	search with cache (only 1: eapply Rlt_asym).	0.0320749282837	1
Coq.Reals.RIneqX.Rlt_not_eq	40	7	search with cache (only 1: eapply Rlt_asym).	0.0755228996277	8
Coq.Reals.RIneqX.Rgt_not_eq	40
Coq.Reals.RIneqX.Rlt_dichotomy_converse	40
Coq.Reals.RIneqX.Req_dec	40
Coq.Reals.RIneqX.Rtotal_order	40	5	search with cache (only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse).	0.80325293541	21
Coq.Reals.RIneqX.Rdichotomy	40	1	search with cache (only 1: generalize (total_order_T r1 r2)).	0.0560259819031	2
Coq.Reals.RIneqX.Rlt_le	40		search with cache ().	0.0212030410767	0
Coq.Reals.RIneqX.Rgt_ge	40		search with cache ().	0.0211479663849	0
Coq.Reals.RIneqX.Rle_ge	40	11	search with cache (only 1: destruct H).	1.39491987228	201
Coq.Reals.RIneqX.Rge_le	40	12	search with cache (only 1: destruct H).	0.68816113472	156
Coq.Reals.RIneqX.Rlt_gt	40		search with cache ().	0.017676115036	0
Coq.Reals.RIneqX.Rgt_lt	40		search with cache ().	0.0175590515137	0
Coq.Reals.RIneqX.Rnot_le_lt	40
Coq.Reals.RIneqX.Rnot_ge_gt	40
Coq.Reals.RIneqX.Rnot_le_gt	40	9.0	search with cache (only 1: red; only 1: auto with real).	0.663442134857	90
Coq.Reals.RIneqX.Rnot_ge_lt	40	0.1	search with cache (only 1: apply Rnot_le_lt; only 1: auto with real).	0.0478920936584	3
Coq.Reals.RIneqX.Rnot_lt_le	40	4.0	search with cache (only 1: red; only 1: generalize (total_order_T r1 r2)).	0.104707956314	6
Coq.Reals.RIneqX.Rnot_gt_le	40	3.0	search with cache (only 1: red; only 1: generalize (total_order_T r1 r2)).	0.0991101264954	5
Coq.Reals.RIneqX.Rnot_gt_ge	40	3.0	search with cache (only 1: red; only 1: generalize (total_order_T r1 r2)).	0.0997488498688	5
Coq.Reals.RIneqX.Rnot_lt_ge	40	3.0	search with cache (only 1: red; only 1: generalize (total_order_T r1 r2)).	0.0990641117096	5
Coq.Reals.RIneqX.Rlt_not_le	40
Coq.Reals.RIneqX.Rgt_not_le	40
Coq.Reals.RIneqX.Rlt_not_ge	40
Coq.Reals.RIneqX.Rgt_not_ge	40	0.2	search with cache (only 1: eapply Rlt_not_le; only 1: auto with real).	0.0926020145416	4
Coq.Reals.RIneqX.Rle_not_lt	40	8	search with cache (only 1: eapply Rlt_not_le).	0.261564970016	21
Coq.Reals.RIneqX.Rge_not_lt	40	0.0	search with cache (only 1: eapply Rlt_not_le; only 1: eauto with real).	0.0599179267883	2
Coq.Reals.RIneqX.Rle_not_gt	40
Coq.Reals.RIneqX.Rge_not_gt	40	0.2	search with cache (only 1: eapply Rlt_not_le; only 1: auto with real).	0.0713438987732	4
Coq.Reals.RIneqX.Req_le	40		search with cache ().	0.0209898948669	0
Coq.Reals.RIneqX.Req_ge	40		search with cache ().	0.0212190151215	0
Coq.Reals.RIneqX.Req_le_sym	40		search with cache ().	0.0211248397827	0
Coq.Reals.RIneqX.Req_ge_sym	40		search with cache ().	0.0211379528046	0
Coq.Reals.RIneqX.Rgt_asym	40	7	search with cache (only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2)).	0.0431559085846	8
Coq.Reals.RIneqX.Rle_antisym	40
Coq.Reals.RIneqX.Rge_antisym	40	3	search with cache (only 1: auto with real).	0.0415461063385	4
Coq.Reals.RIneqX.Rle_le_eq	40	1.3.3	search with cache (only 1: generalize (Rlt_asym r1 r2); only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: auto with real).	0.0852980613708	10
Coq.Reals.RIneqX.Rge_ge_eq	40	3	search with cache (only 1: auto with real).	0.0596959590912	4
Coq.Reals.RIneqX.Rlt_eq_compat	40		search with cache ().	0.0193510055542	0
Coq.Reals.RIneqX.Rgt_eq_compat	40		search with cache ().	0.0193710327148	0
Coq.Reals.RIneqX.Rle_trans	40
Coq.Reals.RIneqX.Rge_trans	40
Coq.Reals.RIneqX.Rgt_trans	40
Coq.Reals.RIneqX.Rle_lt_trans	40
Coq.Reals.RIneqX.Rlt_le_trans	40
Coq.Reals.RIneqX.Rge_gt_trans	40
Coq.Reals.RIneqX.Rgt_ge_trans	40
Coq.Reals.RIneqX.Rlt_dec	40
Coq.Reals.RIneqX.Rle_dec	40	4.0.2	search with cache (only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2)).	1.31806015968	9
Coq.Reals.RIneqX.Rgt_dec	40
Coq.Reals.RIneqX.Rge_dec	40
Coq.Reals.RIneqX.Rlt_le_dec	40	1	search with cache (only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2)).	0.118640899658	2
Coq.Reals.RIneqX.Rgt_ge_dec	40	0.2.0.5.0.1.5	search with cache (only 1: edestruct Rle_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: red; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	28.4761388302	1655
Coq.Reals.RIneqX.Rle_lt_dec	40	1	search with cache (only 1: generalize (total_order_T r1 r2)).	0.536413908005	2
Coq.Reals.RIneqX.Rge_gt_dec	40	0.1.1	search with cache (only 1: edestruct Rlt_le_dec; only 1: left; only 1: auto with real).	1.31326913834	50
Coq.Reals.RIneqX.Rlt_or_le	40	2.1.2	search with cache (only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2)).	0.175548791885	8
Coq.Reals.RIneqX.Rgt_or_ge	40	0.1.3	search with cache (only 1: edestruct Rlt_le_dec; only 1: right; only 1: auto with real).	0.25689291954	30
Coq.Reals.RIneqX.Rle_or_lt	40	2.1.2	search with cache (only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2)).	0.180429935455	8
Coq.Reals.RIneqX.Rge_or_gt	40	0.1.0	search with cache (only 1: edestruct Rlt_or_le; only 1: left; only 1: auto with real).	0.44301199913	30
Coq.Reals.RIneqX.Rle_lt_or_eq_dec	40	0.11	search with cache (only 1: generalize (total_order_T r1 r2); only 1: intuition).	2.17309713364	80
Coq.Reals.RIneqX.inser_trans_R	40
Coq.Reals.RIneqX.Rplus_0_r	40	0.9.0.0	search with cache (only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	5.00372695923	158
Coq.Reals.RIneqX.Rplus_ne	40	0.0.0.1	search with cache (only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	0.931576967239	30
Coq.Reals.RIneqX.Rplus_opp_l	40	4	search with cache (only 1: ring).	7.23294782639	42
Coq.Reals.RIneqX.Rplus_opp_r_uniq	40
Coq.Reals.RIneqX.Rplus_eq_compat_l	40		search with cache ().	0.0169878005981	0
Coq.Reals.RIneqX.Rplus_eq_compat_r	40		search with cache ().	0.0171568393707	0
Coq.Reals.RIneqX.Rplus_eq_reg_l	40
Coq.Reals.RIneqX.Rplus_eq_reg_r	40
Coq.Reals.RIneqX.Rplus_0_r_uniq	40	1.6.3.0.3	search with cache (only 1: transitivity (- r + r + r1); only 1: ring; only 1: repeat rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	24.5857470036	3038
Coq.Reals.RIneqX.Rplus_eq_0_l	40
Coq.Reals.RIneqX.Rplus_eq_R0	40
Coq.Reals.RIneqX.Rinv_r	40
Coq.Reals.RIneqX.Rinv_l_sym	40	0	search with cache (only 1: field).	0.045832157135	1
Coq.Reals.RIneqX.Rinv_r_sym	40	0	search with cache (only 1: field).	0.0462749004364	1
Coq.Reals.RIneqX.Rmult_0_r	40	1.2.2	search with cache (only 1: replace r with (r + 0); only 1: ring; only 1: ring).	0.883126020432	26
Coq.Reals.RIneqX.Rmult_0_l	40	0	search with cache (only 1: ring).	0.0369880199432	1
Coq.Reals.RIneqX.Rmult_ne	40	2.0.0.1.0.0.0	search with cache (only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l; only 1: apply Rmult_1_l).	2.36589002609	59
Coq.Reals.RIneqX.Rmult_1_r	40	2.0.0.0.0.0.0.0	search with cache (only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.254342079163	14
Coq.Reals.RIneqX.Rmult_eq_compat_l	40		search with cache ().	0.0169699192047	0
Coq.Reals.RIneqX.Rmult_eq_compat_r	40		search with cache ().	0.0168850421906	0
Coq.Reals.RIneqX.Rmult_eq_reg_l	40
Coq.Reals.RIneqX.Rmult_eq_reg_r	40
Coq.Reals.RIneqX.Rmult_integral	40
Coq.Reals.RIneqX.Rmult_eq_0_compat	40	0.0	search with cache (only 1: auto with real; only 1: auto with real).	0.0768678188324	2
Coq.Reals.RIneqX.Rmult_eq_0_compat_r	40	0	search with cache (only 1: auto with real).	0.0352599620819	1
Coq.Reals.RIneqX.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0352981090546	1
Coq.Reals.RIneqX.Rmult_neq_0_reg	40	0.0	search with cache (only 1: auto with real; only 1: auto with real).	0.0954267978668	2
Coq.Reals.RIneqX.Rmult_integral_contrapositive	40
Coq.Reals.RIneqX.Rmult_integral_contrapositive_currified	40	1	search with cache (only 1: case (Rmult_integral r1 r2)).	0.0818049907684	2
Coq.Reals.RIneqX.Rmult_plus_distr_r	40	7	search with cache (only 1: ring).	5.48363113403	31
Coq.Reals.RIneqX.Rsqr_0	40
Coq.Reals.RIneqX.Rsqr_0_uniq	40
Coq.Reals.RIneqX.Ropp_eq_compat	40		search with cache ().	0.0173318386078	0
Coq.Reals.RIneqX.Ropp_0	40	2	search with cache (only 1: ring).	0.0429759025574	3
Coq.Reals.RIneqX.Ropp_eq_0_compat	40	0	search with cache (only 1: ring).	0.0436701774597	1
Coq.Reals.RIneqX.Ropp_involutive	40	3	search with cache (only 1: ring).	1.27521705627	24
Coq.Reals.RIneqX.Ropp_neq_0_compat	40
Coq.Reals.RIneqX.Ropp_plus_distr	40
Coq.Reals.RIneqX.Ropp_mult_distr_l	40
Coq.Reals.RIneqX.Ropp_mult_distr_l_reverse	40	0	search with cache (only 1: ring).	0.0425591468811	1
Coq.Reals.RIneqX.Rmult_opp_opp	40	0	search with cache (only 1: ring).	0.0473918914795	1
Coq.Reals.RIneqX.Ropp_mult_distr_r	40	0	search with cache (only 1: ring).	0.0452909469604	1
Coq.Reals.RIneqX.Ropp_mult_distr_r_reverse	40	0	search with cache (only 1: ring).	0.0452828407288	1
Coq.Reals.RIneqX.Rminus_0_r	40	8	search with cache (only 1: ring).	0.0744001865387	15
Coq.Reals.RIneqX.Rminus_0_l	40	0	search with cache (only 1: ring).	0.040708065033	1
Coq.Reals.RIneqX.Ropp_minus_distr	40	0	search with cache (only 1: ring).	0.0416560173035	1
Coq.Reals.RIneqX.Ropp_minus_distr'	40	0	search with cache (only 1: ring).	0.04168009758	1
Coq.Reals.RIneqX.Rminus_diag_eq	40	1	search with cache (only 1: ring).	0.0382239818573	2
Coq.Reals.RIneqX.Rminus_eq_0	40	0.1	search with cache (only 1: unfold Rminus; only 1: ring).	0.0847301483154	3
Coq.Reals.RIneqX.Rminus_diag_uniq	40
Coq.Reals.RIneqX.Rminus_diag_uniq_sym	40
Coq.Reals.RIneqX.Rplus_minus	40	5	search with cache (only 1: ring).	0.0443198680878	6
Coq.Reals.RIneqX.Rminus_eq_contra	40	7	search with cache (only 1: auto with real).	0.060478925705	15
Coq.Reals.RIneqX.Rminus_not_eq	40	3.0	search with cache (only 1: apply H; only 1: auto with real).	0.208796977997	24
Coq.Reals.RIneqX.Rminus_not_eq_right	40	4.0	search with cache (only 1: elim H; only 1: apply Rminus_diag_eq).	0.163241147995	18
Coq.Reals.RIneqX.Rmult_minus_distr_l	40	1	search with cache (only 1: ring).	0.198163032532	25
Coq.Reals.RIneqX.Rmult_minus_distr_r	40	0	search with cache (only 1: ring).	0.0481498241425	1
Coq.Reals.RIneqX.Rinv_1	40	0	search with cache (only 1: field).	0.0403490066528	1
Coq.Reals.RIneqX.Rinv_neq_0_compat	40
Coq.Reals.RIneqX.Rinv_involutive	40
Coq.Reals.RIneqX.Rinv_mult_distr	40
Coq.Reals.RIneqX.Ropp_inv_permute	40	2	search with cache (only 1: field).	0.0470950603485	3
Coq.Reals.RIneqX.Rinv_r_simpl_r	40	0	search with cache (only 1: field).	0.0541779994965	1
Coq.Reals.RIneqX.Rinv_r_simpl_l	40	0.3.2.0	search with cache (only 1: transitivity (1 * r2); only 1: transitivity (1 * r2); only 1: field; only 1: auto with real).	0.219947099686	12
Coq.Reals.RIneqX.Rinv_r_simpl_m	40	0.5.0	search with cache (only 1: transitivity (1 * r2); only 1: field; only 1: auto with real).	4.91248178482	196
Coq.Reals.RIneqX.Rinv_mult_simpl	40
Coq.Reals.RIneqX.Rplus_gt_compat_l	40	42	search with cache (only 1: intuition).	2.27589797974	901
Coq.Reals.RIneqX.Rplus_lt_compat_r	40
Coq.Reals.RIneqX.Rplus_gt_compat_r	40	6.3.2	search with cache (only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.471747875214	160
Coq.Reals.RIneqX.Rplus_le_compat_l	40	1.0.13	search with cache (only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: intuition).	5.54787611961	231
Coq.Reals.RIneqX.Rplus_ge_compat_l	40	6.6.15.12	search with cache (only 1: red; only 1: generalize (total_order_T r1 r2); only 1: auto with zarith real; only 1: auto with zarith real).	38.291738987	3278
Coq.Reals.RIneqX.Rplus_le_compat_r	40	3.2.1	search with cache (only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0992910861969	9
Coq.Reals.RIneqX.Rplus_ge_compat_r	40
Coq.Reals.RIneqX.Rplus_lt_compat	40
Coq.Reals.RIneqX.Rplus_le_compat	40
Coq.Reals.RIneqX.Rplus_gt_compat	40	1.1.0.0	search with cache (only 1: red; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.148384809494	11
Coq.Reals.RIneqX.Rplus_ge_compat	40
Coq.Reals.RIneqX.Rplus_lt_le_compat	40
Coq.Reals.RIneqX.Rplus_le_lt_compat	40
Coq.Reals.RIneqX.Rplus_gt_ge_compat	40	2.1.0.0.0.0.0	search with cache (only 1: apply Rle_lt_trans with (r2 + r3); only 1: apply Rle_trans with (r2 + r3); only 1: apply Rle_trans with (r2 + r3); only 1: apply Rle_trans with (r2 + r3); only 1: apply Rle_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.730414867401	28
Coq.Reals.RIneqX.Rplus_ge_gt_compat	40	1.3.1.6.1	search with cache (only 1: red; only 1: edestruct Rlt_or_le; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	22.7222001553	1254
Coq.Reals.RIneqX.Rplus_lt_0_compat	40
Coq.Reals.RIneqX.Rplus_le_lt_0_compat	40
Coq.Reals.RIneqX.Rplus_lt_le_0_compat	40
Coq.Reals.RIneqX.Rplus_le_le_0_compat	40
Coq.Reals.RIneqX.sum_inequa_Rle_lt	40
Coq.Reals.RIneqX.Rplus_lt_reg_l	40
Coq.Reals.RIneqX.Rplus_lt_reg_r	40
Coq.Reals.RIneqX.Rplus_le_reg_l	40
Coq.Reals.RIneqX.Rplus_le_reg_r	40
Coq.Reals.RIneqX.Rplus_gt_reg_l	40
Coq.Reals.RIneqX.Rplus_ge_reg_l	40
Coq.Reals.RIneqX.Rplus_le_reg_pos_r	40
Coq.Reals.RIneqX.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneqX.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneqX.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneqX.Ropp_gt_lt_contravar	40
Coq.Reals.RIneqX.Ropp_lt_gt_contravar	40	4	search with cache (only 1: red).	0.0397109985352	5
Coq.Reals.RIneqX.Ropp_lt_contravar	40		search with cache ().	0.0189120769501	0
Coq.Reals.RIneqX.Ropp_gt_contravar	40	2	search with cache (only 1: unfold Rgt).	0.0399720668793	3
Coq.Reals.RIneqX.Ropp_le_ge_contravar	40	0.2.0.1.3	search with cache (only 1: generalize (Rtotal_order r1 r2); only 1: red; only 1: intuition eauto  4 with real; only 1: red; only 1: intuition eauto  4 with real).	1.73939299583	58
Coq.Reals.RIneqX.Ropp_ge_le_contravar	40	3	search with cache (only 1: auto with real).	0.170083045959	22
Coq.Reals.RIneqX.Ropp_le_contravar	40	0.4	search with cache (only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.474358797073	13
Coq.Reals.RIneqX.Ropp_ge_contravar	40	3	search with cache (only 1: auto with real).	1.27027416229	13
Coq.Reals.RIneqX.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneqX.Ropp_0_gt_lt_contravar	40	0.0	search with cache (only 1: replace 0 with (- 0); only 1: auto with real).	0.0641160011292	2
Coq.Reals.RIneqX.Ropp_lt_gt_0_contravar	40	0.0	search with cache (only 1: replace 0 with (- 0); only 1: auto with real).	0.0648281574249	2
Coq.Reals.RIneqX.Ropp_gt_lt_0_contravar	40	0.0.0	search with cache (only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0736119747162	3
Coq.Reals.RIneqX.Ropp_0_le_ge_contravar	40	0.0.38.15	search with cache (only 1: unfold Rge; only 1: destruct H; only 1: auto with real; only 1: auto with real).	31.1107709408	3849
Coq.Reals.RIneqX.Ropp_0_ge_le_contravar	40	0.0.0	search with cache (only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0918560028076	3
Coq.Reals.RIneqX.Ropp_lt_cancel	40
Coq.Reals.RIneqX.Ropp_gt_cancel	40	2.3	search with cache (only 1: unfold Rgt; only 1: auto with real).	0.0526418685913	7
Coq.Reals.RIneqX.Ropp_le_cancel	40
Coq.Reals.RIneqX.Ropp_ge_cancel	40
Coq.Reals.RIneqX.Rmult_lt_compat_r	40
Coq.Reals.RIneqX.Rmult_gt_compat_r	40	5	search with cache (only 1: red).	0.279952049255	35
Coq.Reals.RIneqX.Rmult_gt_compat_l	40	4.6	search with cache (only 1: red; only 1: auto with real).	0.572085857391	59
Coq.Reals.RIneqX.Rmult_le_compat_l	40
Coq.Reals.RIneqX.Rmult_le_compat_r	40
Coq.Reals.RIneqX.Rmult_ge_compat_l	40	12.1	search with cache (only 1: destruct H0; only 1: intuition).	3.83301377296	472
Coq.Reals.RIneqX.Rmult_ge_compat_r	40	6.4.2	search with cache (only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: eauto using Rmult_le_compat_l with rorders).	13.3462669849	1464
Coq.Reals.RIneqX.Rmult_le_compat	40
Coq.Reals.RIneqX.Rmult_ge_compat	40
Coq.Reals.RIneqX.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneqX.Rmult_le_0_lt_compat	40
Coq.Reals.RIneqX.Rmult_lt_0_compat	40
Coq.Reals.RIneqX.Rmult_le_compat_neg_l	40
Coq.Reals.RIneqX.Rmult_le_ge_compat_neg_l	40	0.2.0.4	search with cache (only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.603145122528	41
Coq.Reals.RIneqX.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneqX.Rmult_lt_reg_l	40
Coq.Reals.RIneqX.Rmult_lt_reg_r	40
Coq.Reals.RIneqX.Rmult_gt_reg_l	40	1	search with cache (only 1: apply Rmult_lt_reg_l with r).	0.0686068534851	2
Coq.Reals.RIneqX.Rmult_le_reg_l	40
Coq.Reals.RIneqX.Rmult_le_reg_r	40
Coq.Reals.RIneqX.Rlt_minus	40
Coq.Reals.RIneqX.Rgt_minus	40	0.0.0	search with cache (only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0770950317383	3
Coq.Reals.RIneqX.Rlt_Rminus	40
Coq.Reals.RIneqX.Rle_minus	40
Coq.Reals.RIneqX.Rge_minus	40
Coq.Reals.RIneqX.Rminus_lt	40
Coq.Reals.RIneqX.Rminus_gt	40	0.0.1.5.1.0	search with cache (only 1: apply (Rplus_lt_reg_l r2); only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	2.87788105011	446
Coq.Reals.RIneqX.Rminus_gt_0_lt	40
Coq.Reals.RIneqX.Rminus_le	40	0.0.1.1.8	search with cache (only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	17.8099691868	1363
Coq.Reals.RIneqX.Rminus_ge	40
Coq.Reals.RIneqX.tech_Rplus	40
Coq.Reals.RIneqX.Rle_0_sqr	40
Coq.Reals.RIneqX.Rlt_0_sqr	40
Coq.Reals.RIneqX.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneqX.Rplus_sqr_eq_0	40
Coq.Reals.RIneqX.Rlt_0_1	40	0.2.2	search with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.15769982338	16
Coq.Reals.RIneqX.Rle_0_1	40	3.9	search with cache (only 1: constructor; only 1: auto with real).	10.5345439911	508
Coq.Reals.RIneqX.Rinv_0_lt_compat	40
Coq.Reals.RIneqX.Rinv_lt_0_compat	40	0.0.0.1.1.0.1.0	search with cache (only 1: apply Rnot_le_lt; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.8050339222	125
Coq.Reals.RIneqX.Rinv_lt_contravar	40
Coq.Reals.RIneqX.Rinv_1_lt_contravar	40
Coq.Reals.RIneqX.Rle_lt_0_plus_1	40	0.0.1	search with cache (only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.0811219215393	4
Coq.Reals.RIneqX.Rlt_plus_1	40
Coq.Reals.RIneqX.tech_Rgt_minus	40
Coq.Reals.RIneqX.S_INR	40	0.0	search with cache (only 1: destruct n; only 1: auto with real).	0.0481688976288	2
Coq.Reals.RIneqX.S_O_plus_INR	40	1.1.1.0.0.0.0	search with cache (only 1: case n; only 1: auto with real; only 1: case n; only 1: case n; only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.28604102135	45
Coq.Reals.RIneqX.plus_INR	40
Coq.Reals.RIneqX.minus_INR	40
Coq.Reals.RIneqX.mult_INR	40
Coq.Reals.RIneqX.pow_INR	40
Coq.Reals.RIneqX.lt_0_INR	40
Coq.Reals.RIneqX.lt_INR	40
Coq.Reals.RIneqX.lt_1_INR	40
Coq.Reals.RIneqX.pos_INR_nat_of_P	40
Coq.Reals.RIneqX.pos_INR	40
Coq.Reals.RIneqX.INR_lt	40
Coq.Reals.RIneqX.le_INR	40
Coq.Reals.RIneqX.INR_not_0	40		search with cache ().	0.0315551757812	0
Coq.Reals.RIneqX.not_0_INR	40
Coq.Reals.RIneqX.not_INR	40
Coq.Reals.RIneqX.INR_eq	40
Coq.Reals.RIneqX.INR_le	40
Coq.Reals.RIneqX.not_1_INR	40
Coq.Reals.RIneqX.IZN	40
Coq.Reals.RIneqX.INR_IPR	40
Coq.Reals.RIneqX.INR_IZR_INZ	40
Coq.Reals.RIneqX.plus_IZR_NEG_POS	40
Coq.Reals.RIneqX.plus_IZR	40
Coq.Reals.RIneqX.mult_IZR	40
Coq.Reals.RIneqX.pow_IZR	40
Coq.Reals.RIneqX.succ_IZR	40	2.5.0.0.0.1.9	search with cache (only 1: case n; only 1: auto with real; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	4.92115497589	1049
Coq.Reals.RIneqX.opp_IZR	40
Coq.Reals.RIneqX.minus_IZR	40
Coq.Reals.RIneqX.Z_R_minus	40
Coq.Reals.RIneqX.lt_0_IZR	40
Coq.Reals.RIneqX.lt_IZR	40
Coq.Reals.RIneqX.eq_IZR_R0	40
Coq.Reals.RIneqX.eq_IZR	40
Coq.Reals.RIneqX.not_0_IZR	40
Coq.Reals.RIneqX.le_0_IZR	40
Coq.Reals.RIneqX.le_IZR	40
Coq.Reals.RIneqX.le_IZR_R1	40
Coq.Reals.RIneqX.IZR_ge	40
Coq.Reals.RIneqX.IZR_le	40
Coq.Reals.RIneqX.IZR_lt	40
Coq.Reals.RIneqX.IZR_neq	40	5.8	search with cache (only 1: case H; only 1: rewrite (eq_IZR z1 z2)).	0.746280193329	126
Coq.Reals.RIneqX.one_IZR_lt1	40
Coq.Reals.RIneqX.one_IZR_r_R1	40
Coq.Reals.RIneqX.single_z_r_R1	40
Coq.Reals.RIneqX.tech_single_z_r_R1	40
Coq.Reals.RIneqX.Rmult_le_pos	40	4.0.1.0.4.1.0.0	search with cache (only 1: destruct H; only 1: destruct H0; only 1: unfold Rle; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: unfold Rle; only 1: auto with real; only 1: auto with real).	11.0955939293	1291
Coq.Reals.RIneqX.Rinv_le_contravar	40
Coq.Reals.RIneqX.Rle_Rinv	40
Coq.Reals.RIneqX.Ropp_div	40
Coq.Reals.RIneqX.Ropp_div_den	40	2.0	search with cache (only 1: unfold Rdiv; only 1: field).	0.119785070419	4
Coq.Reals.RIneqX.double	40	2	search with cache (only 1: ring).	0.0841720104218	3
Coq.Reals.RIneqX.double_var	40	34	search with cache (only 1: field).	26.1218419075	1605
Coq.Reals.RIneqX.R_rm	40
Coq.Reals.RIneqX.Zeq_bool_IZR	40
Coq.Reals.RIneqX.Rmult_ge_0_gt_0_lt_compat	40	1.1.2	search with cache (only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	4.70452594757	160
Coq.Reals.RIneqX.le_epsilon	40
Coq.Reals.RIneqX.completeness_weak	40
Coq.Reals.RIneqX.Rdiv_lt_0_compat	40
Coq.Reals.RIneqX.Rdiv_plus_distr	40
Coq.Reals.RIneqX.Rdiv_minus_distr	40
Coq.Reals.RIneqX.Req_EM_T	40
Coq.Reals.RIneqX.pos_half_prf	40	0	search with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.0316100120544	1
Coq.Reals.Rsqrt_defX.dicho_comp	40
Coq.Reals.Rsqrt_defX.dicho_lb_growing	40
Coq.Reals.Rsqrt_defX.dicho_up_decreasing	40
Coq.Reals.Rsqrt_defX.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_defX.dicho_lb_maj	40
Coq.Reals.Rsqrt_defX.dicho_up_min_x	40
Coq.Reals.Rsqrt_defX.dicho_up_min	40
Coq.Reals.Rsqrt_defX.dicho_lb_cv	40
Coq.Reals.Rsqrt_defX.dicho_up_cv	40
Coq.Reals.Rsqrt_defX.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_defX.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_defX.pow_2_n_growing	40
Coq.Reals.Rsqrt_defX.pow_2_n_infty	40
Coq.Reals.Rsqrt_defX.cv_dicho	40
Coq.Reals.Rsqrt_defX.continuity_seq	40
Coq.Reals.Rsqrt_defX.dicho_lb_car	40
Coq.Reals.Rsqrt_defX.dicho_up_car	40
Coq.Reals.Rsqrt_defX.cv_pow_half	40
Coq.Reals.Rsqrt_defX.IVT	40
Coq.Reals.Rsqrt_defX.IVT_cor	40
Coq.Reals.Rsqrt_defX.Rsqrt_exists	40
Coq.Reals.Rsqrt_defX.Rsqrt_positivity	40
Coq.Reals.Rsqrt_defX.Rsqrt_Rsqrt	40
Coq.Reals.RcompleteX.R_complete	40
Coq.Reals.RuncountableX.in_holed_interval_dec	40
Coq.Reals.RuncountableX.middle_in_interval	40
Coq.Reals.RuncountableX.point_in_holed_interval_works	40
Coq.Reals.RuncountableX.first_in_holed_interval	40
Coq.Reals.RuncountableX.first_in_holed_interval_works	40
Coq.Reals.RuncountableX.split_couple_eq	40		search with cache ().	0.0221300125122	0
Coq.Reals.RuncountableX.first_two_in_interval_works	40
Coq.Reals.RuncountableX.tearing_sequences	40
Coq.Reals.RuncountableX.tearing_sequences_projsig	40
Coq.Reals.RuncountableX.tearing_sequences_inc_dec	40
Coq.Reals.RuncountableX.split_lt_succ	40	6	search with cache (only 1: apply Nat.lt_eq_cases).	0.0938317775726	7
Coq.Reals.RuncountableX.increase_seq_transit	40
Coq.Reals.RuncountableX.decrease_seq_transit	40
Coq.Reals.RuncountableX.tearing_sequences_ordered_forall	40
Coq.Reals.RuncountableX.torn_number	40
Coq.Reals.RuncountableX.torn_number_above_first_sequence	40
Coq.Reals.RuncountableX.torn_number_below_second_sequence	40
Coq.Reals.RuncountableX.limit_index_above_all_indices	40
Coq.Reals.RuncountableX.first_indices_increasing	40
Coq.Reals.RuncountableX.R_uncountable	40
Coq.Reals.Exp_propX.E1_cvg	40
Coq.Reals.Exp_propX.exp_form	40
Coq.Reals.Exp_propX.div2_double	40	1	search with cache (only 1: apply Nat.div2_double).	0.0484600067139	2
Coq.Reals.Exp_propX.div2_S_double	40
Coq.Reals.Exp_propX.div2_not_R0	40
Coq.Reals.Exp_propX.Reste_E_maj	40
Coq.Reals.Exp_propX.maj_Reste_cv_R0	40
Coq.Reals.Exp_propX.Reste_E_cv	40
Coq.Reals.Exp_propX.exp_plus	40
Coq.Reals.Exp_propX.exp_pos_pos	40
Coq.Reals.Exp_propX.exp_pos	40
Coq.Reals.Exp_propX.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_propX.derivable_pt_lim_exp	40
Coq.Reals.AlembertX.Alembert_C1	40
Coq.Reals.AlembertX.Alembert_C2	40
Coq.Reals.AlembertX.AlembertC3_step1	40
Coq.Reals.AlembertX.AlembertC3_step2	40
Coq.Reals.AlembertX.Alembert_C3	40
Coq.Reals.AlembertX.Alembert_C4	40
Coq.Reals.AlembertX.Alembert_C5	40
Coq.Reals.AlembertX.Alembert_C6	40
Coq.Reals.RseriesX.EUn_noempty	40		search with cache ().	0.0134429931641	0
Coq.Reals.RseriesX.Un_in_EUn	40		search with cache ().	0.0130858421326	0
Coq.Reals.RseriesX.Un_bound_imp	40	10.1	search with cache (only 1: unfold EUn; only 1: intros n' (HPn', Hn')).	0.494534015656	157
Coq.Reals.RseriesX.growing_prop	40
Coq.Reals.RseriesX.Un_cv_crit_lub	40
Coq.Reals.RseriesX.Un_cv_crit	40
Coq.Reals.RseriesX.finite_greater	40
Coq.Reals.RseriesX.cauchy_bound	40
Coq.Reals.RseriesX.GP_infinite	40
Coq.Reals.RseriesX.CV_shift	40
Coq.Reals.RseriesX.CV_shift'	40
Coq.Reals.RseriesX.Un_growing_shift	40	2.1.0.0.8	search with cache (only 1: assert (Hi2pn : forall n, 0 < (/ 2) ^ n); only 1: clear; only 1: apply pow_lt; only 1: apply Rinv_0_lt_compat, Rlt_0_2; only 1: intros m).	1.12173604965	160
Coq.Reals.RiemannIntX.phi_sequence_prop	40
Coq.Reals.RiemannIntX.RiemannInt_P1	40
Coq.Reals.RiemannIntX.RiemannInt_P2	40
Coq.Reals.RiemannIntX.RiemannInt_P3	40
Coq.Reals.RiemannIntX.RiemannInt_exists	40
Coq.Reals.RiemannIntX.RiemannInt_P4	40
Coq.Reals.RiemannIntX.RinvN_pos	40	1.12	search with cache (only 1: apply Rinv_0_lt_compat; only 1: auto with real).	0.188856840134	76
Coq.Reals.RiemannIntX.RinvN_cv	40
Coq.Reals.RiemannIntX.Riemann_integrable_ext	40
Coq.Reals.RiemannIntX.RiemannInt_P5	40
Coq.Reals.RiemannIntX.maxN	40
Coq.Reals.RiemannIntX.Heine_cor1	40
Coq.Reals.RiemannIntX.Heine_cor2	40
Coq.Reals.RiemannIntX.SubEqui_P1	40		search with cache ().	0.0117099285126	0
Coq.Reals.RiemannIntX.SubEqui_P2	40
Coq.Reals.RiemannIntX.SubEqui_P3	40
Coq.Reals.RiemannIntX.SubEqui_P4	40
Coq.Reals.RiemannIntX.SubEqui_P5	40
Coq.Reals.RiemannIntX.SubEqui_P6	40
Coq.Reals.RiemannIntX.SubEqui_P7	40
Coq.Reals.RiemannIntX.SubEqui_P8	40
Coq.Reals.RiemannIntX.SubEqui_P9	40
Coq.Reals.RiemannIntX.RiemannInt_P6	40
Coq.Reals.RiemannIntX.RiemannInt_P7	40
Coq.Reals.RiemannIntX.continuity_implies_RiemannInt	40
Coq.Reals.RiemannIntX.RiemannInt_P8	40
Coq.Reals.RiemannIntX.RiemannInt_P9	40
Coq.Reals.RiemannIntX.RiemannInt_P10	40
Coq.Reals.RiemannIntX.RiemannInt_P11	40
Coq.Reals.RiemannIntX.RiemannInt_P12	40
Coq.Reals.RiemannIntX.RiemannInt_P13	40
Coq.Reals.RiemannIntX.RiemannInt_P14	40
Coq.Reals.RiemannIntX.RiemannInt_P15	40
Coq.Reals.RiemannIntX.RiemannInt_P16	40
Coq.Reals.RiemannIntX.Rle_cv_lim	40
Coq.Reals.RiemannIntX.RiemannInt_P17	40
Coq.Reals.RiemannIntX.RiemannInt_P18	40
Coq.Reals.RiemannIntX.RiemannInt_P19	40
Coq.Reals.RiemannIntX.FTC_P1	40
Coq.Reals.RiemannIntX.RiemannInt_P20	40
Coq.Reals.RiemannIntX.RiemannInt_P21	40
Coq.Reals.RiemannIntX.RiemannInt_P22	40
Coq.Reals.RiemannIntX.RiemannInt_P23	40
Coq.Reals.RiemannIntX.RiemannInt_P24	40
Coq.Reals.RiemannIntX.RiemannInt_P25	40
Coq.Reals.RiemannIntX.RiemannInt_P26	40
Coq.Reals.RiemannIntX.RiemannInt_P27	40
Coq.Reals.RiemannIntX.RiemannInt_P28	40
Coq.Reals.RiemannIntX.RiemannInt_P29	40
Coq.Reals.RiemannIntX.RiemannInt_P30	40
Coq.Reals.RiemannIntX.RiemannInt_P31	40		search with cache ().	0.0201141834259	0
Coq.Reals.RiemannIntX.RiemannInt_P32	40
Coq.Reals.RiemannIntX.RiemannInt_P33	40
Coq.Reals.RiemannIntX.FTC_Riemann	40
Coq.Reals.RiemannIntX.RiemannInt_const_bound	40
Coq.Reals.RiemannIntX.Riemann_integrable_scal	40
Coq.Reals.RiemannIntX.Riemann_integrable_Ropp	40
Coq.Reals.AltSeriesX.CV_ALT_step0	40
Coq.Reals.AltSeriesX.CV_ALT_step1	40
Coq.Reals.AltSeriesX.CV_ALT_step2	40
Coq.Reals.AltSeriesX.CV_ALT_step3	40
Coq.Reals.AltSeriesX.CV_ALT_step4	40
Coq.Reals.AltSeriesX.CV_ALT	40
Coq.Reals.AltSeriesX.alternated_series	40
Coq.Reals.AltSeriesX.alternated_series_ineq	40
Coq.Reals.AltSeriesX.PI_tg_pos	40
Coq.Reals.AltSeriesX.PI_tg_decreasing	40
Coq.Reals.AltSeriesX.PI_tg_cv	40
Coq.Reals.AltSeriesX.exist_PI	40
Coq.Reals.AltSeriesX.Alt_PI_ineq	40
Coq.Reals.AltSeriesX.Alt_PI_RGT_0	40
Coq.Reals.Rtrigo_factsX.sin2_bound	40
Coq.Reals.Rtrigo_factsX.cos2_bound	40
Coq.Reals.Rtrigo_factsX.cos_sin	40
Coq.Reals.Rtrigo_factsX.cos_sin_opp	40
Coq.Reals.Rtrigo_factsX.cos_sin_Rabs	40
Coq.Reals.Rtrigo_factsX.sin_cos	40
Coq.Reals.Rtrigo_factsX.sin_cos_opp	40
Coq.Reals.Rtrigo_factsX.sin_cos_Rabs	40
Coq.Reals.Rtrigo_factsX.tan_sin	40
Coq.Reals.Rtrigo_factsX.tan_sin_opp	40
Coq.Reals.Rtrigo_factsX.tan_cos	40
Coq.Reals.Rtrigo_factsX.tan_cos_opp	40
Coq.Reals.Rtrigo_factsX.sin_tan	40
Coq.Reals.Rtrigo_factsX.cos_tan	40
Coq.Reals.Rtrigo_factsX.sin_pi_minus	40	0.0.0.0	search with cache (only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0858681201935	4
Coq.Reals.Rtrigo_factsX.sin_pi_plus	40	0.0.0.0	search with cache (only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.090010881424	4
Coq.Reals.Rtrigo_factsX.cos_pi_minus	40
Coq.Reals.Rtrigo_factsX.cos_pi_plus	40	0.0.0.0	search with cache (only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0823938846588	4
Coq.Reals.Rtrigo_factsX.tan_pi_minus	40
Coq.Reals.Rtrigo_factsX.tan_pi_plus	40	2.6.5.1.0.0	search with cache (only 1: unfold tan; only 1: rewrite sin_plus; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: field).	7.9846739769	1543
Coq.Reals.RfunctionsX.INR_fact_neq_0	40
Coq.Reals.RfunctionsX.fact_simpl	40		search with cache ().	0.0089271068573	0
Coq.Reals.RfunctionsX.simpl_fact	40
Coq.Reals.RfunctionsX.pow_O	40		search with cache ().	0.00957489013672	0
Coq.Reals.RfunctionsX.pow_1	40	4	search with cache (only 1: auto with real).	0.0219171047211	5
Coq.Reals.RfunctionsX.pow_add	40	1.11.15.0.1	search with cache (only 1: elim n; only 1: auto with real; only 1: apply Rminus_diag_uniq; only 1: repeat rewrite Rmult_assoc; only 1: auto with real).	15.1350758076	5114
Coq.Reals.RfunctionsX.Rpow_mult_distr	40
Coq.Reals.RfunctionsX.pow_nonzero	40
Coq.Reals.RfunctionsX.pow_RN_plus	40	12.14.1	search with cache (only 1: elim n; only 1: auto with real; only 1: repeat rewrite Rmult_assoc).	8.52471899986	1548
Coq.Reals.RfunctionsX.pow_lt	40
Coq.Reals.RfunctionsX.Rlt_pow_R1	40
Coq.Reals.RfunctionsX.Rlt_pow	40
Coq.Reals.RfunctionsX.tech_pow_Rmult	40		search with cache ().	0.0103800296783	0
Coq.Reals.RfunctionsX.tech_pow_Rplus	40	0.11.6	search with cache (only 1: case n; only 1: ring; only 1: ring).	0.988775014877	269
Coq.Reals.RfunctionsX.poly	40
Coq.Reals.RfunctionsX.Power_monotonic	40
Coq.Reals.RfunctionsX.RPow_abs	40
Coq.Reals.RfunctionsX.Pow_x_infinity	40
Coq.Reals.RfunctionsX.pow_ne_zero	40
Coq.Reals.RfunctionsX.Rinv_pow	40
Coq.Reals.RfunctionsX.pow_lt_1_zero	40
Coq.Reals.RfunctionsX.pow_R1	40
Coq.Reals.RfunctionsX.pow_Rsqr	40
Coq.Reals.RfunctionsX.pow_le	40
Coq.Reals.RfunctionsX.pow_1_even	40
Coq.Reals.RfunctionsX.pow_1_odd	40	3.0.1.1.9.3	search with cache (only 1: rewrite pow_add; only 1: induction n; only 1: unfold IZR; only 1: unfold IPR; only 1: ring; only 1: ring [ IHn ]).	3.46320700645	833
Coq.Reals.RfunctionsX.pow_1_abs	40
Coq.Reals.RfunctionsX.pow_mult	40
Coq.Reals.RfunctionsX.pow_incr	40
Coq.Reals.RfunctionsX.pow_R1_Rle	40
Coq.Reals.RfunctionsX.Rle_pow	40
Coq.Reals.RfunctionsX.pow1	40	0.2.10	search with cache (only 1: induction n as [| n Hrecn]; only 1: rewrite Hrecn; only 1: rewrite Rmult_1_l).	0.426911115646	81
Coq.Reals.RfunctionsX.pow_Rabs	40
Coq.Reals.RfunctionsX.pow_maj_Rabs	40
Coq.Reals.RfunctionsX.Rsqr_pow2	40	2.4	search with cache (only 1: rewrite <- Rmult_assoc; only 1: auto with real).	0.0447559356689	8
Coq.Reals.RfunctionsX.intP	40
Coq.Reals.RfunctionsX.Zpower_NR0	40
Coq.Reals.RfunctionsX.powerRZ_O	40		search with cache ().	0.00971388816833	0
Coq.Reals.RfunctionsX.powerRZ_1	40	4	search with cache (only 1: auto with real).	0.0231029987335	5
Coq.Reals.RfunctionsX.powerRZ_NOR	40
Coq.Reals.RfunctionsX.powerRZ_pos_sub	40
Coq.Reals.RfunctionsX.powerRZ_add	40
Coq.Reals.RfunctionsX.Zpower_nat_powerRZ	40
Coq.Reals.RfunctionsX.Zpower_pos_powerRZ	40
Coq.Reals.RfunctionsX.powerRZ_lt	40
Coq.Reals.RfunctionsX.powerRZ_le	40	0.0.0.0.3.0	search with cache (only 1: case z; only 1: red; only 1: left; only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.273041963577	9
Coq.Reals.RfunctionsX.Zpower_nat_powerRZ_absolu	40
Coq.Reals.RfunctionsX.powerRZ_R1	40
Coq.Reals.RfunctionsX.pow_powerRZ	40	0.7	search with cache (only 1: induction n as [| n Hrecn]; only 1: rewrite SuccNat2Pos.id_succ).	0.137807130814	14
Coq.Reals.RfunctionsX.powerRZ_ind	40
Coq.Reals.RfunctionsX.powerRZ_inv	40
Coq.Reals.RfunctionsX.powerRZ_neg	40
Coq.Reals.RfunctionsX.powerRZ_mult_distr	40
Coq.Reals.RfunctionsX.GP_finite	40
Coq.Reals.RfunctionsX.sum_f_R0_triangle	40
Coq.Reals.RfunctionsX.R_dist_pos	40
Coq.Reals.RfunctionsX.R_dist_sym	40
Coq.Reals.RfunctionsX.R_dist_refl	40
Coq.Reals.RfunctionsX.R_dist_eq	40	10.13.1.0	search with cache (only 1: unfold R_dist; only 1: split_Rabs; only 1: ring; only 1: ring).	16.9125709534	3614
Coq.Reals.RfunctionsX.R_dist_tri	40
Coq.Reals.RfunctionsX.R_dist_plus	40
Coq.Reals.RfunctionsX.R_dist_mult_l	40
Coq.Reals.Cos_plusX.Majxy_cv_R0	40
Coq.Reals.Cos_plusX.reste1_maj	40
Coq.Reals.Cos_plusX.reste2_maj	40
Coq.Reals.Cos_plusX.reste1_cv_R0	40
Coq.Reals.Cos_plusX.reste2_cv_R0	40
Coq.Reals.Cos_plusX.reste_cv_R0	40
Coq.Reals.Cos_plusX.cos_plus	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.seq_cv_proper	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.seq_cv_morph	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.Rfloor	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.FQ_dense	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.Qabs_Rabs	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.CReal_cv_self	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.Rcauchy_limit	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.Rcauchy_complete	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.CRealLtIsLinear	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.CRealAbsLUB	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.CRealComplete	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.QCauchySeq_bounded_prop	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.factorDenom	40	1.4	search with cache (only 1: rewrite Qmult_comm; only 1: unfold Qred, Qeq in *).	0.134055137634	15
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult	40		search with cache ().	0.0112841129303	0
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_proper_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_0_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CRealLt_0_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_lt_0_compat_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_bound_indep	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_plus_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_plus_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_opp_mult_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_1_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_isRingExt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_isRing	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_morph_T	40	6	search with cache (only 1: apply CReal_isRingExt).	4.36231803894	113
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_opp_morph_Proper	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CRealEq_sym; only 1: apply CRealEq_sym; only 1: apply CRealEq_sym; only 1: apply CReal_plus_opp_r; only 1: apply CReal_plus_proper_r).	0.583058834076	13
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_opp_morph_T	40	2	search with cache (only 1: apply CReal_isRingExt).	0.828585147858	3
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_minus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_minus_morph_T	40	0.0.0	search with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0).	0.179742097855	3
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_1_r	40	4.2	search with cache (only 1: rewrite CReal_mult_comm; only 1: apply CReal_mult_1_l).	4.20681500435	13
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_opp_mult_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_lt_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_abs_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CRealArchimedean	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.Rup_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CRealLtDisjunctEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CRealPosShift_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_pos_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_neg_lt_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_0_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_linear_shift	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_linear_shift_eq	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_l_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_1	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_mult_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.Rinv_eq_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_eq_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_eq_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_eq_compat_r	40	3	search with cache (only 1: rewrite H).	0.41118812561	44
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_pos_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_compat_l_half	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_invQ	40	36	search with cache (only 1: apply CReal_mult_1_l).	34.0014250278	2091
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CRealQ_dense	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.inject_Q_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.Rup_nat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_0_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CauchyAbsStable	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_neg_nth	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_nonneg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_le_abs	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_opp	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_appart_0	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_le	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_minus_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_triang	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_triang_inv	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_triang_inv2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_gt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.Rabs_def1	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_def2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_double	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_lub	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_glb	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_lt_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.posPartAbsMax	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.negPartAbsMin	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_max_mult_neg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_lub_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLtEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLtForget	40	3	search with cache (only 1: destruct H).	0.0392909049988	4
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_lpo_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLe_not_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealEq_diff	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_above	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_above_same	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_asym	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_irrefl	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLe_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealEq_refl	40	0.0.0.0.76	search with cache (only 1: split; only 1: intro abs; only 1: pose proof (CRealLt_asym x x abs); only 1: intro abs; only 1: pose proof (CRealLt_asym x x abs)).	32.2770991325	8933
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealEq_sym	40	1	search with cache (only 1: destruct H).	0.0734648704529	15
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_le_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_lt_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealEq_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealEq_relT	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealGt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_appart_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLtProp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealGe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLe_proper_l	40	3.5.5	search with cache (only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y)).	3.14454913139	237
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLe_proper_r	40	2.3.8	search with cache (only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph x y H z z)).	1.83771204948	151
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.ConstCauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_0_1	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_injectQPos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLtQ	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLtQopp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_compare	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp	40		search with cache ().	0.00946402549744	0
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.belowMultiple	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_0_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_lt_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_le_reg_l	40	1.13.5	search with cache (only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l).	2.11225581169	715
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_le_reg_r	40	1.3.0.0.0	search with cache (only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l).	0.44620513916	9
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_le_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_le_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_opp_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_opp_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_proper_l	40	0.0.0.0.0.0.2.0	search with cache (only 1: apply (CRealEq_trans _ (z + x)); only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H).	4.9414730072	305
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp_0	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp_plus_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp_involutive	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp_gt_lt_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp_ge_le_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_one	40		search with cache ().	0.0122010707855	0
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.opp_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.lt_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.le_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_le	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Z_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.opp_inject_Z	40
Coq.Reals.Cos_relX.cos_plus_form	40
Coq.Reals.Cos_relX.pow_sqr	40
Coq.Reals.Cos_relX.A1_cvg	40
Coq.Reals.Cos_relX.C1_cvg	40
Coq.Reals.Cos_relX.B1_cvg	40
Coq.Reals.RsigmaX.sigma_split	40
Coq.Reals.RsigmaX.sigma_diff	40
Coq.Reals.RsigmaX.sigma_diff_neg	40
Coq.Reals.RsigmaX.sigma_first	40
Coq.Reals.RsigmaX.sigma_last	40
Coq.Reals.RsigmaX.sigma_eq_arg	40
Coq.Reals.DiscrRX.Rlt_R0_R2	40	14	search with cache (only 1: apply Rlt_0_2).	1.56435108185	406
Coq.Reals.DiscrRX.IZR_eq	40		search with cache ().	0.0104441642761	0
Coq.Reals.RgeomX.distance_refl	40
Coq.Reals.RgeomX.distance_symm	40
Coq.Reals.RgeomX.law_cosines	40
Coq.Reals.RgeomX.triangle	40
Coq.Reals.RgeomX.translation_0	40
Coq.Reals.RgeomX.isometric_translation	40
Coq.Reals.RgeomX.rotation_0	40
Coq.Reals.RgeomX.rotation_PI2	40
Coq.Reals.RgeomX.isometric_rotation_0	40
Coq.Reals.RgeomX.isometric_rotation	40
Coq.Reals.RgeomX.isometric_rot_trans	40
Coq.Reals.RgeomX.isometric_trans_rot	40
Coq.Reals.RtopologyX.interior_P1	40
Coq.Reals.RtopologyX.interior_P2	40		search with cache ().	0.0102279186249	0
Coq.Reals.RtopologyX.adherence_P1	40
Coq.Reals.RtopologyX.included_trans	40	13	search with cache (only 1: red).	0.173644065857	60
Coq.Reals.RtopologyX.interior_P3	40
Coq.Reals.RtopologyX.complementary_P1	40	0	search with cache (only 1: destruct H).	0.0231499671936	1
Coq.Reals.RtopologyX.adherence_P2	40
Coq.Reals.RtopologyX.adherence_P3	40
Coq.Reals.RtopologyX.open_set_P1	40
Coq.Reals.RtopologyX.closed_set_P1	40
Coq.Reals.RtopologyX.neighbourhood_P1	40	6.4.39	search with cache (only 1: elim H0; only 1: exists x0; only 1: unfold included).	3.60397195816	2838
Coq.Reals.RtopologyX.open_set_P2	40
Coq.Reals.RtopologyX.open_set_P3	40
Coq.Reals.RtopologyX.open_set_P4	40		search with cache ().	0.0129110813141	0
Coq.Reals.RtopologyX.open_set_P5	40		search with cache ().	0.0134401321411	0
Coq.Reals.RtopologyX.disc_P1	40
Coq.Reals.RtopologyX.continuity_P1	40
Coq.Reals.RtopologyX.continuity_P2	40
Coq.Reals.RtopologyX.continuity_P3	40
Coq.Reals.RtopologyX.Rsepare	40
Coq.Reals.RtopologyX.restriction_family	40
Coq.Reals.RtopologyX.family_P1	40
Coq.Reals.RtopologyX.open_set_P6	40	4.0.12.17	search with cache (only 1: red; only 1: elim H0; only 1: clear H0; only 1: apply neighbourhood_P1 with D1).	11.6228740215	3296
Coq.Reals.RtopologyX.compact_P1	40
Coq.Reals.RtopologyX.compact_P2	40
Coq.Reals.RtopologyX.compact_EMP	40
Coq.Reals.RtopologyX.compact_eqDom	40
Coq.Reals.RtopologyX.compact_P3	40
Coq.Reals.RtopologyX.compact_P4	40
Coq.Reals.RtopologyX.compact_P5	40
Coq.Reals.RtopologyX.compact_carac	40
Coq.Reals.RtopologyX.continuity_compact	40
Coq.Reals.RtopologyX.prolongement_C0	40
Coq.Reals.RtopologyX.continuity_ab_maj	40
Coq.Reals.RtopologyX.continuity_ab_min	40
Coq.Reals.RtopologyX.ValAdh_un_exists	40
Coq.Reals.RtopologyX.ValAdh_un_prop	40
Coq.Reals.RtopologyX.adherence_P4	40
Coq.Reals.RtopologyX.compact_P6	40
Coq.Reals.RtopologyX.Bolzano_Weierstrass	40
Coq.Reals.RtopologyX.is_lub_u	40
Coq.Reals.RtopologyX.domain_P1	40
Coq.Reals.RtopologyX.Heine	40
Coq.Reals.Rtrigo_calcX.tan_PI	40	1.5.0.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: ring).	0.135898828506	10
Coq.Reals.Rtrigo_calcX.sin_3PI2	40
Coq.Reals.Rtrigo_calcX.tan_2PI	40
Coq.Reals.Rtrigo_calcX.sin_cos_PI4	40
Coq.Reals.Rtrigo_calcX.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calcX.sin_PI6_cos_PI3	40	3.1.0.2.0	search with cache (only 1: replace (PI / 6) with (PI / 2 - PI / 3) by field; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.659197807312	71
Coq.Reals.Rtrigo_calcX.PI6_RGT_0	40
Coq.Reals.Rtrigo_calcX.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calcX.sin_PI6	40
Coq.Reals.Rtrigo_calcX.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calcX.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calcX.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calcX.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calcX.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calcX.PI4_RGT_0	40	5.18	search with cache (only 1: generalize PI4_RLT_PI2; only 1: Lra.lra).	2.0124669075	752
Coq.Reals.Rtrigo_calcX.cos_PI4	40
Coq.Reals.Rtrigo_calcX.sin_PI4	40
Coq.Reals.Rtrigo_calcX.tan_PI4	40
Coq.Reals.Rtrigo_calcX.cos_3PI4	40
Coq.Reals.Rtrigo_calcX.sin_3PI4	40
Coq.Reals.Rtrigo_calcX.cos_PI6	40
Coq.Reals.Rtrigo_calcX.tan_PI6	40
Coq.Reals.Rtrigo_calcX.sin_PI3	40
Coq.Reals.Rtrigo_calcX.cos_PI3	40
Coq.Reals.Rtrigo_calcX.tan_PI3	40
Coq.Reals.Rtrigo_calcX.sin_2PI3	40
Coq.Reals.Rtrigo_calcX.cos_2PI3	40
Coq.Reals.Rtrigo_calcX.tan_2PI3	40
Coq.Reals.Rtrigo_calcX.cos_5PI4	40
Coq.Reals.Rtrigo_calcX.sin_5PI4	40	0.1.1.5.0.0.2.1	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	5.02182292938	836
Coq.Reals.Rtrigo_calcX.sin_cos5PI4	40	0.0.1.0.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite neg_sin; only 1: rewrite neg_cos; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4).	0.370836019516	40
Coq.Reals.Rtrigo_calcX.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calcX.Rgt_2PI_0	40
Coq.Reals.Rtrigo_calcX.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calcX.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calcX.rad_deg	40
Coq.Reals.Rtrigo_calcX.toRad_inj	40
Coq.Reals.Rtrigo_calcX.deg_rad	40
Coq.Reals.Rtrigo_calcX.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calcX.sin_lb_ge_0	40
Coq.Reals.SeqSeriesX.sum_maj1	40
Coq.Reals.SeqSeriesX.Rseries_CV_comp	40
Coq.Reals.SeqSeriesX.Cesaro	40
Coq.Reals.SeqSeriesX.Cesaro_1	40
Coq.Reals.Rbasic_funX.Rmin_case	40
Coq.Reals.Rbasic_funX.Rmin_case_strong	40	9.0.0	search with cache (only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto with real).	8.79300498962	584
Coq.Reals.Rbasic_funX.Rmin_Rgt_l	40
Coq.Reals.Rbasic_funX.Rmin_Rgt_r	40	0.0	search with cache (only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]).	0.0957670211792	2
Coq.Reals.Rbasic_funX.Rmin_Rgt	40
Coq.Reals.Rbasic_funX.Rmin_l	40
Coq.Reals.Rbasic_funX.Rmin_r	40	0.0	search with cache (only 1: unfold Rmin; only 1: case (Rle_dec x y)).	0.0505299568176	2
Coq.Reals.Rbasic_funX.Rmin_left	40
Coq.Reals.Rbasic_funX.Rmin_right	40	1.0	search with cache (only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym).	0.0359568595886	3
Coq.Reals.Rbasic_funX.Rle_min_compat_r	40
Coq.Reals.Rbasic_funX.Rle_min_compat_l	40	2.0.0.0.0.0.0.0	search with cache (only 1: do 2 (apply Rmin_case_strong; intro); only 1: apply Rle_trans with z; only 1: apply Rle_trans with z; only 1: apply Rle_trans with z; only 1: apply Rle_trans with z; only 1: apply Rle_trans with z; only 1: apply Rle_trans with z; only 1: eauto using Rle_trans, Rle_refl).	0.322474956512	13
Coq.Reals.Rbasic_funX.Rmin_comm	40	1.0.1.0.0	search with cache (only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym).	0.0759451389313	7
Coq.Reals.Rbasic_funX.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_funX.Rmin_pos	40	0	search with cache (only 1: apply Rmin_Rgt_r).	0.0318620204926	1
Coq.Reals.Rbasic_funX.Rmin_glb	40	1.1.0.0.0.0.1	search with cache (only 1: unfold Rmin; only 1: case (Rle_dec y x); only 1: case (Rle_dec y x); only 1: case (Rle_dec y x); only 1: case (Rle_dec y x); only 1: case (Rle_dec x y); only 1: case (Rle_dec x y)).	0.632852077484	18
Coq.Reals.Rbasic_funX.Rmin_glb_lt	40	0.0	search with cache (only 1: unfold Rmin; only 1: case (Rle_dec x y)).	0.0442748069763	2
Coq.Reals.Rbasic_funX.Rmax_case	40
Coq.Reals.Rbasic_funX.Rmax_case_strong	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: case (Rle_dec r1 r2); only 1: case (Rle_dec r1 r2); only 1: case (Rle_dec r1 r2); only 1: case (Rle_dec r1 r2); only 1: case (Rle_dec r1 r2); only 1: case (Rle_dec r1 r2); only 1: auto with real).	0.215523958206	11
Coq.Reals.Rbasic_funX.Rmax_Rle	40
Coq.Reals.Rbasic_funX.Rmax_comm	40
Coq.Reals.Rbasic_funX.Rmax_l	40
Coq.Reals.Rbasic_funX.Rmax_r	40	0.0.1.0.6	search with cache (only 1: destruct (Rle_or_lt x y) as [H1| H1]; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: unfold Rmax; only 1: case (Rle_dec x y)).	9.43736696243	843
Coq.Reals.Rbasic_funX.Rmax_left	40	1.1.0.0.0.0.0.0	search with cache (only 1: unfold Rmax; only 1: case (Rle_dec y x); only 1: case (Rle_dec y x); only 1: case (Rle_dec y x); only 1: case (Rle_dec y x); only 1: case (Rle_dec y x); only 1: case (Rle_dec x y); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.301479101181	17
Coq.Reals.Rbasic_funX.Rmax_right	40	1.0	search with cache (only 1: apply Rmax_case_strong; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.112994194031	3
Coq.Reals.Rbasic_funX.Rle_max_compat_r	40	1.2.0.1.1	search with cache (only 1: apply Rmax_case_strong; only 1: apply Rmax_case_strong; only 1: apply Rle_trans with z; only 1: eauto using Rle_trans, Rle_refl; only 1: apply Rmax_case_strong).	6.99096989632	310
Coq.Reals.Rbasic_funX.Rle_max_compat_l	40	2.0.0.0.0.0.0.0	search with cache (only 1: do 2 (apply Rmax_case_strong; intro); only 1: apply Rle_trans with z; only 1: apply Rle_trans with z; only 1: apply Rle_trans with z; only 1: apply Rle_trans with z; only 1: apply Rle_trans with z; only 1: apply Rle_trans with z; only 1: eauto using Rle_trans, Rle_refl).	0.34051990509	13
Coq.Reals.Rbasic_funX.RmaxRmult	40
Coq.Reals.Rbasic_funX.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_funX.Rmax_lub	40	0.1	search with cache (only 1: unfold Rmax; only 1: case (Rle_dec x y)).	0.0638699531555	3
Coq.Reals.Rbasic_funX.Rmax_lub_lt	40	4	search with cache (only 1: apply Rmax_case_strong).	0.0291440486908	5
Coq.Reals.Rbasic_funX.Rmax_Rlt	40
Coq.Reals.Rbasic_funX.Rmax_neg	40	0.1	search with cache (only 1: unfold Rmax; only 1: case (Rle_dec x y)).	0.06001496315	3
Coq.Reals.Rbasic_funX.Rcase_abs	40
Coq.Reals.Rbasic_funX.Rabs_R0	40
Coq.Reals.Rbasic_funX.Rabs_R1	40
Coq.Reals.Rbasic_funX.Rabs_no_R0	40
Coq.Reals.Rbasic_funX.Rabs_left	40
Coq.Reals.Rbasic_funX.Rabs_right	40
Coq.Reals.Rbasic_funX.Rabs_left1	40
Coq.Reals.Rbasic_funX.Rabs_pos	40
Coq.Reals.Rbasic_funX.Rle_abs	40
Coq.Reals.Rbasic_funX.Rabs_le	40
Coq.Reals.Rbasic_funX.Rabs_pos_eq	40	3.4	search with cache (only 1: rewrite Rabs_right; only 1: auto with real).	0.209217786789	24
Coq.Reals.Rbasic_funX.Rabs_Rabsolu	40
Coq.Reals.Rbasic_funX.Rabs_pos_lt	40
Coq.Reals.Rbasic_funX.Rabs_minus_sym	40
Coq.Reals.Rbasic_funX.Rabs_mult	40
Coq.Reals.Rbasic_funX.Rabs_Rinv	40
Coq.Reals.Rbasic_funX.Rabs_Ropp	40
Coq.Reals.Rbasic_funX.Rabs_triang	40
Coq.Reals.Rbasic_funX.Rabs_triang_inv	40
Coq.Reals.Rbasic_funX.Rabs_triang_inv2	40
Coq.Reals.Rbasic_funX.Rabs_def1	40
Coq.Reals.Rbasic_funX.Rabs_def2	40
Coq.Reals.Rbasic_funX.RmaxAbs	40
Coq.Reals.Rbasic_funX.Rabs_Zabs	40
Coq.Reals.Rbasic_funX.abs_IZR	40
Coq.Reals.Rbasic_funX.Ropp_Rmax	40
Coq.Reals.Rbasic_funX.Ropp_Rmin	40	2.7.2.7.0	search with cache (only 1: apply Rmax_case_strong; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: apply Rmin_case_strong; only 1: auto with real).	38.7133250237	4136
Coq.Reals.Rbasic_funX.Rmax_assoc	40
Coq.Reals.Rbasic_funX.Rminmax	40	1.2.0.24.1	search with cache (only 1: unfold Rmin; only 1: unfold Rle; only 1: unfold Rmax; only 1: destruct (Rle_dec a b); only 1: auto with real).	13.8243927956	4525
Coq.Reals.Rbasic_funX.Rmin_assoc	40
Coq.Reals.Ranalysis5X.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5X.derivable_pt_id_interv	40	38	search with cache (only 1: apply derivable_id).	4.73282003403	1014
Coq.Reals.Ranalysis5X.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5X.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5X.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5X.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5X.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5X.IVT_interv	40
Coq.Reals.Ranalysis5X.f_interv_is_interv	40
Coq.Reals.Ranalysis5X.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5X.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5X.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5X.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5X.derivable_pt_recip_interv_prelim1	40	0	search with cache (only 1: assert (x_encad : f lb <= x <= f ub) by lra).	0.135787963867	1
Coq.Reals.Ranalysis5X.derivable_pt_recip_interv_prelim1_decr	40	9	search with cache (only 1: intuition).	0.311315774918	10
Coq.Reals.Ranalysis5X.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5X.derivable_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5X.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5X.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5X.derive_pt_recip_interv_prelim1_1	40	0.0	search with cache (only 1: assert (x_encad : f lb <= x <= f ub) by lra; only 1: assert (x_encad : f lb <= x <= f ub) by lra).	0.299927949905	2
Coq.Reals.Ranalysis5X.derive_pt_recip_interv_prelim1_1_decr	40	19.19	search with cache (only 1: intuition; only 1: intuition).	21.1827020645	1890
Coq.Reals.Ranalysis5X.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5X.derive_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5X.ub_lt_2_pos	40	3.13	search with cache (only 1: unfold Rdiv; only 1: lra).	0.935039997101	252
Coq.Reals.Ranalysis5X.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5X.derivable_pt_lim_CVU	40
Coq.Reals.Ranalysis1X.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1X.continuity_pt_plus	40
Coq.Reals.Ranalysis1X.continuity_pt_opp	40
Coq.Reals.Ranalysis1X.continuity_pt_minus	40
Coq.Reals.Ranalysis1X.continuity_pt_mult	40
Coq.Reals.Ranalysis1X.continuity_pt_const	40
Coq.Reals.Ranalysis1X.continuity_pt_scal	40
Coq.Reals.Ranalysis1X.continuity_pt_inv	40
Coq.Reals.Ranalysis1X.div_eq_inv	40		search with cache ().	0.0148861408234	0
Coq.Reals.Ranalysis1X.continuity_pt_div	40
Coq.Reals.Ranalysis1X.continuity_pt_comp	40
Coq.Reals.Ranalysis1X.continuity_plus	40
Coq.Reals.Ranalysis1X.continuity_opp	40
Coq.Reals.Ranalysis1X.continuity_minus	40
Coq.Reals.Ranalysis1X.continuity_mult	40
Coq.Reals.Ranalysis1X.continuity_const	40
Coq.Reals.Ranalysis1X.continuity_scal	40
Coq.Reals.Ranalysis1X.continuity_inv	40	2.17	search with cache (only 1: intros H1; only 1: apply continuity_pt_inv).	5.89160108566	1075
Coq.Reals.Ranalysis1X.continuity_div	40	0.0.0.7	search with cache (only 1: intro; only 1: rewrite (div_eq_inv f1 f2); only 1: apply continuity_pt_mult; only 1: apply continuity_pt_inv).	0.469439983368	24
Coq.Reals.Ranalysis1X.continuity_comp	40
Coq.Reals.Ranalysis1X.uniqueness_step1	40
Coq.Reals.Ranalysis1X.uniqueness_step2	40
Coq.Reals.Ranalysis1X.uniqueness_step3	40
Coq.Reals.Ranalysis1X.uniqueness_limite	40
Coq.Reals.Ranalysis1X.derive_pt_eq	40
Coq.Reals.Ranalysis1X.derive_pt_eq_0	40
Coq.Reals.Ranalysis1X.derive_pt_eq_1	40	1	search with cache (only 1: unfold derive_pt).	0.0416297912598	2
Coq.Reals.Ranalysis1X.derive_pt_D_in	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1X.derivable_derive	40		search with cache ().	0.0132591724396	0
Coq.Reals.Ranalysis1X.derivable_continuous_pt	40
Coq.Reals.Ranalysis1X.derivable_continuous	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_opp_fwd	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_opp_rev	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_mirr_fwd	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_mirr_rev	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1X.derivable_pt_id	40
Coq.Reals.Ranalysis1X.derivable_pt_comp	40
Coq.Reals.Ranalysis1X.derivable_pt_xeq	40		search with cache ().	0.013827085495	0
Coq.Reals.Ranalysis1X.derivable_pt_opp	40
Coq.Reals.Ranalysis1X.derivable_pt_opp_rev	40	2.0.1.6.0.0	search with cache (only 1: unfold derivable_pt in H; only 1: exists (- l); only 1: unfold derivable_pt_abs; only 1: apply derivable_pt_lim_ext with (f := fun x => - - f x); only 1: rewrite Ropp_involutive; only 1: apply derivable_pt_lim_opp).	1.32433104515	261
Coq.Reals.Ranalysis1X.derivable_pt_mirr	40
Coq.Reals.Ranalysis1X.derivable_pt_mirr_rev	40	1.0.0.0.10.0.0	search with cache (only 1: unfold derivable_pt in H; only 1: exists (- l); only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive).	8.55183601379	1289
Coq.Reals.Ranalysis1X.derivable_pt_mirr_prem	40	0.0.0.0.0	search with cache (only 1: unfold derivable_pt in H; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_rev; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive).	0.167577981949	5
Coq.Reals.Ranalysis1X.derivable_pt_plus	40
Coq.Reals.Ranalysis1X.derivable_pt_minus	40
Coq.Reals.Ranalysis1X.derivable_pt_mult	40
Coq.Reals.Ranalysis1X.derivable_pt_const	40
Coq.Reals.Ranalysis1X.derivable_pt_scal	40
Coq.Reals.Ranalysis1X.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1X.derivable_id	40	0.0.0	search with cache (only 1: intros EQ; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0504591464996	3
Coq.Reals.Ranalysis1X.derivable_comp	40
Coq.Reals.Ranalysis1X.derivable_opp	40
Coq.Reals.Ranalysis1X.derivable_mirr	40
Coq.Reals.Ranalysis1X.derivable_plus	40
Coq.Reals.Ranalysis1X.derivable_minus	40
Coq.Reals.Ranalysis1X.derivable_mult	40
Coq.Reals.Ranalysis1X.derivable_const	40	0.0.0.10	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.472734928131	179
Coq.Reals.Ranalysis1X.derivable_scal	40
Coq.Reals.Ranalysis1X.derivable_Rsqr	40	0.0.0.2	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.149041175842	14
Coq.Reals.Ranalysis1X.derive_pt_id	40
Coq.Reals.Ranalysis1X.derive_pt_comp	40
Coq.Reals.Ranalysis1X.derive_pt_opp	40
Coq.Reals.Ranalysis1X.derive_pt_opp_rev	40
Coq.Reals.Ranalysis1X.derive_pt_mirr	40
Coq.Reals.Ranalysis1X.derive_pt_mirr_rev	40
Coq.Reals.Ranalysis1X.derive_pt_plus	40
Coq.Reals.Ranalysis1X.derive_pt_minus	40
Coq.Reals.Ranalysis1X.derive_pt_mult	40	0.4.2.14	search with cache (only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr2) as H4; only 1: unfold derive_pt; only 1: apply derivable_pt_lim_mult).	1.37970113754	412
Coq.Reals.Ranalysis1X.derive_pt_const	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0).	0.205008983612	9
Coq.Reals.Ranalysis1X.derive_pt_scal	40	3.6.1.0.2	search with cache (only 1: apply derive_pt_eq_0; only 1: pose proof (derivable_pt_lim_const a x) as H0; only 1: unfold mult_real_fct, mult_fct, fct_cte; only 1: apply derivable_pt_lim_scal; only 1: pose proof (proj2_sig pr) as H1).	5.14156007767	967
Coq.Reals.Ranalysis1X.derive_pt_Rsqr	40	2.9	search with cache (only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.370818853378	54
Coq.Reals.Ranalysis1X.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1X.derivable_pt_pow	40
Coq.Reals.Ranalysis1X.derivable_pow	40	0.0.0.17	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	15.4273819923	1951
Coq.Reals.Ranalysis1X.derive_pt_pow	40
Coq.Reals.Ranalysis1X.pr_nu	40	2.8	search with cache (only 1: apply derive_pt_eq_0; only 1: unfold derive_pt).	0.222269058228	39
Coq.Reals.Ranalysis1X.pr_nu_xeq	40	0.2.0.5.25.1	search with cache (only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_opp_rev; only 1: pose proof (proj2_sig pr1) as H3; only 1: apply derivable_pt_lim_opp_fwd; only 1: unfold derive_pt; only 1: rewrite Ropp_involutive).	37.3218719959	16039
Coq.Reals.Ranalysis1X.deriv_maximum	40
Coq.Reals.Ranalysis1X.deriv_minimum	40
Coq.Reals.Ranalysis1X.deriv_constant2	40
Coq.Reals.Ranalysis1X.nonneg_derivative_0	40
Coq.Reals.BinomialX.pascal_step1	40
Coq.Reals.BinomialX.pascal_step2	40
Coq.Reals.BinomialX.pascal_step3	40
Coq.Reals.BinomialX.pascal	40
Coq.Reals.BinomialX.binomial	40
Coq.Reals.PSeries_regX.Boule_convex	40
Coq.Reals.PSeries_regX.boule_of_interval	40
Coq.Reals.PSeries_regX.boule_in_interval	40
Coq.Reals.PSeries_regX.Ball_in_inter	40
Coq.Reals.PSeries_regX.Boule_center	40
Coq.Reals.PSeries_regX.CVN_CVU	40
Coq.Reals.PSeries_regX.CVU_continuity	40
Coq.Reals.PSeries_regX.continuity_pt_finite_SF	40
Coq.Reals.PSeries_regX.SFL_continuity_pt	40
Coq.Reals.PSeries_regX.SFL_continuity	40
Coq.Reals.PSeries_regX.CVN_R_CVS	40
Coq.Reals.PSeries_regX.CVU_cv	40
Coq.Reals.PSeries_regX.CVU_ext_lim	40
Coq.Reals.PSeries_regX.CVU_derivable	40
Coq.Reals.SeqPropX.growing_cv	40
Coq.Reals.SeqPropX.decreasing_growing	40
Coq.Reals.SeqPropX.decreasing_cv	40
Coq.Reals.SeqPropX.ub_to_lub	40
Coq.Reals.SeqPropX.lb_to_glb	40	1	search with cache (only 1: apply completeness).	0.0407319068909	2
Coq.Reals.SeqPropX.maj_ss	40
Coq.Reals.SeqPropX.min_ss	40
Coq.Reals.SeqPropX.Wn_decreasing	40
Coq.Reals.SeqPropX.Vn_growing	40
Coq.Reals.SeqPropX.Vn_Un_Wn_order	40
Coq.Reals.SeqPropX.min_maj	40
Coq.Reals.SeqPropX.maj_min	40
Coq.Reals.SeqPropX.cauchy_maj	40
Coq.Reals.SeqPropX.cauchy_opp	40
Coq.Reals.SeqPropX.cauchy_min	40	0.0.0.0.1.1.1.0.5.6	search with cache (only 1: unfold has_lb; only 1: apply cauchy_bound; only 1: unfold Cauchy_crit; only 1: unfold R_dist; only 1: elim (H eps H0); only 1: exists x; only 1: unfold opp_seq; only 1: rewrite <- Rabs_Ropp; only 1: replace (- (- Un n - - Un m)) with (Un n - Un m); only 1: ring).	3.37028694153	987
Coq.Reals.SeqPropX.maj_cv	40
Coq.Reals.SeqPropX.min_cv	40
Coq.Reals.SeqPropX.cond_eq	40
Coq.Reals.SeqPropX.not_Rlt	40	4.3	search with cache (only 1: red; only 1: generalize (total_order_T r1 r2)).	0.844945907593	9
Coq.Reals.SeqPropX.approx_maj	40
Coq.Reals.SeqPropX.approx_min	40
Coq.Reals.SeqPropX.UL_sequence	40
Coq.Reals.SeqPropX.CV_plus	40
Coq.Reals.SeqPropX.cv_cvabs	40
Coq.Reals.SeqPropX.CV_Cauchy	40
Coq.Reals.SeqPropX.maj_by_pos	40
Coq.Reals.SeqPropX.CV_mult	40
Coq.Reals.SeqPropX.tech9	40
Coq.Reals.SeqPropX.tech13	40
Coq.Reals.SeqPropX.growing_ineq	40
Coq.Reals.SeqPropX.CV_opp	40
Coq.Reals.SeqPropX.decreasing_ineq	40
Coq.Reals.SeqPropX.CV_minus	40
Coq.Reals.SeqPropX.cv_infty_cv_R0	40
Coq.Reals.SeqPropX.decreasing_prop	40	10.0.0.3	search with cache (only 1: induction n as [| n Hrecn]; only 1: induction m as [| m Hrecm]; only 1: inversion H0; only 1: apply Rle_trans with (Un n)).	29.1612069607	1442
Coq.Reals.SeqPropX.cv_speed_pow_fact	40
Coq.Reals.Rtrigo1X.CVN_R_cos	40
Coq.Reals.Rtrigo1X.continuity_cos	40
Coq.Reals.Rtrigo1X.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1X.PI_2_aux	40
Coq.Reals.Rtrigo1X.cos_pi2	40
Coq.Reals.Rtrigo1X.pi2_int	40
Coq.Reals.Rtrigo1X.cos_minus	40
Coq.Reals.Rtrigo1X.sin2_cos2	40
Coq.Reals.Rtrigo1X.cos2	40
Coq.Reals.Rtrigo1X.sin2	40	0.0	search with cache (only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.03746509552	2
Coq.Reals.Rtrigo1X.cos_PI2	40
Coq.Reals.Rtrigo1X.sin_pos_tech	40
Coq.Reals.Rtrigo1X.sin_PI2	40
Coq.Reals.Rtrigo1X.PI_RGT_0	40	0.25.0.19.26	search with cache (only 1: red; only 1: pose proof (Alt_PI_ineq 0) as H; only 1: prove_sup0; only 1: unfold PI2; only 1: lra).	39.6920568943	16555
Coq.Reals.Rtrigo1X.PI_4	40
Coq.Reals.Rtrigo1X.PI_neq0	40
Coq.Reals.Rtrigo1X.cos_PI	40
Coq.Reals.Rtrigo1X.sin_PI	40
Coq.Reals.Rtrigo1X.sin_bound	40
Coq.Reals.Rtrigo1X.cos_bound	40
Coq.Reals.Rtrigo1X.neg_cos	40
Coq.Reals.Rtrigo1X.sin_cos	40	0.5.1.1.0.0	search with cache (only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite Ropp_minus_distr; only 1: rewrite cos_PI2; only 1: unfold Rminus; only 1: ring).	3.24870896339	576
Coq.Reals.Rtrigo1X.sin_plus	40
Coq.Reals.Rtrigo1X.sin_minus	40
Coq.Reals.Rtrigo1X.tan_plus	40
Coq.Reals.Rtrigo1X.sin_2a	40
Coq.Reals.Rtrigo1X.cos_2a	40
Coq.Reals.Rtrigo1X.cos_2a_cos	40
Coq.Reals.Rtrigo1X.cos_2a_sin	40
Coq.Reals.Rtrigo1X.tan_2a	40
Coq.Reals.Rtrigo1X.sin_neg	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: unfold sin; only 1: replace (- x)² with x²; only 1: replace (- x)² with x²; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: ring; only 1: apply Rsqr_neg; only 1: apply Rsqr_neg; only 1: apply Rsqr_neg).	0.741704940796	36
Coq.Reals.Rtrigo1X.cos_neg	40	0.0.0	search with cache (only 1: unfold cos; only 1: replace (- x)² with x²; only 1: apply Rsqr_neg).	0.0591280460358	3
Coq.Reals.Rtrigo1X.tan_0	40
Coq.Reals.Rtrigo1X.tan_neg	40	0.2.1.0.0.0.3.3	search with cache (only 1: rewrite <- (Ropp_involutive x); only 1: unfold tan; only 1: rewrite <- cos_sym; only 1: rewrite <- cos_sym; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: unfold Rdiv; only 1: ring).	29.9943201542	2676
Coq.Reals.Rtrigo1X.tan_minus	40
Coq.Reals.Rtrigo1X.cos_3PI2	40
Coq.Reals.Rtrigo1X.sin_2PI	40
Coq.Reals.Rtrigo1X.cos_2PI	40	0.3.0.8.2	search with cache (only 1: repeat rewrite double; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	20.7582600117	3110
Coq.Reals.Rtrigo1X.neg_sin	40	0.0.0.0	search with cache (only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0848140716553	4
Coq.Reals.Rtrigo1X.sin_PI_x	40	0.1.1.0.0.0.0	search with cache (only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	0.142806768417	9
Coq.Reals.Rtrigo1X.sin_period	40
Coq.Reals.Rtrigo1X.cos_period	40
Coq.Reals.Rtrigo1X.sin_shift	40
Coq.Reals.Rtrigo1X.cos_shift	40
Coq.Reals.Rtrigo1X.cos_sin	40
Coq.Reals.Rtrigo1X.PI2_RGT_0	40	0.1.5	search with cache (only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: destruct pi2_int; only 1: lra).	0.0619480609894	9
Coq.Reals.Rtrigo1X.SIN_bound	40
Coq.Reals.Rtrigo1X.COS_bound	40
Coq.Reals.Rtrigo1X.cos_sin_0	40
Coq.Reals.Rtrigo1X.cos_sin_0_var	40
Coq.Reals.Rtrigo1X.sin_lb_gt_0	40
Coq.Reals.Rtrigo1X.SIN	40
Coq.Reals.Rtrigo1X.COS	40
Coq.Reals.Rtrigo1X._PI2_RLT_0	40	0.2.16	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	1.20496082306	452
Coq.Reals.Rtrigo1X.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1X.PI2_Rlt_PI	40	0.2	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0633859634399	13
Coq.Reals.Rtrigo1X.sin_gt_0	40
Coq.Reals.Rtrigo1X.cos_gt_0	40
Coq.Reals.Rtrigo1X.sin_ge_0	40
Coq.Reals.Rtrigo1X.cos_ge_0	40
Coq.Reals.Rtrigo1X.sin_le_0	40
Coq.Reals.Rtrigo1X.cos_le_0	40
Coq.Reals.Rtrigo1X.sin_lt_0	40
Coq.Reals.Rtrigo1X.sin_lt_0_var	40
Coq.Reals.Rtrigo1X.cos_lt_0	40
Coq.Reals.Rtrigo1X.tan_gt_0	40
Coq.Reals.Rtrigo1X.tan_lt_0	40
Coq.Reals.Rtrigo1X.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1X.form1	40
Coq.Reals.Rtrigo1X.form2	40
Coq.Reals.Rtrigo1X.form3	40
Coq.Reals.Rtrigo1X.form4	40
Coq.Reals.Rtrigo1X.sin_increasing_0	40
Coq.Reals.Rtrigo1X.sin_increasing_1	40
Coq.Reals.Rtrigo1X.sin_decreasing_0	40
Coq.Reals.Rtrigo1X.sin_decreasing_1	40
Coq.Reals.Rtrigo1X.sin_inj	40
Coq.Reals.Rtrigo1X.cos_increasing_0	40
Coq.Reals.Rtrigo1X.cos_increasing_1	40
Coq.Reals.Rtrigo1X.cos_decreasing_0	40
Coq.Reals.Rtrigo1X.cos_decreasing_1	40
Coq.Reals.Rtrigo1X.cos_inj	40
Coq.Reals.Rtrigo1X.tan_diff	40
Coq.Reals.Rtrigo1X.tan_increasing_0	40
Coq.Reals.Rtrigo1X.tan_increasing_1	40
Coq.Reals.Rtrigo1X.sin_incr_0	40
Coq.Reals.Rtrigo1X.sin_incr_1	40
Coq.Reals.Rtrigo1X.sin_decr_0	40
Coq.Reals.Rtrigo1X.sin_decr_1	40
Coq.Reals.Rtrigo1X.cos_incr_0	40
Coq.Reals.Rtrigo1X.cos_incr_1	40
Coq.Reals.Rtrigo1X.cos_decr_0	40
Coq.Reals.Rtrigo1X.cos_decr_1	40
Coq.Reals.Rtrigo1X.tan_incr_0	40
Coq.Reals.Rtrigo1X.tan_incr_1	40
Coq.Reals.Rtrigo1X.sin_eq_0_1	40
Coq.Reals.Rtrigo1X.sin_eq_0_0	40
Coq.Reals.Rtrigo1X.cos_eq_0_0	40
Coq.Reals.Rtrigo1X.cos_eq_0_1	40
Coq.Reals.Rtrigo1X.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1X.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1X.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1X.cos_eq_0_2PI_1	40
Coq.Reals.RpowerX.P_Rmin	40	1.1.0.0.0.0.1	search with cache (only 1: unfold Rmin; only 1: case (Rle_dec y x); only 1: case (Rle_dec y x); only 1: case (Rle_dec y x); only 1: case (Rle_dec y x); only 1: case (Rle_dec x y); only 1: case (Rle_dec x y)).	0.373636960983	18
Coq.Reals.RpowerX.exp_le_3	40
Coq.Reals.RpowerX.exp_increasing	40
Coq.Reals.RpowerX.exp_lt_inv	40
Coq.Reals.RpowerX.exp_ineq1	40
Coq.Reals.RpowerX.ln_exists1	40
Coq.Reals.RpowerX.ln_exists	40
Coq.Reals.RpowerX.exp_ln	40
Coq.Reals.RpowerX.exp_inv	40
Coq.Reals.RpowerX.exp_Ropp	40
Coq.Reals.RpowerX.ln_increasing	40
Coq.Reals.RpowerX.ln_exp	40
Coq.Reals.RpowerX.ln_1	40	17.2.8.0	search with cache (only 1: apply exp_inv; only 1: rewrite exp_0; only 1: apply exp_ln; only 1: apply Rlt_0_1).	13.5930418968	3195
Coq.Reals.RpowerX.ln_lt_inv	40
Coq.Reals.RpowerX.ln_inv	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite <- (exp_ln x); only 1: repeat rewrite exp_ln; only 1: rewrite <- (exp_ln x); only 1: repeat rewrite exp_ln; only 1: rewrite <- (exp_ln x); only 1: repeat rewrite exp_ln; only 1: rewrite <- (exp_ln x); only 1: rewrite <- (exp_ln y)).	0.263134002686	12
Coq.Reals.RpowerX.ln_mult	40
Coq.Reals.RpowerX.ln_Rinv	40
Coq.Reals.RpowerX.ln_continue	40
Coq.Reals.RpowerX.Rpower_plus	40
Coq.Reals.RpowerX.Rpower_mult	40
Coq.Reals.RpowerX.Rpower_O	40
Coq.Reals.RpowerX.Rpower_1	40	1.4.0	search with cache (only 1: unfold Rpower; only 1: rewrite Rmult_1_l; only 1: repeat rewrite exp_ln || rewrite exp_Ropp).	0.840188026428	77
Coq.Reals.RpowerX.Rpower_pow	40
Coq.Reals.RpowerX.Rpower_lt	40
Coq.Reals.RpowerX.Rpower_sqrt	40
Coq.Reals.RpowerX.Rpower_Ropp	40
Coq.Reals.RpowerX.powerRZ_Rpower	40
Coq.Reals.RpowerX.Rle_Rpower	40
Coq.Reals.RpowerX.ln_lt_2	40
Coq.Reals.RpowerX.limit1_ext	40
Coq.Reals.RpowerX.limit1_imp	40	50	search with cache (only 1: firstorder).	14.9230959415	2772
Coq.Reals.RpowerX.Rinv_Rdiv	40	2	search with cache (only 1: field).	0.150037050247	15
Coq.Reals.RpowerX.Dln	40
Coq.Reals.RpowerX.derivable_pt_lim_ln	40
Coq.Reals.RpowerX.D_in_imp	40
Coq.Reals.RpowerX.D_in_ext	40	2.2	search with cache (only 1: intro y; only 1: elim H).	0.472488164902	36
Coq.Reals.RpowerX.Dpower	40
Coq.Reals.RpowerX.derivable_pt_lim_power	40
Coq.Reals.RpowerX.Rpower_mult_distr	40
Coq.Reals.RpowerX.Rlt_Rpower_l	40
Coq.Reals.RpowerX.Rle_Rpower_l	40
Coq.Reals.RpowerX.arcsinh_sinh	40
Coq.Reals.RpowerX.sinh_arcsinh	40
Coq.Reals.RpowerX.derivable_pt_lim_arcsinh	40
Coq.Reals.RpowerX.arcsinh_lt	40
Coq.Reals.RpowerX.arcsinh_le	40
Coq.Reals.RpowerX.arcsinh_0	40
Coq.Reals.R_IfpX.tech_up	40
Coq.Reals.R_IfpX.up_tech	40
Coq.Reals.R_IfpX.fp_R0	40
Coq.Reals.R_IfpX.for_base_fp	40
Coq.Reals.R_IfpX.base_fp	40
Coq.Reals.R_IfpX.base_Int_part	40
Coq.Reals.R_IfpX.Int_part_INR	40
Coq.Reals.R_IfpX.fp_nat	40
Coq.Reals.R_IfpX.R0_fp_O	40	0.0.0.4.7.0.0.4	search with cache (only 1: elim H; only 1: unfold frac_part, Int_part; only 1: replace (up 0) with 1%Z; only 1: auto with zarith real; only 1: destruct (archimed 0) as [H1 H2]; only 1: apply lt_IZR in H1; only 1: rewrite <- minus_IZR in H2; only 1: apply le_IZR in H2).	39.4597220421	6300
Coq.Reals.R_IfpX.Rminus_Int_part1	40
Coq.Reals.R_IfpX.Rminus_Int_part2	40
Coq.Reals.R_IfpX.Rminus_fp1	40
Coq.Reals.R_IfpX.Rminus_fp2	40
Coq.Reals.R_IfpX.plus_Int_part1	40
Coq.Reals.R_IfpX.plus_Int_part2	40
Coq.Reals.R_IfpX.plus_frac_part1	40
Coq.Reals.R_IfpX.plus_frac_part2	40
Coq.Reals.ClassicalConstructiveRealsX.RisLinearOrder	40
Coq.Reals.ClassicalConstructiveRealsX.RdisjunctEpsilon	40
Coq.Reals.ClassicalConstructiveRealsX.Req_constr_refl	40
Coq.Reals.ClassicalConstructiveRealsX.Req_constr_leibniz	40	4.10	search with cache (only 1: destruct H; only 1: destruct (total_order_T x y)).	0.641205787659	180
Coq.Reals.ClassicalConstructiveRealsX.IQR_zero_quot	40
Coq.Reals.ClassicalConstructiveRealsX.Rring	40
Coq.Reals.ClassicalConstructiveRealsX.RringExt	40
Coq.Reals.ClassicalConstructiveRealsX.Rleft_inverse	40
Coq.Reals.ClassicalConstructiveRealsX.Rinv_pos	40
Coq.Reals.ClassicalConstructiveRealsX.Rmult_pos	40
Coq.Reals.ClassicalConstructiveRealsX.Rplus_reg_l	40
Coq.Reals.ClassicalConstructiveRealsX.Rzero_lt_one	40
Coq.Reals.ClassicalConstructiveRealsX.plus_IQR	40
Coq.Reals.ClassicalConstructiveRealsX.mult_IQR	40
Coq.Reals.ClassicalConstructiveRealsX.IQR_lt	40
Coq.Reals.ClassicalConstructiveRealsX.lt_IQR	40
Coq.Reals.ClassicalConstructiveRealsX.IQR_plus_quot	40
Coq.Reals.ClassicalConstructiveRealsX.IQR_mult_quot	40
Coq.Reals.ClassicalConstructiveRealsX.Rabove_pos	40
Coq.Reals.ClassicalConstructiveRealsX.Rarchimedean	40
Coq.Reals.ClassicalConstructiveRealsX.RabsLUB	40
Coq.Reals.ClassicalConstructiveRealsX.Rcomplete	40
Coq.Reals.ClassicalConstructiveRealsX.Rrepr_morphism	40
Coq.Reals.ClassicalConstructiveRealsX.Rabst_morphism	40
Coq.Reals.R_sqrtX.sqrt_pos	40
Coq.Reals.R_sqrtX.sqrt_positivity	40	0.1.0	search with cache (only 1: unfold sqrt; only 1: case (Rcase_abs x); only 1: apply Rsqrt_positivity).	0.0727279186249	4
Coq.Reals.R_sqrtX.sqrt_sqrt	40
Coq.Reals.R_sqrtX.sqrt_0	40
Coq.Reals.R_sqrtX.sqrt_1	40
Coq.Reals.R_sqrtX.sqrt_eq_0	40
Coq.Reals.R_sqrtX.sqrt_lem_0	40	0.3.0.0	search with cache (only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt).	0.169106006622	7
Coq.Reals.R_sqrtX.sqrt_lem_1	40
Coq.Reals.R_sqrtX.sqrt_def	40	0.0.0.0	search with cache (only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt).	0.172163009644	4
Coq.Reals.R_sqrtX.sqrt_square	40
Coq.Reals.R_sqrtX.sqrt_Rsqr	40	0.0.0.0	search with cache (only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.157959938049	4
Coq.Reals.R_sqrtX.sqrt_pow2	40	0.37	search with cache (only 1: rewrite Rmult_1_r; only 1: apply sqrt_square).	14.2559201717	3286
Coq.Reals.R_sqrtX.pow2_sqrt	40
Coq.Reals.R_sqrtX.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrtX.Rsqr_sqrt	40	0.0.0.0.0	search with cache (only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt).	0.194760084152	5
Coq.Reals.R_sqrtX.sqrt_mult_alt	40
Coq.Reals.R_sqrtX.sqrt_mult	40
Coq.Reals.R_sqrtX.sqrt_lt_R0	40
Coq.Reals.R_sqrtX.Rlt_mult_inv_pos	40	4.23	search with cache (only 1: rewrite <- (Rmult_0_r x); only 1: auto with real).	22.6781158447	6635
Coq.Reals.R_sqrtX.Rle_mult_inv_pos	40	3.4.12	search with cache (only 1: replace 0 with (x * 0); only 1: auto with real; only 1: rewrite Rmult_0_r).	3.2715139389	842
Coq.Reals.R_sqrtX.sqrt_div_alt	40
Coq.Reals.R_sqrtX.sqrt_div	40
Coq.Reals.R_sqrtX.sqrt_lt_0_alt	40
Coq.Reals.R_sqrtX.sqrt_lt_0	40
Coq.Reals.R_sqrtX.sqrt_lt_1_alt	40
Coq.Reals.R_sqrtX.sqrt_lt_1	40	0.0.0.0	search with cache (only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	0.189706087112	4
Coq.Reals.R_sqrtX.sqrt_le_0	40
Coq.Reals.R_sqrtX.sqrt_le_1_alt	40
Coq.Reals.R_sqrtX.sqrt_le_1	40
Coq.Reals.R_sqrtX.sqrt_neg_0	40
Coq.Reals.R_sqrtX.sqrt_inj	40
Coq.Reals.R_sqrtX.sqrt_less_alt	40
Coq.Reals.R_sqrtX.sqrt_less	40
Coq.Reals.R_sqrtX.sqrt_more	40
Coq.Reals.R_sqrtX.inv_sqrt	40
Coq.Reals.R_sqrtX.sqrt_cauchy	40
Coq.Reals.R_sqrtX.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrtX.Rsqr_sol_eq_0_0	40
Coq.Reals.NewtonIntX.FTCN_step1	40
Coq.Reals.NewtonIntX.FTC_Newton	40		search with cache ().	0.020770072937	0
Coq.Reals.NewtonIntX.NewtonInt_P1	40
Coq.Reals.NewtonIntX.NewtonInt_P2	40
Coq.Reals.NewtonIntX.NewtonInt_P3	40
Coq.Reals.NewtonIntX.NewtonInt_P4	40
Coq.Reals.NewtonIntX.NewtonInt_P5	40
Coq.Reals.NewtonIntX.antiderivative_P1	40
Coq.Reals.NewtonIntX.NewtonInt_P6	40
Coq.Reals.NewtonIntX.antiderivative_P2	40
Coq.Reals.NewtonIntX.antiderivative_P3	40
Coq.Reals.NewtonIntX.antiderivative_P4	40
Coq.Reals.NewtonIntX.NewtonInt_P7	40
Coq.Reals.NewtonIntX.NewtonInt_P8	40
Coq.Reals.NewtonIntX.NewtonInt_P9	40
Coq.Reals.RderivX.cont_deriv	40
Coq.Reals.RderivX.Dconst	40
Coq.Reals.RderivX.Dx	40
Coq.Reals.RderivX.Dadd	40
Coq.Reals.RderivX.Dmult	40
Coq.Reals.RderivX.Dmult_const	40
Coq.Reals.RderivX.Dopp	40
Coq.Reals.RderivX.Dminus	40
Coq.Reals.RderivX.Dx_pow_n	40
Coq.Reals.RderivX.Dcomp	40
Coq.Reals.RderivX.D_pow_n	40
Coq.Reals.RlogicX.sig_forall_dec	40
Coq.Reals.RlogicX.not_not_archimedean	40
Coq.Reals.RlogicX.sig_not_dec	40
Coq.Reals.RprodX.prod_SO_split	40
Coq.Reals.RprodX.prod_SO_pos	40	21.9	search with cache (only 1: induction N as [| N HrecN]; only 1: apply Rmult_le_pos).	4.04652690887	1585
Coq.Reals.RprodX.prod_SO_Rle	40
Coq.Reals.RprodX.fact_prodSO	40
Coq.Reals.RprodX.le_n_2n	40		search with cache ().	0.022008895874	0
Coq.Reals.RprodX.RfactN_fact2N_factk	40
Coq.Reals.RprodX.INR_fact_lt_0	40
Coq.Reals.RprodX.C_maj	40
Coq.Reals.ArithPropX.minus_neq_O	40
Coq.Reals.ArithPropX.le_minusni_n	40		search with cache ().	0.0401120185852	0
Coq.Reals.ArithPropX.lt_minus_O_lt	40		search with cache ().	0.0403718948364	0
Coq.Reals.ArithPropX.even_odd_cor	40
Coq.Reals.ArithPropX.le_double	40		search with cache ().	0.0377209186554	0
Coq.Reals.ArithPropX.euclidian_division	40
Coq.Reals.ArithPropX.tech8	40		search with cache ().	0.02552485466	0
Coq.Reals.MVTX.MVT	40
Coq.Reals.MVTX.MVT_cor1	40
Coq.Reals.MVTX.MVT_cor2	40
Coq.Reals.MVTX.MVT_cor3	40
Coq.Reals.MVTX.Rolle	40
Coq.Reals.MVTX.nonneg_derivative_1	40
Coq.Reals.MVTX.nonpos_derivative_0	40
Coq.Reals.MVTX.increasing_decreasing_opp	40
Coq.Reals.MVTX.nonpos_derivative_1	40
Coq.Reals.MVTX.positive_derivative	40
Coq.Reals.MVTX.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVTX.negative_derivative	40
Coq.Reals.MVTX.null_derivative_0	40
Coq.Reals.MVTX.increasing_decreasing	40
Coq.Reals.MVTX.null_derivative_1	40
Coq.Reals.MVTX.derive_increasing_interv_ax	40
Coq.Reals.MVTX.derive_increasing_interv	40
Coq.Reals.MVTX.derive_increasing_interv_var	40
Coq.Reals.MVTX.IAF	40
Coq.Reals.MVTX.IAF_var	40
Coq.Reals.MVTX.null_derivative_loc	40
Coq.Reals.MVTX.antiderivative_Ucte	40
Coq.Reals.MVTX.MVT_abs	40
Coq.Reals.MachinX.atan_sub_correct	40
Coq.Reals.MachinX.tech	40
Coq.Reals.MachinX.Machin_2_3	40
Coq.Reals.MachinX.Machin_4_5_239	40
Coq.Reals.MachinX.Machin_2_3_7	40
Coq.Reals.MachinX.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt_SFX.IZN_var	40
Coq.Reals.RiemannInt_SFX.Nzorn	40
Coq.Reals.RiemannInt_SFX.StepFun_P1	40
Coq.Reals.RiemannInt_SFX.StepFun_P2	40
Coq.Reals.RiemannInt_SFX.StepFun_P3	40
Coq.Reals.RiemannInt_SFX.StepFun_P4	40
Coq.Reals.RiemannInt_SFX.StepFun_P5	40
Coq.Reals.RiemannInt_SFX.StepFun_P6	40
Coq.Reals.RiemannInt_SFX.StepFun_P7	40
Coq.Reals.RiemannInt_SFX.StepFun_P8	40
Coq.Reals.RiemannInt_SFX.StepFun_P9	40
Coq.Reals.RiemannInt_SFX.StepFun_P10	40
Coq.Reals.RiemannInt_SFX.StepFun_P11	40
Coq.Reals.RiemannInt_SFX.StepFun_P12	40
Coq.Reals.RiemannInt_SFX.StepFun_P13	40
Coq.Reals.RiemannInt_SFX.StepFun_P14	40
Coq.Reals.RiemannInt_SFX.StepFun_P15	40
Coq.Reals.RiemannInt_SFX.StepFun_P16	40
Coq.Reals.RiemannInt_SFX.StepFun_P17	40
Coq.Reals.RiemannInt_SFX.StepFun_P18	40
Coq.Reals.RiemannInt_SFX.StepFun_P19	40
Coq.Reals.RiemannInt_SFX.StepFun_P20	40
Coq.Reals.RiemannInt_SFX.StepFun_P21	40
Coq.Reals.RiemannInt_SFX.StepFun_P22	40
Coq.Reals.RiemannInt_SFX.StepFun_P23	40
Coq.Reals.RiemannInt_SFX.StepFun_P24	40
Coq.Reals.RiemannInt_SFX.StepFun_P25	40
Coq.Reals.RiemannInt_SFX.StepFun_P26	40
Coq.Reals.RiemannInt_SFX.StepFun_P27	40
Coq.Reals.RiemannInt_SFX.StepFun_P28	40
Coq.Reals.RiemannInt_SFX.StepFun_P29	40
Coq.Reals.RiemannInt_SFX.StepFun_P30	40
Coq.Reals.RiemannInt_SFX.StepFun_P31	40
Coq.Reals.RiemannInt_SFX.StepFun_P32	40
Coq.Reals.RiemannInt_SFX.StepFun_P33	40
Coq.Reals.RiemannInt_SFX.StepFun_P34	40
Coq.Reals.RiemannInt_SFX.StepFun_P35	40
Coq.Reals.RiemannInt_SFX.StepFun_P36	40
Coq.Reals.RiemannInt_SFX.StepFun_P37	40
Coq.Reals.RiemannInt_SFX.StepFun_P38	40
Coq.Reals.RiemannInt_SFX.StepFun_P39	40
Coq.Reals.RiemannInt_SFX.StepFun_P40	40
Coq.Reals.RiemannInt_SFX.StepFun_P41	40
Coq.Reals.RiemannInt_SFX.StepFun_P42	40
Coq.Reals.RiemannInt_SFX.StepFun_P43	40
Coq.Reals.RiemannInt_SFX.StepFun_P44	40
Coq.Reals.RiemannInt_SFX.StepFun_P45	40
Coq.Reals.RiemannInt_SFX.StepFun_P46	40
Coq.Reals.Ranalysis_regX.AppVar	40	8.175	search with cache (only 1: assert (int78 : -2 <= 7 / 8 <= 2) by (split; Lra.lra); only 1: case PI_2_aux).	4.89579892159	22677
Coq.Reals.Ranalysis3X.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3X.derivable_pt_div	40
Coq.Reals.Ranalysis3X.derivable_div	40
Coq.Reals.Ranalysis3X.derive_pt_div	40	2.0.7.18	search with cache (only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr1) as H3; only 1: apply derivable_pt_lim_div; only 1: pose proof (proj2_sig pr2) as H4).	13.5897059441	3519
Coq.Reals.Rtrigo_regX.continuity_sin	40
Coq.Reals.Rtrigo_regX.CVN_R_sin	40
Coq.Reals.Rtrigo_regX.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_regX.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_regX.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_regX.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_regX.derivable_pt_sin	40
Coq.Reals.Rtrigo_regX.derivable_pt_cos	40
Coq.Reals.Rtrigo_regX.derivable_sin	40	0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0587079524994	4
Coq.Reals.Rtrigo_regX.derivable_cos	40	0.0.1.10	search with cache (only 1: intro x; only 1: unfold derivable_pt; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.299566984177	83
Coq.Reals.Rtrigo_regX.derive_pt_sin	40	11.40	search with cache (only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	19.7345728874	8177
Coq.Reals.Rtrigo_regX.derive_pt_cos	40	3.2	search with cache (only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	1.23613190651	57
Coq.Reals.RdefinitionsX.total_order_T	40
Coq.Reals.RdefinitionsX.Req_appart_dec	40
Coq.Reals.RdefinitionsX.Rrepr_appart_0	40
Coq.Reals.RdefinitionsX.up	40		search with cache ().	0.0140161514282	0
Coq.Reals.RlimitX.eps2_Rgt_R0	40	0.0	search with cache (only 1: apply Rmult_lt_0_compat; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.0318338871002	2
Coq.Reals.RlimitX.eps2	40	0	search with cache (only 1: lra).	0.0227100849152	1
Coq.Reals.RlimitX.eps4	40	2	search with cache (only 1: lra).	0.0215930938721	3
Coq.Reals.RlimitX.Rlt_eps2_eps	40	0	search with cache (only 1: lra).	0.0607509613037	1
Coq.Reals.RlimitX.Rlt_eps4_eps	40	0	search with cache (only 1: lra).	0.02623295784	1
Coq.Reals.RlimitX.prop_eps	40
Coq.Reals.RlimitX.mul_factor_wd	40
Coq.Reals.RlimitX.mul_factor_gt	40
Coq.Reals.RlimitX.mul_factor_gt_f	40
Coq.Reals.RlimitX.tech_limit	40
Coq.Reals.RlimitX.tech_limit_contr	40
Coq.Reals.RlimitX.lim_x	40		search with cache ().	0.0186150074005	0
Coq.Reals.RlimitX.limit_plus	40
Coq.Reals.RlimitX.limit_Ropp	40
Coq.Reals.RlimitX.limit_minus	40
Coq.Reals.RlimitX.limit_free	40
Coq.Reals.RlimitX.limit_mul	40
Coq.Reals.RlimitX.single_limit	40
Coq.Reals.RlimitX.limit_comp	40
Coq.Reals.RlimitX.limit_inv	40
Coq.Reals.Cauchy_prodX.sum_N_predN	40	0	search with cache (only 1: induction N as [| N HrecN]).	0.0402638912201	1
Coq.Reals.Cauchy_prodX.sum_plus	40	1.0.1	search with cache (only 1: induction N as [| N HrecN]; only 1: rewrite HrecN; only 1: ring).	0.0887491703033	5
Coq.Reals.Cauchy_prodX.cauchy_finite	40
Coq.Reals.Rtrigo_funX.Alembert_exp	40
Coq.Reals.Rtrigo_defX.exp_cof_no_R0	40
Coq.Reals.Rtrigo_defX.exist_exp	40
Coq.Reals.Rtrigo_defX.pow_i	40	8	search with cache (only 1: rewrite pow_ne_zero).	0.0388078689575	9
Coq.Reals.Rtrigo_defX.exist_exp0	40
Coq.Reals.Rtrigo_defX.exp_0	40
Coq.Reals.Rtrigo_defX.cosh_0	40
Coq.Reals.Rtrigo_defX.sinh_0	40
Coq.Reals.Rtrigo_defX.simpl_cos_n	40
Coq.Reals.Rtrigo_defX.archimed_cor1	40
Coq.Reals.Rtrigo_defX.Alembert_cos	40
Coq.Reals.Rtrigo_defX.cosn_no_R0	40
Coq.Reals.Rtrigo_defX.exist_cos	40
Coq.Reals.Rtrigo_defX.simpl_sin_n	40
Coq.Reals.Rtrigo_defX.Alembert_sin	40
Coq.Reals.Rtrigo_defX.sin_no_R0	40
Coq.Reals.Rtrigo_defX.exist_sin	40
Coq.Reals.Rtrigo_defX.cos_sym	40
Coq.Reals.Rtrigo_defX.sin_antisym	40
Coq.Reals.Rtrigo_defX.sin_0	40
Coq.Reals.Rtrigo_defX.exist_cos0	40
Coq.Reals.Rtrigo_defX.cos_0	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_lt_r	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_morphT	40	0.0.0.0.0.0.0.0.6	search with cache (only 1: split; only 1: unfold CRmin; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: unfold CRmin; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0).	3.54860806465	189
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_l	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_r	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRnegPartAbsMin	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_sym	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_mult	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_plus	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_left	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_right	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_lt	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_contract	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_glb	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_assoc	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRlt_min	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_morphT	40	0.0.0.0.0.0.0.0.7	search with cache (only 1: split; only 1: unfold CRmax; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: unfold CRmax; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0).	3.54941105843	208
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_lub	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_l	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_r	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRposPartAbsMax	40	0.0.0.1	search with cache (only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite CRplus_0_l; only 1: rewrite CRopp_0, CRplus_0_r).	0.168922185898	5
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_sym	40	0.0.0.1.1.8.0.1	search with cache (only 1: unfold CRmax; only 1: apply CRmult_morph; only 1: apply CRplus_morph; only 1: rewrite (CRplus_comm x); only 1: setoid_replace (x - y) with (- (y - x)); only 1: rewrite CRabs_opp; only 1: unfold CRminus; only 1: rewrite CRopp_plus_distr, CRplus_comm, CRopp_involutive).	25.0677680969	2199
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_plus	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_left	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_right	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_contract	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_lub_lt	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_assoc	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_min_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRlt_max	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_mult	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_max_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmorph_min	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_asym	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_proper	40
Coq.Reals.Abstract.ConstructiveRealsX.CRle_refl	40	1.0	search with cache (only 1: intro H0; only 1: destruct (CRltLinear R), p).	0.0859410762787	3
Coq.Reals.Abstract.ConstructiveRealsX.CRle_lt_trans	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_le_trans	40
Coq.Reals.Abstract.ConstructiveRealsX.CRle_trans	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_trans	40	5	search with cache (only 1: destruct (CRltLinear R), p).	1.36697793007	57
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_trans_flip	40	8	search with cache (only 1: destruct (CRltLinear R), p).	0.183859109879	17
Coq.Reals.Abstract.ConstructiveRealsX.CReq_refl	40	1.0.1.0.15	search with cache (only 1: red; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: intro H; only 1: destruct (CRltLinear R), p).	11.9678981304	565
Coq.Reals.Abstract.ConstructiveRealsX.CReq_sym	40	0.1.0.1.2	search with cache (only 1: split; only 1: intro abs; only 1: destruct H, H0; only 1: intro abs; only 1: destruct H, H0).	0.315773010254	30
Coq.Reals.Abstract.ConstructiveRealsX.CReq_trans	40
Coq.Reals.Abstract.ConstructiveRealsX.CReq_relT	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_morph	40
Coq.Reals.Abstract.ConstructiveRealsX.CRle_morph_Proper	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_0_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_0_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_opp_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_opp_r	40	2.1.1.1	search with cache (only 1: transitivity (x + - x); only 1: transitivity (x + - x); only 1: transitivity (x + - x); only 1: destruct (CRisRing R)).	0.194082975388	11
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_0	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_compat_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_compat_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_compat	40
Coq.Reals.Abstract.ConstructiveRealsX.CRle_minus	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_reg_l	40	3.13.3.0	search with cache (only 1: intros abs; only 1: destruct (CRisRing R); only 1: apply H; only 1: apply CRplus_lt_compat_l).	3.6218791008	856
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_lt_le_compat	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_lt_compat	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_assoc	40	0	search with cache (only 1: destruct (CRisRing R)).	0.196619033813	1
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_comm	40	1.0.3	search with cache (only 1: destruct (CRisRingExt R); only 1: clear Rmul_ext Ropp_ext; only 1: destruct (CRisRing R)).	0.207458019257	7
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_morph_Proper	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_morph_Proper	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_morph_T	40	2	search with cache (only 1: apply (CRisRingExt R)).	0.0993459224701	3
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_morph_T	40	2	search with cache (only 1: apply (CRisRingExt R)).	0.106735944748	3
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_morph_T	40	0.17	search with cache (only 1: intros a b; only 1: apply (CRisRingExt R)).	3.9305229187	182
Coq.Reals.Abstract.ConstructiveRealsX.CRminus_morph_Proper	40	14.4	search with cache (only 1: apply (CRisRingExt R); only 1: destruct (CRisRingExt R)).	16.7747910023	785
Coq.Reals.Abstract.ConstructiveRealsX.CRminus_morph_T	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_involutive	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_gt_lt_contravar	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_lt_cancel	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_ge_le_contravar	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_plus_distr	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_1_l	40	1	search with cache (only 1: destruct (CRisRing R)).	0.0430250167847	2
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_1_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_assoc	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_comm	40	1	search with cache (only 1: destruct (CRisRing R)).	0.0599038600922	2
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_plus_distr_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_plus_distr_r	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: transitivity (r2 * r1 + r3 * r1); only 1: transitivity (r2 * r1 + r3 * r1); only 1: transitivity (r2 * r1 + r3 * r1); only 1: transitivity (r2 * r1 + r3 * r1); only 1: transitivity (r2 * r1 + r3 * r1); only 1: transitivity (r2 * r1 + r3 * r1); only 1: transitivity (r2 * r1 + r3 * r1); only 1: transitivity (r2 * r1 + r3 * r1); only 1: destruct (CRisRing R)).	0.413838148117	11
Coq.Reals.Abstract.ConstructiveRealsX.CRzero_double	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_0_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_0_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_mult_distr_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_mult_distr_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_lt_compat_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRinv_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_lt_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_compat_l_half	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_compat_r_half	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRinv_1	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRinv_mult_distr	40
Coq.Reals.Abstract.ConstructiveRealsX.CRinv_morph	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_minus	40
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_le	40
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_morph_Proper	40
Coq.Reals.Abstract.ConstructiveRealsX.eq_inject_Q	40
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_morph_T	40	0.0.0.0.0.0.29	search with cache (only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).	5.83773398399	1181
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_opp	40
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_pos	40
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_inv	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_0_compat	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_compat_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_compat_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_pos_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRup_nat	40
Coq.Reals.Abstract.ConstructiveRealsX.CRfloor	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRapart_morph	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_increasing_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_unique	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.Endomorph_id	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_proper	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_compose	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_le	40	5.3	search with cache (only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs).	0.10963010788	10
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_le_inv	40	6.36.0	search with cache (only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing).	7.93760490417	4291
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_zero	40	0	search with cache (only 1: apply CRmorph_rat).	0.0470139980316	1
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_one	40	0	search with cache (only 1: apply CRmorph_rat).	0.0446610450745	1
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_opp	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRplus_pos_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRplus_neg_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_plus_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_plus	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.NatOfZ	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_int	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_pos_pos_le	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_appart	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_rat_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CR_Q_limit	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CR_Q_limit_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CauchyMorph_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.SlowMorph_increasing_Qr	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.SlowMorph_increasing_Ql	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.SlowMorph_increasing	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_abs	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_cauchy_reverse	40
Coq.Reals.Abstract.ConstructiveSumX.CRsum_eq	40
Coq.Reals.Abstract.ConstructiveSumX.sum_eq_R0	40
Coq.Reals.Abstract.ConstructiveSumX.sum_const	40
Coq.Reals.Abstract.ConstructiveSumX.multiTriangleIneg	40
Coq.Reals.Abstract.ConstructiveSumX.sum_assoc	40
Coq.Reals.Abstract.ConstructiveSumX.sum_Rle	40	3.113	search with cache (only 1: induction n; only 1: apply CRplus_le_compat).	9.33909797668	15233
Coq.Reals.Abstract.ConstructiveSumX.Abs_sum_maj	40
Coq.Reals.Abstract.ConstructiveSumX.cond_pos_sum	40
Coq.Reals.Abstract.ConstructiveSumX.pos_sum_more	40
Coq.Reals.Abstract.ConstructiveSumX.sum_opp	40
Coq.Reals.Abstract.ConstructiveSumX.sum_scale	40
Coq.Reals.Abstract.ConstructiveSumX.sum_plus	40
Coq.Reals.Abstract.ConstructiveSumX.decomp_sum	40
Coq.Reals.Abstract.ConstructiveSumX.reverse_sum	40
Coq.Reals.Abstract.ConstructiveSumX.Rplus_le_pos	40
Coq.Reals.Abstract.ConstructiveSumX.selectOneInSum	40
Coq.Reals.Abstract.ConstructiveSumX.splitSum	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_maj	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_abs_lt	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_abs	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_unique	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_abs_eq	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_abs_cv	40	0	search with cache (only 1: destruct (series_cv_abs u cau)).	0.0312252044678	1
Coq.Reals.Abstract.ConstructiveSumX.series_cv_opp	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_scale	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_plus	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_minus	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_eq	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_remainder_maj	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_abs_remainder	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_triangle	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_shift	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_shift'	40
Coq.Reals.Abstract.ConstructiveSumX.CRmorph_sum	40
Coq.Reals.Abstract.ConstructiveSumX.CRmorph_INR	40	3	search with cache (only 1: apply CRmorph_rat).	0.090530872345	4
Coq.Reals.Abstract.ConstructiveSumX.CRmorph_series_cv	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_morph	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_morph_prop_Proper	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_right	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_opp	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_minus_sym	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_left	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_triang	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_le	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_triang_inv	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_triang_inv2	40
Coq.Reals.Abstract.ConstructiveAbsX.CR_of_Q_abs	40
Coq.Reals.Abstract.ConstructiveAbsX.CRle_abs	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_pos	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_appart_0	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_mult	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_lt	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_def1	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_def2	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_extens	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_opp	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_plus	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_unique	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_eq	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cauchy_eq	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_proper	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_morph	40
Coq.Reals.Abstract.ConstructiveLimitsX.Un_cv_nat_real	40
Coq.Reals.Abstract.ConstructiveLimitsX.Un_cv_real_nat	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_minus	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_scale	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_const	40
Coq.Reals.Abstract.ConstructiveLimitsX.Rcv_cauchy_mod	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_growing_transit	40
Coq.Reals.Abstract.ConstructiveLimitsX.growing_ineq	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_open_below	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_open_above	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_bound_down	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_bound_up	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_le	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_abs_cont	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_dist_cont	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_shift	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_shift'	40	4.0.0.0	search with cache (only 1: intros eps; only 1: specialize (H eps) as [N Nmaj]; only 1: exists (N + k)%nat; only 1: apply Nmaj).	0.140939950943	8
Coq.Reals.Abstract.ConstructivePowerX.CRpow_ge_one	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_ge_zero	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_gt_zero	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_mult	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_one	40	2.7.8	search with cache (only 1: induction n; only 1: rewrite <- (Rmul_comm (CRisRing R)); only 1: rewrite CRmult_1_r).	0.718957901001	223
Coq.Reals.Abstract.ConstructivePowerX.CRpow_proper	40	5.16	search with cache (only 1: induction n; only 1: apply CRmult_morph).	0.880290031433	253
Coq.Reals.Abstract.ConstructivePowerX.CRpow_inv	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_plus_distr	40
Coq.Reals.Abstract.ConstructivePowerX.CR_double	40
Coq.Reals.Abstract.ConstructivePowerX.GeoCvZero	40
Coq.Reals.Abstract.ConstructivePowerX.GeoFiniteSum	40
Coq.Reals.Abstract.ConstructivePowerX.GeoHalfBelowTwo	40
Coq.Reals.Abstract.ConstructivePowerX.GeoHalfTwo	40
Coq.Reals.Abstract.ConstructiveLUBX.CRlt_lpo_dec	40
Coq.Reals.Abstract.ConstructiveLUBX.is_upper_bound_dec	40
Coq.Reals.Abstract.ConstructiveLUBX.is_upper_bound_epsilon	40
Coq.Reals.Abstract.ConstructiveLUBX.is_upper_bound_not_epsilon	40
Coq.Reals.Abstract.ConstructiveLUBX.DDlow_below_up	40
Coq.Reals.Abstract.ConstructiveLUBX.DDcut_limit_fix	40		search with cache ().	0.0130009651184	0
Coq.Reals.Abstract.ConstructiveLUBX.DDcut_limit	40
Coq.Reals.Abstract.ConstructiveLUBX.glb_dec_Q	40
Coq.Reals.Abstract.ConstructiveLUBX.is_upper_bound_glb	40
Coq.Reals.Abstract.ConstructiveLUBX.is_upper_bound_closed	40
Coq.Reals.Abstract.ConstructiveLUBX.sig_lub	40
Coq.Reals.Abstract.ConstructiveLUBX.CR_sig_lub	40
Coq.Reals.RaxiomsX.Rrepr_0	40
Coq.Reals.RaxiomsX.Rrepr_1	40
Coq.Reals.RaxiomsX.Rrepr_plus	40
Coq.Reals.RaxiomsX.Rrepr_opp	40
Coq.Reals.RaxiomsX.Rrepr_minus	40
Coq.Reals.RaxiomsX.Rrepr_mult	40
Coq.Reals.RaxiomsX.Rrepr_inv	40
Coq.Reals.RaxiomsX.Rrepr_le	40
Coq.Reals.RaxiomsX.Rrepr_appart	40
Coq.Reals.RaxiomsX.Rappart_repr	40
Coq.Reals.RaxiomsX.Rplus_comm	40
Coq.Reals.RaxiomsX.Rplus_assoc	40	13.1.1.0.0	search with cache (only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite <- CReal_plus_assoc).	25.0269098282	1673
Coq.Reals.RaxiomsX.Rplus_opp_r	40
Coq.Reals.RaxiomsX.Rplus_0_l	40
Coq.Reals.RaxiomsX.Rmult_comm	40
Coq.Reals.RaxiomsX.Rmult_assoc	40	11.0.0.0	search with cache (only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_mult; only 1: do 2 rewrite Rrepr_mult; only 1: ring).	11.3516538143	462
Coq.Reals.RaxiomsX.Rinv_l	40
Coq.Reals.RaxiomsX.Rmult_1_l	40
Coq.Reals.RaxiomsX.R1_neq_R0	40
Coq.Reals.RaxiomsX.Rmult_plus_distr_l	40
Coq.Reals.RaxiomsX.Rlt_asym	40
Coq.Reals.RaxiomsX.Rlt_trans	40
Coq.Reals.RaxiomsX.Rplus_lt_compat_l	40
Coq.Reals.RaxiomsX.Rmult_lt_compat_l	40
Coq.Reals.RaxiomsX.Rrepr_INR	40
Coq.Reals.RaxiomsX.Rrepr_IPR2	40
Coq.Reals.RaxiomsX.Rrepr_IPR	40
Coq.Reals.RaxiomsX.Rrepr_IZR	40
Coq.Reals.RaxiomsX.archimed	40
Coq.Reals.RaxiomsX.completeness	40
Coq.Reals.RminmaxX.Rmax_l	40	2.0	search with cache (only 1: apply Rmax_case_strong; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0365979671478	4
Coq.Reals.RminmaxX.Rmax_r	40	2.0	search with cache (only 1: apply Rmax_case_strong; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0369529724121	4
Coq.Reals.RminmaxX.Rmin_l	40	2.0	search with cache (only 1: apply Rmin_case_strong; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0337200164795	4
Coq.Reals.RminmaxX.Rmin_r	40	2.0	search with cache (only 1: apply Rmin_case_strong; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.033166885376	4
Coq.Reals.RminmaxX.R.plus_max_distr_l	40
Coq.Reals.RminmaxX.R.plus_max_distr_r	40
Coq.Reals.RminmaxX.R.plus_min_distr_l	40
Coq.Reals.RminmaxX.R.plus_min_distr_r	40
Coq.Reals.RminmaxX.R.opp_max_distr	40
Coq.Reals.RminmaxX.R.opp_min_distr	40
Coq.Reals.RminmaxX.R.minus_max_distr_l	40	2.1.2.13	search with cache (only 1: apply max_min_antimonotone; only 1: do 3 red; only 1: apply Rplus_le_compat_l; only 1: elim H).	11.9775130749	770
Coq.Reals.RminmaxX.R.minus_max_distr_r	40
Coq.Reals.RminmaxX.R.minus_min_distr_l	40	2.1.2.15	search with cache (only 1: apply min_max_antimonotone; only 1: do 3 red; only 1: apply Rplus_le_compat_l; only 1: elim H).	16.2839069366	984
Coq.Reals.RminmaxX.R.minus_min_distr_r	40
Coq.FSets.FMapListX.Raw.empty_1	40		search with cache ().	0.0236899852753	0
Coq.FSets.FMapListX.Raw.empty_sorted	40		search with cache ().	0.0174868106842	0
Coq.FSets.FMapListX.Raw.is_empty_1	40
Coq.FSets.FMapListX.Raw.is_empty_2	40	7	search with cache (only 1: now destruct m).	0.126255989075	8
Coq.FSets.FMapListX.Raw.mem_1	40
Coq.FSets.FMapListX.Raw.mem_2	40	17.2.0	search with cache (only 1: clear Hm; only 1: functional induction mem x m; only 1: compute in H0).	39.7743518353	4647
Coq.FSets.FMapListX.Raw.find_2	40
Coq.FSets.FMapListX.Raw.find_1	40
Coq.FSets.FMapListX.Raw.add_1	40
Coq.FSets.FMapListX.Raw.add_2	40
Coq.FSets.FMapListX.Raw.add_3	40
Coq.FSets.FMapListX.Raw.add_Inf	40
Coq.FSets.FMapListX.Raw.add_sorted	40
Coq.FSets.FMapListX.Raw.remove_1	40
Coq.FSets.FMapListX.Raw.remove_2	40
Coq.FSets.FMapListX.Raw.remove_3	40
Coq.FSets.FMapListX.Raw.remove_Inf	40
Coq.FSets.FMapListX.Raw.remove_sorted	40	1.3.1.2.3	search with cache (only 1: functional induction remove x m; only 1: clear e0; only 1: inversion_clear Hm; only 1: clear e0; only 1: inversion_clear Hm).	5.88547992706	872
Coq.FSets.FMapListX.Raw.elements_1	40		search with cache ().	0.0179181098938	0
Coq.FSets.FMapListX.Raw.elements_2	40		search with cache ().	0.0180339813232	0
Coq.FSets.FMapListX.Raw.elements_3	40		search with cache ().	0.0179889202118	0
Coq.FSets.FMapListX.Raw.elements_3w	40
Coq.FSets.FMapListX.Raw.fold_1	40
Coq.FSets.FMapListX.Raw.equal_1	40
Coq.FSets.FMapListX.Raw.equal_2	40
Coq.FSets.FMapListX.Raw.equal_cons	40
Coq.FSets.FMapListX.Raw.map_1	40
Coq.FSets.FMapListX.Raw.map_2	40
Coq.FSets.FMapListX.Raw.map_lelistA	40	10	search with cache (only 1: inversion_clear H).	0.250581979752	21
Coq.FSets.FMapListX.Raw.map_sorted	40	4.0	search with cache (only 1: induction m; only 1: inversion_clear Hm).	0.279152870178	6
Coq.FSets.FMapListX.Raw.mapi_1	40	10.0.7.7.0	search with cache (only 1: induction m; only 1: inversion H; only 1: unfold eqke in *; only 1: unfold MapsTo in *; only 1: eauto with *).	29.7785000801	3325
Coq.FSets.FMapListX.Raw.mapi_2	40
Coq.FSets.FMapListX.Raw.mapi_lelistA	40	1	search with cache (only 1: inversion_clear H).	0.0609040260315	2
Coq.FSets.FMapListX.Raw.mapi_sorted	40	13.27	search with cache (only 1: induction m; only 1: inversion_clear Hm).	9.51739501953	1845
Coq.FSets.FMapListX.Raw.map2_alt_equiv	40
Coq.FSets.FMapListX.Raw.combine_lelistA	40
Coq.FSets.FMapListX.Raw.combine_sorted	40
Coq.FSets.FMapListX.Raw.map2_sorted	40
Coq.FSets.FMapListX.Raw.combine_1	40
Coq.FSets.FMapListX.Raw.map2_0	40
Coq.FSets.FMapListX.Raw.map2_1	40
Coq.FSets.FMapListX.Raw.map2_2	40
Coq.FSets.FMapListX.Make.MapsTo_1	40
Coq.FSets.FMapListX.Make.mem_1	40
Coq.FSets.FMapListX.Make.mem_2	40
Coq.FSets.FMapListX.Make.empty_1	40		search with cache ().	0.0278649330139	0
Coq.FSets.FMapListX.Make.is_empty_1	40
Coq.FSets.FMapListX.Make.is_empty_2	40	3.3.49.37	search with cache (only 1: intros l; only 1: case m; only 1: destruct m; only 1: inversion H0).	12.986782074	11175
Coq.FSets.FMapListX.Make.add_1	40
Coq.FSets.FMapListX.Make.add_2	40
Coq.FSets.FMapListX.Make.add_3	40
Coq.FSets.FMapListX.Make.remove_1	40
Coq.FSets.FMapListX.Make.remove_2	40
Coq.FSets.FMapListX.Make.remove_3	40
Coq.FSets.FMapListX.Make.find_1	40
Coq.FSets.FMapListX.Make.find_2	40
Coq.FSets.FMapListX.Make.elements_1	40		search with cache ().	0.0211129188538	0
Coq.FSets.FMapListX.Make.elements_2	40		search with cache ().	0.021938085556	0
Coq.FSets.FMapListX.Make.elements_3	40	4	search with cache (only 1: induction m).	0.0402858257294	5
Coq.FSets.FMapListX.Make.elements_3w	40
Coq.FSets.FMapListX.Make.cardinal_1	40		search with cache ().	0.0208849906921	0
Coq.FSets.FMapListX.Make.fold_1	40
Coq.FSets.FMapListX.Make.equal_1	40
Coq.FSets.FMapListX.Make.equal_2	40
Coq.FSets.FMapListX.Make.map_1	40
Coq.FSets.FMapListX.Make.map_2	40
Coq.FSets.FMapListX.Make.mapi_1	40
Coq.FSets.FMapListX.Make.mapi_2	40
Coq.FSets.FMapListX.Make.map2_1	40
Coq.FSets.FMapListX.Make.map2_2	40
Coq.FSets.FMapListX.Make_ord.eq_equal	40
Coq.FSets.FMapListX.Make_ord.eq_1	40
Coq.FSets.FMapListX.Make_ord.eq_2	40
Coq.FSets.FMapListX.Make_ord.eq_refl	40
Coq.FSets.FMapListX.Make_ord.eq_sym	40
Coq.FSets.FMapListX.Make_ord.eq_trans	40
Coq.FSets.FMapListX.Make_ord.lt_trans	40
Coq.FSets.FMapListX.Make_ord.lt_not_eq	40
Coq.FSets.FMapListX.Make_ord.compare	40
Coq.FSets.FSetPositiveX.PositiveSet.In_1	40		search with cache ().	0.0149600505829	0
Coq.FSets.FSetPositiveX.PositiveSet.eq_refl	40		search with cache ().	0.0125930309296	0
Coq.FSets.FSetPositiveX.PositiveSet.eq_sym	40		search with cache ().	0.0267009735107	0
Coq.FSets.FSetPositiveX.PositiveSet.eq_trans	40
Coq.FSets.FSetPositiveX.PositiveSet.mem_1	40		search with cache ().	0.0113730430603	0
Coq.FSets.FSetPositiveX.PositiveSet.mem_2	40		search with cache ().	0.0109570026398	0
Coq.FSets.FSetPositiveX.PositiveSet.mem_Leaf	40		search with cache ().	0.0110969543457	0
Coq.FSets.FSetPositiveX.PositiveSet.empty_1	40		search with cache ().	0.0131261348724	0
Coq.FSets.FSetPositiveX.PositiveSet.mem_node	40
Coq.FSets.FSetPositiveX.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositiveX.PositiveSet.is_empty_2	40	0	search with cache (only 1: rewrite is_empty_spec).	0.0990529060364	1
Coq.FSets.FSetPositiveX.PositiveSet.subset_Leaf_s	40		search with cache ().	0.0209648609161	0
Coq.FSets.FSetPositiveX.PositiveSet.subset_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.subset_1	40
Coq.FSets.FSetPositiveX.PositiveSet.subset_2	40
Coq.FSets.FSetPositiveX.PositiveSet.equal_subset	40
Coq.FSets.FSetPositiveX.PositiveSet.equal_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.equal_1	40
Coq.FSets.FSetPositiveX.PositiveSet.equal_2	40
Coq.FSets.FSetPositiveX.PositiveSet.eq_dec	40
Coq.FSets.FSetPositiveX.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_bool_inv	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_inv	40
Coq.FSets.FSetPositiveX.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_bool_Eq	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_equal	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_gt	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_eq	40
Coq.FSets.FSetPositiveX.PositiveSet.compare	40
Coq.FSets.FSetPositiveX.PositiveSet.ct_cxe	40	21	search with cache (only 1: destruct x).	0.737818002701	208
Coq.FSets.FSetPositiveX.PositiveSet.ct_xce	40	0	search with cache (only 1: destruct x).	0.0314290523529	1
Coq.FSets.FSetPositiveX.PositiveSet.ct_lxl	40	68	search with cache (only 1: destruct x).	0.850890159607	2370
Coq.FSets.FSetPositiveX.PositiveSet.ct_gxg	40
Coq.FSets.FSetPositiveX.PositiveSet.ct_xll	40	68	search with cache (only 1: destruct x).	0.797415971756	2370
Coq.FSets.FSetPositiveX.PositiveSet.ct_xgg	40
Coq.FSets.FSetPositiveX.PositiveSet.ct_lex	40
Coq.FSets.FSetPositiveX.PositiveSet.ct_compare_bool	40	105	search with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end).	32.5701761246	20619
Coq.FSets.FSetPositiveX.PositiveSet.compare_x_Leaf	40	0.5.8.6	search with cache (only 1: rewrite compare_inv; only 1: induction s as [| l IHl o r IHr]; only 1: destruct o; only 1: case is_empty).	16.4694981575	2371
Coq.FSets.FSetPositiveX.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositiveX.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositiveX.PositiveSet.lt_trans	40
Coq.FSets.FSetPositiveX.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositiveX.PositiveSet.add_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.add_1	40
Coq.FSets.FSetPositiveX.PositiveSet.add_2	40	0	search with cache (only 1: apply <- add_spec).	0.0254461765289	1
Coq.FSets.FSetPositiveX.PositiveSet.add_3	40
Coq.FSets.FSetPositiveX.PositiveSet.remove_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.remove_1	40
Coq.FSets.FSetPositiveX.PositiveSet.remove_2	40	0	search with cache (only 1: rewrite remove_spec).	0.0379569530487	1
Coq.FSets.FSetPositiveX.PositiveSet.remove_3	40
Coq.FSets.FSetPositiveX.PositiveSet.singleton_1	40
Coq.FSets.FSetPositiveX.PositiveSet.singleton_2	40
Coq.FSets.FSetPositiveX.PositiveSet.union_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.union_1	40
Coq.FSets.FSetPositiveX.PositiveSet.union_2	40
Coq.FSets.FSetPositiveX.PositiveSet.union_3	40	1	search with cache (only 1: apply <- union_spec).	0.0255241394043	2
Coq.FSets.FSetPositiveX.PositiveSet.inter_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.inter_1	40
Coq.FSets.FSetPositiveX.PositiveSet.inter_2	40
Coq.FSets.FSetPositiveX.PositiveSet.inter_3	40	0	search with cache (only 1: rewrite inter_spec).	0.0242850780487	1
Coq.FSets.FSetPositiveX.PositiveSet.diff_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.diff_1	40
Coq.FSets.FSetPositiveX.PositiveSet.diff_2	40
Coq.FSets.FSetPositiveX.PositiveSet.diff_3	40	0	search with cache (only 1: rewrite diff_spec).	0.0264070034027	1
Coq.FSets.FSetPositiveX.PositiveSet.fold_1	40
Coq.FSets.FSetPositiveX.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositiveX.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.filter_1	40
Coq.FSets.FSetPositiveX.PositiveSet.filter_2	40
Coq.FSets.FSetPositiveX.PositiveSet.filter_3	40
Coq.FSets.FSetPositiveX.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.for_all_1	40
Coq.FSets.FSetPositiveX.PositiveSet.for_all_2	40
Coq.FSets.FSetPositiveX.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.exists_1	40
Coq.FSets.FSetPositiveX.PositiveSet.exists_2	40
Coq.FSets.FSetPositiveX.PositiveSet.partition_filter	40
Coq.FSets.FSetPositiveX.PositiveSet.partition_1	40
Coq.FSets.FSetPositiveX.PositiveSet.partition_2	40
Coq.FSets.FSetPositiveX.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.elements_1	40
Coq.FSets.FSetPositiveX.PositiveSet.elements_2	40
Coq.FSets.FSetPositiveX.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositiveX.PositiveSet.elements_3	40
Coq.FSets.FSetPositiveX.PositiveSet.elements_3w	40
Coq.FSets.FSetPositiveX.PositiveSet.choose_1	40
Coq.FSets.FSetPositiveX.PositiveSet.choose_2	40
Coq.FSets.FSetPositiveX.PositiveSet.choose_empty	40
Coq.FSets.FSetPositiveX.PositiveSet.choose_3'	40
Coq.FSets.FSetPositiveX.PositiveSet.choose_3	40
Coq.FSets.FSetPositiveX.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositiveX.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositiveX.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositiveX.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositiveX.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositiveX.PositiveSet.max_elt_2	40
Coq.FSets.FMapWeakListX.Raw.empty_1	40		search with cache ().	0.0150411128998	0
Coq.FSets.FMapWeakListX.Raw.empty_NoDup	40		search with cache ().	0.0117080211639	0
Coq.FSets.FMapWeakListX.Raw.is_empty_1	40
Coq.FSets.FMapWeakListX.Raw.is_empty_2	40	18.1	search with cache (only 1: intros EQ; only 1: now destruct m).	34.7168910503	2875
Coq.FSets.FMapWeakListX.Raw.mem_1	40
Coq.FSets.FMapWeakListX.Raw.mem_2	40
Coq.FSets.FMapWeakListX.Raw.find_2	40
Coq.FSets.FMapWeakListX.Raw.find_1	40
Coq.FSets.FMapWeakListX.Raw.find_eq	40
Coq.FSets.FMapWeakListX.Raw.add_1	40
Coq.FSets.FMapWeakListX.Raw.add_2	40
Coq.FSets.FMapWeakListX.Raw.add_3	40
Coq.FSets.FMapWeakListX.Raw.add_3'	40
Coq.FSets.FMapWeakListX.Raw.add_NoDup	40
Coq.FSets.FMapWeakListX.Raw.add_eq	40
Coq.FSets.FMapWeakListX.Raw.add_not_eq	40
Coq.FSets.FMapWeakListX.Raw.remove_1	40
Coq.FSets.FMapWeakListX.Raw.remove_2	40
Coq.FSets.FMapWeakListX.Raw.remove_3	40
Coq.FSets.FMapWeakListX.Raw.remove_3'	40
Coq.FSets.FMapWeakListX.Raw.remove_NoDup	40
Coq.FSets.FMapWeakListX.Raw.elements_1	40		search with cache ().	0.00917100906372	0
Coq.FSets.FMapWeakListX.Raw.elements_2	40		search with cache ().	0.00873804092407	0
Coq.FSets.FMapWeakListX.Raw.elements_3w	40		search with cache ().	0.00804996490479	0
Coq.FSets.FMapWeakListX.Raw.fold_1	40
Coq.FSets.FMapWeakListX.Raw.submap_1	40
Coq.FSets.FMapWeakListX.Raw.submap_2	40
Coq.FSets.FMapWeakListX.Raw.equal_1	40
Coq.FSets.FMapWeakListX.Raw.equal_2	40
Coq.FSets.FMapWeakListX.Raw.map_1	40
Coq.FSets.FMapWeakListX.Raw.map_2	40
Coq.FSets.FMapWeakListX.Raw.map_NoDup	40
Coq.FSets.FMapWeakListX.Raw.mapi_1	40
Coq.FSets.FMapWeakListX.Raw.mapi_2	40	0.1.2.1.1.10.5.0	search with cache (only 1: induction m; only 1: inversion H; only 1: destruct H; only 1: inversion H; only 1: rename x0 into e'; only 1: unfold eqke in *; only 1: rename x0 into e'; only 1: destruct IHm as (e'', hyp)).	12.4839959145	1423
Coq.FSets.FMapWeakListX.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakListX.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakListX.Raw.combine_NoDup	40
Coq.FSets.FMapWeakListX.Raw.combine_l_1	40
Coq.FSets.FMapWeakListX.Raw.combine_r_1	40
Coq.FSets.FMapWeakListX.Raw.combine_1	40
Coq.FSets.FMapWeakListX.Raw.map2_NoDup	40
Coq.FSets.FMapWeakListX.Raw.map2_0	40
Coq.FSets.FMapWeakListX.Raw.map2_1	40
Coq.FSets.FMapWeakListX.Raw.map2_2	40
Coq.FSets.FMapWeakListX.Make.MapsTo_1	40
Coq.FSets.FMapWeakListX.Make.mem_1	40
Coq.FSets.FMapWeakListX.Make.mem_2	40
Coq.FSets.FMapWeakListX.Make.empty_1	40		search with cache ().	0.0225970745087	0
Coq.FSets.FMapWeakListX.Make.is_empty_1	40
Coq.FSets.FMapWeakListX.Make.is_empty_2	40
Coq.FSets.FMapWeakListX.Make.add_1	40
Coq.FSets.FMapWeakListX.Make.add_2	40
Coq.FSets.FMapWeakListX.Make.add_3	40
Coq.FSets.FMapWeakListX.Make.remove_1	40
Coq.FSets.FMapWeakListX.Make.remove_2	40
Coq.FSets.FMapWeakListX.Make.remove_3	40
Coq.FSets.FMapWeakListX.Make.find_1	40
Coq.FSets.FMapWeakListX.Make.find_2	40
Coq.FSets.FMapWeakListX.Make.elements_1	40		search with cache ().	0.0143780708313	0
Coq.FSets.FMapWeakListX.Make.elements_2	40		search with cache ().	0.0143010616302	0
Coq.FSets.FMapWeakListX.Make.elements_3w	40	130	search with cache (only 1: destruct m).	4.75238990784	8601
Coq.FSets.FMapWeakListX.Make.cardinal_1	40		search with cache ().	0.0132949352264	0
Coq.FSets.FMapWeakListX.Make.fold_1	40
Coq.FSets.FMapWeakListX.Make.equal_1	40
Coq.FSets.FMapWeakListX.Make.equal_2	40
Coq.FSets.FMapWeakListX.Make.map_1	40
Coq.FSets.FMapWeakListX.Make.map_2	40
Coq.FSets.FMapWeakListX.Make.mapi_1	40
Coq.FSets.FMapWeakListX.Make.mapi_2	40
Coq.FSets.FMapWeakListX.Make.map2_1	40
Coq.FSets.FMapWeakListX.Make.map2_2	40
Coq.FSets.FSetCompatX.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompatX.Backport_Sets.compare	40
Coq.FSets.FSetCompatX.Update_WSets.In_compat	40
Coq.FSets.FSetCompatX.Update_WSets.mem_spec	40
Coq.FSets.FSetCompatX.Update_WSets.equal_spec	40
Coq.FSets.FSetCompatX.Update_WSets.subset_spec	40
Coq.FSets.FSetCompatX.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompatX.Update_WSets.add_spec	40
Coq.FSets.FSetCompatX.Update_WSets.remove_spec	40
Coq.FSets.FSetCompatX.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompatX.Update_WSets.elements_spec1	40	1.0.14	search with cache (only 1: red; only 1: intuition; only 1: intuition).	0.573824882507	131
Coq.FSets.FSetCompatX.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompatX.Update_WSets.exists_spec	40
Coq.FSets.FSetCompatX.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompatX.Update_Sets.lt_compat	40
Coq.FSets.FSetCompatX.Update_Sets.compare_spec	40
Coq.FSets.FMapPositiveX.append_assoc_0	40
Coq.FSets.FMapPositiveX.append_assoc_1	40	1.1.0.0.7.0.4.24.46	search with cache (only 1: apply Pos2Nat.inj; only 1: unfold Pos.to_nat; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: induction i; only 1: f_equal; only 1: f_equal; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: rewrite Pmult_nat_mult, Nat.mul_comm).	17.5432322025	24236
Coq.FSets.FMapPositiveX.append_neutral_r	40
Coq.FSets.FMapPositiveX.append_neutral_l	40		search with cache ().	0.0099048614502	0
Coq.FSets.FMapPositiveX.PositiveMap.gempty	40
Coq.FSets.FMapPositiveX.PositiveMap.gss	40
Coq.FSets.FMapPositiveX.PositiveMap.gleaf	40
Coq.FSets.FMapPositiveX.PositiveMap.gso	40
Coq.FSets.FMapPositiveX.PositiveMap.rleaf	40
Coq.FSets.FMapPositiveX.PositiveMap.grs	40
Coq.FSets.FMapPositiveX.PositiveMap.gro	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_correct	40
Coq.FSets.FMapPositiveX.PositiveMap.xfind_left	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_io	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositiveX.PositiveMap.find_xfind_h	40	1	search with cache (only 1: destruct i).	0.0234701633453	2
Coq.FSets.FMapPositiveX.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_complete	40
Coq.FSets.FMapPositiveX.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositiveX.PositiveMap.mem_find	40
Coq.FSets.FMapPositiveX.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositiveX.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositiveX.PositiveMap.mem_1	40
Coq.FSets.FMapPositiveX.PositiveMap.mem_2	40
Coq.FSets.FMapPositiveX.PositiveMap.MapsTo_1	40		search with cache ().	0.0172219276428	0
Coq.FSets.FMapPositiveX.PositiveMap.find_1	40		search with cache ().	0.012218952179	0
Coq.FSets.FMapPositiveX.PositiveMap.find_2	40		search with cache ().	0.0480160713196	0
Coq.FSets.FMapPositiveX.PositiveMap.empty_1	40	10.0.24	search with cache (only 1: apply lt_wf_ind; only 1: unfold Empty, MapsTo; only 1: destruct a).	6.39340209961	1662
Coq.FSets.FMapPositiveX.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositiveX.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositiveX.PositiveMap.add_1	40
Coq.FSets.FMapPositiveX.PositiveMap.add_2	40
Coq.FSets.FMapPositiveX.PositiveMap.add_3	40
Coq.FSets.FMapPositiveX.PositiveMap.remove_1	40
Coq.FSets.FMapPositiveX.PositiveMap.remove_2	40
Coq.FSets.FMapPositiveX.PositiveMap.remove_3	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_1	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_2	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_3	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_3w	40
Coq.FSets.FMapPositiveX.PositiveMap.xgmapi	40
Coq.FSets.FMapPositiveX.PositiveMap.gmapi	40
Coq.FSets.FMapPositiveX.PositiveMap.mapi_1	40
Coq.FSets.FMapPositiveX.PositiveMap.mapi_2	40
Coq.FSets.FMapPositiveX.PositiveMap.map_1	40
Coq.FSets.FMapPositiveX.PositiveMap.map_2	40
Coq.FSets.FMapPositiveX.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositiveX.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositiveX.PositiveMap.gmap2	40
Coq.FSets.FMapPositiveX.PositiveMap.map2_1	40
Coq.FSets.FMapPositiveX.PositiveMap.map2_2	40
Coq.FSets.FMapPositiveX.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositiveX.PositiveMap.fold_1	40
Coq.FSets.FMapPositiveX.PositiveMap.equal_1	40
Coq.FSets.FMapPositiveX.PositiveMap.equal_2	40
Coq.FSets.FMapPositiveX.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositiveX.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositiveX.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositiveX.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.mem_eq	40	0.0.1	search with cache (only 1: generalize (FM.mem_iff s x), (FM.mem_iff s y), (FM.In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s)).	0.0907571315765	4
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.choose_mem_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.choose_mem_2	40	2.0	search with cache (only 1: apply is_empty_1; only 1: auto with set).	0.273895978928	22
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_mem_1	40	10	search with cache (only 1: intuition).	0.957759857178	80
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_mem_2	40	0.2.0	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s))).	0.158931016922	5
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_mem_1	40	5.7	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	2.56807398796	135
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_mem_2	40	0.2.1	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s))).	0.163980960846	6
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0902950763702	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_mem	40	1.1.0.0.0.0	search with cache (only 1: generalize (FM.mem_iff (union s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: destruct (mem x (union s s'))).	2.83329916	45
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_mem	40	1.1.0.1.0.0.0	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: destruct (mem x (inter s s'))).	4.92353415489	77
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.diff_mem	40	1.1.0.1.0.0.0	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.diff_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: destruct (mem x (diff s s'))).	7.57828998566	76
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.mem_3	40	0.15	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.diff_iff s s' x); only 1: destruct (mem x s)).	2.8456299305	439
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.mem_4	40	17	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.diff_iff s s' x)).	4.43887901306	671
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_refl	40	4	search with cache (only 1: apply equal_1).	0.0319240093231	5
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_sym	40	3.0.3.0.11	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite (equal_2 H); only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: apply equal_1).	12.0549080372	672
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_trans	40	2	search with cache (only 1: rewrite (equal_2 H)).	0.0348920822144	3
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_equal	40	0	search with cache (only 1: rewrite (equal_2 H)).	0.0330591201782	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_cardinal	40	0	search with cache (only 1: rewrite (equal_2 H)).	0.0417799949646	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_refl	40	2	search with cache (only 1: apply subset_1).	0.0296051502228	3
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_antisym	40	8	search with cache (only 1: auto with set fset).	0.034157037735	9
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.0266649723053	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_mem_3	40	5	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y)).	0.323987007141	21
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_equal	40	0.2	search with cache (only 1: apply equal_1; only 1: auto with set).	0.101667165756	4
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_mem_3	40	3	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y)).	2.96684002876	95
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_equal	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_remove	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_add	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.singleton_mem_1	40	5.1	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	7.60043597221	260
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.singleton_mem_2	40	0.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x))).	2.44702601433	82
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.singleton_mem_3	40	5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y)).	0.600025892258	51
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_sym	40	0	search with cache (only 1: intuition).	0.0719230175018	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0312540531158	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0296649932861	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0286238193512	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.024759054184	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0344150066376	3
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.0271759033203	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0253388881683	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0262939929962	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0348589420319	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_sym	40	0.4	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.116767883301	6
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0275099277496	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0274169445038	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0269889831543	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0623388290405	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0739729404449	2
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0632297992706	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0659220218658	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_add_2	40	4.1.3.2	search with cache (only 1: apply equal_1; only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: destruct (mem x s'); only 1: intuition).	23.9977350235	497
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0264248847961	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0249428749084	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0366580486298	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.diff_subset	40	0.1	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0524818897247	3
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.028223991394	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.141914844513	4
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0364739894867	2
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0264320373535	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exclusive_set	40	0.2.0.0.2	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.diff_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.diff_iff s s' x); only 1: destruct (mem x s)).	11.2604970932	330
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0427229404449	2
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.fold_add	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_fold_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_cardinal_1	40	23	search with cache (only 1: auto with set fset).	2.77745509148	1440
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_cardinal_2	40	0.4.1.0.0	search with cache (only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: destruct (mem x s); only 1: auto with fset).	0.518360137939	53
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_cardinal	40	17	search with cache (only 1: auto with set fset).	0.67987704277	242
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.Comp'	40	4	search with cache (only 1: solve_proper).	0.0336558818817	5
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.partition_filter_1	40	27	search with cache (only 1: auto with set).	0.376924037933	361
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0910189151764	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.filter_union	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_mem_1	40	5.2.2.0.8	search with cache (only 1: apply for_all_1; only 1: red; only 1: generalize (H x); only 1: destruct (f x); only 1: intuition).	3.31826686859	578
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_mem_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.Comp'	40	1.12	search with cache (only 1: repeat red; only 1: f_equal).	0.229568958282	127
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.sum_compat	40
Coq.FSets.FMapAVLX.Raw.Proofs.MapsTo_In	40
Coq.FSets.FMapAVLX.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVLX.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVLX.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.In_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.In_node_iff	40	2	search with cache (only 1: intuition_in).	0.433674097061	3
Coq.FSets.FMapAVLX.Raw.Proofs.lt_leaf	40		search with cache ().	0.0201480388641	0
Coq.FSets.FMapAVLX.Raw.Proofs.gt_leaf	40		search with cache ().	0.020702123642	0
Coq.FSets.FMapAVLX.Raw.Proofs.lt_tree_node	40	10.2.24	search with cache (only 1: intros e' eqfind; only 1: intuition_in; only 1: L.MX.order).	27.840528965	2746
Coq.FSets.FMapAVLX.Raw.Proofs.gt_tree_node	40	0.2.6	search with cache (only 1: compute; only 1: intuition_in; only 1: order).	1.55621910095	24
Coq.FSets.FMapAVLX.Raw.Proofs.lt_left	40		search with cache ().	0.0141830444336	0
Coq.FSets.FMapAVLX.Raw.Proofs.lt_right	40		search with cache ().	0.0135371685028	0
Coq.FSets.FMapAVLX.Raw.Proofs.gt_left	40		search with cache ().	0.0137557983398	0
Coq.FSets.FMapAVLX.Raw.Proofs.gt_right	40		search with cache ().	0.0141069889069	0
Coq.FSets.FMapAVLX.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.lt_tree_trans	40	0.22	search with cache (only 1: compute; only 1: order).	0.34771490097	255
Coq.FSets.FMapAVLX.Raw.Proofs.gt_tree_not_in	40	0	search with cache (only 1: order).	0.0207290649414	1
Coq.FSets.FMapAVLX.Raw.Proofs.gt_tree_trans	40	0.15	search with cache (only 1: intro abs; only 1: order).	1.76237106323	114
Coq.FSets.FMapAVLX.Raw.Proofs.empty_bst	40		search with cache ().	0.0123839378357	0
Coq.FSets.FMapAVLX.Raw.Proofs.empty_1	40		search with cache ().	0.0159850120544	0
Coq.FSets.FMapAVLX.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.is_empty_2	40	0	search with cache (only 1: destruct m as [| r x e l h]).	0.0371220111847	1
Coq.FSets.FMapAVLX.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.mem_2	40	0	search with cache (only 1: functional induction mem x m).	0.0378720760345	1
Coq.FSets.FMapAVLX.Raw.Proofs.find_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_2	40	0	search with cache (only 1: functional induction find x m).	0.055948972702	1
Coq.FSets.FMapAVLX.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_in	40	1	search with cache (only 1: functional induction find x m).	0.0375828742981	2
Coq.FSets.FMapAVLX.Raw.Proofs.in_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_in_iff	40
Coq.FSets.FMapAVLX.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVLX.Raw.Proofs.create_bst	40		search with cache ().	0.022796869278	0
Coq.FSets.FMapAVLX.Raw.Proofs.create_in	40	49	search with cache (only 1: inversion H).	24.6633758545	1230
Coq.FSets.FMapAVLX.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVLX.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_3	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVLX.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVLX.Raw.Proofs.join_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.join_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVLX.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVLX.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVLX.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.flatten_e_elements	40	0.0	search with cache (only 1: unfold elements; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse).	0.0908968448639	2
Coq.FSets.FMapAVLX.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVLX.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVLX.Raw.Proofs.equal_more_IfEq	40	18	search with cache (only 1: inversion H).	0.728392124176	145
Coq.FSets.FMapAVLX.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVLX.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVLX.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVLX.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_2	40	4.18	search with cache (only 1: induction m; only 1: intuition_in).	1.57768321037	265
Coq.FSets.FMapAVLX.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.mapi_1	40	0.20.0	search with cache (only 1: induction m; only 1: inversion_clear H; only 1: eauto with ordered_type).	5.16831803322	517
Coq.FSets.FMapAVLX.Raw.Proofs.mapi_2	40	10.5	search with cache (only 1: induction m; only 1: intuition_in).	1.60674595833	157
Coq.FSets.FMapAVLX.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVLX.IntMake.MapsTo_1	40
Coq.FSets.FMapAVLX.IntMake.mem_1	40
Coq.FSets.FMapAVLX.IntMake.mem_2	40
Coq.FSets.FMapAVLX.IntMake.empty_1	40		search with cache ().	0.0218689441681	0
Coq.FSets.FMapAVLX.IntMake.is_empty_1	40
Coq.FSets.FMapAVLX.IntMake.is_empty_2	40
Coq.FSets.FMapAVLX.IntMake.add_1	40
Coq.FSets.FMapAVLX.IntMake.add_2	40
Coq.FSets.FMapAVLX.IntMake.add_3	40
Coq.FSets.FMapAVLX.IntMake.remove_1	40
Coq.FSets.FMapAVLX.IntMake.remove_2	40
Coq.FSets.FMapAVLX.IntMake.remove_3	40
Coq.FSets.FMapAVLX.IntMake.find_1	40
Coq.FSets.FMapAVLX.IntMake.find_2	40	29	search with cache (only 1: apply L.find_2).	0.895406007767	745
Coq.FSets.FMapAVLX.IntMake.fold_1	40
Coq.FSets.FMapAVLX.IntMake.elements_1	40
Coq.FSets.FMapAVLX.IntMake.elements_2	40
Coq.FSets.FMapAVLX.IntMake.elements_3	40
Coq.FSets.FMapAVLX.IntMake.elements_3w	40
Coq.FSets.FMapAVLX.IntMake.cardinal_1	40
Coq.FSets.FMapAVLX.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVLX.IntMake.equal_1	40
Coq.FSets.FMapAVLX.IntMake.equal_2	40
Coq.FSets.FMapAVLX.IntMake.map_1	40
Coq.FSets.FMapAVLX.IntMake.map_2	40
Coq.FSets.FMapAVLX.IntMake.mapi_1	40
Coq.FSets.FMapAVLX.IntMake.mapi_2	40
Coq.FSets.FMapAVLX.IntMake.map2_1	40
Coq.FSets.FMapAVLX.IntMake.map2_2	40
Coq.FSets.FMapAVLX.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVLX.IntMake_ord.compare_end_Cmp	40
Coq.FSets.FMapAVLX.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVLX.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVLX.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVLX.IntMake_ord.compare	40
Coq.FSets.FMapAVLX.IntMake_ord.eq_seq	40		search with cache ().	0.0163700580597	0
Coq.FSets.FMapAVLX.IntMake_ord.lt_slt	40		search with cache ().	0.0159740447998	0
Coq.FSets.FMapAVLX.IntMake_ord.eq_1	40
Coq.FSets.FMapAVLX.IntMake_ord.eq_2	40
Coq.FSets.FMapAVLX.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVLX.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVLX.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVLX.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVLX.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFactsX.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.mem_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.equal_iff	40	23.23	search with cache (only 1: intuition; only 1: intuition).	18.8921058178	5004
Coq.FSets.FSetFactsX.WFacts_fun.subset_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.empty_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.is_empty_iff	40	4.4	search with cache (only 1: intuition; only 1: intuition).	0.309412956238	20
Coq.FSets.FSetFactsX.WFacts_fun.singleton_iff	40	21.21	search with cache (only 1: auto with *; only 1: auto with *).	2.19356513023	1296
Coq.FSets.FSetFactsX.WFacts_fun.add_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.remove_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.remove_neq_iff	40	0.6	search with cache (only 1: apply remove_3 with x; only 1: apply remove_2).	0.0855870246887	8
Coq.FSets.FSetFactsX.WFacts_fun.union_iff	40	12.4.0.11	search with cache (only 1: intuition; only 1: apply mem_2; only 1: intuition; only 1: simpl_relation).	13.4808499813	2621
Coq.FSets.FSetFactsX.WFacts_fun.inter_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.diff_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.filter_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.for_all_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.exists_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.elements_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.mem_b	40
Coq.FSets.FSetFactsX.WFacts_fun.empty_b	40
Coq.FSets.FSetFactsX.WFacts_fun.add_b	40
Coq.FSets.FSetFactsX.WFacts_fun.add_neq_b	40	0.2.1.2	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (eq_dec x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s))).	4.72943305969	120
Coq.FSets.FSetFactsX.WFacts_fun.remove_b	40
Coq.FSets.FSetFactsX.WFacts_fun.remove_neq_b	40	0.2.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s))).	3.41620492935	124
Coq.FSets.FSetFactsX.WFacts_fun.singleton_b	40
Coq.FSets.FSetFactsX.WFacts_fun.union_b	40
Coq.FSets.FSetFactsX.WFacts_fun.inter_b	40
Coq.FSets.FSetFactsX.WFacts_fun.diff_b	40
Coq.FSets.FSetFactsX.WFacts_fun.elements_b	40
Coq.FSets.FSetFactsX.WFacts_fun.filter_b	40
Coq.FSets.FSetFactsX.WFacts_fun.for_all_b	40
Coq.FSets.FSetFactsX.WFacts_fun.exists_b	40
Coq.FSets.FSetFactsX.WFacts_fun.E_ST	40	15.11	search with cache (only 1: constructor; only 1: eauto).	1.63506698608	481
Coq.FSets.FSetFactsX.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFactsX.WFacts_fun.In_m	40
Coq.FSets.FSetFactsX.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFactsX.WFacts_fun.Empty_m	40
Coq.FSets.FSetFactsX.WFacts_fun.mem_m	40
Coq.FSets.FSetFactsX.WFacts_fun.singleton_m	40
Coq.FSets.FSetFactsX.WFacts_fun.add_m	40
Coq.FSets.FSetFactsX.WFacts_fun.remove_m	40
Coq.FSets.FSetFactsX.WFacts_fun.union_m	40
Coq.FSets.FSetFactsX.WFacts_fun.inter_m	40
Coq.FSets.FSetFactsX.WFacts_fun.diff_m	40
Coq.FSets.FSetFactsX.WFacts_fun.Subset_m	40
Coq.FSets.FSetFactsX.WFacts_fun.subset_m	40
Coq.FSets.FSetFactsX.WFacts_fun.equal_m	40
Coq.FSets.FSetFactsX.WFacts_fun.Subset_refl	40		search with cache ().	0.0123341083527	0
Coq.FSets.FSetFactsX.WFacts_fun.Subset_trans	40
Coq.FSets.FSetFactsX.WFacts_fun.In_s_m	40
Coq.FSets.FSetFactsX.WFacts_fun.Empty_s_m_Proper	40
Coq.FSets.FSetFactsX.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFactsX.WFacts_fun.remove_s_m_Proper	40
Coq.FSets.FSetFactsX.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFactsX.WFacts_fun.inter_s_m_Proper	40	0.11	search with cache (only 1: unfold Subset; only 1: eauto with set).	1.20112299919	134
Coq.FSets.FSetFactsX.WFacts_fun.diff_s_m_Proper	40
Coq.FSets.FSetFactsX.WFacts_fun.filter_equal	40
Coq.FSets.FSetFactsX.WFacts_fun.filter_ext	40
Coq.FSets.FSetFactsX.WFacts_fun.filter_subset	40
Coq.FSets.FMapFullAVLX.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVLX.AvlProofs.avl_node	40		search with cache ().	0.0154480934143	0
Coq.FSets.FMapFullAVLX.AvlProofs.height_0	40
Coq.FSets.FMapFullAVLX.AvlProofs.empty_avl	40		search with cache ().	0.00970387458801	0
Coq.FSets.FMapFullAVLX.AvlProofs.create_avl	40		search with cache ().	0.0241661071777	0
Coq.FSets.FMapFullAVLX.AvlProofs.create_height	40		search with cache ().	0.0144262313843	0
Coq.FSets.FMapFullAVLX.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVLX.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.merge_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.map_height	40
Coq.FSets.FMapFullAVLX.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.mapi_height	40	2	search with cache (only 1: destruct m).	0.0293769836426	3
Coq.FSets.FMapFullAVLX.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVLX.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVLX.IntMake.mem_1	40
Coq.FSets.FMapFullAVLX.IntMake.mem_2	40
Coq.FSets.FMapFullAVLX.IntMake.empty_1	40		search with cache ().	0.0236959457397	0
Coq.FSets.FMapFullAVLX.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVLX.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVLX.IntMake.add_1	40
Coq.FSets.FMapFullAVLX.IntMake.add_2	40
Coq.FSets.FMapFullAVLX.IntMake.add_3	40
Coq.FSets.FMapFullAVLX.IntMake.remove_1	40
Coq.FSets.FMapFullAVLX.IntMake.remove_2	40
Coq.FSets.FMapFullAVLX.IntMake.remove_3	40
Coq.FSets.FMapFullAVLX.IntMake.find_1	40
Coq.FSets.FMapFullAVLX.IntMake.find_2	40	0.69	search with cache (only 1: compute; only 1: auto using Proofs.find_1, find_2).	5.29485082626	2780
Coq.FSets.FMapFullAVLX.IntMake.fold_1	40
Coq.FSets.FMapFullAVLX.IntMake.elements_1	40
Coq.FSets.FMapFullAVLX.IntMake.elements_2	40
Coq.FSets.FMapFullAVLX.IntMake.elements_3	40
Coq.FSets.FMapFullAVLX.IntMake.elements_3w	40
Coq.FSets.FMapFullAVLX.IntMake.cardinal_1	40
Coq.FSets.FMapFullAVLX.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVLX.IntMake.equal_1	40
Coq.FSets.FMapFullAVLX.IntMake.equal_2	40
Coq.FSets.FMapFullAVLX.IntMake.map_1	40
Coq.FSets.FMapFullAVLX.IntMake.map_2	40
Coq.FSets.FMapFullAVLX.IntMake.mapi_1	40
Coq.FSets.FMapFullAVLX.IntMake.mapi_2	40
Coq.FSets.FMapFullAVLX.IntMake.map2_1	40
Coq.FSets.FMapFullAVLX.IntMake.map2_2	40
Coq.FSets.FMapFullAVLX.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVLX.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVLX.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVLX.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVLX.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVLX.IntMake_ord.compare	40
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_seq	40		search with cache ().	0.0181241035461	0
Coq.FSets.FMapFullAVLX.IntMake_ord.lt_slt	40		search with cache ().	0.0178880691528	0
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVLX.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVLX.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.In_In	40		search with cache ().	0.0180549621582	0
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.Subset_Included	40		search with cache ().	0.0193221569061	0
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.Equal_Same_set	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.empty_Empty_Set	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.Empty_Empty_set	40	41.6.3	search with cache (only 1: split; only 1: compute; only 1: Dec.fsetdec).	39.8611090183	13963
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.singleton_Singleton	40	24.1.57	search with cache (only 1: compute; only 1: Dec.fsetdec; only 1: intuition).	20.3243970871	7892
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetLogicalFacts.test_push	40		search with cache ().	0.265846014023	0
Coq.FSets.FSetDecideX.WDecide_fun.FSetLogicalFacts.test_pull	40		search with cache ().	0.370517015457	0
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40		search with cache ().	0.0109071731567	0
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	7.1	search with cache (only 1: apply remove_2; only 1: eauto with set).	0.539902925491	10
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: apply singleton_2).	0.0208549499512	1
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_add_In	40	27	search with cache (only 1: fsetdec).	7.578125	595
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	4	search with cache (only 1: fsetdec).	0.345158815384	5
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	16.1.1	search with cache (only 1: intuition; only 1: intuition; only 1: fsetdec).	10.0367548466	840
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.eq_chain_test	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_too_complex	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.function_test_1	40	9	search with cache (only 1: fsetdec).	0.319648981094	15
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.function_test_2	40	13	search with cache (only 1: fsetdec).	0.74658203125	80
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_baydemir	40	22	search with cache (only 1: fsetdec).	1.6611058712	234
Coq.FSets.FSetPropertiesX.WProperties_fun.In_dec	40	4.10	search with cache (only 1: generalize (F.mem_iff s x); only 1: destruct (mem x s)).	3.09504199028	121
Coq.FSets.FSetPropertiesX.WProperties_fun.Add_Equal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.equal_refl	40		search with cache ().	0.0188829898834	0
Coq.FSets.FSetPropertiesX.WProperties_fun.equal_sym	40		search with cache ().	0.023500919342	0
Coq.FSets.FSetPropertiesX.WProperties_fun.equal_trans	40
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_refl	40		search with cache ().	0.0157809257507	0
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0496151447296	1
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_antisym	40		search with cache ().	0.0208699703217	0
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0628471374512	1
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_empty	40	1.1.0.1.0	search with cache (only 1: apply subset_2; only 1: apply subset_1; only 1: apply subset_2; only 1: apply subset_1; only 1: fsetdec).	0.152145862579	12
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0477659702301	1
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0474269390106	1
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0635690689087	1
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0559349060059	1
Coq.FSets.FSetPropertiesX.WProperties_fun.in_subset	40		search with cache ().	0.0114929676056	0
Coq.FSets.FSetPropertiesX.WProperties_fun.double_inclusion	40	0.0	search with cache (only 1: fsetdec; only 1: fsetdec).	0.082270860672	2
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0709397792816	1
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.055468082428	1
Coq.FSets.FSetPropertiesX.WProperties_fun.add_equal	40	0.0.0	search with cache (only 1: red; only 1: fsetdec; only 1: fsetdec).	0.108737945557	3
Coq.FSets.FSetPropertiesX.WProperties_fun.add_add	40	0	search with cache (only 1: fsetdec).	0.121803998947	1
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_equal	40	3	search with cache (only 1: fsetdec).	0.176281929016	4
Coq.FSets.FSetPropertiesX.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.0926132202148	1
Coq.FSets.FSetPropertiesX.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.102396011353	1
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.113233089447	1
Coq.FSets.FSetPropertiesX.WProperties_fun.singleton_equal_add	40	1	search with cache (only 1: fsetdec).	0.0750150680542	2
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.204234838486	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_sym	40	4	search with cache (only 1: fsetdec).	0.0795209407806	5
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0881319046021	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0990891456604	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0985341072083	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.118176937103	1
Coq.FSets.FSetPropertiesX.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0851809978485	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.132658004761	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.208133935928	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.195441007614	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0372550487518	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0382940769196	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_3	40	2	search with cache (only 1: fsetdec).	0.0639610290527	3
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_4	40	2	search with cache (only 1: fsetdec).	0.0530099868774	3
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0523118972778	1
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0965461730957	1
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0959320068359	1
Coq.FSets.FSetPropertiesX.WProperties_fun.not_in_union	40	11	search with cache (only 1: fsetdec).	25.2454519272	445
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_sym	40	3	search with cache (only 1: fsetdec).	0.510458946228	18
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_subset_equal	40	2	search with cache (only 1: fsetdec).	0.081729888916	3
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0953900814056	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0928769111633	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.111262083054	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.146296024323	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.148738145828	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_add_1	40	6	search with cache (only 1: fsetdec).	0.800179958344	34
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.11446595192	1
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_inter_1	40	3	search with cache (only 1: fsetdec).	0.052081823349	4
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0602920055389	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0503578186035	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0379550457001	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.051481962204	1
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_diff_1	40	4	search with cache (only 1: fsetdec).	0.0568878650665	5
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0752727985382	1
Coq.FSets.FSetPropertiesX.WProperties_fun.diff_subset	40	1	search with cache (only 1: fsetdec).	0.0425560474396	2
Coq.FSets.FSetPropertiesX.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.092353105545	1
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0993778705597	1
Coq.FSets.FSetPropertiesX.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.131911993027	1
Coq.FSets.FSetPropertiesX.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.115835189819	1
Coq.FSets.FSetPropertiesX.WProperties_fun.Add_add	40
Coq.FSets.FSetPropertiesX.WProperties_fun.Add_remove	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.177286148071	3
Coq.FSets.FSetPropertiesX.WProperties_fun.union_Add	40
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_Add	40
Coq.FSets.FSetPropertiesX.WProperties_fun.union_Equal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_Add_2	40
Coq.FSets.FSetPropertiesX.WProperties_fun.elements_Empty	40
Coq.FSets.FSetPropertiesX.WProperties_fun.elements_empty	40
Coq.FSets.FSetPropertiesX.WProperties_fun.of_list_1	40
Coq.FSets.FSetPropertiesX.WProperties_fun.of_list_2	40
Coq.FSets.FSetPropertiesX.WProperties_fun.of_list_3	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_rec	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_rec_nodep	40	0	search with cache (only 1: apply fold_rec).	0.0761721134186	1
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_rel	40
Coq.FSets.FSetPropertiesX.WProperties_fun.set_induction	40
Coq.FSets.FSetPropertiesX.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_identity	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_0	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_1	40	5.4	search with cache (only 1: apply fold_rec_bis; only 1: fsetdec).	1.28160881996	94
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_2	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_1b	40	4.2.20.6	search with cache (only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: rewrite M.fold_1; only 1: clear H3; only 1: intuition).	31.8816189766	12010
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_commutes	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_init	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_equal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_empty	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_add	40	2.3	search with cache (only 1: apply fold_2 with (eqA := eqA); only 1: intuition).	0.418079853058	43
Coq.FSets.FSetPropertiesX.WProperties_fun.add_fold	40
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_fold_1	40
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_fold_2	40	1.6	search with cache (only 1: apply fold_equal; only 1: auto with set).	2.10990405083	146
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_union	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_plus	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_0	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_1	40	0.11.0.9.3	search with cache (only 1: rewrite elements_Empty in H; only 1: assert (forall a, ~ List.In a (elements s)); only 1: destruct (elements s); only 1: rewrite cardinal_1; only 1: destruct (elements s)).	3.30395817757	1647
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_2	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_inv_2b	40	0.0.0.0	search with cache (only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: exists e).	0.0688149929047	4
Coq.FSets.FSetPropertiesX.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_cardinal	40	0.0.0.0	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.137254953384	4
Coq.FSets.FSetPropertiesX.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.union_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetPropertiesX.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetPropertiesX.WProperties_fun.union_cardinal_le	40	1.8	search with cache (only 1: generalize (cardinal_inv_2 (s:=s)); only 1: rewrite <- union_inter_cardinal).	0.600741147995	115
Coq.FSets.FSetPropertiesX.WProperties_fun.add_cardinal_1	40	2.4	search with cache (only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	1.11201000214	102
Coq.FSets.FSetPropertiesX.WProperties_fun.add_cardinal_2	40
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_cardinal_1	40	0.0.7.5	search with cache (only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	3.94220113754	694
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_cardinal_2	40	5.13	search with cache (only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	28.5446710587	5203
Coq.FSets.FSetPropertiesX.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetPropertiesX.OrdProperties.gtb_1	40
Coq.FSets.FSetPropertiesX.OrdProperties.leb_1	40
Coq.FSets.FSetPropertiesX.OrdProperties.gtb_compat	40	1.0.0.0.0.2	search with cache (only 1: simpl_relation; only 1: unfold gtb; only 1: destruct (E.compare x y); only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: ME.elim_comp).	0.352341890335	12
Coq.FSets.FSetPropertiesX.OrdProperties.leb_compat	40	1.1.1.0.0.1.1	search with cache (only 1: red; only 1: simpl_relation; only 1: unfold leb, gtb; only 1: destruct (E.compare x y); only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: ME.elim_comp).	9.19560194016	301
Coq.FSets.FSetPropertiesX.OrdProperties.elements_split	40
Coq.FSets.FSetPropertiesX.OrdProperties.elements_Add	40
Coq.FSets.FSetPropertiesX.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetPropertiesX.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetPropertiesX.OrdProperties.set_induction_max	40
Coq.FSets.FSetPropertiesX.OrdProperties.set_induction_min	40
Coq.FSets.FSetPropertiesX.OrdProperties.fold_3	40
Coq.FSets.FSetPropertiesX.OrdProperties.fold_4	40
Coq.FSets.FSetPropertiesX.OrdProperties.fold_equal	40
Coq.FSets.FSetPropertiesX.OrdProperties.add_fold	40	0.0	search with cache (only 1: apply P.fold_equal; only 1: auto with set).	0.0848529338837	2
Coq.FSets.FSetPropertiesX.OrdProperties.remove_fold_2	40	0.0	search with cache (only 1: apply P.fold_equal; only 1: auto with set).	0.103643894196	2
Coq.FSets.FSetPropertiesX.OrdProperties.choose_equal	40
Coq.Wellfounded.Lexicographic_ProductX.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_ProductX.wf_lexprod	40
Coq.Wellfounded.Lexicographic_ProductX.Acc_symprod	40
Coq.Wellfounded.Lexicographic_ProductX.wf_symprod	40
Coq.Wellfounded.Lexicographic_ProductX.swap_Acc	40
Coq.Wellfounded.Lexicographic_ProductX.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_ProductX.wf_swapprod	40
Coq.Wellfounded.Transitive_ClosureX.incl_clos_trans	40		search with cache ().	0.00980091094971	0
Coq.Wellfounded.Transitive_ClosureX.Acc_clos_trans	40
Coq.Wellfounded.Transitive_ClosureX.Acc_inv_trans	40
Coq.Wellfounded.Transitive_ClosureX.wf_clos_trans	40		search with cache ().	0.0118329524994	0
Coq.Wellfounded.Inverse_ImageX.Acc_lemma	40
Coq.Wellfounded.Inverse_ImageX.Acc_inverse_image	40
Coq.Wellfounded.Inverse_ImageX.wf_inverse_image	40
Coq.Wellfounded.Inverse_ImageX.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_ImageX.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_UnionX.acc_A_sum	40
Coq.Wellfounded.Disjoint_UnionX.acc_B_sum	40
Coq.Wellfounded.Disjoint_UnionX.wf_disjoint_sum	40
Coq.Wellfounded.UnionX.strip_commut	40
Coq.Wellfounded.UnionX.Acc_union	40
Coq.Wellfounded.UnionX.wf_union	40
Coq.Wellfounded.InclusionX.Acc_incl	40
Coq.Wellfounded.InclusionX.wf_incl	40		search with cache ().	0.0288820266724	0
Coq.Wellfounded.Well_OrderingX.wf_WO	40
Coq.Wellfounded.Well_OrderingX.wof	40
Coq.Wellfounded.Lexicographic_ExponentiationX.left_prefix	40
Coq.Wellfounded.Lexicographic_ExponentiationX.right_prefix	40
Coq.Wellfounded.Lexicographic_ExponentiationX.desc_prefix	40
Coq.Wellfounded.Lexicographic_ExponentiationX.desc_tail	40
Coq.Wellfounded.Lexicographic_ExponentiationX.dist_aux	40
Coq.Wellfounded.Lexicographic_ExponentiationX.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_ExponentiationX.desc_end	40
Coq.Wellfounded.Lexicographic_ExponentiationX.ltl_unit	40
Coq.Wellfounded.Lexicographic_ExponentiationX.acc_app	40	9	search with cache (only 1: inversion_clear H).	0.754643917084	15
Coq.Wellfounded.Lexicographic_ExponentiationX.wf_lex_exp	40
Coq.Numbers.HexadecimalNX.Unsigned.of_to	40
Coq.Numbers.HexadecimalNX.Unsigned.to_of	40
Coq.Numbers.HexadecimalNX.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNX.Unsigned.to_uint_surj	40	8	search with cache (only 1: rewrite <- !HexadecimalPos.Unsigned.to_of).	0.203324079514	27
Coq.Numbers.HexadecimalNX.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalNX.Unsigned.of_inj	40	6	search with cache (only 1: rewrite <- !HexadecimalPos.Unsigned.to_of).	0.0588109493256	7
Coq.Numbers.HexadecimalNX.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNX.Signed.of_to	40
Coq.Numbers.HexadecimalNX.Signed.to_of	40
Coq.Numbers.HexadecimalNX.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNX.Signed.to_int_pos_surj	40	0	search with cache (only 1: rewrite <- HexadecimalPos.Unsigned.to_of).	0.042956829071	1
Coq.Numbers.HexadecimalNX.Signed.of_int_norm	40
Coq.Numbers.HexadecimalNX.Signed.of_inj_pos	40
Coq.Numbers.DecimalZX.of_to	40
Coq.Numbers.DecimalZX.to_of	40
Coq.Numbers.DecimalZX.to_int_inj	40
Coq.Numbers.DecimalZX.to_int_surj	40
Coq.Numbers.DecimalZX.of_int_norm	40
Coq.Numbers.DecimalZX.of_inj	40	14	search with cache (only 1: rewrite <- !DecimalPos.Unsigned.to_of).	0.254281997681	132
Coq.Numbers.DecimalZX.of_iff	40
Coq.Numbers.DecimalZX.of_uint_iter_D0	40
Coq.Numbers.DecimalZX.of_int_iter_D0	40
Coq.Numbers.DecimalNatX.Unsigned.to_lu_succ	40		search with cache ().	0.0101149082184	0
Coq.Numbers.DecimalNatX.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNatX.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNatX.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNatX.Unsigned.of_lu_eqn	40	56.22	search with cache (only 1: Nat.nzsimpl; only 1: case d).	18.5572469234	4791
Coq.Numbers.DecimalNatX.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNatX.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNatX.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNatX.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNatX.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNatX.Unsigned.of_to	40
Coq.Numbers.DecimalNatX.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNatX.Unsigned.of_lu_0	40	0.2.18.2	search with cache (only 1: induction d; only 1: rewrite ?Nat.tail_mul_spec, ?IHd; only 1: induction d; only 1: destruct (nztail d)).	31.788038969	1419
Coq.Numbers.DecimalNatX.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNatX.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNatX.Unsigned.to_of	40
Coq.Numbers.DecimalNatX.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNatX.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNatX.Unsigned.of_uint_norm	40	20	search with cache (only 1: induction d).	10.2202198505	1141
Coq.Numbers.DecimalNatX.Unsigned.of_inj	40
Coq.Numbers.DecimalNatX.Unsigned.of_iff	40
Coq.Numbers.DecimalNatX.Signed.of_to	40
Coq.Numbers.DecimalNatX.Signed.to_of	40
Coq.Numbers.DecimalNatX.Signed.to_int_inj	40
Coq.Numbers.DecimalNatX.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNatX.Signed.of_int_norm	40
Coq.Numbers.DecimalNatX.Signed.of_inj_pos	40
Coq.Numbers.DecimalFactsX.uint_dec	40
Coq.Numbers.DecimalFactsX.rev_revapp	40
Coq.Numbers.DecimalFactsX.rev_rev	40
Coq.Numbers.DecimalFactsX.revapp_rev_nil	40
Coq.Numbers.DecimalFactsX.app_nil_r	40
Coq.Numbers.DecimalFactsX.app_int_nil_r	40
Coq.Numbers.DecimalFactsX.revapp_revapp_1	40
Coq.Numbers.DecimalFactsX.nb_digits_pos	40
Coq.Numbers.DecimalFactsX.nb_digits_revapp	40
Coq.Numbers.DecimalFactsX.nb_digits_rev	40
Coq.Numbers.DecimalFactsX.nb_digits_nzhead	40
Coq.Numbers.DecimalFactsX.del_head_nb_digits	40
Coq.Numbers.DecimalFactsX.nb_digits_del_head	40
Coq.Numbers.DecimalFactsX.nb_digits_iter_D0	40	3	search with cache (only 1: Nat.induct n).	0.0483028888702	4
Coq.Numbers.DecimalFactsX.nb_digits_nth	40
Coq.Numbers.DecimalFactsX.del_head_nth	40
Coq.Numbers.DecimalFactsX.nth_revapp_r	40
Coq.Numbers.DecimalFactsX.nth_revapp_l	40
Coq.Numbers.DecimalFactsX.app_del_tail_head	40
Coq.Numbers.DecimalFactsX.app_int_del_tail_head	40
Coq.Numbers.DecimalFactsX.nzhead_revapp_0	40
Coq.Numbers.DecimalFactsX.nzhead_revapp	40
Coq.Numbers.DecimalFactsX.nzhead_rev	40
Coq.Numbers.DecimalFactsX.rev_nztail_rev	40
Coq.Numbers.DecimalFactsX.nzhead_D0	40		search with cache ().	0.00686502456665	0
Coq.Numbers.DecimalFactsX.nzhead_iter_D0	40	3	search with cache (only 1: induction n).	0.0263891220093	4
Coq.Numbers.DecimalFactsX.revapp_nil_inv	40
Coq.Numbers.DecimalFactsX.rev_nil_inv	40
Coq.Numbers.DecimalFactsX.rev_lnorm_rev	40
Coq.Numbers.DecimalFactsX.nzhead_nonzero	40
Coq.Numbers.DecimalFactsX.unorm_0	40	2.2	search with cache (only 1: induction d; only 1: induction d).	0.182770967484	6
Coq.Numbers.DecimalFactsX.unorm_nonnil	40
Coq.Numbers.DecimalFactsX.unorm_D0	40		search with cache ().	0.00717806816101	0
Coq.Numbers.DecimalFactsX.unorm_iter_D0	40	0	search with cache (only 1: now induction n).	0.0189049243927	1
Coq.Numbers.DecimalFactsX.nb_digits_unorm	40
Coq.Numbers.DecimalFactsX.del_head_nonnil	40
Coq.Numbers.DecimalFactsX.del_tail_nonnil	40
Coq.Numbers.DecimalFactsX.nzhead_invol	40	1	search with cache (only 1: induction d).	0.0299959182739	2
Coq.Numbers.DecimalFactsX.nztail_invol	40
Coq.Numbers.DecimalFactsX.unorm_invol	40	1.5.0	search with cache (only 1: unfold unorm, lnorm; only 1: generalize (nzhead_nonzero d); only 1: destruct nzhead).	2.30560708046	48
Coq.Numbers.DecimalFactsX.norm_invol	40	0.3.0.3.0.39	search with cache (only 1: induction d; only 1: unfold unorm; only 1: destruct (nzhead d) eqn:E; only 1: destruct (nzhead_nonzero _ _ E); only 1: destruct (nzhead d) eqn:E; only 1: destruct (nzhead_nonzero _ _ E)).	3.88541293144	1461
Coq.Numbers.DecimalFactsX.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.DecimalFactsX.nzhead_del_tail_nzhead	40
Coq.Numbers.DecimalFactsX.unorm_del_tail_unorm	40
Coq.Numbers.DecimalFactsX.norm_del_tail_int_norm	40
Coq.Numbers.DecimalFactsX.nzhead_app_nzhead	40
Coq.Numbers.DecimalFactsX.unorm_app_unorm	40
Coq.Numbers.DecimalFactsX.norm_app_int_norm	40
Coq.Numbers.HexadecimalFactsX.rev_revapp	40
Coq.Numbers.HexadecimalFactsX.rev_rev	40
Coq.Numbers.HexadecimalFactsX.revapp_rev_nil	40
Coq.Numbers.HexadecimalFactsX.app_nil_r	40
Coq.Numbers.HexadecimalFactsX.app_int_nil_r	40
Coq.Numbers.HexadecimalFactsX.revapp_revapp_1	40
Coq.Numbers.HexadecimalFactsX.nb_digits_pos	40
Coq.Numbers.HexadecimalFactsX.nb_digits_revapp	40
Coq.Numbers.HexadecimalFactsX.nb_digits_rev	40
Coq.Numbers.HexadecimalFactsX.nb_digits_nzhead	40
Coq.Numbers.HexadecimalFactsX.nb_digits_iter_D0	40	33	search with cache (only 1: Nat.induct n).	0.450235128403	550
Coq.Numbers.HexadecimalFactsX.nb_digits_nth	40
Coq.Numbers.HexadecimalFactsX.nth_revapp_r	40
Coq.Numbers.HexadecimalFactsX.nth_revapp_l	40
Coq.Numbers.HexadecimalFactsX.nzhead_revapp_0	40
Coq.Numbers.HexadecimalFactsX.nzhead_revapp	40
Coq.Numbers.HexadecimalFactsX.nzhead_rev	40
Coq.Numbers.HexadecimalFactsX.rev_nztail_rev	40
Coq.Numbers.HexadecimalFactsX.nzhead_D0	40		search with cache ().	0.0103220939636	0
Coq.Numbers.HexadecimalFactsX.nzhead_iter_D0	40	39	search with cache (only 1: induction n).	6.0795879364	2039
Coq.Numbers.HexadecimalFactsX.revapp_nil_inv	40
Coq.Numbers.HexadecimalFactsX.rev_nil_inv	40	0.3	search with cache (only 1: rewrite <- (rev_rev d); only 1: rewrite H).	0.0336689949036	5
Coq.Numbers.HexadecimalFactsX.rev_lnorm_rev	40
Coq.Numbers.HexadecimalFactsX.nzhead_nonzero	40
Coq.Numbers.HexadecimalFactsX.unorm_0	40	3.3	search with cache (only 1: induction d; only 1: induction d).	0.217447042465	8
Coq.Numbers.HexadecimalFactsX.unorm_nonnil	40
Coq.Numbers.HexadecimalFactsX.unorm_D0	40		search with cache ().	0.0102400779724	0
Coq.Numbers.HexadecimalFactsX.unorm_iter_D0	40
Coq.Numbers.HexadecimalFactsX.nb_digits_unorm	40
Coq.Numbers.HexadecimalFactsX.nzhead_invol	40	2	search with cache (only 1: induction d).	0.0380971431732	3
Coq.Numbers.HexadecimalFactsX.nztail_invol	40
Coq.Numbers.HexadecimalFactsX.unorm_invol	40
Coq.Numbers.HexadecimalFactsX.norm_invol	40
Coq.Numbers.HexadecimalFactsX.nzhead_app_nzhead	40
Coq.Numbers.HexadecimalFactsX.unorm_app_unorm	40
Coq.Numbers.HexadecimalFactsX.norm_app_int_norm	40
Coq.Numbers.HexadecimalQX.of_to	40
Coq.Numbers.HexadecimalQX.hnorme_spec	40
Coq.Numbers.HexadecimalQX.hnorme_invol	40
Coq.Numbers.HexadecimalQX.to_of	40
Coq.Numbers.HexadecimalQX.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalQX.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalQX.of_hexadecimal_hnorme	40
Coq.Numbers.HexadecimalQX.of_inj	40
Coq.Numbers.HexadecimalQX.of_iff	40
Coq.Numbers.DecimalStringX.uint_of_char_spec	40
Coq.Numbers.DecimalStringX.NilEmpty.usu	40
Coq.Numbers.DecimalStringX.NilEmpty.sus	40
Coq.Numbers.DecimalStringX.NilEmpty.isi	40
Coq.Numbers.DecimalStringX.NilEmpty.sis	40
Coq.Numbers.DecimalStringX.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalStringX.NilZero.sus	40
Coq.Numbers.DecimalStringX.NilZero.usu	40
Coq.Numbers.DecimalStringX.NilZero.usu_nil	40		search with cache ().	0.0100839138031	0
Coq.Numbers.DecimalStringX.NilZero.usu_gen	40
Coq.Numbers.DecimalStringX.NilZero.isi	40
Coq.Numbers.DecimalStringX.NilZero.isi_posnil	40		search with cache ().	0.0117290019989	0
Coq.Numbers.DecimalStringX.NilZero.isi_negnil	40		search with cache ().	0.0125911235809	0
Coq.Numbers.DecimalStringX.NilZero.sis	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.sub_add_opp	40		search with cache ().	0.0164570808411	0
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.pair_wd	40	1.0.21.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: apply succ_inj_wd; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy).	9.08125591278	1328
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.succ_wd	40	3.3.15.1	search with cache (only 1: unfold Symmetric, Z.eq; only 1: intros n m; only 1: nzsimpl; only 1: now f_equiv).	3.04248285294	773
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.pred_wd	40	0.7.0.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: nzsimpl; only 1: now rewrite H).	0.468492984772	38
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.pred_succ	40	0.4.1	search with cache (only 1: unfold Z.succ, Z.eq; only 1: destruct n as [n m]; only 1: now rewrite add_succ_r, add_succ_l).	0.0661811828613	8
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.succ_pred	40	0.0	search with cache (only 1: unfold Z.zero, Z.succ, Z.eq in *; only 1: now nzsimpl).	0.208796024323	2
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.one_succ	40	4.61	search with cache (only 1: compute; only 1: now nzsimpl).	1.76929998398	2243
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.two_succ	40	7.73	search with cache (only 1: compute; only 1: now nzsimpl').	0.982324123383	3386
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.opp_0	40		search with cache ().	0.0177121162415	0
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.opp_succ	40		search with cache ().	0.018504858017	0
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.add_0_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.add_succ_l	40	0.0	search with cache (only 1: unfold Z.add, Z.eq; only 1: do 2 rewrite add_succ_l).	0.0650880336761	2
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.sub_0_r	40	0.0	search with cache (only 1: unfold Z.add, Z.eq; only 1: now nzsimpl).	0.198590040207	2
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.sub_succ_r	40	0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: now nzsimpl).	0.324395895004	2
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.mul_0_l	40	9.0	search with cache (only 1: unfold Z.opp, Z.eq; only 1: now nzsimpl).	0.261210918427	50
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.lt_irrefl	40	21	search with cache (only 1: eapply BinInt.Z.Private_Tac.lt_irrefl).	0.163519144058	208
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.pred_min_distr	40	0.0.0.1.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono).	0.744495868683	67
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.add_max_distr_r	40	0.3.0.0.3.1.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: rewrite (add_comm n p), (add_comm m p); only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: rewrite (add_comm n p), (add_comm m p); only 1: now rewrite <- ?add_le_mono_l).	25.780864954	1732
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.add_min_distr_r	40	1.0.1.1.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r).	0.733361959457	60
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_max_distr_nonneg_l	40	3.5.3.6.10	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: now apply mul_le_mono_nonneg_l).	7.00113892555	2230
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_max_distr_nonneg_r	40	3.4.0.3.4.1.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	22.0561590195	3623
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_min_distr_nonneg_l	40	4.8.4.9.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: now apply mul_le_mono_nonneg_l).	14.3990528584	3034
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_min_distr_nonneg_r	40	3.0.3.1.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: now apply mul_le_mono_nonneg_r).	1.74548888206	222
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_max_distr_nonpos_r	40	1.3.1.1.2.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: apply mul_le_mono_nonpos_r; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: apply mul_le_mono_nonpos_r).	6.49449396133	966
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.2.1.0.0.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: now apply mul_le_mono_nonpos_r).	1.61896491051	165
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.mul_nonpos_nonpos	40	9.5	search with cache (only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r).	0.922501087189	217
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.mul_nonneg_nonpos	40	1.5	search with cache (only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.066752910614	11
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.mul_nonpos_nonneg	40	23.5	search with cache (only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r).	15.6407270432	3586
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_0_r	40	0.0	search with cache (only 1: apply lcm_unique; only 1: apply divide_0_r).	0.0360560417175	2
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_1_r_nonneg	40	0.0	search with cache (only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0588369369507	2
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_diag_nonneg	40	0	search with cache (only 1: apply lcm_unique).	0.0504789352417	1
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_lcm_eq_r	40	0	search with cache (only 1: apply lcm_unique).	0.0316710472107	1
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_opp_r	40	4.1.3.4.0.3.7.0.0	search with cache (only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: transitivity (lcm n m); only 1: apply divide_lcm_l; only 1: rewrite divide_opp_l; only 1: transitivity (lcm n m); only 1: trivial using divide_lcm_r; only 1: apply lcm_divide_iff; only 1: apply divide_opp_l).	30.2128791809	5428
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_diag	40	1.1.1.4.12	search with cache (only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: apply lcm_unique; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l).	19.5546958447	4394
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_mul_mono_r_nonneg	40	6.0	search with cache (only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm).	0.200183868408	20
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_pred_l	40	0.1.2	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.138755083084	6
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_opp_l	40	1.11	search with cache (only 1: rewrite <- add_opp_r; only 1: rewrite add_comm).	0.714564085007	165
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_inj_wd	40	0.0.0	search with cache (only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: apply opp_wd in H).	0.0447909832001	3
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.eq_opp_l	40	8.4.6.4	search with cache (only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	8.60794997215	2708
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.eq_opp_r	40	7.4.5	search with cache (only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	3.09612798691	964
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_add_distr	40	0.1.1.1	search with cache (only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_assoc).	0.22021985054	26
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_opp_l	40	6.1.1	search with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.367156028748	50
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_opp_r	40	0.1	search with cache (only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0305061340332	3
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_sub_swap	40	3.0	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: apply add_shuffle0).	0.173320055008	11
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_simpl_l	40	0	search with cache (only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0307528972626	1
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_simpl_r	40	6.1	search with cache (only 1: rewrite add_comm; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.118155002594	21
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_simpl_r	40	5.4	search with cache (only 1: rewrite add_comm; only 1: now apply add_move_l).	0.328241109848	60
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_add	40	2	search with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0703179836273	3
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_add_simpl_r_l	40	3.14	search with cache (only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	4.69217205048	1069
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_add_simpl_r_r	40	0.11	search with cache (only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.395914793015	71
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_same	40	0.1.2.3	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.13031411171	10
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_small	40	0	search with cache (only 1: apply div_small).	0.0375430583954	1
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_small	40	0	search with cache (only 1: apply mod_small).	0.0348310470581	1
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_0_l	40	0.1.1.2	search with cache (only 1: symmetry; only 1: apply div_unique with 0; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.234097957611	22
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_1_r	40	1.0.0.0.1.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: order; only 1: now nzsimpl).	0.464071035385	39
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_1_l	40	0.0	search with cache (only 1: apply Private_NZDiv.div_small; only 1: apply le_0_1).	0.0426950454712	2
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_1_l	40	0.0	search with cache (only 1: apply Private_NZDiv.mod_small; only 1: apply le_0_1).	0.0430970191956	2
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_mul	40	0.0.1.1.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.413506984711	35
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_unique_exact	40	1.5.1	search with cache (only 1: apply Private_NZDiv.div_unique with 0; only 1: now rewrite abs_pos; only 1: nzsimpl).	0.553605079651	37
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_pos	40	0.0	search with cache (only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto using div_pos).	0.055771112442	2
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_str_pos	40	10	search with cache (only 1: apply div_str_pos).	2.22054719925	178
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_exact	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_lt_upper_bound	40	14.0.0.0	search with cache (only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	15.6401882172	2201
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_le_upper_bound	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply le_trans with a; only 1: apply le_trans with a; only 1: apply le_trans with a; only 1: apply le_trans with a; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order).	0.30708694458	13
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_le_lower_bound	40	4.0.2	search with cache (only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: now rewrite mul_comm).	2.80357599258	209
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_add	40	0.0.0.0.0	search with cache (only 1: apply (mul_cancel_l _ _ c); only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.137854814529	5
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_add_l	40	0.2	search with cache (only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	0.059709072113	4
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_mul_cancel_l	40	3.4	search with cache (only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	1.21238613129	110
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_mod_distr_l	40	3.0.1.1.0	search with cache (only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order).	1.46165800095	92
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_mod_distr_r	40	0.0.0.2.0.2	search with cache (only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite div_mul_cancel_l by trivial; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod).	0.788285970688	60
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_mod_idemp_r	40	2.3	search with cache (only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l).	1.01309084892	115
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_mod	40	2.4.1	search with cache (only 1: rewrite !(mul_comm a); only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a)).	0.350018024445	25
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.add_mod_idemp_r	40	4.2	search with cache (only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l).	0.963267803192	129
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.add_mod	40	0.4.0	search with cache (only 1: rewrite !(add_comm a); only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a)).	0.20104598999	21
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_mul_r	40	0.1.2.1.0.0	search with cache (only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: rewrite (div_mod a b)  at 1 by order).	0.733873844147	46
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_mul_le	40	0.0.1.2.0	search with cache (only 1: apply Private_NZDiv.div_le_lower_bound; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.140740156174	8
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_pred_l	40	2.7.5	search with cache (only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: now rewrite <- add_sub_assoc, sub_diag, add_0_r).	18.3805520535	1759
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_opp_comm	40	3.35	search with cache (only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	17.6101589203	4959
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_sub_distr_r	40	8.6.0	search with cache (only 1: do 2 rewrite <- add_opp_r; only 1: rewrite mul_add_distr_r; only 1: now rewrite mul_opp_l, <- mul_opp_r).	4.79979491234	618
Coq.Numbers.Integer.Abstract.ZBaseX.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBaseX.ZBaseProp.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBaseX.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_opp_r	40	2.3.1.1.1.0.11	search with cache (only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: trivial using gcd_divide_l; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_r; only 1: apply gcd_divide_iff; only 1: apply divide_opp_r).	10.9665460587	2116
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_diag	40	0.1.14.1	search with cache (only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l).	11.5886619091	2277
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_mul_mono_r_nonneg	40	3.0	search with cache (only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm).	0.418473005295	20
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_false	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.b2z_inj	40	0.0.128	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	4.11590909958	8707
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bit0_mod	40	0.0.0.0.0.2.1.0.0.0	search with cache (only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: left; only 1: order'; only 1: order'; only 1: left; only 1: order').	4.15459299088	539
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_eqf	40	1.14.1	search with cache (only 1: intros x x' EQ; only 1: intros H; only 1: now f_equiv).	2.49173498154	372
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_mul_pow2	40	1.0.0.1.1.0	search with cache (only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: now apply lt_sub_0).	0.228647947311	9
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.503231048584	31
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.194899082184	3
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_eq_0_iff	40	2.17.0.0.0.0	search with cache (only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: bitwise; only 1: rewrite H  at 1; only 1: apply xorb_nilpotent).	34.2606680393	9345
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_0_r	40	0.0	search with cache (only 1: bitwise; only 1: apply xorb_false_l).	0.0869109630585	2
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_assoc	40	19.0	search with cache (only 1: bitwise; only 1: apply xorb_assoc_reverse).	1.43155694008	432
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_0_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_0_l	40	0	search with cache (only 1: bitwise).	0.0681121349335	1
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_0_r	40	4.0	search with cache (only 1: bitwise; only 1: apply andb_comm).	0.0801868438721	6
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_land_distr_l	40	17.0	search with cache (only 1: bitwise; only 1: apply orb_andb_distrib_l).	9.95883703232	816
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_land_distr_r	40	18.0	search with cache (only 1: bitwise; only 1: apply orb_andb_distrib_r).	5.27522706985	591
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_lor_distr_l	40	19.0	search with cache (only 1: bitwise; only 1: apply andb_orb_distrib_l).	7.12612605095	748
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_lor_distr_r	40	19.0	search with cache (only 1: bitwise; only 1: apply andb_orb_distrib_r).	5.03071403503	848
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_ldiff_l	40	17.0	search with cache (only 1: bitwise; only 1: now rewrite negb_orb, andb_assoc).	0.868500947952	294
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_ldiff_and	40	36.0	search with cache (only 1: bitwise; only 1: now rewrite <- andb_orb_distrib_r, orb_comm, orb_negb_r, andb_true_r).	12.8483660221	5649
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_ldiff	40	29.0	search with cache (only 1: bitwise; only 1: now rewrite <- andb_assoc, (andb_comm (negb _)), andb_negb_r, andb_false_r).	11.4128229618	2666
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_wd	40	6.0.0.8	search with cache (only 1: intros x y Hxy; only 1: compute; only 1: rewrite <- H; only 1: now f_equiv).	8.37849593163	1235
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_m1_r	40	0.0	search with cache (only 1: bitwise; only 1: rewrite lnot_spec, bits_m1).	0.074362039566	2
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_m1_l	40	0.2	search with cache (only 1: bitwise; only 1: rewrite lnot_spec, bits_m1).	0.0951380729675	4
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add3_bit0	40	15	search with cache (only 1: now rewrite !PeanoNat.Nat.add_bit0).	0.42345905304	112
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.neg_pos_cases	40	5.5.17	search with cache (only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: order; only 1: order).	4.2069029808	1354
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.nonpos_nonneg_cases	40	1.1	search with cache (only 1: apply add_le_cases; only 1: now nzsimpl).	0.0780229568481	4
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_pred_l	40	8.6	search with cache (only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_succ_r).	0.364550113678	124
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.le_pred_l	40	3.1	search with cache (only 1: rewrite <- (succ_pred n)  at 2; only 1: now apply le_le_succ_r).	0.0461781024933	6
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.nle_pred_r	40	0.3.47	search with cache (only 1: apply (PeanoNat.Nat.lt_irrefl n); only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_r).	0.530709981918	1396
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.le_le_pred	40	3.1.2.0	search with cache (only 1: apply lt_le_incl; only 1: apply le_succ_l; only 1: apply le_succ_l; only 1: apply lt_pred_le).	0.064414024353	11
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.le_pred_lt	40	0.0.3.0.0.0.0	search with cache (only 1: apply lt_succ_r; only 1: apply lt_succ_r; only 1: apply lt_succ_r; only 1: apply lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r).	0.36204791069	35
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.pred_le_mono	40	2.1.0.7	search with cache (only 1: rewrite <- lt_le_pred; only 1: now apply lt_pred_le; only 1: apply lt_pred_le; only 1: rewrite lt_le_pred).	8.48960995674	1271
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.le_succ_le_pred	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_pred_lt_succ	40	6.2.0.1.1	search with cache (only 1: rewrite lt_le_pred; only 1: rewrite pred_succ; only 1: now apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_succ_r).	2.41222000122	548
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.le_pred_lt_succ	40	0.10.5.2	search with cache (only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r; only 1: apply lt_succ_r; only 1: rewrite lt_pred_le).	23.0975780487	5033
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.neq_pred_l	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_unique_pos	40	1.1.0.3.0.3.0.0	search with cache (only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: intuition order).	14.0530409813	1100
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_unique_neg	40	2	search with cache (only 1: apply div_unique with r).	1.18351602554	93
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_unique_pos	40	1.1.0.3.0.3.0.0	search with cache (only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: intuition order).	14.4499890804	1105
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_unique_neg	40	1	search with cache (only 1: apply mod_unique with q).	0.7321600914	55
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_small	40	3	search with cache (only 1: apply div_small).	0.147075891495	21
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_small	40	0	search with cache (only 1: apply mod_small).	0.0226728916168	1
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_1_r	40	1.11.0.0.1	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: order || apply lt_0_1; only 1: now nzsimpl).	1.70798420906	828
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_1_l	40	2.0	search with cache (only 1: apply Private_NZDiv.div_small; only 1: apply le_0_1).	0.0368819236755	4
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_1_l	40	2.0	search with cache (only 1: apply Private_NZDiv.mod_small; only 1: apply le_0_1).	0.0360610485077	4
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_mul	40	0.0.0.0.0.2.8.0	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: right; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	17.0064089298	2552
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_unique_exact	40	0.0.4.0.16.1	search with cache (only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: right; only 1: intuition order; only 1: nzsimpl).	39.7482368946	8127
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_le	40	1	search with cache (only 1: apply mod_le).	0.0260989665985	2
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_pos	40	0	search with cache (only 1: apply div_pos).	0.0255260467529	1
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_str_pos	40	6	search with cache (only 1: apply div_str_pos).	1.36662387848	82
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_div_le	40	7.0.1.1.2	search with cache (only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: apply mod_pos_bound).	4.94711112976	791
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_succ_div_gt	40	8.0.0.0	search with cache (only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_pos_bound).	2.20257306099	327
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_exact	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_lt_upper_bound	40	0.0.0	search with cache (only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le).	0.0584208965302	3
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_le_upper_bound	40	0.2.2	search with cache (only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le).	0.335860013962	35
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_le_lower_bound	40	1.0.0	search with cache (only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: now rewrite mul_comm).	0.131204128265	13
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_le_compat_l	40	0.1.0.0.0.0.0.0.0.0	search with cache (only 1: apply Private_NZDiv.div_le_lower_bound; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order).	2.77093791962	237
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_add	40	1.0.2.0.1	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.468909978867	42
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_add	40	0.0.0.0.0	search with cache (only 1: apply (mul_cancel_l _ _ c); only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.138777971268	5
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_add_l	40	2.1	search with cache (only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	0.0344710350037	5
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_mul_cancel_l	40	3.5	search with cache (only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	5.85151910782	251
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_mod_distr_r	40	1.2	search with cache (only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.960577011108	78
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_mod	40	0.0.18	search with cache (only 1: destruct (lt_ge_cases 0 b); only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r).	16.0622470379	3528
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.add_mod_idemp_r	40	3.2	search with cache (only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l).	0.78657412529	112
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.add_mod	40	1.4.1	search with cache (only 1: rewrite !(add_comm a); only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a)).	0.154156923294	19
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.rem_mul_r	40	0.1.2.1.0.0	search with cache (only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: rewrite (div_mod a b)  at 1 by order).	1.7512550354	85
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_mul_le	40	2.1.0.0	search with cache (only 1: apply Private_NZDiv.div_le_lower_bound; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: apply Private_NZDiv.mul_div_le).	0.0869860649109	7
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.even_pred	40
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_pos	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_le_lower_bound	40	1.0.1	search with cache (only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: rewrite mul_comm).	1.38688492775	124
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.GenericSgn.sgn_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.GenericSgn.sgn_neg	40	0.0.0.5	search with cache (only 1: unfold sgn; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order).	0.0819001197815	9
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_neq'	40	6.0.29	search with cache (only 1: apply opp_inj; only 1: rewrite abs_neq; only 1: now rewrite (opp_le_mono n 0), opp_0).	3.59449696541	1906
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_nonneg	40	2.1.1.1	search with cache (only 1: destruct_max n; only 1: apply le_trans with 0; only 1: apply le_trans with 0; only 1: rewrite opp_nonneg_nonpos).	0.159105062485	11
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_eq_or_opp	40	7.7.4	search with cache (only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	1.15046811104	324
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_involutive	40	1.12	search with cache (only 1: apply abs_eq; only 1: apply abs_nonneg).	0.661463975906	124
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_case	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_square	40	4.36	search with cache (only 1: destruct_max n; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	5.8748281002	2079
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_sgn	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.add_neg_neg	40	0.0	search with cache (only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.040876865387	2
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.add_neg_nonpos	40	0.0	search with cache (only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0421929359436	2
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.add_nonpos_neg	40	0.0	search with cache (only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0408959388733	2
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.add_nonpos_nonpos	40	0.0	search with cache (only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0413398742676	2
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_neg_cases	40	8.1.7	search with cache (only 1: apply add_lt_cases; only 1: apply lt_sub_lt_add_r; only 1: now nzsimpl).	8.11613893509	1004
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_pos_cases	40	9.3.9	search with cache (only 1: apply add_lt_cases; only 1: apply lt_add_lt_sub_r; only 1: now nzsimpl).	18.4023430347	2378
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_nonpos_cases	40	6.0.7	search with cache (only 1: apply add_le_cases; only 1: apply le_sub_le_add_r; only 1: now nzsimpl).	1.99402809143	241
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Binary.ZBinaryX.test	40		search with cache ().	0.0186641216278	0
Coq.Numbers.DecimalNX.Unsigned.of_to	40
Coq.Numbers.DecimalNX.Unsigned.to_of	40	7.0	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of).	0.310576915741	24
Coq.Numbers.DecimalNX.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNX.Unsigned.to_uint_surj	40	6.1	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- !DecimalPos.Unsigned.to_of).	0.0636911392212	14
Coq.Numbers.DecimalNX.Unsigned.of_uint_norm	40	1	search with cache (only 1: now induction d).	0.0248799324036	2
Coq.Numbers.DecimalNX.Unsigned.of_inj	40	5	search with cache (only 1: rewrite <- !DecimalPos.Unsigned.to_of).	0.0347738265991	6
Coq.Numbers.DecimalNX.Unsigned.of_iff	40
Coq.Numbers.DecimalNX.Signed.of_to	40
Coq.Numbers.DecimalNX.Signed.to_of	40
Coq.Numbers.DecimalNX.Signed.to_int_inj	40
Coq.Numbers.DecimalNX.Signed.to_int_pos_surj	40	0	search with cache (only 1: rewrite <- DecimalPos.Unsigned.to_of).	0.0304610729218	1
Coq.Numbers.DecimalNX.Signed.of_int_norm	40
Coq.Numbers.DecimalNX.Signed.of_inj_pos	40
Coq.Numbers.Cyclic.Int31.Ring31X.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31X.ring_theory_switch_eq	40	1	search with cache (only 1: firstorder).	0.378856897354	2
Coq.Numbers.Cyclic.Int31.Ring31X.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31X.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31X.eqb31_correct	40
Coq.Numbers.Cyclic.Int31.Ring31X.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.iszero_not_eq0	40		search with cache ().	0.0202069282532	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.sneakl_shiftr	40	16	search with cache (only 1: destruct x).	0.256229877472	108
Coq.Numbers.Cyclic.Int31.Cyclic31X.sneakr_shiftl	40	65	search with cache (only 1: destruct x).	2.76855182648	2491
Coq.Numbers.Cyclic.Int31.Cyclic31X.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_S	40		search with cache ().	0.0103390216827	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_S_tail	40	23.102	search with cache (only 1: destruct x; only 1: induction n).	7.3259677887	18374
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_n_0	40	27.0	search with cache (only 1: elim n; only 1: now rewrite H).	1.70893001556	1173
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftl_S	40		search with cache ().	0.011412858963	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftl_S_tail	40	3.3.3	search with cache (only 1: case_eq (firstr x); only 1: elim n; only 1: elim n).	1.14814519882	93
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftl_n_0	40	3.3	search with cache (only 1: induction n; only 1: rewrite IHn).	0.0947568416595	8
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftl_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.firstr_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.firstl_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_predsize_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.recr_aux_eqn	40	5.8	search with cache (only 1: destruct x; only 1: rewrite H).	1.68938112259	93
Coq.Numbers.Cyclic.Int31.Cyclic31X.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.recr_eqn	40	5.3.4	search with cache (only 1: destruct x; only 1: compute; only 1: rewrite H).	7.59333491325	125
Coq.Numbers.Cyclic.Int31.Cyclic31X.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phibis_aux_equiv	40	0	search with cache (only 1: apply recrbis_aux_equiv).	0.0191469192505	1
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_zero	40		search with cache ().	0.0100600719452	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.i2l_length	40		search with cache ().	0.0111560821533	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.l2i_i2l	40	16	search with cache (only 1: destruct x).	0.230021953583	108
Coq.Numbers.Cyclic.Int31.Cyclic31X.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.i2l_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.wB_pos	40		search with cache ().	0.0102949142456	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_zdigits	40		search with cache ().	0.00904488563538	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_more_than_1_digit	40		search with cache ().	0.0097930431366	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_0	40		search with cache ().	0.00883293151855	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_1	40		search with cache ().	0.00888705253601	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_m1	40		search with cache ().	0.0153188705444	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_compare	40		search with cache ().	0.00924181938171	0
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_succ	40	0.0	search with cache (only 1: unfold add31; only 1: repeat rewrite phi_phi_inv).	0.0464658737183	2
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sub	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sub_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_opp	40	2.1	search with cache (only 1: unfold sub31; only 1: repeat rewrite phi_phi_inv).	0.209810018539	22
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_pred_c	40	0	search with cache (only 1: apply spec_sub_c).	0.0275030136108	1
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_pred	40	0.0	search with cache (only 1: unfold sub31; only 1: repeat rewrite phi_phi_inv).	0.0451188087463	2
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_mul	40	3	search with cache (only 1: apply phi_phi_inv).	0.0280539989471	4
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_tail00	40	0.5.1.0	search with cache (only 1: generalize (phi_inv_phi x); only 1: generalize (phi_inv_phi x); only 1: rewrite <- (phi_inv_phi x); only 1: rewrite H).	0.159671068192	19
Coq.Numbers.Cyclic.Int31.Cyclic31X.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_more_than_1_digit	40	31	search with cache (only 1: auto with zarith).	0.459003210068	493
Coq.Numbers.Cyclic.ZModulo.ZModuloX.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_to_Z_2	40	0.1	search with cache (only 1: unfold wB, base; only 1: destruct (Z_mod_lt x wB wB_pos)).	0.0336620807648	3
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_to_Z	40		search with cache ().	0.0117030143738	0
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_0	40		search with cache ().	0.0131669044495	0
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_Bm1	40	1.0.3.0.0	search with cache (only 1: unfold to_Z, zero; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia; only 1: auto with zarith).	0.261672973633	18
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_compare	40		search with cache ().	0.0140030384064	0
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_succ	40	9.0	search with cache (only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l).	1.22171998024	151
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_pred	40	11.6.1	search with cache (only 1: unfold opp_carry, to_Z; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	24.9074881077	5514
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_add_mul_div	40		search with cache ().	0.0127840042114	0
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.two_p_power2	40	1.3.0	search with cache (only 1: destruct x; only 1: unfold Z.pow_pos; only 1: now apply Pos.iter_swap_gen).	0.0654468536377	7
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.P	40		search with cache ().	0.0142910480499	0
Coq.Numbers.Cyclic.Int63.Cyclic63X.shift_unshift_mod_3	40	0.0.1.0.0.1.0.0.0.0.0	search with cache (only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	17.9536411762	1375
Coq.Numbers.Cyclic.Int63.Cyclic63X.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Ring63X.ring_theory_switch_eq	40	1	search with cache (only 1: firstorder).	0.393147945404	2
Coq.Numbers.Cyclic.Int63.Ring63X.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63X.eq31_correct	40	1	search with cache (only 1: auto using eqb_correct, eqb_complete).	0.0359330177307	2
Coq.Numbers.Cyclic.Int63.Ring63X.test	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.two_succ	40		search with cache ().	0.0110189914703	0
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.B0	40		search with cache ().	0.0147020816803	0
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.add_0_l	40	0.0	search with cache (only 1: zify; only 1: apply NZ_to_Z_mod).	0.0772409439087	2
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.mul_0_l	40	6	search with cache (only 1: zify).	0.0848679542542	7
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.eqb_correct	40	7	search with cache (only 1: apply Pos.eqb_eq).	0.0761358737946	17
Coq.Numbers.DecimalQX.of_to	40
Coq.Numbers.DecimalQX.dnorme_spec	40
Coq.Numbers.DecimalQX.dnormf_spec	40
Coq.Numbers.DecimalQX.dnorme_invol	40
Coq.Numbers.DecimalQX.dnormf_invol	40
Coq.Numbers.DecimalQX.to_of	40
Coq.Numbers.DecimalQX.to_decimal_inj	40
Coq.Numbers.DecimalQX.to_decimal_surj	40
Coq.Numbers.DecimalQX.of_decimal_dnorme	40
Coq.Numbers.DecimalQX.of_decimal_dnormf	40
Coq.Numbers.Natural.Peano.NPeanoX.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeanoX.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_lcm_l	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_0_l	40	0.0.4	search with cache (only 1: apply divide_0_l; only 1: unfold lcm; only 1: now nzsimpl).	0.0984671115875	18
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_0_r	40	0.0	search with cache (only 1: apply lcm_unique; only 1: apply divide_0_r).	0.0461139678955	2
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_1_l	40	2.2.3.0	search with cache (only 1: apply lcm_unique; only 1: destruct (lt_ge_cases n 0); only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1).	0.237843036652	52
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_1_r	40	1.2.3.0	search with cache (only 1: apply lcm_unique; only 1: destruct (lt_ge_cases n 0); only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0900919437408	13
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_diag	40	2.1.3.0	search with cache (only 1: apply lcm_unique; only 1: destruct (lt_ge_cases n 0); only 1: apply lt_le_incl; only 1: false_hyp H nlt_0_r).	0.0576341152191	10
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_lcm_eq_r	40	29.14	search with cache (only 1: apply lcm_unique; only 1: apply le_0_l).	2.69613790512	2877
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.mul_le_mono_r	40	7.1.4	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l).	0.686568021774	198
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_succ_r'	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_0_l	40	2.0.2	search with cache (only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: now apply pow_0_l).	0.0519280433655	7
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_1_l	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_mul_l	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_gt_1	40	2.5	search with cache (only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l).	0.0393800735474	9
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_le_mono	40	0.0.0	search with cache (only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: apply Private_NZPow.pow_le_mono_l).	0.106574058533	3
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_inj_l	40	0.5.0.4.5	search with cache (only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	1.02944302559	423
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_inj_r	40	0.3.0.1.1	search with cache (only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.123912096024	10
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_le_mono_l_iff	40	0.3.12.10	search with cache (only 1: apply Private_NZPow.pow_le_mono_l; only 1: destruct (le_gt_cases a b) as [LE'| GT]; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	7.69970583916	1580
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_lt_mono_r_iff	40	0.1.4.3	search with cache (only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order).	1.19276714325	177
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_le_mono_r_iff	40	0.1.4.4.2	search with cache (only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	1.52157497406	311
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.case_analysis	40	0.0	search with cache (only 1: apply right_induction with 0; only 1: apply le_0_l).	0.0444078445435	2
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.succ_pred	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.b2n_proper	40	1	search with cache (only 1: intros x x' EQ).	0.0448591709137	2
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_false	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.b2n_inj	40	0.0.179	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	19.2258019447	70804
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.b2n_bit0	40	0.0.0.0	search with cache (only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.191797971725	4
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bit0_mod	40	0.3	search with cache (only 1: rewrite testbit_spec'; only 1: nzsimpl).	1.02616500854	104
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.div2_bits	40	2.0.6.2.12	search with cache (only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: rewrite testbit_spec'; only 1: f_equiv; only 1: rewrite pow_succ_r', <- div_div by order_nz).	16.996434927	2959
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.double_bits_succ	40	0	search with cache (only 1: apply testbit_even_succ, le_0_l).	0.0408229827881	1
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.eqf_equiv	40	2	search with cache (only 1: split).	0.0845649242401	3
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_eqf	40	16.4	search with cache (only 1: repeat red; only 1: now f_equiv).	1.31908202171	381
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_0_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_0_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_eq_0	40	0.0.1.0.2	search with cache (only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l).	0.143257856369	15
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.338407039642	16
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_wd	40	0.1.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.18669295311	4
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_nilpotent	40	12.1	search with cache (only 1: bitwise; only 1: apply xorb_nilpotent).	0.752035140991	174
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_0_r	40	0.0	search with cache (only 1: bitwise; only 1: apply xorb_false_l).	0.0775790214539	2
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_comm	40	18.0	search with cache (only 1: bitwise; only 1: now destruct (PeanoNat.Nat.testbit a m), (PeanoNat.Nat.testbit b m)).	4.25457501411	1047
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_assoc	40	7.0	search with cache (only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.0907039642334	9
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_0_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_0_r	40	12.0	search with cache (only 1: bitwise; only 1: apply orb_false_r).	1.43790221214	195
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_comm	40	18.0	search with cache (only 1: bitwise; only 1: now destruct (PeanoNat.Nat.testbit a m), (PeanoNat.Nat.testbit b m)).	1.79635190964	503
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_assoc	40	6.0	search with cache (only 1: bitwise; only 1: apply orb_assoc).	0.128553152084	8
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_diag	40	32.0	search with cache (only 1: bitwise; only 1: apply orb_diag).	12.083605051	2973
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_0_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_0_r	40	13.0	search with cache (only 1: bitwise; only 1: apply andb_false_r).	0.60933804512	176
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_comm	40	11.13.0	search with cache (only 1: bitwise; only 1: apply xorb_eq; only 1: now destruct (BinNat.N.testbit a m), (BinNat.N.testbit b m)).	2.9620859623	1029
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_assoc	40	15.0	search with cache (only 1: bitwise; only 1: apply andb_assoc).	1.16103601456	216
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_0_l	40	0	search with cache (only 1: bitwise).	0.0573101043701	1
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_0_r	40	4.0	search with cache (only 1: bitwise; only 1: apply andb_comm).	0.0983939170837	6
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_diag	40	34.0	search with cache (only 1: bitwise; only 1: now destruct (PeanoNat.Nat.testbit a m)).	1.36193609238	1225
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_land_distr_l	40	11.0	search with cache (only 1: bitwise; only 1: apply orb_andb_distrib_l).	0.47040104866	76
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_land_distr_r	40	12.0	search with cache (only 1: bitwise; only 1: apply orb_andb_distrib_r).	0.541358947754	102
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_lor_distr_l	40	13.0	search with cache (only 1: bitwise; only 1: apply andb_orb_distrib_l).	0.549394845963	130
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_lor_distr_r	40	13.0	search with cache (only 1: bitwise; only 1: apply andb_orb_distrib_r).	1.20308208466	174
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_ldiff_l	40	13.0	search with cache (only 1: bitwise; only 1: now rewrite negb_orb, andb_assoc).	1.35418486595	278
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_ldiff_and	40	17.0	search with cache (only 1: bitwise; only 1: now rewrite <- andb_orb_distrib_r, orb_comm, orb_negb_r, andb_true_r).	3.93023109436	617
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_ldiff	40	10.0	search with cache (only 1: bitwise; only 1: now rewrite <- andb_assoc, (andb_comm (negb _)), andb_negb_r, andb_false_r).	0.215587854385	52
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_wd	40	0.0.3.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.432387113571	25
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_eqb	40	34	search with cache (only 1: now rewrite PeanoNat.Nat.clearbit_spec', PeanoNat.Nat.ldiff_spec, PeanoNat.Nat.pow2_bits_eqb).	9.32346081734	2183
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_ones	40	2.1.0	search with cache (only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0751638412476	6
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_lnot_diag_low	40	0.1.0.0.2.0	search with cache (only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: now apply lt_le_trans with n; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]).	0.277570009232	17
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_lor	40	19.25.0	search with cache (only 1: bitwise; only 1: assert (BinInt.Z.testbit a m && BinInt.Z.testbit b m = false) by now rewrite <- BinInt.Z.land_spec, H, BinInt.Z.bits_0; only 1: now destruct (BinInt.Z.testbit a m), (BinInt.Z.testbit b m)).	15.089922905	8568
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add3_bit0	40	25	search with cache (only 1: now rewrite !PeanoNat.Nat.add_bit0).	0.589120149612	334
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_square	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_alt	40		search with cache ().	0.00982213020325	0
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_0	40	0.1.0.0.0.0	search with cache (only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0).	0.188541889191	7
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_fixpoint	40	0.2.1.0.0.0.2.1.0.0	search with cache (only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: symmetry; only 1: setoid_replace n with (S m + (n - S m)); only 1: apply strong_rec0_more_steps; only 1: apply lt_succ_diag_r; only 1: rewrite add_comm; only 1: symmetry; only 1: apply sub_add; only 1: rewrite le_succ_l).	16.4250979424	2210
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_0_any	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NParityX.NParityProp.odd_pred	40
Coq.Numbers.Natural.Abstract.NParityX.NParityProp.even_pred	40
Coq.Numbers.Natural.Abstract.NParityX.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParityX.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.min_0_l	40	0.135	search with cache (only 1: apply BinInt.Z.min_l; only 1: apply le_0_l).	19.8257188797	17981
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.add_min_distr_r	40	6.0.6.1.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r).	24.368019104	2502
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.mul_max_distr_r	40	0.1.0.0.1.1.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: rewrite 2!max_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l).	0.230985879898	18
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.mul_min_distr_l	40	0.4.0.0.4.1.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: rewrite 2!min_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l).	7.35315704346	1273
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.mul_min_distr_r	40	0.1.0.0.1.1.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: rewrite 2!min_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l).	0.818827867508	106
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.sub_min_distr_r	40	1.7.1.8.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: now apply sub_le_mono_r).	7.88014602661	1279
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_unique_exact	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_same	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: nzsimpl).	0.163901090622	13
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_same	40	0.0.14.16	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.899241924286	717
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_small	40	0.4.5	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: now nzsimpl).	1.09379410744	204
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_small	40	6.0	search with cache (only 1: apply mod_small; only 1: auto').	0.0756368637085	14
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_0_l	40	0.0	search with cache (only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0311658382416	2
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_0_l	40	0.0	search with cache (only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0300228595734	2
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_1_r	40	0.0.19.1.0	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply (neq_succ_0 0); only 1: now rewrite <- one_succ; only 1: nzsimpl).	3.25916099548	3759
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_1_r	40	0.8.0.1	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	0.381203174591	167
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_1_l	40	0	search with cache (only 1: apply Private_NZDiv.div_small).	0.0193290710449	1
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_1_l	40	0	search with cache (only 1: apply Private_NZDiv.mod_small).	0.0190501213074	1
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_mul	40	5.1.0	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply mul_comm).	0.249153137207	61
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_mul	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_le	40	1.1.12	search with cache (only 1: apply mod_le; only 1: auto'; only 1: auto').	10.4610199928	1596
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_str_pos	40	5.1.1	search with cache (only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: apply div_str_pos; only 1: apply div_str_pos).	0.283134937286	18
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_div_le	40	1.1.8	search with cache (only 1: apply mul_div_le; only 1: auto'; only 1: auto').	1.23379087448	235
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_succ_div_gt	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_exact	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_le_upper_bound	40	1.0.1.39	search with cache (only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	20.4361498356	9395
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_le_lower_bound	40	0.0.10	search with cache (only 1: apply div_le_lower_bound; only 1: auto'; only 1: auto').	0.251512050629	73
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_add	40	1.3.1.22.1.8	search with cache (only 1: rewrite mod_add; only 1: auto'; only 1: apply add_nonneg_nonneg; only 1: auto'; only 1: auto'; only 1: auto').	22.7622709274	5497
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_add	40	0.1.1.5	search with cache (only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.939782142639	183
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_add_l	40	1.2	search with cache (only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	0.0325689315796	5
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_mul_cancel_r	40	1.2.2.1	search with cache (only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.96436214447	101
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_mul_cancel_l	40	0.2.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	0.162572145462	15
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_mod_distr_r	40	1.0.0.1.2.0	search with cache (only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod).	0.371999979019	32
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_mod_distr_l	40	1.0.0.1.3	search with cache (only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod).	0.359135866165	32
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_mod	40	13.10.3.3	search with cache (only 1: apply Private_NZDiv.mod_small; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: apply neq_0_lt_0).	35.1677260399	12055
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_mod_idemp_l	40	3.4.0.7	search with cache (only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	6.65877604485	1256
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_mod_idemp_r	40	0.2	search with cache (only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l).	0.0388209819794	4
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_mod	40	2	search with cache (only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r).	0.0295341014862	3
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.add_mod_idemp_l	40	3.0.0.4	search with cache (only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.662253856659	116
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.add_mod_idemp_r	40	0.1	search with cache (only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l).	0.0430719852448	3
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.add_mod	40	2	search with cache (only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r).	0.0338649749756	3
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_mul_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: symmetry; only 1: symmetry; only 1: now apply div_mod).	0.187807798386	12
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_mul_le	40	0.0.0.1.0	search with cache (only 1: apply Private_NZDiv.div_le_lower_bound; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le).	0.120244026184	6
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_0_succ	40	9.1.6.7	search with cache (only 1: rewrite lt_succ_r; only 1: destruct (lt_ge_cases n 0); only 1: apply lt_le_incl; only 1: false_hyp H nlt_0_r).	2.38919615746	1362
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.eq_0_gt_0_cases	40	0.6.0.31	search with cache (only 1: cases n; only 1: intuition order; only 1: right; only 1: apply lt_0_succ).	4.08750200272	2523
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.succ_pred_pos	40	2.18.56.0	search with cache (only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: apply le_succ_l in H; only 1: rewrite EQ; only 1: now rewrite pred_succ).	27.8192281723	17879
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_pred_l	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_pred_lt_succ	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub_eq_l	40	9.10.21	search with cache (only 1: rewrite <- H; only 1: rewrite add_comm; only 1: apply add_sub).	26.427809	17196
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_le_mono_r	40	0.2.1.0.1.6	search with cache (only 1: destruct (le_ge_cases n p) as [LE'| GE]; only 1: rewrite <- sub_0_le in LE'; only 1: rewrite LE'; only 1: apply le_0_l; only 1: apply le_add_le_sub_r; only 1: now rewrite sub_add).	38.1700661182	4059
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_dichotomy	40
Coq.Numbers.Natural.Abstract.NIsoX.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIsoX.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIsoX.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIsoX.Homomorphism.hom_nat_iso	40	0.0.0.0.0.0.50	search with cache (only 1: red; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: repeat red; only 1: now f_equiv).	0.942236185074	1644
Coq.Numbers.Natural.Abstract.NIsoX.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIsoX.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.even_0	40	0.37.67	search with cache (only 1: apply PeanoNat.Nat.eqb_eq; only 1: compute; only 1: now rewrite recursion_0).	9.51575088501	6474
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_0	40	0.170	search with cache (only 1: compute; only 1: rewrite recursion_0).	18.8735280037	28893
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NAddOrderX.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrderX.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrderX.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrderX.NAddOrderProp.add_pos_l	40	22	search with cache (only 1: apply lt_lt_add_r).	10.5426719189	1738
Coq.Numbers.Natural.Abstract.NAddOrderX.NAddOrderProp.add_pos_r	40	5.4.9.12	search with cache (only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: now apply le_0_l).	13.7893271446	3094
Coq.Numbers.HexadecimalNatX.Unsigned.to_lu_succ	40		search with cache ().	0.0154390335083	0
Coq.Numbers.HexadecimalNatX.Unsigned.to_little_uint_succ	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_lu_equiv	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_uint_alt	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_lu_succ	40	159	search with cache (only 1: induction d).	9.67366290092	14269
Coq.Numbers.HexadecimalNatX.Unsigned.of_to_lu	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_uint_acc_spec	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_to	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_lu_sixteenfold	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_of_lu_sixteenfold	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_of	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_inj	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNatX.Signed.of_to	40
Coq.Numbers.HexadecimalNatX.Signed.to_of	40
Coq.Numbers.HexadecimalNatX.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNatX.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalNatX.Signed.of_int_norm	40	1.0.0.0.0.1.3	search with cache (only 1: unfold Nat.to_hex_int, Nat.of_hex_int, norm; only 1: destruct d; only 1: f_equal; only 1: unfold Nat.of_hex_uint; only 1: now induction d; only 1: destruct (nzhead d) eqn:E; only 1: destruct (nzhead_nonzero _ _ E)).	1.99961018562	255
Coq.Numbers.HexadecimalNatX.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalPosX.Unsigned.Nadd_simpl	40	50	search with cache (only 1: now destruct n).	4.58521914482	2444
Coq.Numbers.HexadecimalPosX.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_uint_acc_rev	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_rev	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_double_gen	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_double	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_succ_double	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_to	40
Coq.Numbers.HexadecimalPosX.Unsigned.succ_double_alt	40
Coq.Numbers.HexadecimalPosX.Unsigned.double_succ	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_lu_succ	40
Coq.Numbers.HexadecimalPosX.Unsigned.nat_iter_S	40		search with cache ().	0.0186610221863	0
Coq.Numbers.HexadecimalPosX.Unsigned.nat_iter_0	40		search with cache ().	0.0173330307007	0
Coq.Numbers.HexadecimalPosX.Unsigned.to_lhex_tenfold	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.HexadecimalPosX.Unsigned.Nadd_alt	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_of	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_uint_nonzero	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_uint_nonnil	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_uint_pos_surj	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_inj	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_iff	40
Coq.Numbers.HexadecimalPosX.Unsigned.nztail_to_hex_uint	40
Coq.Numbers.HexadecimalPosX.Unsigned.double_unorm	40
Coq.Numbers.HexadecimalPosX.Unsigned.double_nzhead	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_hex_uint_double	40
Coq.Numbers.HexadecimalPosX.Signed.of_to	40
Coq.Numbers.HexadecimalPosX.Signed.to_of	40
Coq.Numbers.HexadecimalPosX.Signed.to_int_inj	40
Coq.Numbers.HexadecimalPosX.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalPosX.Signed.of_int_norm	40	1.0.0.0.0.0	search with cache (only 1: unfold Pos.of_hex_int; only 1: destruct d; only 1: rewrite <- Unsigned.to_of; only 1: destruct (Pos.of_hex_uint d); only 1: now rewrite Unsigned.of_to; only 1: destruct (nzhead d) eqn:E).	0.288235902786	11
Coq.Numbers.HexadecimalPosX.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalStringX.uint_of_char_spec	40
Coq.Numbers.HexadecimalStringX.NilEmpty.usu	40
Coq.Numbers.HexadecimalStringX.NilEmpty.sus	40
Coq.Numbers.HexadecimalStringX.NilEmpty.isi	40
Coq.Numbers.HexadecimalStringX.NilEmpty.sis	40
Coq.Numbers.HexadecimalStringX.NilZero.uint_of_string_nonnil	40
Coq.Numbers.HexadecimalStringX.NilZero.sus	40
Coq.Numbers.HexadecimalStringX.NilZero.usu	40
Coq.Numbers.HexadecimalStringX.NilZero.usu_nil	40		search with cache ().	0.0162491798401	0
Coq.Numbers.HexadecimalStringX.NilZero.usu_gen	40
Coq.Numbers.HexadecimalStringX.NilZero.isi	40
Coq.Numbers.HexadecimalStringX.NilZero.isi_posnil	40		search with cache ().	0.0166640281677	0
Coq.Numbers.HexadecimalStringX.NilZero.isi_negnil	40		search with cache ().	0.0164620876312	0
Coq.Numbers.HexadecimalStringX.NilZero.sis	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_0_r	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_comm	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_1_l	40	3.3.2.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: now nzsimpl'; only 1: now nzsimpl').	1.14641809464	91
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_1_r	40	0	search with cache (only 1: now nzsimpl').	0.133198976517	1
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_lt_mono_r	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_le_mono_r	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_pos_cases	40	2.0	search with cache (only 1: apply add_lt_cases; only 1: now nzsimpl).	0.135484933853	4
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_nonneg_cases	40	0.0	search with cache (only 1: apply add_le_cases; only 1: now nzsimpl).	0.131721973419	2
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZDomainX.nat_rect_wd	40	1.1.6	search with cache (only 1: unfold respectful; only 1: induction n; only 1: intros x y H).	0.541825771332	45
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.initial_ancestor	40	3.4.0.14	search with cache (only 1: destruct (itersucc_or_itersucc init m) as (p, [H| H]); only 1: destruct p; only 1: exists 0%nat; only 1: destruct (Initial _ H)).	7.3768529892	2350
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomainX.NZOfNat.ofnat_zero	40		search with cache ().	0.0170619487762	0
Coq.Numbers.NatInt.NZDomainX.NZOfNat.ofnat_succ	40		search with cache ().	0.0181050300598	0
Coq.Numbers.NatInt.NZDomainX.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_refl	40	10.92	search with cache (only 1: apply BinInt.Z.lt_eq_cases; only 1: right).	6.01862001419	9606
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_succ_diag_r	40	0.1.64	search with cache (only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	1.03892493248	2304
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.nle_succ_diag_l	40	2.2	search with cache (only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r).	0.027811050415	6
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_neq	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.eq_le_incl	40	0.88	search with cache (only 1: destruct (BinNat.N.le_gt_cases n m); only 1: rewrite lt_eq_cases).	3.34648108482	4428
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_stepl	40	0	search with cache (only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0288031101227	1
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_stepr	40	1	search with cache (only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0310781002045	2
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_stepl	40	9	search with cache (only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0272109508514	10
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_stepr	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_lt_trans	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_le_trans	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_antisymm	40	26	search with cache (only 1: order).	0.230744838715	333
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_succ_l	40	0.4	search with cache (only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0336661338806	6
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_le_succ_r	40	16.0	search with cache (only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r).	0.68869805336	313
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_lt_succ_r	40	3.4	search with cache (only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl).	0.0387561321259	9
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.succ_le_mono	40	7.2.0.18	search with cache (only 1: apply le_succ_l; only 1: now rewrite lt_succ_r; only 1: apply lt_succ_r; only 1: rewrite <- le_succ_l).	14.93045187	5411
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_0_1	40	0.2.2.0.29	search with cache (only 1: apply BinNat.N.lt_succ_r; only 1: rewrite one_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.805243968964	760
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_0_2	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_0_2	40	0.2.0.1.2.39.0	search with cache (only 1: rewrite two_succ; only 1: apply BinNat.N.lt_le_incl; only 1: rewrite one_succ; only 1: transitivity 1; only 1: apply lt_0_1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	2.01333284378	2560
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_ge_cases	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_ge_cases	40	3.1.1.1	search with cache (only 1: destruct (le_gt_cases m n); only 1: destruct (le_gt_cases m n); only 1: destruct (le_gt_cases m n); only 1: intuition order).	0.293939113617	32
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_gt_cases	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.eq_dne	40	7.7.14	search with cache (only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	3.79381203651	611
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_ngt	40	3.3	search with cache (only 1: order; only 1: order).	0.0394570827484	8
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.nlt_ge	40	3.3	search with cache (only 1: order; only 1: order).	0.0373170375824	8
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_decidable	40	0.0.25	search with cache (only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	1.91852784157	362
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_dne	40	6.7	search with cache (only 1: destruct (le_gt_cases m n); only 1: intuition order).	0.397254943848	113
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.nle_gt	40	3.3	search with cache (only 1: order; only 1: order).	0.036740064621	8
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_nge	40	3.3	search with cache (only 1: order; only 1: order).	0.10054898262	8
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_decidable	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_dne	40	6.5	search with cache (only 1: destruct (le_gt_cases n m); only 1: intuition order).	0.315579891205	64
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.nlt_succ_r	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.rbase	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.Rlt_wd	40	2.2.2.2.29.9	search with cache (only 1: intros R L n; only 1: intro RS'; only 1: order; only 1: order; only 1: order; only 1: order).	20.263021946	5249
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.Rgt_wd	40	2.2.2.2.31.10	search with cache (only 1: intros R L n; only 1: intro RS'; only 1: order; only 1: order; only 1: order; only 1: order).	23.8504960537	8823
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_pos_neg	40	2.19	search with cache (only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	1.67652916908	572
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_neg_pos	40	0.19	search with cache (only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.725826978683	264
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.eq_mul_0_l	40	1.0.2.0.0.4.0.3.0.0.15	search with cache (only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: destruct (lt_trichotomy m 0) as [H2| [H2| H2]]; only 1: exfalso; only 1: now apply (lt_neq 0 (n * m)); [ apply mul_neg_neg |  ]; only 1: exfalso; only 1: now apply (lt_neq (n * m) 0); [ apply mul_neg_pos |  ]; only 1: destruct (lt_trichotomy m 0) as [H2| [H2| H2]]; only 1: exfalso; only 1: now apply (lt_neq (n * m) 0); [ apply mul_pos_neg |  ]; only 1: exfalso; only 1: now apply (lt_neq 0 (n * m)); [ apply mul_pos_pos |  ]).	6.16058707237	2462
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.eq_mul_0_r	40	1.0.2.0.0.4.0.3.0.0.15	search with cache (only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: destruct (lt_trichotomy m 0) as [H2| [H2| H2]]; only 1: exfalso; only 1: now apply (lt_neq 0 (n * m)); [ apply mul_neg_neg |  ]; only 1: exfalso; only 1: now apply (lt_neq (n * m) 0); [ apply mul_neg_pos |  ]; only 1: destruct (lt_trichotomy m 0) as [H2| [H2| H2]]; only 1: exfalso; only 1: now apply (lt_neq (n * m) 0); [ apply mul_pos_neg |  ]; only 1: exfalso; only 1: now apply (lt_neq 0 (n * m)); [ apply mul_pos_pos |  ]).	5.83093881607	2400
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_lt_mono_nonneg	40	1	search with cache (only 1: now apply mul_lt_mono_nonneg).	0.0239651203156	2
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_le_mono_nonneg	40	5	search with cache (only 1: apply mul_le_mono_nonneg).	0.0282809734344	6
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_1_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_0	40	0.12.0.5.11.211	search with cache (only 1: apply PeanoNat.Nat.Private_NZSqrt.sqrt_unique; only 1: apply lt_succ_r; only 1: apply le_succ_l; only 1: now nzsimpl; only 1: apply le_succ_l; only 1: now nzsimpl).	20.2198870182	31890
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_eqn	40	0.0.7.2.0.1.16.0.24	search with cache (only 1: destruct (lt_ge_cases a 0) as [Ha| Ha]; only 1: order; only 1: apply le_succ_l in H; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: assert (Ha' : 0 <= S a) by now apply le_le_succ_r; only 1: apply le_succ_l in H; only 1: order; only 1: order).	13.2604799271	7635
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_0	40	0.0.0	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order).	0.0298750400543	3
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.eq_sym_iff	40		search with cache ().	0.0237879753113	0
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.neq_sym	40	7	search with cache (only 1: apply H).	0.0361750125885	8
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.succ_inj_wd_neg	40	2.11.3.11	search with cache (only 1: apply H; only 1: now f_equiv; only 1: apply H; only 1: apply succ_inj).	1.8970489502	1026
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.double_above	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.orb_even_odd	40	7.2.1.1.3	search with cache (only 1: destruct (PeanoNat.Nat.Even_or_Odd n) as [H| H]; only 1: rewrite <- PeanoNat.Nat.even_spec in H; only 1: now rewrite H; only 1: rewrite <- PeanoNat.Nat.odd_spec in H; only 1: apply orb_true_iff).	2.56971311569	438
Coq.Numbers.NatInt.NZParityX.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.negb_even	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_0	40	0.0.10	search with cache (only 1: rewrite PeanoNat.Nat.even_spec; only 1: exists 0; only 1: now nzsimpl).	0.132498979568	47
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_0	40	82	search with cache (only 1: now rewrite <- BinNat.N.negb_even, BinNat.N.even_0).	2.80437588692	3543
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_1	40	1.17.30	search with cache (only 1: rewrite BinInt.Z.odd_spec; only 1: exists BinNums.N0; only 1: now nzsimpl').	1.80228209496	1475
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_1	40	3	search with cache (only 1: now rewrite <- PeanoNat.Nat.negb_odd, PeanoNat.Nat.odd_1).	0.0236599445343	4
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_2	40	104	search with cache (only 1: now rewrite <- BinNat.N.negb_even, BinNat.N.even_2).	7.40407705307	6352
Coq.Numbers.NatInt.NZParityX.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_add_even	40	0.0.0.8	search with cache (only 1: rewrite <- even_spec in H; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	1.42253804207	184
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_add_mul_2	40	0.0.0.1.6	search with cache (only 1: nzsimpl'; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	1.42108488083	120
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_succ_comm	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_comm	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_1_r	40	0	search with cache (only 1: now nzsimpl').	0.0775201320648	1
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_assoc	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_cancel_r	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_shuffle0	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_shuffle3	40	15.0	search with cache (only 1: rewrite 2!add_assoc, add_cancel_r; only 1: apply add_comm).	18.0402629375	1781
Coq.Numbers.NatInt.NZAddX.NZAddProp.sub_1_r	40	0	search with cache (only 1: now nzsimpl').	0.0950920581818	1
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_0_l	40	0.36	search with cache (only 1: destruct H; only 1: rewrite mul_0_l in H || rewrite mul_0_r in H).	0.737643003464	696
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_factor_l	40	7	search with cache (only 1: apply divide_mul_l).	0.0874650478363	11
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_factor_r	40	1.7	search with cache (only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.0455889701843	10
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_comm	40	1.5.8.0.4.0	search with cache (only 1: apply gcd_unique; only 1: rewrite <- (mul_1_l n)  at 1; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: now apply gcd_greatest).	16.3936491013	2236
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_0_r_nonneg	40	1.0	search with cache (only 1: apply gcd_unique; only 1: apply divide_0_r).	0.0319230556488	3
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_1_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_1_r	40	1.0.0.0	search with cache (only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl).	0.0891160964966	5
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_diag_nonneg	40	0	search with cache (only 1: apply gcd_unique).	0.0259170532227	1
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_mul_diag_l	40	1.0	search with cache (only 1: apply gcd_unique; only 1: apply divide_mul_l, divide_refl).	0.0379018783569	3
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_2	40	1.0.0.3.2.1	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: order'; only 1: order_pos; only 1: now nzsimpl).	1.29989790916	163
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_eqn	40	0.0.0.2	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order).	0.104753017426	6
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_nonpos	40	3.0.0	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order').	0.0655839443207	6
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_1	40	2	search with cache (only 1: apply log2_up_eqn0).	0.0277519226074	3
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_2	40	6.0.4.0.2.1	search with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: order_pos; only 1: rewrite two_succ, one_succ  at 1; only 1: apply le_succ_l; only 1: nzsimpl').	7.25421905518	1286
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.HexadecimalZX.of_to	40
Coq.Numbers.HexadecimalZX.to_of	40
Coq.Numbers.HexadecimalZX.to_int_inj	40
Coq.Numbers.HexadecimalZX.to_int_surj	40
Coq.Numbers.HexadecimalZX.of_int_norm	40
Coq.Numbers.HexadecimalZX.of_inj	40
Coq.Numbers.HexadecimalZX.of_iff	40
Coq.Numbers.HexadecimalZX.of_hex_uint_iter_D0	40
Coq.Numbers.HexadecimalZX.of_hex_int_iter_D0	40
Coq.Numbers.HexadecimalZX.double_norm	40
Coq.Numbers.HexadecimalZX.of_hex_int_double	40
Coq.Numbers.HexadecimalZX.double_to_hex_int	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPosX.Unsigned.Nadd_simpl	40
Coq.Numbers.DecimalPosX.Unsigned.of_uint_acc_eqn	40	0	search with cache (only 1: induction d).	0.0683979988098	1
Coq.Numbers.DecimalPosX.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPosX.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_succ_double	40
Coq.Numbers.DecimalPosX.Unsigned.of_to	40
Coq.Numbers.DecimalPosX.Unsigned.succ_double_alt	40	4	search with cache (only 1: induction d).	0.0311360359192	5
Coq.Numbers.DecimalPosX.Unsigned.double_succ	40	0.25	search with cache (only 1: induction d; only 1: now induction d).	0.465254068375	333
Coq.Numbers.DecimalPosX.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPosX.Unsigned.nat_iter_S	40		search with cache ().	0.0119371414185	0
Coq.Numbers.DecimalPosX.Unsigned.nat_iter_0	40		search with cache ().	0.0145280361176	0
Coq.Numbers.DecimalPosX.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPosX.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPosX.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPosX.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPosX.Unsigned.to_of	40
Coq.Numbers.DecimalPosX.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPosX.Unsigned.to_uint_nonnil	40
Coq.Numbers.DecimalPosX.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPosX.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPosX.Unsigned.of_uint_norm	40	10	search with cache (only 1: induction d).	1.2199678421	163
Coq.Numbers.DecimalPosX.Unsigned.of_inj	40
Coq.Numbers.DecimalPosX.Unsigned.of_iff	40
Coq.Numbers.DecimalPosX.Unsigned.nztail_to_uint	40
Coq.Numbers.DecimalPosX.Signed.of_to	40
Coq.Numbers.DecimalPosX.Signed.to_of	40
Coq.Numbers.DecimalPosX.Signed.to_int_inj	40
Coq.Numbers.DecimalPosX.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPosX.Signed.of_int_norm	40	1.0.0.0.0.0	search with cache (only 1: unfold Pos.of_int; only 1: destruct d; only 1: rewrite <- Unsigned.to_of; only 1: destruct (Pos.of_uint d); only 1: now rewrite Unsigned.of_to; only 1: destruct (nzhead d) eqn:E).	0.154201984406	7
Coq.Numbers.DecimalPosX.Signed.of_inj_pos	40
Coq.Structures.EqualitiesX.UpdateEq.eq_equiv	40	0.102	search with cache (only 1: repeat split; only 1: intros EQ).	7.85360598564	5415
Coq.Structures.EqualitiesX.HasEqDec2Bool.eqb_eq	40
Coq.Structures.EqualitiesX.HasEqBool2Dec.eq_dec	40
Coq.Structures.EqualitiesX.BoolEqualityFacts.eqb_compat	40
Coq.Structures.EqualitiesX.BoolEqualityFacts.eqb_spec	40
Coq.Structures.EqualitiesX.BoolEqualityFacts.eqb_neq	40
Coq.Structures.EqualitiesX.BoolEqualityFacts.eqb_refl	40	4	search with cache (only 1: apply BinPos.Pos.eqb_eq).	0.0214500427246	5
Coq.Structures.EqualitiesX.BoolEqualityFacts.eqb_sym	40	0.1.0.0.1.0.3	search with cache (only 1: apply eq_true_iff_eq; only 1: apply eqb_eq; only 1: symmetry; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: symmetry; only 1: apply eqb_eq).	2.59749507904	282
Coq.Structures.OrdersX.Compare2EqBool.eqb_eq	40
Coq.Structures.OrdersX.OT_to_Full.le_lteq	40		search with cache ().	0.0153698921204	0
Coq.Structures.OrdersX.OTF_LtIsTotal.lt_total	40
Coq.Structures.OrdersX.OTF_to_TTLB.leb_le	40
Coq.Structures.OrdersX.OTF_to_TTLB.leb_total	40
Coq.Structures.OrdersX.OTF_to_TTLB.leb_trans	40
Coq.Structures.OrdersX.TTLB_to_OTF.compare_spec	40
Coq.Structures.OrdersX.TTLB_to_OTF.eqb_eq	40
Coq.Structures.OrdersX.TTLB_to_OTF.eq_equiv	40
Coq.Structures.OrdersX.TTLB_to_OTF.lt_strorder	40
Coq.Structures.OrdersX.TTLB_to_OTF.lt_compat	40
Coq.Structures.OrdersX.TTLB_to_OTF.le_lteq	40
Coq.Structures.OrdersExX.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersExX.PairOrderedType.lt_compat	40
Coq.Structures.OrdersExX.PairOrderedType.compare_spec	40
Coq.Structures.OrdersExX.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersExX.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersExX.PositiveOrderedTypeBits.lt_compat	40	0	search with cache (only 1: repeat red).	0.048730134964	1
Coq.Structures.OrdersExX.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersExX.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.DecidableTypeExX.PairDecidableType.eq_refl	40		search with cache ().	0.0202369689941	0
Coq.Structures.DecidableTypeExX.PairDecidableType.eq_sym	40	0.18	search with cache (only 1: destruct x; only 1: destruct H).	0.654220104218	175
Coq.Structures.DecidableTypeExX.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeExX.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeExX.PairUsualDecidableType.eq_dec	40
Coq.Structures.GenericMinMaxX.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMaxX.GenericMinMax.max_l	40
Coq.Structures.GenericMinMaxX.GenericMinMax.max_r	40	0.2.5.0.1	search with cache (only 1: unfold max, gmax; only 1: case compare_spec; only 1: rewrite le_lteq in *; only 1: elim (ge_not_lt x y); only 1: rewrite le_lteq in *).	1.16611289978	269
Coq.Structures.GenericMinMaxX.GenericMinMax.min_l	40
Coq.Structures.GenericMinMaxX.GenericMinMax.min_r	40	3.0.1	search with cache (only 1: unfold min, gmin; only 1: case compare_spec; only 1: elim (ge_not_lt x y)).	0.842172861099	53
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_spec_le	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.le_max_l	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.120746850967	1
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_l_iff	40	0.5.7	search with cache (only 1: destruct (max_spec n m); only 1: order; only 1: now apply max_l).	2.01832604408	106
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_r_iff	40	3.5.4.2	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: order; only 1: order; only 1: apply max_r || apply max_l).	18.2568659782	861
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lt_iff	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub_l	40	2.2.4	search with cache (only 1: destruct (max_spec n m); only 1: order; only 1: order).	0.300292015076	28
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub_r	40	2.2.4	search with cache (only 1: destruct (max_spec n m); only 1: order; only 1: order).	0.392813920975	29
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub	40	1	search with cache (only 1: solve_max).	0.148684024811	2
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub_iff	40	1.2.2.4.2.2.4	search with cache (only 1: destruct (max_spec n m); only 1: order; only 1: order; only 1: destruct (max_spec n m); only 1: order; only 1: order; only 1: solve_max).	10.5244250298	1061
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub_lt	40	1.1.2	search with cache (only 1: destruct (max_spec n m); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.182298183441	7
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub_lt_iff	40	1.1.1.3.1.1.3	search with cache (only 1: destruct (max_spec n m); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: destruct (max_spec n m); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: solve_max).	8.57257199287	540
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_le_compat_r	40	0.2.0	search with cache (only 1: apply max_lub_iff; only 1: solve_max; only 1: solve_max).	0.224391937256	5
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_le_compat	40	2.2.1	search with cache (only 1: apply max_lub_iff; only 1: solve_max; only 1: solve_max).	0.42181801796	8
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_id	40	1.6	search with cache (only 1: apply min_l; only 1: order).	0.0808429718018	9
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.le_min_r	40	6.6.1	search with cache (only 1: destruct (min_spec n m); only 1: order; only 1: order).	31.5735309124	840
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.107485055923	1
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_l_iff	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_r_iff	40	5.6.1	search with cache (only 1: destruct (min_spec n m); only 1: order; only 1: now apply min_r).	18.6884150505	593
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb_l	40	2.2.0	search with cache (only 1: destruct (min_spec n m); only 1: order; only 1: order).	0.14418888092	7
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb_r	40	2.2.0	search with cache (only 1: destruct (min_spec n m); only 1: order; only 1: order).	0.139200925827	7
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb	40	2.2.0	search with cache (only 1: destruct (min_spec n m); only 1: order; only 1: order).	0.143645048141	7
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb_iff	40	1.2.2.0.2.2.0	search with cache (only 1: destruct (min_spec n m); only 1: order; only 1: order; only 1: destruct (min_spec n m); only 1: order; only 1: order; only 1: solve_min).	7.20629191399	432
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb_lt	40	1.1.0	search with cache (only 1: destruct (min_spec n m); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.145014047623	5
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb_lt_iff	40	1.1.1.0.1.1.0	search with cache (only 1: destruct (min_spec n m); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: destruct (min_spec n m); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: solve_min).	2.84765410423	169
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_le_compat_r	40	0.2.0	search with cache (only 1: apply min_glb_iff; only 1: solve_min; only 1: solve_min).	0.231914997101	5
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_le_compat	40	0.0.1	search with cache (only 1: apply min_glb_iff; only 1: solve_min; only 1: solve_min).	0.361769914627	4
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_max_absorption	40	3.4	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.29623913765	11
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_min_absorption	40	3.16	search with cache (only 1: apply min_r || apply min_l; only 1: solve_max).	10.2093911171	740
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.max_case	40	12	search with cache (only 1: apply BinNat.N.Private_Dec.max_case_strong).	0.738883018494	137
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.min_case	40	15	search with cache (only 1: apply PeanoNat.Nat.Private_Dec.min_case_strong).	1.36612296104	309
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMaxX.UsualMinMaxLogicalProperties.max_monotone	40	16	search with cache (only 1: apply PeanoNat.Nat.max_mono).	0.658087015152	222
Coq.Structures.GenericMinMaxX.UsualMinMaxLogicalProperties.min_monotone	40	13	search with cache (only 1: apply PeanoNat.Nat.min_mono).	0.422389984131	111
Coq.Structures.GenericMinMaxX.UsualMinMaxLogicalProperties.min_max_antimonotone	40	13	search with cache (only 1: apply PeanoNat.Nat.min_max_antimono).	0.395534992218	115
Coq.Structures.GenericMinMaxX.UsualMinMaxLogicalProperties.max_min_antimonotone	40	16.18.8	search with cache (only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: apply BinPos.Pos.max_min_antimono; only 1: apply BinPos.Pos.max_min_antimono).	7.22023391724	3701
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.max_case_strong	40	11	search with cache (only 1: apply max_case_strong).	0.661508083344	112
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.max_case	40	6	search with cache (only 1: apply Private_Dec.max_case_strong).	0.0618410110474	12
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.max_dec	40	0	search with cache (only 1: apply Private_Dec.max_case).	0.0377449989319	1
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.min_case_strong	40	11	search with cache (only 1: apply min_case_strong).	0.206670999527	54
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.min_case	40	6	search with cache (only 1: apply Private_Dec.min_case_strong).	0.0835049152374	12
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.min_dec	40	1	search with cache (only 1: apply Private_Dec.min_case).	0.037947177887	2
Coq.Structures.GenericMinMaxX.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrdersAltX.Update_OT.lt_strorder	40
Coq.Structures.OrdersAltX.Update_OT.lt_compat	40
Coq.Structures.OrdersAltX.Update_OT.compare_spec	40
Coq.Structures.OrdersAltX.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAltX.Backport_OT.lt_trans	40	5.0	search with cache (only 1: intros x y L E; only 1: rewrite E).	0.0472450256348	7
Coq.Structures.OrdersAltX.Backport_OT.compare	40
Coq.Structures.OrdersAltX.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAltX.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAltX.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAltX.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAltX.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAltX.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAltX.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAltX.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAltX.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAltX.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAltX.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAltX.OT_to_Alt.compare_trans	40
Coq.Structures.OrderedTypeAltX.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAltX.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAltX.OrderedType_from_Alt.lt_not_eq	40		search with cache ().	0.0142779350281	0
Coq.Structures.OrderedTypeAltX.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAltX.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAltX.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAltX.OrderedType_to_Alt.compare_trans	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqke_eqk	40	1.6	search with cache (only 1: intros l; only 1: firstorder).	0.0743000507355	9
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqke_def	40		search with cache ().	0.0170049667358	0
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqke_def'	40		search with cache ().	0.0212099552155	0
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqke_1	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqke_2	40	34	search with cache (only 1: inversion H).	0.774683952332	738
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqk_def	40		search with cache ().	0.0168092250824	0
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqk_def'	40		search with cache ().	0.0206451416016	0
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqk_1	40		search with cache ().	0.0172400474548	0
Coq.Structures.EqualitiesFactsX.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.InA_eqk_eqke	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_nil	40	51	search with cache (only 1: firstorder).	0.816963195801	1333
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_cons	40	3.9.0.8	search with cache (only 1: compute in H; only 1: rewrite In_alt; only 1: invlist InA; only 1: firstorder  auto with crelations).	19.795787096	2371
Coq.Structures.EqualitiesFactsX.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.MapsTo_eq	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_eq	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_inv	40	15.5	search with cache (only 1: firstorder  auto with crelations; only 1: inversion H).	8.00505185127	1251
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_inv_2	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_inv_3	40	1	search with cache (only 1: rewrite InA_cons, eqke_def in H).	0.061450958252	2
Coq.Structures.EqualitiesFactsX.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFactsX.PairUsualDecidableType.eq_dec	40
Coq.Structures.OrderedTypeExX.Nat_as_OT.lt_trans	40
Coq.Structures.OrderedTypeExX.Nat_as_OT.lt_not_eq	40	8.12	search with cache (only 1: eapply Pos.Private_Tac.lt_irrefl; only 1: Nat.order).	1.05876612663	259
Coq.Structures.OrderedTypeExX.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeExX.Z_as_OT.lt_trans	40	0	search with cache (only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0300049781799	1
Coq.Structures.OrderedTypeExX.Z_as_OT.lt_not_eq	40	93	search with cache (only 1: Z.order).	15.5714659691	9411
Coq.Structures.OrderedTypeExX.Z_as_OT.compare	40
Coq.Structures.OrderedTypeExX.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeExX.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeExX.N_as_OT.compare	40
Coq.Structures.OrderedTypeExX.PairOrderedType.eq_refl	40		search with cache ().	0.022864818573	0
Coq.Structures.OrderedTypeExX.PairOrderedType.eq_sym	40	4	search with cache (only 1: destruct H).	0.036278963089	5
Coq.Structures.OrderedTypeExX.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeExX.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeExX.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeExX.PairOrderedType.compare	40
Coq.Structures.OrderedTypeExX.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.eq_dec	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.cmp_lt_nat	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.lt_trans	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.compare_helper_eq	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeExX.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeExX.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeExX.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeExX.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeExX.String_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeExX.String_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeExX.String_as_OT.cmp_lt	40
Coq.Structures.OrderedTypeExX.String_as_OT.compare_helper_lt	40
Coq.Structures.OrderedTypeExX.String_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeExX.String_as_OT.compare_helper_eq	40	16	search with cache (only 1: now apply Ascii_as_OT.cmp_eq).	0.576957941055	176
Coq.Structures.OrdersFactsX.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFactsX.CompareFacts.compare_eq	40	11	search with cache (only 1: now apply BinNat.N.compare_eq_iff).	0.264219045639	54
Coq.Structures.OrdersFactsX.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFactsX.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFactsX.CompareFacts.compare_nlt_iff	40	6.27.6.27	search with cache (only 1: reflexivity || destruct H; only 1: now apply BinNat.N.compare_lt_iff; only 1: reflexivity || destruct H; only 1: now apply BinNat.N.compare_lt_iff).	16.4599819183	11561
Coq.Structures.OrdersFactsX.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFactsX.CompareFacts.compare_compat	40
Coq.Structures.OrdersFactsX.CompareFacts.compare_refl	40	0	search with cache (only 1: apply compare_eq_iff).	0.0313110351562	1
Coq.Structures.OrdersFactsX.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_antisym	40	2.2	search with cache (only 1: intros a b; only 1: order).	0.0452258586884	6
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_not_gt_iff	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.lt_not_ge_iff	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.lt_or_ge	40	0.1.0	search with cache (only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition).	0.481596946716	4
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.eq_is_le_ge	40	10.10.10	search with cache (only 1: iorder; only 1: iorder; only 1: iorder).	5.94694805145	1501
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.compare_le_iff	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.compare_ge_iff	40
Coq.Structures.OrdersFactsX.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFactsX.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFactsX.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFactsX.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFactsX.OrderedTypeTest.lt_not_eq	40	8	search with cache (only 1: order).	0.200431108475	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0456759929657	1
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0436608791351	1
Coq.Structures.OrdersFactsX.OrderedTypeTest.le_eq	40	1	search with cache (only 1: order).	1.91603398323	2
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_le	40	1	search with cache (only 1: order).	1.91607785225	2
Coq.Structures.OrdersFactsX.OrderedTypeTest.neq_eq	40	2	search with cache (only 1: order).	1.91692018509	3
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_neq	40	1	search with cache (only 1: order).	1.92105388641	2
Coq.Structures.OrdersFactsX.OrderedTypeTest.le_lt_trans	40	1	search with cache (only 1: order).	0.465720176697	2
Coq.Structures.OrdersFactsX.OrderedTypeTest.lt_le_trans	40	1	search with cache (only 1: order).	0.487509965897	2
Coq.Structures.OrdersFactsX.OrderedTypeTest.le_trans	40	1	search with cache (only 1: order).	1.94133591652	2
Coq.Structures.OrdersFactsX.OrderedTypeTest.le_antisym	40	8	search with cache (only 1: order).	0.322093963623	19
Coq.Structures.OrdersFactsX.OrderedTypeTest.le_neq	40	8	search with cache (only 1: order).	0.339140892029	19
Coq.Structures.OrdersFactsX.OrderedTypeTest.neq_sym	40	3.0	search with cache (only 1: eapply OrderTac.lt_irrefl; only 1: destruct H).	0.0750319957733	5
Coq.Structures.OrdersFactsX.OrderedTypeTest.lt_le	40	8	search with cache (only 1: order).	0.199588060379	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.gt_not_eq	40	8	search with cache (only 1: order).	0.199867963791	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_not_lt	40	8	search with cache (only 1: order).	0.200169086456	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_not_gt	40	8	search with cache (only 1: order).	0.199923992157	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.lt_not_gt	40	8	search with cache (only 1: order).	0.210025072098	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_is_nlt_ngt	40	8.8.8	search with cache (only 1: order; only 1: order; only 1: order).	7.32362008095	1249
Coq.Structures.OrdersFactsX.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFactsX.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFactsX.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFactsX.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_eq	40	0	search with cache (only 1: now apply compare_eq_iff).	0.0322499275208	1
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_refl	40	0	search with cache (only 1: now apply compare_eq_iff).	0.0288338661194	1
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_ngt_iff	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_nlt_iff	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_irrefl	40	0.3.8	search with cache (only 1: apply BinPos.Pos.ltb_ge; only 1: apply lt_eq_cases; only 1: now right).	0.654844999313	224
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersListsX.OrderedTypeLists.In_eq	40		search with cache ().	0.0165901184082	0
Coq.Structures.OrdersListsX.OrderedTypeLists.ListIn_In	40
Coq.Structures.OrdersListsX.OrderedTypeLists.Inf_lt	40	17.24.1	search with cache (only 1: destruct H0; only 1: constructor; only 1: now rewrite H).	3.51333093643	2294
Coq.Structures.OrdersListsX.OrderedTypeLists.Inf_eq	40	13.28.1	search with cache (only 1: destruct H0; only 1: constructor; only 1: now rewrite H).	4.96583104134	3621
Coq.Structures.OrdersListsX.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersListsX.OrderedTypeLists.ListIn_Inf	40	16	search with cache (only 1: induction l as [| a l' Hrec]).	0.677208900452	144
Coq.Structures.OrdersListsX.OrderedTypeLists.In_Inf	40
Coq.Structures.OrdersListsX.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersListsX.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersListsX.KeyOrderedType.ltk_compat	40
Coq.Structures.OrdersListsX.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersListsX.KeyOrderedType.pair_compat	40		search with cache ().	0.0232300758362	0
Coq.Structures.OrdersListsX.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersListsX.KeyOrderedType.ltk_not_eqke	40
Coq.Structures.OrdersListsX.KeyOrderedType.Inf_eq	40	20.1	search with cache (only 1: unfold eqk, ltk; only 1: rewrite H).	3.2783780098	486
Coq.Structures.OrdersListsX.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_In_cons_2	40	5.14	search with cache (only 1: eapply subrelation_proper; only 1: now compute).	3.6418030262	201
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrdersTacX.OrderFacts.eq_refl	40		search with cache ().	0.0176339149475	0
Coq.Structures.OrdersTacX.OrderFacts.le_refl	40	4.24	search with cache (only 1: rewrite ?BinNat.N.Private_OrderTac.IsTotal.le_lteq; only 1: right).	1.2490298748	658
Coq.Structures.OrdersTacX.OrderFacts.lt_irrefl	40	41	search with cache (only 1: elim (CRelationClasses.StrictOrder_Irreflexive x)).	0.495563030243	858
Coq.Structures.OrdersTacX.OrderFacts.eq_sym	40		search with cache ().	0.0190000534058	0
Coq.Structures.OrdersTacX.OrderFacts.le_antisym	40
Coq.Structures.OrdersTacX.OrderFacts.neq_sym	40	0	search with cache (only 1: intuition).	0.0936439037323	1
Coq.Structures.OrdersTacX.OrderFacts.trans	40
Coq.Structures.OrdersTacX.OrderFacts.eq_neq	40
Coq.Structures.OrdersTacX.OrderFacts.neq_eq	40	0.14	search with cache (only 1: case H; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	25.6895558834	91
Coq.Structures.OrdersTacX.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTacX.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTacX.OrderFacts.not_gt_le	40	1.1.4	search with cache (only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: rewrite P.le_lteq).	0.677964925766	61
Coq.Structures.OrdersTacX.OrderFacts.le_neq_lt	40
Coq.Structures.OrderedTypeX.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.IsTO.le_lteq	40		search with cache ().	0.021977186203	0
Coq.Structures.OrderedTypeX.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_le	40	6	search with cache (only 1: order).	0.88149189949	55
Coq.Structures.OrderedTypeX.OrderedTypeFacts.neq_eq	40	14	search with cache (only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.519685983658	152
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.0288507938385	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.037281036377	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0371770858765	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.0376870632172	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0363850593567	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0373179912567	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.0296721458435	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.0270161628723	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0289661884308	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0286750793457	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0279109477997	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0271689891815	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.elim_compare_eq	40	0.7.0.4.0	search with cache (only 1: destruct (compare x y); only 1: absurd (eq x x); only 1: order; only 1: apply -> Forall_forall; only 1: order).	3.73282003403	464
Coq.Structures.OrderedTypeX.OrderedTypeFacts.elim_compare_lt	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.elim_compare_gt	40	0.1.0.1.2	search with cache (only 1: case (compare x y); only 1: exfalso; only 1: order; only 1: exfalso; only 1: order).	0.641135931015	56
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.In_eq	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.ListIn_In	40	5.1.39	search with cache (only 1: induction l; only 1: rewrite !InA_cons; only 1: auto with *).	12.0303189754	4815
Coq.Structures.OrderedTypeX.OrderedTypeFacts.Inf_lt	40	0.1.6	search with cache (only 1: destruct H0; only 1: right; only 1: order).	0.271875858307	22
Coq.Structures.OrderedTypeX.OrderedTypeFacts.Inf_eq	40	0.1.6	search with cache (only 1: destruct H0; only 1: right; only 1: order).	0.33273601532	58
Coq.Structures.OrderedTypeX.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.ListIn_Inf	40	21	search with cache (only 1: induction l as [| a l' Hrec]).	2.06779289246	543
Coq.Structures.OrderedTypeX.OrderedTypeFacts.In_Inf	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedTypeX.KeyOrderedType.eqke_eqk	40	3	search with cache (only 1: apply H).	0.0363290309906	4
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_right_r	40		search with cache ().	0.0155529975891	0
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_right_l	40		search with cache ().	0.015419960022	0
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_refl	40	123	search with cache (only 1: red).	1.58611416817	7705
Coq.Structures.OrderedTypeX.KeyOrderedType.eqke_refl	40		search with cache ().	0.0292639732361	0
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_sym	40
Coq.Structures.OrderedTypeX.KeyOrderedType.eqke_sym	40	6	search with cache (only 1: destruct H).	0.125835180283	15
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_trans	40
Coq.Structures.OrderedTypeX.KeyOrderedType.eqke_trans	40	11.2.4.2.43	search with cache (only 1: destruct H; only 1: split; only 1: destruct H0; only 1: order; only 1: destruct H0).	12.2161619663	7087
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_trans	40
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_not_eqke	40
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_equiv	40	3.3.0	search with cache (only 1: unfold eqk, ltk; only 1: split; only 1: eauto with ordered_type).	0.334117889404	9
Coq.Structures.OrderedTypeX.KeyOrderedType.eqke_equiv	40	0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.226983070374	3
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_strorder	40
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_not_ltk	40
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_eqk	40
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_ltk	40
Coq.Structures.OrderedTypeX.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedTypeX.KeyOrderedType.In_alt	40
Coq.Structures.OrderedTypeX.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedTypeX.KeyOrderedType.In_eq	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Inf_eq	40	15.7	search with cache (only 1: compute; only 1: rewrite H).	5.4215669632	659
Coq.Structures.OrderedTypeX.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedTypeX.KeyOrderedType.In_inv	40
Coq.Structures.OrderedTypeX.KeyOrderedType.In_inv_2	40
Coq.Structures.OrderedTypeX.KeyOrderedType.In_inv_3	40
Coq.Structures.DecidableTypeX.KeyDecidableType.eqke_eqk	40	17	search with cache (only 1: let rec inv H := inversion H; try subst; clear H in inv H).	0.767827987671	126
Coq.Structures.DecidableTypeX.KeyDecidableType.eqk_refl	40		search with cache ().	0.0109870433807	0
Coq.Structures.DecidableTypeX.KeyDecidableType.eqke_refl	40		search with cache ().	0.0109770298004	0
Coq.Structures.DecidableTypeX.KeyDecidableType.eqk_sym	40		search with cache ().	0.0128991603851	0
Coq.Structures.DecidableTypeX.KeyDecidableType.eqke_sym	40	3	search with cache (only 1: destruct H).	0.0422909259796	4
Coq.Structures.DecidableTypeX.KeyDecidableType.eqk_trans	40
Coq.Structures.DecidableTypeX.KeyDecidableType.eqke_trans	40
Coq.Structures.DecidableTypeX.KeyDecidableType.eqk_equiv	40
Coq.Structures.DecidableTypeX.KeyDecidableType.eqke_equiv	40	0.0	search with cache (only 1: split; only 1: eauto).	0.221405029297	2
Coq.Structures.DecidableTypeX.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableTypeX.KeyDecidableType.InA_eqk	40
Coq.Structures.DecidableTypeX.KeyDecidableType.In_alt	40
Coq.Structures.DecidableTypeX.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableTypeX.KeyDecidableType.In_eq	40
Coq.Structures.DecidableTypeX.KeyDecidableType.In_inv	40
Coq.Structures.DecidableTypeX.KeyDecidableType.In_inv_2	40	11	search with cache (only 1: invlist InA).	0.379040002823	75
Coq.Structures.DecidableTypeX.KeyDecidableType.In_inv_3	40	9.33.5	search with cache (only 1: unfold eqke; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: destruct H1).	38.2180409431	6415
Coq.ZArith.ZorderX.Ztrichotomy_inf	40	0.0.0	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m)).	0.193042039871	3
Coq.ZArith.ZorderX.Ztrichotomy	40	2.0	search with cache (only 1: Z.swap_greater; only 1: destruct (Z.lt_trichotomy n m)).	0.122925043106	4
Coq.ZArith.ZorderX.dec_Zne	40	1	search with cache (only 1: destruct (Z.eq_decidable n m)).	0.111419916153	20
Coq.ZArith.ZorderX.dec_Zgt	40	0.1.0.0.0	search with cache (only 1: destruct (Z.lt_decidable m n); only 1: left; only 1: now Z.swap_greater; only 1: right; only 1: now Z.swap_greater).	0.21878194809	15
Coq.ZArith.ZorderX.dec_Zge	40	0.1.0.0.2	search with cache (only 1: destruct (Z.le_decidable m n); only 1: left; only 1: now Z.swap_greater; only 1: right; only 1: now Z.swap_greater).	0.472019910812	58
Coq.ZArith.ZorderX.not_Zeq	40	4	search with cache (only 1: destruct (Z.lt_trichotomy n m)).	0.0631251335144	5
Coq.ZArith.ZorderX.Zle_not_lt	40	0	search with cache (only 1: Z.order).	0.0408260822296	1
Coq.ZArith.ZorderX.Zlt_not_le	40	0	search with cache (only 1: Z.order).	0.0408179759979	1
Coq.ZArith.ZorderX.Zle_not_gt	40		search with cache ().	0.0163960456848	0
Coq.ZArith.ZorderX.Zgt_not_le	40		search with cache ().	0.0163240432739	0
Coq.ZArith.ZorderX.Znot_ge_lt	40	0.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0640218257904	3
Coq.ZArith.ZorderX.Znot_lt_ge	40		search with cache ().	0.0160291194916	0
Coq.ZArith.ZorderX.Znot_gt_le	40		search with cache ().	0.0158541202545	0
Coq.ZArith.ZorderX.Znot_le_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0599918365479	4
Coq.ZArith.ZorderX.not_Zne	40	3	search with cache (only 1: destruct (Z.eq_decidable n m)).	0.0567669868469	4
Coq.ZArith.ZorderX.Zgt_asym	40	0.1	search with cache (only 1: destruct (Z.lt_decidable m n); only 1: now Z.swap_greater).	0.0857200622559	3
Coq.ZArith.ZorderX.Zgt_irrefl	40	4.3	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0617609024048	9
Coq.ZArith.ZorderX.Zle_lt_or_eq	40	3	search with cache (only 1: apply Z.lt_eq_cases).	0.102836847305	11
Coq.ZArith.ZorderX.Zgt_trans	40	5.0	search with cache (only 1: Z.swap_greater; only 1: now transitivity m).	0.105744123459	7
Coq.ZArith.ZorderX.Zle_gt_trans	40	6.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.223515033722	11
Coq.ZArith.ZorderX.Zgt_le_trans	40	3.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.339426994324	13
Coq.ZArith.ZorderX.Zge_trans	40	13.0	search with cache (only 1: Z.swap_greater; only 1: eauto using Z.le_trans).	0.812585830688	215
Coq.ZArith.ZorderX.Zsucc_le_compat	40
Coq.ZArith.ZorderX.Zsucc_lt_compat	40
Coq.ZArith.ZorderX.Zsucc_gt_compat	40
Coq.ZArith.ZorderX.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0903739929199	2
Coq.ZArith.ZorderX.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0793452262878	2
Coq.ZArith.ZorderX.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0710599422455	1
Coq.ZArith.ZorderX.Zgt_succ	40	4.1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.111319065094	11
Coq.ZArith.ZorderX.Znot_le_succ	40	10.0.29	search with cache (only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.le_succ_l).	1.35439419746	1804
Coq.ZArith.ZorderX.Zgt_le_succ	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0620291233063	3
Coq.ZArith.ZorderX.Zle_gt_succ	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0599310398102	3
Coq.ZArith.ZorderX.Zle_lt_succ	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.0389058589935	2
Coq.ZArith.ZorderX.Zlt_le_succ	40	1	search with cache (only 1: apply Z.le_succ_l).	0.0417799949646	2
Coq.ZArith.ZorderX.Zgt_succ_le	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.06409907341	3
Coq.ZArith.ZorderX.Zlt_succ_le	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.0408270359039	2
Coq.ZArith.ZorderX.Zle_succ_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0592129230499	3
Coq.ZArith.ZorderX.Zle_succ_le	40	1	search with cache (only 1: now apply Z.lt_le_incl, Z.le_succ_l).	0.0477561950684	2
Coq.ZArith.ZorderX.Zgt_succ_pred	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_lt_pred).	0.0572869777679	2
Coq.ZArith.ZorderX.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0381550788879	1
Coq.ZArith.ZorderX.Zlt_0_le_0_pred	40	0.0	search with cache (only 1: apply Z.lt_succ_r; only 1: now rewrite Z.succ_pred).	0.0547330379486	2
Coq.ZArith.ZorderX.Zgt_0_le_0_pred	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r; only 1: now rewrite Z.succ_pred).	0.0759580135345	3
Coq.ZArith.ZorderX.Zle_neg_pos	40		search with cache ().	0.0252830982208	0
Coq.ZArith.ZorderX.Zgt_pos_0	40		search with cache ().	0.0170431137085	0
Coq.ZArith.ZorderX.Zle_0_pos	40		search with cache ().	0.0243489742279	0
Coq.ZArith.ZorderX.Zlt_neg_0	40		search with cache ().	0.0171270370483	0
Coq.ZArith.ZorderX.Zle_0_nat	40	2	search with cache (only 1: now induction n).	0.0471620559692	3
Coq.ZArith.ZorderX.Zgt_succ_gt_or_eq	40	1.0	search with cache (only 1: Z.swap_greater; only 1: now apply Z.lt_eq_cases, Z.lt_succ_r).	0.167397022247	3
Coq.ZArith.ZorderX.Zplus_gt_compat_l	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.11300611496	4
Coq.ZArith.ZorderX.Zplus_gt_compat_r	40	7.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.408222913742	21
Coq.ZArith.ZorderX.Zplus_le_compat_l	40	11	search with cache (only 1: apply Z.add_le_mono).	0.762955188751	78
Coq.ZArith.ZorderX.Zplus_le_compat_r	40	7	search with cache (only 1: apply Z.add_le_mono_r).	0.438207864761	20
Coq.ZArith.ZorderX.Zplus_lt_compat_l	40	2	search with cache (only 1: apply Z.add_lt_mono_l).	0.0653619766235	3
Coq.ZArith.ZorderX.Zplus_lt_compat_r	40	7	search with cache (only 1: apply Z.add_lt_mono_r).	0.398676872253	23
Coq.ZArith.ZorderX.Zplus_le_reg_l	40
Coq.ZArith.ZorderX.Zplus_le_reg_r	40
Coq.ZArith.ZorderX.Zplus_lt_reg_l	40
Coq.ZArith.ZorderX.Zplus_lt_reg_r	40
Coq.ZArith.ZorderX.Zplus_gt_reg_l	40
Coq.ZArith.ZorderX.Zplus_gt_reg_r	40
Coq.ZArith.ZorderX.Zmult_le_compat_r	40	11	search with cache (only 1: now apply Z.mul_le_mono_nonneg_r).	0.154118061066	33
Coq.ZArith.ZorderX.Zmult_le_compat_l	40	7	search with cache (only 1: now apply Z.mul_le_mono_nonneg_l).	0.0477359294891	8
Coq.ZArith.ZorderX.Zmult_lt_compat_r	40	18	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.464058876038	145
Coq.ZArith.ZorderX.Zmult_gt_compat_r	40	5.0.2	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.195076942444	19
Coq.ZArith.ZorderX.Zmult_gt_0_lt_compat_r	40	5.0.2	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.192826032639	19
Coq.ZArith.ZorderX.Zmult_gt_0_le_compat_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.109850883484	4
Coq.ZArith.ZorderX.Zmult_lt_0_le_compat_r	40	2	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0839600563049	3
Coq.ZArith.ZorderX.Zmult_gt_0_lt_compat_l	40	5.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0943820476532	7
Coq.ZArith.ZorderX.Zmult_lt_compat_l	40	5	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.068500995636	6
Coq.ZArith.ZorderX.Zmult_gt_compat_l	40	5.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0954849720001	7
Coq.ZArith.ZorderX.Zmult_ge_compat_r	40	11.0	search with cache (only 1: Z.swap_greater; only 1: now apply Z.mul_le_mono_nonneg_r).	0.465605020523	76
Coq.ZArith.ZorderX.Zmult_ge_compat_l	40	7.0	search with cache (only 1: Z.swap_greater; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0745549201965	9
Coq.ZArith.ZorderX.Zmult_ge_compat	40	2.0	search with cache (only 1: Z.swap_greater; only 1: now apply Z.mul_le_mono_nonneg).	0.238610029221	11
Coq.ZArith.ZorderX.Zmult_le_compat	40	2	search with cache (only 1: now apply Z.mul_le_mono_nonneg).	0.118531942368	11
Coq.ZArith.ZorderX.Zmult_gt_0_lt_reg_r	40
Coq.ZArith.ZorderX.Zmult_lt_reg_r	40
Coq.ZArith.ZorderX.Zmult_le_reg_r	40
Coq.ZArith.ZorderX.Zmult_lt_0_le_reg_r	40
Coq.ZArith.ZorderX.Zmult_ge_reg_r	40
Coq.ZArith.ZorderX.Zmult_gt_reg_r	40
Coq.ZArith.ZorderX.Zmult_lt_compat	40	0	search with cache (only 1: now apply Z.mul_lt_mono_nonneg).	0.0560970306396	1
Coq.ZArith.ZorderX.Zmult_lt_compat2	40	0.1.0.1	search with cache (only 1: apply Z.le_lt_trans with (p * m); only 1: apply Z.mul_le_mono_pos_r; only 1: apply Z.mul_lt_mono_pos_l; only 1: Z.order).	0.204060792923	6
Coq.ZArith.ZorderX.Zmult_gt_0_compat	40	8.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_pos).	0.134093999863	10
Coq.ZArith.ZorderX.Zmult_gt_0_le_0_compat	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_nonneg_cancel_r).	0.0956990718842	2
Coq.ZArith.ZorderX.Zmult_le_0_reg_r	40	22.0.5.0.16.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r; only 1: apply Z.mul_pos_cancel_r with n; only 1: apply Z.mul_pos_cancel_r with n; only 1: Z.nzsimpl; only 1: destruct n as [| n| n], m as [| m| m]).	12.7270598412	4810
Coq.ZArith.ZorderX.Zmult_lt_0_reg_r	40
Coq.ZArith.ZorderX.Zmult_gt_0_lt_0_reg_r	40
Coq.ZArith.ZorderX.Zmult_gt_0_reg_l	40	7.68	search with cache (only 1: symmetry; only 1: destruct n as [| n| n], m as [| m| m]).	8.28492093086	7584
Coq.ZArith.ZorderX.Zlt_square_simpl	40	7	search with cache (only 1: apply Z.square_lt_simpl_nonneg).	0.0516021251678	8
Coq.ZArith.ZorderX.Zgt_square_simpl	40	7.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0758299827576	9
Coq.ZArith.ZorderX.Zeq_plus_swap	40		search with cache ().	0.0450811386108	0
Coq.ZArith.ZorderX.Zlt_0_minus_lt	40	7	search with cache (only 1: apply Z.lt_0_sub).	0.0440239906311	8
Coq.ZArith.ZorderX.Zle_0_minus_le	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0437920093536	1
Coq.ZArith.ZorderX.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0436949729919	1
Coq.ZArith.ZnumtheoryX.Zdivide_opp_r	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0348100662231	1
Coq.ZArith.ZnumtheoryX.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0355432033539	1
Coq.ZArith.ZnumtheoryX.Zdivide_opp_l	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0346310138702	1
Coq.ZArith.ZnumtheoryX.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0351128578186	1
Coq.ZArith.ZnumtheoryX.Zdivide_Zabs_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0345818996429	1
Coq.ZArith.ZnumtheoryX.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0350050926208	1
Coq.ZArith.ZnumtheoryX.Zmult_one	40	22.19	search with cache (only 1: destruct x; only 1: destruct y).	16.2329859734	5078
Coq.ZArith.ZnumtheoryX.Zdivide_bounds	40
Coq.ZArith.ZnumtheoryX.Zmod_divide	40	6	search with cache (only 1: now rewrite <- Z.mod_divide).	0.13179397583	14
Coq.ZArith.ZnumtheoryX.Zdivide_mod	40	8.33	search with cache (only 1: zero_or_not b; only 1: now apply Z.mod_divide).	4.59133505821	1958
Coq.ZArith.ZnumtheoryX.Zdivide_dec	40
Coq.ZArith.ZnumtheoryX.Z_lt_neq	40	113	search with cache (only 1: Z.order).	32.5575230122	31081
Coq.ZArith.ZnumtheoryX.Zdivide_Zdiv_eq	40	0.1	search with cache (only 1: rewrite (Z.div_mod b a)  at 1; only 1: rewrite Znumtheory.Zdivide_mod).	0.135675907135	3
Coq.ZArith.ZnumtheoryX.Zdivide_Zdiv_eq_2	40	0	search with cache (only 1: apply Z.divide_div_mul_exact).	0.0711560249329	1
Coq.ZArith.ZnumtheoryX.Zdivide_le	40	0	search with cache (only 1: now apply Z.divide_pos_le).	0.0393857955933	1
Coq.ZArith.ZnumtheoryX.Zdivide_Zdiv_lt_pos	40	0.0.2.3	search with cache (only 1: assert (0 < a) by now transitivity 1; only 1: apply Z.mul_pos_cancel_l with a; only 1: rewrite <- Znumtheory.Zdivide_Zdiv_eq; only 1: now apply Z.div_lt).	0.310962915421	22
Coq.ZArith.ZnumtheoryX.Zmod_div_mod	40
Coq.ZArith.ZnumtheoryX.Zmod_divide_minus	40	0.0.9.1	search with cache (only 1: apply Z.mod_divide; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: rewrite Zminus_mod; only 1: rewrite Z.sub_diag, Z.mod_0_l).	1.41855096817	350
Coq.ZArith.ZnumtheoryX.Zdivide_mod_minus	40	1.0.0.0.0.0.0	search with cache (only 1: assert (0 < b) by Z.order; only 1: assert (b <> 0) by now apply Znumtheory.Z_lt_neq; only 1: replace a with (a - c + c) by ring; only 1: rewrite Z.add_mod; only 1: rewrite (Znumtheory.Zdivide_mod (a - c) b); only 1: rewrite Z.mod_mod; only 1: apply Zmod_small).	0.271543979645	8
Coq.ZArith.ZnumtheoryX.Zis_gcd_sym	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_0	40	6.41.3.0.33	search with cache (only 1: Z.pos_or_neg a; only 1: constructor; only 1: intuition; only 1: split; only 1: intuition).	16.5505590439	12098
Coq.ZArith.ZnumtheoryX.Zis_gcd_1	40	3.43	search with cache (only 1: constructor; only 1: auto with zarith).	4.21450901031	1769
Coq.ZArith.ZnumtheoryX.Zis_gcd_refl	40		search with cache ().	0.0265228748322	0
Coq.ZArith.ZnumtheoryX.Zis_gcd_minus	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_opp	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_0_abs	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_unique	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_for_euclid	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_for_euclid2	40
Coq.ZArith.ZnumtheoryX.euclid_rec	40
Coq.ZArith.ZnumtheoryX.euclid	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_uniqueness_apart_sign	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_bezout	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_mult	40
Coq.ZArith.ZnumtheoryX.rel_prime_bezout	40
Coq.ZArith.ZnumtheoryX.bezout_rel_prime	40
Coq.ZArith.ZnumtheoryX.Gauss	40	0.0.0.0.0	search with cache (only 1: elim (Znumtheory.rel_prime_bezout a b H0); only 1: replace c with (c * 1); only 1: rewrite <- H1; only 1: replace (c * (u * a + v * b)) with (c * u * a + v * (b * c)); only 1: eauto with zarith).	0.311950922012	5
Coq.ZArith.ZnumtheoryX.rel_prime_mult	40
Coq.ZArith.ZnumtheoryX.rel_prime_cross_prod	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_rel_prime	40
Coq.ZArith.ZnumtheoryX.rel_prime_sym	40	8	search with cache (only 1: now apply Zis_gcd_sym).	0.0498719215393	9
Coq.ZArith.ZnumtheoryX.rel_prime_div	40
Coq.ZArith.ZnumtheoryX.rel_prime_1	40	1.1	search with cache (only 1: repeat split; only 1: exists n).	0.0595791339874	4
Coq.ZArith.ZnumtheoryX.not_rel_prime_0	40
Coq.ZArith.ZnumtheoryX.rel_prime_mod	40
Coq.ZArith.ZnumtheoryX.rel_prime_mod_rev	40
Coq.ZArith.ZnumtheoryX.Zrel_prime_neq_mod_0	40
Coq.ZArith.ZnumtheoryX.prime_divisors	40
Coq.ZArith.ZnumtheoryX.prime_rel_prime	40
Coq.ZArith.ZnumtheoryX.rel_prime_le_prime	40
Coq.ZArith.ZnumtheoryX.prime_mult	40
Coq.ZArith.ZnumtheoryX.not_prime_0	40	6.16.11.21	search with cache (only 1: absurd (1 < 1); only 1: red; only 1: unfold Pos.compare; only 1: reflexivity || destruct H).	17.8640830517	8676
Coq.ZArith.ZnumtheoryX.not_prime_1	40	118	search with cache (only 1: let rec inv H := inversion H; try subst; clear H in inv H).	3.22714400291	7095
Coq.ZArith.ZnumtheoryX.prime_2	40	9.0.2.2.15	search with cache (only 1: repeat split; only 1: Z.le_elim H; only 1: Z.le_elim H; only 1: auto with zarith; only 1: Z.le_elim H).	18.4553239346	1087
Coq.ZArith.ZnumtheoryX.prime_3	40
Coq.ZArith.ZnumtheoryX.prime_ge_2	40
Coq.ZArith.ZnumtheoryX.Z_0_1_more	40	0.0.0	search with cache (only 1: Z.le_elim H; only 1: apply Z.le_succ_l in H; only 1: Z.le_elim H).	0.127609968185	3
Coq.ZArith.ZnumtheoryX.prime_alt	40
Coq.ZArith.ZnumtheoryX.square_not_prime	40
Coq.ZArith.ZnumtheoryX.prime_div_prime	40
Coq.ZArith.ZnumtheoryX.Zgcd_is_gcd	40
Coq.ZArith.ZnumtheoryX.Zgcd_spec	40	0.2.6	search with cache (only 1: exists (Z.gcd x y); only 1: apply Znumtheory.Zgcd_is_gcd; only 1: apply Z.gcd_nonneg).	0.530663013458	39
Coq.ZArith.ZnumtheoryX.Zdivide_Zgcd	40	0	search with cache (only 1: now apply Z.gcd_greatest).	0.037770986557	1
Coq.ZArith.ZnumtheoryX.Zis_gcd_gcd	40	9.0.1	search with cache (only 1: case (Znumtheory.Zis_gcd_uniqueness_apart_sign a b c (Z.gcd a b)); only 1: apply Znumtheory.Zgcd_is_gcd; only 1: generalize (Z.gcd_nonneg a b)).	0.64354801178	107
Coq.ZArith.ZnumtheoryX.Zgcd_div_swap0	40
Coq.ZArith.ZnumtheoryX.Zgcd_div_swap	40
Coq.ZArith.ZnumtheoryX.Zgcd_ass	40	0.1	search with cache (only 1: symmetry; only 1: apply Z.gcd_assoc).	0.105398178101	3
Coq.ZArith.ZnumtheoryX.Zgcd_1_rel_prime	40
Coq.ZArith.ZnumtheoryX.rel_prime_dec	40
Coq.ZArith.ZnumtheoryX.prime_dec_aux	40
Coq.ZArith.ZnumtheoryX.prime_dec	40
Coq.ZArith.ZnumtheoryX.not_prime_divide	40
Coq.ZArith.ZdivX.Z_div_mod_POS	40
Coq.ZArith.ZdivX.Z_div_mod	40
Coq.ZArith.ZdivX.Remainder_equiv	40
Coq.ZArith.ZdivX.Z_div_mod_full	40
Coq.ZArith.ZdivX.Z_mod_remainder	40
Coq.ZArith.ZdivX.Z_div_mod_eq	40	1	search with cache (only 1: apply Z.div_mod).	0.0462310314178	2
Coq.ZArith.ZdivX.Zmod_eq_full	40	2.3	search with cache (only 1: rewrite Z.mul_comm; only 1: now apply Z.mod_eq).	0.0537111759186	7
Coq.ZArith.ZdivX.Zmod_eq	40	0	search with cache (only 1: apply Zdiv.Zmod_eq_full).	0.0465409755707	1
Coq.ZArith.ZdivX.Zdiv_eucl_exist	40	0.0	search with cache (only 1: exists (Z.div_eucl a b); only 1: exact (Zdiv.Z_div_mod a b Hb)).	0.052738904953	2
Coq.ZArith.ZdivX.Zdiv_mod_unique	40
Coq.ZArith.ZdivX.Zdiv_unique	40	2	search with cache (only 1: eapply Zdiv.Zdiv_unique_full).	0.0476920604706	3
Coq.ZArith.ZdivX.Zmod_unique	40	1	search with cache (only 1: eapply Zdiv.Zmod_unique_full).	0.0473980903625	2
Coq.ZArith.ZdivX.Zmod_0_l	40		search with cache ().	0.0117878913879	0
Coq.ZArith.ZdivX.Zmod_0_r	40	5	search with cache (only 1: destruct a).	0.0389609336853	6
Coq.ZArith.ZdivX.Zdiv_0_l	40		search with cache ().	0.0131177902222	0
Coq.ZArith.ZdivX.Zdiv_0_r	40	6	search with cache (only 1: destruct a).	0.133857011795	15
Coq.ZArith.ZdivX.Zmod_1_r	40	1	search with cache (only 1: apply Z.mod_1_r).	0.0873689651489	2
Coq.ZArith.ZdivX.Zdiv_1_r	40	0.1	search with cache (only 1: Zdiv.zero_or_not a; only 1: apply Z.div_1_r).	0.064218044281	3
Coq.ZArith.ZdivX.Z_mod_same_full	40	19.43	search with cache (only 1: Zdiv.zero_or_not a; only 1: now apply Z.mod_divide).	3.69668698311	2385
Coq.ZArith.ZdivX.Z_mod_mult	40	2.5	search with cache (only 1: Zdiv.zero_or_not b; only 1: apply Z.mod_mul).	0.0573101043701	9
Coq.ZArith.ZdivX.Z_div_pos	40	0.0	search with cache (only 1: apply Z.div_pos; only 1: auto using Z.gt_lt).	0.0455038547516	2
Coq.ZArith.ZdivX.Z_div_ge0	40	0.0	search with cache (only 1: apply Z.le_ge, Zdiv.Z_div_pos; only 1: auto using Z.ge_le).	0.0414249897003	2
Coq.ZArith.ZdivX.Z_div_lt	40	0.0.0.0	search with cache (only 1: apply Z.div_lt; only 1: apply Z.gt_lt; only 1: apply (Z.lt_le_trans _ 2); only 1: apply Z.ge_le).	0.0823788642883	4
Coq.ZArith.ZdivX.Z_div_ge	40	0.0.0.0	search with cache (only 1: apply Z.le_ge; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0822241306305	4
Coq.ZArith.ZdivX.Z_div_le	40	0.0	search with cache (only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt).	0.0631229877472	2
Coq.ZArith.ZdivX.Z_mult_div_ge	40	0.0	search with cache (only 1: apply Z.mul_div_le; only 1: auto using Z.gt_lt).	0.0412981510162	2
Coq.ZArith.ZdivX.Z_mult_div_ge_neg	40	12.0	search with cache (only 1: apply Z.le_ge; only 1: apply Z.mul_div_ge).	0.356137037277	102
Coq.ZArith.ZdivX.Z_div_exact_full_1	40
Coq.ZArith.ZdivX.Z_div_exact_full_2	40	2	search with cache (only 1: rewrite Z.div_exact).	0.0495028495789	3
Coq.ZArith.ZdivX.Zmod_le	40	4	search with cache (only 1: apply Z.mod_le).	0.0353598594666	5
Coq.ZArith.ZdivX.Zdiv_lt_upper_bound	40	1.1	search with cache (only 1: apply Z.div_lt_upper_bound; only 1: rewrite Z.mul_comm).	0.0469989776611	4
Coq.ZArith.ZdivX.Zdiv_le_upper_bound	40	16.6	search with cache (only 1: apply Z.div_le_upper_bound; only 1: rewrite Z.mul_comm).	0.682265043259	388
Coq.ZArith.ZdivX.Zdiv_le_lower_bound	40	16.0	search with cache (only 1: apply Z.div_le_lower_bound; only 1: rewrite Z.mul_comm).	0.457823038101	226
Coq.ZArith.ZdivX.Zdiv_le_compat_l	40	0	search with cache (only 1: apply Z.div_le_compat_l).	0.0385110378265	1
Coq.ZArith.ZdivX.Zdiv_sgn	40
Coq.ZArith.ZdivX.Z_mod_plus_full	40	1.0.0.0.0.2	search with cache (only 1: Zdiv.zero_or_not c; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add).	0.2711789608	12
Coq.ZArith.ZdivX.Zdiv_opp_opp	40	3.0	search with cache (only 1: Zdiv.zero_or_not b; only 1: apply Z.div_opp_opp).	0.192830085754	14
Coq.ZArith.ZdivX.Zmod_opp_opp	40	0.0	search with cache (only 1: Zdiv.zero_or_not b; only 1: apply Z.mod_opp_opp).	0.137446880341	2
Coq.ZArith.ZdivX.Z_mod_zero_opp_full	40	4.2	search with cache (only 1: Zdiv.zero_or_not b; only 1: apply Z.mod_opp_l_z).	0.147235155106	8
Coq.ZArith.ZdivX.Z_mod_nz_opp_full	40	3.1.1.0	search with cache (only 1: Zdiv.zero_or_not b; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_opp_l_nz).	0.181673049927	13
Coq.ZArith.ZdivX.Z_mod_zero_opp_r	40	2.2	search with cache (only 1: Zdiv.zero_or_not b; only 1: apply Z.mod_opp_r_z).	0.0651440620422	6
Coq.ZArith.ZdivX.Z_mod_nz_opp_r	40	7.0	search with cache (only 1: apply Z.mod_opp_r_nz; only 1: destruct a).	0.0736100673676	9
Coq.ZArith.ZdivX.Z_div_zero_opp_full	40	1.3	search with cache (only 1: Zdiv.zero_or_not b; only 1: apply Z.div_opp_l_z).	0.117340087891	14
Coq.ZArith.ZdivX.Z_div_nz_opp_full	40	7.6	search with cache (only 1: rewrite Z.div_opp_l_nz; only 1: destruct a).	0.857322216034	203
Coq.ZArith.ZdivX.Z_div_zero_opp_r	40	0.2	search with cache (only 1: Zdiv.zero_or_not b; only 1: apply Z.div_opp_r_z).	0.118020057678	14
Coq.ZArith.ZdivX.Z_div_nz_opp_r	40	7.0	search with cache (only 1: rewrite Z.div_opp_r_nz; only 1: destruct a).	0.0779221057892	9
Coq.ZArith.ZdivX.Zdiv_mult_cancel_r	40	4.2	search with cache (only 1: Zdiv.zero_or_not b; only 1: apply Z.div_mul_cancel_r).	0.214781045914	15
Coq.ZArith.ZdivX.Zdiv_mult_cancel_l	40	5.2.2.4	search with cache (only 1: rewrite (Z.mul_comm c b); only 1: Zdiv.zero_or_not b; only 1: rewrite (Z.mul_comm b c); only 1: apply Z.div_mul_cancel_l).	3.19617700577	595
Coq.ZArith.ZdivX.Zmult_mod_distr_l	40	1.5.3.1.5	search with cache (only 1: rewrite (Z.mul_comm c b); only 1: Zdiv.zero_or_not b; only 1: rewrite (Z.mul_comm b c); only 1: Zdiv.zero_or_not c; only 1: apply Z.mul_mod_distr_l).	4.92611193657	1057
Coq.ZArith.ZdivX.Zmult_mod_distr_r	40	0.4.5.3.1	search with cache (only 1: Zdiv.zero_or_not b; only 1: rewrite (Z.mul_comm b c); only 1: Zdiv.zero_or_not c; only 1: rewrite (Z.mul_comm c b); only 1: apply Z.mul_mod_distr_r).	7.4639480114	1397
Coq.ZArith.ZdivX.Zmod_mod	40	1.0	search with cache (only 1: Zdiv.zero_or_not n; only 1: apply Z.mod_mod).	0.131119012833	3
Coq.ZArith.ZdivX.Zmult_mod	40	1.0	search with cache (only 1: Zdiv.zero_or_not n; only 1: apply Z.mul_mod).	0.138054132462	3
Coq.ZArith.ZdivX.Zplus_mod	40	1.1	search with cache (only 1: Zdiv.zero_or_not n; only 1: apply Z.add_mod).	0.0564858913422	4
Coq.ZArith.ZdivX.Zminus_mod	40
Coq.ZArith.ZdivX.Zplus_mod_idemp_l	40	7	search with cache (only 1: rewrite Zdiv.Zplus_mod, Zdiv.Zmod_mod, <- Zdiv.Zplus_mod).	0.185104131699	24
Coq.ZArith.ZdivX.Zplus_mod_idemp_r	40	6	search with cache (only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod).	0.0999929904938	19
Coq.ZArith.ZdivX.Zminus_mod_idemp_l	40	0	search with cache (only 1: rewrite Zdiv.Zminus_mod, Zdiv.Zmod_mod, <- Zdiv.Zminus_mod).	0.0345029830933	1
Coq.ZArith.ZdivX.Zminus_mod_idemp_r	40	0	search with cache (only 1: rewrite Zdiv.Zminus_mod, Zdiv.Zmod_mod, <- Zdiv.Zminus_mod).	0.0373690128326	1
Coq.ZArith.ZdivX.Zmult_mod_idemp_l	40	0	search with cache (only 1: rewrite Zdiv.Zmult_mod, Zdiv.Zmod_mod, <- Zdiv.Zmult_mod).	0.0381810665131	1
Coq.ZArith.ZdivX.Zmult_mod_idemp_r	40	0	search with cache (only 1: rewrite Zdiv.Zmult_mod, Zdiv.Zmod_mod, <- Zdiv.Zmult_mod).	0.0406851768494	1
Coq.ZArith.ZdivX.eqm_refl	40		search with cache ().	0.0112931728363	0
Coq.ZArith.ZdivX.eqm_sym	40		search with cache ().	0.0128681659698	0
Coq.ZArith.ZdivX.eqm_trans	40		search with cache ().	0.0137929916382	0
Coq.ZArith.ZdivX.eqm_setoid	40	3	search with cache (only 1: split).	0.0411369800568	4
Coq.ZArith.ZdivX.Zplus_eqm	40	0.9	search with cache (only 1: repeat red; only 1: rewrite Zdiv.Zplus_mod, H, H0, <- Zdiv.Zplus_mod).	0.303737878799	65
Coq.ZArith.ZdivX.Zminus_eqm	40	0.0.0	search with cache (only 1: unfold eqm; only 1: repeat red; only 1: rewrite Zdiv.Zminus_mod, H, H0, <- Zdiv.Zminus_mod).	0.116755962372	3
Coq.ZArith.ZdivX.Zmult_eqm	40	0.0.0	search with cache (only 1: unfold eqm; only 1: repeat red; only 1: rewrite Zdiv.Zmult_mod, H, H0, <- Zdiv.Zmult_mod).	0.119118928909	3
Coq.ZArith.ZdivX.Zopp_eqm	40
Coq.ZArith.ZdivX.Zmod_eqm	40	0	search with cache (only 1: exact (Zdiv.Zmod_mod a N)).	0.0176429748535	1
Coq.ZArith.ZdivX.Zdiv_Zdiv	40	0.0.1.2.1.0	search with cache (only 1: Zdiv.zero_or_not b; only 1: rewrite Z.mul_comm; only 1: Zdiv.zero_or_not c; only 1: rewrite Z.mul_comm; only 1: apply Z.div_div; only 1: Z.order).	0.522897958755	42
Coq.ZArith.ZdivX.Zmod_div	40	1.1	search with cache (only 1: Zdiv.zero_or_not b; only 1: auto using Z.mod_div).	0.0562891960144	4
Coq.ZArith.ZdivX.Zdiv_mult_le	40	0.0.0.0	search with cache (only 1: Zdiv.zero_or_not b; only 1: now rewrite Z.mul_0_r; only 1: apply Z.div_mul_le; only 1: apply Z.le_neq).	0.115244865417	4
Coq.ZArith.ZdivX.Zmod_divides	40	14.6.2.3	search with cache (only 1: exists (a / b); only 1: rewrite Z.div_exact; only 1: rewrite (Z.mul_comm b c); only 1: apply Zdiv.Z_mod_mult).	8.30617213249	2012
Coq.ZArith.ZdivX.Zmod_odd	40	0	search with cache (only 1: now rewrite <- Z.bit0_odd, <- Z.bit0_mod).	0.0343430042267	1
Coq.ZArith.ZdivX.Zmod_even	40	0.0	search with cache (only 1: rewrite Zdiv.Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0460910797119	2
Coq.ZArith.ZdivX.Zodd_mod	40	0.0	search with cache (only 1: rewrite Zdiv.Zmod_odd; only 1: now destruct Z.odd).	0.0377979278564	2
Coq.ZArith.ZdivX.Zeven_mod	40	0.0	search with cache (only 1: rewrite Zdiv.Zmod_even; only 1: now destruct Z.even).	0.0363380908966	2
Coq.ZArith.ZdivX.Z_mod_same	40	0	search with cache (only 1: apply Zdiv.Z_mod_same_full).	0.0351281166077	1
Coq.ZArith.ZdivX.Z_div_same	40	0	search with cache (only 1: now intros; apply Zdiv.Z_div_same_full; intros ->).	0.0368459224701	1
Coq.ZArith.ZdivX.Z_div_plus	40	9.23	search with cache (only 1: zero_or_not c; only 1: now intros; apply Zdiv.Z_div_plus_full; intros ->).	10.917798996	2263
Coq.ZArith.ZdivX.Z_div_mult	40	38	search with cache (only 1: now intros; apply Zdiv.Z_div_mult_full; intros ->).	15.7129700184	5812
Coq.ZArith.ZdivX.Z_mod_plus	40	0	search with cache (only 1: apply Zdiv.Z_mod_plus_full).	0.0392000675201	1
Coq.ZArith.ZdivX.Z_div_exact_1	40	0	search with cache (only 1: apply Zdiv.Z_div_exact_full_1).	0.0433330535889	1
Coq.ZArith.ZdivX.Z_div_exact_2	40	13	search with cache (only 1: rewrite Z.div_exact).	0.383899927139	64
Coq.ZArith.ZdivX.Z_mod_zero_opp	40	0	search with cache (only 1: apply Zdiv.Z_mod_zero_opp_full).	0.0421760082245	1
Coq.ZArith.ZdivX.Zmod_POS_correct	40	1.0.1.0.1.0.0	search with cache (only 1: induction a as [a IH| a IH| ]; only 1: rewrite ?IH; only 1: destruct (Z.pos_div_eucl a b) as (p, q); only 1: case Z.ltb_spec; only 1: destruct (Z.pos_div_eucl a b) as (p, q); only 1: case Z.ltb_spec; only 1: case Z.leb_spec).	0.541636943817	18
Coq.ZArith.ZdivX.Zmod'_correct	40
Coq.ZArith.ZdivX.Zdiv_eucl_extended	40	0.1.0.1.2.1.0.0.1.2	search with cache (only 1: destruct (Z_le_gt_dec 0 b) as [Hb'| Hb']; only 1: assert (Hb'' : b > 0) by (apply Z.lt_gt, Z.le_neq; auto); only 1: rewrite Z.abs_eq; only 1: apply Zdiv.Zdiv_eucl_exist; only 1: assert (Hb'' : - b > 0); only 1: now apply Z.lt_gt, Z.opp_lt_mono; rewrite Z.opp_involutive; apply Z.gt_lt; only 1: destruct (Zdiv.Zdiv_eucl_exist Hb'' a) as ((q, r), []); only 1: exists (- q, r); only 1: rewrite Z.abs_neq; only 1: apply Z.lt_le_incl, Z.gt_lt).	25.4873838425	2520
Coq.ZArith.ZdivX.div_Zdiv	40	0.0.0.0.1	search with cache (only 1: apply (Zdiv.Zdiv_unique _ _ _ (Z.of_nat (n mod m))); only 1: auto with zarith; only 1: now apply inj_lt, Nat.mod_upper_bound; only 1: rewrite <- Nat2Z.inj_mul, <- Nat2Z.inj_add; only 1: now apply inj_eq, Nat.div_mod).	0.17315196991	6
Coq.ZArith.ZdivX.mod_Zmod	40	0.0.0.0.1	search with cache (only 1: apply (Zdiv.Zmod_unique _ _ (Z.of_nat n / Z.of_nat m)); only 1: auto with zarith; only 1: now apply inj_lt, Nat.mod_upper_bound; only 1: rewrite <- Zdiv.div_Zdiv, <- Nat2Z.inj_mul, <- Nat2Z.inj_add by trivial; only 1: now apply inj_eq, Nat.div_mod).	0.174924135208	6
Coq.ZArith.Wf_ZX.Z_of_nat_complete	40	0	search with cache (only 1: exists (Z.to_nat x)).	0.0608360767365	1
Coq.ZArith.Wf_ZX.Z_of_nat_complete_inf	40	0	search with cache (only 1: exists (Z.to_nat x)).	0.0622680187225	1
Coq.ZArith.Wf_ZX.Z_of_nat_prop	40
Coq.ZArith.Wf_ZX.Z_of_nat_set	40
Coq.ZArith.Wf_ZX.natlike_ind	40
Coq.ZArith.Wf_ZX.natlike_rec	40
Coq.ZArith.Wf_ZX.R_wf	40	14	search with cache (only 1: apply well_founded_lt_compat with Z.to_nat).	7.11168885231	75
Coq.ZArith.Wf_ZX.natlike_rec2	40
Coq.ZArith.Wf_ZX.natlike_rec3	40	23.1.0.5	search with cache (only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: intuition).	7.12953710556	4235
Coq.ZArith.Wf_ZX.Zlt_0_rec	40
Coq.ZArith.Wf_ZX.Zlt_0_ind	40
Coq.ZArith.Wf_ZX.Z_lt_rec	40
Coq.ZArith.Wf_ZX.Z_lt_induction	40
Coq.ZArith.Wf_ZX.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_ZX.Zlt_lower_bound_ind	40
Coq.ZArith.BinIntX.Z.eq_dec	40
Coq.ZArith.BinIntX.Z.pos_sub_spec	40
Coq.ZArith.BinIntX.Z.pos_sub_discr	40	6.2.0.0	search with cache (only 1: rewrite BinInt.Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: now rewrite Pos.add_comm, Pos.sub_add; only 1: now rewrite Pos.add_comm, Pos.sub_add).	0.525894880295	157
Coq.ZArith.BinIntX.Z.pos_sub_diag	40	0	search with cache (only 1: now rewrite BinInt.Z.pos_sub_spec, Pos.compare_refl).	0.0369200706482	1
Coq.ZArith.BinIntX.Z.pos_sub_lt	40	1	search with cache (only 1: now rewrite BinInt.Z.pos_sub_spec, H).	0.0511138439178	2
Coq.ZArith.BinIntX.Z.pos_sub_gt	40	0	search with cache (only 1: now rewrite BinInt.Z.pos_sub_spec, Pos.compare_antisym, H).	0.0464019775391	1
Coq.ZArith.BinIntX.Z.pos_sub_opp	40
Coq.ZArith.BinIntX.Z.Private_BootStrap.add_0_r	40		search with cache ().	0.0245490074158	0
Coq.ZArith.BinIntX.Z.Private_BootStrap.mul_0_r	40		search with cache ().	0.0249018669128	0
Coq.ZArith.BinIntX.Z.Private_BootStrap.mul_1_l	40	54	search with cache (only 1: now destruct n).	2.95925402641	2760
Coq.ZArith.BinIntX.Z.Private_BootStrap.add_comm	40		search with cache ().	0.0196900367737	0
Coq.ZArith.BinIntX.Z.Private_BootStrap.opp_add_distr	40		search with cache ().	0.0189938545227	0
Coq.ZArith.BinIntX.Z.Private_BootStrap.opp_inj	40		search with cache ().	0.0299401283264	0
Coq.ZArith.BinIntX.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinIntX.Z.Private_BootStrap.add_assoc_pos	40		search with cache ().	0.021203994751	0
Coq.ZArith.BinIntX.Z.Private_BootStrap.add_assoc	40		search with cache ().	0.0210511684418	0
Coq.ZArith.BinIntX.Z.Private_BootStrap.add_opp_diag_r	40		search with cache ().	0.019287109375	0
Coq.ZArith.BinIntX.Z.Private_BootStrap.mul_opp_r	40		search with cache ().	0.0202720165253	0
Coq.ZArith.BinIntX.Z.Private_BootStrap.mul_add_distr_pos	40		search with cache ().	0.0217819213867	0
Coq.ZArith.BinIntX.Z.Private_BootStrap.mul_add_distr_r	40		search with cache ().	0.0217950344086	0
Coq.ZArith.BinIntX.Z.one_succ	40		search with cache ().	0.0100169181824	0
Coq.ZArith.BinIntX.Z.two_succ	40		search with cache ().	0.0100209712982	0
Coq.ZArith.BinIntX.Z.add_0_l	40		search with cache ().	0.0111169815063	0
Coq.ZArith.BinIntX.Z.add_succ_l	40		search with cache ().	0.0221078395844	0
Coq.ZArith.BinIntX.Z.opp_0	40		search with cache ().	0.0104780197144	0
Coq.ZArith.BinIntX.Z.opp_succ	40		search with cache ().	0.0229661464691	0
Coq.ZArith.BinIntX.Z.succ_pred	40		search with cache ().	0.0228300094604	0
Coq.ZArith.BinIntX.Z.pred_succ	40		search with cache ().	0.0227329730988	0
Coq.ZArith.BinIntX.Z.sub_0_r	40		search with cache ().	0.0234818458557	0
Coq.ZArith.BinIntX.Z.sub_succ_r	40		search with cache ().	0.0239078998566	0
Coq.ZArith.BinIntX.Z.mul_0_l	40		search with cache ().	0.0122611522675	0
Coq.ZArith.BinIntX.Z.mul_succ_l	40		search with cache ().	0.0255908966064	0
Coq.ZArith.BinIntX.Z.eqb_eq	40
Coq.ZArith.BinIntX.Z.ltb_lt	40
Coq.ZArith.BinIntX.Z.leb_le	40
Coq.ZArith.BinIntX.Z.compare_eq_iff	40
Coq.ZArith.BinIntX.Z.compare_sub	40	0.0.0.0.0	search with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: rewrite <- ?Pos.compare_antisym, ?BinInt.Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: rewrite <- ?Pos.compare_antisym, ?BinInt.Z.pos_sub_spec; only 1: case Pos.compare_spec).	0.114681005478	5
Coq.ZArith.BinIntX.Z.compare_antisym	40	0.0.0	search with cache (only 1: destruct n, m; only 1: apply Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym).	0.0824699401855	3
Coq.ZArith.BinIntX.Z.compare_lt_iff	40		search with cache ().	0.0112550258636	0
Coq.ZArith.BinIntX.Z.compare_le_iff	40		search with cache ().	0.0120799541473	0
Coq.ZArith.BinIntX.Z.lt_succ_r	40
Coq.ZArith.BinIntX.Z.max_l	40	3.16	search with cache (only 1: unfold BinInt.Z.le, BinInt.Z.max; only 1: case BinInt.Z.compare_spec).	1.08133006096	214
Coq.ZArith.BinIntX.Z.max_r	40	4.0	search with cache (only 1: unfold le, max; only 1: case BinInt.Z.compare_spec).	0.163909912109	14
Coq.ZArith.BinIntX.Z.min_l	40	5	search with cache (only 1: BinInt.Z.solve_min).	0.165894031525	6
Coq.ZArith.BinIntX.Z.min_r	40	4.0	search with cache (only 1: unfold le, min; only 1: case compare_spec).	0.0639328956604	6
Coq.ZArith.BinIntX.Z.peano_ind	40
Coq.ZArith.BinIntX.Z.bi_induction	40
Coq.ZArith.BinIntX.Z.abs_eq	40	7	search with cache (only 1: destruct n).	0.0893740653992	16
Coq.ZArith.BinIntX.Z.abs_neq	40	0	search with cache (only 1: destruct n).	0.0373871326447	1
Coq.ZArith.BinIntX.Z.sgn_null	40		search with cache ().	0.0108599662781	0
Coq.ZArith.BinIntX.Z.sgn_pos	40	3.0	search with cache (only 1: BinInt.Z.destruct_sgn n; only 1: now destruct n).	0.0678269863129	5
Coq.ZArith.BinIntX.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0352258682251	1
Coq.ZArith.BinIntX.Z.pow_0_r	40		search with cache ().	0.00997805595398	0
Coq.ZArith.BinIntX.Z.pow_succ_r	40	0.0.0	search with cache (only 1: destruct m as [| m| m]; only 1: unfold BinInt.Z.pow_pos; only 1: now rewrite Pos.add_comm, Pos.iter_add).	0.0711839199066	3
Coq.ZArith.BinIntX.Z.pow_neg_r	40	0	search with cache (only 1: now destruct m).	0.0365891456604	1
Coq.ZArith.BinIntX.Z.pow_pos_fold	40		search with cache ().	0.00958609580994	0
Coq.ZArith.BinIntX.Z.square_spec	40		search with cache ().	0.0214869976044	0
Coq.ZArith.BinIntX.Z.sqrtrem_spec	40
Coq.ZArith.BinIntX.Z.sqrt_spec	40
Coq.ZArith.BinIntX.Z.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.114922046661	1
Coq.ZArith.BinIntX.Z.sqrtrem_sqrt	40
Coq.ZArith.BinIntX.Z.log2_spec	40
Coq.ZArith.BinIntX.Z.log2_nonpos	40	6	search with cache (only 1: destruct n).	0.0378251075745	7
Coq.ZArith.BinIntX.Z.even_spec	40
Coq.ZArith.BinIntX.Z.odd_spec	40
Coq.ZArith.BinIntX.Z.double_spec	40		search with cache ().	0.0096390247345	0
Coq.ZArith.BinIntX.Z.succ_double_spec	40	0	search with cache (only 1: now destruct n).	0.0388951301575	1
Coq.ZArith.BinIntX.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.108762025833	1
Coq.ZArith.BinIntX.Z.pos_div_eucl_eq	40
Coq.ZArith.BinIntX.Z.div_eucl_eq	40
Coq.ZArith.BinIntX.Z.div_mod	40
Coq.ZArith.BinIntX.Z.pos_div_eucl_bound	40
Coq.ZArith.BinIntX.Z.mod_pos_bound	40
Coq.ZArith.BinIntX.Z.mod_neg_bound	40
Coq.ZArith.BinIntX.Z.quotrem_eq	40
Coq.ZArith.BinIntX.Z.quot_rem'	40	0.0.3.2	search with cache (only 1: rewrite BinInt.Z.mul_comm; only 1: generalize (BinInt.Z.quotrem_eq a b); only 1: unfold BinInt.Z.quot, BinInt.Z.rem; only 1: now destruct quotrem).	0.123049974442	14
Coq.ZArith.BinIntX.Z.quot_rem	40	24	search with cache (only 1: apply BinInt.Z.quot_rem').	3.11683797836	789
Coq.ZArith.BinIntX.Z.rem_bound_pos	40
Coq.ZArith.BinIntX.Z.rem_opp_l'	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: unfold BinInt.Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold BinInt.Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold BinInt.Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold BinInt.Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r])).	0.289128065109	9
Coq.ZArith.BinIntX.Z.rem_opp_r'	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: unfold BinInt.Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold BinInt.Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold BinInt.Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold BinInt.Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r])).	0.3054459095	9
Coq.ZArith.BinIntX.Z.rem_opp_l	40	3	search with cache (only 1: apply BinInt.Z.rem_opp_l').	0.805251121521	53
Coq.ZArith.BinIntX.Z.rem_opp_r	40	3	search with cache (only 1: apply BinInt.Z.rem_opp_r').	0.958620071411	54
Coq.ZArith.BinIntX.Z.divide_Zpos	40
Coq.ZArith.BinIntX.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinIntX.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinIntX.Z.ggcd_gcd	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| p| p], b as [| q| q]; only 1: generalize (Pos.ggcd_gcd p q); only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: generalize (Pos.ggcd_gcd p q); only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: generalize (Pos.ggcd_gcd p q); only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: generalize (Pos.ggcd_gcd p q); only 1: destruct Pos.ggcd as (g, (aa, bb))).	0.330943107605	9
Coq.ZArith.BinIntX.Z.ggcd_correct_divisors	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| p| p], b as [| q| q]; only 1: generalize (Pos.ggcd_correct_divisors p q); only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: generalize (Pos.ggcd_correct_divisors p q); only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: generalize (Pos.ggcd_correct_divisors p q); only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: generalize (Pos.ggcd_correct_divisors p q); only 1: destruct Pos.ggcd as (g, (aa, bb))).	0.268273115158	9
Coq.ZArith.BinIntX.Z.gcd_divide_l	40
Coq.ZArith.BinIntX.Z.gcd_divide_r	40	4.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: exists bb).	0.190303087234	13
Coq.ZArith.BinIntX.Z.gcd_greatest	40
Coq.ZArith.BinIntX.Z.gcd_nonneg	40	6	search with cache (only 1: now destruct a, b).	0.0530850887299	7
Coq.ZArith.BinIntX.Z.ggcd_opp	40	0.0.0.0.0	search with cache (only 1: destruct a as [| a| a], b as [| b| b]; only 1: destruct (Pos.ggcd a b) as (g, (aa, bb)); only 1: destruct (Pos.ggcd a b) as (g, (aa, bb)); only 1: destruct (Pos.ggcd a b) as (g, (aa, bb)); only 1: destruct (Pos.ggcd a b) as (g, (aa, bb))).	0.215507984161	5
Coq.ZArith.BinIntX.Z.testbit_of_N	40	0.1	search with cache (only 1: destruct a as [| a], n; only 1: now destruct a).	0.0407888889313	3
Coq.ZArith.BinIntX.Z.testbit_of_N'	40	0.0.0	search with cache (only 1: rewrite <- BinInt.Z.testbit_of_N; only 1: f_equal; only 1: destruct n).	0.0707740783691	3
Coq.ZArith.BinIntX.Z.testbit_Zpos	40
Coq.ZArith.BinIntX.Z.testbit_Zneg	40	0.0.0.0	search with cache (only 1: rewrite <- BinInt.Z.testbit_of_N' by trivial; only 1: destruct n as [| n| n]; only 1: now destruct a as [| [| | ]| ]; only 1: now destruct (Pos.pred_N a)).	0.0823550224304	4
Coq.ZArith.BinIntX.Z.div2_spec	40		search with cache ().	0.00978684425354	0
Coq.ZArith.BinIntX.Z.testbit_0_l	40	3	search with cache (only 1: now destruct n).	0.212620973587	22
Coq.ZArith.BinIntX.Z.testbit_neg_r	40	7	search with cache (only 1: now destruct n).	0.077831029892	13
Coq.ZArith.BinIntX.Z.testbit_odd_0	40	16	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.151085138321	108
Coq.ZArith.BinIntX.Z.testbit_even_0	40	26	search with cache (only 1: destruct a as [| a| a]).	0.333815813065	333
Coq.ZArith.BinIntX.Z.testbit_odd_succ	40	0.0.0.0.0.0.0.1	search with cache (only 1: destruct n as [| n| n]; only 1: destruct a as [| a| [a| a| ]]; only 1: now destruct a; only 1: now destruct a; only 1: destruct a as [| a| [a| a| ]]; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ).	0.246863126755	9
Coq.ZArith.BinIntX.Z.testbit_even_succ	40	0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n| n]; only 1: destruct a as [| a| [a| a| ]]; only 1: now destruct a; only 1: now destruct a; only 1: destruct a as [| a| [a| a| ]]; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ).	0.241029024124	8
Coq.ZArith.BinIntX.Z.shiftr_spec_aux	40
Coq.ZArith.BinIntX.Z.shiftl_spec_low	40
Coq.ZArith.BinIntX.Z.shiftl_spec_high	40
Coq.ZArith.BinIntX.Z.shiftr_spec	40
Coq.ZArith.BinIntX.Z.lor_spec	40
Coq.ZArith.BinIntX.Z.land_spec	40	1.4.2	search with cache (only 1: destruct (BinInt.Z.leb_spec 0 n) as [Hn| Hn]; only 1: autorewrite with bitwise; only 1: now rewrite !BinInt.Z.testbit_neg_r).	4.13771510124	168
Coq.ZArith.BinIntX.Z.ldiff_spec	40
Coq.ZArith.BinIntX.Z.lxor_spec	40	1.3.2	search with cache (only 1: destruct (BinInt.Z.leb_spec 0 n) as [Hn| Hn]; only 1: autorewrite with bitwise; only 1: now rewrite !BinInt.Z.testbit_neg_r).	3.54559397697	108
Coq.ZArith.BinIntX.Z.gt_lt_iff	40
Coq.ZArith.BinIntX.Z.gt_lt	40	8.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.184417009354	19
Coq.ZArith.BinIntX.Z.lt_gt	40	1	search with cache (only 1: apply gt_lt_iff).	1.04531979561	68
Coq.ZArith.BinIntX.Z.ge_le_iff	40
Coq.ZArith.BinIntX.Z.ge_le	40	18	search with cache (only 1: destruct (min_spec n m)).	1.61988186836	468
Coq.ZArith.BinIntX.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0236170291901	1
Coq.ZArith.BinIntX.Z.gtb_ltb	40	0.1.0	search with cache (only 1: unfold BinInt.Z.gtb, BinInt.Z.ltb; only 1: rewrite BinInt.Z.compare_antisym; only 1: now case BinInt.Z.compare).	0.0601658821106	4
Coq.ZArith.BinIntX.Z.geb_leb	40	0.1.0	search with cache (only 1: unfold BinInt.Z.geb, BinInt.Z.leb; only 1: rewrite compare_antisym; only 1: now case compare).	0.0607302188873	4
Coq.ZArith.BinIntX.Z.gtb_lt	40
Coq.ZArith.BinIntX.Z.geb_le	40
Coq.ZArith.BinIntX.Z.gtb_spec	40	1.0.2.3.1	search with cache (only 1: unfold BinInt.Z.gtb, BinInt.Z.ltb; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: constructor; only 1: Private_Tac.order || (right; Private_Tac.order) || (left; Private_Tac.order)).	1.30281996727	225
Coq.ZArith.BinIntX.Z.geb_spec	40	0.2.2.1	search with cache (only 1: rewrite geb_leb; only 1: unfold leb, le; only 1: rewrite (compare_antisym n m); only 1: case compare_spec).	0.285300970078	15
Coq.ZArith.BinIntX.Z.add_reg_l	40		search with cache ().	0.032320022583	0
Coq.ZArith.BinIntX.Z.mul_reg_l	40
Coq.ZArith.BinIntX.Z.mul_reg_r	40
Coq.ZArith.BinIntX.Z.opp_eq_mul_m1	40		search with cache ().	0.0208508968353	0
Coq.ZArith.BinIntX.Z.add_diag	40
Coq.ZArith.BinIntX.Z.compare_opp	40	0.1.0	search with cache (only 1: destruct n, m; only 1: now rewrite <- ?Pos.compare_antisym; only 1: apply Pos.compare_antisym).	0.056736946106	4
Coq.ZArith.BinIntX.Z.add_compare_mono_l	40	1.1	search with cache (only 1: rewrite (BinInt.Z.compare_sub m p), BinInt.Z.compare_sub; only 1: f_equal).	0.224410057068	21
Coq.ZArith.BinIntX.Z.testbit_mod_pow2	40	0.1.0	search with cache (only 1: destruct (BinInt.Z.ltb_spec i n); only 1: rewrite ?BinInt.Z.mod_pow2_bits_low, ?BinInt.Z.mod_pow2_bits_high by auto; only 1: rewrite ?BinInt.Z.mod_pow2_bits_low, ?BinInt.Z.mod_pow2_bits_high by auto).	0.127034902573	4
Coq.ZArith.BinIntX.Z.testbit_ones	40
Coq.ZArith.BinIntX.Z.testbit_ones_nonneg	40	0.5.0.0.0	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: apply ones_spec_low; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto).	0.413424968719	21
Coq.ZArith.BinIntX.Pos2Z.id	40		search with cache ().	0.0119631290436	0
Coq.ZArith.BinIntX.Pos2Z.inj	40		search with cache ().	0.0132839679718	0
Coq.ZArith.BinIntX.Pos2Z.inj_iff	40		search with cache ().	0.0175540447235	0
Coq.ZArith.BinIntX.Pos2Z.is_pos	40		search with cache ().	0.0120730400085	0
Coq.ZArith.BinIntX.Pos2Z.is_nonneg	40		search with cache ().	0.0159101486206	0
Coq.ZArith.BinIntX.Pos2Z.inj_1	40		search with cache ().	0.0116469860077	0
Coq.ZArith.BinIntX.Pos2Z.inj_xO	40		search with cache ().	0.0115218162537	0
Coq.ZArith.BinIntX.Pos2Z.inj_xI	40		search with cache ().	0.0112800598145	0
Coq.ZArith.BinIntX.Pos2Z.inj_succ	40		search with cache ().	0.0239260196686	0
Coq.ZArith.BinIntX.Pos2Z.inj_add	40		search with cache ().	0.0113699436188	0
Coq.ZArith.BinIntX.Pos2Z.inj_sub	40	2	search with cache (only 1: now rewrite BinInt.Z.pos_sub_gt).	0.133069038391	3
Coq.ZArith.BinIntX.Pos2Z.inj_sub_max	40	0.1.0.0.0	search with cache (only 1: rewrite BinInt.Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: now rewrite Pos.sub_diag; only 1: now rewrite Pos.sub_lt; only 1: now destruct (p - q)%positive).	0.143328905106	6
Coq.ZArith.BinIntX.Pos2Z.inj_pred	40	0	search with cache (only 1: destruct p).	0.0520479679108	1
Coq.ZArith.BinIntX.Pos2Z.inj_mul	40		search with cache ().	0.0114178657532	0
Coq.ZArith.BinIntX.Pos2Z.inj_pow_pos	40		search with cache ().	0.0243699550629	0
Coq.ZArith.BinIntX.Pos2Z.inj_pow	40		search with cache ().	0.0251410007477	0
Coq.ZArith.BinIntX.Pos2Z.inj_square	40		search with cache ().	0.0118198394775	0
Coq.ZArith.BinIntX.Pos2Z.inj_compare	40		search with cache ().	0.0107560157776	0
Coq.ZArith.BinIntX.Pos2Z.inj_leb	40		search with cache ().	0.0107960700989	0
Coq.ZArith.BinIntX.Pos2Z.inj_ltb	40		search with cache ().	0.0119390487671	0
Coq.ZArith.BinIntX.Pos2Z.inj_eqb	40		search with cache ().	0.0117788314819	0
Coq.ZArith.BinIntX.Pos2Z.inj_max	40		search with cache ().	0.0242831707001	0
Coq.ZArith.BinIntX.Pos2Z.inj_min	40		search with cache ().	0.0247478485107	0
Coq.ZArith.BinIntX.Pos2Z.inj_sqrt	40		search with cache ().	0.0110440254211	0
Coq.ZArith.BinIntX.Pos2Z.inj_gcd	40		search with cache ().	0.0114550590515	0
Coq.ZArith.BinIntX.Pos2Z.inj_divide	40	5.5	search with cache (only 1: apply BinInt.Z.divide_Zpos; only 1: apply BinInt.Z.divide_Zpos).	0.200849056244	42
Coq.ZArith.BinIntX.Pos2Z.inj_testbit	40	2	search with cache (only 1: apply BinInt.Z.testbit_Zpos).	0.0290651321411	3
Coq.ZArith.BinIntX.Pos2Z.inj_neg	40		search with cache ().	0.0121219158173	0
Coq.ZArith.BinIntX.Pos2Z.inj_neg_iff	40		search with cache ().	0.0165228843689	0
Coq.ZArith.BinIntX.Pos2Z.inj_pos	40		search with cache ().	0.0123698711395	0
Coq.ZArith.BinIntX.Pos2Z.inj_pos_iff	40		search with cache ().	0.0162119865417	0
Coq.ZArith.BinIntX.Pos2Z.neg_is_neg	40		search with cache ().	0.0117139816284	0
Coq.ZArith.BinIntX.Pos2Z.neg_is_nonpos	40		search with cache ().	0.0155160427094	0
Coq.ZArith.BinIntX.Pos2Z.pos_is_pos	40		search with cache ().	0.011246919632	0
Coq.ZArith.BinIntX.Pos2Z.pos_is_nonneg	40		search with cache ().	0.0151851177216	0
Coq.ZArith.BinIntX.Pos2Z.neg_le_pos	40		search with cache ().	0.0169048309326	0
Coq.ZArith.BinIntX.Pos2Z.neg_lt_pos	40		search with cache ().	0.0126612186432	0
Coq.ZArith.BinIntX.Pos2Z.neg_le_neg	40
Coq.ZArith.BinIntX.Pos2Z.neg_lt_neg	40	1.2.8	search with cache (only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: red; only 1: now rewrite <- Pos.compare_antisym).	0.331780910492	71
Coq.ZArith.BinIntX.Pos2Z.pos_le_pos	40		search with cache ().	0.0118670463562	0
Coq.ZArith.BinIntX.Pos2Z.pos_lt_pos	40		search with cache ().	0.0119931697845	0
Coq.ZArith.BinIntX.Pos2Z.neg_xO	40		search with cache ().	0.0116209983826	0
Coq.ZArith.BinIntX.Pos2Z.neg_xI	40		search with cache ().	0.0120069980621	0
Coq.ZArith.BinIntX.Pos2Z.pos_xO	40		search with cache ().	0.0119059085846	0
Coq.ZArith.BinIntX.Pos2Z.pos_xI	40		search with cache ().	0.0114629268646	0
Coq.ZArith.BinIntX.Pos2Z.opp_neg	40		search with cache ().	0.0113549232483	0
Coq.ZArith.BinIntX.Pos2Z.opp_pos	40		search with cache ().	0.0116100311279	0
Coq.ZArith.BinIntX.Pos2Z.add_neg_neg	40		search with cache ().	0.0121760368347	0
Coq.ZArith.BinIntX.Pos2Z.add_pos_neg	40		search with cache ().	0.0124268531799	0
Coq.ZArith.BinIntX.Pos2Z.add_neg_pos	40		search with cache ().	0.0117900371552	0
Coq.ZArith.BinIntX.Pos2Z.add_pos_pos	40		search with cache ().	0.0114989280701	0
Coq.ZArith.BinIntX.Pos2Z.divide_pos_neg_r	40	8.8	search with cache (only 1: apply BinInt.Z.divide_Zpos_Zneg_r; only 1: apply BinInt.Z.divide_Zpos_Zneg_r).	0.473498821259	162
Coq.ZArith.BinIntX.Pos2Z.divide_pos_neg_l	40	8.8	search with cache (only 1: apply BinInt.Z.divide_Zpos_Zneg_l; only 1: apply BinInt.Z.divide_Zpos_Zneg_l).	0.483055830002	162
Coq.ZArith.BinIntX.Pos2Z.testbit_neg	40	3	search with cache (only 1: apply BinInt.Z.testbit_Zneg).	0.0316848754883	4
Coq.ZArith.BinIntX.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0310001373291	1
Coq.ZArith.BinIntX.Z2Pos.id	40	0	search with cache (only 1: now destruct x).	0.0501518249512	1
Coq.ZArith.BinIntX.Z2Pos.inj	40	12.3	search with cache (only 1: destruct x; only 1: easy || now destruct y).	0.669083833694	177
Coq.ZArith.BinIntX.Z2Pos.inj_iff	40	0.0	search with cache (only 1: destruct x; only 1: now apply id).	0.0965709686279	2
Coq.ZArith.BinIntX.Z2Pos.to_pos_nonpos	40	0	search with cache (only 1: destruct x).	0.0272438526154	1
Coq.ZArith.BinIntX.Z2Pos.inj_1	40		search with cache ().	0.0112109184265	0
Coq.ZArith.BinIntX.Z2Pos.inj_double	40	0	search with cache (only 1: now destruct x).	0.0290451049805	1
Coq.ZArith.BinIntX.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0277829170227	1
Coq.ZArith.BinIntX.Z2Pos.inj_succ	40	0.0	search with cache (only 1: destruct x; only 1: now rewrite Pos.add_1_r).	0.0501599311829	2
Coq.ZArith.BinIntX.Z2Pos.inj_add	40	0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y).	0.146718978882	2
Coq.ZArith.BinIntX.Z2Pos.inj_sub	40	1.0.0	search with cache (only 1: destruct x; only 1: destruct y; only 1: now rewrite BinInt.Z.pos_sub_gt).	0.0863029956818	4
Coq.ZArith.BinIntX.Z2Pos.inj_pred	40	0	search with cache (only 1: now destruct x as [| [x| x| ]| ]).	0.0217700004578	1
Coq.ZArith.BinIntX.Z2Pos.inj_mul	40	0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y).	0.0616641044617	2
Coq.ZArith.BinIntX.Z2Pos.inj_pow	40	7.0.0.1	search with cache (only 1: apply BinInt.Pos2Z.inj; only 1: rewrite BinInt.Pos2Z.inj_pow, !BinInt.Z2Pos.id; only 1: destruct x; only 1: Z.order_pos).	0.703613042831	132
Coq.ZArith.BinIntX.Z2Pos.inj_pow_pos	40	1	search with cache (only 1: now apply (BinInt.Z2Pos.inj_pow x (Zpos p))).	0.0230159759521	2
Coq.ZArith.BinIntX.Z2Pos.inj_compare	40	0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y).	0.0717899799347	2
Coq.ZArith.BinIntX.Z2Pos.inj_leb	40	0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y).	0.0684499740601	2
Coq.ZArith.BinIntX.Z2Pos.inj_ltb	40	0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y).	0.0664348602295	2
Coq.ZArith.BinIntX.Z2Pos.inj_eqb	40	0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y).	0.0983858108521	2
Coq.ZArith.BinIntX.Z2Pos.inj_max	40	0.2.2.0.0.0.0.0.1.0.0	search with cache (only 1: destruct x; only 1: rewrite Pos.max_1_l; only 1: now destruct y; only 1: destruct y; only 1: now rewrite ?Pos.max_1_r, <- ?BinInt.Pos2Z.inj_max; only 1: now rewrite ?Pos.max_1_r, <- ?BinInt.Pos2Z.inj_max; only 1: now rewrite ?Pos.max_1_r, <- ?BinInt.Pos2Z.inj_max; only 1: rewrite Pos.max_1_l; only 1: destruct y; only 1: apply BinInt.Z2Pos.to_pos_nonpos; only 1: now apply BinInt.Z.max_lub).	9.42624187469	1436
Coq.ZArith.BinIntX.Z2Pos.inj_min	40	1.0.2.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: rewrite Pos.min_1_l; only 1: now destruct y; only 1: destruct y; only 1: now rewrite ?Pos.min_1_r, <- ?BinInt.Pos2Z.inj_min; only 1: now rewrite ?Pos.min_1_r, <- ?BinInt.Pos2Z.inj_min; only 1: now rewrite ?Pos.min_1_r, <- ?BinInt.Pos2Z.inj_min; only 1: rewrite Pos.min_1_l; only 1: destruct y; only 1: apply BinInt.Z2Pos.to_pos_nonpos; only 1: apply BinInt.Z.min_le_iff; only 1: now left).	4.13486218452	831
Coq.ZArith.BinIntX.Z2Pos.inj_sqrt	40	0	search with cache (only 1: now destruct x).	0.0198469161987	1
Coq.ZArith.BinIntX.Z2Pos.inj_gcd	40	0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y).	0.0638511180878	2
Coq.ZArith.BinIntX.Zplus_minus_eq	40		search with cache ().	0.0203068256378	0
Coq.ZArith.BinIntX.Zpos_eq	40		search with cache ().	0.00935792922974	0
Coq.ZArith.BinIntX.ZL0	40		search with cache ().	0.00847911834717	0
Coq.ZArith.BinIntX.Zplus_diag_eq_mult_2	40		search with cache ().	0.0204079151154	0
Coq.ZArith.BinIntX.Z_eq_mult	40		search with cache ().	0.0101628303528	0
Coq.ZArith.Zpow_defX.Zpower_theory	40
Coq.ZArith.ZArith_decX.Dcompare_inf	40	1	search with cache (only 1: induction r).	0.193583011627	22
Coq.ZArith.ZArith_decX.Zcompare_rect	40	2	search with cache (only 1: destruct (n ?= m)).	0.0590260028839	3
Coq.ZArith.ZArith_decX.Zcompare_rec	40	2	search with cache (only 1: destruct (n ?= m)).	0.0611817836761	3
Coq.ZArith.ZArith_decX.Z_lt_dec	40	7	search with cache (only 1: apply ZArith_dec.Zcompare_rec with (n := x) (m := y)).	0.46309709549	28
Coq.ZArith.ZArith_decX.Z_le_dec	40	2.1	search with cache (only 1: unfold Z.le; only 1: case Z.compare).	0.211422920227	15
Coq.ZArith.ZArith_decX.Z_gt_dec	40	2.11	search with cache (only 1: unfold Z.gt; only 1: case Z.compare).	2.15280103683	433
Coq.ZArith.ZArith_decX.Z_ge_dec	40	1.1	search with cache (only 1: unfold Z.ge; only 1: case Z.compare).	0.281585931778	23
Coq.ZArith.ZArith_decX.Z_lt_ge_dec	40	1	search with cache (only 1: exact ZArith_dec.Z_lt_dec).	0.0473492145538	2
Coq.ZArith.ZArith_decX.Z_lt_le_dec	40	3.0.1	search with cache (only 1: elim ZArith_dec.Z_lt_ge_dec; only 1: right; only 1: now apply Z.ge_le).	0.26395201683	22
Coq.ZArith.ZArith_decX.Z_le_gt_dec	40	10.2.1.2	search with cache (only 1: elim ZArith_dec.Z_le_dec; only 1: right; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	30.7416050434	3353
Coq.ZArith.ZArith_decX.Z_gt_le_dec	40	5.2	search with cache (only 1: elim Z_le_dec; only 1: exact ZArith_dec.Z_gt_dec).	0.679100036621	52
Coq.ZArith.ZArith_decX.Z_ge_lt_dec	40	20	search with cache (only 1: elim ZArith_dec.Z_lt_ge_dec).	12.6310350895	1763
Coq.ZArith.ZArith_decX.Z_le_lt_eq_dec	40	1.0.2	search with cache (only 1: apply ZArith_dec.Zcompare_rec with (n := x) (m := y); only 1: right; only 1: elim (Z.compare_eq_iff x y)).	0.139909029007	6
Coq.ZArith.ZArith_decX.Zlt_cotrans	40
Coq.ZArith.ZArith_decX.Zlt_cotrans_pos	40	100	search with cache (only 1: destruct n, m).	9.14716982841	7196
Coq.ZArith.ZArith_decX.Zlt_cotrans_neg	40	100	search with cache (only 1: destruct n, m).	9.51764297485	7302
Coq.ZArith.ZArith_decX.not_Zeq_inf	40
Coq.ZArith.ZArith_decX.Z_dec	40	0.0.0	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m)).	0.253633975983	3
Coq.ZArith.ZArith_decX.Z_dec'	40
Coq.ZArith.ZArith_decX.Z_zerop	40	37	search with cache (only 1: destruct x).	5.21291399002	2615
Coq.ZArith.ZminX.Zmin_spec	40	5.1.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.min_comm; only 1: destruct (Z.min_spec y x)).	0.169131994247	18
Coq.ZArith.ZminX.Zmin_irreducible	40	0	search with cache (only 1: generalize (Z.min_spec_le n m)).	0.0481770038605	1
Coq.ZArith.ZminX.Zmin_le_prime_inf	40
Coq.ZArith.ZminX.Zpos_min_1	40		search with cache ().	0.0336558818817	0
Coq.ZArith.ZmaxX.Zmax_spec	40	4.0	search with cache (only 1: Z.swap_greater; only 1: destruct (Z.max_spec x y)).	0.066351890564	6
Coq.ZArith.ZmaxX.Zmax_left	40		search with cache ().	0.0301859378815	0
Coq.ZArith.ZmaxX.Zpos_max_1	40		search with cache ().	0.0317800045013	0
Coq.ZArith.ZquotX.Zquot_0_r	40
Coq.ZArith.ZquotX.Zrem_0_r	40
Coq.ZArith.ZquotX.Zrem_0_l	40		search with cache ().	0.0155820846558	0
Coq.ZArith.ZquotX.Zquot_0_l	40		search with cache ().	0.0154500007629	0
Coq.ZArith.ZquotX.Z_rem_same	40
Coq.ZArith.ZquotX.Z_rem_mult	40
Coq.ZArith.ZquotX.Zquot_opp_l	40	0.0.0.0.0.0.0.0.0.88	search with cache (only 1: unfold Z.quot, Z.rem; only 1: destruct a as [| a| a], b as [| b| b]; only 1: generalize (N.pos_div_eucl_spec a (N.pos b)); only 1: case N.pos_div_eucl; only 1: generalize (N.pos_div_eucl_spec a (N.pos b)); only 1: case N.pos_div_eucl; only 1: generalize (N.pos_div_eucl_spec a (N.pos b)); only 1: case N.pos_div_eucl; only 1: generalize (N.pos_div_eucl_spec a (N.pos b)); only 1: case N.pos_div_eucl).	37.5279488564	23250
Coq.ZArith.ZquotX.Zquot_opp_r	40
Coq.ZArith.ZquotX.Zrem_opp_l	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r])).	0.405394077301	9
Coq.ZArith.ZquotX.Zrem_opp_r	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r])).	0.431823015213	9
Coq.ZArith.ZquotX.Zquot_opp_opp	40
Coq.ZArith.ZquotX.Zrem_opp_opp	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct a, b; only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: now destruct N.pos_div_eucl as (q, [| r])).	0.39985203743	10
Coq.ZArith.ZquotX.Zrem_sgn	40
Coq.ZArith.ZquotX.Zrem_sgn2	40
Coq.ZArith.ZquotX.Zrem_lt_pos	40
Coq.ZArith.ZquotX.Zrem_lt_neg	40
Coq.ZArith.ZquotX.Zrem_lt_pos_pos	40
Coq.ZArith.ZquotX.Zrem_lt_pos_neg	40	0.4.0.2	search with cache (only 1: generalize (Zrem_lt_pos a b); only 1: lia; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.394914865494	10
Coq.ZArith.ZquotX.Zrem_lt_neg_pos	40	0.3.2.0.1.0	search with cache (only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	8.97223806381	225
Coq.ZArith.ZquotX.Zrem_lt_neg_neg	40	0.0.0.0	search with cache (only 1: generalize (Zrem_lt_neg a b); only 1: lia; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.386265039444	4
Coq.ZArith.ZquotX.Remainder_equiv	40
Coq.ZArith.ZquotX.Zquot_mod_unique_full	40
Coq.ZArith.ZquotX.Zquot_unique_full	40
Coq.ZArith.ZquotX.Zrem_unique_full	40
Coq.ZArith.ZquotX.Z_quot_pos	40
Coq.ZArith.ZquotX.Z_quot_lt	40
Coq.ZArith.ZquotX.Z_quot_monotone	40
Coq.ZArith.ZquotX.Z_mult_quot_le	40
Coq.ZArith.ZquotX.Z_mult_quot_ge	40
Coq.ZArith.ZquotX.Z_quot_exact_full	40
Coq.ZArith.ZquotX.Zrem_le	40
Coq.ZArith.ZquotX.Zquot_le_upper_bound	40
Coq.ZArith.ZquotX.Zquot_lt_upper_bound	40
Coq.ZArith.ZquotX.Zquot_le_lower_bound	40
Coq.ZArith.ZquotX.Zquot_sgn	40
Coq.ZArith.ZquotX.Z_rem_plus	40
Coq.ZArith.ZquotX.Z_quot_plus	40
Coq.ZArith.ZquotX.Z_quot_plus_l	40
Coq.ZArith.ZquotX.Zquot_mult_cancel_r	40
Coq.ZArith.ZquotX.Zquot_mult_cancel_l	40
Coq.ZArith.ZquotX.Zmult_rem_distr_l	40
Coq.ZArith.ZquotX.Zmult_rem_distr_r	40
Coq.ZArith.ZquotX.Zrem_rem	40
Coq.ZArith.ZquotX.Zmult_rem	40
Coq.ZArith.ZquotX.Zplus_rem	40
Coq.ZArith.ZquotX.Zplus_rem_idemp_l	40
Coq.ZArith.ZquotX.Zplus_rem_idemp_r	40
Coq.ZArith.ZquotX.Zmult_rem_idemp_l	40
Coq.ZArith.ZquotX.Zmult_rem_idemp_r	40
Coq.ZArith.ZquotX.Zquot_Zquot	40
Coq.ZArith.ZquotX.Zquot_mult_le	40
Coq.ZArith.ZquotX.Zrem_divides	40
Coq.ZArith.ZquotX.Zquot2_odd_remainder	40
Coq.ZArith.ZquotX.Zrem_odd	40
Coq.ZArith.ZquotX.Zrem_even	40
Coq.ZArith.ZquotX.Zeven_rem	40	9.58.0	search with cache (only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: destruct a as [| a| [a| a| ]]; only 1: destruct a as [| a| [a| a| ]]).	7.58085393906	8598
Coq.ZArith.ZquotX.Zodd_rem	40
Coq.ZArith.ZquotX.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.ZquotX.Zquot_Zdiv_pos	40
Coq.ZArith.ZquotX.Zrem_Zmod_pos	40
Coq.ZArith.ZquotX.Zrem_Zmod_zero	40
Coq.ZArith.Zpow_altX.Piter_mul_acc	40
Coq.ZArith.Zpow_altX.Piter_op_square	40
Coq.ZArith.Zpow_altX.Zpower_equiv	40
Coq.ZArith.Zpow_altX.Zpower_alt_0_r	40		search with cache ().	0.00879001617432	0
Coq.ZArith.Zpow_altX.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_altX.Zpower_alt_neg_r	40	0	search with cache (only 1: destruct b as [| p| p]).	0.048702955246	1
Coq.ZArith.Zpow_altX.Zpower_alt_Ppow	40
Coq.ZArith.Zpow_factsX.Zpower_pos_1_l	40
Coq.ZArith.Zpow_factsX.Zpower_pos_0_l	40	0.0.0.231	search with cache (only 1: induction p using Pos.peano_ind; only 1: rewrite <- Pos.add_1_r; only 1: unfold Z.pow_pos; only 1: now rewrite Pos.add_comm, Pos.iter_add).	13.5754899979	33937
Coq.ZArith.Zpow_factsX.Zpower_pos_pos	40
Coq.ZArith.Zpow_factsX.Zpower_le_monotone	40
Coq.ZArith.Zpow_factsX.Zpower_lt_monotone	40
Coq.ZArith.Zpow_factsX.Zpower_gt_1	40
Coq.ZArith.Zpow_factsX.Zmult_power	40
Coq.ZArith.Zpow_factsX.Zpower_le_monotone3	40
Coq.ZArith.Zpow_factsX.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_factsX.Zpower2_lt_lin	40
Coq.ZArith.Zpow_factsX.Zpower2_le_lin	40
Coq.ZArith.Zpow_factsX.Zpower2_Psize	40
Coq.ZArith.Zpow_factsX.Zpower_mod	40
Coq.ZArith.Zpow_factsX.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_factsX.Zpow_mod_correct	40
Coq.ZArith.Zpow_factsX.Zpower_divide	40
Coq.ZArith.Zpow_factsX.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_factsX.rel_prime_Zpower	40
Coq.ZArith.Zpow_factsX.prime_power_prime	40
Coq.ZArith.Zpow_factsX.Zdivide_power_2	40
Coq.ZArith.ZeuclidX.ZEuclid.mod_wd	40		search with cache ().	0.0109679698944	0
Coq.ZArith.ZeuclidX.ZEuclid.div_wd	40		search with cache ().	0.0107650756836	0
Coq.ZArith.ZeuclidX.ZEuclid.div_mod	40
Coq.ZArith.ZeuclidX.ZEuclid.mod_always_pos	40
Coq.ZArith.ZeuclidX.ZEuclid.mod_bound_pos	40
Coq.ZArith.auxiliaryX.Zne_left	40
Coq.ZArith.auxiliaryX.Zegal_left	40		search with cache ().	0.0269389152527	0
Coq.ZArith.auxiliaryX.Zle_left	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0429840087891	1
Coq.ZArith.auxiliaryX.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0434310436249	1
Coq.ZArith.auxiliaryX.Zlt_left_rev	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.0434889793396	1
Coq.ZArith.auxiliaryX.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.0442569255829	1
Coq.ZArith.auxiliaryX.Zlt_left	40
Coq.ZArith.auxiliaryX.Zge_left	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0648519992828	2
Coq.ZArith.auxiliaryX.Zgt_left	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply auxiliary.Zlt_left).	0.0705480575562	2
Coq.ZArith.auxiliaryX.Zgt_left_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0637531280518	2
Coq.ZArith.auxiliaryX.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0662829875946	2
Coq.ZArith.auxiliaryX.Zle_mult_approx	40	2.2.1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r; only 1: apply Z.lt_succ_r; only 1: Z.order_pos).	0.572614908218	27
Coq.ZArith.auxiliaryX.Zmult_le_approx	40	0.1.0.0.1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r; only 1: apply Z.mul_pos_cancel_r with n; only 1: Z.nzsimpl; only 1: apply Z.le_lt_trans with (m * n + p); only 1: now apply Z.add_lt_mono_l).	0.284862041473	8
Coq.ZArith.ZdigitsX.binary_value	40		search with cache ().	0.0170569419861	0
Coq.ZArith.ZdigitsX.two_compl_value	40		search with cache ().	0.0167660713196	0
Coq.ZArith.ZdigitsX.Zmod2_twice	40
Coq.ZArith.ZdigitsX.Z_to_binary	40	31	search with cache (only 1: induction n).	1.92784500122	1004
Coq.ZArith.ZdigitsX.Z_to_two_compl	40
Coq.ZArith.ZdigitsX.binary_value_Sn	40		search with cache ().	0.0178790092468	0
Coq.ZArith.ZdigitsX.Z_to_binary_Sn	40
Coq.ZArith.ZdigitsX.binary_value_pos	40
Coq.ZArith.ZdigitsX.two_compl_value_Sn	40		search with cache ().	0.0181720256805	0
Coq.ZArith.ZdigitsX.Z_to_two_compl_Sn	40
Coq.ZArith.ZdigitsX.Z_to_binary_Sn_z	40		search with cache ().	0.0162649154663	0
Coq.ZArith.ZdigitsX.Z_div2_value	40
Coq.ZArith.ZdigitsX.Pdiv2	40
Coq.ZArith.ZdigitsX.Zdiv2_two_power_nat	40
Coq.ZArith.ZdigitsX.Z_to_two_compl_Sn_z	40		search with cache ().	0.01629114151	0
Coq.ZArith.ZdigitsX.Zeven_bit_value	40	0.0.1	search with cache (only 1: destruct z as [| p| p]; only 1: destruct p; only 1: destruct p).	0.0936889648438	4
Coq.ZArith.ZdigitsX.Zodd_bit_value	40	0.0.0	search with cache (only 1: destruct z as [| p| p]; only 1: destruct p; only 1: destruct p).	0.0955438613892	3
Coq.ZArith.ZdigitsX.Zge_minus_two_power_nat_S	40
Coq.ZArith.ZdigitsX.Zlt_two_power_nat_S	40
Coq.ZArith.ZdigitsX.binary_to_Z_to_binary	40
Coq.ZArith.ZdigitsX.two_compl_to_Z_to_two_compl	40
Coq.ZArith.ZdigitsX.Z_to_binary_to_Z	40
Coq.ZArith.ZdigitsX.Z_to_two_compl_to_Z	40
Coq.ZArith.ZnatX.nat_N_Z	40		search with cache ().	0.0211498737335	0
Coq.ZArith.ZnatX.N_nat_Z	40		search with cache ().	0.021467924118	0
Coq.ZArith.ZnatX.positive_nat_Z	40		search with cache ().	0.0229430198669	0
Coq.ZArith.ZnatX.positive_N_Z	40		search with cache ().	0.00932693481445	0
Coq.ZArith.ZnatX.positive_N_nat	40		search with cache ().	0.0550699234009	0
Coq.ZArith.ZnatX.positive_nat_N	40	0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: f_equal; only 1: apply Pos2Nat.inj).	0.0846171379089	5
Coq.ZArith.ZnatX.Z_N_nat	40		search with cache ().	0.0228688716888	0
Coq.ZArith.ZnatX.Z_nat_N	40	0.0	search with cache (only 1: destruct n; only 1: apply Znat.positive_nat_N).	0.0283420085907	2
Coq.ZArith.ZnatX.Zabs_N_nat	40		search with cache ().	0.022675037384	0
Coq.ZArith.ZnatX.Zabs_nat_N	40	0.0.0	search with cache (only 1: destruct n; only 1: apply Znat.positive_nat_N; only 1: apply Znat.positive_nat_N).	0.040687084198	3
Coq.ZArith.ZnatX.N2Z.id	40	0	search with cache (only 1: now destruct n).	0.0182869434357	1
Coq.ZArith.ZnatX.N2Z.inj	40	3	search with cache (only 1: destruct n, m).	0.0356619358063	4
Coq.ZArith.ZnatX.N2Z.inj_iff	40	3	search with cache (only 1: destruct n, m).	0.0395970344543	4
Coq.ZArith.ZnatX.N2Z.is_nonneg	40	2	search with cache (only 1: now destruct n).	0.0255351066589	3
Coq.ZArith.ZnatX.N2Z.inj_0	40		search with cache ().	0.00900197029114	0
Coq.ZArith.ZnatX.N2Z.inj_pos	40		search with cache ().	0.00873279571533	0
Coq.ZArith.ZnatX.N2Z.inj_compare	40	0	search with cache (only 1: now destruct n, m).	0.0233490467072	1
Coq.ZArith.ZnatX.N2Z.inj_le	40	38.1.0	search with cache (only 1: unfold Z.le; only 1: now destruct n, m; only 1: destruct n as [| n], m as [| m]).	23.6536269188	15741
Coq.ZArith.ZnatX.N2Z.inj_lt	40	3.0.0	search with cache (only 1: unfold Z.lt; only 1: now rewrite Znat.N2Z.inj_compare; only 1: now destruct n, m).	0.0579030513763	6
Coq.ZArith.ZnatX.N2Z.inj_ge	40	3.3.0	search with cache (only 1: unfold Z.ge; only 1: now destruct n, m; only 1: now destruct n, m).	0.0703129768372	9
Coq.ZArith.ZnatX.N2Z.inj_gt	40	3.0.0	search with cache (only 1: unfold Z.gt; only 1: now rewrite Znat.N2Z.inj_compare; only 1: destruct n as [| n], m as [| m]).	0.0620040893555	6
Coq.ZArith.ZnatX.N2Z.inj_abs_N	40		search with cache ().	0.0253310203552	0
Coq.ZArith.ZnatX.N2Z.inj_add	40		search with cache ().	0.0269420146942	0
Coq.ZArith.ZnatX.N2Z.inj_mul	40		search with cache ().	0.028892993927	0
Coq.ZArith.ZnatX.N2Z.inj_sub_max	40		search with cache ().	0.0289330482483	0
Coq.ZArith.ZnatX.N2Z.inj_sub	40		search with cache ().	0.0407071113586	0
Coq.ZArith.ZnatX.N2Z.inj_succ	40		search with cache ().	0.0285980701447	0
Coq.ZArith.ZnatX.N2Z.inj_pred_max	40		search with cache ().	0.0286920070648	0
Coq.ZArith.ZnatX.N2Z.inj_pred	40		search with cache ().	0.040944814682	0
Coq.ZArith.ZnatX.N2Z.inj_min	40		search with cache ().	0.050952911377	0
Coq.ZArith.ZnatX.N2Z.inj_max	40		search with cache ().	0.030454158783	0
Coq.ZArith.ZnatX.N2Z.inj_div	40		search with cache ().	0.0294239521027	0
Coq.ZArith.ZnatX.N2Z.inj_mod	40	0.0.0.0.0.0.0	search with cache (only 1: apply Z.mod_unique_pos with (Z.of_N (n / m)); only 1: apply Znat.N2Z.is_nonneg; only 1: apply Znat.N2Z.inj_lt; only 1: now apply N.mod_lt; only 1: rewrite <- Znat.N2Z.inj_mul, <- Znat.N2Z.inj_add; only 1: f_equal; only 1: now apply N.div_mod).	0.193676948547	7
Coq.ZArith.ZnatX.N2Z.inj_quot	40	0.0.0.0	search with cache (only 1: destruct m; only 1: now destruct n; only 1: rewrite Z.quot_div_nonneg, Znat.N2Z.inj_div; only 1: apply Znat.N2Z.is_nonneg).	0.0816700458527	4
Coq.ZArith.ZnatX.N2Z.inj_rem	40		search with cache ().	0.0252530574799	0
Coq.ZArith.ZnatX.N2Z.inj_div2	40	2.16.0	search with cache (only 1: destruct n as [| p]; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct p).	0.463387012482	343
Coq.ZArith.ZnatX.N2Z.inj_quot2	40	2.16.0	search with cache (only 1: destruct n as [| p]; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct p).	0.507447957993	349
Coq.ZArith.ZnatX.N2Z.inj_pow	40
Coq.ZArith.ZnatX.N2Z.inj_testbit	40	0	search with cache (only 1: apply Z.testbit_of_N).	0.0227711200714	1
Coq.ZArith.ZnatX.Z2N.id	40		search with cache ().	0.0330150127411	0
Coq.ZArith.ZnatX.Z2N.inj	40		search with cache ().	0.0356321334839	0
Coq.ZArith.ZnatX.Z2N.inj_iff	40		search with cache ().	0.115151166916	0
Coq.ZArith.ZnatX.Z2N.inj_0	40		search with cache ().	0.00911903381348	0
Coq.ZArith.ZnatX.Z2N.inj_pos	40		search with cache ().	0.00901103019714	0
Coq.ZArith.ZnatX.Z2N.inj_neg	40		search with cache ().	0.0921630859375	0
Coq.ZArith.ZnatX.Z2N.inj_add	40	1	search with cache (only 1: destruct n, m).	0.0402500629425	2
Coq.ZArith.ZnatX.Z2N.inj_mul	40	0	search with cache (only 1: destruct n, m).	0.0364198684692	1
Coq.ZArith.ZnatX.Z2N.inj_succ	40	0.1.0	search with cache (only 1: unfold Z.succ; only 1: rewrite Znat.Z2N.inj_add by easy; only 1: apply N.add_1_r).	0.0560591220856	4
Coq.ZArith.ZnatX.Z2N.inj_sub	40	0.0.0.0	search with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: rewrite Z.pos_sub_spec, Pos.compare_sub_mask; only 1: unfold Pos.sub; only 1: now destruct (Pos.sub_mask n m)).	0.0871090888977	4
Coq.ZArith.ZnatX.Z2N.inj_pred	40	0.0.1	search with cache (only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: now apply (Znat.Z2N.inj_sub n 1)).	0.0460221767426	4
Coq.ZArith.ZnatX.Z2N.inj_compare	40	1	search with cache (only 1: now rewrite <- Znat.N2Z.inj_compare, !Znat.Z2N.id).	0.0220518112183	2
Coq.ZArith.ZnatX.Z2N.inj_le	40	17.0.8.0	search with cache (only 1: unfold Z.le, N.le; only 1: destruct n, m; only 1: unfold Z.le, N.le; only 1: destruct n as [| n| n], m as [| m| m]).	5.07109904289	1924
Coq.ZArith.ZnatX.Z2N.inj_lt	40	2.16.0.0.0	search with cache (only 1: unfold Z.lt, N.lt; only 1: now rewrite Znat.Z2N.inj_compare; only 1: unfold Z.lt, N.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct n, m).	10.0137438774	3232
Coq.ZArith.ZnatX.Z2N.inj_min	40	0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: unfold Z.min, N.min; only 1: case Pos.compare_spec; only 1: unfold Z.min, N.min; only 1: now case Pos.compare).	0.129175186157	5
Coq.ZArith.ZnatX.Z2N.inj_max	40	0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: unfold Z.max, N.max; only 1: case Pos.compare_spec; only 1: unfold Z.max, N.max; only 1: now case Pos.compare).	0.126168966293	5
Coq.ZArith.ZnatX.Z2N.inj_div	40	0.0.0	search with cache (only 1: destruct n, m; only 1: rewrite <- (Znat.N2Z.id (_ / _)); only 1: f_equal).	0.125095844269	3
Coq.ZArith.ZnatX.Z2N.inj_mod	40	0.0.0.0	search with cache (only 1: destruct n, m; only 1: rewrite <- (Znat.N2Z.id (_ mod _)); only 1: f_equal; only 1: now rewrite Znat.N2Z.inj_mod).	0.111274003983	4
Coq.ZArith.ZnatX.Z2N.inj_quot	40	1.0.0	search with cache (only 1: destruct m; only 1: now destruct n; only 1: now rewrite Z.quot_div_nonneg, Znat.Z2N.inj_div).	0.0708720684052	4
Coq.ZArith.ZnatX.Z2N.inj_rem	40	1.0.0	search with cache (only 1: destruct m; only 1: now destruct n; only 1: now rewrite Z.rem_mod_nonneg, Znat.Z2N.inj_mod).	0.069983959198	4
Coq.ZArith.ZnatX.Z2N.inj_div2	40	18.0	search with cache (only 1: destruct n as [| p| p]; only 1: now destruct p).	0.404646873474	315
Coq.ZArith.ZnatX.Z2N.inj_quot2	40	7.18.0	search with cache (only 1: destruct n as [| p| p]; only 1: now destruct p; only 1: now destruct p).	0.936486959457	771
Coq.ZArith.ZnatX.Z2N.inj_pow	40	2.4.24	search with cache (only 1: destruct n; only 1: now rewrite <- (Znat.N2Z.id (_ ^ _)), Znat.N2Z.inj_pow, Znat.Z2N.id; only 1: now rewrite <- (Znat.N2Z.id (_ ^ _)), Znat.N2Z.inj_pow, Znat.Z2N.id).	4.3556470871	2120
Coq.ZArith.ZnatX.Z2N.inj_testbit	40	1	search with cache (only 1: apply Z.testbit_of_N').	0.0263640880585	2
Coq.ZArith.ZnatX.Zabs2N.abs_N_spec	40	0	search with cache (only 1: now destruct n).	0.0204389095306	1
Coq.ZArith.ZnatX.Zabs2N.abs_N_nonneg	40	0	search with cache (only 1: destruct n).	0.0320711135864	1
Coq.ZArith.ZnatX.Zabs2N.id_abs	40		search with cache ().	0.0243599414825	0
Coq.ZArith.ZnatX.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.0203950405121	1
Coq.ZArith.ZnatX.Zabs2N.inj_0	40		search with cache ().	0.010705947876	0
Coq.ZArith.ZnatX.Zabs2N.inj_pos	40		search with cache ().	0.0109260082245	0
Coq.ZArith.ZnatX.Zabs2N.inj_neg	40		search with cache ().	0.0113840103149	0
Coq.ZArith.ZnatX.Zabs2N.inj_opp	40	0	search with cache (only 1: now destruct n).	0.0900070667267	1
Coq.ZArith.ZnatX.Zabs2N.inj_succ	40	1.1.1	search with cache (only 1: rewrite !Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_succ; only 1: now apply Z.le_le_succ_r).	0.095477104187	14
Coq.ZArith.ZnatX.Zabs2N.inj_add	40	3	search with cache (only 1: destruct n, m).	0.187831163406	25
Coq.ZArith.ZnatX.Zabs2N.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.0263690948486	1
Coq.ZArith.ZnatX.Zabs2N.inj_sub	40	0.16.0.1	search with cache (only 1: rewrite !Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_sub; only 1: Z.order; only 1: apply Z.le_0_sub).	14.7559611797	2625
Coq.ZArith.ZnatX.Zabs2N.inj_pred	40	0.0.0.1	search with cache (only 1: rewrite !Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_pred; only 1: apply Z.lt_succ_r; only 1: now rewrite Z.succ_pred).	0.0683109760284	5
Coq.ZArith.ZnatX.Zabs2N.inj_compare	40	2.2	search with cache (only 1: rewrite !Znat.Zabs2N.abs_N_nonneg by trivial; only 1: now apply Znat.Z2N.inj_compare).	0.0369620323181	6
Coq.ZArith.ZnatX.Zabs2N.inj_le	40
Coq.ZArith.ZnatX.Zabs2N.inj_lt	40	18.0.0	search with cache (only 1: unfold Z.lt, N.lt; only 1: now rewrite Znat.Zabs2N.inj_compare; only 1: destruct n, m).	4.12250208855	1700
Coq.ZArith.ZnatX.Zabs2N.inj_min	40	0.0.1	search with cache (only 1: rewrite !Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_min; only 1: now apply Z.min_glb).	0.0667750835419	4
Coq.ZArith.ZnatX.Zabs2N.inj_max	40	2.0.0.0.0.0.1	search with cache (only 1: rewrite !Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_max; only 1: transitivity n; only 1: transitivity n; only 1: transitivity n; only 1: transitivity n; only 1: apply Z.le_max_l).	0.224541187286	13
Coq.ZArith.ZnatX.Zabs2N.inj_quot	40	0.0.0.0.0.0.0.1	search with cache (only 1: assert (forall p q, Z.abs_N (Z.pos p ÷ Z.pos q) = (N.pos p / N.pos q)%N); only 1: rewrite Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_quot; only 1: now apply Z.quot_pos; only 1: destruct n, m; only 1: now rewrite <- Pos2Z.opp_pos, Z.quot_opp_r, Znat.Zabs2N.inj_opp; only 1: now rewrite <- Pos2Z.opp_pos, Z.quot_opp_l, Znat.Zabs2N.inj_opp; only 1: now rewrite <- 2!Pos2Z.opp_pos, Z.quot_opp_opp).	0.529314994812	27
Coq.ZArith.ZnatX.Zabs2N.inj_rem	40	0.0.0.0.0.0.0.1	search with cache (only 1: assert (forall p q, Z.abs_N (Z.rem (Z.pos p) (Z.pos q)) = (N.pos p mod N.pos q)%N); only 1: rewrite Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_rem; only 1: now apply Z.rem_nonneg; only 1: destruct n, m; only 1: now rewrite <- Pos2Z.opp_pos, Z.rem_opp_r; only 1: now rewrite <- Pos2Z.opp_pos, Z.rem_opp_l, Znat.Zabs2N.inj_opp; only 1: now rewrite <- 2!Pos2Z.opp_pos, Z.rem_opp_opp, Znat.Zabs2N.inj_opp).	0.608984947205	35
Coq.ZArith.ZnatX.Zabs2N.inj_pow	40	0.0.1.0.0	search with cache (only 1: rewrite Znat.Zabs2N.abs_N_spec, Z.abs_pow, Znat.Z2N.inj_pow, <- Znat.Zabs2N.abs_N_spec; only 1: f_equal; only 1: symmetry; only 1: now apply Znat.Zabs2N.abs_N_nonneg; only 1: apply Z.abs_nonneg).	0.146994829178	6
Coq.ZArith.ZnatX.Zabs2N.inj_succ_abs	40	1.1.0	search with cache (only 1: destruct n; only 1: now rewrite Pos.add_1_r; only 1: now rewrite Pos.add_1_r).	0.053573846817	5
Coq.ZArith.ZnatX.Zabs2N.inj_add_abs	40	0	search with cache (only 1: now destruct n, m).	0.0283858776093	1
Coq.ZArith.ZnatX.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0285789966583	1
Coq.ZArith.ZnatX.Nat2Z.inj_0	40		search with cache ().	0.00925803184509	0
Coq.ZArith.ZnatX.Nat2Z.inj_succ	40		search with cache ().	0.0242540836334	0
Coq.ZArith.ZnatX.Nat2Z.is_nonneg	40	2	search with cache (only 1: now induction n).	0.092737197876	3
Coq.ZArith.ZnatX.Nat2Z.id	40		search with cache ().	0.10115814209	0
Coq.ZArith.ZnatX.Nat2Z.inj	40		search with cache ().	0.0994529724121	0
Coq.ZArith.ZnatX.Nat2Z.inj_iff	40		search with cache ().	0.033303976059	0
Coq.ZArith.ZnatX.Nat2Z.inj_compare	40	0	search with cache (only 1: now rewrite <- !Znat.nat_N_Z, Znat.N2Z.inj_compare, <- Nat2N.inj_compare).	0.0208070278168	1
Coq.ZArith.ZnatX.Nat2Z.inj_le	40
Coq.ZArith.ZnatX.Nat2Z.inj_lt	40
Coq.ZArith.ZnatX.Nat2Z.inj_ge	40
Coq.ZArith.ZnatX.Nat2Z.inj_gt	40
Coq.ZArith.ZnatX.Nat2Z.inj_abs_nat	40		search with cache ().	0.0215790271759	0
Coq.ZArith.ZnatX.Nat2Z.inj_add	40		search with cache ().	0.02290391922	0
Coq.ZArith.ZnatX.Nat2Z.inj_mul	40		search with cache ().	0.0236601829529	0
Coq.ZArith.ZnatX.Nat2Z.inj_sub_max	40		search with cache ().	0.0243780612946	0
Coq.ZArith.ZnatX.Nat2Z.inj_sub	40		search with cache ().	0.0347461700439	0
Coq.ZArith.ZnatX.Nat2Z.inj_pred_max	40		search with cache ().	0.0228431224823	0
Coq.ZArith.ZnatX.Nat2Z.inj_pred	40		search with cache ().	0.0338480472565	0
Coq.ZArith.ZnatX.Nat2Z.inj_min	40		search with cache ().	0.022803068161	0
Coq.ZArith.ZnatX.Nat2Z.inj_max	40		search with cache ().	0.0233769416809	0
Coq.ZArith.ZnatX.Z2Nat.id	40		search with cache ().	0.0331480503082	0
Coq.ZArith.ZnatX.Z2Nat.inj	40		search with cache ().	0.0347230434418	0
Coq.ZArith.ZnatX.Z2Nat.inj_iff	40		search with cache ().	0.0387060642242	0
Coq.ZArith.ZnatX.Z2Nat.inj_0	40		search with cache ().	0.00946807861328	0
Coq.ZArith.ZnatX.Z2Nat.inj_pos	40		search with cache ().	0.00975298881531	0
Coq.ZArith.ZnatX.Z2Nat.inj_neg	40		search with cache ().	0.00973796844482	0
Coq.ZArith.ZnatX.Z2Nat.inj_add	40		search with cache ().	0.0702090263367	0
Coq.ZArith.ZnatX.Z2Nat.inj_mul	40		search with cache ().	0.0446820259094	0
Coq.ZArith.ZnatX.Z2Nat.inj_succ	40		search with cache ().	0.0354819297791	0
Coq.ZArith.ZnatX.Z2Nat.inj_sub	40		search with cache ().	0.0490050315857	0
Coq.ZArith.ZnatX.Z2Nat.inj_pred	40		search with cache ().	0.0376889705658	0
Coq.ZArith.ZnatX.Z2Nat.inj_compare	40	1	search with cache (only 1: now rewrite <- Znat.Nat2Z.inj_compare, !Znat.Z2Nat.id).	0.0234627723694	2
Coq.ZArith.ZnatX.Z2Nat.inj_le	40
Coq.ZArith.ZnatX.Z2Nat.inj_lt	40
Coq.ZArith.ZnatX.Z2Nat.inj_min	40		search with cache ().	0.067244052887	0
Coq.ZArith.ZnatX.Z2Nat.inj_max	40		search with cache ().	0.0683410167694	0
Coq.ZArith.ZnatX.Zabs2Nat.abs_nat_spec	40		search with cache ().	0.0370059013367	0
Coq.ZArith.ZnatX.Zabs2Nat.abs_nat_nonneg	40		search with cache ().	0.0371689796448	0
Coq.ZArith.ZnatX.Zabs2Nat.id_abs	40		search with cache ().	0.0238080024719	0
Coq.ZArith.ZnatX.Zabs2Nat.id	40		search with cache ().	0.0371780395508	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_0	40		search with cache ().	0.0115039348602	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_pos	40		search with cache ().	0.011020898819	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_neg	40		search with cache ().	0.0113101005554	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_succ	40		search with cache ().	0.0383570194244	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_add	40		search with cache ().	0.0420651435852	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_mul	40		search with cache ().	0.0433449745178	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_sub	40		search with cache ().	0.045177936554	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_pred	40		search with cache ().	0.0392920970917	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_compare	40	0	search with cache (only 1: now rewrite <- !Znat.Zabs_N_nat, <- N2Nat.inj_compare, Znat.Zabs2N.inj_compare).	0.100126028061	1
Coq.ZArith.ZnatX.Zabs2Nat.inj_le	40
Coq.ZArith.ZnatX.Zabs2Nat.inj_lt	40
Coq.ZArith.ZnatX.Zabs2Nat.inj_min	40		search with cache ().	0.0448591709137	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_max	40		search with cache ().	0.0454111099243	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_succ_abs	40		search with cache ().	0.035266160965	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_add_abs	40		search with cache ().	0.0389018058777	0
Coq.ZArith.ZnatX.Zabs2Nat.inj_mul_abs	40		search with cache ().	0.0391719341278	0
Coq.ZArith.ZnatX.inj_neq	40	0.124	search with cache (only 1: intros q; only 1: now apply H, Znat.Nat2Z.inj).	17.4744400978	13969
Coq.ZArith.ZnatX.inj_minus2	40		search with cache ().	0.0361630916595	0
Coq.ZArith.ZabsX.Zabs_ind	40	0.0.0.0	search with cache (only 1: apply Z.abs_case_strong; only 1: Z.swap_greater; only 1: intros x y Hx; only 1: Z.swap_greater).	0.145586013794	4
Coq.ZArith.ZabsX.Zabs_intro	40	7	search with cache (only 1: now destruct n).	0.0212759971619	8
Coq.ZArith.ZabsX.Zabs_dec	40	0	search with cache (only 1: destruct x).	0.0530741214752	1
Coq.ZArith.ZabsX.Zabs_spec	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.abs_spec).	0.0622909069061	2
Coq.ZArith.ZabsX.Zsgn_spec	40	1.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.sgn_spec).	0.0992379188538	4
Coq.ZArith.ZabsX.Zabs_nat_le	40		search with cache ().	0.0392260551453	0
Coq.ZArith.ZabsX.Zabs_nat_lt	40		search with cache ().	0.0388369560242	0
Coq.ZArith.ZwfX.Zwf_well_founded	40
Coq.ZArith.ZwfX.Zwf_up_well_founded	40
Coq.ZArith.ZevenX.Zeven_equiv	40
Coq.ZArith.ZevenX.Zodd_equiv	40
Coq.ZArith.ZevenX.Zeven_bool_iff	40
Coq.ZArith.ZevenX.Zodd_bool_iff	40
Coq.ZArith.ZevenX.Zodd_even_bool	40	0.2	search with cache (only 1: symmetry; only 1: apply Z.negb_even).	0.0365600585938	4
Coq.ZArith.ZevenX.Zeven_odd_bool	40	2.4	search with cache (only 1: symmetry; only 1: apply Z.negb_odd).	0.0318078994751	8
Coq.ZArith.ZevenX.Zeven_odd_dec	40	13.13.0	search with cache (only 1: destruct n as [| p| p]; only 1: destruct p; only 1: destruct p).	2.05782699585	1534
Coq.ZArith.ZevenX.Zeven_dec	40	13.13.0	search with cache (only 1: destruct n as [| p| p]; only 1: destruct p; only 1: destruct p).	2.4177479744	1702
Coq.ZArith.ZevenX.Zodd_dec	40
Coq.ZArith.ZevenX.Zeven_not_Zodd	40
Coq.ZArith.ZevenX.Zodd_not_Zeven	40
Coq.ZArith.ZevenX.Zeven_Sn	40	19.8.1	search with cache (only 1: destruct n as [| p| p]; only 1: now destruct p; only 1: destruct p).	3.41866207123	2404
Coq.ZArith.ZevenX.Zodd_Sn	40	5.2.4.8.0	search with cache (only 1: boolify_even_odd; only 1: destruct n; only 1: now destruct p; only 1: destruct p; only 1: destruct (Pos.sub_mask p q) as [| [r| r| ]| ] || destruct p).	1.3969399929	895
Coq.ZArith.ZevenX.Zeven_pred	40	8.3.9	search with cache (only 1: destruct n as [| p| p]; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p).	0.705335140228	470
Coq.ZArith.ZevenX.Zodd_pred	40	8.11.4.5.1	search with cache (only 1: destruct n as [| p| p]; only 1: red; only 1: induction p as [p IHp| p IHp| ]; only 1: induction p; only 1: now destruct p).	3.23446393013	2735
Coq.ZArith.ZevenX.Zeven_div2	40	4.2.0	search with cache (only 1: rewrite (Zeven.Zdiv2_odd_eqn n)  at 1; only 1: rewrite (Zeven.Zdiv2_odd_eqn n)  at 1; only 1: destruct n as [| [| | ]| [| | ]]).	0.229206085205	12
Coq.ZArith.ZevenX.Zodd_div2	40	3.1	search with cache (only 1: rewrite (Zeven.Zdiv2_odd_eqn n)  at 1; only 1: destruct n as [| [| | ]| [| | ]]).	0.427570104599	20
Coq.ZArith.ZevenX.Zquot2_odd_eqn	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.110068082809	1
Coq.ZArith.ZevenX.Zeven_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.101899862289	1
Coq.ZArith.ZevenX.Zodd_quot2	40	2.1.1	search with cache (only 1: rewrite (Zeven.Zquot2_odd_eqn n)  at 1; only 1: f_equal; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.161252975464	14
Coq.ZArith.ZevenX.Zodd_quot2_neg	40	6.2	search with cache (only 1: unfold Z.sub; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0584070682526	10
Coq.ZArith.ZevenX.Zquot2_opp	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0382990837097	1
Coq.ZArith.ZevenX.Zquot2_quot	40		search with cache ().	0.0245168209076	0
Coq.ZArith.ZevenX.Z_modulo_2	40
Coq.ZArith.ZevenX.Zsplit2	40
Coq.ZArith.ZevenX.Zeven_ex	40	6.1	search with cache (only 1: exists (Z.div2 n); only 1: apply Zeven.Zeven_div2).	0.178092956543	14
Coq.ZArith.ZevenX.Zodd_ex	40	9.3	search with cache (only 1: exists (Z.div2 n); only 1: apply Zeven.Zodd_div2).	0.347706079483	93
Coq.ZArith.ZevenX.Zeven_2p	40	14	search with cache (only 1: now try destruct p).	0.378577947617	126
Coq.ZArith.ZevenX.Zodd_2p_plus_1	40	5.15.32	search with cache (only 1: red; only 1: destruct p as [| p| p]; only 1: induction p).	3.61185097694	2773
Coq.ZArith.ZevenX.Zeven_plus_Zodd	40
Coq.ZArith.ZevenX.Zeven_plus_Zeven	40
Coq.ZArith.ZevenX.Zodd_plus_Zeven	40
Coq.ZArith.ZevenX.Zodd_plus_Zodd	40
Coq.ZArith.ZevenX.Zeven_mult_Zeven_l	40
Coq.ZArith.ZevenX.Zeven_mult_Zeven_r	40
Coq.ZArith.ZevenX.Zodd_mult_Zodd	40
Coq.ZArith.IntX.MoreInt.eqb_eq	40
Coq.ZArith.IntX.MoreInt.eqb_neq	40
Coq.ZArith.IntX.MoreInt.ltb_lt	40
Coq.ZArith.IntX.MoreInt.ltb_nlt	40
Coq.ZArith.IntX.MoreInt.leb_le	40
Coq.ZArith.IntX.MoreInt.leb_nle	40
Coq.ZArith.IntX.MoreInt.norm_ei_correct	40
Coq.ZArith.IntX.MoreInt.norm_ez_correct	40
Coq.ZArith.IntX.MoreInt.norm_ep_correct	40
Coq.ZArith.IntX.MoreInt.norm_ep_correct2	40
Coq.ZArith.IntX.Z_as_Int.gt_le_dec	40
Coq.ZArith.IntX.Z_as_Int.ge_lt_dec	40
Coq.ZArith.IntX.Z_as_Int.i2z_eq	40		search with cache ().	0.00896906852722	0
Coq.ZArith.IntX.Z_as_Int.i2z_0	40		search with cache ().	0.00837898254395	0
Coq.ZArith.IntX.Z_as_Int.i2z_1	40		search with cache ().	0.00836205482483	0
Coq.ZArith.IntX.Z_as_Int.i2z_2	40		search with cache ().	0.00832891464233	0
Coq.ZArith.IntX.Z_as_Int.i2z_3	40		search with cache ().	0.00882911682129	0
Coq.ZArith.IntX.Z_as_Int.i2z_add	40		search with cache ().	0.00908184051514	0
Coq.ZArith.IntX.Z_as_Int.i2z_opp	40		search with cache ().	0.00850987434387	0
Coq.ZArith.IntX.Z_as_Int.i2z_sub	40		search with cache ().	0.00871586799622	0
Coq.ZArith.IntX.Z_as_Int.i2z_mul	40		search with cache ().	0.00863313674927	0
Coq.ZArith.IntX.Z_as_Int.i2z_max	40		search with cache ().	0.00905609130859	0
Coq.ZArith.IntX.Z_as_Int.i2z_eqb	40		search with cache ().	0.00920295715332	0
Coq.ZArith.IntX.Z_as_Int.i2z_leb	40		search with cache ().	0.00861096382141	0
Coq.ZArith.IntX.Z_as_Int.i2z_ltb	40		search with cache ().	0.00913906097412	0
Coq.ZArith.ZpowerX.Zpower_nat_0_r	40		search with cache ().	0.00780391693115	0
Coq.ZArith.ZpowerX.Zpower_nat_succ_r	40		search with cache ().	0.00835990905762	0
Coq.ZArith.ZpowerX.Zpower_nat_is_exp	40	3.67.14	search with cache (only 1: rewrite Nat.add_comm; only 1: Nat.induct ltac:(m); only 1: now Z.nzsimpl).	29.1095399857	21160
Coq.ZArith.ZpowerX.Zpower_pos_nat	40
Coq.ZArith.ZpowerX.Zpower_nat_Z	40
Coq.ZArith.ZpowerX.Zpower_nat_Zpower	40	0.2	search with cache (only 1: induction n; only 1: apply Pos2Nat.inj_iter).	0.0959179401398	4
Coq.ZArith.ZpowerX.Zpower_pos_is_exp	40
Coq.ZArith.ZpowerX.Zpower_exp	40
Coq.ZArith.ZpowerX.shift_nat_equiv	40		search with cache ().	0.0109920501709	0
Coq.ZArith.ZpowerX.shift_pos_equiv	40		search with cache ().	0.0104479789734	0
Coq.ZArith.ZpowerX.shift_equiv	40	0.6.63	search with cache (only 1: Z.bitwise; only 1: destruct n as [| n| n]; only 1: rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial).	4.07673001289	4431
Coq.ZArith.ZpowerX.two_power_nat_equiv	40
Coq.ZArith.ZpowerX.two_power_pos_equiv	40	7.7.34.54	search with cache (only 1: Morphisms.f_equiv; only 1: intros n Hn; only 1: assert (AUX : forall m, 0 < m -> Z.quot2 m = m ÷ 2); only 1: now apply Pos.iter_swap_gen).	10.9235429764	9783
Coq.ZArith.ZpowerX.two_p_equiv	40	0.48.5.77	search with cache (only 1: Morphisms.f_equiv; only 1: intros a n Hn; only 1: induction n; only 1: now apply Pos.iter_swap_gen).	22.341422081	22375
Coq.ZArith.ZpowerX.two_power_nat_S	40		search with cache ().	0.0104491710663	0
Coq.ZArith.ZpowerX.shift_nat_plus	40	2	search with cache (only 1: induction n).	0.0277798175812	3
Coq.ZArith.ZpowerX.shift_nat_correct	40
Coq.ZArith.ZpowerX.two_power_nat_correct	40
Coq.ZArith.ZpowerX.shift_pos_nat	40
Coq.ZArith.ZpowerX.two_power_pos_nat	40
Coq.ZArith.ZpowerX.shift_pos_correct	40
Coq.ZArith.ZpowerX.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0326590538025	2
Coq.ZArith.ZpowerX.two_power_pos_is_exp	40
Coq.ZArith.ZpowerX.two_p_is_exp	40
Coq.ZArith.ZpowerX.two_p_gt_ZERO	40	26.1	search with cache (only 1: Z.swap_greater; only 1: destruct x).	2.51141810417	1529
Coq.ZArith.ZpowerX.two_p_S	40
Coq.ZArith.ZpowerX.two_p_pred	40
Coq.ZArith.ZpowerX.Zdiv_rest_correct1	40
Coq.ZArith.ZpowerX.Zdiv_rest_correct2	40
Coq.ZArith.ZpowerX.Zdiv_rest_correct	40
Coq.ZArith.ZpowerX.Zdiv_rest_ok	40
Coq.ZArith.ZpowerX.Zdiv_rest_shiftr	40
Coq.ZArith.ZcompareX.Zcompare_Gt_trans	40
Coq.ZArith.ZcompareX.Zcompare_opp	40	1.0.0	search with cache (only 1: destruct n, m; only 1: apply Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym).	0.0829451084137	4
Coq.ZArith.ZcompareX.Zcompare_Gt_spec	40
Coq.ZArith.ZcompareX.Zcompare_plus_compat	40	1	search with cache (only 1: apply Z.add_compare_mono_l).	0.0396249294281	2
Coq.ZArith.ZcompareX.Zplus_compare_compat	40
Coq.ZArith.ZcompareX.Zcompare_succ_Gt	40	3.2.1.0	search with cache (only 1: apply Z.lt_gt; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.170830011368	11
Coq.ZArith.ZcompareX.Zcompare_Gt_not_Lt	40
Coq.ZArith.ZcompareX.Zcompare_succ_compat	40
Coq.ZArith.ZcompareX.Zcompare_mult_compat	40
Coq.ZArith.ZcompareX.Zmult_compare_compat_l	40	1.0.0.0.3	search with cache (only 1: destruct p; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Zcompare.Zcompare_mult_compat).	0.246088981628	12
Coq.ZArith.ZcompareX.Zmult_compare_compat_r	40	2.1	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: now apply Zcompare.Zmult_compare_compat_l).	0.0658340454102	5
Coq.ZArith.ZcompareX.Zcompare_elim	40	4.0	search with cache (only 1: case Z.compare_spec; only 1: Z.swap_greater).	0.111049890518	6
Coq.ZArith.ZcompareX.Zcompare_eq_case	40	1	search with cache (only 1: now rewrite Z.compare_refl).	0.0394577980042	2
Coq.ZArith.ZcompareX.Zle_compare	40	0.0	search with cache (only 1: case Z.compare_spec; only 1: Z.order).	0.0587470531464	2
Coq.ZArith.ZcompareX.Zlt_compare	40
Coq.ZArith.ZcompareX.Zge_compare	40	0	search with cache (only 1: now case Z.compare_spec).	0.0325920581818	1
Coq.ZArith.ZcompareX.Zgt_compare	40	0.0.0.17	search with cache (only 1: destruct (Z.lt_decidable m n); only 1: case Z.compare_spec; only 1: case Z.compare_spec; only 1: now Z.swap_greater).	1.90442013741	639
Coq.ZArith.ZboolX.Zle_cases	40	0.0	search with cache (only 1: case Z.leb_spec; only 1: now Z.swap_greater).	0.031672000885	2
Coq.ZArith.ZboolX.Zlt_cases	40	0.0	search with cache (only 1: case Z.ltb_spec; only 1: now Z.swap_greater).	0.0317080020905	2
Coq.ZArith.ZboolX.Zge_cases	40	0.0.0	search with cache (only 1: rewrite Z.geb_leb; only 1: case Z.leb_spec; only 1: now Z.swap_greater).	0.040155172348	3
Coq.ZArith.ZboolX.Zgt_cases	40	0.0.0	search with cache (only 1: rewrite Z.gtb_ltb; only 1: case Z.ltb_spec; only 1: now Z.swap_greater).	0.0365438461304	3
Coq.ZArith.ZboolX.Zle_bool_imp_le	40	2	search with cache (only 1: apply Z.leb_le).	0.0430109500885	12
Coq.ZArith.ZboolX.Zle_imp_le_bool	40	2	search with cache (only 1: apply Z.leb_le).	0.0976231098175	13
Coq.ZArith.ZboolX.Zle_bool_antisym	40
Coq.ZArith.ZboolX.Zle_bool_trans	40
Coq.ZArith.ZboolX.Zle_bool_total	40	0.0.0.3	search with cache (only 1: case_eq (x <=? y); only 1: right; only 1: apply Z.leb_gt in H; only 1: now apply Z.leb_le, Z.lt_le_incl).	0.191231012344	25
Coq.ZArith.ZboolX.Zle_bool_plus_mono	40	3.3.7.0	search with cache (only 1: rewrite !Z.leb_le; only 1: apply Z.add_le_mono; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	8.4365131855	1524
Coq.ZArith.ZboolX.Zone_pos	40		search with cache ().	0.00862097740173	0
Coq.ZArith.ZboolX.Zone_min_pos	40	19.1.6	search with cache (only 1: apply Z.leb_gt in H; only 1: rewrite Z.leb_le; only 1: destruct n as [| [p| p| ]| ]).	4.08435988426	2479
Coq.ZArith.ZboolX.Zle_is_le_bool	40	2.2	search with cache (only 1: apply Z.leb_le; only 1: apply Z.leb_le).	0.134032964706	22
Coq.ZArith.ZboolX.Zge_is_le_bool	40	2.0.2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.leb_le).	0.174619913101	20
Coq.ZArith.ZboolX.Zlt_is_lt_bool	40	2.0.0.0.2.0	search with cache (only 1: unfold Z.ltb, Z.lt; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: unfold Z.ltb, Z.lt; only 1: apply Z.ltb_lt).	0.149657964706	10
Coq.ZArith.ZboolX.Zgt_is_gt_bool	40
Coq.ZArith.ZboolX.Zlt_is_le_bool	40	4.3.0.0	search with cache (only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred; only 1: apply Z.lt_le_pred; only 1: apply Z.leb_le).	0.259631872177	47
Coq.ZArith.ZboolX.Zgt_is_le_bool	40	4.2.0.0.0.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred; only 1: apply Z.leb_le).	1.93512201309	349
Coq.ZArith.ZboolX.Zeq_is_eq_bool	40
Coq.ZArith.ZboolX.Zeq_bool_eq	40	7	search with cache (only 1: apply Zbool.Zeq_is_eq_bool).	0.179290056229	27
Coq.ZArith.ZboolX.Zeq_bool_neq	40
Coq.ZArith.ZboolX.Zeq_bool_if	40	6.2.2	search with cache (only 1: unfold Zeq_bool; only 1: elim (Z.compare_eq_iff x y); only 1: destruct Z.compare).	0.647254943848	138
Coq.ZArith.ZmiscX.iter_nat_of_Z	40	4.13	search with cache (only 1: induction n; only 1: apply Pos2Nat.inj_iter).	3.11825013161	768
Coq.ZArith.Zgcd_altX.Zgcdn_pos	40
Coq.ZArith.Zgcd_altX.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_altX.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_altX.fibonacci_pos	40
Coq.ZArith.Zgcd_altX.fibonacci_incr	40
Coq.ZArith.Zgcd_altX.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_altX.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_altX.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_altX.Zgcd_bound_opp	40
Coq.ZArith.Zgcd_altX.Zgcdn_opp	40
Coq.ZArith.Zgcd_altX.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_altX.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_altX.Zgcd_is_gcd	40
Coq.ZArith.ZcomplementsX.floor_gt0	40		search with cache ().	0.0164198875427	0
Coq.ZArith.ZcomplementsX.floor_ok	40
Coq.ZArith.ZcomplementsX.Z_lt_abs_rec	40
Coq.ZArith.ZcomplementsX.Z_lt_abs_induction	40
Coq.ZArith.ZcomplementsX.Zcase_sign	40
Coq.ZArith.ZcomplementsX.sqr_pos	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_nonneg).	0.125799894333	11
Coq.ZArith.ZcomplementsX.Zlength_correct	40
Coq.ZArith.ZcomplementsX.Zlength_nil	40		search with cache ().	0.015781879425	0
Coq.ZArith.ZcomplementsX.Zlength_cons	40	1	search with cache (only 1: now rewrite !Zcomplements.Zlength_correct, <- Nat2Z.inj_succ).	0.0467410087585	2
Coq.ZArith.ZcomplementsX.Zlength_nil_inv	40
Coq.omega.OmegaLemmasX.Zred_factor0	40		search with cache ().	0.0215351581573	0
Coq.omega.OmegaLemmasX.Zred_factor1	40		search with cache ().	0.0218648910522	0
Coq.omega.OmegaLemmasX.Zred_factor2	40
Coq.omega.OmegaLemmasX.Zred_factor3	40
Coq.omega.OmegaLemmasX.Zred_factor4	40		search with cache ().	0.0239028930664	0
Coq.omega.OmegaLemmasX.Zred_factor5	40		search with cache ().	0.0223650932312	0
Coq.omega.OmegaLemmasX.Zred_factor6	40		search with cache ().	0.0213189125061	0
Coq.omega.OmegaLemmasX.new_var	40		search with cache ().	0.0173439979553	0
Coq.omega.OmegaLemmasX.OMEGA1	40		search with cache ().	0.0163669586182	0
Coq.omega.OmegaLemmasX.OMEGA2	40
Coq.omega.OmegaLemmasX.OMEGA3	40		search with cache ().	0.038969039917	0
Coq.omega.OmegaLemmasX.OMEGA4	40
Coq.omega.OmegaLemmasX.OMEGA5	40		search with cache ().	0.0171480178833	0
Coq.omega.OmegaLemmasX.OMEGA6	40	1	search with cache (only 1: Z.order_pos).	0.0606791973114	2
Coq.omega.OmegaLemmasX.OMEGA7	40
Coq.omega.OmegaLemmasX.OMEGA8	40		search with cache ().	0.024453163147	0
Coq.omega.OmegaLemmasX.OMEGA9	40		search with cache ().	0.0250799655914	0
Coq.omega.OmegaLemmasX.OMEGA10	40		search with cache ().	0.0329270362854	0
Coq.omega.OmegaLemmasX.OMEGA11	40		search with cache ().	0.0282289981842	0
Coq.omega.OmegaLemmasX.OMEGA12	40		search with cache ().	0.0274529457092	0
Coq.omega.OmegaLemmasX.OMEGA13	40		search with cache ().	0.0259528160095	0
Coq.omega.OmegaLemmasX.OMEGA14	40		search with cache ().	0.0260620117188	0
Coq.omega.OmegaLemmasX.OMEGA15	40		search with cache ().	0.0303158760071	0
Coq.omega.OmegaLemmasX.OMEGA16	40		search with cache ().	0.0262219905853	0
Coq.omega.OmegaLemmasX.OMEGA17	40	6.0	search with cache (only 1: unfold Zne; only 1: rewrite Z.add_0_r in H0).	0.0939431190491	8
Coq.omega.OmegaLemmasX.OMEGA18	40	4	search with cache (only 1: easy || now destruct y).	0.0584590435028	5
Coq.omega.OmegaLemmasX.OMEGA19	40
Coq.omega.OmegaLemmasX.OMEGA20	40	7.0	search with cache (only 1: unfold Zne; only 1: rewrite Z.add_0_r in H0).	0.0892720222473	9
Coq.omega.OmegaLemmasX.intro_Z	40
Coq.omega.PreOmegaX.Z.mod_0_r_ext	40	0	search with cache (only 1: destruct x).	0.0331180095673	1
Coq.omega.PreOmegaX.Z.div_0_r_ext	40	0	search with cache (only 1: destruct x).	0.031986951828	1
Coq.omega.PreOmegaX.Z.rem_0_r_ext	40	0	search with cache (only 1: destruct x).	0.0318188667297	1
Coq.omega.PreOmegaX.Z.quot_0_r_ext	40	0	search with cache (only 1: destruct x).	0.0330290794373	1
Coq.omega.PreOmegaX.Z.rem_bound_pos_pos	40	2.2	search with cache (only 1: apply Z.rem_bound_pos; only 1: apply Z.rem_bound_pos).	0.33128118515	51
Coq.omega.PreOmegaX.Z.rem_bound_neg_pos	40	4.0.0.4.0.0	search with cache (only 1: rewrite <- Z.rem_opp_r'; only 1: apply Z.rem_bound_pos; only 1: rewrite ?Z.opp_pos_neg; only 1: rewrite <- Z.rem_opp_r'; only 1: apply Z.rem_bound_pos; only 1: rewrite ?Z.opp_pos_neg).	1.46958208084	349
Coq.omega.PreOmegaX.Z.rem_bound_pos_neg	40
Coq.omega.PreOmegaX.Z.rem_bound_neg_neg	40
Coq.Program.CombinatorsX.compose_id_left	40		search with cache ().	0.0159029960632	0
Coq.Program.CombinatorsX.compose_id_right	40		search with cache ().	0.0156331062317	0
Coq.Program.CombinatorsX.compose_assoc	40		search with cache ().	0.0173637866974	0
Coq.Program.CombinatorsX.flip_flip	40		search with cache ().	0.0156948566437	0
Coq.Program.CombinatorsX.prod_uncurry_curry	40		search with cache ().	0.0156631469727	0
Coq.Program.CombinatorsX.prod_curry_uncurry	40
Coq.Program.EqualityX.JMeq_eq_refl	40	0	search with cache (only 1: apply UIP).	0.0363519191742	1
Coq.Program.EqualityX.UIP_refl_refl	40	0	search with cache (only 1: apply UIP_refl).	0.0352470874786	1
Coq.Program.EqualityX.inj_pairT2_refl	40	0	search with cache (only 1: apply UIP_refl).	0.0353608131409	1
Coq.Program.EqualityX.solution_left	40		search with cache ().	0.0185699462891	0
Coq.Program.EqualityX.solution_right	40		search with cache ().	0.0178050994873	0
Coq.Program.EqualityX.deletion	40		search with cache ().	0.0160489082336	0
Coq.Program.EqualityX.simplification_heq	40		search with cache ().	0.0179209709167	0
Coq.Program.EqualityX.simplification_existT2	40	32	search with cache (only 1: intuition).	0.712033987045	621
Coq.Program.EqualityX.simplification_existT1	40
Coq.Program.EqualityX.simplification_K	40	0	search with cache (only 1: rewrite (UIP_refl A)).	0.0373439788818	1
Coq.Program.SubsetX.subset_eq	40
Coq.Program.SubsetX.match_eq_rewrite	40		search with cache ().	0.0190629959106	0
Coq.Program.WfX.Fix_F_eq	40	3	search with cache (only 1: destruct r using Acc_inv_dep).	0.0332930088043	4
Coq.Program.WfX.Fix_F_inv	40
Coq.Program.WfX.Fix_eq	40
Coq.Program.WfX.fix_sub_eq	40	0.0.0.0	search with cache (only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: apply Fix_F_inv).	0.137789964676	4
Coq.Program.WfX.measure_wf	40
Coq.Program.WfX.F_unfold	40	0	search with cache (only 1: destruct r using Acc_inv_dep).	0.0288941860199	1
Coq.Program.WfX.Fix_F_sub_rect	40
Coq.Program.WfX.eq_Fix_F_sub	40	3.4.2	search with cache (only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: rewrite F_unfold).	0.525538921356	80
Coq.Program.WfX.Fix_sub_rect	40
Coq.Program.WfX.WfExtensionality.fix_sub_eq_ext	40
Coq.Sorting.PermutEqX.multiplicity_In	40
Coq.Sorting.PermutEqX.multiplicity_In_O	40	22.28	search with cache (only 1: induction l; only 1: destruct eq_dec as [->| Hneq]).	3.01881098747	1586
Coq.Sorting.PermutEqX.multiplicity_In_S	40	0.0.0	search with cache (only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.193403959274	3
Coq.Sorting.PermutEqX.multiplicity_NoDup	40
Coq.Sorting.PermutEqX.NoDup_permut	40
Coq.Sorting.PermutEqX.permut_In_In	40
Coq.Sorting.PermutEqX.permut_cons_In	40
Coq.Sorting.PermutEqX.permut_nil	40
Coq.Sorting.PermutEqX.permutation_Permutation	40
Coq.Sorting.PermutEqX.permut_length_1	40
Coq.Sorting.PermutEqX.permut_length_2	40
Coq.Sorting.PermutEqX.permut_length	40
Coq.Sorting.PermutEqX.permutation_map	40
Coq.Sorting.PermutSetoidX.list_contents_app	40	42.0	search with cache (only 1: unfold meq; only 1: induction l).	21.8002960682	5652
Coq.Sorting.PermutSetoidX.permut_refl	40		search with cache ().	0.0225961208344	0
Coq.Sorting.PermutSetoidX.permut_sym	40		search with cache ().	0.0262701511383	0
Coq.Sorting.PermutSetoidX.permut_trans	40		search with cache ().	0.0288169384003	0
Coq.Sorting.PermutSetoidX.permut_cons_eq	40
Coq.Sorting.PermutSetoidX.permut_cons	40	21	search with cache (only 1: intros E).	0.549156188965	208
Coq.Sorting.PermutSetoidX.permut_app	40
Coq.Sorting.PermutSetoidX.permut_add_inside_eq	40
Coq.Sorting.PermutSetoidX.permut_add_inside	40
Coq.Sorting.PermutSetoidX.permut_add_cons_inside_eq	40	0.1.0.1.0.0.0.6	search with cache (only 1: unfold permutation, meq in *; only 1: specialize H0 with a0; only 1: repeat rewrite list_contents_app in *; only 1: destruct (eqA_dec a a0) as [Ha| Ha]; only 1: rewrite H in Ha; only 1: decide (eqA_dec a' a0) with Ha; only 1: rewrite H in Ha; only 1: decide (eqA_dec a' a0) with Ha).	7.44737195969	385
Coq.Sorting.PermutSetoidX.permut_add_cons_inside	40	0.2.1.9	search with cache (only 1: unfold permutation, meq in *; only 1: generalize (H a0); only 1: clear H; only 1: repeat rewrite list_contents_app in *).	10.5171298981	1229
Coq.Sorting.PermutSetoidX.permut_middle	40	0.0.0.0.0.5	search with cache (only 1: unfold permutation, meq in *; only 1: destruct (eqA_dec a a0); only 1: repeat rewrite list_contents_app in *; only 1: destruct (eqA_dec a a0); only 1: repeat rewrite list_contents_app in *; only 1: destruct (eqA_dec a a0)).	2.77616095543	169
Coq.Sorting.PermutSetoidX.permut_sym_app	40	2.5	search with cache (only 1: unfold permutation, meq in *; only 1: repeat rewrite list_contents_app in *).	0.271042823792	9
Coq.Sorting.PermutSetoidX.permut_rev	40
Coq.Sorting.PermutSetoidX.permut_conv_inv	40
Coq.Sorting.PermutSetoidX.permut_app_inv1	40	3.4.1	search with cache (only 1: unfold permutation, meq; only 1: generalize (H a); only 1: repeat rewrite list_contents_app in *).	0.840683937073	68
Coq.Sorting.PermutSetoidX.if_eqA_then	40
Coq.Sorting.PermutSetoidX.permut_app_inv2	40	7.2.0	search with cache (only 1: unfold permutation, meq; only 1: generalize (H a); only 1: repeat rewrite list_contents_app in *).	1.44787693024	186
Coq.Sorting.PermutSetoidX.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoidX.permut_remove_hd	40	0.3.12	search with cache (only 1: unfold permutation, meq; only 1: generalize (H a0); only 1: rewrite list_contents_app in *).	9.23710989952	1357
Coq.Sorting.PermutSetoidX.if_eqA_else	40	7.47	search with cache (only 1: firstorder  (subst; auto); only 1: destruct (eqA_dec a a')).	5.99057602882	5502
Coq.Sorting.PermutSetoidX.if_eqA_refl	40	0.0	search with cache (only 1: destruct eqA_dec as [_| NEQ]; only 1: contradict NEQ).	0.0810859203339	2
Coq.Sorting.PermutSetoidX.if_eqA	40
Coq.Sorting.PermutSetoidX.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoidX.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoidX.multiplicity_eqA	40
Coq.Sorting.PermutSetoidX.multiplicity_InA	40
Coq.Sorting.PermutSetoidX.multiplicity_InA_O	40
Coq.Sorting.PermutSetoidX.multiplicity_InA_S	40
Coq.Sorting.PermutSetoidX.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoidX.permut_InA_InA	40
Coq.Sorting.PermutSetoidX.permut_cons_InA	40
Coq.Sorting.PermutSetoidX.permut_nil	40
Coq.Sorting.PermutSetoidX.permut_length_1	40
Coq.Sorting.PermutSetoidX.permut_length_2	40
Coq.Sorting.PermutSetoidX.permut_length	40
Coq.Sorting.PermutSetoidX.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoidX.permut_map	40
Coq.Sorting.PermutSetoidX.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoidX.permut_eqA	40
Coq.Sorting.PermutSetoidX.permutation_Permutation	40
Coq.Sorting.HeapX.leA_Tree_Leaf	40		search with cache ().	0.0234861373901	0
Coq.Sorting.HeapX.leA_Tree_Node	40		search with cache ().	0.0246858596802	0
Coq.Sorting.HeapX.invert_heap	40
Coq.Sorting.HeapX.is_heap_rect	40
Coq.Sorting.HeapX.is_heap_rec	40
Coq.Sorting.HeapX.low_trans	40
Coq.Sorting.HeapX.Equivalence_instance_0	40	19	search with cache (only 1: split).	1.50612306595	275
Coq.Sorting.HeapX.Proper_instance_0	40	1.3.9	search with cache (only 1: unfold meq; only 1: intro P; only 1: intro a).	0.739275932312	107
Coq.Sorting.HeapX.merge	40
Coq.Sorting.HeapX.insert	40
Coq.Sorting.HeapX.list_to_heap	40
Coq.Sorting.HeapX.heap_to_list	40
Coq.Sorting.HeapX.treesort	40
Coq.Sorting.PermutationX.Permutation_nil	40
Coq.Sorting.PermutationX.Permutation_nil_cons	40
Coq.Sorting.PermutationX.Permutation_refl	40	33	search with cache (only 1: induction l as [| y l]).	3.7817671299	1501
Coq.Sorting.PermutationX.Permutation_refl'	40
Coq.Sorting.PermutationX.Permutation_sym	40
Coq.Sorting.PermutationX.Permutation_trans	40		search with cache ().	0.0137479305267	0
Coq.Sorting.PermutationX.Permutation_morph_transp	40
Coq.Sorting.PermutationX.Permutation_cons	40	0	search with cache (only 1: intros P HT l1 l2 HP).	0.052973985672	1
Coq.Sorting.PermutationX.Permutation_in	40
Coq.Sorting.PermutationX.Permutation_in'	40	24.5	search with cache (only 1: intros x; only 1: induction 1).	19.336425066	2578
Coq.Sorting.PermutationX.Permutation_app_tail	40
Coq.Sorting.PermutationX.Permutation_app_head	40	16	search with cache (only 1: elim l).	0.73966383934	108
Coq.Sorting.PermutationX.Permutation_app	40
Coq.Sorting.PermutationX.Permutation_app'	40
Coq.Sorting.PermutationX.Permutation_add_inside	40
Coq.Sorting.PermutationX.Permutation_cons_append	40	57	search with cache (only 1: induction l).	6.8835849762	2814
Coq.Sorting.PermutationX.Permutation_app_comm	40
Coq.Sorting.PermutationX.Permutation_app_rot	40
Coq.Sorting.PermutationX.Permutation_app_swap_app	40
Coq.Sorting.PermutationX.Permutation_app_middle	40
Coq.Sorting.PermutationX.Permutation_cons_app	40
Coq.Sorting.PermutationX.Permutation_Add	40
Coq.Sorting.PermutationX.Permutation_middle	40		search with cache ().	0.0152258872986	0
Coq.Sorting.PermutationX.Permutation_middle2	40
Coq.Sorting.PermutationX.Permutation_elt	40	33	search with cache (only 1: eauto).	15.1600739956	1522
Coq.Sorting.PermutationX.Permutation_rev	40	1.12	search with cache (only 1: induction l; only 1: rewrite <- IHl).	0.609694957733	76
Coq.Sorting.PermutationX.Permutation_rev'	40
Coq.Sorting.PermutationX.Permutation_length	40
Coq.Sorting.PermutationX.Permutation_length'	40	1.1	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm).	0.117098808289	13
Coq.Sorting.PermutationX.Permutation_Forall	40
Coq.Sorting.PermutationX.Permutation_Exists	40
Coq.Sorting.PermutationX.Permutation_Forall2	40
Coq.Sorting.PermutationX.Permutation_ind_bis	40
Coq.Sorting.PermutationX.Permutation_nil_app_cons	40
Coq.Sorting.PermutationX.Permutation_Add_inv	40
Coq.Sorting.PermutationX.Permutation_app_inv	40
Coq.Sorting.PermutationX.Permutation_cons_inv	40
Coq.Sorting.PermutationX.Permutation_cons_app_inv	40
Coq.Sorting.PermutationX.Permutation_app_inv_l	40
Coq.Sorting.PermutationX.Permutation_app_inv_r	40
Coq.Sorting.PermutationX.Permutation_app_inv_m	40
Coq.Sorting.PermutationX.Permutation_length_1_inv	40
Coq.Sorting.PermutationX.Permutation_length_1	40
Coq.Sorting.PermutationX.Permutation_length_2_inv	40
Coq.Sorting.PermutationX.Permutation_length_2	40
Coq.Sorting.PermutationX.Permutation_vs_elt_inv	40
Coq.Sorting.PermutationX.Permutation_vs_cons_inv	40
Coq.Sorting.PermutationX.Permutation_vs_cons_cons_inv	40
Coq.Sorting.PermutationX.NoDup_Permutation	40
Coq.Sorting.PermutationX.NoDup_Permutation_bis	40
Coq.Sorting.PermutationX.Permutation_NoDup	40
Coq.Sorting.PermutationX.Permutation_NoDup'	40
Coq.Sorting.PermutationX.Permutation_map	40
Coq.Sorting.PermutationX.Permutation_map'	40	5.1	search with cache (only 1: intros l1 l2 HP; only 1: induction HP).	1.77330207825	8
Coq.Sorting.PermutationX.Permutation_map_inv	40
Coq.Sorting.PermutationX.Permutation_image	40
Coq.Sorting.PermutationX.Permutation_elt_map_inv	40
Coq.Sorting.PermutationX.Permutation_flat_map	40
Coq.Sorting.PermutationX.nat_bijection_Permutation	40
Coq.Sorting.PermutationX.adapt_injective	40
Coq.Sorting.PermutationX.adapt_ok	40
Coq.Sorting.PermutationX.Permutation_nth_error	40
Coq.Sorting.PermutationX.Permutation_nth_error_bis	40
Coq.Sorting.PermutationX.Permutation_nth	40
Coq.Sorting.PermutationX.Permutation_list_sum	40
Coq.Sorting.PermutationX.Permutation_list_max	40	1.0	search with cache (only 1: intros l1 l2 HP; only 1: induction HP).	0.108993053436	3
Coq.Sorting.PermutationX.Permutation_transp_sym	40
Coq.Sorting.PermutationX.Permutation_transp_equiv	40
Coq.Sorting.PermutationX.Permutation_transp_cons	40
Coq.Sorting.PermutationX.Permutation_Permutation_transp	40
Coq.Sorting.PermutationX.Permutation_ind_transp	40
Coq.Sorting.MergesortX.Sort.Sorted_merge	40
Coq.Sorting.MergesortX.Sort.Permuted_merge	40
Coq.Sorting.MergesortX.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.MergesortX.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.MergesortX.Sort.Sorted_merge_stack	40
Coq.Sorting.MergesortX.Sort.Permuted_merge_stack	40
Coq.Sorting.MergesortX.Sort.Sorted_iter_merge	40
Coq.Sorting.MergesortX.Sort.Permuted_iter_merge	40
Coq.Sorting.MergesortX.Sort.LocallySorted_sort	40
Coq.Sorting.MergesortX.Sort.Sorted_sort	40
Coq.Sorting.MergesortX.Sort.Permuted_sort	40
Coq.Sorting.MergesortX.Sort.StronglySorted_sort	40
Coq.Sorting.MergesortX.NatOrder.leb_total	40
Coq.Sorting.SortedX.HdRel_inv	40
Coq.Sorting.SortedX.Sorted_inv	40	5.17	search with cache (only 1: inversion H; only 1: inversion H).	1.79243612289	468
Coq.Sorting.SortedX.Sorted_rect	40
Coq.Sorting.SortedX.Sorted_LocallySorted_iff	40
Coq.Sorting.SortedX.StronglySorted_inv	40	14.20	search with cache (only 1: inversion H; only 1: inversion H).	2.27670383453	831
Coq.Sorting.SortedX.StronglySorted_rect	40
Coq.Sorting.SortedX.StronglySorted_rec	40	0.1	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv).	0.0911688804626	3
Coq.Sorting.SortedX.StronglySorted_Sorted	40
Coq.Sorting.SortedX.Sorted_extends	40
Coq.Sorting.SortedX.Sorted_StronglySorted	40
Coq.Sorting.CPermutationX.CPermutation_Permutation	40	0.1.25.7	search with cache (only 1: induction 1; only 1: induction l1; only 1: rewrite app_nil_r; only 1: apply Permutation_cons_app).	7.58014202118	4159
Coq.Sorting.CPermutationX.CPermutation_nil	40
Coq.Sorting.CPermutationX.CPermutation_nil_cons	40
Coq.Sorting.CPermutationX.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutationX.CPermutation_split	40
Coq.Sorting.CPermutationX.CPermutation_refl	40
Coq.Sorting.CPermutationX.CPermutation_refl'	40
Coq.Sorting.CPermutationX.CPermutation_sym	40	29	search with cache (only 1: now inversion H).	0.647388935089	420
Coq.Sorting.CPermutationX.CPermutation_trans	40
Coq.Sorting.CPermutationX.CPermutation_app	40		search with cache ().	0.0177569389343	0
Coq.Sorting.CPermutationX.CPermutation_app_comm	40		search with cache ().	0.0127241611481	0
Coq.Sorting.CPermutationX.CPermutation_app_rot	40	6	search with cache (only 1: now rewrite (app_assoc l2)).	0.0423929691315	7
Coq.Sorting.CPermutationX.CPermutation_cons_append	40
Coq.Sorting.CPermutationX.CPermutation_morph_cons	40
Coq.Sorting.CPermutationX.CPermutation_length_1	40	16.19.55	search with cache (only 1: inversion H; only 1: destruct l1; only 1: destruct l1).	16.9574689865	17795
Coq.Sorting.CPermutationX.CPermutation_length_1_inv	40
Coq.Sorting.CPermutationX.CPermutation_swap	40
Coq.Sorting.CPermutationX.CPermutation_length_2	40
Coq.Sorting.CPermutationX.CPermutation_length_2_inv	40
Coq.Sorting.CPermutationX.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutationX.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutationX.CPermutation_rev	40
Coq.Sorting.CPermutationX.CPermutation_in	40
Coq.Sorting.CPermutationX.CPermutation_in'	40	0.32	search with cache (only 1: intros l x; only 1: intros ? ? ->).	36.1585800648	4299
Coq.Sorting.CPermutationX.CPermutation_map	40
Coq.Sorting.CPermutationX.CPermutation_map_inv	40
Coq.Sorting.CPermutationX.CPermutation_image	40
Coq.Sorting.CPermutationX.CPermutation_Forall	40
Coq.Sorting.CPermutationX.CPermutation_Exists	40
Coq.Sorting.CPermutationX.CPermutation_Forall2	40
Coq.Sorting.CPermutationX.CPermutation_rewrite_rev	40
Coq.btauto.AlgebraX.Decidable_sound	40	1	search with cache (only 1: apply -> Decidable_spec).	0.02516913414	2
Coq.btauto.AlgebraX.Decidable_complete	40	0	search with cache (only 1: apply <- Decidable_spec).	0.0267260074615	1
Coq.btauto.AlgebraX.Decidable_sound_alt	40
Coq.btauto.AlgebraX.Decidable_complete_alt	40
Coq.btauto.AlgebraX.Decidable_PosEq_obligation_1	40	7.8	search with cache (only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).	4.66012787819	527
Coq.btauto.AlgebraX.Decidable_PosLt_obligation_1	40
Coq.btauto.AlgebraX.Decidable_PosLe_obligation_1	40
Coq.btauto.AlgebraX.Decidable_eq_poly_obligation_1	40
Coq.btauto.AlgebraX.Decidable_null_obligation_3	40
Coq.btauto.AlgebraX.Decidable_valid_obligation_1	40
Coq.btauto.AlgebraX.valid_le_compat	40
Coq.btauto.AlgebraX.linear_le_compat	40
Coq.btauto.AlgebraX.linear_valid_incl	40
Coq.btauto.AlgebraX.eval_null_zero	40	27	search with cache (only 1: now rewrite H).	4.07115507126	361
Coq.btauto.AlgebraX.eval_extensional_eq_compat	40
Coq.btauto.AlgebraX.eval_suffix_compat	40
Coq.btauto.AlgebraX.poly_add_compat	40
Coq.btauto.AlgebraX.poly_mul_cst_compat	40
Coq.btauto.AlgebraX.poly_mul_mon_compat	40
Coq.btauto.AlgebraX.poly_mul_compat	40
Coq.btauto.AlgebraX.poly_add_valid_compat	40
Coq.btauto.AlgebraX.poly_mul_cst_valid_compat	40
Coq.btauto.AlgebraX.poly_mul_mon_null_compat	40
Coq.btauto.AlgebraX.poly_mul_mon_valid_compat	40
Coq.btauto.AlgebraX.poly_mul_valid_compat	40
Coq.btauto.AlgebraX.poly_add_linear_compat	40
Coq.btauto.AlgebraX.reduce_aux_eval_compat	40
Coq.btauto.AlgebraX.reduce_eval_compat	40
Coq.btauto.AlgebraX.reduce_aux_le_compat	40
Coq.btauto.AlgebraX.linear_reduce_aux	40
Coq.btauto.AlgebraX.linear_reduce	40
Coq.btauto.ReflectX.poly_of_formula_eval_compat	40
Coq.btauto.ReflectX.poly_of_formula_valid_compat	40
Coq.btauto.ReflectX.poly_of_formula_sound	40
Coq.btauto.ReflectX.reduce_poly_of_formula_sound	40
Coq.btauto.ReflectX.list_nth_base	40		search with cache ().	0.0172719955444	0
Coq.btauto.ReflectX.list_nth_succ	40
Coq.btauto.ReflectX.list_nth_nil	40
Coq.btauto.ReflectX.make_last_nth_1	40
Coq.btauto.ReflectX.make_last_nth_2	40	0.0.1.0.7	search with cache (only 1: induction n using Pos.peano_rect; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: fold (make_last n x def); only 1: rewrite list_nth_succ).	0.728166103363	214
Coq.btauto.ReflectX.list_replace_nth_1	40
Coq.btauto.ReflectX.list_replace_nth_2	40
Coq.btauto.ReflectX.boolean_witness_nonzero	40
Coq.btauto.ReflectX.reduce_poly_of_formula_sound_alt	40
Coq.funind.RecdefX.le_lt_SS	40		search with cache ().	0.0233919620514	0
Coq.funind.RecdefX.Splus_lt	40		search with cache ().	0.0982711315155	0
Coq.funind.RecdefX.SSplus_lt	40		search with cache ().	0.0208411216736	0
Coq.funind.RecdefX.max	40
Coq.QArith.QfieldX.Qsrt	40
Coq.QArith.QfieldX.Qsft	40	1.0.0.0.0.0.0.0	search with cache (only 1: constructor; only 1: exact Qfield.Qsrt; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r).	0.261959791183	12
Coq.QArith.QfieldX.Qpower_theory	40	58.5.0	search with cache (only 1: constructor; only 1: unfold Qeq; only 1: now destruct n).	30.9420750141	12801
Coq.QArith.QfieldX.ex1	40	0	search with cache (only 1: ring).	0.0355150699615	1
Coq.QArith.QfieldX.ex2	40	0	search with cache (only 1: ring).	0.0307879447937	1
Coq.QArith.QfieldX.ex3	40	0	search with cache (only 1: ring).	0.0348010063171	1
Coq.QArith.QfieldX.ex4	40		search with cache ().	0.0202581882477	0
Coq.QArith.QfieldX.ex5	40		search with cache ().	0.0106489658356	0
Coq.QArith.QfieldX.ex6	40		search with cache ().	0.0107550621033	0
Coq.QArith.QfieldX.ex7	40	0	search with cache (only 1: ring).	0.0611689090729	1
Coq.QArith.QfieldX.ex8	40		search with cache ().	0.0200209617615	0
Coq.QArith.QfieldX.ex9	40		search with cache ().	0.0150830745697	0
Coq.QArith.QfieldX.ex10	40	0	search with cache (only 1: field).	0.0615530014038	1
Coq.QArith.QfieldX.Qopp_plus	40	0	search with cache (only 1: ring).	0.0275149345398	1
Coq.QArith.QfieldX.Qopp_opp	40	0	search with cache (only 1: ring).	0.0215890407562	1
Coq.QArith.QpowerX.Qpower_positive_1	40
Coq.QArith.QpowerX.Qpower_1	40
Coq.QArith.QpowerX.Qpower_positive_0	40	0.2	search with cache (only 1: induction n; only 1: rewrite IHn).	0.0688619613647	4
Coq.QArith.QpowerX.Qpower_0	40
Coq.QArith.QpowerX.Qpower_not_0_positive	40
Coq.QArith.QpowerX.Qpower_pos_positive	40
Coq.QArith.QpowerX.Qpower_pos	40
Coq.QArith.QpowerX.Qmult_power_positive	40
Coq.QArith.QpowerX.Qmult_power	40
Coq.QArith.QpowerX.Qinv_power_positive	40	0.3.0.0.2.3	search with cache (only 1: induction n; only 1: repeat rewrite IHn; only 1: rewrite Qinv_mult_distr; only 1: rewrite Qinv_mult_distr; only 1: repeat rewrite IHn; only 1: rewrite Qinv_mult_distr).	1.3820040226	222
Coq.QArith.QpowerX.Qinv_power	40
Coq.QArith.QpowerX.Qdiv_power	40
Coq.QArith.QpowerX.Qinv_power_n	40
Coq.QArith.QpowerX.Qpower_plus_positive	40
Coq.QArith.QpowerX.Qpower_opp	40
Coq.QArith.QpowerX.Qpower_minus_positive	40
Coq.QArith.QpowerX.Qpower_plus	40
Coq.QArith.QpowerX.Qpower_plus'	40
Coq.QArith.QpowerX.Qpower_mult_positive	40
Coq.QArith.QpowerX.Qpower_mult	40
Coq.QArith.QpowerX.Zpower_Qpower	40
Coq.QArith.QpowerX.Qsqr_nonneg	40
Coq.QArith.QpowerX.Qpower_decomp	40
Coq.QArith.QabsX.Qabs_case	40
Coq.QArith.QabsX.Qabs_wd_Proper	40
Coq.QArith.QabsX.Qabs_pos	40	0.18	search with cache (only 1: rewrite <- Qmult_1_l; only 1: destruct x as [[| xn| xn] xd]).	0.251770019531	165
Coq.QArith.QabsX.Qabs_neg	40	0	search with cache (only 1: destruct x as [[| xn| xn] xd]).	0.0435860157013	1
Coq.QArith.QabsX.Qabs_nonneg	40	0	search with cache (only 1: destruct x as [[| xn| xn] xd]).	0.0696129798889	1
Coq.QArith.QabsX.Zabs_Qabs	40		search with cache ().	0.0170130729675	0
Coq.QArith.QabsX.Qabs_opp	40
Coq.QArith.QabsX.Qabs_triangle	40
Coq.QArith.QabsX.Qabs_Qmult	40
Coq.QArith.QabsX.Qabs_Qinv	40
Coq.QArith.QabsX.Qabs_Qminus	40
Coq.QArith.QabsX.Qle_Qabs	40
Coq.QArith.QabsX.Qabs_triangle_reverse	40
Coq.QArith.QabsX.Qabs_Qle_condition	40
Coq.QArith.QabsX.Qabs_diff_Qle_condition	40
Coq.QArith.QcanonX.Qred_identity	40
Coq.QArith.QcanonX.Qred_identity2	40
Coq.QArith.QcanonX.Qred_iff	40
Coq.QArith.QcanonX.Qc_is_canon	40
Coq.QArith.QcanonX.Qc_decomp	40
Coq.QArith.QcanonX.Qred_involutive	40	10.1	search with cache (only 1: apply Qred_complete; only 1: apply Qred_correct).	0.930402040482	80
Coq.QArith.QcanonX.Q2Qc_eq_iff	40
Coq.QArith.QcanonX.Qceq_alt	40
Coq.QArith.QcanonX.Qclt_alt	40		search with cache ().	0.0361800193787	0
Coq.QArith.QcanonX.Qcgt_alt	40
Coq.QArith.QcanonX.Qcle_alt	40		search with cache ().	0.0187349319458	0
Coq.QArith.QcanonX.Qcge_alt	40
Coq.QArith.QcanonX.Qc_eq_dec	40
Coq.QArith.QcanonX.Q_apart_0_1	40		search with cache ().	0.0213270187378	0
Coq.QArith.QcanonX.Qcplus_assoc	40
Coq.QArith.QcanonX.Qcplus_0_l	40	11.1	search with cache (only 1: qc; only 1: ring).	0.516175985336	198
Coq.QArith.QcanonX.Qcplus_0_r	40	12.0	search with cache (only 1: qc; only 1: ring).	0.510887861252	162
Coq.QArith.QcanonX.Qcplus_comm	40	8.0	search with cache (only 1: qc; only 1: ring).	0.099808216095	10
Coq.QArith.QcanonX.Qcopp_involutive	40
Coq.QArith.QcanonX.Qcplus_opp_r	40	22.0	search with cache (only 1: qc; only 1: ring).	1.65399694443	472
Coq.QArith.QcanonX.Qcmult_assoc	40
Coq.QArith.QcanonX.Qcmult_0_l	40	0	search with cache (only 1: qc).	0.0461950302124	1
Coq.QArith.QcanonX.Qcmult_0_r	40
Coq.QArith.QcanonX.Qcmult_1_l	40
Coq.QArith.QcanonX.Qcmult_1_r	40	8.0	search with cache (only 1: qc; only 1: unfold Qeq).	0.0719389915466	10
Coq.QArith.QcanonX.Qcmult_comm	40	7.0	search with cache (only 1: qc; only 1: red).	0.0876488685608	9
Coq.QArith.QcanonX.Qcmult_plus_distr_r	40	10.0	search with cache (only 1: qc; only 1: unfold Qeq, Qplus).	0.37665104866	52
Coq.QArith.QcanonX.Qcmult_plus_distr_l	40	11.0	search with cache (only 1: qc; only 1: unfold Qeq, Qplus).	0.430287837982	76
Coq.QArith.QcanonX.Qcmult_integral	40
Coq.QArith.QcanonX.Qcmult_integral_l	40
Coq.QArith.QcanonX.Qcmult_inv_r	40
Coq.QArith.QcanonX.Qcmult_inv_l	40	0.2.0	search with cache (only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r).	0.108622074127	5
Coq.QArith.QcanonX.Qcinv_mult_distr	40
Coq.QArith.QcanonX.Qcdiv_mult_l	40
Coq.QArith.QcanonX.Qcmult_div_r	40
Coq.QArith.QcanonX.Qcle_refl	40	1.40	search with cache (only 1: apply Qle_bool_iff; only 1: apply Zle_is_le_bool).	1.99703788757	1378
Coq.QArith.QcanonX.Qcle_antisym	40	38	search with cache (only 1: intuition).	5.4643599987	1756
Coq.QArith.QcanonX.Qcle_trans	40
Coq.QArith.QcanonX.Qclt_not_eq	40
Coq.QArith.QcanonX.Qclt_le_weak	40		search with cache ().	0.0199339389801	0
Coq.QArith.QcanonX.Qcle_lt_trans	40
Coq.QArith.QcanonX.Qclt_le_trans	40
Coq.QArith.QcanonX.Qclt_trans	40
Coq.QArith.QcanonX.Qcnot_lt_le	40	13.19.28.10	search with cache (only 1: intro Hxz; only 1: reflexivity || destruct H; only 1: unfold Qcle, Qclt; only 1: apply Z.gt_lt_iff).	20.1966331005	13080
Coq.QArith.QcanonX.Qcnot_le_lt	40
Coq.QArith.QcanonX.Qclt_not_le	40
Coq.QArith.QcanonX.Qcle_not_lt	40
Coq.QArith.QcanonX.Qcle_lt_or_eq	40
Coq.QArith.QcanonX.Qc_dec	40
Coq.QArith.QcanonX.Qclt_le_dec	40
Coq.QArith.QcanonX.Qcopp_le_compat	40
Coq.QArith.QcanonX.Qcle_minus_iff	40
Coq.QArith.QcanonX.Qclt_minus_iff	40
Coq.QArith.QcanonX.Qcplus_le_compat	40
Coq.QArith.QcanonX.Qcmult_le_compat_r	40
Coq.QArith.QcanonX.Qcmult_lt_0_le_reg_r	40
Coq.QArith.QcanonX.Qcmult_lt_compat_r	40
Coq.QArith.QcanonX.Qcpower_1	40
Coq.QArith.QcanonX.Qcpower_0	40	0.2	search with cache (only 1: induction n; only 1: auto with qarith).	0.0707840919495	4
Coq.QArith.QcanonX.Qcpower_pos	40
Coq.QArith.QcanonX.Qc_eq_bool_correct	40
Coq.QArith.QcanonX.Qcrt	40
Coq.QArith.QcanonX.Qcft	40
Coq.QArith.QcanonX.test_field	40	0.4.0.9	search with cache (only 1: unfold Qcdiv; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r).	5.6554620266	804
Coq.QArith.QcabsX.Qred_abs	40
Coq.QArith.QcabsX.Qcabs_canon	40	0.0	search with cache (only 1: destruct x as [[| a| a] d]; only 1: destruct (Pos.ggcd a d) as [x [y z]]).	0.0503590106964	2
Coq.QArith.QcabsX.Qcabs_case	40
Coq.QArith.QcabsX.Qcabs_pos	40
Coq.QArith.QcabsX.Qcabs_neg	40
Coq.QArith.QcabsX.Qcabs_nonneg	40	0.0.0.1	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qabs_case; only 1: apply (Qopp_le_compat x 0)).	0.0604708194733	5
Coq.QArith.QcabsX.Qcabs_opp	40
Coq.QArith.QcabsX.Qcabs_triangle	40
Coq.QArith.QcabsX.Qcabs_Qcmult	40
Coq.QArith.QcabsX.Qcabs_Qcminus	40
Coq.QArith.QcabsX.Qcle_Qcabs	40
Coq.QArith.QcabsX.Qcabs_triangle_reverse	40
Coq.QArith.QcabsX.Qcabs_Qcle_condition	40
Coq.QArith.QcabsX.Qcabs_diff_Qcle_condition	40
Coq.QArith.QcabsX.Qcabs_null	40
Coq.QArith.QArith_baseX.inject_Z_injective	40
Coq.QArith.QArith_baseX.Qeq_alt	40
Coq.QArith.QArith_baseX.Qlt_alt	40		search with cache ().	0.0175700187683	0
Coq.QArith.QArith_baseX.Qgt_alt	40
Coq.QArith.QArith_baseX.Qle_alt	40		search with cache ().	0.018373966217	0
Coq.QArith.QArith_baseX.Qge_alt	40
Coq.QArith.QArith_baseX.Qcompare_antisym	40
Coq.QArith.QArith_baseX.Qcompare_spec	40
Coq.QArith.QArith_baseX.Qeq_refl	40		search with cache ().	0.015172958374	0
Coq.QArith.QArith_baseX.Qeq_sym	40		search with cache ().	0.0171730518341	0
Coq.QArith.QArith_baseX.Qeq_trans	40
Coq.QArith.QArith_baseX.Q_Setoid	40
Coq.QArith.QArith_baseX.Qeq_dec	40
Coq.QArith.QArith_baseX.Qeq_bool_iff	40
Coq.QArith.QArith_baseX.Qeq_bool_eq	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Zeq_is_eq_bool).	0.217568159103	11
Coq.QArith.QArith_baseX.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0414621829987	1
Coq.QArith.QArith_baseX.Qeq_bool_neq	40
Coq.QArith.QArith_baseX.Qle_bool_iff	40
Coq.QArith.QArith_baseX.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.0422918796539	1
Coq.QArith.QArith_baseX.Qnot_eq_sym	40		search with cache ().	0.0216250419617	0
Coq.QArith.QArith_baseX.Qeq_bool_comm	40	0.1.1.0.1.1.44	search with cache (only 1: apply eq_true_iff_eq; only 1: apply Qeq_bool_iff; only 1: symmetry; only 1: apply Qeq_bool_iff; only 1: apply Qeq_bool_iff; only 1: symmetry; only 1: apply Qeq_bool_iff).	16.7240619659	11954
Coq.QArith.QArith_baseX.Qeq_bool_refl	40	0	search with cache (only 1: rewrite !Qeq_bool_iff).	0.0409708023071	1
Coq.QArith.QArith_baseX.Qeq_bool_sym	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: apply Qeq_bool_iff; only 1: rewrite !Qeq_bool_iff; only 1: apply Qeq_bool_iff; only 1: rewrite !Qeq_bool_iff; only 1: apply Qeq_bool_iff; only 1: rewrite !Qeq_bool_iff; only 1: symmetry; only 1: apply Qeq_bool_iff).	0.275518894196	13
Coq.QArith.QArith_baseX.Qeq_bool_trans	40
Coq.QArith.QArith_baseX.Qmake_Qdiv	40	21	search with cache (only 1: red).	0.256952047348	208
Coq.QArith.QArith_baseX.Qplus_comp	40
Coq.QArith.QArith_baseX.Qopp_comp	40
Coq.QArith.QArith_baseX.Qminus_comp	40
Coq.QArith.QArith_baseX.Qmult_comp	40
Coq.QArith.QArith_baseX.Qinv_comp	40
Coq.QArith.QArith_baseX.Qdiv_comp	40
Coq.QArith.QArith_baseX.Qcompare_comp	40
Coq.QArith.QArith_baseX.Qle_comp	40
Coq.QArith.QArith_baseX.Qlt_compat	40
Coq.QArith.QArith_baseX.Qeqb_comp	40
Coq.QArith.QArith_baseX.Qleb_comp	40
Coq.QArith.QArith_baseX.Q_apart_0_1	40		search with cache ().	0.0219421386719	0
Coq.QArith.QArith_baseX.Qplus_assoc	40	0	search with cache (only 1: unfold Qeq).	0.075973033905	1
Coq.QArith.QArith_baseX.Qplus_0_l	40	1	search with cache (only 1: unfold Qeq).	0.0401041507721	2
Coq.QArith.QArith_baseX.Qplus_0_r	40	1	search with cache (only 1: unfold Qeq).	0.0428869724274	2
Coq.QArith.QArith_baseX.Qplus_comm	40	4	search with cache (only 1: red).	0.053239107132	5
Coq.QArith.QArith_baseX.Qopp_involutive	40
Coq.QArith.QArith_baseX.Qplus_opp_r	40	3	search with cache (only 1: unfold Qeq).	0.0384590625763	4
Coq.QArith.QArith_baseX.Qplus_inj_r	40
Coq.QArith.QArith_baseX.Qplus_inj_l	40
Coq.QArith.QArith_baseX.Qmult_assoc	40	2	search with cache (only 1: red).	0.050882101059	3
Coq.QArith.QArith_baseX.Qmult_0_l	40		search with cache ().	0.0171420574188	0
Coq.QArith.QArith_baseX.Qmult_0_r	40	2	search with cache (only 1: unfold Qeq).	0.114418983459	12
Coq.QArith.QArith_baseX.Qmult_1_l	40
Coq.QArith.QArith_baseX.Qmult_1_r	40	0	search with cache (only 1: red).	0.0429050922394	1
Coq.QArith.QArith_baseX.Qmult_comm	40	2	search with cache (only 1: red).	1.68392109871	17
Coq.QArith.QArith_baseX.Qmult_plus_distr_r	40	9	search with cache (only 1: red).	0.40447306633	31
Coq.QArith.QArith_baseX.Qmult_plus_distr_l	40	2.1	search with cache (only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y); only 1: red).	4.43957185745	24
Coq.QArith.QArith_baseX.Qmult_integral	40
Coq.QArith.QArith_baseX.Qmult_integral_l	40
Coq.QArith.QArith_baseX.inject_Z_plus	40
Coq.QArith.QArith_baseX.inject_Z_mult	40		search with cache ().	0.0170440673828	0
Coq.QArith.QArith_baseX.inject_Z_opp	40		search with cache ().	0.0165510177612	0
Coq.QArith.QArith_baseX.Qinv_involutive	40
Coq.QArith.QArith_baseX.Qmult_inv_r	40
Coq.QArith.QArith_baseX.Qinv_mult_distr	40
Coq.QArith.QArith_baseX.Qdiv_mult_l	40
Coq.QArith.QArith_baseX.Qmult_div_r	40
Coq.QArith.QArith_baseX.Qinv_plus_distr	40	0	search with cache (only 1: unfold Qeq).	0.0455250740051	1
Coq.QArith.QArith_baseX.Qinv_minus_distr	40	0	search with cache (only 1: unfold Qeq).	0.0674920082092	1
Coq.QArith.QArith_baseX.Qmult_inj_r	40
Coq.QArith.QArith_baseX.Qmult_inj_l	40
Coq.QArith.QArith_baseX.Qle_refl	40	1	search with cache (only 1: red).	0.0371479988098	2
Coq.QArith.QArith_baseX.Qle_antisym	40
Coq.QArith.QArith_baseX.Qle_trans	40
Coq.QArith.QArith_baseX.Qlt_irrefl	40
Coq.QArith.QArith_baseX.Qlt_not_eq	40
Coq.QArith.QArith_baseX.Zle_Qle	40
Coq.QArith.QArith_baseX.Zlt_Qlt	40
Coq.QArith.QArith_baseX.Qle_lteq	40
Coq.QArith.QArith_baseX.Qlt_le_weak	40		search with cache ().	0.0209178924561	0
Coq.QArith.QArith_baseX.Qle_lt_trans	40
Coq.QArith.QArith_baseX.Qlt_le_trans	40
Coq.QArith.QArith_baseX.Qlt_trans	40
Coq.QArith.QArith_baseX.Qnot_lt_le	40
Coq.QArith.QArith_baseX.Qnot_le_lt	40
Coq.QArith.QArith_baseX.Qlt_not_le	40
Coq.QArith.QArith_baseX.Qle_not_lt	40	20.17	search with cache (only 1: apply H; only 1: apply Z.gt_lt_iff).	8.53586196899	2021
Coq.QArith.QArith_baseX.Qle_lt_or_eq	40
Coq.QArith.QArith_baseX.Q_dec	40
Coq.QArith.QArith_baseX.Qlt_le_dec	40
Coq.QArith.QArith_baseX.Qarchimedean	40
Coq.QArith.QArith_baseX.Qopp_le_compat	40
Coq.QArith.QArith_baseX.Qle_minus_iff	40
Coq.QArith.QArith_baseX.Qlt_minus_iff	40
Coq.QArith.QArith_baseX.Qplus_le_compat	40
Coq.QArith.QArith_baseX.Qplus_lt_le_compat	40
Coq.QArith.QArith_baseX.Qplus_le_l	40
Coq.QArith.QArith_baseX.Qplus_le_r	40
Coq.QArith.QArith_baseX.Qplus_lt_l	40
Coq.QArith.QArith_baseX.Qplus_lt_r	40
Coq.QArith.QArith_baseX.Qmult_le_compat_r	40
Coq.QArith.QArith_baseX.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_baseX.Qmult_le_r	40
Coq.QArith.QArith_baseX.Qmult_le_l	40
Coq.QArith.QArith_baseX.Qmult_lt_compat_r	40
Coq.QArith.QArith_baseX.Qmult_lt_r	40
Coq.QArith.QArith_baseX.Qmult_lt_l	40
Coq.QArith.QArith_baseX.Qmult_le_0_compat	40
Coq.QArith.QArith_baseX.Qinv_le_0_compat	40
Coq.QArith.QArith_baseX.Qle_shift_div_l	40
Coq.QArith.QArith_baseX.Qle_shift_inv_l	40
Coq.QArith.QArith_baseX.Qle_shift_div_r	40
Coq.QArith.QArith_baseX.Qle_shift_inv_r	40
Coq.QArith.QArith_baseX.Qinv_lt_0_compat	40
Coq.QArith.QArith_baseX.Qlt_shift_div_l	40
Coq.QArith.QArith_baseX.Qlt_shift_inv_l	40
Coq.QArith.QArith_baseX.Qlt_shift_div_r	40
Coq.QArith.QArith_baseX.Qlt_shift_inv_r	40
Coq.QArith.QArith_baseX.Qinv_lt_contravar	40
Coq.QArith.QArith_baseX.Qpower_positive_comp	40
Coq.QArith.QArith_baseX.Qpower_comp	40
Coq.QArith.QminmaxX.Q.plus_max_distr_l	40
Coq.QArith.QminmaxX.Q.plus_max_distr_r	40
Coq.QArith.QminmaxX.Q.plus_min_distr_l	40	0.0.0.0.0.6	search with cache (only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order).	1.12044501305	68
Coq.QArith.QminmaxX.Q.plus_min_distr_r	40	0.0.0.0.0.0.3	search with cache (only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order).	0.179239988327	10
Coq.QArith.QreductionX.Qred_correct	40
Coq.QArith.QreductionX.Qred_complete	40
Coq.QArith.QreductionX.Qred_eq_iff	40
Coq.QArith.QreductionX.Qred_comp_Proper	40
Coq.QArith.QreductionX.Qplus'_correct	40	0	search with cache (only 1: apply Qreduction.Qred_correct).	0.0303349494934	1
Coq.QArith.QreductionX.Qmult'_correct	40	0	search with cache (only 1: apply Qreduction.Qred_correct).	0.0299949645996	1
Coq.QArith.QreductionX.Qminus'_correct	40	0	search with cache (only 1: apply Qreduction.Qred_correct).	0.0312399864197	1
Coq.QArith.QreductionX.Qplus'_comp_Proper	40
Coq.QArith.QreductionX.Qmult'_comp_Proper	40	1	search with cache (only 1: rewrite H, H0).	0.064090013504	2
Coq.QArith.QreductionX.Qminus'_comp_Proper	40	2	search with cache (only 1: rewrite H, H0).	0.0658621788025	3
Coq.QArith.QreductionX.Qred_opp	40
Coq.QArith.QreductionX.Qred_compare	40	0.0.2.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Qcompare_comp; only 1: now rewrite !Qred_correct; only 1: now rewrite !Qred_correct).	0.177967786789	16
Coq.QArith.QreductionX.Qred_le	40	4.0	search with cache (only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: now rewrite !Qle_alt, <- Qreduction.Qred_compare).	0.623944997787	57
Coq.QArith.QreductionX.Qred_lt	40
Coq.QArith.QrealsX.IZR_nz	40	0.0.0.5	search with cache (only 1: elim Rgt_not_eq with (2 := H); only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: apply lt_0_INR, Pos2Nat.is_pos).	0.140187978745	9
Coq.QArith.QrealsX.eqR_Qeq	40
Coq.QArith.QrealsX.Qeq_eqR	40
Coq.QArith.QrealsX.Rle_Qle	40
Coq.QArith.QrealsX.Qle_Rle	40
Coq.QArith.QrealsX.Rlt_Qlt	40
Coq.QArith.QrealsX.Qlt_Rlt	40
Coq.QArith.QrealsX.Q2R_plus	40
Coq.QArith.QrealsX.Q2R_mult	40
Coq.QArith.QrealsX.Q2R_opp	40
Coq.QArith.QrealsX.Q2R_minus	40
Coq.QArith.QrealsX.Q2R_inv	40
Coq.QArith.QrealsX.Q2R_div	40
Coq.QArith.QOrderedTypeX.Q_as_OT.lt_strorder	40	1.0.0.12.6	search with cache (only 1: split; only 1: intro; only 1: apply Z.lt_irrefl; only 1: red; only 1: apply Qle_lt_trans with y).	2.59956908226	646
Coq.QArith.QOrderedTypeX.Q_as_OT.lt_compat	40
Coq.QArith.QroundX.Qopp_lt_compat	40
Coq.QArith.QroundX.Qfloor_Z	40	11	search with cache (only 1: apply Z.div_1_r).	0.112784147263	39
Coq.QArith.QroundX.Qceiling_Z	40
Coq.QArith.QroundX.Qfloor_le	40
Coq.QArith.QroundX.Qle_ceiling	40
Coq.QArith.QroundX.Qle_floor_ceiling	40	2.2.1.1.0	search with cache (only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: rewrite Qopp_involutive; only 1: auto with *).	1.013048172	94
Coq.QArith.QroundX.Qlt_floor	40
Coq.QArith.QroundX.Qceiling_lt	40
Coq.QArith.QroundX.Qfloor_resp_le	40
Coq.QArith.QroundX.Qceiling_resp_le	40
Coq.QArith.QroundX.Qfloor_comp_Proper	40
Coq.QArith.QroundX.Qceiling_comp_Proper	40
Coq.QArith.QroundX.Zdiv_Qdiv	40
Coq.Classes.DecidableClassX.Decidable_sound	40
Coq.Classes.DecidableClassX.Decidable_complete	40
Coq.Classes.DecidableClassX.Decidable_sound_alt	40	4.254	search with cache (only 1: destruct H; only 1: Bool.destr_bool).	18.0504620075	45046
Coq.Classes.DecidableClassX.Decidable_complete_alt	40	255	search with cache (only 1: destruct H).	12.3139231205	41660
Coq.Classes.DecidableClassX.Decidable_eq_bool_obligation_1	40	4.4	search with cache (only 1: destr_bool; only 1: destr_bool).	0.0480787754059	10
Coq.Classes.DecidableClassX.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClassX.Decidable_le_nat_obligation_1	40	10.10	search with cache (only 1: apply Nat.leb_le; only 1: apply Nat.leb_le).	1.1625020504	374
Coq.Classes.DecidableClassX.Decidable_eq_Z_obligation_1	40
Coq.Classes.RelationClassesX.complement_inverse	40		search with cache ().	0.0151281356812	0
Coq.Classes.RelationClassesX.StrictOrder_Asymmetric	40	12	search with cache (only 1: firstorder).	0.0662469863892	46
Coq.Classes.RelationClassesX.subrelation_symmetric	40	0	search with cache (only 1: hnf).	0.0462110042572	1
Coq.Classes.RelationClassesX.flip_Reflexive	40		search with cache ().	0.0136501789093	0
Coq.Classes.RelationClassesX.flip_Antisymmetric	40	1	search with cache (only 1: hnf).	0.0607199668884	2
Coq.Classes.RelationClassesX.flip_PreOrder	40	4	search with cache (only 1: firstorder).	0.174879074097	5
Coq.Classes.RelationClassesX.flip_StrictOrder	40	0.4	search with cache (only 1: unfold flip in *; only 1: firstorder).	0.174947977066	6
Coq.Classes.RelationClassesX.flip_PER	40	6	search with cache (only 1: firstorder).	0.178853034973	7
Coq.Classes.RelationClassesX.flip_Equivalence	40	5	search with cache (only 1: firstorder).	0.121662139893	6
Coq.Classes.RelationClassesX.complement_Irreflexive	40	7	search with cache (only 1: induction 1).	0.0534651279449	12
Coq.Classes.RelationClassesX.complement_Symmetric	40	12	search with cache (only 1: firstorder).	0.475857019424	103
Coq.Classes.RelationClassesX.predicate_equivalence_equivalence_obligation_1	40	3.1	search with cache (only 1: induction l; only 1: firstorder).	0.0721211433411	6
Coq.Classes.RelationClassesX.predicate_equivalence_equivalence_obligation_2	40	0.7.7.0	search with cache (only 1: induction l; only 1: destruct H; only 1: destruct H; only 1: firstorder).	1.4513399601	272
Coq.Classes.RelationClassesX.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClassesX.predicate_implication_preorder_obligation_1	40	3.5	search with cache (only 1: induction l; only 1: firstorder).	0.0649561882019	10
Coq.Classes.RelationClassesX.predicate_implication_preorder_obligation_2	40
Coq.Classes.RelationClassesX.relation_equivalence_equivalence	40	7.4.1	search with cache (only 1: compute; only 1: split; only 1: intros Hz).	6.01650881767	321
Coq.Classes.RelationClassesX.relation_implication_preorder	40	2.2.9	search with cache (only 1: constructor 1; only 1: intros x y H; only 1: red).	1.69526600838	125
Coq.Classes.RelationClassesX.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0721790790558	1
Coq.Classes.RelationClassesX.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.171893119812	1
Coq.Classes.RelationClassesX.subrelation_partial_order_obligation_1	40	3.3	search with cache (only 1: firstorder; only 1: firstorder).	0.349477052689	8
Coq.Classes.SetoidClassX.setoid_refl	40		search with cache ().	0.0140829086304	0
Coq.Classes.SetoidClassX.setoid_sym	40		search with cache ().	0.0153729915619	0
Coq.Classes.SetoidClassX.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0278520584106	1
Coq.Classes.SetoidClassX.nequiv_equiv_trans	40	18.24	search with cache (only 1: destruct H; only 1: firstorder).	5.17188191414	1665
Coq.Classes.SetoidClassX.equiv_nequiv_trans	40	29	search with cache (only 1: rewrite H0).	1.45952892303	862
Coq.Classes.RelationPairsX.RelCompFun_Reflexive	40	0	search with cache (only 1: firstorder).	0.0262439250946	1
Coq.Classes.RelationPairsX.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0360779762268	1
Coq.Classes.RelationPairsX.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0652480125427	1
Coq.Classes.RelationPairsX.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0296981334686	1
Coq.Classes.RelationPairsX.RelProd_Reflexive	40		search with cache ().	0.0309989452362	0
Coq.Classes.RelationPairsX.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.178791999817	1
Coq.Classes.RelationPairsX.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.41686296463	1
Coq.Classes.RelationPairsX.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.107721805573	1
Coq.Classes.RelationPairsX.SndRel_ProdRel	40	1.10	search with cache (only 1: unfold relation_equivalence in *; only 1: firstorder).	0.437186956406	47
Coq.Classes.RelationPairsX.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0505089759827	1
Coq.Classes.RelationPairsX.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.04576420784	1
Coq.Classes.RelationPairsX.pair_compat	40		search with cache ().	0.0186238288879	0
Coq.Classes.RelationPairsX.fst_compat	40	0	search with cache (only 1: firstorder).	0.0353670120239	1
Coq.Classes.RelationPairsX.snd_compat	40	0	search with cache (only 1: firstorder).	0.033725976944	1
Coq.Classes.RelationPairsX.RelCompFun_compat	40	0	search with cache (only 1: compute in *).	0.0468020439148	1
Coq.Classes.EquivalenceX.equiv_transitive_obligation_1	40	47	search with cache (only 1: now rewrite H).	3.96748685837	3917
Coq.Classes.EquivalenceX.respecting_equiv_obligation_3	40	27.0	search with cache (only 1: intros f g h H H' x y Rxy; only 1: firstorder).	7.76342892647	1151
Coq.Classes.EquivalenceX.pointwise_reflexive	40		search with cache ().	0.0261158943176	0
Coq.Classes.EquivalenceX.pointwise_symmetric	40		search with cache ().	0.0341439247131	0
Coq.Classes.EquivalenceX.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.113839864731	1
Coq.Classes.EquivalenceX.pointwise_equivalence	40	0.0	search with cache (only 1: split; only 1: apply _).	0.110424041748	2
Coq.Classes.EquivDecX.unit_eqdec_obligation_1	40	49.94	search with cache (only 1: destruct y; only 1: destruct x).	26.7378880978	48607
Coq.Classes.EquivDecX.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDecX.list_eqdec_obligation_5	40
Coq.Classes.Morphisms_RelationsX.relation_conjunction_morphism	40	0.1	search with cache (only 1: unfold relation_equivalence in *; only 1: compute).	0.361729860306	3
Coq.Classes.Morphisms_RelationsX.relation_disjunction_morphism	40	0.2	search with cache (only 1: intros x; only 1: firstorder).	0.531764030457	12
Coq.Classes.Morphisms_RelationsX.predicate_equivalence_pointwise	40		search with cache ().	0.0212261676788	0
Coq.Classes.Morphisms_RelationsX.predicate_implication_pointwise	40		search with cache ().	0.0212590694427	0
Coq.Classes.Morphisms_RelationsX.relation_equivalence_pointwise	40		search with cache ().	0.0802330970764	0
Coq.Classes.Morphisms_RelationsX.subrelation_pointwise	40		search with cache ().	0.0748009681702	0
Coq.Classes.Morphisms_RelationsX.flip_pointwise_relation	40		search with cache ().	0.0238149166107	0
Coq.Classes.CRelationClassesX.complement_inverse	40		search with cache ().	0.015958070755	0
Coq.Classes.CRelationClassesX.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClassesX.subrelation_symmetric	40	8	search with cache (only 1: compute).	0.052570104599	9
Coq.Classes.CRelationClassesX.flip_Reflexive	40		search with cache ().	0.0158431529999	0
Coq.Classes.CRelationClassesX.flip_Antisymmetric	40	1	search with cache (only 1: intros x).	0.0582721233368	2
Coq.Classes.CRelationClassesX.flip_PreOrder	40	11.1.3.2.5.8	search with cache (only 1: compute; only 1: split; only 1: hnf; only 1: apply H; only 1: hnf; only 1: firstorder).	5.16734910011	1977
Coq.Classes.CRelationClassesX.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.137957811356	2
Coq.Classes.CRelationClassesX.flip_PER	40	58	search with cache (only 1: firstorder).	2.81223106384	1725
Coq.Classes.CRelationClassesX.flip_Equivalence	40	2	search with cache (only 1: firstorder).	0.118341207504	3
Coq.Classes.CRelationClassesX.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.0315508842468	2
Coq.Classes.CRelationClassesX.complement_Symmetric	40	2.0	search with cache (only 1: intros x y H'; only 1: hnf).	0.0604040622711	4
Coq.Classes.CRelationClassesX.iffT_Reflexive	40		search with cache ().	0.0180690288544	0
Coq.Classes.CRelationClassesX.iffT_Symmetric	40		search with cache ().	0.0241219997406	0
Coq.Classes.CRelationClassesX.iffT_Transitive	40	0.1	search with cache (only 1: intros a b; only 1: firstorder).	0.13911318779	3
Coq.Classes.CRelationClassesX.relation_equivalence_equivalence	40	0.0.0.0.0.0.21.22	search with cache (only 1: compute; only 1: split; only 1: firstorder; only 1: intros x y H; only 1: specialize (X x0 y0); only 1: specialize (X0 x0 y0); only 1: specialize (X x0 y0); only 1: specialize (X0 x0 y0)).	9.58655691147	1696
Coq.Classes.CRelationClassesX.relation_implication_preorder	40	4	search with cache (only 1: firstorder).	0.131376981735	5
Coq.Classes.CRelationClassesX.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0715408325195	1
Coq.Classes.CRelationClassesX.PartialOrder_inverse	40	0.5	search with cache (only 1: pose proof (@RelationClasses.partial_order_equivalence _ _ _ _ _) as poe; only 1: firstorder).	0.282134056091	7
Coq.Classes.SetoidDecX.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDecX.bool_function_eqdec_obligation_1	40
Coq.PArith.BinPosX.Pos.eq_dec	40
Coq.PArith.BinPosX.Pos.xI_succ_xO	40		search with cache ().	0.00825309753418	0
Coq.PArith.BinPosX.Pos.succ_discr	40	1	search with cache (only 1: induction p).	0.0273520946503	2
Coq.PArith.BinPosX.Pos.pred_double_spec	40		search with cache ().	0.00765919685364	0
Coq.PArith.BinPosX.Pos.succ_pred_double	40	1	search with cache (only 1: induction p).	0.0228209495544	2
Coq.PArith.BinPosX.Pos.pred_double_succ	40	2	search with cache (only 1: induction p).	0.022036075592	3
Coq.PArith.BinPosX.Pos.double_succ	40		search with cache ().	0.00736308097839	0
Coq.PArith.BinPosX.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0167121887207	1
Coq.PArith.BinPosX.Pos.succ_not_1	40	0	search with cache (only 1: destruct p).	0.0236518383026	1
Coq.PArith.BinPosX.Pos.pred_succ	40	1.0	search with cache (only 1: destruct p; only 1: apply BinPos.Pos.pred_double_succ).	0.0943939685822	3
Coq.PArith.BinPosX.Pos.succ_pred_or	40	1.0.0	search with cache (only 1: destruct p; only 1: right; only 1: induction p).	0.115690946579	4
Coq.PArith.BinPosX.Pos.succ_pred	40	0.0	search with cache (only 1: destruct p; only 1: apply BinPos.Pos.succ_pred_double).	0.0983321666718	2
Coq.PArith.BinPosX.Pos.succ_inj	40
Coq.PArith.BinPosX.Pos.pred_N_succ	40	1.0.0	search with cache (only 1: destruct p; only 1: f_equal; only 1: apply BinPos.Pos.pred_double_succ).	0.0362429618835	4
Coq.PArith.BinPosX.Pos.add_1_r	40	2	search with cache (only 1: now destruct p).	0.0184059143066	3
Coq.PArith.BinPosX.Pos.add_1_l	40	9	search with cache (only 1: induction p).	0.0664758682251	22
Coq.PArith.BinPosX.Pos.add_carry_spec	40
Coq.PArith.BinPosX.Pos.add_comm	40
Coq.PArith.BinPosX.Pos.add_succ_r	40
Coq.PArith.BinPosX.Pos.add_succ_l	40	0.1	search with cache (only 1: rewrite BinPos.Pos.add_comm, (BinPos.Pos.add_comm p); only 1: apply BinPos.Pos.add_succ_r).	0.0413010120392	3
Coq.PArith.BinPosX.Pos.add_no_neutral	40
Coq.PArith.BinPosX.Pos.add_carry_add	40	0.1	search with cache (only 1: apply BinPos.Pos.succ_inj; only 1: now rewrite <- 2!BinPos.Pos.add_carry_spec).	0.130907058716	3
Coq.PArith.BinPosX.Pos.add_reg_r	40
Coq.PArith.BinPosX.Pos.add_reg_l	40
Coq.PArith.BinPosX.Pos.add_cancel_r	40
Coq.PArith.BinPosX.Pos.add_cancel_l	40	53	search with cache (only 1: apply BinPos.Pos.add_reg_l with (1 := H)).	6.63726496696	4697
Coq.PArith.BinPosX.Pos.add_carry_reg_r	40	0.0	search with cache (only 1: apply BinPos.Pos.add_reg_r with (r := r); only 1: now apply BinPos.Pos.add_carry_add).	0.101761102676	2
Coq.PArith.BinPosX.Pos.add_carry_reg_l	40	0.5.0	search with cache (only 1: apply BinPos.Pos.add_reg_r with (r := p); only 1: rewrite (BinPos.Pos.add_comm r), (BinPos.Pos.add_comm q); only 1: now apply add_carry_add).	0.176988124847	17
Coq.PArith.BinPosX.Pos.add_assoc	40
Coq.PArith.BinPosX.Pos.add_xO	40		search with cache ().	0.00946688652039	0
Coq.PArith.BinPosX.Pos.add_xI_pred_double	40
Coq.PArith.BinPosX.Pos.add_xO_pred_double	40
Coq.PArith.BinPosX.Pos.add_diag	40	0.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: now rewrite ?BinPos.Pos.add_carry_spec, ?IHp).	0.036731004715	3
Coq.PArith.BinPosX.Pos.peano_rect_succ	40
Coq.PArith.BinPosX.Pos.peano_rect_base	40		search with cache ().	0.0114579200745	0
Coq.PArith.BinPosX.Pos.peano_case	40	0	search with cache (only 1: apply BinPos.Pos.peano_ind).	0.0253610610962	1
Coq.PArith.BinPosX.Pos.eq_dep_eq_positive	40	31	search with cache (only 1: auto with *).	3.82032704353	3033
Coq.PArith.BinPosX.Pos.PeanoViewUnique	40
Coq.PArith.BinPosX.Pos.peano_equiv	40
Coq.PArith.BinPosX.Pos.mul_1_l	40		search with cache ().	0.0132420063019	0
Coq.PArith.BinPosX.Pos.mul_1_r	40	3	search with cache (only 1: induction p).	0.0307049751282	4
Coq.PArith.BinPosX.Pos.mul_xO_r	40	0	search with cache (only 1: induction p).	0.106686115265	1
Coq.PArith.BinPosX.Pos.mul_xI_r	40	0.0.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: f_equal; only 1: now rewrite IHp, 2!BinPos.Pos.add_assoc, (BinPos.Pos.add_comm p)).	0.165884017944	4
Coq.PArith.BinPosX.Pos.mul_comm	40
Coq.PArith.BinPosX.Pos.mul_add_distr_l	40
Coq.PArith.BinPosX.Pos.mul_add_distr_r	40	1.0	search with cache (only 1: rewrite 3!(BinPos.Pos.mul_comm _ r); only 1: apply BinPos.Pos.mul_add_distr_l).	0.0408599376678	3
Coq.PArith.BinPosX.Pos.mul_assoc	40	0.1.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: rewrite ?IHp; only 1: now rewrite BinPos.Pos.mul_add_distr_r).	0.0742111206055	5
Coq.PArith.BinPosX.Pos.mul_succ_l	40	2.1.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: now rewrite IHp, BinPos.Pos.add_assoc, BinPos.Pos.add_diag, <- BinPos.Pos.add_xO; only 1: symmetry; only 1: apply BinPos.Pos.add_diag).	0.103891134262	13
Coq.PArith.BinPosX.Pos.mul_succ_r	40	5.3.0	search with cache (only 1: rewrite BinPos.Pos.mul_comm, BinPos.Pos.mul_succ_l; only 1: f_equal; only 1: apply BinPos.Pos.mul_comm).	0.301896095276	45
Coq.PArith.BinPosX.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPosX.Pos.mul_xO_discr	40
Coq.PArith.BinPosX.Pos.mul_reg_r	40
Coq.PArith.BinPosX.Pos.mul_reg_l	40
Coq.PArith.BinPosX.Pos.mul_cancel_r	40
Coq.PArith.BinPosX.Pos.mul_cancel_l	40
Coq.PArith.BinPosX.Pos.mul_eq_1_l	40	0	search with cache (only 1: now destruct p, q).	0.0342710018158	1
Coq.PArith.BinPosX.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0332109928131	1
Coq.PArith.BinPosX.Pos.square_xO	40	0	search with cache (only 1: now rewrite BinPos.Pos.mul_comm).	0.0205111503601	1
Coq.PArith.BinPosX.Pos.square_xI	40	0.0.0.0	search with cache (only 1: rewrite BinPos.Pos.mul_comm; only 1: f_equal; only 1: rewrite BinPos.Pos.add_assoc, BinPos.Pos.add_diag; only 1: now rewrite BinPos.Pos.add_comm).	0.0609638690948	4
Coq.PArith.BinPosX.Pos.iter_swap_gen	40
Coq.PArith.BinPosX.Pos.iter_swap	40	0.1	search with cache (only 1: symmetry; only 1: now apply BinPos.Pos.iter_swap_gen).	0.033586025238	3
Coq.PArith.BinPosX.Pos.iter_succ	40
Coq.PArith.BinPosX.Pos.iter_succ_r	40	0	search with cache (only 1: now rewrite BinPos.Pos.iter_succ, BinPos.Pos.iter_swap).	0.025102853775	1
Coq.PArith.BinPosX.Pos.iter_add	40
Coq.PArith.BinPosX.Pos.iter_ind	40	1.15	search with cache (only 1: induction p using peano_rect; only 1: rewrite BinPos.Pos.iter_succ).	1.31598591805	417
Coq.PArith.BinPosX.Pos.iter_invariant	40	0	search with cache (only 1: apply BinPos.Pos.iter_ind with (P := fun _ => Inv)).	0.106004953384	1
Coq.PArith.BinPosX.Pos.pow_1_r	40	3.0	search with cache (only 1: unfold BinPos.Pos.pow; only 1: induction p).	0.116193056107	5
Coq.PArith.BinPosX.Pos.pow_succ_r	40	0.0	search with cache (only 1: unfold BinPos.Pos.pow; only 1: now rewrite BinPos.Pos.iter_succ).	0.0307328701019	2
Coq.PArith.BinPosX.Pos.square_spec	40
Coq.PArith.BinPosX.Pos.sub_mask_succ_r	40
Coq.PArith.BinPosX.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPosX.Pos.sub_mask_spec	40
Coq.PArith.BinPosX.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPosX.Pos.sub_mask_diag	40	2	search with cache (only 1: now apply BinPos.Pos.sub_mask_nul_iff).	0.0261039733887	3
Coq.PArith.BinPosX.Pos.sub_mask_add	40
Coq.PArith.BinPosX.Pos.sub_mask_add_diag_l	40	0.1.0.0.2.0	search with cache (only 1: case BinPos.Pos.sub_mask_spec; only 1: rewrite BinPos.Pos.add_comm in H; only 1: elim (BinPos.Pos.add_no_neutral _ _ H); only 1: apply BinPos.Pos.add_cancel_l in H; only 1: rewrite <- BinPos.Pos.add_assoc, BinPos.Pos.add_comm in H; only 1: elim (BinPos.Pos.add_no_neutral _ _ H)).	0.165964841843	9
Coq.PArith.BinPosX.Pos.sub_mask_pos_iff	40	0.5	search with cache (only 1: apply BinPos.Pos.sub_mask_add; only 1: apply BinPos.Pos.sub_mask_add_diag_l).	0.15114402771	15
Coq.PArith.BinPosX.Pos.sub_mask_add_diag_r	40	0.1.0.4.1.0	search with cache (only 1: case BinPos.Pos.sub_mask_spec; only 1: symmetry in H; only 1: rewrite BinPos.Pos.add_comm in H; only 1: elim (BinPos.Pos.add_no_neutral _ _ H); only 1: rewrite <- BinPos.Pos.add_assoc, BinPos.Pos.add_comm in H; only 1: elim (BinPos.Pos.add_no_neutral _ _ H)).	0.992928981781	163
Coq.PArith.BinPosX.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPosX.Pos.eqb_eq	40
Coq.PArith.BinPosX.Pos.ltb_lt	40
Coq.PArith.BinPosX.Pos.leb_le	40
Coq.PArith.BinPosX.Pos.compare_cont_spec	40
Coq.PArith.BinPosX.Pos.compare_cont_Eq	40
Coq.PArith.BinPosX.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPosX.Pos.compare_cont_Lt_Lt	40
Coq.PArith.BinPosX.Pos.compare_cont_Gt_Lt	40
Coq.PArith.BinPosX.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPosX.Pos.compare_cont_Lt_not_Lt	40
Coq.PArith.BinPosX.Pos.compare_cont_Lt_not_Gt	40
Coq.PArith.BinPosX.Pos.compare_cont_Gt_not_Lt	40
Coq.PArith.BinPosX.Pos.compare_cont_Gt_not_Gt	40
Coq.PArith.BinPosX.Pos.compare_xO_xO	40		search with cache ().	0.0109770298004	0
Coq.PArith.BinPosX.Pos.compare_xI_xI	40		search with cache ().	0.0112290382385	0
Coq.PArith.BinPosX.Pos.compare_xI_xO	40	2	search with cache (only 1: exact (BinPos.Pos.compare_cont_spec p q Gt)).	0.184036016464	30
Coq.PArith.BinPosX.Pos.compare_xO_xI	40	2	search with cache (only 1: exact (BinPos.Pos.compare_cont_spec p q Lt)).	0.194097995758	23
Coq.PArith.BinPosX.Pos.compare_sub_mask	40
Coq.PArith.BinPosX.Pos.lt_iff_add	40
Coq.PArith.BinPosX.Pos.gt_iff_add	40
Coq.PArith.BinPosX.Pos.compare_cont_refl	40	3.1.0	search with cache (only 1: rewrite BinPos.Pos.compare_cont_spec; only 1: unfold compare; only 1: induction p).	0.0375940799713	7
Coq.PArith.BinPosX.Pos.compare_cont_antisym	40
Coq.PArith.BinPosX.Pos.compare_eq_iff	40
Coq.PArith.BinPosX.Pos.compare_antisym	40	0.0	search with cache (only 1: unfold BinPos.Pos.compare; only 1: now rewrite BinPos.Pos.compare_cont_antisym).	0.0336470603943	2
Coq.PArith.BinPosX.Pos.compare_lt_iff	40		search with cache ().	0.0135569572449	0
Coq.PArith.BinPosX.Pos.compare_le_iff	40		search with cache ().	0.015438079834	0
Coq.PArith.BinPosX.Pos.gt_lt_iff	40
Coq.PArith.BinPosX.Pos.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0394170284271	2
Coq.PArith.BinPosX.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0249907970428	1
Coq.PArith.BinPosX.Pos.ge_le_iff	40
Coq.PArith.BinPosX.Pos.ge_le	40	2	search with cache (only 1: apply BinPos.Pos.ge_le_iff).	0.0580739974976	20
Coq.PArith.BinPosX.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0255451202393	1
Coq.PArith.BinPosX.Pos.compare_succ_r	40
Coq.PArith.BinPosX.Pos.compare_succ_l	40
Coq.PArith.BinPosX.Pos.lt_succ_r	40
Coq.PArith.BinPosX.Pos.lt_succ_diag_r	40	1.0.10	search with cache (only 1: rewrite BinPos.Pos.lt_iff_add; only 1: exists 1; only 1: now rewrite BinPos.Pos.add_1_r).	3.96320199966	848
Coq.PArith.BinPosX.Pos.compare_succ_succ	40
Coq.PArith.BinPosX.Pos.le_1_l	40	1.1.0.0.0.0.0.0	search with cache (only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: unfold le, ge; only 1: apply BinPos.Pos.compare_succ_l || apply BinPos.Pos.compare_succ_r || now destruct p || now destruct q).	0.181082010269	17
Coq.PArith.BinPosX.Pos.nlt_1_r	40	6	search with cache (only 1: induction p as [| p IHp| ]).	0.0510869026184	12
Coq.PArith.BinPosX.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0918188095093	27
Coq.PArith.BinPosX.Pos.le_nlt	40
Coq.PArith.BinPosX.Pos.lt_nle	40
Coq.PArith.BinPosX.Pos.lt_le_incl	40		search with cache ().	0.0116457939148	0
Coq.PArith.BinPosX.Pos.lt_lt_succ	40	60	search with cache (only 1: apply BinInt.Z.lt_succ_r).	24.9036929607	10047
Coq.PArith.BinPosX.Pos.succ_lt_mono	40
Coq.PArith.BinPosX.Pos.succ_le_mono	40
Coq.PArith.BinPosX.Pos.lt_trans	40	25	search with cache (only 1: BinPos.Pos.Private_Tac.order).	4.66948509216	680
Coq.PArith.BinPosX.Pos.lt_ind	40
Coq.PArith.BinPosX.Pos.lt_strorder	40	35	search with cache (only 1: intuition).	1.10790014267	621
Coq.PArith.BinPosX.Pos.lt_compat	40	0	search with cache (only 1: intros x x' Exx' y y' Eyy').	0.096508026123	1
Coq.PArith.BinPosX.Pos.lt_total	40	2	search with cache (only 1: case (BinPos.Pos.compare_spec p q)).	0.319733858109	3
Coq.PArith.BinPosX.Pos.le_refl	40		search with cache ().	0.0116758346558	0
Coq.PArith.BinPosX.Pos.le_lt_trans	40	33	search with cache (only 1: BinPos.Pos.Private_Tac.order).	13.1238439083	2188
Coq.PArith.BinPosX.Pos.lt_le_trans	40	25	search with cache (only 1: BinPos.Pos.Private_Tac.order).	13.5297718048	2107
Coq.PArith.BinPosX.Pos.le_trans	40	24.1	search with cache (only 1: apply le_lteq in H; only 1: BinPos.Pos.Private_Tac.order).	30.3500111103	4210
Coq.PArith.BinPosX.Pos.le_succ_l	40
Coq.PArith.BinPosX.Pos.le_antisym	40
Coq.PArith.BinPosX.Pos.le_preorder	40	7.17	search with cache (only 1: compute; only 1: now intuition).	1.01006793976	334
Coq.PArith.BinPosX.Pos.le_partorder	40	5.12.10	search with cache (only 1: intros E1; only 1: destruct H; only 1: now apply BinPos.Pos.le_antisym).	13.3213880062	3137
Coq.PArith.BinPosX.Pos.add_compare_mono_l	40
Coq.PArith.BinPosX.Pos.add_compare_mono_r	40	0.1	search with cache (only 1: rewrite 2!(BinPos.Pos.add_comm _ p); only 1: rewrite BinPos.Pos.add_compare_mono_l).	0.0366368293762	3
Coq.PArith.BinPosX.Pos.lt_add_diag_r	40
Coq.PArith.BinPosX.Pos.add_lt_mono_l	40
Coq.PArith.BinPosX.Pos.add_lt_mono_r	40
Coq.PArith.BinPosX.Pos.add_lt_mono	40	2.0.0.0.3	search with cache (only 1: apply BinPos.Pos.lt_trans with (p + s); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: unfold lt; only 1: rewrite BinPos.Pos.add_compare_mono_r).	0.407510042191	54
Coq.PArith.BinPosX.Pos.add_le_mono_l	40
Coq.PArith.BinPosX.Pos.add_le_mono_r	40
Coq.PArith.BinPosX.Pos.add_le_mono	40	1.2.2	search with cache (only 1: apply BinPos.Pos.le_trans with (p + s); only 1: now apply BinPos.Pos.add_le_mono_l; only 1: now apply BinPos.Pos.add_le_mono_r).	0.137100934982	23
Coq.PArith.BinPosX.Pos.mul_compare_mono_l	40
Coq.PArith.BinPosX.Pos.mul_compare_mono_r	40	0.5.2	search with cache (only 1: revert q r; only 1: rewrite 2!(BinPos.Pos.mul_comm _ p); only 1: apply BinPos.Pos.mul_compare_mono_l).	0.496290922165	58
Coq.PArith.BinPosX.Pos.mul_lt_mono_l	40
Coq.PArith.BinPosX.Pos.mul_lt_mono_r	40
Coq.PArith.BinPosX.Pos.mul_lt_mono	40
Coq.PArith.BinPosX.Pos.mul_le_mono_l	40
Coq.PArith.BinPosX.Pos.mul_le_mono_r	40
Coq.PArith.BinPosX.Pos.mul_le_mono	40	4.7.5	search with cache (only 1: apply BinPos.Pos.le_trans with (p * s); only 1: now apply BinPos.Pos.mul_le_mono_l; only 1: now apply BinPos.Pos.mul_le_mono_r).	2.15668296814	500
Coq.PArith.BinPosX.Pos.lt_add_r	40	3	search with cache (only 1: rewrite lt_iff_add).	0.0281209945679	4
Coq.PArith.BinPosX.Pos.lt_not_add_l	40	4.5.14	search with cache (only 1: elim (lt_irrefl p); only 1: apply lt_trans with (p + q); only 1: rewrite lt_iff_add).	1.76058697701	606
Coq.PArith.BinPosX.Pos.pow_gt_1	40	0.0.15.1.0.0.0	search with cache (only 1: induction p using BinPos.Pos.peano_ind; only 1: now rewrite BinPos.Pos.pow_1_r; only 1: rewrite BinPos.Pos.pow_succ_r; only 1: apply BinPos.Pos.lt_trans with (n * 1); only 1: rewrite BinPos.Pos.mul_comm; only 1: destruct H; only 1: now apply BinPos.Pos.mul_lt_mono_l).	9.37116193771	2691
Coq.PArith.BinPosX.Pos.sub_1_r	40	1	search with cache (only 1: now destruct p).	0.0253820419312	2
Coq.PArith.BinPosX.Pos.pred_sub	40	1	search with cache (only 1: now destruct p).	0.0231349468231	2
Coq.PArith.BinPosX.Pos.sub_succ_r	40	0.0.0	search with cache (only 1: unfold BinPos.Pos.sub; only 1: rewrite BinPos.Pos.sub_mask_succ_r, BinPos.Pos.sub_mask_carry_spec; only 1: destruct (BinPos.Pos.sub_mask p q) as [| [r| r| ]| ]).	0.0551910400391	3
Coq.PArith.BinPosX.Pos.sub_mask_pos'	40
Coq.PArith.BinPosX.Pos.sub_mask_pos	40	5	search with cache (only 1: destruct (BinPos.Pos.sub_mask_pos' p q H) as (r, (Hr, _))).	0.0290398597717	6
Coq.PArith.BinPosX.Pos.sub_add	40	4.5.2.0.3	search with cache (only 1: destruct (BinPos.Pos.sub_mask_pos p q H) as (r, U); only 1: unfold BinPos.Pos.sub; only 1: rewrite U; only 1: rewrite BinPos.Pos.add_comm; only 1: apply sub_mask_add).	6.33965182304	1251
Coq.PArith.BinPosX.Pos.add_sub	40	4.3.9.6.1	search with cache (only 1: apply BinPos.Pos.add_reg_r with q; only 1: symmetry; only 1: rewrite BinPos.Pos.add_comm; only 1: rewrite BinPos.Pos.sub_add; only 1: auto using lt_add_r).	17.7308750153	4748
Coq.PArith.BinPosX.Pos.mul_sub_distr_l	40	3.1.0.0.0	search with cache (only 1: apply BinPos.Pos.add_reg_r with (p * r); only 1: rewrite <- BinPos.Pos.mul_add_distr_l; only 1: rewrite BinPos.Pos.sub_add; only 1: rewrite BinPos.Pos.sub_add; only 1: now apply mul_lt_mono_l).	0.163807868958	11
Coq.PArith.BinPosX.Pos.mul_sub_distr_r	40	2.3	search with cache (only 1: rewrite 3!(BinPos.Pos.mul_comm _ r); only 1: now apply BinPos.Pos.mul_sub_distr_l).	0.186270952225	27
Coq.PArith.BinPosX.Pos.sub_lt_mono_l	40
Coq.PArith.BinPosX.Pos.sub_compare_mono_l	40	1.1.0.3	search with cache (only 1: case (BinPos.Pos.compare_spec r q); only 1: apply BinPos.Pos.compare_refl; only 1: apply BinPos.Pos.sub_lt_mono_l; only 1: apply BinPos.Pos.lt_gt, BinPos.Pos.sub_lt_mono_l).	0.18582701683	9
Coq.PArith.BinPosX.Pos.sub_compare_mono_r	40	7	search with cache (only 1: rewrite <- (BinPos.Pos.add_compare_mono_r p), 2!BinPos.Pos.sub_add).	0.161941051483	17
Coq.PArith.BinPosX.Pos.sub_lt_mono_r	40
Coq.PArith.BinPosX.Pos.sub_decr	40	6.0.0.9	search with cache (only 1: apply BinPos.Pos.add_lt_mono_r with m; only 1: rewrite BinPos.Pos.sub_add; only 1: destruct H; only 1: apply BinPos.Pos.lt_add_r).	1.11079192162	364
Coq.PArith.BinPosX.Pos.add_sub_assoc	40
Coq.PArith.BinPosX.Pos.sub_add_distr	40
Coq.PArith.BinPosX.Pos.sub_sub_distr	40
Coq.PArith.BinPosX.Pos.sub_xO_xO	40	0.0	search with cache (only 1: unfold BinPos.Pos.sub; only 1: now destruct (BinPos.Pos.sub_mask_pos n m H) as (p, ->)).	0.041393995285	2
Coq.PArith.BinPosX.Pos.sub_xI_xI	40	0.0	search with cache (only 1: unfold BinPos.Pos.sub; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0413000583649	2
Coq.PArith.BinPosX.Pos.sub_xI_xO	40	1.0	search with cache (only 1: unfold BinPos.Pos.sub; only 1: now destruct (BinPos.Pos.sub_mask_pos n m) as (p, ->)).	0.0421209335327	3
Coq.PArith.BinPosX.Pos.sub_xO_xI	40	0.0.0	search with cache (only 1: unfold BinPos.Pos.sub; only 1: rewrite BinPos.Pos.sub_mask_carry_spec; only 1: now destruct (BinPos.Pos.sub_mask n m) as [| [r| r| ]| ]).	0.0525629520416	3
Coq.PArith.BinPosX.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPosX.Pos.sub_mask_neg	40
Coq.PArith.BinPosX.Pos.sub_le	40
Coq.PArith.BinPosX.Pos.sub_lt	40	19	search with cache (only 1: now apply BinPos.Pos.sub_le, BinPos.Pos.lt_le_incl).	0.408303976059	233
Coq.PArith.BinPosX.Pos.sub_diag	40	1.0	search with cache (only 1: unfold BinPos.Pos.sub; only 1: now rewrite BinPos.Pos.sub_mask_diag).	0.0293521881104	3
Coq.PArith.BinPosX.Pos.size_nat_monotone	40
Coq.PArith.BinPosX.Pos.size_gt	40	0.1.8.0.2.17	search with cache (only 1: unfold lt; only 1: induction p; only 1: rewrite BinPos.Pos.pow_succ_r; only 1: simpl_compare; only 1: do 2 destruct compare; only 1: rewrite BinPos.Pos.pow_succ_r).	15.4957280159	4447
Coq.PArith.BinPosX.Pos.size_le	40
Coq.PArith.BinPosX.Pos.max_l	40	26	search with cache (only 1: BinPos.Pos.solve_max).	13.1343319416	3242
Coq.PArith.BinPosX.Pos.max_r	40	0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: apply le_nlt in H).	0.0543830394745	3
Coq.PArith.BinPosX.Pos.min_l	40	10.3.3	search with cache (only 1: apply le_nlt in H; only 1: unfold BinPos.Pos.min; only 1: case compare_spec).	0.830374002457	362
Coq.PArith.BinPosX.Pos.min_r	40	0.0.3	search with cache (only 1: unfold BinPos.Pos.min; only 1: case compare_spec; only 1: apply le_nlt in H).	0.0542271137238	6
Coq.PArith.BinPosX.Pos.max_1_l	40
Coq.PArith.BinPosX.Pos.max_1_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: apply BinPos.Pos.max_1_l).	0.205788850784	12
Coq.PArith.BinPosX.Pos.min_1_l	40	3.1.1.1	search with cache (only 1: rewrite BinPos.Pos.min_comm; only 1: rewrite BinPos.Pos.min_comm; only 1: rewrite BinPos.Pos.min_comm; only 1: apply BinPos.Pos.min_r, BinPos.Pos.le_1_l).	0.16671705246	13
Coq.PArith.BinPosX.Pos.min_1_r	40	0.1	search with cache (only 1: rewrite BinPos.Pos.min_comm; only 1: apply BinPos.Pos.min_1_l).	0.0292069911957	3
Coq.PArith.BinPosX.Pos.succ_max_distr	40
Coq.PArith.BinPosX.Pos.succ_min_distr	40
Coq.PArith.BinPosX.Pos.add_max_distr_l	40	0.0.2	search with cache (only 1: apply BinPos.Pos.max_monotone; only 1: intros x x'; only 1: apply BinPos.Pos.add_le_mono_l).	0.0572330951691	5
Coq.PArith.BinPosX.Pos.add_max_distr_r	40	0.0.0.2	search with cache (only 1: rewrite 3!(BinPos.Pos.add_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0690190792084	6
Coq.PArith.BinPosX.Pos.add_min_distr_l	40	0.0.1	search with cache (only 1: apply BinPos.Pos.min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0580959320068	4
Coq.PArith.BinPosX.Pos.add_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(BinPos.Pos.add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0717461109161	5
Coq.PArith.BinPosX.Pos.mul_max_distr_l	40	0.0.1	search with cache (only 1: apply BinPos.Pos.max_monotone; only 1: intros x x'; only 1: apply BinPos.Pos.mul_le_mono_l).	0.0582611560822	4
Coq.PArith.BinPosX.Pos.mul_max_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(BinPos.Pos.mul_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0712339878082	5
Coq.PArith.BinPosX.Pos.mul_min_distr_l	40	0.0.2	search with cache (only 1: apply BinPos.Pos.min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0594761371613	5
Coq.PArith.BinPosX.Pos.mul_min_distr_r	40	0.0.0.2	search with cache (only 1: rewrite 3!(BinPos.Pos.mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0724680423737	6
Coq.PArith.BinPosX.Pos.iter_op_succ	40
Coq.PArith.BinPosX.Pos.of_nat_succ	40	3	search with cache (only 1: induction n).	0.028028011322	4
Coq.PArith.BinPosX.Pos.pred_of_succ_nat	40	2.0.0	search with cache (only 1: destruct n; only 1: rewrite BinPos.Pos.pred_succ; only 1: rewrite BinPos.Pos.of_nat_succ).	0.0447418689728	5
Coq.PArith.BinPosX.Pos.succ_of_nat	40	3.0	search with cache (only 1: rewrite BinPos.Pos.of_nat_succ; only 1: destruct n).	0.04141497612	5
Coq.PArith.BinPosX.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPosX.Pos.sqrtrem_spec	40
Coq.PArith.BinPosX.Pos.sqrt_spec	40
Coq.PArith.BinPosX.Pos.divide_add_cancel_l	40
Coq.PArith.BinPosX.Pos.divide_xO_xI	40
Coq.PArith.BinPosX.Pos.divide_xO_xO	40
Coq.PArith.BinPosX.Pos.divide_mul_l	40
Coq.PArith.BinPosX.Pos.divide_mul_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: apply BinPos.Pos.divide_mul_l).	0.238528013229	12
Coq.PArith.BinPosX.Pos.ggcdn_gcdn	40
Coq.PArith.BinPosX.Pos.ggcd_gcd	40	0.0	search with cache (only 1: unfold BinPos.Pos.ggcd, BinPos.Pos.gcd; only 1: apply BinPos.Pos.ggcdn_gcdn).	0.0346879959106	2
Coq.PArith.BinPosX.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPosX.Pos.ggcd_correct_divisors	40	4	search with cache (only 1: apply BinPos.Pos.ggcdn_correct_divisors).	0.0506360530853	14
Coq.PArith.BinPosX.Pos.gcd_divide_l	40	4.0.1.0	search with cache (only 1: rewrite <- BinPos.Pos.ggcd_gcd; only 1: generalize (BinPos.Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: rewrite BinPos.Pos.mul_comm).	0.129004955292	17
Coq.PArith.BinPosX.Pos.gcd_divide_r	40	1.2.0.1.0	search with cache (only 1: rewrite <- BinPos.Pos.ggcd_gcd; only 1: generalize (BinPos.Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: exists bb; only 1: now rewrite BinPos.Pos.mul_comm).	0.164800882339	24
Coq.PArith.BinPosX.Pos.gcdn_greatest	40
Coq.PArith.BinPosX.Pos.gcd_greatest	40	0	search with cache (only 1: apply BinPos.Pos.gcdn_greatest).	0.0318660736084	1
Coq.PArith.BinPosX.Pos.ggcd_greatest	40
Coq.PArith.BinPosX.Peqb_true_eq	40	1	search with cache (only 1: apply BinPos.Pos.eqb_eq).	0.0231049060822	2
Coq.PArith.BinPosX.Pcompare_eq_Gt	40		search with cache ().	0.0108170509338	0
Coq.PArith.BinPosX.Pminus_mask_Gt	40	5.5.10.0.1.2	search with cache (only 1: apply BinPos.Pos.gt_lt in H; only 1: destruct (BinPos.Pos.sub_mask_pos p q H) as (r, U); only 1: exists r; only 1: now apply BinPos.Pos.sub_mask_pos_iff; only 1: rewrite BinPos.Pos.sub_mask_carry_spec, U; only 1: destruct r).	7.61472892761	1967
Coq.PArith.BinPosX.Pplus_minus	40	17.2	search with cache (only 1: apply Pos.gt_lt in H; only 1: now rewrite BinPos.Pos.add_comm, BinPos.Pos.sub_add).	1.23421883583	787
Coq.PArith.BinPosX.Dcompare	40	0	search with cache (only 1: destruct r).	0.0370678901672	1
Coq.PArith.PnatX.Pos2Nat.inj_succ	40		search with cache ().	0.0199608802795	0
Coq.PArith.PnatX.Pos2Nat.inj_add	40		search with cache ().	0.0222239494324	0
Coq.PArith.PnatX.Pos2Nat.inj_mul	40		search with cache ().	0.0231380462646	0
Coq.PArith.PnatX.Pos2Nat.inj_1	40		search with cache ().	0.00797605514526	0
Coq.PArith.PnatX.Pos2Nat.inj_xO	40		search with cache ().	0.0228939056396	0
Coq.PArith.PnatX.Pos2Nat.inj_xI	40		search with cache ().	0.0235960483551	0
Coq.PArith.PnatX.Pos2Nat.is_succ	40	0.2	search with cache (only 1: induction p using peano_ind; only 1: exists (S n)).	0.0648250579834	4
Coq.PArith.PnatX.Pos2Nat.is_pos	40		search with cache ().	0.020583152771	0
Coq.PArith.PnatX.Pos2Nat.id	40	0.2.0.0	search with cache (only 1: induction p using peano_ind; only 1: rewrite Pnat.Pos2Nat.inj_succ; only 1: rewrite <- IHp  at 2; only 1: now destruct (Pnat.Pos2Nat.is_succ p) as (n, ->)).	0.0542008876801	6
Coq.PArith.PnatX.Pos2Nat.inj	40	2	search with cache (only 1: now rewrite <- (Pnat.Pos2Nat.id p), <- (Pnat.Pos2Nat.id q), H).	0.02219414711	3
Coq.PArith.PnatX.Pos2Nat.inj_iff	40	2	search with cache (only 1: now rewrite <- (Pnat.Pos2Nat.id p), <- (Pnat.Pos2Nat.id q), H).	0.0255708694458	3
Coq.PArith.PnatX.Pos2Nat.inj_compare	40
Coq.PArith.PnatX.Pos2Nat.inj_lt	40	0.0	search with cache (only 1: unfold lt; only 1: now rewrite Pnat.Pos2Nat.inj_compare, Nat.compare_lt_iff).	0.122771978378	2
Coq.PArith.PnatX.Pos2Nat.inj_le	40
Coq.PArith.PnatX.Pos2Nat.inj_gt	40	0.0	search with cache (only 1: unfold gt; only 1: now rewrite Pnat.Pos2Nat.inj_compare, Nat.compare_gt_iff).	0.121619939804	2
Coq.PArith.PnatX.Pos2Nat.inj_ge	40
Coq.PArith.PnatX.Pos2Nat.inj_sub	40		search with cache ().	0.0430908203125	0
Coq.PArith.PnatX.Pos2Nat.inj_sub_max	40	0.0.0.1.0.0	search with cache (only 1: destruct (ltb_spec q p); only 1: rewrite <- Pnat.Pos2Nat.inj_sub by trivial; only 1: now destruct (Pnat.Pos2Nat.is_succ (p - q)) as (m, ->); only 1: rewrite sub_le by trivial; only 1: apply Pnat.Pos2Nat.inj_le, Nat.sub_0_le in H; only 1: now rewrite H).	0.184669971466	7
Coq.PArith.PnatX.Pos2Nat.inj_pred	40		search with cache ().	0.0429611206055	0
Coq.PArith.PnatX.Pos2Nat.inj_pred_max	40	0.0	search with cache (only 1: rewrite <- sub_1_r, <- Nat.sub_1_r; only 1: apply Pnat.Pos2Nat.inj_sub_max).	0.0579400062561	2
Coq.PArith.PnatX.Pos2Nat.inj_min	40		search with cache ().	0.0308990478516	0
Coq.PArith.PnatX.Pos2Nat.inj_max	40		search with cache ().	0.0321669578552	0
Coq.PArith.PnatX.Pos2Nat.inj_iter	40	0.11	search with cache (only 1: induction p using peano_ind; only 1: rewrite Pnat.Pos2Nat.inj_succ, iter_succ).	0.163239002228	46
Coq.PArith.PnatX.Nat2Pos.id	40		search with cache ().	0.0421588420868	0
Coq.PArith.PnatX.Nat2Pos.id_max	40	0.5	search with cache (only 1: induction n as [| n H]; only 1: destruct n).	0.586295127869	63
Coq.PArith.PnatX.Nat2Pos.inj	40		search with cache ().	0.0380699634552	0
Coq.PArith.PnatX.Nat2Pos.inj_iff	40		search with cache ().	0.113126993179	0
Coq.PArith.PnatX.Nat2Pos.inj_succ	40	1.1	search with cache (only 1: apply Pnat.Pos2Nat.inj; only 1: destruct n).	0.128644943237	4
Coq.PArith.PnatX.Nat2Pos.inj_pred	40	0.0	search with cache (only 1: destruct n as [| [| n]]; only 1: now rewrite Pos.pred_succ).	0.0317199230194	2
Coq.PArith.PnatX.Nat2Pos.inj_add	40	0	search with cache (only 1: apply Pnat.Pos2Nat.inj).	0.0575921535492	1
Coq.PArith.PnatX.Nat2Pos.inj_mul	40
Coq.PArith.PnatX.Nat2Pos.inj_compare	40	0	search with cache (only 1: rewrite Pnat.Pos2Nat.inj_compare, !Pnat.Nat2Pos.id).	0.0329601764679	1
Coq.PArith.PnatX.Nat2Pos.inj_sub	40	0	search with cache (only 1: apply Pnat.Pos2Nat.inj).	0.0908279418945	1
Coq.PArith.PnatX.Nat2Pos.inj_min	40
Coq.PArith.PnatX.Nat2Pos.inj_max	40
Coq.PArith.PnatX.Pos2SuccNat.id_succ	40	2.0	search with cache (only 1: rewrite Pos.of_nat_succ, <- Pnat.Pos2Nat.inj_succ; only 1: apply Pnat.Pos2Nat.id).	0.0710718631744	4
Coq.PArith.PnatX.Pos2SuccNat.pred_id	40	0	search with cache (only 1: now rewrite Pnat.Pos2SuccNat.id_succ, Pos.pred_succ).	0.0198609828949	1
Coq.PArith.PnatX.SuccNat2Pos.id_succ	40		search with cache ().	0.0239288806915	0
Coq.PArith.PnatX.SuccNat2Pos.pred_id	40		search with cache ().	0.0356359481812	0
Coq.PArith.PnatX.SuccNat2Pos.inj	40		search with cache ().	0.0355122089386	0
Coq.PArith.PnatX.SuccNat2Pos.inj_iff	40		search with cache ().	0.0364120006561	0
Coq.PArith.PnatX.SuccNat2Pos.inv	40	0	search with cache (only 1: apply Pnat.Pos2Nat.inj).	0.0522029399872	1
Coq.PArith.PnatX.SuccNat2Pos.inj_succ	40		search with cache ().	0.0105800628662	0
Coq.PArith.PnatX.SuccNat2Pos.inj_compare	40	0	search with cache (only 1: rewrite Pnat.Pos2Nat.inj_compare, !Pnat.SuccNat2Pos.id_succ).	0.0237209796906	1
Coq.PArith.PnatX.Pmult_nat_mult	40
Coq.PArith.PnatX.Pmult_nat_succ_morphism	40	0	search with cache (only 1: now rewrite !Pnat.Pmult_nat_mult, Pnat.Pos2Nat.inj_succ).	0.0473439693451	1
Coq.PArith.PnatX.Pmult_nat_l_plus_morphism	40	0	search with cache (only 1: rewrite !Pnat.Pmult_nat_mult, Pnat.Pos2Nat.inj_add).	0.0649998188019	1
Coq.PArith.PnatX.Pmult_nat_plus_carry_morphism	40	0	search with cache (only 1: now rewrite Pos.add_carry_spec, Pnat.Pmult_nat_succ_morphism).	0.0473740100861	1
Coq.PArith.PnatX.Pmult_nat_r_plus_morphism	40	1	search with cache (only 1: rewrite !Pnat.Pmult_nat_mult).	0.066516160965	2
Coq.PArith.PnatX.ZL6	40	0	search with cache (only 1: rewrite Pnat.Pmult_nat_mult, Nat.mul_comm).	0.0494220256805	1
Coq.PArith.PnatX.le_Pmult_nat	40
Coq.Arith.Peano_decX.O_or_S	40	0	search with cache (only 1: induction n).	0.118923187256	1
Coq.Arith.Peano_decX.dec_eq_nat	40	1	search with cache (only 1: elim (Nat.eq_dec n m)).	0.125473976135	11
Coq.Arith.Peano_decX.le_unique	40
Coq.Arith.PlusX.plus_assoc_reverse	40		search with cache ().	0.0270900726318	0
Coq.Arith.PlusX.plus_reg_l	40		search with cache ().	0.107089042664	0
Coq.Arith.PlusX.plus_le_reg_l	40		search with cache ().	0.0951399803162	0
Coq.Arith.PlusX.plus_lt_reg_l	40		search with cache ().	0.0205359458923	0
Coq.Arith.PlusX.plus_le_compat_l	40		search with cache ().	0.0214359760284	0
Coq.Arith.PlusX.plus_le_compat_r	40		search with cache ().	0.023097038269	0
Coq.Arith.PlusX.plus_lt_compat_l	40		search with cache ().	0.0232408046722	0
Coq.Arith.PlusX.plus_lt_compat_r	40		search with cache ().	0.0236859321594	0
Coq.Arith.PlusX.plus_le_compat	40		search with cache ().	0.0342388153076	0
Coq.Arith.PlusX.plus_le_lt_compat	40		search with cache ().	0.0347020626068	0
Coq.Arith.PlusX.plus_lt_le_compat	40		search with cache ().	0.0354268550873	0
Coq.Arith.PlusX.plus_lt_compat	40		search with cache ().	0.0348010063171	0
Coq.Arith.PlusX.le_plus_l	40		search with cache ().	0.0230369567871	0
Coq.Arith.PlusX.le_plus_r	40		search with cache ().	0.0229561328888	0
Coq.Arith.PlusX.le_plus_trans	40		search with cache ().	0.0346660614014	0
Coq.Arith.PlusX.lt_plus_trans	40		search with cache ().	0.0351998806	0
Coq.Arith.PlusX.plus_is_O	40		search with cache ().	0.0414111614227	0
Coq.Arith.PlusX.plus_is_one	40	0	search with cache (only 1: destruct m as [| m]).	0.214376211166	1
Coq.Arith.PlusX.plus_tail_plus	40
Coq.Arith.PlusX.succ_plus_discr	40	5.5	search with cache (only 1: induction n; only 1: rewrite <- plus_n_Sm in H).	0.214032888412	42
Coq.Arith.MultX.mult_assoc_reverse	40		search with cache ().	0.092502117157	0
Coq.Arith.MultX.mult_is_O	40	6	search with cache (only 1: apply Nat.eq_mul_0).	0.141424179077	14
Coq.Arith.MultX.mult_is_one	40
Coq.Arith.MultX.mult_O_le	40	0	search with cache (only 1: destruct m).	0.0587878227234	1
Coq.Arith.MultX.mult_le_compat_l	40	6	search with cache (only 1: apply Nat.mul_le_mono_nonneg).	0.0522401332855	7
Coq.Arith.MultX.mult_le_compat_r	40	6	search with cache (only 1: apply Nat.mul_le_mono_nonneg).	0.0525450706482	7
Coq.Arith.MultX.mult_le_compat	40	1	search with cache (only 1: apply Nat.mul_le_mono_nonneg).	0.0572850704193	2
Coq.Arith.MultX.mult_S_lt_compat_l	40
Coq.Arith.MultX.mult_lt_compat_l	40	14	search with cache (only 1: now apply Nat.mul_lt_mono_pos_l).	0.296159982681	75
Coq.Arith.MultX.mult_lt_compat_r	40	12	search with cache (only 1: now apply Nat.mul_lt_mono_pos_r).	0.234999895096	46
Coq.Arith.MultX.mult_S_le_reg_l	40
Coq.Arith.MultX.odd_even_lem	40	15	search with cache (only 1: apply (Nat.Even_Odd_False (2 * q))).	0.206111907959	91
Coq.Arith.MultX.mult_acc_aux	40
Coq.Arith.MultX.mult_tail_mult	40
Coq.Arith.Wf_natX.well_founded_ltof	40
Coq.Arith.Wf_natX.well_founded_gtof	40	2	search with cache (only 1: exact Wf_nat.well_founded_ltof).	3.47426819801	60
Coq.Arith.Wf_natX.induction_ltof1	40
Coq.Arith.Wf_natX.induction_gtof1	40
Coq.Arith.Wf_natX.induction_ltof2	40
Coq.Arith.Wf_natX.induction_gtof2	40
Coq.Arith.Wf_natX.well_founded_lt_compat	40
Coq.Arith.Wf_natX.lt_wf	40	1	search with cache (only 1: exact (Wf_nat.well_founded_ltof nat (fun m => m))).	0.850066900253	20
Coq.Arith.Wf_natX.lt_wf_rect1	40
Coq.Arith.Wf_natX.lt_wf_rect	40
Coq.Arith.Wf_natX.lt_wf_rec1	40	3	search with cache (only 1: apply Wf_nat.lt_wf_rect).	0.0396749973297	4
Coq.Arith.Wf_natX.lt_wf_rec	40	3	search with cache (only 1: apply Wf_nat.lt_wf_rect).	0.0394310951233	4
Coq.Arith.Wf_natX.lt_wf_ind	40	3	search with cache (only 1: apply Wf_nat.lt_wf_rect).	0.0400547981262	4
Coq.Arith.Wf_natX.gt_wf_rect	40	15	search with cache (only 1: apply Wf_nat.lt_wf_rect).	0.202132940292	91
Coq.Arith.Wf_natX.gt_wf_rec	40	16	search with cache (only 1: apply Wf_nat.lt_wf_rect).	0.230636835098	108
Coq.Arith.Wf_natX.lt_wf_double_rect	40
Coq.Arith.Wf_natX.lt_wf_double_rec	40
Coq.Arith.Wf_natX.lt_wf_double_ind	40
Coq.Arith.Wf_natX.acc_lt_rel	40
Coq.Arith.Wf_natX.well_founded_inv_lt_rel_compat	40	0.5.1	search with cache (only 1: constructor; only 1: case (F_compat y a); only 1: apply Wf_nat.acc_lt_rel).	0.479753017426	9
Coq.Arith.Wf_natX.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_natX.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.MinusX.minus_n_O	40		search with cache ().	0.0345139503479	0
Coq.Arith.MinusX.minus_Sn_m	40	1.2	search with cache (only 1: symmetry; only 1: now apply Nat.sub_succ_l).	0.120047092438	5
Coq.Arith.MinusX.pred_of_minus	40		search with cache ().	0.0952639579773	0
Coq.Arith.MinusX.minus_diag_reverse	40		search with cache ().	0.10685300827	0
Coq.Arith.MinusX.minus_plus_simpl_l_reverse	40		search with cache ().	0.037269115448	0
Coq.Arith.MinusX.plus_minus	40		search with cache ().	0.0334248542786	0
Coq.Arith.MinusX.minus_plus	40		search with cache ().	0.0339810848236	0
Coq.Arith.MinusX.le_plus_minus_r	40		search with cache ().	0.0338368415833	0
Coq.Arith.MinusX.le_plus_minus	40		search with cache ().	0.0336420536041	0
Coq.Arith.MinusX.lt_O_minus_lt	40		search with cache ().	0.0210909843445	0
Coq.Arith.MinusX.not_le_minus_0	40		search with cache ().	0.033401966095	0
Coq.Arith.BetweenX.bet_eq	40		search with cache ().	0.0117502212524	0
Coq.Arith.BetweenX.between_le	40
Coq.Arith.BetweenX.between_Sk_l	40
Coq.Arith.BetweenX.between_restr	40
Coq.Arith.BetweenX.exists_le_S	40	16.1.107	search with cache (only 1: induction l; only 1: apply le_S_n; only 1: inversion H).	20.3800029755	9928
Coq.Arith.BetweenX.exists_S_le	40
Coq.Arith.BetweenX.in_int_intro	40		search with cache ().	0.0211908817291	0
Coq.Arith.BetweenX.in_int_lt	40
Coq.Arith.BetweenX.in_int_p_Sq	40
Coq.Arith.BetweenX.in_int_S	40
Coq.Arith.BetweenX.in_int_Sp_q	40
Coq.Arith.BetweenX.between_in_int	40
Coq.Arith.BetweenX.in_int_between	40
Coq.Arith.BetweenX.exists_in_int	40
Coq.Arith.BetweenX.in_int_exists	40
Coq.Arith.BetweenX.between_or_exists	40
Coq.Arith.BetweenX.between_not_exists	40
Coq.Arith.BetweenX.nth_le	40
Coq.Arith.BetweenX.event_O	40	0.3	search with cache (only 1: firstorder; only 1: replace 0 with x).	0.0467190742493	5
Coq.Arith.EuclidX.eucl_dev	40
Coq.Arith.EuclidX.quotient	40
Coq.Arith.EuclidX.modulo	40
Coq.Arith.CompareX.discrete_nat	40
Coq.Arith.LtX.lt_le_S	40		search with cache ().	0.00813794136047	0
Coq.Arith.LtX.lt_n_Sm_le	40		search with cache ().	0.0219211578369	0
Coq.Arith.LtX.le_lt_n_Sm	40		search with cache ().	0.02272605896	0
Coq.Arith.LtX.le_not_lt	40	4	search with cache (only 1: intuition Nat.order).	0.0920381546021	5
Coq.Arith.LtX.lt_not_le	40	4	search with cache (only 1: intuition Nat.order).	0.0229070186615	5
Coq.Arith.LtX.neq_0_lt	40		search with cache ().	0.021625995636	0
Coq.Arith.LtX.lt_0_neq	40		search with cache ().	0.0179891586304	0
Coq.Arith.LtX.lt_n_S	40		search with cache ().	0.0235879421234	0
Coq.Arith.LtX.lt_S_n	40		search with cache ().	0.0219428539276	0
Coq.Arith.LtX.S_pred	40		search with cache ().	0.0353670120239	0
Coq.Arith.LtX.S_pred_pos	40		search with cache ().	0.0333490371704	0
Coq.Arith.LtX.lt_pred	40		search with cache ().	0.0346081256866	0
Coq.Arith.LtX.lt_pred_n_n	40		search with cache ().	0.0325419902802	0
Coq.Arith.LtX.le_lt_or_eq	40	1	search with cache (only 1: apply Nat.lt_eq_cases).	0.0498571395874	2
Coq.Arith.LtX.nat_total_order	40	23	search with cache (only 1: apply Nat.lt_gt_cases).	4.67543911934	321
Coq.Arith.FactorialX.lt_O_fact	40	8	search with cache (only 1: Nat.induct n).	0.114856958389	9
Coq.Arith.FactorialX.fact_neq_0	40
Coq.Arith.FactorialX.fact_le	40
Coq.Arith.PeanoNatX.Nat.bi_induction	40	7	search with cache (only 1: PeanoNat.Nat.induct ltac:(n)).	0.175710201263	8
Coq.Arith.PeanoNatX.Nat.recursion_wd	40
Coq.Arith.PeanoNatX.Nat.recursion_0	40		search with cache ().	0.0157570838928	0
Coq.Arith.PeanoNatX.Nat.recursion_succ	40
Coq.Arith.PeanoNatX.Nat.pred_succ	40		search with cache ().	0.0149440765381	0
Coq.Arith.PeanoNatX.Nat.pred_0	40		search with cache ().	0.0145790576935	0
Coq.Arith.PeanoNatX.Nat.one_succ	40		search with cache ().	0.0144600868225	0
Coq.Arith.PeanoNatX.Nat.two_succ	40		search with cache ().	0.014536857605	0
Coq.Arith.PeanoNatX.Nat.add_0_l	40		search with cache ().	0.0149381160736	0
Coq.Arith.PeanoNatX.Nat.add_succ_l	40		search with cache ().	0.0150740146637	0
Coq.Arith.PeanoNatX.Nat.sub_0_r	40		search with cache ().	0.0371220111847	0
Coq.Arith.PeanoNatX.Nat.sub_succ_r	40		search with cache ().	0.0461180210114	0
Coq.Arith.PeanoNatX.Nat.mul_0_l	40		search with cache ().	0.0147619247437	0
Coq.Arith.PeanoNatX.Nat.mul_succ_l	40		search with cache ().	0.030403137207	0
Coq.Arith.PeanoNatX.Nat.lt_succ_r	40		search with cache ().	0.0898308753967	0
Coq.Arith.PeanoNatX.Nat.eqb_eq	40
Coq.Arith.PeanoNatX.Nat.leb_le	40
Coq.Arith.PeanoNatX.Nat.ltb_lt	40	0.0	search with cache (only 1: apply PeanoNat.Nat.leb_le; only 1: apply PeanoNat.Nat.leb_le).	0.0965991020203	2
Coq.Arith.PeanoNatX.Nat.eq_dec	40	3.4.0.5	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: destruct m; only 1: destruct (IHn m) as [H| H]).	1.90291404724	278
Coq.Arith.PeanoNatX.Nat.compare_eq_iff	40
Coq.Arith.PeanoNatX.Nat.compare_lt_iff	40
Coq.Arith.PeanoNatX.Nat.compare_le_iff	40
Coq.Arith.PeanoNatX.Nat.compare_antisym	40
Coq.Arith.PeanoNatX.Nat.compare_succ	40		search with cache ().	0.0171020030975	0
Coq.Arith.PeanoNatX.Nat.max_l	40		search with cache ().	0.0406088829041	0
Coq.Arith.PeanoNatX.Nat.max_r	40		search with cache ().	0.0423099994659	0
Coq.Arith.PeanoNatX.Nat.min_l	40		search with cache ().	0.0421369075775	0
Coq.Arith.PeanoNatX.Nat.min_r	40		search with cache ().	0.0421619415283	0
Coq.Arith.PeanoNatX.Nat.pow_neg_r	40		search with cache ().	0.0295188426971	0
Coq.Arith.PeanoNatX.Nat.pow_0_r	40		search with cache ().	0.01859998703	0
Coq.Arith.PeanoNatX.Nat.pow_succ_r	40		search with cache ().	0.0194420814514	0
Coq.Arith.PeanoNatX.Nat.square_spec	40		search with cache ().	0.0184309482574	0
Coq.Arith.PeanoNatX.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNatX.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNatX.Nat.Private_Parity.Odd_0	40	54.23	search with cache (only 1: apply (BinNat.N.neq_succ_0 BinNums.N0); only 1: destruct H as [H2 H3]).	3.14149284363	5681
Coq.Arith.PeanoNatX.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNatX.Nat.even_spec	40
Coq.Arith.PeanoNatX.Nat.odd_spec	40
Coq.Arith.PeanoNatX.Nat.divmod_spec	40
Coq.Arith.PeanoNatX.Nat.div_mod	40	0.1.0	search with cache (only 1: destruct y; only 1: generalize (PeanoNat.Nat.divmod_spec x y 0 y (le_n y)); only 1: destruct divmod as (q, u)).	0.330476045609	13
Coq.Arith.PeanoNatX.Nat.mod_bound_pos	40	2	search with cache (only 1: destruct y).	0.0736801624298	3
Coq.Arith.PeanoNatX.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNatX.Nat.sqrt_specif	40
Coq.Arith.PeanoNatX.Nat.sqrt_neg	40		search with cache ().	0.0264279842377	0
Coq.Arith.PeanoNatX.Nat.log2_iter_spec	40
Coq.Arith.PeanoNatX.Nat.log2_spec	40
Coq.Arith.PeanoNatX.Nat.log2_nonpos	40	10	search with cache (only 1: PeanoNat.Nat.le_elim H).	0.871644973755	78
Coq.Arith.PeanoNatX.Nat.gcd_divide	40
Coq.Arith.PeanoNatX.Nat.gcd_divide_l	40	4	search with cache (only 1: apply PeanoNat.Nat.gcd_divide).	0.105797052383	5
Coq.Arith.PeanoNatX.Nat.gcd_divide_r	40	1	search with cache (only 1: apply gcd_divide).	0.0598590373993	2
Coq.Arith.PeanoNatX.Nat.gcd_greatest	40
Coq.Arith.PeanoNatX.Nat.gcd_nonneg	40		search with cache ().	0.0244629383087	0
Coq.Arith.PeanoNatX.Nat.div2_double	40	3.5	search with cache (only 1: induction n; only 1: rewrite PeanoNat.Nat.add_succ_r).	0.0977439880371	10
Coq.Arith.PeanoNatX.Nat.div2_succ_double	40	1.0.10.6	search with cache (only 1: PeanoNat.Nat.nzsimpl; only 1: induction n; only 1: f_equal; only 1: PeanoNat.Nat.nzsimpl).	2.96497607231	334
Coq.Arith.PeanoNatX.Nat.le_div2	40
Coq.Arith.PeanoNatX.Nat.lt_div2	40	2.0	search with cache (only 1: destruct n; only 1: apply PeanoNat.Nat.lt_succ_r, PeanoNat.Nat.le_div2).	0.0841898918152	4
Coq.Arith.PeanoNatX.Nat.div2_decr	40	1.0.0.0.0.0.1.0	search with cache (only 1: destruct a; only 1: apply PeanoNat.Nat.succ_le_mono in H; only 1: apply PeanoNat.Nat.le_trans with a; only 1: apply PeanoNat.Nat.le_trans with a; only 1: apply PeanoNat.Nat.le_trans with a; only 1: apply PeanoNat.Nat.le_trans with a; only 1: apply PeanoNat.Nat.le_trans with a; only 1: apply PeanoNat.Nat.le_div2).	0.310162782669	11
Coq.Arith.PeanoNatX.Nat.double_twice	40	0	search with cache (only 1: now rewrite PeanoNat.Nat.add_0_r).	0.0562210083008	1
Coq.Arith.PeanoNatX.Nat.testbit_0_l	40	8	search with cache (only 1: now induction n).	0.0591559410095	12
Coq.Arith.PeanoNatX.Nat.testbit_odd_0	40	0	search with cache (only 1: rewrite PeanoNat.Nat.odd_spec).	0.0518748760223	1
Coq.Arith.PeanoNatX.Nat.testbit_even_0	40
Coq.Arith.PeanoNatX.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNatX.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNatX.Nat.shiftr_specif	40
Coq.Arith.PeanoNatX.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNatX.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNatX.Nat.div2_bitwise	40
Coq.Arith.PeanoNatX.Nat.odd_bitwise	40
Coq.Arith.PeanoNatX.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNatX.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNatX.Nat.land_spec	40	0.0	search with cache (only 1: unfold PeanoNat.Nat.land; only 1: apply PeanoNat.Nat.testbit_bitwise_1).	0.117769956589	2
Coq.Arith.PeanoNatX.Nat.ldiff_spec	40	0.0	search with cache (only 1: unfold PeanoNat.Nat.ldiff; only 1: apply PeanoNat.Nat.testbit_bitwise_1).	0.11803483963	2
Coq.Arith.PeanoNatX.Nat.lor_spec	40	0.0	search with cache (only 1: unfold PeanoNat.Nat.lor; only 1: apply PeanoNat.Nat.testbit_bitwise_2).	0.147261857986	2
Coq.Arith.PeanoNatX.Nat.lxor_spec	40	0.0	search with cache (only 1: unfold PeanoNat.Nat.lxor; only 1: apply PeanoNat.Nat.testbit_bitwise_2).	0.0936470031738	2
Coq.Arith.PeanoNatX.Nat.div2_spec	40		search with cache ().	0.017548084259	0
Coq.Arith.PeanoNatX.Nat.testbit_neg_r	40		search with cache ().	0.0282030105591	0
Coq.Arith.PeanoNatX.Nat.tail_add_spec	40
Coq.Arith.PeanoNatX.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNatX.Nat.tail_mul_spec	40	0.0	search with cache (only 1: unfold PeanoNat.Nat.tail_mul; only 1: now rewrite PeanoNat.Nat.tail_addmul_spec).	0.075896024704	2
Coq.Arith.PeanoNatX.test	40		search with cache ().	0.027930021286	0
Coq.Arith.EqNatX.eq_nat_refl	40	45	search with cache (only 1: Nat.induct n).	1.09994006157	2738
Coq.Arith.EqNatX.eq_nat_is_eq	40	20.14	search with cache (only 1: auto with arith; only 1: auto with arith).	1.05266880989	852
Coq.Arith.EqNatX.eq_eq_nat	40	20	search with cache (only 1: auto with arith).	0.107012987137	186
Coq.Arith.EqNatX.eq_nat_eq	40	3	search with cache (only 1: apply eq_nat_is_eq).	0.0384960174561	4
Coq.Arith.EqNatX.eq_nat_elim	40	3.10	search with cache (only 1: replace m with n; only 1: apply eq_nat_is_eq).	0.391015052795	132
Coq.Arith.EqNatX.eq_nat_decide	40
Coq.Arith.EqNatX.beq_nat_refl	40	1	search with cache (only 1: induction n).	0.0228590965271	2
Coq.Arith.EqNatX.beq_nat_true	40	1	search with cache (only 1: apply Nat.eqb_eq).	0.0405571460724	2
Coq.Arith.EqNatX.beq_nat_false	40
Coq.Arith.EqNatX.beq_nat_eq	40	1	search with cache (only 1: apply Nat.eqb_eq).	0.0398759841919	2
Coq.Arith.LeX.le_n_0_eq	40		search with cache ().	0.0252389907837	0
Coq.Arith.LeX.le_elim_rel	40
Coq.Arith.GtX.gt_n_S	40		search with cache ().	0.02525806427	0
Coq.Arith.GtX.gt_S_n	40		search with cache ().	0.0237557888031	0
Coq.Arith.GtX.gt_S	40	0	search with cache (only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.116359949112	1
Coq.Arith.GtX.gt_pred	40		search with cache ().	0.0392599105835	0
Coq.Arith.GtX.le_not_gt	40	43.131	search with cache (only 1: induction n; only 1: apply IHn).	33.6052970886	29845
Coq.Arith.GtX.gt_not_le	40	43.131	search with cache (only 1: induction n; only 1: apply IHn).	27.5956249237	25680
Coq.Arith.GtX.le_S_gt	40		search with cache ().	0.0162830352783	0
Coq.Arith.GtX.gt_S_le	40		search with cache ().	0.0230650901794	0
Coq.Arith.GtX.gt_le_S	40		search with cache ().	0.0161299705505	0
Coq.Arith.GtX.le_gt_S	40		search with cache ().	0.0240299701691	0
Coq.Arith.GtX.le_gt_trans	40		search with cache ().	0.0394821166992	0
Coq.Arith.GtX.gt_le_trans	40		search with cache ().	0.0392367839813	0
Coq.Arith.GtX.gt_trans	40		search with cache ().	0.039675951004	0
Coq.Arith.GtX.gt_trans_S	40		search with cache ().	0.0389339923859	0
Coq.Arith.GtX.gt_0_eq	40	0	search with cache (only 1: destruct n).	0.0752711296082	1
Coq.Arith.GtX.plus_gt_reg_l	40		search with cache ().	0.0250260829926	0
Coq.Arith.GtX.plus_gt_compat_l	40		search with cache ().	0.0257449150085	0
Coq.Arith.Compare_decX.zerop	40	1	search with cache (only 1: destruct n).	0.143774032593	2
Coq.Arith.Compare_decX.lt_eq_lt_dec	40	2.2.0.2	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: destruct m; only 1: destruct (IHn m) as [H| H]).	0.490958929062	10
Coq.Arith.Compare_decX.gt_eq_gt_dec	40	0	search with cache (only 1: now apply Compare_dec.lt_eq_lt_dec).	0.141545057297	1
Coq.Arith.Compare_decX.le_lt_dec	40	1.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: elim (IHn m)).	0.515949964523	26
Coq.Arith.Compare_decX.le_le_S_dec	40	0	search with cache (only 1: exact (Compare_dec.le_lt_dec n m)).	0.0501461029053	1
Coq.Arith.Compare_decX.le_ge_dec	40	1	search with cache (only 1: elim (Compare_dec.le_lt_dec n m)).	0.0667688846588	2
Coq.Arith.Compare_decX.le_gt_dec	40	0	search with cache (only 1: exact (Compare_dec.le_lt_dec n m)).	0.047947883606	1
Coq.Arith.Compare_decX.le_lt_eq_dec	40	3	search with cache (only 1: destruct (Compare_dec.lt_eq_lt_dec n m)).	0.118891954422	13
Coq.Arith.Compare_decX.le_dec	40	4.3.5	search with cache (only 1: elim (Compare_dec.le_lt_dec n m); only 1: right; only 1: intuition Nat.order).	5.09994506836	696
Coq.Arith.Compare_decX.lt_dec	40	2	search with cache (only 1: apply Compare_dec.le_dec).	0.491561889648	33
Coq.Arith.Compare_decX.gt_dec	40	2	search with cache (only 1: apply Compare_dec.lt_dec).	0.0478498935699	3
Coq.Arith.Compare_decX.ge_dec	40	1	search with cache (only 1: apply Compare_dec.le_dec).	0.0519530773163	2
Coq.Arith.Compare_decX.dec_le	40	0	search with cache (only 1: apply Nat.le_decidable).	0.0417900085449	1
Coq.Arith.Compare_decX.dec_lt	40	0	search with cache (only 1: apply Nat.lt_decidable).	0.0429208278656	1
Coq.Arith.Compare_decX.dec_gt	40	0	search with cache (only 1: apply Nat.lt_decidable).	0.0432538986206	1
Coq.Arith.Compare_decX.dec_ge	40	0	search with cache (only 1: apply Nat.le_decidable).	0.0412487983704	1
Coq.Arith.Compare_decX.not_eq	40	23	search with cache (only 1: apply Nat.lt_gt_cases).	4.79701495171	321
Coq.Arith.Compare_decX.not_le	40		search with cache ().	0.0309648513794	0
Coq.Arith.Compare_decX.not_gt	40		search with cache ().	0.0312230587006	0
Coq.Arith.Compare_decX.not_ge	40		search with cache ().	0.0323841571808	0
Coq.Arith.Compare_decX.not_lt	40		search with cache ().	0.0303671360016	0
Coq.Arith.Compare_decX.nat_compare_lt	40	0.0	search with cache (only 1: apply Nat.compare_lt_iff; only 1: apply Nat.compare_lt_iff).	0.0724580287933	2
Coq.Arith.Compare_decX.nat_compare_gt	40	0.0	search with cache (only 1: apply Nat.compare_gt_iff; only 1: apply Nat.compare_gt_iff).	0.0830240249634	2
Coq.Arith.Compare_decX.nat_compare_le	40	0.0.4.14.40	search with cache (only 1: absurd (m < n); only 1: destruct (n ?= m); only 1: intuition Nat.order; only 1: now apply Nat.compare_gt_iff; only 1: apply Nat.compare_le_iff).	11.5483880043	4234
Coq.Arith.Compare_decX.nat_compare_ge	40
Coq.Arith.Compare_decX.nat_compare_eq	40	0	search with cache (only 1: apply Nat.compare_eq_iff).	0.0570108890533	1
Coq.Arith.Compare_decX.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.0487539768219	1
Coq.Arith.Compare_decX.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.0546419620514	1
Coq.Arith.Compare_decX.nat_compare_equiv	40
Coq.Arith.Compare_decX.leb_iff_conv	40	4.1.11	search with cache (only 1: rewrite Nat.leb_nle in H; only 1: rewrite Nat.leb_nle; only 1: intuition Nat.order).	2.10519313812	450
Coq.Arith.Compare_decX.leb_correct	40	0	search with cache (only 1: apply Nat.leb_le).	0.0755898952484	1
Coq.Arith.Compare_decX.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.0876750946045	1
Coq.Arith.Compare_decX.leb_correct_conv	40	0	search with cache (only 1: apply Compare_dec.leb_iff_conv).	0.0761890411377	1
Coq.Arith.Compare_decX.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.0402150154114	1
Coq.Arith.Compare_decX.leb_compare	40
Coq.Arith.EvenX.even_equiv	40
Coq.Arith.EvenX.odd_equiv	40
Coq.Arith.EvenX.even_or_odd	40	96	search with cache (only 1: induction n).	23.0023701191	29287
Coq.Arith.EvenX.even_odd_dec	40	0	search with cache (only 1: induction n).	0.0566549301147	1
Coq.Arith.EvenX.not_even_and_odd	40
Coq.Arith.EvenX.even_plus_split	40
Coq.Arith.EvenX.odd_plus_split	40
Coq.Arith.EvenX.even_even_plus	40
Coq.Arith.EvenX.odd_plus_l	40
Coq.Arith.EvenX.odd_plus_r	40
Coq.Arith.EvenX.odd_even_plus	40
Coq.Arith.EvenX.even_plus_aux	40
Coq.Arith.EvenX.even_plus_even_inv_r	40
Coq.Arith.EvenX.even_plus_even_inv_l	40
Coq.Arith.EvenX.even_plus_odd_inv_r	40
Coq.Arith.EvenX.even_plus_odd_inv_l	40
Coq.Arith.EvenX.odd_plus_even_inv_l	40
Coq.Arith.EvenX.odd_plus_even_inv_r	40
Coq.Arith.EvenX.odd_plus_odd_inv_l	40
Coq.Arith.EvenX.odd_plus_odd_inv_r	40
Coq.Arith.EvenX.even_mult_aux	40
Coq.Arith.EvenX.even_mult_l	40
Coq.Arith.EvenX.even_mult_r	40
Coq.Arith.EvenX.even_mult_inv_r	40
Coq.Arith.EvenX.even_mult_inv_l	40
Coq.Arith.EvenX.odd_mult	40
Coq.Arith.EvenX.odd_mult_inv_l	40
Coq.Arith.EvenX.odd_mult_inv_r	40
Coq.Arith.Div2X.ind_0_1_SS	40
Coq.Arith.Div2X.lt_div2	40
Coq.Arith.Div2X.even_div2	40
Coq.Arith.Div2X.odd_div2	40
Coq.Arith.Div2X.div2_even	40
Coq.Arith.Div2X.div2_odd	40	0.2.7.8	search with cache (only 1: destruct n; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: apply odd_div2 in Od; only 1: rewrite odd_equiv).	1.28976511955	376
Coq.Arith.Div2X.even_odd_div2	40
Coq.Arith.Div2X.double_S	40
Coq.Arith.Div2X.double_plus	40
Coq.Arith.Div2X.even_odd_double	40
Coq.Arith.Div2X.even_2n	40
Coq.Arith.Div2X.odd_S2n	40	0.9	search with cache (only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0787601470947	21
Coq.Arith.Div2X.div2_double	40	3	search with cache (only 1: apply Nat.div2_double).	0.0390079021454	4
Coq.Arith.Div2X.div2_double_plus_one	40	4.0.17.8	search with cache (only 1: Nat.nzsimpl; only 1: induction n; only 1: f_equal; only 1: Nat.nzsimpl).	7.25211811066	1809
Coq.Logic.Classical_PropX.NNPP	40
Coq.Logic.Classical_PropX.Peirce	40	3	search with cache (only 1: tauto).	0.0237350463867	4
Coq.Logic.Classical_PropX.not_imply_elim	40	9	search with cache (only 1: destruct (classic P)).	0.03169298172	10
Coq.Logic.Classical_PropX.not_imply_elim2	40		search with cache ().	0.0149390697479	0
Coq.Logic.Classical_PropX.imply_to_or	40	80	search with cache (only 1: tauto).	3.5374481678	3439
Coq.Logic.Classical_PropX.imply_to_and	40	9	search with cache (only 1: apply NNPP).	0.112846136093	10
Coq.Logic.Classical_PropX.or_to_imply	40		search with cache ().	0.0130610466003	0
Coq.Logic.Classical_PropX.not_and_or	40	7	search with cache (only 1: apply NNPP).	0.101048946381	15
Coq.Logic.Classical_PropX.or_not_and	40		search with cache ().	0.0140161514282	0
Coq.Logic.Classical_PropX.not_or_and	40		search with cache ().	0.0167729854584	0
Coq.Logic.Classical_PropX.and_not_or	40		search with cache ().	0.0162761211395	0
Coq.Logic.Classical_PropX.imply_and_or	40		search with cache ().	0.0140590667725	0
Coq.Logic.Classical_PropX.imply_and_or2	40		search with cache ().	0.0165050029755	0
Coq.Logic.Classical_PropX.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.WKLX.is_path_from_characterization	40
Coq.Logic.WKLX.is_path_from_restrict	40
Coq.Logic.WKLX.inductively_barred_at_monotone	40
Coq.Logic.WKLX.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKLX.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKLX.find_left_path	40
Coq.Logic.WKLX.Y_unique	40
Coq.Logic.WKLX.Y_approx	40
Coq.Logic.WKLX.PreWeakKonigsLemma	40
Coq.Logic.WKLX.inductively_barred_at_decidable	40
Coq.Logic.WKLX.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKLX.WeakKonigsLemma	40
Coq.Logic.Eqdep_decX.trans_sym_eq	40		search with cache ().	0.0180060863495	0
Coq.Logic.Eqdep_decX.nu_constant	40	0	search with cache (only 1: destruct (eq_dec y) as [Heq| Hneq]).	0.0617659091949	1
Coq.Logic.Eqdep_decX.nu_left_inv_on	40
Coq.Logic.Eqdep_decX.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_decX.K_dec_on	40
Coq.Logic.Eqdep_decX.inj_right_pair_on	40
Coq.Logic.Eqdep_decX.K_dec_type	40
Coq.Logic.Eqdep_decX.eq_rect_eq_dec	40
Coq.Logic.Eqdep_decX.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_decX.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_decX.UIP_refl_unit	40
Coq.Logic.Eqdep_decX.UIP_refl_bool	40
Coq.Logic.Eqdep_decX.UIP_refl_nat	40
Coq.Logic.EqdepFactsX.eq_dep_sym	40	37	search with cache (only 1: rewrite <- H).	0.640439033508	696
Coq.Logic.EqdepFactsX.eq_dep_trans	40	255	search with cache (only 1: induction H0).	21.5897948742	37604
Coq.Logic.EqdepFactsX.eq_dep1_dep	40	1	search with cache (only 1: destruct H).	0.0350430011749	2
Coq.Logic.EqdepFactsX.eq_dep_dep1	40	6.3	search with cache (only 1: destruct H; only 1: apply EqdepFacts.eq_dep1_intro with eq_refl).	0.100486040115	27
Coq.Logic.EqdepFactsX.eq_sigT_eq_dep	40
Coq.Logic.EqdepFactsX.eq_dep_eq_sigT	40
Coq.Logic.EqdepFactsX.eq_sigT_iff_eq_dep	40
Coq.Logic.EqdepFactsX.eq_sig_eq_dep	40
Coq.Logic.EqdepFactsX.eq_dep_eq_sig	40	16	search with cache (only 1: rewrite <- H).	0.236284971237	108
Coq.Logic.EqdepFactsX.eq_sig_iff_eq_dep	40
Coq.Logic.EqdepFactsX.eq_sigT_sig_eq	40
Coq.Logic.EqdepFactsX.eq_sigT_fst	40
Coq.Logic.EqdepFactsX.eq_sigT_snd	40
Coq.Logic.EqdepFactsX.eq_sig_fst	40		search with cache ().	0.0184550285339	0
Coq.Logic.EqdepFactsX.eq_sig_snd	40	2	search with cache (only 1: destruct H).	0.159034013748	3
Coq.Logic.EqdepFactsX.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFactsX.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFactsX.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFactsX.UIP_on__UIP_refl_on	40		search with cache ().	0.0188460350037	0
Coq.Logic.EqdepFactsX.UIP_refl_on__Streicher_K_on	40		search with cache ().	0.019896030426	0
Coq.Logic.EqdepFactsX.Streicher_K_on__eq_rect_eq_on	40	0	search with cache (only 1: intro).	0.0342280864716	1
Coq.Logic.EqdepFactsX.UIP_shift_on	40
Coq.Logic.EqdepFactsX.eq_dep_eq_on__inj_pair2_on	40
Coq.Logic.EqdepFactsX.f_eq_dep	40	8	search with cache (only 1: destruct H).	0.163058996201	13
Coq.Logic.EqdepFactsX.eq_dep_non_dep	40	85	search with cache (only 1: destruct H as [l1 [l2 [H H']]]).	6.8394010067	12684
Coq.Logic.EqdepFactsX.f_eq_dep_non_dep	40	10	search with cache (only 1: destruct H).	0.203506946564	28
Coq.Logic.StrictPropX.Spr1_inj	40	80	search with cache (only 1: destruct b).	11.8336839676	3412
Coq.Logic.ClassicalUniqueChoiceX.unique_choice	40
Coq.Logic.ClassicalUniqueChoiceX.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoiceX.not_not_classic_set	40
Coq.Logic.ClassicalFactsX.prop_degen_ext	40
Coq.Logic.ClassicalFactsX.prop_degen_em	40
Coq.Logic.ClassicalFactsX.prop_ext_em_degen	40
Coq.Logic.ClassicalFactsX.provable_prop_ext	40	6.1	search with cache (only 1: intros a b; only 1: intuition).	0.0515279769897	9
Coq.Logic.ClassicalFactsX.prop_ext_A_eq_A_imp_A	40	74	search with cache (only 1: intuition).	4.38433694839	5412
Coq.Logic.ClassicalFactsX.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFactsX.ext_prop_fixpoint	40
Coq.Logic.ClassicalFactsX.aux	40
Coq.Logic.ClassicalFactsX.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFactsX.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFactsX.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFactsX.p2p1	40
Coq.Logic.ClassicalFactsX.p2p2	40
Coq.Logic.ClassicalFactsX.proof_irrelevance_cc	40
Coq.Logic.ClassicalFactsX.wp2p1	40
Coq.Logic.ClassicalFactsX.wp2p2	40
Coq.Logic.ClassicalFactsX.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFactsX.proof_irrelevance_cci	40
Coq.Logic.ClassicalFactsX.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFactsX.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFactsX.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFactsX.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFactsX.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFactsX.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFactsX.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFactsX.independence_general_premises_drinker	40
Coq.Logic.ClassicalFactsX.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFactsX.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFactsX.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFactsX.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFactsX.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFactsX.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFactsX.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.SetoidChoiceX.setoid_choice	40
Coq.Logic.SetoidChoiceX.representative_choice	40
Coq.Logic.EpsilonX.constructive_indefinite_description	40
Coq.Logic.EpsilonX.small_drinkers'_paradox	40
Coq.Logic.EpsilonX.iota_statement	40
Coq.Logic.EpsilonX.constructive_definite_description	40	2.0.0.3	search with cache (only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: exists x; only 1: firstorder).	0.160557985306	9
Coq.Logic.IndefiniteDescriptionX.constructive_definite_description	40
Coq.Logic.IndefiniteDescriptionX.functional_choice	40
Coq.Logic.ExtensionalityFactsX.diagonal_projs_same_behavior	40	62	search with cache (only 1: destruct x).	1.63901305199	2161
Coq.Logic.ExtensionalityFactsX.diagonal_inverse1	40
Coq.Logic.ExtensionalityFactsX.diagonal_inverse2	40	55.13	search with cache (only 1: repeat split; only 1: destruct b).	8.20820999146	6581
Coq.Logic.ExtensionalityFactsX.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFactsX.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFactsX.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFactsX.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFactsX.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFactsX.BijComp_FunctExt	40
Coq.Logic.DecidableX.dec_not_not	40
Coq.Logic.DecidableX.dec_True	40		search with cache ().	0.0103120803833	0
Coq.Logic.DecidableX.dec_False	40		search with cache ().	0.0122470855713	0
Coq.Logic.DecidableX.dec_or	40
Coq.Logic.DecidableX.dec_and	40	32	search with cache (only 1: firstorder).	0.725346088409	526
Coq.Logic.DecidableX.dec_not	40
Coq.Logic.DecidableX.dec_imp	40	13	search with cache (only 1: firstorder  (subst; auto)).	0.488713979721	145
Coq.Logic.DecidableX.dec_iff	40	29	search with cache (only 1: firstorder).	1.13357996941	601
Coq.Logic.DecidableX.not_not	40
Coq.Logic.DecidableX.not_or	40		search with cache ().	0.0189731121063	0
Coq.Logic.DecidableX.not_and	40	40	search with cache (only 1: inversion H).	10.8326818943	2032
Coq.Logic.DecidableX.not_imp	40	111	search with cache (only 1: elim H).	30.7888510227	8460
Coq.Logic.DecidableX.imp_simp	40	43	search with cache (only 1: case H).	9.24358105659	2450
Coq.Logic.DecidableX.not_iff	40
Coq.Logic.DecidableX.not_true_iff	40		search with cache ().	0.0104720592499	0
Coq.Logic.DecidableX.not_false_iff	40		search with cache ().	0.0105650424957	0
Coq.Logic.DecidableX.not_not_iff	40
Coq.Logic.DecidableX.contrapositive	40
Coq.Logic.DecidableX.or_not_l_iff_1	40	43	search with cache (only 1: case H).	9.1952059269	2450
Coq.Logic.DecidableX.or_not_l_iff_2	40
Coq.Logic.DecidableX.or_not_r_iff_1	40	30	search with cache (only 1: firstorder).	4.73409318924	1155
Coq.Logic.DecidableX.or_not_r_iff_2	40	20	search with cache (only 1: elim H).	0.505726099014	252
Coq.Logic.DecidableX.imp_not_l	40	30	search with cache (only 1: firstorder).	9.60511994362	1089
Coq.Logic.DecidableX.not_or_iff	40		search with cache ().	0.017706155777	0
Coq.Logic.DecidableX.not_and_iff	40		search with cache ().	0.0152921676636	0
Coq.Logic.DecidableX.not_imp_iff	40	111	search with cache (only 1: elim H).	31.3077549934	8460
Coq.Logic.DecidableX.not_imp_rev_iff	40	111	search with cache (only 1: elim H).	30.6067180634	8460
Coq.Logic.DecidableX.dec_functional_relation	40
Coq.Logic.ProofIrrelevanceFactsX.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFactsX.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFactsX.ProofIrrelevanceTheory.subsetT_eq_compat	40
Coq.Logic.FunctionalExtensionalityX.equal_f	40		search with cache ().	0.0127239227295	0
Coq.Logic.FunctionalExtensionalityX.equal_f_dep	40		search with cache ().	0.012610912323	0
Coq.Logic.FunctionalExtensionalityX.functional_extensionality	40
Coq.Logic.FunctionalExtensionalityX.forall_extensionality	40
Coq.Logic.FunctionalExtensionalityX.forall_extensionalityP	40	1	search with cache (only 1: apply functional_extensionality in H).	0.0326600074768	2
Coq.Logic.FunctionalExtensionalityX.forall_extensionalityS	40	1	search with cache (only 1: apply functional_extensionality in H).	0.0322420597076	2
Coq.Logic.FunctionalExtensionalityX.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionalityX.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionalityX.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionalityX.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionalityX.f_equal__functional_extensionality_dep_good__fun	40
Coq.Logic.FunctionalExtensionalityX.eta_expansion_dep	40		search with cache ().	0.00984215736389	0
Coq.Logic.FunctionalExtensionalityX.eta_expansion	40		search with cache ().	0.00957083702087	0
Coq.Logic.ClassicalDescriptionX.excluded_middle_informative	40
Coq.Logic.ClassicalDescriptionX.classical_definite_description	40
Coq.Logic.ClassicalDescriptionX.dependent_unique_choice	40
Coq.Logic.ClassicalDescriptionX.unique_choice	40
Coq.Logic.ClassicalEpsilonX.constructive_definite_description	40
Coq.Logic.ClassicalEpsilonX.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilonX.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilonX.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilonX.choice	40
Coq.Logic.WeakFanX.Y_unique	40
Coq.Logic.WeakFanX.Y_approx	40
Coq.Logic.WeakFanX.WeakFanTheorem	40
Coq.Logic.PropFactsX.injection_is_involution_in_Prop	40
Coq.Logic.ChoiceFactsX.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_imp_functional_rel_reification	40	6.53.45	search with cache (only 1: intros b Hb; only 1: apply H; only 1: firstorder).	23.5560419559	18983
Coq.Logic.ChoiceFactsX.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFactsX.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFactsX.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFactsX.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFactsX.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFactsX.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFactsX.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFactsX.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFactsX.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFactsX.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFactsX.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFactsX.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFactsX.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFactsX.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFactsX.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFactsX.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFactsX.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFactsX.dep_non_dep_functional_choice	40	48.89	search with cache (only 1: intros s2 n; only 1: apply H).	23.2916240692	33274
Coq.Logic.ChoiceFactsX.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFactsX.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFactsX.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFactsX.dep_non_dep_functional_rel_reification	40	41	search with cache (only 1: apply H).	4.52835178375	2535
Coq.Logic.ChoiceFactsX.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFactsX.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFactsX.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFactsX.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFactsX.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFactsX.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFactsX.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFactsX.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFactsX.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFactsX.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFactsX.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFactsX.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFactsX.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFactsX.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFactsX.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFactsX.gen_setoid_fun_choice_imp_setoid_fun_choice	40	11.13.0	search with cache (only 1: simpl_relation; only 1: apply H; only 1: exact eq_equivalence).	19.3033070564	884
Coq.Logic.ChoiceFactsX.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFactsX.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFactsX.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_functional_choice_second_characterization	40
Coq.Logic.DiaconescuX.prop_ext	40
Coq.Logic.DiaconescuX.proof_irrel	40
Coq.Logic.DiaconescuX.guarded_rel_choice	40
Coq.Logic.DiaconescuX.AC_bool_subset_to_bool	40
Coq.Logic.DiaconescuX.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.DiaconescuX.a1'	40		search with cache ().	0.02179479599	0
Coq.Logic.DiaconescuX.a2'	40		search with cache ().	0.0225250720978	0
Coq.Logic.DiaconescuX.projT1_injective	40
Coq.Logic.DiaconescuX.decide	40
Coq.Logic.DiaconescuX.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.DiaconescuX.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.DiaconescuX.extensional_epsilon_imp_EM	40
Coq.Logic.HurkensX.Generic.Omega	40
Coq.Logic.HurkensX.Generic.lemma1	40
Coq.Logic.HurkensX.Generic.lemma2	40
Coq.Logic.HurkensX.Generic.paradox	40
Coq.Logic.HurkensX.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.HurkensX.NoRetractToModalProposition.strength	40	18	search with cache (only 1: firstorder).	0.200030088425	145
Coq.Logic.HurkensX.NoRetractToModalProposition.modal	40
Coq.Logic.HurkensX.NoRetractToModalProposition.Forall	40		search with cache ().	0.0224168300629	0
Coq.Logic.HurkensX.NoRetractToModalProposition.paradox	40
Coq.Logic.HurkensX.NoRetractToNegativeProp.paradox	40
Coq.Logic.HurkensX.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.HurkensX.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.HurkensX.NoRetractFromTypeToProp.paradox	40
Coq.Logic.HurkensX.TypeNeqSmallType.up_down	40		search with cache ().	0.0188310146332	0
Coq.Logic.HurkensX.TypeNeqSmallType.paradox	40
Coq.Logic.HurkensX.PropNeqType.paradox	40
Coq.Logic.JMeqX.JMeq_sym	40
Coq.Logic.JMeqX.JMeq_trans	40	0	search with cache (only 1: destruct H).	0.027724981308	1
Coq.Logic.JMeqX.JMeq_ind	40
Coq.Logic.JMeqX.JMeq_rec	40
Coq.Logic.JMeqX.JMeq_rect	40
Coq.Logic.JMeqX.JMeq_ind_r	40
Coq.Logic.JMeqX.JMeq_rec_r	40
Coq.Logic.JMeqX.JMeq_rect_r	40
Coq.Logic.JMeqX.JMeq_congr	40		search with cache ().	0.0109970569611	0
Coq.Logic.JMeqX.JMeq_eq_dep_id	40
Coq.Logic.JMeqX.eq_dep_id_JMeq	40
Coq.Logic.JMeqX.eq_dep_JMeq	40	20	search with cache (only 1: rewrite <- H).	0.842367887497	395
Coq.Logic.JMeqX.eq_dep_strictly_stronger_JMeq	40	0.0.0.0.0.1	search with cache (only 1: exists bool; only 1: exists (fun _ => True); only 1: exists true; only 1: exists false; only 1: exists I; only 1: exists I).	0.174814939499	7
Coq.Logic.JMeqX.JMeq_eq_dep	40		search with cache ().	0.0118892192841	0
Coq.Logic.Classical_Pred_TypeX.not_all_not_ex	40
Coq.Logic.Classical_Pred_TypeX.not_all_ex_not	40
Coq.Logic.Classical_Pred_TypeX.not_ex_all_not	40	114	search with cache (only 1: apply H).	29.5971140862	46139
Coq.Logic.Classical_Pred_TypeX.not_ex_not_all	40	115.7	search with cache (only 1: apply NNPP; only 1: apply H).	31.5035309792	45210
Coq.Logic.Classical_Pred_TypeX.ex_not_not_all	40		search with cache ().	0.0111951828003	0
Coq.Logic.Classical_Pred_TypeX.all_not_not_ex	40		search with cache ().	0.0134220123291	0
Coq.Logic.PropExtensionalityX.proof_irrelevance	40
Coq.Logic.ConstructiveEpsilonX.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilonX.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilonX.P_implies_acc	40		search with cache ().	0.0295779705048	0
Coq.Logic.ConstructiveEpsilonX.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilonX.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilonX.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilonX.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilonX.P'_decidable	40		search with cache ().	0.0922319889069	0
Coq.Logic.ConstructiveEpsilonX.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilonX.constructive_definite_ground_description	40	0.0.0.20.4	search with cache (only 1: assert (H1 : exists n : nat, P' n); only 1: firstorder; only 1: exists (f x); only 1: unfold P'; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1).	15.6205010414	3426
Coq.Logic.FinFunX.Finite_alt	40
Coq.Logic.FinFunX.Injective_map_NoDup	40
Coq.Logic.FinFunX.Injective_list_carac	40
Coq.Logic.FinFunX.Injective_carac	40
Coq.Logic.FinFunX.Surjective_list_carac	40
Coq.Logic.FinFunX.Surjective_carac	40
Coq.Logic.FinFunX.Endo_Injective_Surjective	40
Coq.Logic.FinFunX.Finite_Empty_or_not	40
Coq.Logic.FinFunX.Surjective_inverse	40
Coq.Logic.FinFunX.Injective_Surjective_Bijective	40
Coq.Logic.FinFunX.Fin_Finite	40
Coq.Logic.FinFunX.Fin2Restrict.extend_ok	40
Coq.Logic.FinFunX.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFunX.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFunX.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFunX.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFunX.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFunX.Fin2Restrict.extend_injective	40
Coq.Logic.FinFunX.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFunX.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFunX.bInjective_bSurjective	40
Coq.Logic.FinFunX.bSurjective_bBijective	40
Coq.Logic.HLevelsX.forall_hprop	40
Coq.Logic.HLevelsX.and_hprop	40
Coq.Logic.HLevelsX.impl_hprop	40	3.0	search with cache (only 1: intros p q; only 1: apply functional_extensionality_dep).	0.0579428672791	5
Coq.Logic.HLevelsX.false_hprop	40		search with cache ().	0.0179600715637	0
Coq.Logic.HLevelsX.true_hprop	40
Coq.Logic.HLevelsX.not_hprop	40	3.0	search with cache (only 1: intros p q; only 1: apply functional_extensionality).	0.0523130893707	5
Coq.Logic.HLevelsX.hset_hprop	40
Coq.Logic.HLevelsX.eq_trans_cancel	40
Coq.Logic.HLevelsX.hset_hOneType	40
Coq.Logic.HLevelsX.hprop_hprop	40
Coq.Logic.HLevelsX.hprop_hset	40
Coq.Logic.BerardiX.AC_IF	40
Coq.Logic.BerardiX.AC	40
Coq.Logic.BerardiX.L1	40
Coq.Logic.BerardiX.retract_pow_U_U	40
Coq.Logic.BerardiX.not_has_fixpoint	40
Coq.Logic.BerardiX.classical_proof_irrelevance	40
Coq.Logic.PropExtensionalityFactsX.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFactsX.PredExt_imp_PropFunExt	40	60	search with cache (only 1: apply H).	1.79646086693	2640
Coq.Logic.PropExtensionalityFactsX.PropExt_and_PropFunExt_imp_PredExt	40		search with cache ().	0.0301368236542	0
Coq.Logic.PropExtensionalityFactsX.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFactsX.PropExt_imp_ProvPropExt	40		search with cache ().	0.0184288024902	0
Coq.Logic.PropExtensionalityFactsX.PropExt_imp_RefutPropExt	40	23	search with cache (only 1: intuition).	0.362009048462	255
Coq.Logic.ClassicalChoiceX.singleton_choice	40
Coq.Logic.ClassicalChoiceX.choice	40
Coq.setoid_ring.Rings_RX.Rsth	40	2	search with cache (only 1: constructor).	0.0430769920349	3
Coq.setoid_ring.Rings_RX.Rri	40
Coq.setoid_ring.Rings_RX.Rcri	40
Coq.setoid_ring.Rings_RX.R_one_zero	40	47.15	search with cache (only 1: pose proof Rlt_sqrt3_0 as H1; only 1: Lra.lra).	9.71448683739	5099
Coq.setoid_ring.Rings_RX.Rdi	40
Coq.setoid_ring.RealFieldX.RTheory	40
Coq.setoid_ring.RealFieldX.Rfield	40
Coq.setoid_ring.RealFieldX.Rlt_n_Sn	40
Coq.setoid_ring.RealFieldX.Rlt_0_2	40
Coq.setoid_ring.RealFieldX.Rgen_phiPOS	40
Coq.setoid_ring.RealFieldX.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealFieldX.Rdef_pow_add	40
Coq.setoid_ring.RealFieldX.R_power_theory	40
Coq.setoid_ring.Ncring_initialX.Zsth	40	0	search with cache (only 1: exact eq_equivalence).	0.0268471240997	1
Coq.setoid_ring.Ncring_initialX.Zr	40
Coq.setoid_ring.Ncring_initialX.same_gen	40
Coq.setoid_ring.Ncring_initialX.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initialX.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initialX.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initialX.same_genZ	40
Coq.setoid_ring.Ncring_initialX.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initialX.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initialX.match_compOpp	40	3	search with cache (only 1: induction x).	0.0592150688171	4
Coq.setoid_ring.Ncring_initialX.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initialX.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initialX.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initialX.gen_phiZ_ext	40		search with cache ().	0.0200002193451	0
Coq.setoid_ring.Ncring_initialX.gen_phiZ_morph	40
Coq.setoid_ring.Ncring_tacX.Zeqb_ok	40	7	search with cache (only 1: apply Zeq_bool_eq).	0.149808883667	13
Coq.setoid_ring.Ncring_tacX.comm	40
Coq.setoid_ring.NcringX.pow_pos_comm	40
Coq.setoid_ring.NcringX.pow_pos_succ	40
Coq.setoid_ring.NcringX.pow_pos_add	40
Coq.setoid_ring.NcringX.pow_N_pow_N	40		search with cache ().	0.0284440517426	0
Coq.setoid_ring.NcringX.ring_mul_0_l	40
Coq.setoid_ring.NcringX.ring_mul_0_r	40
Coq.setoid_ring.NcringX.ring_opp_mul_l	40
Coq.setoid_ring.NcringX.ring_opp_mul_r	40
Coq.setoid_ring.NcringX.ring_opp_add	40
Coq.setoid_ring.NcringX.ring_opp_opp	40
Coq.setoid_ring.NcringX.ring_sub_ext	40
Coq.setoid_ring.NcringX.ring_add_0_r	40	0.1	search with cache (only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l).	0.141661167145	3
Coq.setoid_ring.NcringX.ring_add_assoc1	40	6.10	search with cache (only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x)).	2.52079892159	276
Coq.setoid_ring.NcringX.ring_add_assoc2	40	1.2.9	search with cache (only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x)).	1.12514996529	93
Coq.setoid_ring.NcringX.ring_opp_zero	40
Coq.setoid_ring.BinListX.jump_tl	40
Coq.setoid_ring.BinListX.jump_succ	40
Coq.setoid_ring.BinListX.jump_add	40
Coq.setoid_ring.BinListX.jump_pred_double	40
Coq.setoid_ring.BinListX.nth_jump	40
Coq.setoid_ring.BinListX.nth_pred_double	40
Coq.setoid_ring.Rings_ZX.Zcri	40
Coq.setoid_ring.Rings_ZX.Z_one_zero	40		search with cache ().	0.0199608802795	0
Coq.setoid_ring.Rings_ZX.Zdi	40
Coq.setoid_ring.Ring_theoryX.pow_pos_swap	40
Coq.setoid_ring.Ring_theoryX.pow_pos_succ	40
Coq.setoid_ring.Ring_theoryX.pow_pos_add	40
Coq.setoid_ring.Ring_theoryX.pow_N_pow_N	40		search with cache ().	0.0215091705322	0
Coq.setoid_ring.Ring_theoryX.get_sign_None_th	40		search with cache ().	0.0425138473511	0
Coq.setoid_ring.Ring_theoryX.IDmorph	40		search with cache ().	0.116528987885	0
Coq.setoid_ring.Ring_theoryX.Eqsth	40	0	search with cache (only 1: exact eq_equivalence).	0.0936510562897	1
Coq.setoid_ring.Ring_theoryX.Eq_s_ext	40	11	search with cache (only 1: constructor).	0.238580942154	33
Coq.setoid_ring.Ring_theoryX.Eq_ext	40
Coq.setoid_ring.Ring_theoryX.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theoryX.rmul_ext1_Proper	40	27	search with cache (only 1: firstorder).	0.629499197006	361
Coq.setoid_ring.Ring_theoryX.SRopp_ext	40		search with cache ().	0.0178620815277	0
Coq.setoid_ring.Ring_theoryX.SReqe_Reqe	40
Coq.setoid_ring.Ring_theoryX.SRopp_mul_l	40		search with cache ().	0.0381200313568	0
Coq.setoid_ring.Ring_theoryX.SRopp_add	40		search with cache ().	0.0406510829926	0
Coq.setoid_ring.Ring_theoryX.SRsub_def	40		search with cache ().	0.0403959751129	0
Coq.setoid_ring.Ring_theoryX.SRIDmorph	40		search with cache ().	0.0721199512482	0
Coq.setoid_ring.Ring_theoryX.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theoryX.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theoryX.rmul_ext2_Proper	40	61	search with cache (only 1: firstorder).	5.29991292953	2392
Coq.setoid_ring.Ring_theoryX.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theoryX.Rmul_0_l	40
Coq.setoid_ring.Ring_theoryX.Ropp_mul_l	40
Coq.setoid_ring.Ring_theoryX.Ropp_add	40
Coq.setoid_ring.Ring_theoryX.Ropp_opp	40
Coq.setoid_ring.Ring_theoryX.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theoryX.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theoryX.copp_ext_Proper	40
Coq.setoid_ring.Ring_theoryX.phi_ext1_Proper	40		search with cache ().	0.0300159454346	0
Coq.setoid_ring.Ring_theoryX.Smorph_opp	40
Coq.setoid_ring.Ring_theoryX.Smorph_sub	40
Coq.setoid_ring.Ring_theoryX.ARth_SRth	40
Coq.setoid_ring.Ring_theoryX.ARsub_ext	40
Coq.setoid_ring.Ring_theoryX.ARadd_0_r	40	10.0	search with cache (only 1: elim ARth; only 1: let rec mrewrite := repeat (first [ rewrite (Ring_theory.ARadd_0_l ARth) | rewrite <- (Ring_theory.ARadd_comm ARth 0) | rewrite (Ring_theory.ARmul_1_l ARth) | rewrite <- (Ring_theory.ARmul_comm ARth 1) | rewrite (Ring_theory.ARmul_0_l ARth) | rewrite <- (Ring_theory.ARmul_comm ARth 0) | rewrite (Ring_theory.ARdistr_l ARth) | reflexivity | match goal with | |- context [ ?z * (?x + ?y) ] => rewrite (Ring_theory.ARmul_comm ARth z (x + y)) end ]) in mrewrite).	0.277338981628	52
Coq.setoid_ring.Ring_theoryX.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0409798622131	1
Coq.setoid_ring.Ring_theoryX.ARmul_0_r	40	0	search with cache (only 1: mrewrite).	0.0446240901947	1
Coq.setoid_ring.Ring_theoryX.ARdistr_r	40	13.1	search with cache (only 1: elim ARth; only 1: now rewrite !(Ring_theory.ARmul_comm ARth z)).	2.06588983536	359
Coq.setoid_ring.Ring_theoryX.ARadd_assoc1	40	11.2	search with cache (only 1: elim ARth; only 1: now rewrite <- !(Ring_theory.ARadd_assoc ARth), (Ring_theory.ARadd_comm ARth x)).	0.575249910355	120
Coq.setoid_ring.Ring_theoryX.ARadd_assoc2	40	14	search with cache (only 1: now rewrite <- !(Ring_theory.ARadd_assoc ARth), (Ring_theory.ARadd_comm ARth x)).	0.575689792633	126
Coq.setoid_ring.Ring_theoryX.ARmul_assoc1	40	13.32	search with cache (only 1: elim ARth; only 1: now rewrite <- (Ring_theory.ARmul_assoc ARth x), (Ring_theory.ARmul_comm ARth x)).	2.15320205688	1174
Coq.setoid_ring.Ring_theoryX.ARmul_assoc2	40	15.33	search with cache (only 1: elim ARth; only 1: now rewrite <- !(Ring_theory.ARmul_assoc ARth), (Ring_theory.ARmul_comm ARth x)).	2.41432285309	1351
Coq.setoid_ring.Ring_theoryX.ARopp_mul_r	40	6.11	search with cache (only 1: rewrite (Ring_theory.ARmul_comm ARth x y), (Ring_theory.ARopp_mul_l ARth); only 1: elim ARth).	1.02384710312	241
Coq.setoid_ring.Ring_theoryX.ARopp_zero	40
Coq.setoid_ring.InitialRingX.Zth	40		search with cache ().	0.0349090099335	0
Coq.setoid_ring.InitialRingX.radd_ext3_Proper	40
Coq.setoid_ring.InitialRingX.rmul_ext3_Proper	40
Coq.setoid_ring.InitialRingX.ropp_ext3_Proper	40
Coq.setoid_ring.InitialRingX.get_signZ_th	40
Coq.setoid_ring.InitialRingX.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRingX.same_gen	40
Coq.setoid_ring.InitialRingX.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRingX.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRingX.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRingX.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRingX.same_genZ	40
Coq.setoid_ring.InitialRingX.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRingX.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRingX.gen_phiZ_add	40
Coq.setoid_ring.InitialRingX.gen_phiZ_mul	40
Coq.setoid_ring.InitialRingX.gen_phiZ_ext	40		search with cache ().	0.0465381145477	0
Coq.setoid_ring.InitialRingX.gen_phiZ_morph	40
Coq.setoid_ring.InitialRingX.Nth	40
Coq.setoid_ring.InitialRingX.Neqb_ok	40	4.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply N.eqb_eq in H).	0.0888149738312	15
Coq.setoid_ring.InitialRingX.radd_ext4_Proper	40
Coq.setoid_ring.InitialRingX.rmul_ext4_Proper	40
Coq.setoid_ring.InitialRingX.same_genN	40
Coq.setoid_ring.InitialRingX.gen_phiN_add	40
Coq.setoid_ring.InitialRingX.gen_phiN_mult	40
Coq.setoid_ring.InitialRingX.gen_phiN_sub	40
Coq.setoid_ring.InitialRingX.gen_phiN_morph	40
Coq.setoid_ring.InitialRingX.radd_ext5_Proper	40
Coq.setoid_ring.InitialRingX.rmul_ext5_Proper	40
Coq.setoid_ring.InitialRingX.ropp_ext5_Proper	40
Coq.setoid_ring.InitialRingX.rsub_ext7_Proper	40
Coq.setoid_ring.InitialRingX.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRingX.gen_phiNword_cons	40
Coq.setoid_ring.InitialRingX.gen_phiNword_Nwcons	40
Coq.setoid_ring.InitialRingX.gen_phiNword_ok	40
Coq.setoid_ring.InitialRingX.Nwadd_ok	40
Coq.setoid_ring.InitialRingX.Nwopp_ok	40	5.14	search with cache (only 1: induction x; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite_sr Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm).	0.582203865051	201
Coq.setoid_ring.InitialRingX.Nwscal_ok	40
Coq.setoid_ring.InitialRingX.Nwmul_ok	40
Coq.setoid_ring.InitialRingX.gen_phiNword_morph	40
Coq.setoid_ring.InitialRingX.radd_ext_Proper	40
Coq.setoid_ring.InitialRingX.rmul_ext_Proper	40
Coq.setoid_ring.InitialRingX.ropp_ext_Proper	40
Coq.setoid_ring.InitialRingX.rsub_ext_Proper	40
Coq.setoid_ring.InitialRingX.triv_div_th	40
Coq.setoid_ring.InitialRingX.Ztriv_div_th	40
Coq.setoid_ring.InitialRingX.Ntriv_div_th	40
Coq.setoid_ring.RingX.BoolTheory	40
Coq.setoid_ring.RingX.bool_eq_ok	40	72	search with cache (only 1: destruct b1, b2).	3.63402891159	2909
Coq.setoid_ring.Ring_polynomX.radd_ext_Proper	40
Coq.setoid_ring.Ring_polynomX.rmul_ext_Proper	40
Coq.setoid_ring.Ring_polynomX.ropp_ext_Proper	40
Coq.setoid_ring.Ring_polynomX.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynomX.Pequiv_eq	40
Coq.setoid_ring.Ring_polynomX.Pphi_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.197017192841	1
Coq.setoid_ring.Ring_polynomX.Pinj_ext	40	3	search with cache (only 1: intros i j <- P Q H l).	0.352850914001	4
Coq.setoid_ring.Ring_polynomX.PX_ext	40	0.2	search with cache (only 1: intros P P' HP p p' <- Q Q' HQ l; only 1: now rewrite HP, HQ).	0.346293926239	4
Coq.setoid_ring.Ring_polynomX.jump_add'	40	0.1	search with cache (only 1: rewrite Pos.add_comm; only 1: apply jump_add).	0.325824975967	3
Coq.setoid_ring.Ring_polynomX.Peq_ok	40
Coq.setoid_ring.Ring_polynomX.Peq_spec	40
Coq.setoid_ring.Ring_polynomX.Pphi0	40	0	search with cache (only 1: apply (morph0 CRmorph)).	0.168828010559	1
Coq.setoid_ring.Ring_polynomX.Pphi1	40	0	search with cache (only 1: now rewrite (morph1 CRmorph)).	0.177222013474	1
Coq.setoid_ring.Ring_polynomX.mkPinj_ok	40	0.7	search with cache (only 1: destruct P; only 1: now rewrite Ring_polynom.jump_add').	0.367402076721	9
Coq.setoid_ring.Ring_polynomX.mkPinj_ext	40
Coq.setoid_ring.Ring_polynomX.pow_pos_add	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	1.16246008873	12
Coq.setoid_ring.Ring_polynomX.ceqb_spec	40	0.1	search with cache (only 1: generalize (morph_eq CRmorph c c'); only 1: destruct (c ?=! c')).	6.80558204651	66
Coq.setoid_ring.Ring_polynomX.mkPX_ok	40
Coq.setoid_ring.Ring_polynomX.mkPX_ext	40
Coq.setoid_ring.Ring_polynomX.PaddC_ok	40
Coq.setoid_ring.Ring_polynomX.PsubC_ok	40
Coq.setoid_ring.Ring_polynomX.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynomX.PmulC_ok	40
Coq.setoid_ring.Ring_polynomX.Popp_ok	40
Coq.setoid_ring.Ring_polynomX.PaddX_ok	40
Coq.setoid_ring.Ring_polynomX.Padd_ok	40
Coq.setoid_ring.Ring_polynomX.Psub_opp	40
Coq.setoid_ring.Ring_polynomX.Psub_ok	40
Coq.setoid_ring.Ring_polynomX.PmulI_ok	40
Coq.setoid_ring.Ring_polynomX.Pmul_ok	40
Coq.setoid_ring.Ring_polynomX.mkZmon_ok	40
Coq.setoid_ring.Ring_polynomX.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynomX.mkVmon_ok	40
Coq.setoid_ring.Ring_polynomX.Mcphi_ok	40
Coq.setoid_ring.Ring_polynomX.Mphi_ok	40
Coq.setoid_ring.Ring_polynomX.POneSubst_ok	40
Coq.setoid_ring.Ring_polynomX.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynomX.PNSubst_ok	40
Coq.setoid_ring.Ring_polynomX.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynomX.PSubstL_ok	40
Coq.setoid_ring.Ring_polynomX.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynomX.mkX_ok	40
Coq.setoid_ring.Ring_polynomX.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynomX.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynomX.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynomX.norm_aux_PEopp	40	15	search with cache (only 1: now destruct pe).	3.82453799248	150
Coq.setoid_ring.Ring_polynomX.norm_aux_spec	40
Coq.setoid_ring.Ring_polynomX.norm_subst_spec	40
Coq.setoid_ring.Ring_polynomX.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynomX.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynomX.norm_subst_ok	40
Coq.setoid_ring.Ring_polynomX.ring_correct	40
Coq.setoid_ring.Ring_polynomX.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynomX.mkmult1_ok	40
Coq.setoid_ring.Ring_polynomX.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynomX.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynomX.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynomX.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynomX.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynomX.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynomX.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynomX.mult_dev_ok	40
Coq.setoid_ring.Ring_polynomX.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynomX.local_mkpow_ok	40	0.0.0	search with cache (only 1: destruct p; only 1: now rewrite ?(rpow_pow_N pow_th); only 1: now rewrite ?(rpow_pow_N pow_th)).	0.597439050674	3
Coq.setoid_ring.Ring_polynomX.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynomX.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynomX.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynomX.mkpow_ok	40
Coq.setoid_ring.Ring_polynomX.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynomX.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynomX.ring_rw_correct	40	0.16	search with cache (only 1: rewrite Ring_polynom.Pphi_dev_ok; only 1: apply norm_subst_ok).	0.995688915253	126
Coq.setoid_ring.CringX.cring_eq_ext	40
Coq.setoid_ring.CringX.cring_almost_ring_theory	40
Coq.setoid_ring.CringX.cring_morph	40
Coq.setoid_ring.CringX.cring_power_theory	40		search with cache ().	0.059454202652	0
Coq.setoid_ring.CringX.cring_div_theory	40
Coq.setoid_ring.CringX.Zcri	40
Coq.setoid_ring.Field_theoryX.radd_ext_Proper	40
Coq.setoid_ring.Field_theoryX.rmul_ext_Proper	40
Coq.setoid_ring.Field_theoryX.ropp_ext_Proper	40	103	search with cache (only 1: firstorder).	8.00045204163	8452
Coq.setoid_ring.Field_theoryX.rsub_ext_Proper	40
Coq.setoid_ring.Field_theoryX.rinv_ext_Proper	40		search with cache ().	0.0407371520996	0
Coq.setoid_ring.Field_theoryX.ceqb_spec	40	0.1	search with cache (only 1: generalize (morph_eq CRmorph c c'); only 1: destruct (c =? c')%coef).	0.404833078384	3
Coq.setoid_ring.Field_theoryX.NPEequiv_eq	40
Coq.setoid_ring.Field_theoryX.NPEeval_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.231930017471	1
Coq.setoid_ring.Field_theoryX.rsub_0_l	40
Coq.setoid_ring.Field_theoryX.rsub_0_r	40
Coq.setoid_ring.Field_theoryX.rdiv_simpl	40
Coq.setoid_ring.Field_theoryX.rdiv_ext	40
Coq.setoid_ring.Field_theoryX.rmul_reg_l	40
Coq.setoid_ring.Field_theoryX.field_is_integral_domain	40
Coq.setoid_ring.Field_theoryX.ropp_neq_0	40
Coq.setoid_ring.Field_theoryX.rdiv_r_r	40
Coq.setoid_ring.Field_theoryX.rdiv1	40
Coq.setoid_ring.Field_theoryX.rdiv2	40
Coq.setoid_ring.Field_theoryX.rdiv2b	40
Coq.setoid_ring.Field_theoryX.rdiv5	40
Coq.setoid_ring.Field_theoryX.rdiv3b	40
Coq.setoid_ring.Field_theoryX.rdiv6	40
Coq.setoid_ring.Field_theoryX.rdiv4	40
Coq.setoid_ring.Field_theoryX.rdiv4b	40
Coq.setoid_ring.Field_theoryX.rdiv7	40
Coq.setoid_ring.Field_theoryX.rdiv7b	40
Coq.setoid_ring.Field_theoryX.rinv_nz	40
Coq.setoid_ring.Field_theoryX.rdiv8	40
Coq.setoid_ring.Field_theoryX.cross_product_eq	40
Coq.setoid_ring.Field_theoryX.pow_ext	40
Coq.setoid_ring.Field_theoryX.pow_N_ext	40
Coq.setoid_ring.Field_theoryX.pow_pos_0	40
Coq.setoid_ring.Field_theoryX.pow_pos_1	40
Coq.setoid_ring.Field_theoryX.pow_pos_cst	40
Coq.setoid_ring.Field_theoryX.pow_pos_mul_l	40
Coq.setoid_ring.Field_theoryX.pow_pos_add_r	40
Coq.setoid_ring.Field_theoryX.pow_pos_mul_r	40
Coq.setoid_ring.Field_theoryX.pow_pos_nz	40
Coq.setoid_ring.Field_theoryX.pow_pos_div	40
Coq.setoid_ring.Field_theoryX.PEadd_ext	40
Coq.setoid_ring.Field_theoryX.PEsub_ext	40
Coq.setoid_ring.Field_theoryX.PEmul_ext	40
Coq.setoid_ring.Field_theoryX.PEopp_ext	40
Coq.setoid_ring.Field_theoryX.PEpow_ext	40
Coq.setoid_ring.Field_theoryX.PE_1_l	40
Coq.setoid_ring.Field_theoryX.PE_1_r	40
Coq.setoid_ring.Field_theoryX.PEpow_0_r	40
Coq.setoid_ring.Field_theoryX.PEpow_1_r	40
Coq.setoid_ring.Field_theoryX.PEpow_1_l	40
Coq.setoid_ring.Field_theoryX.PEpow_add_r	40
Coq.setoid_ring.Field_theoryX.PEpow_mul_l	40
Coq.setoid_ring.Field_theoryX.PEpow_mul_r	40
Coq.setoid_ring.Field_theoryX.PEpow_nz	40
Coq.setoid_ring.Field_theoryX.if_true	40
Coq.setoid_ring.Field_theoryX.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theoryX.PExpr_eq_spec	40
Coq.setoid_ring.Field_theoryX.NPEadd_ok	40
Coq.setoid_ring.Field_theoryX.NPEsub_ok	40
Coq.setoid_ring.Field_theoryX.NPEopp_ok	40
Coq.setoid_ring.Field_theoryX.NPEpow_ok	40
Coq.setoid_ring.Field_theoryX.NPEmul_ok	40
Coq.setoid_ring.Field_theoryX.PEsimp_ok	40
Coq.setoid_ring.Field_theoryX.PCond_cons	40
Coq.setoid_ring.Field_theoryX.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theoryX.PCond_cons_inv_r	40
Coq.setoid_ring.Field_theoryX.PCond_app	40
Coq.setoid_ring.Field_theoryX.absurd_PCond_bottom	40
Coq.setoid_ring.Field_theoryX.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theoryX.default_isIn_ok	40
Coq.setoid_ring.Field_theoryX.isIn_ok	40
Coq.setoid_ring.Field_theoryX.split_aux_ok1	40
Coq.setoid_ring.Field_theoryX.split_aux_ok	40
Coq.setoid_ring.Field_theoryX.split_ok_l	40
Coq.setoid_ring.Field_theoryX.split_ok_r	40
Coq.setoid_ring.Field_theoryX.split_nz_l	40
Coq.setoid_ring.Field_theoryX.split_nz_r	40
Coq.setoid_ring.Field_theoryX.Pcond_Fnorm	40
Coq.setoid_ring.Field_theoryX.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theoryX.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theoryX.Fnorm_ok	40
Coq.setoid_ring.Field_theoryX.Field_rw_correct	40
Coq.setoid_ring.Field_theoryX.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theoryX.Field_correct	40
Coq.setoid_ring.Field_theoryX.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theoryX.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theoryX.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theoryX.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theoryX.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theoryX.fcons_ok	40
Coq.setoid_ring.Field_theoryX.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theoryX.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theoryX.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theoryX.ceqb_spec'	40
Coq.setoid_ring.Field_theoryX.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theoryX.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theoryX.radd_ext3_Proper	40
Coq.setoid_ring.Field_theoryX.rmul_ext3_Proper	40
Coq.setoid_ring.Field_theoryX.ropp_ext3_Proper	40
Coq.setoid_ring.Field_theoryX.add_inj_r	40
Coq.setoid_ring.Field_theoryX.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theoryX.gen_phiN_inj	40
Coq.setoid_ring.Field_theoryX.gen_phiN_complete	40
Coq.setoid_ring.Field_theoryX.ring_S_inj	40
Coq.setoid_ring.Field_theoryX.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theoryX.gen_phiZ_inj	40
Coq.setoid_ring.Field_theoryX.gen_phiZ_complete	40
Coq.setoid_ring.Rings_QX.Qri	40
Coq.setoid_ring.Rings_QX.Qcri	40
Coq.setoid_ring.Rings_QX.Q_one_zero	40		search with cache ().	0.0224919319153	0
Coq.setoid_ring.Rings_QX.Qdi	40
Coq.setoid_ring.Integral_domainX.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domainX.pow_not_zero	40
Coq.setoid_ring.Integral_domainX.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynomX.cO	40		search with cache ().	0.0441970825195	0
Coq.setoid_ring.Ncring_polynomX.cI	40		search with cache ().	0.0429890155792	0
Coq.setoid_ring.Ncring_polynomX.Peq_ok	40
Coq.setoid_ring.Ncring_polynomX.Pphi0	40
Coq.setoid_ring.Ncring_polynomX.Pphi1	40
Coq.setoid_ring.Ncring_polynomX.mkPX_ok	40
Coq.setoid_ring.Ncring_polynomX.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynomX.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynomX.PmulC_ok	40
Coq.setoid_ring.Ncring_polynomX.Popp_ok	40
Coq.setoid_ring.Ncring_polynomX.PaddXPX	40
Coq.setoid_ring.Ncring_polynomX.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynomX.Padd_ok	40
Coq.setoid_ring.Ncring_polynomX.PaddX_ok	40
Coq.setoid_ring.Ncring_polynomX.Psub_ok	40
Coq.setoid_ring.Ncring_polynomX.Pmul_ok	40
Coq.setoid_ring.Ncring_polynomX.Psquare_ok	40
Coq.setoid_ring.Ncring_polynomX.mkX_ok	40	1	search with cache (only 1: Esimpl2).	0.343120098114	2
Coq.setoid_ring.Ncring_polynomX.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynomX.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynomX.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynomX.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynomX.norm_subst_ok	40	12.0	search with cache (only 1: unfold norm_subst; only 1: apply norm_aux_spec).	7.4104449749	123
Coq.setoid_ring.Ncring_polynomX.ring_correct	40
Coq.setoid_ring.ArithRingX.natSRth	40		search with cache ().	0.104823112488	0
Coq.setoid_ring.ArithRingX.nat_morph_N	40	0.0	search with cache (only 1: constructor; only 1: apply N.eqb_eq in H).	0.0983369350433	2
Coq.MSets.MSetRBTX.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBTX.MakeRaw.singleton_ok	40		search with cache ().	0.0136470794678	0
Coq.MSets.MSetRBTX.MakeRaw.makeBlack_spec	40	0.0.1.3.3.0.0.1.3.3	search with cache (only 1: functional induction min_elt s; only 1: intuition_in; only 1: rename _x0 into r; only 1: rename _x2 into l1,_x3 into x1,_x4 into r1; only 1: inv; only 1: functional induction min_elt s; only 1: intuition_in; only 1: rename _x0 into r; only 1: rename _x2 into l1,_x3 into x1,_x4 into r1; only 1: inv).	24.6163580418	2045
Coq.MSets.MSetRBTX.MakeRaw.makeRed_spec	40
Coq.MSets.MSetRBTX.MakeRaw.makeBlack_ok	40	21.5	search with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in).	4.769769907	813
Coq.MSets.MSetRBTX.MakeRaw.makeRed_ok	40	3.1.0	search with cache (only 1: functional induction max_elt s; only 1: inv; only 1: inv).	0.115456104279	7
Coq.MSets.MSetRBTX.MakeRaw.rmatch	40
Coq.MSets.MSetRBTX.MakeRaw.rrmatch	40
Coq.MSets.MSetRBTX.MakeRaw.rrmatch'	40
Coq.MSets.MSetRBTX.MakeRaw.lbal_match	40
Coq.MSets.MSetRBTX.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0279140472412	1
Coq.MSets.MSetRBTX.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBTX.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBTX.MakeRaw.rbalS_match	40
Coq.MSets.MSetRBTX.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBTX.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBTX.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBTX.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBTX.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBTX.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBTX.MakeRaw.ins_spec	40
Coq.MSets.MSetRBTX.MakeRaw.ins_ok	40
Coq.MSets.MSetRBTX.MakeRaw.add_spec'	40
Coq.MSets.MSetRBTX.MakeRaw.add_spec	40
Coq.MSets.MSetRBTX.MakeRaw.add_ok	40	4.1	search with cache (only 1: unfold add; only 1: eauto with *).	0.781317949295	29
Coq.MSets.MSetRBTX.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBTX.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBTX.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBTX.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBTX.MakeRaw.append_rr_match	40
Coq.MSets.MSetRBTX.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0321769714355	1
Coq.MSets.MSetRBTX.MakeRaw.append_spec	40
Coq.MSets.MSetRBTX.MakeRaw.append_ok	40
Coq.MSets.MSetRBTX.MakeRaw.del_spec	40
Coq.MSets.MSetRBTX.MakeRaw.del_ok	40
Coq.MSets.MSetRBTX.MakeRaw.remove_spec	40
Coq.MSets.MSetRBTX.MakeRaw.remove_ok	40	0.1	search with cache (only 1: destruct s; only 1: ok).	0.801903963089	22
Coq.MSets.MSetRBTX.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBTX.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBTX.MakeRaw.remove_min_spec2	40	2.2.1.1	search with cache (only 1: functional induction max_elt s; only 1: destruct delmin as (x0, s0); only 1: rename _x0 into r; only 1: destruct delmin as (x0, s0)).	0.278213024139	16
Coq.MSets.MSetRBTX.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBTX.MakeRaw.treeify_zero_spec	40		search with cache ().	0.014447927475	0
Coq.MSets.MSetRBTX.MakeRaw.treeify_one_spec	40	31.1	search with cache (only 1: intro n; only 1: destruct n).	1.09498500824	1653
Coq.MSets.MSetRBTX.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBTX.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBTX.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBTX.MakeRaw.plength_spec	40
Coq.MSets.MSetRBTX.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBTX.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBTX.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBTX.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBTX.MakeRaw.filter_elements	40
Coq.MSets.MSetRBTX.MakeRaw.filter_spec	40
Coq.MSets.MSetRBTX.MakeRaw.filter_ok	40
Coq.MSets.MSetRBTX.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBTX.MakeRaw.partition_spec	40
Coq.MSets.MSetRBTX.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBTX.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0395231246948	1
Coq.MSets.MSetRBTX.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBTX.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0264980792999	2
Coq.MSets.MSetRBTX.MakeRaw.INV_init	40
Coq.MSets.MSetRBTX.MakeRaw.INV_sym	40	26	search with cache (only 1: firstorder).	5.67932891846	777
Coq.MSets.MSetRBTX.MakeRaw.INV_drop	40
Coq.MSets.MSetRBTX.MakeRaw.INV_eq	40
Coq.MSets.MSetRBTX.MakeRaw.INV_lt	40
Coq.MSets.MSetRBTX.MakeRaw.INV_rev	40
Coq.MSets.MSetRBTX.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBTX.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBTX.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBTX.MakeRaw.union_ok	40
Coq.MSets.MSetRBTX.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBTX.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBTX.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBTX.MakeRaw.union_spec'	40
Coq.MSets.MSetRBTX.MakeRaw.union_spec	40
Coq.MSets.MSetRBTX.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBTX.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBTX.MakeRaw.inter_ok	40
Coq.MSets.MSetRBTX.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBTX.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBTX.MakeRaw.mem_proper	40
Coq.MSets.MSetRBTX.MakeRaw.inter_spec	40
Coq.MSets.MSetRBTX.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBTX.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBTX.MakeRaw.fold_remove_ok	40	0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: unfold flip in *; only 1: auto_tc).	0.140038967133	5
Coq.MSets.MSetRBTX.MakeRaw.diff_ok	40
Coq.MSets.MSetRBTX.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBTX.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBTX.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBTX.MakeRaw.diff_spec	40
Coq.MSets.MSetRBTX.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBTX.BalanceProps.arb_nrr_rb	40	28	search with cache (only 1: inversion_clear H).	1.88067388535	468
Coq.MSets.MSetRBTX.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBTX.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBTX.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBTX.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBTX.BalanceProps.maxdepth_lowerbound	40	0.0.0	search with cache (only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: apply maxdepth_cardinal).	0.123270988464	3
Coq.MSets.MSetRBTX.BalanceProps.singleton_rb	40	0	search with cache (only 1: unfold singleton).	0.0188190937042	1
Coq.MSets.MSetRBTX.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBTX.BalanceProps.makeRed_rr	40	0.0.0	search with cache (only 1: destruct t; only 1: descolor; only 1: invrb).	0.08651304245	3
Coq.MSets.MSetRBTX.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBTX.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBTX.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBTX.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBTX.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBTX.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBTX.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBTX.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBTX.BalanceProps.ifred_or	40
Coq.MSets.MSetRBTX.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBTX.BalanceProps.ins_arb	40
Coq.MSets.MSetRBTX.BalanceProps.add_rb	40
Coq.MSets.MSetRBTX.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBTX.BalanceProps.del_arb	40		search with cache ().	0.0121638774872	0
Coq.MSets.MSetRBTX.BalanceProps.remove_rb	40
Coq.MSets.MSetRBTX.BalanceProps.treeify_zero_rb	40		search with cache ().	0.0154271125793	0
Coq.MSets.MSetRBTX.BalanceProps.treeify_one_rb	40
Coq.MSets.MSetRBTX.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBTX.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBTX.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBTX.BalanceProps.filter_rb	40	3.1	search with cache (only 1: unfold filter; only 1: auto_tc).	0.0328230857849	6
Coq.MSets.MSetRBTX.BalanceProps.partition_rb1	40	0.0.0	search with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: auto_tc).	0.0415849685669	3
Coq.MSets.MSetRBTX.BalanceProps.partition_rb2	40	0.0.0	search with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: auto_tc).	0.0406670570374	3
Coq.MSets.MSetRBTX.BalanceProps.fold_add_rb	40	0.0.0.1.2	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: unfold flip in *; only 1: auto_tc).	0.148519992828	8
Coq.MSets.MSetRBTX.BalanceProps.fold_remove_rb	40	0.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: unfold flip in *; only 1: auto_tc).	0.156903028488	6
Coq.MSets.MSetRBTX.BalanceProps.union_rb	40
Coq.MSets.MSetRBTX.BalanceProps.inter_rb	40	0.2.1.0.0.0	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.407770872116	13
Coq.MSets.MSetRBTX.BalanceProps.diff_rb	40
Coq.MSets.MSetRBTX.Make.remove_min_spec1	40
Coq.MSets.MSetRBTX.Make.remove_min_spec2	40
Coq.MSets.MSetDecideX.WDecideOn.MSetLogicalFacts.test_push	40		search with cache ().	0.258373975754	0
Coq.MSets.MSetDecideX.WDecideOn.MSetLogicalFacts.test_pull	40		search with cache ().	0.359997034073	0
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40		search with cache ().	0.0140371322632	0
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: rewrite singleton_spec).	0.0223550796509	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_add_In	40	24	search with cache (only 1: fsetdec).	10.1529450417	588
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	2	search with cache (only 1: fsetdec).	0.0865108966827	3
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_not_In_disj	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_not_In_conj	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_iff_conj	40	10.2.2	search with cache (only 1: intuition; only 1: intuition; only 1: fsetdec).	16.0089430809	798
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_set_ops_1	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.eq_chain_test	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_too_complex	40	8.2.18	search with cache (only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: intuition).	6.94465017319	1016
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.function_test_1	40	23	search with cache (only 1: fsetdec).	2.57184576988	291
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.function_test_2	40	7	search with cache (only 1: fsetdec).	0.309746980667	13
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_baydemir	40	18	search with cache (only 1: fsetdec).	1.29855704308	152
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.eq_equiv	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.eq_equiv	40	10.22.9	search with cache (only 1: split; only 1: intros Hb; only 1: firstorder).	5.60324406624	2529
Coq.MSets.MSetInterfaceX.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_empty_r	40	9	search with cache (only 1: firstorder).	0.0230100154877	10
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterfaceX.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterfaceX.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterfaceX.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterfaceX.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.In_In	40		search with cache ().	0.0207059383392	0
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.Subset_Included	40		search with cache ().	0.0209090709686	0
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.Empty_Empty_set	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.singleton_Singleton	40	3.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: Dec.fsetdec; only 1: auto with *).	0.255594968796	6
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetGenTreeX.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTreeX.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTreeX.Props.isok_iff	40
Coq.MSets.MSetGenTreeX.Props.isok_Ok	40
Coq.MSets.MSetGenTreeX.Props.In_1	40
Coq.MSets.MSetGenTreeX.Props.In_compat	40
Coq.MSets.MSetGenTreeX.Props.In_node_iff	40
Coq.MSets.MSetGenTreeX.Props.In_leaf_iff	40		search with cache ().	0.0231900215149	0
Coq.MSets.MSetGenTreeX.Props.lt_leaf	40		search with cache ().	0.0283250808716	0
Coq.MSets.MSetGenTreeX.Props.gt_leaf	40		search with cache ().	0.0283770561218	0
Coq.MSets.MSetGenTreeX.Props.lt_tree_node	40
Coq.MSets.MSetGenTreeX.Props.gt_tree_node	40	0.1.1	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.419559001923	5
Coq.MSets.MSetGenTreeX.Props.lt_tree_not_in	40	9	search with cache (only 1: eapply OrderTac.lt_irrefl).	0.177581071854	10
Coq.MSets.MSetGenTreeX.Props.lt_tree_trans	40	0.3	search with cache (only 1: intro EQ; only 1: order).	0.21793794632	5
Coq.MSets.MSetGenTreeX.Props.gt_tree_not_in	40	2	search with cache (only 1: order).	0.0336549282074	3
Coq.MSets.MSetGenTreeX.Props.gt_tree_trans	40	0.3	search with cache (only 1: unfold gt_tree; only 1: order).	0.070170879364	5
Coq.MSets.MSetGenTreeX.Props.lt_tree_compat	40	0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: repeat red; only 1: order).	0.147032976151	3
Coq.MSets.MSetGenTreeX.Props.gt_tree_compat	40	0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: repeat red; only 1: order).	0.152089834213	3
Coq.MSets.MSetGenTreeX.Props.empty_spec	40		search with cache ().	0.0205800533295	0
Coq.MSets.MSetGenTreeX.Props.empty_ok	40		search with cache ().	0.0150809288025	0
Coq.MSets.MSetGenTreeX.Props.is_empty_spec	40
Coq.MSets.MSetGenTreeX.Props.mem_spec	40
Coq.MSets.MSetGenTreeX.Props.min_elt_spec1	40
Coq.MSets.MSetGenTreeX.Props.min_elt_spec2	40
Coq.MSets.MSetGenTreeX.Props.min_elt_spec3	40
Coq.MSets.MSetGenTreeX.Props.max_elt_spec1	40
Coq.MSets.MSetGenTreeX.Props.max_elt_spec2	40
Coq.MSets.MSetGenTreeX.Props.max_elt_spec3	40
Coq.MSets.MSetGenTreeX.Props.choose_spec1	40	1	search with cache (only 1: functional induction min_elt s).	0.253327131271	17
Coq.MSets.MSetGenTreeX.Props.choose_spec2	40
Coq.MSets.MSetGenTreeX.Props.choose_spec3	40
Coq.MSets.MSetGenTreeX.Props.elements_spec1'	40
Coq.MSets.MSetGenTreeX.Props.elements_spec1	40
Coq.MSets.MSetGenTreeX.Props.elements_spec2'	40
Coq.MSets.MSetGenTreeX.Props.elements_spec2	40
Coq.MSets.MSetGenTreeX.Props.elements_spec2w	40
Coq.MSets.MSetGenTreeX.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTreeX.Props.elements_cardinal	40
Coq.MSets.MSetGenTreeX.Props.elements_app	40
Coq.MSets.MSetGenTreeX.Props.elements_node	40
Coq.MSets.MSetGenTreeX.Props.rev_elements_app	40
Coq.MSets.MSetGenTreeX.Props.rev_elements_node	40
Coq.MSets.MSetGenTreeX.Props.rev_elements_rev	40
Coq.MSets.MSetGenTreeX.Props.sorted_app_inv	40
Coq.MSets.MSetGenTreeX.Props.elements_sort_ok	40
Coq.MSets.MSetGenTreeX.Props.for_all_spec	40
Coq.MSets.MSetGenTreeX.Props.exists_spec	40
Coq.MSets.MSetGenTreeX.Props.fold_spec'	40
Coq.MSets.MSetGenTreeX.Props.fold_spec	40
Coq.MSets.MSetGenTreeX.Props.subsetl_spec	40
Coq.MSets.MSetGenTreeX.Props.subsetr_spec	40
Coq.MSets.MSetGenTreeX.Props.subset_spec	40
Coq.MSets.MSetGenTreeX.Props.eq_equiv	40	35.0.7	search with cache (only 1: constructor; only 1: red; only 1: firstorder).	15.7686638832	2983
Coq.MSets.MSetGenTreeX.Props.eq_Leq	40
Coq.MSets.MSetGenTreeX.Props.lt_strorder	40
Coq.MSets.MSetGenTreeX.Props.lt_compat	40
Coq.MSets.MSetGenTreeX.Props.flatten_e_elements	40
Coq.MSets.MSetGenTreeX.Props.cons_1	40
Coq.MSets.MSetGenTreeX.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTreeX.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTreeX.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTreeX.Props.compare_Cmp	40
Coq.MSets.MSetGenTreeX.Props.compare_spec	40
Coq.MSets.MSetGenTreeX.Props.equal_spec	40
Coq.MSets.MSetGenTreeX.Props.mindepth_maxdepth	40	10	search with cache (only 1: elim s).	0.179579019547	21
Coq.MSets.MSetGenTreeX.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTreeX.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTreeX.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTreeX.Props.mindepth_log_cardinal	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.mem_eq	40	0.0.0	search with cache (only 1: generalize (FM.mem_iff s x), (FM.mem_iff s y), (FM.In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s)).	0.170779943466	3
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.choose_mem_1	40	2.0.13	search with cache (only 1: generalize (mem_iff s x); only 1: destruct (mem x s); only 1: intuition).	3.81779193878	629
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.choose_mem_2	40	4.2	search with cache (only 1: apply <- is_empty_spec; only 1: auto with set).	0.259490966797	22
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_mem_1	40	10	search with cache (only 1: intuition).	3.27533817291	186
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_mem_2	40	0.1.2	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s))).	2.58297491074	64
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_mem_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_mem_2	40	0.1.5	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s))).	1.8272459507	51
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0285148620605	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_mem	40	1.1.0.0.0.1	search with cache (only 1: generalize (FM.mem_iff (union s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: destruct (mem x (union s s'))).	35.8207387924	507
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.diff_mem	40	2.1.0.0.1	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (diff_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: destruct (mem x (diff s s'))).	30.800688982	524
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.mem_3	40	0.19	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (diff_spec s s' x); only 1: destruct (mem x s)).	8.09551882744	1114
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.mem_4	40	20	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (diff_spec s s' x)).	7.94878387451	1241
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_refl	40	2	search with cache (only 1: apply equal_1).	0.0314190387726	3
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_trans	40	5.0.2	search with cache (only 1: apply equal_1; only 1: apply -> equal_spec; only 1: rewrite (equal_2 H)).	0.184792995453	18
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_equal	40	1	search with cache (only 1: rewrite (equal_2 H)).	0.0269980430603	2
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_cardinal	40	5	search with cache (only 1: rewrite (equal_2 H)).	0.0471079349518	6
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_refl	40	1	search with cache (only 1: apply <- subset_spec).	0.0264821052551	2
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_antisym	40	14	search with cache (only 1: auto with set).	0.361396789551	91
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_equal	40	0	search with cache (only 1: auto with set).	0.077595949173	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_mem_3	40	5	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y)).	1.55034899712	62
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_equal	40	0.1	search with cache (only 1: apply equal_1; only 1: auto with set relations).	0.0467128753662	3
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_mem_3	40	6	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y)).	5.50147008896	157
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_equal	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_remove	40	0.7.2	search with cache (only 1: apply equal_1; only 1: generalize (mem_iff s x); only 1: Dec.fsetdec).	0.335525989532	48
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_add	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.singleton_mem_1	40	5.1	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	5.95569205284	215
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.singleton_mem_2	40	0.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x))).	12.5214021206	299
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.singleton_mem_3	40	5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y)).	0.117527961731	14
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_sym	40	0	search with cache (only 1: intuition).	0.102785110474	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0393781661987	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.033166885376	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0329720973969	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0289540290833	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0604870319366	3
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0533690452576	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0503671169281	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0519487857819	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0424518585205	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_sym	40	0.2	search with cache (only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.0895791053772	4
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0319690704346	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0311479568481	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0311348438263	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0293509960175	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0422229766846	2
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0286478996277	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0301339626312	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_add_2	40	4.1.4.2	search with cache (only 1: apply equal_1; only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s'); only 1: intuition).	36.2886829376	716
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0277240276337	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0270261764526	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0406949520111	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.diff_subset	40	0.0	search with cache (only 1: apply <- subset_spec; only 1: Dec.fsetdec).	0.121585130692	2
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0317139625549	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.165191173553	4
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.105218887329	2
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0967910289764	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0574109554291	2
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.fold_add	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_fold_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_cardinal_1	40	1	search with cache (only 1: auto with set).	0.168273210526	27
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_cardinal_2	40	0.4.3.0	search with cache (only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: destruct (mem x s); only 1: auto with *).	0.971439838409	141
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_cardinal	40	8	search with cache (only 1: auto with set).	0.088495016098	9
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.Comp'	40	17	search with cache (only 1: solve_proper).	3.02578997612	351
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.partition_filter_1	40	14	search with cache (only 1: intuition).	0.277247905731	75
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0354261398315	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.filter_union	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_mem_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.Comp'	40	0.5	search with cache (only 1: repeat red; only 1: f_equal).	0.0926899909973	12
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetAVLX.MakeRaw.singleton_spec	40	23	search with cache (only 1: inversion H).	2.32739496231	255
Coq.MSets.MSetAVLX.MakeRaw.singleton_ok	40		search with cache ().	0.0522150993347	0
Coq.MSets.MSetAVLX.MakeRaw.create_spec	40
Coq.MSets.MSetAVLX.MakeRaw.create_ok	40		search with cache ().	0.0191378593445	0
Coq.MSets.MSetAVLX.MakeRaw.bal_spec	40
Coq.MSets.MSetAVLX.MakeRaw.bal_ok	40
Coq.MSets.MSetAVLX.MakeRaw.add_spec'	40
Coq.MSets.MSetAVLX.MakeRaw.add_spec	40
Coq.MSets.MSetAVLX.MakeRaw.add_ok	40
Coq.MSets.MSetAVLX.MakeRaw.join_spec	40
Coq.MSets.MSetAVLX.MakeRaw.join_ok	40
Coq.MSets.MSetAVLX.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVLX.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVLX.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVLX.MakeRaw.merge_spec	40
Coq.MSets.MSetAVLX.MakeRaw.merge_ok	40
Coq.MSets.MSetAVLX.MakeRaw.remove_spec	40
Coq.MSets.MSetAVLX.MakeRaw.remove_ok	40
Coq.MSets.MSetAVLX.MakeRaw.concat_spec	40
Coq.MSets.MSetAVLX.MakeRaw.concat_ok	40
Coq.MSets.MSetAVLX.MakeRaw.split_spec1	40
Coq.MSets.MSetAVLX.MakeRaw.split_spec2	40
Coq.MSets.MSetAVLX.MakeRaw.split_spec3	40
Coq.MSets.MSetAVLX.MakeRaw.split_ok	40
Coq.MSets.MSetAVLX.MakeRaw.split_ok1	40	0.0.3.1.2	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: destruct (split x l); only 1: generalize (fun y => split_spec1 (s:=r) x y); only 1: destruct (split x r); only 1: intuition).	1.94219303131	61
Coq.MSets.MSetAVLX.MakeRaw.split_ok2	40	2	search with cache (only 1: destruct (@split_ok s x)).	0.0257070064545	3
Coq.MSets.MSetAVLX.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVLX.MakeRaw.inter_spec	40
Coq.MSets.MSetAVLX.MakeRaw.inter_ok	40
Coq.MSets.MSetAVLX.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVLX.MakeRaw.diff_spec	40
Coq.MSets.MSetAVLX.MakeRaw.diff_ok	40
Coq.MSets.MSetAVLX.MakeRaw.union_spec	40
Coq.MSets.MSetAVLX.MakeRaw.union_ok	40
Coq.MSets.MSetAVLX.MakeRaw.filter_spec	40
Coq.MSets.MSetAVLX.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVLX.MakeRaw.filter_ok	40
Coq.MSets.MSetAVLX.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVLX.MakeRaw.partition_spec2'	40
Coq.MSets.MSetAVLX.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVLX.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVLX.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVLX.MakeRaw.partition_ok2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.In_dec	40	5.0	search with cache (only 1: generalize (F.mem_iff s x); only 1: destruct (mem x s)).	0.180136919022	11
Coq.MSets.MSetPropertiesX.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.equal_refl	40		search with cache ().	0.0169820785522	0
Coq.MSets.MSetPropertiesX.WPropertiesOn.equal_sym	40		search with cache ().	0.0202050209045	0
Coq.MSets.MSetPropertiesX.WPropertiesOn.equal_trans	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_refl	40		search with cache ().	0.0146210193634	0
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_trans	40	1	search with cache (only 1: fsetdec).	0.0509479045868	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_antisym	40		search with cache ().	0.0208430290222	0
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0430209636688	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_empty	40	3.3.1	search with cache (only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: fsetdec).	0.100987911224	12
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_remove_3	40	1	search with cache (only 1: fsetdec).	0.107949972153	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_diff	40	1	search with cache (only 1: fsetdec).	0.0707519054413	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_add_3	40	3	search with cache (only 1: fsetdec).	0.110299825668	4
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.040256023407	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.in_subset	40		search with cache ().	0.0116550922394	0
Coq.MSets.MSetPropertiesX.WPropertiesOn.double_inclusion	40	1.1	search with cache (only 1: fsetdec; only 1: fsetdec).	0.0880579948425	4
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_is_empty_1	40	1	search with cache (only 1: fsetdec).	0.0553390979767	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0374460220337	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_equal	40	0.0.0	search with cache (only 1: red; only 1: fsetdec; only 1: fsetdec).	0.114962100983	3
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_add	40	2	search with cache (only 1: fsetdec).	0.125328063965	3
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_equal	40	3	search with cache (only 1: fsetdec).	0.197630882263	4
Coq.MSets.MSetPropertiesX.WPropertiesOn.Equal_remove	40	2	search with cache (only 1: fsetdec).	0.101974964142	3
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.0991880893707	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.111306905746	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.083428144455	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.193282842636	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_sym	40	4	search with cache (only 1: fsetdec).	0.128624916077	5
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.095990896225	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0985379219055	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0935750007629	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.113901138306	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0736808776855	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.123558998108	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.200453042984	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.194084882736	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0336880683899	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0339279174805	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0472230911255	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0519831180573	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0481760501862	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0791029930115	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0937211513519	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.not_in_union	40	5	search with cache (only 1: fsetdec).	16.206952095	104
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_sym	40	1	search with cache (only 1: fsetdec).	0.112497091293	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0670778751373	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0777289867401	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0870459079742	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.103670835495	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.137247085571	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.139808893204	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_add_1	40	3	search with cache (only 1: fsetdec).	0.66717505455	19
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.104769945145	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.0427310466766	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0422830581665	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0478489398956	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0494298934937	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0467660427094	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0489220619202	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0696649551392	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.diff_subset	40	1	search with cache (only 1: fsetdec).	0.0407280921936	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0860779285431	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0936620235443	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.121314048767	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.107041835785	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.Add_add	40	1.3.2.14	search with cache (only 1: intros E; only 1: fsetdec; only 1: intuition; only 1: intuition).	10.8704018593	553
Coq.MSets.MSetPropertiesX.WPropertiesOn.Add_remove	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.152006864548	3
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_Add	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_Add	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_Equal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_Add_2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.elements_empty	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.of_list_1	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.of_list_2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.of_list_3	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_rec	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_rec_nodep	40	1	search with cache (only 1: apply fold_rec).	0.133008003235	47
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_rel	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.set_induction	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_identity	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_0	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_1	40	2.3	search with cache (only 1: apply fold_rec_bis; only 1: fsetdec).	0.83783698082	143
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_1b	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_init	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_equal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_empty	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_add	40	3.3	search with cache (only 1: apply fold_2 with (eqA := eqA); only 1: intuition).	0.680413007736	78
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_fold	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_fold_2	40	0.8	search with cache (only 1: apply fold_equal; only 1: auto with set relations).	2.2356197834	170
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_union	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_plus	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_1	40	4.2.0	search with cache (only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H).	0.0819001197815	9
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_inv_2b	40	0.0.0.1.0	search with cache (only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: exists e; only 1: auto with relations).	1.36255788803	72
Coq.MSets.MSetPropertiesX.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_cardinal	40	0.0.0.4	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.126669883728	15
Coq.MSets.MSetPropertiesX.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_cardinal_le	40	1.7	search with cache (only 1: generalize (cardinal_inv_2 (s:=s)); only 1: rewrite <- union_inter_cardinal).	0.346505880356	53
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_cardinal_1	40	9	search with cache (only 1: eauto with set relations).	0.874185085297	113
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_cardinal_2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_cardinal_1	40	6.5	search with cache (only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: fsetdec).	1.606746912	261
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_cardinal_2	40	2	search with cache (only 1: eauto with set relations).	0.202489852905	33
Coq.MSets.MSetPropertiesX.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetPropertiesX.OrdProperties.gtb_1	40
Coq.MSets.MSetPropertiesX.OrdProperties.leb_1	40
Coq.MSets.MSetPropertiesX.OrdProperties.gtb_compat	40
Coq.MSets.MSetPropertiesX.OrdProperties.leb_compat	40	8.1.0	search with cache (only 1: intros P; only 1: unfold leb, gtb; only 1: rewrite H).	0.643059015274	125
Coq.MSets.MSetPropertiesX.OrdProperties.elements_split	40
Coq.MSets.MSetPropertiesX.OrdProperties.elements_Add	40
Coq.MSets.MSetPropertiesX.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetPropertiesX.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetPropertiesX.OrdProperties.set_induction_max	40
Coq.MSets.MSetPropertiesX.OrdProperties.set_induction_min	40
Coq.MSets.MSetPropertiesX.OrdProperties.fold_3	40
Coq.MSets.MSetPropertiesX.OrdProperties.fold_4	40
Coq.MSets.MSetPropertiesX.OrdProperties.fold_equal	40
Coq.MSets.MSetPropertiesX.OrdProperties.add_fold	40	0.0	search with cache (only 1: apply P.fold_equal; only 1: auto with set).	0.0533838272095	2
Coq.MSets.MSetPropertiesX.OrdProperties.remove_fold_2	40	0.0	search with cache (only 1: apply P.fold_equal; only 1: auto with set).	0.0600879192352	2
Coq.MSets.MSetPropertiesX.OrdProperties.choose_equal	40
Coq.Floats.FloatAxiomsX.Prim2SF_inj	40
Coq.Floats.FloatAxiomsX.SF2Prim_inj	40
Coq.Floats.FloatLemmasX.shift_value	40		search with cache ().	0.010833978653	0
Coq.Floats.FloatLemmasX.frexp_spec	40
Coq.Floats.FloatLemmasX.ldexp_spec	40
Coq.Relations.RelationsX.inverse_image_of_equivalence	40	2.0.0.0.0.0	search with cache (only 1: split; only 1: elim H; only 1: red; only 1: apply equiv_trans with (f y); only 1: red; only 1: elim H).	0.510851144791	19
Coq.Relations.RelationsX.inverse_image_of_eq	40	0	search with cache (only 1: split).	0.0387699604034	1
Coq.Relations.Operators_PropertiesX.clos_rt_is_preorder	40	0	search with cache (only 1: apply Build_preorder).	0.0508100986481	1
Coq.Relations.Operators_PropertiesX.clos_rt_idempotent	40	2	search with cache (only 1: induction 1).	0.205341815948	32
Coq.Relations.Operators_PropertiesX.clos_rt_clos_rst	40	1	search with cache (only 1: induction 1).	0.337156057358	47
Coq.Relations.Operators_PropertiesX.clos_r_clos_rt	40	0	search with cache (only 1: induction 1 as [? ?| ]).	0.0382859706879	1
Coq.Relations.Operators_PropertiesX.clos_rt_t	40
Coq.Relations.Operators_PropertiesX.clos_rst_is_equiv	40	0	search with cache (only 1: apply Build_equivalence).	0.134418964386	1
Coq.Relations.Operators_PropertiesX.clos_rst_idempotent	40	1	search with cache (only 1: induction 1).	0.664383888245	57
Coq.Relations.Operators_PropertiesX.clos_t1n_trans	40
Coq.Relations.Operators_PropertiesX.clos_trans_t1n	40
Coq.Relations.Operators_PropertiesX.clos_trans_t1n_iff	40	2.1	search with cache (only 1: apply Operators_Properties.clos_trans_t1n; only 1: apply Operators_Properties.clos_t1n_trans).	0.119189023972	5
Coq.Relations.Operators_PropertiesX.clos_tn1_trans	40
Coq.Relations.Operators_PropertiesX.clos_trans_tn1	40
Coq.Relations.Operators_PropertiesX.clos_trans_tn1_iff	40	1.2	search with cache (only 1: apply Operators_Properties.clos_trans_tn1; only 1: apply Operators_Properties.clos_tn1_trans).	0.123469114304	5
Coq.Relations.Operators_PropertiesX.clos_rt1n_step	40		search with cache ().	0.0177719593048	0
Coq.Relations.Operators_PropertiesX.clos_rtn1_step	40		search with cache ().	0.0187411308289	0
Coq.Relations.Operators_PropertiesX.clos_rt1n_rt	40
Coq.Relations.Operators_PropertiesX.clos_rt_rt1n	40
Coq.Relations.Operators_PropertiesX.clos_rt_rt1n_iff	40	0.6	search with cache (only 1: apply Operators_Properties.clos_rt_rt1n; only 1: apply Operators_Properties.clos_rt1n_rt).	0.0726890563965	15
Coq.Relations.Operators_PropertiesX.clos_rtn1_rt	40
Coq.Relations.Operators_PropertiesX.clos_rt_rtn1	40
Coq.Relations.Operators_PropertiesX.clos_rt_rtn1_iff	40	5.4	search with cache (only 1: apply Operators_Properties.clos_rt_rtn1; only 1: apply Operators_Properties.clos_rtn1_rt).	0.203988790512	29
Coq.Relations.Operators_PropertiesX.clos_refl_trans_ind_left	40
Coq.Relations.Operators_PropertiesX.rt1n_ind_right	40	13	search with cache (only 1: induction H1).	0.204287052155	66
Coq.Relations.Operators_PropertiesX.clos_refl_trans_ind_right	40
Coq.Relations.Operators_PropertiesX.clos_rst1n_rst	40
Coq.Relations.Operators_PropertiesX.clos_rst1n_trans	40
Coq.Relations.Operators_PropertiesX.clos_rst1n_sym	40	3.3.8	search with cache (only 1: elim H; only 1: apply Operators_Properties.clos_rst1n_trans with y0; only 1: apply Operators_Properties.clos_rst1n_trans with y0).	1.72069120407	279
Coq.Relations.Operators_PropertiesX.clos_rst_rst1n	40
Coq.Relations.Operators_PropertiesX.clos_rst_rst1n_iff	40	6.1.0	search with cache (only 1: apply Operators_Properties.clos_rst1n_sym; only 1: apply Operators_Properties.clos_rst_rst1n; only 1: apply Operators_Properties.clos_rst1n_rst).	2.21884894371	147
Coq.Relations.Operators_PropertiesX.clos_rstn1_rst	40
Coq.Relations.Operators_PropertiesX.clos_rstn1_trans	40
Coq.Relations.Operators_PropertiesX.clos_rstn1_sym	40	3.3.11	search with cache (only 1: elim H; only 1: apply Operators_Properties.clos_rstn1_trans with y0; only 1: apply Operators_Properties.clos_rstn1_trans with y0).	34.4392850399	4650
Coq.Relations.Operators_PropertiesX.clos_rst_rstn1	40	0.4.8	search with cache (only 1: elim H; only 1: apply Operators_Properties.clos_rstn1_sym; only 1: eapply Operators_Properties.clos_rstn1_trans).	18.723927021	1710
Coq.Relations.Operators_PropertiesX.clos_rst_rstn1_iff	40	1.2.0.0.0.0.0	search with cache (only 1: eapply Operators_Properties.clos_rstn1_trans; only 1: eapply Operators_Properties.clos_rstn1_trans; only 1: eapply Operators_Properties.clos_rstn1_trans; only 1: eapply Operators_Properties.clos_rstn1_trans; only 1: eapply Operators_Properties.clos_rstn1_trans; only 1: apply Operators_Properties.clos_rst_rstn1; only 1: apply Operators_Properties.clos_rstn1_rst).	0.415964841843	21
Coq.Relations.Operators_PropertiesX.clos_trans_transp_permute	40
Coq.ssr.ssrsetoidX.compat_Reflexive	40		search with cache ().	0.00813388824463	0
Coq.ssr.ssreflectX.master_key	40		search with cache ().	0.0145220756531	0
Coq.ssr.ssreflectX.lock	40
Coq.ssr.ssreflectX.not_locked_false_eq_true	40
Coq.ssr.ssreflectX.unlock	40	0	search with cache (only 1: by case : C ).	0.0321729183197	1
Coq.ssr.ssreflectX.locked_withE	40	0	search with cache (only 1: by case : k ).	0.0342328548431	1
Coq.ssr.ssreflectX.unlock_with	40	0	search with cache (only 1: by case : k ).	0.0344932079315	1
Coq.ssr.ssreflectX.nary_congruence	40
Coq.ssr.ssreflectX.ssr_congr_arrow	40		search with cache ().	0.0159029960632	0
Coq.ssr.ssreflectX.iffLR	40		search with cache ().	0.0215349197388	0
Coq.ssr.ssreflectX.iffRL	40		search with cache ().	0.0216729640961	0
Coq.ssr.ssreflectX.iffLRn	40		search with cache ().	0.0230960845947	0
Coq.ssr.ssreflectX.iffRLn	40		search with cache ().	0.023411989212	0
Coq.ssr.ssreflectX.abstract_context	40	17	search with cache (only 1: firstorder).	0.180929899216	126
Coq.ssr.ssrboolX.prop_congr	40		search with cache ().	0.00847911834717	0
Coq.ssr.ssrboolX.is_true_true	40		search with cache ().	0.00739598274231	0
Coq.ssr.ssrboolX.not_false_is_true	40		search with cache ().	0.00870513916016	0
Coq.ssr.ssrboolX.is_true_locked_true	40		search with cache ().	0.0080029964447	0
Coq.ssr.ssrboolX.negbT	40		search with cache ().	0.00884199142456	0
Coq.ssr.ssrboolX.negbTE	40	72	search with cache (only 1: Bool.destr_bool).	1.3245780468	2846
Coq.ssr.ssrboolX.negbF	40	17	search with cache (only 1: Bool.destr_bool).	0.178081989288	126
Coq.ssr.ssrboolX.negbFE	40	18	search with cache (only 1: Bool.destr_bool).	0.188550949097	145
Coq.ssr.ssrboolX.negbK	40	0	search with cache (only 1: by case).	0.0163450241089	1
Coq.ssr.ssrboolX.negbNE	40	86.65	search with cache (only 1: red; only 1: Bool.destr_bool).	11.7553389072	15897
Coq.ssr.ssrboolX.negb_inj	40	0	search with cache (only 1: exact : can_inj negbK ).	0.0203709602356	1
Coq.ssr.ssrboolX.negbLR	40	3	search with cache (only 1: Bool.destr_bool).	0.0205430984497	4
Coq.ssr.ssrboolX.negbRL	40	4	search with cache (only 1: Bool.destr_bool).	0.0226080417633	5
Coq.ssr.ssrboolX.contra	40	181	search with cache (only 1: Bool.destr_bool).	20.5076417923	29642
Coq.ssr.ssrboolX.contraL	40	182	search with cache (only 1: Bool.destr_bool).	20.4596300125	29825
Coq.ssr.ssrboolX.contraR	40	183	search with cache (only 1: Bool.destr_bool).	20.6892690659	30009
Coq.ssr.ssrboolX.contraLR	40	184	search with cache (only 1: Bool.destr_bool).	20.6525609493	30194
Coq.ssr.ssrboolX.contraT	40	184	search with cache (only 1: Bool.destr_bool).	14.8690600395	17160
Coq.ssr.ssrboolX.wlog_neg	40	132.68	search with cache (only 1: red; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end).	25.1445510387	32263
Coq.ssr.ssrboolX.contraFT	40
Coq.ssr.ssrboolX.contraFN	40
Coq.ssr.ssrboolX.contraTF	40	95	search with cache (only 1: Bool.destr_bool).	4.10817909241	4611
Coq.ssr.ssrboolX.contraNF	40	95	search with cache (only 1: Bool.destr_bool).	4.16011309624	4611
Coq.ssr.ssrboolX.contraFF	40	19.81	search with cache (only 1: Bool.destr_bool; only 1: intuition).	4.384360075	5398
Coq.ssr.ssrboolX.ifP	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.0233888626099	1
Coq.ssr.ssrboolX.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.021605014801	1
Coq.ssr.ssrboolX.ifT	40	30	search with cache (only 1: rewrite H).	3.27175307274	954
Coq.ssr.ssrboolX.ifF	40		search with cache ().	0.0106570720673	0
Coq.ssr.ssrboolX.ifN	40
Coq.ssr.ssrboolX.if_same	40	0	search with cache (only 1: by case b).	0.0216090679169	1
Coq.ssr.ssrboolX.if_neg	40	1	search with cache (only 1: by case b).	0.0213179588318	2
Coq.ssr.ssrboolX.fun_if	40	0	search with cache (only 1: by case b).	0.0214231014252	1
Coq.ssr.ssrboolX.if_arg	40	0	search with cache (only 1: by case b).	0.024710893631	1
Coq.ssr.ssrboolX.ifE	40		search with cache ().	0.00944399833679	0
Coq.ssr.ssrboolX.introNTF	40
Coq.ssr.ssrboolX.introTF	40
Coq.ssr.ssrboolX.elimNTF	40	7	search with cache (only 1: by case Hb; auto).	0.0180909633636	8
Coq.ssr.ssrboolX.elimTF	40	7	search with cache (only 1: by case Hb; auto).	0.0174357891083	8
Coq.ssr.ssrboolX.equivPif	40	2	search with cache (only 1: by case Hb; auto).	0.0188009738922	3
Coq.ssr.ssrboolX.xorPif	40	2.2	search with cache (only 1: by case Hb; auto; only 1: by case Hb; auto).	0.0369901657104	6
Coq.ssr.ssrboolX.introTFn	40
Coq.ssr.ssrboolX.elimTFn	40
Coq.ssr.ssrboolX.equivPifn	40
Coq.ssr.ssrboolX.xorPifn	40
Coq.ssr.ssrboolX.introT	40	13	search with cache (only 1: by case Pb).	0.238270998001	60
Coq.ssr.ssrboolX.introF	40	26.20.11	search with cache (only 1: destruct b, b'; only 1: by case Pb; only 1: by case Pb).	8.30410599709	3264
Coq.ssr.ssrboolX.introN	40	13	search with cache (only 1: by case Pb).	0.18964600563	60
Coq.ssr.ssrboolX.introNf	40	20	search with cache (only 1: by case Pb).	0.357479095459	186
Coq.ssr.ssrboolX.introTn	40
Coq.ssr.ssrboolX.introFn	40
Coq.ssr.ssrboolX.elimT	40
Coq.ssr.ssrboolX.elimF	40
Coq.ssr.ssrboolX.elimN	40
Coq.ssr.ssrboolX.elimNf	40
Coq.ssr.ssrboolX.elimTn	40
Coq.ssr.ssrboolX.elimFn	40
Coq.ssr.ssrboolX.introP	40
Coq.ssr.ssrboolX.iffP	40	3	search with cache (only 1: by case : Pb ; constructor; auto).	0.0314209461212	4
Coq.ssr.ssrboolX.equivP	40	1	search with cache (only 1: by case : Pb ; constructor; auto).	0.033707857132	2
Coq.ssr.ssrboolX.sumboolP	40	0	search with cache (only 1: by case : decQ ; constructor).	0.0282559394836	1
Coq.ssr.ssrboolX.appP	40
Coq.ssr.ssrboolX.sameP	40
Coq.ssr.ssrboolX.decPcases	40	25	search with cache (only 1: by case Pb).	0.339553117752	306
Coq.ssr.ssrboolX.decP	40	8	search with cache (only 1: by case : Pb ; constructor; auto).	0.0437579154968	9
Coq.ssr.ssrboolX.rwP	40
Coq.ssr.ssrboolX.rwP2	40
Coq.ssr.ssrboolX.altP	40	31	search with cache (only 1: by case  def_b: b / Pb ; constructor; rewrite ?def_b).	0.554114103317	483
Coq.ssr.ssrboolX.impliesP	40	47	search with cache (only 1: firstorder  auto with datatypes).	1.71548891068	1131
Coq.ssr.ssrboolX.impliesPn	40	48.11	search with cache (only 1: induction H0; only 1: firstorder  auto with datatypes).	2.97820305824	3022
Coq.ssr.ssrboolX.unlessL	40
Coq.ssr.ssrboolX.unlessR	40	1.15	search with cache (only 1: constructor; only 1: intro l).	0.298800945282	127
Coq.ssr.ssrboolX.unless_sym	40
Coq.ssr.ssrboolX.unlessP	40
Coq.ssr.ssrboolX.bind_unless	40
Coq.ssr.ssrboolX.unless_contra	40	2	search with cache (only 1: by split; case : b  =>[_|hC]; [ apply /unlessR  | apply /unlessL/hC  ]).	0.045086145401	3
Coq.ssr.ssrboolX.classicP	40
Coq.ssr.ssrboolX.classicW	40	22	search with cache (only 1: intro Hl).	0.167028903961	231
Coq.ssr.ssrboolX.classic_bind	40
Coq.ssr.ssrboolX.classic_EM	40
Coq.ssr.ssrboolX.classic_pick	40
Coq.ssr.ssrboolX.classic_imply	40
Coq.ssr.ssrboolX.all_and2	40		search with cache ().	0.0373620986938	0
Coq.ssr.ssrboolX.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0837020874023	1
Coq.ssr.ssrboolX.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.103137016296	1
Coq.ssr.ssrboolX.all_and5	40
Coq.ssr.ssrboolX.pair_andP	40		search with cache ().	0.0130770206451	0
Coq.ssr.ssrboolX.idP	40	0	search with cache (only 1: by case b1; constructor).	0.0201208591461	1
Coq.ssr.ssrboolX.boolP	40	0	search with cache (only 1: by case b1; constructor; auto).	0.0209629535675	1
Coq.ssr.ssrboolX.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.0183639526367	1
Coq.ssr.ssrboolX.negP	40	0	search with cache (only 1: by case b1; constructor; auto).	0.0191738605499	1
Coq.ssr.ssrboolX.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.0193140506744	1
Coq.ssr.ssrboolX.negPf	40	0	search with cache (only 1: by case b1; constructor).	0.0221149921417	1
Coq.ssr.ssrboolX.andP	40	0	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0275740623474	1
Coq.ssr.ssrboolX.and3P	40	0	search with cache (only 1: by case b1; case b2; case b3; case b4; constructor; try by case).	0.0873229503632	1
Coq.ssr.ssrboolX.and4P	40	0	search with cache (only 1: by case b1; case b2; case b3; case b4; constructor; try by case).	0.11298084259	1
Coq.ssr.ssrboolX.and5P	40	0	search with cache (only 1: by case b1; case b2; case b3; case b4; case b5; constructor; try by case).	0.0828330516815	1
Coq.ssr.ssrboolX.orP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0220899581909	1
Coq.ssr.ssrboolX.or3P	40
Coq.ssr.ssrboolX.or4P	40
Coq.ssr.ssrboolX.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0218780040741	1
Coq.ssr.ssrboolX.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0246629714966	1
Coq.ssr.ssrboolX.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto).	0.0188810825348	1
Coq.ssr.ssrboolX.andTb	40		search with cache ().	0.00977802276611	0
Coq.ssr.ssrboolX.andFb	40		search with cache ().	0.00897479057312	0
Coq.ssr.ssrboolX.andbT	40	0	search with cache (only 1: by case).	0.0162341594696	1
Coq.ssr.ssrboolX.andbF	40	0	search with cache (only 1: by case).	0.0152349472046	1
Coq.ssr.ssrboolX.andbb	40	0	search with cache (only 1: by case).	0.0161039829254	1
Coq.ssr.ssrboolX.andbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0176558494568	1
Coq.ssr.ssrboolX.andbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0205070972443	1
Coq.ssr.ssrboolX.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0201070308685	1
Coq.ssr.ssrboolX.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0211260318756	1
Coq.ssr.ssrboolX.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0471079349518	1
Coq.ssr.ssrboolX.orTb	40		search with cache ().	0.0097131729126	0
Coq.ssr.ssrboolX.orFb	40		search with cache ().	0.0107438564301	0
Coq.ssr.ssrboolX.orbT	40
Coq.ssr.ssrboolX.orbF	40	0	search with cache (only 1: by case).	0.016401052475	1
Coq.ssr.ssrboolX.orbb	40	0	search with cache (only 1: by case).	0.0175580978394	1
Coq.ssr.ssrboolX.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0177760124207	1
Coq.ssr.ssrboolX.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.021301984787	1
Coq.ssr.ssrboolX.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0208330154419	1
Coq.ssr.ssrboolX.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0218639373779	1
Coq.ssr.ssrboolX.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0321068763733	1
Coq.ssr.ssrboolX.andbN	40	0	search with cache (only 1: by case : b ).	0.0208740234375	1
Coq.ssr.ssrboolX.andNb	40	0	search with cache (only 1: by case : b ).	0.0211520195007	1
Coq.ssr.ssrboolX.orbN	40	0	search with cache (only 1: by case : b ).	0.024619102478	1
Coq.ssr.ssrboolX.orNb	40	0	search with cache (only 1: by case : b ).	0.0241680145264	1
Coq.ssr.ssrboolX.andb_orl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0272262096405	1
Coq.ssr.ssrboolX.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0270400047302	1
Coq.ssr.ssrboolX.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0273180007935	1
Coq.ssr.ssrboolX.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0272889137268	1
Coq.ssr.ssrboolX.andb_idl	40	37	search with cache (only 1: destruct a, b).	0.505851984024	706
Coq.ssr.ssrboolX.andb_idr	40	38	search with cache (only 1: destruct a, b).	0.569944143295	741
Coq.ssr.ssrboolX.andb_id2l	40	83	search with cache (only 1: Bool.destr_bool).	2.22189092636	4368
Coq.ssr.ssrboolX.andb_id2r	40	66	search with cache (only 1: Bool.destr_bool).	7.89441800117	6412
Coq.ssr.ssrboolX.orb_idl	40	22.44	search with cache (only 1: Bool.destr_bool; only 1: intuition).	1.42545604706	2576
Coq.ssr.ssrboolX.orb_idr	40
Coq.ssr.ssrboolX.orb_id2l	40	27	search with cache (only 1: Bool.destr_bool).	0.380593061447	361
Coq.ssr.ssrboolX.orb_id2r	40	17.42.108	search with cache (only 1: destruct b; only 1: Bool.destr_bool; only 1: Bool.destr_bool).	33.7077929974	51238
Coq.ssr.ssrboolX.negb_and	40	0	search with cache (only 1: by case : a ; case : b ).	0.0238530635834	1
Coq.ssr.ssrboolX.negb_or	40	0	search with cache (only 1: by case : a ; case : b ).	0.0230000019073	1
Coq.ssr.ssrboolX.andbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0218749046326	1
Coq.ssr.ssrboolX.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0216710567474	1
Coq.ssr.ssrboolX.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0244948863983	1
Coq.ssr.ssrboolX.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0245978832245	1
Coq.ssr.ssrboolX.implybT	40	0	search with cache (only 1: by case : b ).	0.0187809467316	1
Coq.ssr.ssrboolX.implybF	40		search with cache ().	0.00870895385742	0
Coq.ssr.ssrboolX.implyFb	40		search with cache ().	0.00951600074768	0
Coq.ssr.ssrboolX.implyTb	40		search with cache ().	0.00966215133667	0
Coq.ssr.ssrboolX.implybb	40	1	search with cache (only 1: by case : b ).	0.0202808380127	2
Coq.ssr.ssrboolX.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.0204119682312	1
Coq.ssr.ssrboolX.implybE	40	0	search with cache (only 1: by case : a ; case : b ).	0.0493350028992	1
Coq.ssr.ssrboolX.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0496270656586	1
Coq.ssr.ssrboolX.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0203008651733	1
Coq.ssr.ssrboolX.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0212800502777	1
Coq.ssr.ssrboolX.implyb_idl	40	22.6.3.86	search with cache (only 1: destruct b; only 1: Bool.destr_bool; only 1: Bool.destr_bool; only 1: intuition).	5.7892999649	9722
Coq.ssr.ssrboolX.implyb_idr	40	22.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.79146194458	1028
Coq.ssr.ssrboolX.implyb_id2l	40	91	search with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end).	15.2308340073	4515
Coq.ssr.ssrboolX.addFb	40		search with cache ().	0.0095579624176	0
Coq.ssr.ssrboolX.addbF	40	0	search with cache (only 1: by case).	0.0153238773346	1
Coq.ssr.ssrboolX.addbb	40	0	search with cache (only 1: by case).	0.0162518024445	1
Coq.ssr.ssrboolX.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0166921615601	1
Coq.ssr.ssrboolX.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0198519229889	1
Coq.ssr.ssrboolX.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.037299156189	1
Coq.ssr.ssrboolX.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0192999839783	1
Coq.ssr.ssrboolX.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0311679840088	1
Coq.ssr.ssrboolX.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0256259441376	1
Coq.ssr.ssrboolX.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0253341197968	1
Coq.ssr.ssrboolX.addKb	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0193979740143	1
Coq.ssr.ssrboolX.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0197479724884	1
Coq.ssr.ssrboolX.addIb	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.096736907959	3
Coq.ssr.ssrboolX.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0224678516388	1
Coq.ssr.ssrboolX.addTb	40		search with cache ().	0.00745677947998	0
Coq.ssr.ssrboolX.addbT	40	1	search with cache (only 1: by case : b ).	0.0189568996429	2
Coq.ssr.ssrboolX.addbN	40	2	search with cache (only 1: by case : a ; case : b ).	0.0239758491516	3
Coq.ssr.ssrboolX.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0201001167297	1
Coq.ssr.ssrboolX.addbP	40	18.6.24	search with cache (only 1: destruct b; only 1: Bool.destr_bool; only 1: Bool.destr_bool).	0.97248506546	1777
Coq.ssr.ssrboolX.subrelUl	40	5.25	search with cache (only 1: intro n; only 1: intuition).	2.24963784218	834
Coq.ssr.ssrboolX.subrelUr	40	1.21	search with cache (only 1: intro n; only 1: intuition).	1.50841283798	397
Coq.ssr.ssrboolX.sub_refl	40		search with cache ().	0.0110580921173	0
Coq.ssr.ssrboolX.mem_topred	40
Coq.ssr.ssrboolX.topredE	40
Coq.ssr.ssrboolX.app_predE	40
Coq.ssr.ssrboolX.in_applicative	40
Coq.ssr.ssrboolX.in_collective	40
Coq.ssr.ssrboolX.in_simpl	40	1	search with cache (only 1: by case : msp  =>_ /= ->).	0.0472869873047	2
Coq.ssr.ssrboolX.unfold_in	40		search with cache ().	0.0103461742401	0
Coq.ssr.ssrboolX.simpl_predE	40		search with cache ().	0.0100250244141	0
Coq.ssr.ssrboolX.mem_simpl	40		search with cache ().	0.0109570026398	0
Coq.ssr.ssrboolX.mem_mem	40	38.42.0	search with cache (only 1: by case : mp ; only 1: RelationClasses.simpl_relation; only 1: RelationClasses.simpl_relation).	6.41161704063	8062
Coq.ssr.ssrboolX.qualifE	40		search with cache ().	0.010370016098	0
Coq.ssr.ssrboolX.keyed_predE	40
Coq.ssr.ssrboolX.keyed_qualifier_suproof	40
Coq.ssr.ssrboolX.all_tag_cond_dep	40
Coq.ssr.ssrboolX.all_tag_cond	40
Coq.ssr.ssrboolX.all_sig_cond_dep	40
Coq.ssr.ssrboolX.all_sig_cond	40
Coq.ssr.ssrboolX.symmetric_from_pre	40
Coq.ssr.ssrboolX.sym_left_transitive	40
Coq.ssr.ssrboolX.sym_right_transitive	40
Coq.ssr.ssrboolX.equivalence_relP	40
Coq.ssr.ssrboolX.rev_trans	40	2	search with cache (only 1: intro).	0.11437702179	3
Coq.ssr.ssrboolX.forE	40		search with cache ().	0.0118792057037	0
Coq.ssr.ssrboolX.in1W	40		search with cache ().	0.0452990531921	0
Coq.ssr.ssrboolX.in2W	40		search with cache ().	0.0465929508209	0
Coq.ssr.ssrboolX.in3W	40		search with cache ().	0.0484170913696	0
Coq.ssr.ssrboolX.in1T	40		search with cache ().	0.0537118911743	0
Coq.ssr.ssrboolX.in2T	40		search with cache ().	0.0550479888916	0
Coq.ssr.ssrboolX.in3T	40		search with cache ().	0.0569791793823	0
Coq.ssr.ssrboolX.sub_in1	40	4	search with cache (only 1: intros a b).	0.162137031555	11
Coq.ssr.ssrboolX.sub_in11	40	1	search with cache (only 1: intros a b).	0.118584871292	2
Coq.ssr.ssrboolX.sub_in111	40	3	search with cache (only 1: intros l).	0.126101970673	4
Coq.ssr.ssrboolX.on1W	40		search with cache ().	0.0507791042328	0
Coq.ssr.ssrboolX.on1lW	40		search with cache ().	0.0472450256348	0
Coq.ssr.ssrboolX.on2W	40		search with cache ().	0.0852360725403	0
Coq.ssr.ssrboolX.on1T	40		search with cache ().	0.0336120128632	0
Coq.ssr.ssrboolX.on1lT	40		search with cache ().	0.0333268642426	0
Coq.ssr.ssrboolX.on2T	40		search with cache ().	0.0351729393005	0
Coq.ssr.ssrboolX.subon1	40	14	search with cache (only 1: intros b Hb).	0.39601111412	75
Coq.ssr.ssrboolX.subon1l	40	25	search with cache (only 1: intros b Hb).	0.811509132385	306
Coq.ssr.ssrboolX.subon2	40	5	search with cache (only 1: intros p abs).	0.136833906174	6
Coq.ssr.ssrboolX.can_in_inj	40
Coq.ssr.ssrboolX.canLR_in	40		search with cache ().	0.0416510105133	0
Coq.ssr.ssrboolX.canRL_in	40	47	search with cache (only 1: symmetry).	2.39841294289	1131
Coq.ssr.ssrboolX.on_can_inj	40
Coq.ssr.ssrboolX.canLR_on	40		search with cache ().	0.0415410995483	0
Coq.ssr.ssrboolX.canRL_on	40	43	search with cache (only 1: symmetry).	6.84776115417	1255
Coq.ssr.ssrboolX.inW_bij	40
Coq.ssr.ssrboolX.onW_bij	40
Coq.ssr.ssrboolX.inT_bij	40
Coq.ssr.ssrboolX.onT_bij	40
Coq.ssr.ssrboolX.sub_in_bij	40
Coq.ssr.ssrboolX.subon_bij	40
Coq.ssr.ssrboolX.sub_in2	40	1	search with cache (only 1: by move  =>? ?; auto).	0.10519695282	2
Coq.ssr.ssrboolX.sub_in3	40	8	search with cache (only 1: intro x).	0.116161108017	9
Coq.ssr.ssrboolX.sub_in12	40	1	search with cache (only 1: by move  =>? ?; auto).	0.043133020401	2
Coq.ssr.ssrboolX.sub_in21	40	2	search with cache (only 1: by move  =>? ?; auto).	0.0423810482025	3
Coq.ssr.ssrboolX.equivalence_relP_in	40
Coq.ssr.ssrboolX.monoW	40		search with cache ().	0.0152189731598	0
Coq.ssr.ssrboolX.mono2W	40		search with cache ().	0.0157408714294	0
Coq.ssr.ssrboolX.homoRL	40
Coq.ssr.ssrboolX.homoLR	40
Coq.ssr.ssrboolX.homo_mono	40
Coq.ssr.ssrboolX.monoLR	40		search with cache ().	0.0230031013489	0
Coq.ssr.ssrboolX.monoRL	40		search with cache ().	0.023185968399	0
Coq.ssr.ssrboolX.can_mono	40		search with cache ().	0.0165781974792	0
Coq.ssr.ssrboolX.monoW_in	40	16.1	search with cache (only 1: move  =>mf mg x y; only 1: eauto with bool).	0.712027072906	253
Coq.ssr.ssrboolX.mono2W_in	40	34.53	search with cache (only 1: intros a b c0; only 1: eauto).	17.7813448906	16293
Coq.ssr.ssrboolX.homoRL_in	40
Coq.ssr.ssrboolX.homoLR_in	40
Coq.ssr.ssrboolX.homo_mono_in	40
Coq.ssr.ssrboolX.monoLR_in	40
Coq.ssr.ssrboolX.monoRL_in	40
Coq.ssr.ssrboolX.can_mono_in	40
Coq.ssr.ssrunderX.Under_rel.Under_rel_from_rel	40		search with cache ().	0.0150310993195	0
Coq.ssr.ssrunderX.Under_rel.Under_relE	40		search with cache ().	0.0127418041229	0
Coq.ssr.ssrunderX.Under_rel.over_rel	40		search with cache ().	0.0144078731537	0
Coq.ssr.ssrunderX.Under_rel.over_rel_done	40	28	search with cache (only 1: firstorder).	1.1915910244	526
Coq.ssr.ssrunderX.Under_rel.under_rel_done	40	61	search with cache (only 1: firstorder).	3.09088897705	1908
Coq.ssr.ssrfunX.unitE	40
Coq.ssr.ssrfunX.frefl	40		search with cache ().	0.0126218795776	0
Coq.ssr.ssrfunX.fsym	40		search with cache ().	0.0152130126953	0
Coq.ssr.ssrfunX.ftrans	40		search with cache ().	0.0151669979095	0
Coq.ssr.ssrfunX.rrefl	40		search with cache ().	0.0116651058197	0
Coq.ssr.ssrfunX.eq_comp	40
Coq.ssr.ssrfunX.all_tag	40
Coq.ssr.ssrfunX.all_tag2	40
Coq.ssr.ssrfunX.svalP	40		search with cache ().	0.014631986618	0
Coq.ssr.ssrfunX.s2valP	40	0	search with cache (only 1: by case : u ).	0.0175089836121	1
Coq.ssr.ssrfunX.s2valP'	40	0	search with cache (only 1: by case : u ).	0.0182569026947	1
Coq.ssr.ssrfunX.all_sig	40
Coq.ssr.ssrfunX.all_sig2	40
Coq.ssr.ssrfunX.can_pcan	40		search with cache ().	0.0128691196442	0
Coq.ssr.ssrfunX.pcan_inj	40
Coq.ssr.ssrfunX.can_inj	40		search with cache ().	0.0129818916321	0
Coq.ssr.ssrfunX.canLR	40		search with cache ().	0.0121240615845	0
Coq.ssr.ssrfunX.canRL	40		search with cache ().	0.0123689174652	0
Coq.ssr.ssrfunX.Some_inj	40		search with cache ().	0.0107870101929	0
Coq.ssr.ssrfunX.of_voidK	40		search with cache ().	0.0130019187927	0
Coq.ssr.ssrfunX.esymK	40	47	search with cache (only 1: intros H).	1.12123608589	1131
Coq.ssr.ssrfunX.etrans_id	40		search with cache ().	0.0101041793823	0
Coq.ssr.ssrfunX.inj_id	40		search with cache ().	0.0125260353088	0
Coq.ssr.ssrfunX.inj_can_sym	40	11	search with cache (only 1: firstorder  (subst; auto)).	0.0534989833832	33
Coq.ssr.ssrfunX.inj_comp	40	10	search with cache (only 1: intro x).	0.161273002625	21
Coq.ssr.ssrfunX.inj_compr	40	2.8	search with cache (only 1: intro x; only 1: rewrite ?H).	0.281621932983	36
Coq.ssr.ssrfunX.can_comp	40	55	search with cache (only 1: intros l).	1.97101593018	1551
Coq.ssr.ssrfunX.pcan_pcomp	40
Coq.ssr.ssrfunX.eq_inj	40	15.29	search with cache (only 1: intros l; only 1: rewrite ?H).	3.45777702332	1989
Coq.ssr.ssrfunX.eq_can	40		search with cache ().	0.020026922226	0
Coq.ssr.ssrfunX.inj_can_eq	40
Coq.ssr.ssrfunX.bij_inj	40	12	search with cache (only 1: by case : bijf  =>g fK _; apply : can_inj fK ).	0.146213054657	46
Coq.ssr.ssrfunX.bij_can_sym	40
Coq.ssr.ssrfunX.bij_can_eq	40	23.39	search with cache (only 1: intros HF; only 1: firstorder).	2.20532989502	2332
Coq.ssr.ssrfunX.eq_bij	40
Coq.ssr.ssrfunX.bij_comp	40
Coq.ssr.ssrfunX.bij_can_bij	40
Coq.ssr.ssrfunX.inv_inj	40		search with cache ().	0.0117340087891	0
Coq.ssr.ssrfunX.inv_bij	40		search with cache ().	0.0120458602905	0
Coq.Sets.ImageX.Im_def	40		search with cache ().	0.0158069133759	0
Coq.Sets.ImageX.Im_add	40
Coq.Sets.ImageX.image_empty	40	6.6.0.4	search with cache (only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1).	3.61902809143	625
Coq.Sets.ImageX.finite_image	40
Coq.Sets.ImageX.Im_inv	40	97	search with cache (only 1: inversion H).	1.98985600471	5157
Coq.Sets.ImageX.not_injective_elim	40
Coq.Sets.ImageX.cardinal_Im_intro	40
Coq.Sets.ImageX.In_Image_elim	40	0.30.31	search with cache (only 1: inversion H0; only 1: lapply (Singleton_inv U x x0); only 1: auto using Im_def with sets).	4.19305491447	4044
Coq.Sets.ImageX.injective_preserves_cardinal	40
Coq.Sets.ImageX.cardinal_decreases	40
Coq.Sets.ImageX.Pigeonhole	40
Coq.Sets.ImageX.Pigeonhole_principle	40
Coq.Sets.PermutX.cong_congr	40	85	search with cache (only 1: eauto).	7.80280900002	4522
Coq.Sets.PermutX.comm_right	40		search with cache ().	0.0261740684509	0
Coq.Sets.PermutX.comm_left	40		search with cache ().	0.0267241001129	0
Coq.Sets.PermutX.perm_right	40
Coq.Sets.PermutX.perm_left	40	5.0.0.0.0	search with cache (only 1: apply cong_trans with (op x (op z y)); only 1: apply cong_trans with (op x (op z y)); only 1: apply cong_trans with (op x (op z y)); only 1: apply cong_trans with (op x (op z y)); only 1: apply cong_sym).	1.26210689545	35
Coq.Sets.PermutX.op_rotate	40	5	search with cache (only 1: apply cong_sym).	6.18843603134	187
Coq.Sets.PermutX.twist	40
Coq.Sets.Powerset_factsX.Empty_set_zero	40
Coq.Sets.Powerset_factsX.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0348629951477	1
Coq.Sets.Powerset_factsX.Empty_set_zero'	40
Coq.Sets.Powerset_factsX.less_than_empty	40	5	search with cache (only 1: auto with sets).	0.0336611270905	6
Coq.Sets.Powerset_factsX.Union_commutative	40	1	search with cache (only 1: auto with sets).	0.0415499210358	2
Coq.Sets.Powerset_factsX.Union_associative	40
Coq.Sets.Powerset_factsX.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.036691904068	1
Coq.Sets.Powerset_factsX.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0435380935669	1
Coq.Sets.Powerset_factsX.Couple_as_union	40
Coq.Sets.Powerset_factsX.Triple_as_union	40
Coq.Sets.Powerset_factsX.Triple_as_Couple	40
Coq.Sets.Powerset_factsX.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_factsX.Intersection_commutative	40
Coq.Sets.Powerset_factsX.Distributivity	40
Coq.Sets.Powerset_factsX.Distributivity_l	40
Coq.Sets.Powerset_factsX.Distributivity'	40
Coq.Sets.Powerset_factsX.Union_add	40
Coq.Sets.Powerset_factsX.Non_disjoint_union	40
Coq.Sets.Powerset_factsX.Non_disjoint_union'	40
Coq.Sets.Powerset_factsX.singlx	40	4.15	search with cache (only 1: destruct H; only 1: auto with sets).	0.41787981987	196
Coq.Sets.Powerset_factsX.incl_add	40
Coq.Sets.Powerset_factsX.incl_add_x	40
Coq.Sets.Powerset_factsX.Add_commutative	40	13.19	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	9.94776797295	1345
Coq.Sets.Powerset_factsX.Add_commutative'	40
Coq.Sets.Powerset_factsX.Add_distributes	40
Coq.Sets.Powerset_factsX.setcover_intro	40		search with cache ().	0.0370981693268	0
Coq.Sets.Powerset_factsX.Disjoint_Intersection	40
Coq.Sets.Powerset_factsX.Intersection_Empty_set_l	40	3.0.1	search with cache (only 1: apply Extensionality_Ensembles; only 1: split; only 1: auto with sets).	0.252654075623	18
Coq.Sets.Powerset_factsX.Intersection_Empty_set_r	40	0	search with cache (only 1: auto with sets).	0.0363581180573	1
Coq.Sets.Powerset_factsX.Seminus_Empty_set_l	40	0.0.5.0.0	search with cache (only 1: apply Extensionality_Ensembles; only 1: split; only 1: unfold Setminus at 1; only 1: intro H'1; only 1: unfold In in *).	0.406589031219	50
Coq.Sets.Powerset_factsX.Seminus_Empty_set_r	40	0.1.0.0	search with cache (only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1).	0.35889005661	5
Coq.Sets.Powerset_factsX.Setminus_Union_l	40
Coq.Sets.Powerset_factsX.Setminus_Union_r	40
Coq.Sets.Powerset_factsX.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_factsX.Setminus_Included_empty	40	1.5.0.0.1	search with cache (only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: contradict H1; only 1: inversion H0).	1.31324100494	98
Coq.Sets.Relations_3_factsX.Rstar_imp_coherent	40		search with cache ().	0.0149960517883	0
Coq.Sets.Relations_3_factsX.coherent_symmetric	40	10	search with cache (only 1: compute).	0.218189954758	54
Coq.Sets.Relations_3_factsX.Strong_confluence	40
Coq.Sets.Relations_3_factsX.Strong_confluence_direct	40
Coq.Sets.Relations_3_factsX.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_factsX.Newman	40
Coq.Sets.Infinite_setsX.make_new_approximant	40
Coq.Sets.Infinite_setsX.approximants_grow	40
Coq.Sets.Infinite_setsX.approximants_grow'	40
Coq.Sets.Infinite_setsX.approximant_can_be_any_size	40
Coq.Sets.Infinite_setsX.Image_set_continuous	40
Coq.Sets.Infinite_setsX.Image_set_continuous'	40
Coq.Sets.Infinite_setsX.Pigeonhole_bis	40
Coq.Sets.Infinite_setsX.Pigeonhole_ter	40
Coq.Sets.Powerset_Classical_factsX.sincl_add_x	40
Coq.Sets.Powerset_Classical_factsX.incl_soustr_in	40
Coq.Sets.Powerset_Classical_factsX.incl_soustr	40	6.0.0.8	search with cache (only 1: intros H'0 H'1; only 1: red; only 1: red; only 1: elim H'1).	2.52337384224	458
Coq.Sets.Powerset_Classical_factsX.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_factsX.incl_soustr_add_r	40	5.3	search with cache (only 1: split; only 1: lapply (Singleton_inv U x x0)).	0.229561090469	26
Coq.Sets.Powerset_Classical_factsX.add_soustr_2	40
Coq.Sets.Powerset_Classical_factsX.add_soustr_1	40
Coq.Sets.Powerset_Classical_factsX.add_soustr_xy	40
Coq.Sets.Powerset_Classical_factsX.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_factsX.Sub_Add_new	40
Coq.Sets.Powerset_Classical_factsX.Simplify_add	40
Coq.Sets.Powerset_Classical_factsX.Included_Add	40
Coq.Sets.Powerset_Classical_factsX.setcover_inv	40
Coq.Sets.Powerset_Classical_factsX.Add_covers	40
Coq.Sets.Powerset_Classical_factsX.covers_Add	40
Coq.Sets.Powerset_Classical_factsX.covers_is_Add	40
Coq.Sets.Powerset_Classical_factsX.Singleton_atomic	40
Coq.Sets.Powerset_Classical_factsX.less_than_singleton	40
Coq.Sets.PowersetX.Empty_set_minimal	40		search with cache ().	0.0313320159912	0
Coq.Sets.PowersetX.Power_set_Inhabited	40		search with cache ().	0.0181288719177	0
Coq.Sets.PowersetX.Inclusion_is_an_order	40
Coq.Sets.PowersetX.Inclusion_is_transitive	40	0.0	search with cache (only 1: intro X; only 1: red).	0.0882041454315	2
Coq.Sets.PowersetX.Power_set_PO	40		search with cache ().	0.0188801288605	0
Coq.Sets.PowersetX.Strict_Rel_is_Strict_Included	40		search with cache ().	0.0505030155182	0
Coq.Sets.PowersetX.Strict_inclusion_is_transitive_with_inclusion	40	1.19	search with cache (only 1: firstorder; only 1: auto  6 with sets).	1.19269490242	209
Coq.Sets.PowersetX.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.PowersetX.Strict_inclusion_is_transitive	40
Coq.Sets.PowersetX.Empty_set_is_Bottom	40		search with cache ().	0.0513219833374	0
Coq.Sets.PowersetX.Union_minimal	40	111	search with cache (only 1: induction 1).	23.769562006	21630
Coq.Sets.PowersetX.Intersection_maximal	40		search with cache ().	0.0408987998962	0
Coq.Sets.PowersetX.Union_increases_l	40		search with cache ().	0.0264780521393	0
Coq.Sets.PowersetX.Union_increases_r	40		search with cache ().	0.029137134552	0
Coq.Sets.PowersetX.Intersection_decreases_l	40	62	search with cache (only 1: now destruct 1 || intros _).	6.71541714668	7868
Coq.Sets.PowersetX.Intersection_decreases_r	40	1.1	search with cache (only 1: intros x H'; only 1: elim H').	0.152426958084	18
Coq.Sets.PowersetX.Union_is_Lub	40
Coq.Sets.PowersetX.Intersection_is_Glb	40
Coq.Sets.Finite_setsX.cardinal_invert	40	7	search with cache (only 1: inversion H).	0.0572309494019	14
Coq.Sets.Finite_setsX.cardinal_elim	40	4	search with cache (only 1: destruct H).	0.0299072265625	5
Coq.Sets.MultisetX.meq_refl	40		search with cache ().	0.0201218128204	0
Coq.Sets.MultisetX.meq_trans	40		search with cache ().	0.0243391990662	0
Coq.Sets.MultisetX.meq_sym	40		search with cache ().	0.0223870277405	0
Coq.Sets.MultisetX.munion_empty_left	40		search with cache ().	0.01997590065	0
Coq.Sets.MultisetX.munion_empty_right	40	0	search with cache (only 1: unfold meq).	0.0415680408478	1
Coq.Sets.MultisetX.munion_comm	40	0	search with cache (only 1: unfold meq).	0.0612919330597	1
Coq.Sets.MultisetX.munion_ass	40	0	search with cache (only 1: unfold meq).	0.0692710876465	1
Coq.Sets.MultisetX.meq_left	40	0	search with cache (only 1: unfold meq).	0.0489089488983	1
Coq.Sets.MultisetX.meq_right	40	0	search with cache (only 1: unfold meq).	0.0511410236359	1
Coq.Sets.MultisetX.munion_rotate	40	0	search with cache (only 1: unfold meq).	0.0679309368134	1
Coq.Sets.MultisetX.meq_congr	40	3	search with cache (only 1: unfold meq).	0.152395009995	4
Coq.Sets.MultisetX.munion_perm_left	40	3	search with cache (only 1: unfold meq).	0.557739973068	20
Coq.Sets.MultisetX.multiset_twist1	40	5	search with cache (only 1: unfold meq).	0.586542129517	23
Coq.Sets.MultisetX.multiset_twist2	40	6	search with cache (only 1: unfold meq).	0.438724040985	18
Coq.Sets.MultisetX.treesort_twist1	40	2.0.1.11	search with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: rewrite H).	33.4323279858	1837
Coq.Sets.MultisetX.treesort_twist2	40
Coq.Sets.MultisetX.meq_singleton	40
Coq.Sets.Constructive_setsX.Extension	40		search with cache ().	0.0277922153473	0
Coq.Sets.Constructive_setsX.Noone_in_empty	40		search with cache ().	0.0111439228058	0
Coq.Sets.Constructive_setsX.Included_Empty	40		search with cache ().	0.0218789577484	0
Coq.Sets.Constructive_setsX.Add_intro1	40		search with cache ().	0.0124540328979	0
Coq.Sets.Constructive_setsX.Add_intro2	40		search with cache ().	0.0120761394501	0
Coq.Sets.Constructive_setsX.Inhabited_add	40		search with cache ().	0.0123720169067	0
Coq.Sets.Constructive_setsX.Inhabited_not_empty	40
Coq.Sets.Constructive_setsX.Add_not_Empty	40
Coq.Sets.Constructive_setsX.not_Empty_Add	40
Coq.Sets.Constructive_setsX.Singleton_inv	40	6	search with cache (only 1: destruct H).	0.0211930274963	7
Coq.Sets.Constructive_setsX.Singleton_intro	40		search with cache ().	0.0111970901489	0
Coq.Sets.Constructive_setsX.Union_inv	40	10	search with cache (only 1: destruct H).	0.489436149597	21
Coq.Sets.Constructive_setsX.Add_inv	40
Coq.Sets.Constructive_setsX.Intersection_inv	40
Coq.Sets.Constructive_setsX.Couple_inv	40	18	search with cache (only 1: destruct H).	0.506180047989	385
Coq.Sets.Constructive_setsX.Setminus_intro	40		search with cache ().	0.0225491523743	0
Coq.Sets.Constructive_setsX.Strict_Included_intro	40		search with cache ().	0.0257761478424	0
Coq.Sets.Constructive_setsX.Strict_Included_strict	40	15	search with cache (only 1: apply H).	0.272249937057	91
Coq.Sets.Classical_setsX.not_included_empty_Inhabited	40
Coq.Sets.Classical_setsX.not_empty_Inhabited	40
Coq.Sets.Classical_setsX.Inhabited_Setminus	40
Coq.Sets.Classical_setsX.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_setsX.Subtract_intro	40	8.11.8.8	search with cache (only 1: red; only 1: red; only 1: red; only 1: auto with sets).	4.24021410942	2973
Coq.Sets.Classical_setsX.Subtract_inv	40
Coq.Sets.Classical_setsX.Included_Strict_Included	40
Coq.Sets.Classical_setsX.Strict_Included_inv	40
Coq.Sets.Classical_setsX.not_SIncl_empty	40	0.10.30	search with cache (only 1: apply H; only 1: firstorder; only 1: auto with sets).	3.58003520966	967
Coq.Sets.Classical_setsX.Complement_Complement	40
Coq.Sets.Partial_OrderX.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_OrderX.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_OrderX.Strict_Rel_Transitive	40
Coq.Sets.Relations_2_factsX.Rstar_reflexive	40		search with cache ().	0.0169098377228	0
Coq.Sets.Relations_2_factsX.Rplus_contains_R	40		search with cache ().	0.0188028812408	0
Coq.Sets.Relations_2_factsX.Rstar_contains_R	40		search with cache ().	0.0428647994995	0
Coq.Sets.Relations_2_factsX.Rstar_contains_Rplus	40	12.0	search with cache (only 1: red; only 1: elim H).	0.556167840958	192
Coq.Sets.Relations_2_factsX.Rstar_transitive	40
Coq.Sets.Relations_2_factsX.Rstar_cases	40	21	search with cache (only 1: destruct H).	0.966251850128	388
Coq.Sets.Relations_2_factsX.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_factsX.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_factsX.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_factsX.star_monotone	40	0.13	search with cache (only 1: intros x y H'0; only 1: elim H'0).	1.77783989906	458
Coq.Sets.Relations_2_factsX.RstarRplus_RRstar	40
Coq.Sets.Relations_2_factsX.Lemma1	40
Coq.Sets.IntegersX.le_reflexive	40		search with cache ().	0.00996994972229	0
Coq.Sets.IntegersX.le_antisym	40	2	search with cache (only 1: intros p H0 H2).	0.0352959632874	3
Coq.Sets.IntegersX.le_trans	40	0	search with cache (only 1: intros a b).	0.0487151145935	1
Coq.Sets.IntegersX.le_Order	40	0.0.189	search with cache (only 1: split; only 1: red; only 1: red).	34.4130179882	18529
Coq.Sets.IntegersX.triv_nat	40		search with cache ().	0.0127618312836	0
Coq.Sets.IntegersX.nat_po	40
Coq.Sets.IntegersX.le_total_order	40
Coq.Sets.IntegersX.Finite_subset_has_lub	40
Coq.Sets.IntegersX.Integers_has_no_ub	40
Coq.Sets.IntegersX.Integers_infinite	40
Coq.Sets.UnisetX.le_refl	40	64	search with cache (only 1: by case b).	2.28931498528	2100
Coq.Sets.UnisetX.incl_left	40	8.47	search with cache (only 1: intros Hk; only 1: rewrite <- H).	35.0714430809	7893
Coq.Sets.UnisetX.incl_right	40	56.2	search with cache (only 1: unfold incl; only 1: now rewrite ?H, ?IHp).	30.6384408474	11442
Coq.Sets.UnisetX.seq_refl	40		search with cache ().	0.0121941566467	0
Coq.Sets.UnisetX.seq_trans	40		search with cache ().	0.019572019577	0
Coq.Sets.UnisetX.seq_sym	40		search with cache ().	0.0117468833923	0
Coq.Sets.UnisetX.union_empty_left	40		search with cache ().	0.0118629932404	0
Coq.Sets.UnisetX.union_empty_right	40	4.2.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct b).	0.0656111240387	9
Coq.Sets.UnisetX.union_comm	40	0.8.8.6.18	search with cache (only 1: intro; only 1: destruct y; only 1: destruct b; only 1: eauto with bool; only 1: rewrite (orb_false_r (charac x a))).	19.0189161301	7486
Coq.Sets.UnisetX.union_ass	40	1.0.2.11	search with cache (only 1: intro; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	2.17821598053	457
Coq.Sets.UnisetX.seq_left	40	1.1.0.1.1	search with cache (only 1: compute; only 1: destruct x; only 1: destruct z; only 1: destruct y; only 1: rewrite H).	0.184518098831	9
Coq.Sets.UnisetX.seq_right	40	0.1.0.1.1	search with cache (only 1: compute; only 1: destruct x; only 1: destruct z; only 1: destruct y; only 1: elim H).	0.183017015457	8
Coq.Sets.UnisetX.union_rotate	40
Coq.Sets.UnisetX.seq_congr	40	24	search with cache (only 1: intros l2).	3.91236615181	1173
Coq.Sets.UnisetX.union_perm_left	40
Coq.Sets.UnisetX.uniset_twist1	40
Coq.Sets.UnisetX.uniset_twist2	40
Coq.Sets.UnisetX.treesort_twist1	40
Coq.Sets.UnisetX.treesort_twist2	40
Coq.Sets.Finite_sets_factsX.finite_cardinal	40
Coq.Sets.Finite_sets_factsX.cardinal_finite	40
Coq.Sets.Finite_sets_factsX.Add_preserves_Finite	40
Coq.Sets.Finite_sets_factsX.Singleton_is_finite	40	2.16	search with cache (only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	0.22034907341	168
Coq.Sets.Finite_sets_factsX.Union_preserves_Finite	40
Coq.Sets.Finite_sets_factsX.Finite_downward_closed	40
Coq.Sets.Finite_sets_factsX.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_factsX.cardinalO_empty	40
Coq.Sets.Finite_sets_factsX.inh_card_gt_O	40
Coq.Sets.Finite_sets_factsX.card_soustr_1	40
Coq.Sets.Finite_sets_factsX.cardinal_is_functional	40
Coq.Sets.Finite_sets_factsX.cardinal_Empty	40
Coq.Sets.Finite_sets_factsX.cardinal_unicity	40
Coq.Sets.Finite_sets_factsX.card_Add_gen	40
Coq.Sets.Finite_sets_factsX.incl_st_card_lt	40
Coq.Sets.Finite_sets_factsX.incl_card_le	40
Coq.Sets.Finite_sets_factsX.G_aux	40
Coq.Sets.Finite_sets_factsX.Generalized_induction_on_finite_sets	40
Coq.Sets.Relations_1_factsX.Rsym_imp_notRsym	40	3	search with cache (only 1: RelationClasses.reduce).	0.0480740070343	4
Coq.Sets.Relations_1_factsX.Equiv_from_preorder	40	75	search with cache (only 1: destruct H as [H2 H3]).	29.0785560608	8474
Coq.Sets.Relations_1_factsX.Equiv_from_order	40	19	search with cache (only 1: firstorder).	0.577476978302	165
Coq.Sets.Relations_1_factsX.contains_is_preorder	40	2	search with cache (only 1: RelationClasses.simpl_relation).	0.231856107712	3
Coq.Sets.Relations_1_factsX.same_relation_is_equivalence	40
Coq.Sets.Relations_1_factsX.cong_reflexive_same_relation	40	1.23	search with cache (only 1: destruct H; only 1: intro h).	1.48051595688	530
Coq.Sets.Relations_1_factsX.cong_symmetric_same_relation	40	19.5	search with cache (only 1: RelationClasses.reduce; only 1: destruct H).	1.45461392403	674
Coq.Sets.Relations_1_factsX.cong_antisymmetric_same_relation	40	1.11	search with cache (only 1: red; only 1: elim H).	0.276997804642	61
Coq.Sets.Relations_1_factsX.cong_transitive_same_relation	40	5.3.14	search with cache (only 1: intros a b Ha Hb; only 1: firstorder; only 1: eauto).	3.32078289986	858