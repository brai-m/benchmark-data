coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	15.900865	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	16.925630	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	16.741065	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	16.898120	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	120	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	16.901237	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	120	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	16.768950	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	120	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	16.860244	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	16.854505	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	16.830558	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: constructor).	17.415955	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	18.022304	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	120	0.6	synth with cache (only 1: destruct p; only 1: reflexivity).	18.383527	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	120	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	18.085775	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.2.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	18.518039	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.2.0.3	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	18.796286	32
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	120	0.5.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	19.505579	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	120	3.0.0.2.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	19.876317	33
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	120	0.0.0.0.4.1	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	20.106901	34
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	5.122151	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	120	0.0.0.2.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	21.102125	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	5.258455	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	7.250326	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto).	24.742635	45
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.3	synth with cache (only 1: destruct 1; only 1: constructor).	8.647331	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	120	0.3.3	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	9.403275	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	120	0.1.1.0.0.0.0.2.3	synth with cache (only 1: intros; only 1: destruct b1; only 1: destruct b2; only 1: destruct H; only 1: split; only 1: destruct H; only 1: assumption; only 1: destruct H; only 1: assumption).	26.717254	205
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	8.923325	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	27.120952	66
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.1.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	10.297677	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	11.077004	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	120	0.0.0.0.3.1	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.002004	32
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	120	6.5.0.0.2	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	30.060016	246
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	120	0.2.6.0.0.0.1.6.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	30.665183	129
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	120	0.0.1.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	31.468349	95
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	120	0.0.0.5.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	32.697580	101
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	120	14.0	synth with cache (only 1: intros ?; only 1: auto).	11.368913	41
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	14.561367	44
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	120	17.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_pred).	9.744533	78
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	120	0.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim identity_sym with (1 := H0); only 1: trivial).	8.562453	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	6.915676	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	7.940922	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.1.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: auto).	8.234310	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	120	0.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	8.951164	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	19.504676	69
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0.1.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: auto).	8.031292	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: auto).	7.515290	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	6.002626	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	120	0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: trivial).	5.626220	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	120	0.22.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: apply H0; only 1: destruct n; only 1: assumption).	42.859108	374
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	120	8.0.0.0	synth with cache (only 1: unfold all; only 1: intros ?; only 1: intros ?; only 1: auto).	20.271533	161
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.1.4.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: destruct H; only 1: auto).	12.221291	49
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	120	0.4.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.955285	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	120	0.8.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	6.341704	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.6.8.8	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	10.361823	79
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.815989	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	120	0.0.6.5	synth with cache (only 1: intros ?; only 1: induction n; only 1: auto; only 1: auto).	8.470816	79
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	0.25.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	17.770893	147
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.696859	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	120	3.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: exact X).	16.575558	105
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.792738	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	6.526099	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	120	2.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	9.553977	28
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	120	0.1.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.732949	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	120	0	synth with cache (only 1: reflexivity).	4.983497	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	120	0.11.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: assumption).	34.972564	574
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	120	0.1.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.451838	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	120	0.1.9	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	7.079889	36
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	120	0.1.4	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	7.129071	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	120	0.1.4	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	7.121193	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	1.25.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	25.334867	241
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	120	0.2.0.3	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	20.208278	31
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	120	0.4.1	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	6.166923	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	120	0.3.10	synth with cache (only 1: intros; only 1: destruct e''; only 1: reflexivity).	6.963447	46
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	2.22.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	24.317715	189
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.11.11	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	40.689027	1089
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	3.4.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: exact X).	25.937808	231
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	5.024343	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	120	1.3.7.9.0	synth with cache (only 1: intros; only 1: destruct H1'; only 1: destruct H2'; only 1: destruct H2; only 1: reflexivity).	11.360953	85
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	120	0.5.2	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	6.834333	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	120	0.7.2	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	6.808197	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	120	1.4.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	7.768363	29
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	120	0.2.2	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.545555	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	120	0.4.8.0	synth with cache (only 1: intros; only 1: destruct H0; only 1: destruct H; only 1: reflexivity).	9.602111	50
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	120	0.0.1.0.0.0.1.0.0.0.0.0.0.1.4.0	synth with cache (only 1: intros; only 1: destruct b; only 1: destruct a; only 1: split; only 1: split; only 1: split; only 1: split; only 1: assumption; only 1: split; only 1: destruct a; only 1: split; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption).	69.826029	436
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	120	1.13.4.20	synth with cache (only 1: destruct q in |- * at 1 2; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).	53.131592	1537
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	120	2.3.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	8.260646	30
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	5.665797	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	120	0.6.7	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	6.994308	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	120	0.6.11.0	synth with cache (only 1: intros; only 1: apply eq_sym; only 1: destruct e; only 1: reflexivity).	12.210150	169
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	120	0.4.9	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	9.501182	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	120	6.3.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	9.649170	54
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	120	0.0.0.0.2.0.0.7.0.0.0.0.0.2.2.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H0; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	66.302618	575
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	9.717060	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	120	3.4.0.1.0.2.0.15.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply H; only 1: assumption; only 1: apply False_rec; only 1: intros ?; only 1: destruct H; only 1: auto).	83.107332	1571
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	120	3.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	10.923413	31
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	120	0.3.0.3	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct H; only 1: reflexivity).	7.658743	32
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.4.7.4	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	9.572999	58
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	120	0.4.9	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	7.802075	41
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.5.0.9.6	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct x; only 1: destruct H; only 1: simpl in *; only 1: reflexivity).	10.665306	111
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.30.9	synth with cache (only 1: destruct q'; only 1: destruct p'; only 1: reflexivity).	76.578157	2347
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	120	1.0.0.2.0.0.0.7.0.0.0.0.2.2.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	86.617175	695
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	120	1.0.13.7.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: constructor; only 1: exists x; only 1: exact H).	105.117111	2393
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	1.18.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: auto).	25.834843	187
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	120	0.5.6	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	9.814695	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.4.6.4	synth with cache (only 1: destruct pqr; only 1: destruct e; only 1: destruct e0; only 1: destruct x; only 1: simpl; only 1: reflexivity).	23.319864	116
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	18.645712	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	120	0.5.6	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	19.464936	23
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	120	0.5.9.34.12	synth with cache (only 1: apply eq_sym; only 1: pattern eq_trans_refl_l; only 1: destruct H; only 1: destruct u; only 1: reflexivity).	59.960223	2793
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	5.631273	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	120	5.2.0.0.0.3	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	11.224322	63
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	120	0.4.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: apply H0; only 1: assumption).	10.262312	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	120	0.0.1.0.0.0.0.0.6.6.0.0.0.0	synth with cache (only 1: revert n; only 1: induction m; only 1: inversion 1; only 1: auto; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHm; only 1: apply le_S_n; only 1: trivial).	43.178325	300
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	120	0.4.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: intros; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl; only 1: rewrite IHn; only 1: trivial).	24.707499	39
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
