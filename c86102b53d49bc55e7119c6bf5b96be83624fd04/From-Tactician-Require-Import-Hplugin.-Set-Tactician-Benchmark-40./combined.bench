
Coq.micromega.ZifyBoolX.Z_of_bool_bound	40
Coq.micromega.ZifyBoolX.Z_eqb_isZero	40
Coq.micromega.ZifyBoolX.Z_leb_sub	40	5.4.3.2.12	search with cache (only 1: intros n m; only 1: unfold Z.leb, Z.le; only 1: unfold Z.sub; only 1: rewrite Z.compare_sub; only 1: now destruct n).	6.7588288784	3754
Coq.micromega.ZifyBoolX.Z_ltb_leb	40
Coq.micromega.ZifyBoolX.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBoolX.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBoolX.Z_of_nat_ltb_iff	40	0.17.12	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: easy || now destruct y).	11.5922949314	11813
Coq.micromega.ZifyBoolX.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBoolX.leZeroSpec_ok	40
Coq.micromega.RingMicromegaX.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.021852016449	1
Coq.micromega.RingMicromegaX.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0217318534851	1
Coq.micromega.RingMicromegaX.ropp_morph_Proper	40	2	search with cache (only 1: exact (SORopp_wd sor)).	0.021635055542	3
Coq.micromega.RingMicromegaX.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0204019546509	1
Coq.micromega.RingMicromegaX.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0179851055145	1
Coq.micromega.RingMicromegaX.rminus_morph_Proper	40	0	search with cache (only 1: exact (rminus_morph sor)).	0.0199840068817	1
Coq.micromega.RingMicromegaX.cleb_sound	40	0	search with cache (only 1: exact (RingMicromega.SORcleb_morph (R:=addon))).	0.0187289714813	1
Coq.micromega.RingMicromegaX.cneqb_sound	40
Coq.micromega.RingMicromegaX.cltb_sound	40	0.0.2.1.0.4.2	search with cache (only 1: intros x y H; only 1: apply andb_prop in H; only 1: destruct H as [H1 H2]; only 1: apply RingMicromega.cleb_sound in H1; only 1: apply RingMicromega.cneqb_sound in H2; only 1: apply <- (Rlt_le_neq sor); only 1: now split).	1.00527501106	388
Coq.micromega.RingMicromegaX.OpMult_sound	40
Coq.micromega.RingMicromegaX.OpAdd_sound	40
Coq.micromega.RingMicromegaX.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromegaX.nformula_times_nformula_correct	40
Coq.micromega.RingMicromegaX.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromegaX.eval_Psatz_Sound	40
Coq.micromega.RingMicromegaX.ge_bool_cases	40	1.1.0.1.0.0.2.0.0.0.1.0	search with cache (only 1: induction n; only 1: simpl; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: simpl; only 1: auto with arith; only 1: specialize (IHn m); only 1: destruct (ge_bool); only 1: auto with arith; only 1: auto with arith).	8.03120589256	2549
Coq.micromega.RingMicromegaX.extract_hyps_app	40	0.0.0.0.0.0	search with cache (only 1: induction ln1; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHln1; only 1: reflexivity).	0.114413976669	6
Coq.micromega.RingMicromegaX.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromegaX.check_inconsistent_sound	40
Coq.micromega.RingMicromegaX.checker_nf_sound	40
Coq.micromega.RingMicromegaX.eval_pol_sub	40	7.3	search with cache (only 1: intros; only 1: apply (Psub_ok (SORsetoid sor) RingMicromega.Rops_wd (Rth_ARth (SORsetoid sor) RingMicromega.Rops_wd (SORrt sor)) (RingMicromega.SORrm (R:=addon)))).	0.218934059143	56
Coq.micromega.RingMicromegaX.eval_pol_add	40	9.0	search with cache (only 1: intros; only 1: apply (Padd_ok (SORsetoid sor) RingMicromega.Rops_wd (Rth_ARth (SORsetoid sor) RingMicromega.Rops_wd (SORrt sor)) (RingMicromega.SORrm (R:=addon)))).	0.139210939407	30
Coq.micromega.RingMicromegaX.eval_pol_mul	40	8.0	search with cache (only 1: intros; only 1: apply (Pmul_ok (SORsetoid sor) RingMicromega.Rops_wd (Rth_ARth (SORsetoid sor) RingMicromega.Rops_wd (SORrt sor)) (RingMicromega.SORrm (R:=addon)))).	0.0415508747101	10
Coq.micromega.RingMicromegaX.eval_pol_opp	40	11.0	search with cache (only 1: intros; only 1: apply (Popp_ok (SORsetoid sor) RingMicromega.Rops_wd (Rth_ARth (SORsetoid sor) RingMicromega.Rops_wd (SORrt sor)) (RingMicromega.SORrm (R:=addon)))).	0.200276136398	76
Coq.micromega.RingMicromegaX.eval_pol_norm	40	24.0	search with cache (only 1: intros; only 1: apply (norm_aux_spec (SORsetoid sor) RingMicromega.Rops_wd (Rth_ARth (SORsetoid sor) RingMicromega.Rops_wd (SORrt sor)) (RingMicromega.SORrm (R:=addon)) (RingMicromega.SORpower (R:=addon)))).	1.1524169445	753
Coq.micromega.RingMicromegaX.normalise_sound	40
Coq.micromega.RingMicromegaX.negate_correct	40
Coq.micromega.RingMicromegaX.cnf_of_list_correct	40
Coq.micromega.RingMicromegaX.eq0_cnf	40
Coq.micromega.RingMicromegaX.xnormalise_correct	40
Coq.micromega.RingMicromegaX.xnegate_correct	40
Coq.micromega.RingMicromegaX.cnf_normalise_correct	40
Coq.micromega.RingMicromegaX.cnf_negate_correct	40
Coq.micromega.RingMicromegaX.eval_nformula_dec	40
Coq.micromega.RingMicromegaX.xdenorm_correct	40
Coq.micromega.RingMicromegaX.denorm_correct	40
Coq.micromega.RingMicromegaX.eval_pexprSC	40
Coq.micromega.RingMicromegaX.eval_formulaSC	40
Coq.micromega.ZCoeffX.req_refl	40	0.19	search with cache (only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _, _); only 1: apply Equivalence_Reflexive).	0.31038403511	186
Coq.micromega.ZCoeffX.req_sym	40	0.27	search with cache (only 1: destruct (SORsetoid sor) as (_, Equivalence_Symmetric, _); only 1: apply Equivalence_Symmetric).	2.84533810616	1180
Coq.micromega.ZCoeffX.req_trans	40	0.22	search with cache (only 1: destruct (SORsetoid sor) as (_, _, Equivalence_Transitive); only 1: apply Equivalence_Transitive).	1.84997797012	1071
Coq.micromega.ZCoeffX.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0289289951324	1
Coq.micromega.ZCoeffX.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0296051502228	1
Coq.micromega.ZCoeffX.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0260589122772	1
Coq.micromega.ZCoeffX.rle_morph_Proper	40	1	search with cache (only 1: exact (SORle_wd sor)).	0.128775119781	40
Coq.micromega.ZCoeffX.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0246520042419	1
Coq.micromega.ZCoeffX.rminus_morph_Proper	40	1.0.0.0.1	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.552267074585	24
Coq.micromega.ZCoeffX.ring_ops_wd	40	0.0.0.0	search with cache (only 1: constructor; only 1: exact ZCoeff.rplus_morph; only 1: exact ZCoeff.rtimes_morph; only 1: exact ZCoeff.ropp_morph).	0.0664999485016	4
Coq.micromega.ZCoeffX.Zring_morph	40	0	search with cache (only 1: exact (gen_phiZ_morph (SORsetoid sor) ZCoeff.ring_ops_wd (SORrt sor))).	0.0237901210785	1
Coq.micromega.ZCoeffX.phi_pos1_pos	40	0.0.4.0.0.0.0.0.4.0.0.0.0.0.0.0.1	search with cache (only 1: induction x as [x IH| x IH| ]; only 1: simpl; only 1: apply (Rplus_pos_pos sor); only 1: apply (Rlt_0_1 sor); only 1: apply (Rtimes_pos_pos sor); only 1: apply (Rplus_pos_pos sor); only 1: apply (Rlt_0_1 sor); only 1: apply (Rlt_0_1 sor); only 1: assumption; only 1: simpl; only 1: apply (Rtimes_pos_pos sor); only 1: apply (Rplus_pos_pos sor); only 1: apply (Rlt_0_1 sor); only 1: apply (Rlt_0_1 sor); only 1: assumption; only 1: simpl; only 1: apply (Rlt_0_1 sor)).	4.51832604408	3264
Coq.micromega.ZCoeffX.phi_pos1_succ	40	0	search with cache (only 1: exact (ARgen_phiPOS_Psucc (SORsetoid sor) ZCoeff.ring_ops_wd (Rth_ARth (SORsetoid sor) ZCoeff.ring_ops_wd (SORrt sor)))).	0.0241501331329	1
Coq.micromega.ZCoeffX.clt_pos_morph	40	5.0.0.0.0.0.0.3.0.0	search with cache (only 1: intros x y H; only 1: pattern y; only 1: apply Pos.lt_ind with x; only 1: rewrite ZCoeff.phi_pos1_succ; only 1: apply (Rlt_succ_r sor); only 1: clear y H; only 1: intros y _ H; only 1: rewrite ZCoeff.phi_pos1_succ; only 1: now apply (Rlt_lt_succ sor); only 1: assumption).	7.02328395844	1957
Coq.micromega.ZCoeffX.clt_morph	40
Coq.micromega.ZCoeffX.Zcleb_morph	40
Coq.micromega.ZCoeffX.Zcneqb_morph	40
Coq.micromega.ZMicromegaX.eq_le_iff	40	8	search with cache (only 1: intuition Z.order).	0.510895013809	82
Coq.micromega.ZMicromegaX.lt_le_iff	40	2	search with cache (only 1: apply Z.lt_le_pred).	0.169557094574	39
Coq.micromega.ZMicromegaX.le_0_iff	40	2.1.3	search with cache (only 1: split; only 1: apply Zle_minus_le_0; only 1: apply Zle_0_minus_le).	0.127109050751	53
Coq.micromega.ZMicromegaX.le_neg	40
Coq.micromega.ZMicromegaX.eq_cnf	40
Coq.micromega.ZMicromegaX.Zsor	40
Coq.micromega.ZMicromegaX.ZSORaddon	40	0.1.0.1.0.0.1.0.6.0	search with cache (only 1: constructor; only 1: repeat split; only 1: intros; only 1: apply Zeq_bool_eq; only 1: now destruct Zeq_bool; only 1: constructor; only 1: reflexivity; only 1: intros x y; only 1: apply Zeq_bool_neq; only 1: apply Zle_bool_imp_le).	9.40660905838	2692
Coq.micromega.ZMicromegaX.ZNpower	40
Coq.micromega.ZMicromegaX.Zeval_expr_compat	40
Coq.micromega.ZMicromegaX.Zeval_formula_compat'	40
Coq.micromega.ZMicromegaX.Zeval_nformula_dec	40	0.0	search with cache (only 1: intros; only 1: apply (eval_nformula_dec ZMicromega.Zsor)).	0.0145800113678	2
Coq.micromega.ZMicromegaX.ZWeakChecker_sound	40
Coq.micromega.ZMicromegaX.eval_pol_sub	40
Coq.micromega.ZMicromegaX.eval_pol_add	40	0.35	search with cache (only 1: intros; only 1: apply (eval_pol_add ZMicromega.Zsor ZMicromega.ZSORaddon)).	0.58185505867	1192
Coq.micromega.ZMicromegaX.eval_pol_mul	40	1.3	search with cache (only 1: intros; only 1: apply (eval_pol_mul ZMicromega.Zsor ZMicromega.ZSORaddon)).	0.0183498859406	6
Coq.micromega.ZMicromegaX.eval_pol_norm	40	4.11	search with cache (only 1: intros until env; only 1: apply (eval_pol_norm ZMicromega.Zsor ZMicromega.ZSORaddon)).	1.08150815964	860
Coq.micromega.ZMicromegaX.Zunsat_sound	40	0.27.2.1	search with cache (only 1: unfold eval_nformula; only 1: unfold RingMicromega.eval_nformula; only 1: destruct f; only 1: apply (check_inconsistent_sound ZMicromega.Zsor ZMicromega.ZSORaddon)).	3.76065897942	5833
Coq.micromega.ZMicromegaX.xnnormalise_correct	40
Coq.micromega.ZMicromegaX.eval_pol_Pc	40	6.0	search with cache (only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).	0.015881061554	8
Coq.micromega.ZMicromegaX.xnormalise_correct	40
Coq.micromega.ZMicromegaX.cnf_of_list_correct	40
Coq.micromega.ZMicromegaX.normalise_correct	40
Coq.micromega.ZMicromegaX.xnegate_correct	40
Coq.micromega.ZMicromegaX.negate_correct	40
Coq.micromega.ZMicromegaX.Zdivide_ceiling	40
Coq.micromega.ZMicromegaX.narrow_interval_lower_bound	40
Coq.micromega.ZMicromegaX.isZ0_0	40	0.1.0.1.1.0	search with cache (only 1: destruct x; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.0702090263367	9
Coq.micromega.ZMicromegaX.isZ0_n0	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.0640029907227	7
Coq.micromega.ZMicromegaX.Zdiv_pol_correct	40
Coq.micromega.ZMicromegaX.Zgcd_pol_ge	40	1.0.1.2.0.0.1.0.0.0.0.0	search with cache (only 1: induction p; only 1: easy; only 1: easy; only 1: simpl; only 1: case_eq (ZMicromega.Zgcd_pol p1); only 1: case_eq (ZMicromega.Zgcd_pol p3); only 1: intros; only 1: simpl; only 1: apply Z.le_ge; only 1: transitivity 1; only 1: easy; only 1: apply Z.le_max_r).	6.03356409073	1732
Coq.micromega.ZMicromegaX.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromegaX.Zdivide_pol_one	40
Coq.micromega.ZMicromegaX.Zgcd_minus	40	0.0.0.1.1.0.1.0	search with cache (only 1: intros a b c (q, Hq); only 1: destruct (Zgcd_is_gcd a b) as [(a', Ha) (b', Hb) _]; only 1: set (g := Z.gcd a b) in *; only 1: exists (q * a' + b'); only 1: symmetry in Hq; only 1: rewrite <- Z.add_move_r in Hq; only 1: rewrite <- Hq, Hb, Ha; only 1: ring).	0.706925868988	182
Coq.micromega.ZMicromegaX.Zdivide_pol_sub	40
Coq.micromega.ZMicromegaX.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromegaX.Zgcd_pol_div	40
Coq.micromega.ZMicromegaX.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromegaX.is_pol_Z0_eval_pol	40	0.0.0.4.0.1.0.1.3	search with cache (only 1: destruct p; only 1: destruct z; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: intros; only 1: discriminate; only 1: discriminate).	0.930713891983	528
Coq.micromega.ZMicromegaX.pos_le_add	40	0.1.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: assert (Z.pos x <= Z.pos (x + y)); only 1: rewrite <- (Z.add_0_r (Z.pos x)); only 1: rewrite <- Pos2Z.add_pos_pos; only 1: apply Z.add_le_mono_l; only 1: compute; only 1: congruence; only 1: rewrite Pos.add_comm in H; only 1: apply H).	0.156312942505	104
Coq.micromega.ZMicromegaX.max_var_le	40
Coq.micromega.ZMicromegaX.max_var_correct	40
Coq.micromega.ZMicromegaX.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromegaX.max_var_nformulae_mono_aux'	40	3.1.0.1.0.0.1.0.7	search with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: unfold F; only 1: apply Pos.max_le_compat_r; only 1: auto).	8.3350110054	4581
Coq.micromega.ZMicromegaX.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromegaX.max_var_nformalae_correct	40	19	search with cache (only 1: apply ZMicromega.max_var_nformulae_correct_aux).	1.0606379509	846
Coq.micromega.ZMicromegaX.in_bdepth	40
Coq.micromega.ZMicromegaX.eval_Psatz_sound	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply (eval_Psatz_Sound ZMicromega.Zsor ZMicromega.ZSORaddon) with (l := l) (e := w); only 1: apply make_conj_in; only 1: auto; only 1: auto).	0.0439169406891	5
Coq.micromega.ZMicromegaX.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromegaX.cutting_plane_sound	40
Coq.micromega.ZMicromegaX.genCuttingPlaneNone	40
Coq.micromega.ZMicromegaX.eval_nformula_mk_eq_pos	40	1.0.0	search with cache (only 1: intros; only 1: rewrite ZMicromega.xnnormalise_correct; only 1: auto).	0.0220880508423	4
Coq.micromega.ZMicromegaX.eval_nformula_bound_var	40	0.0.2	search with cache (only 1: intros; only 1: rewrite ZMicromega.xnnormalise_correct; only 1: auto).	0.128689050674	13
Coq.micromega.ZMicromegaX.agree_env_subset	40	1.1.11.19.12	search with cache (only 1: intros x y z; only 1: intros; only 1: intros XY YZ; only 1: apply H; only 1: Pos.Private_Tac.order).	10.1735789776	8635
Coq.micromega.ZMicromegaX.agree_env_jump	40
Coq.micromega.ZMicromegaX.agree_env_tail	40
Coq.micromega.ZMicromegaX.max_var_acc	40
Coq.micromega.ZMicromegaX.agree_env_eval_nformula	40
Coq.micromega.ZMicromegaX.agree_env_eval_nformulae	40
Coq.micromega.ZMicromegaX.eq_true_iff_eq	40	0.0.0.0.0	search with cache (only 1: destruct b1, b2; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0505459308624	5
Coq.micromega.ZMicromegaX.ZChecker_sound	40
Coq.micromega.ZMicromegaX.ZTautoChecker_sound	40
Coq.micromega.TautoX.eval_f_morph	40
Coq.micromega.TautoX.map_simpl	40	0.0.0	search with cache (only 1: destruct l; only 1: reflexivity; only 1: reflexivity).	0.0318260192871	3
Coq.micromega.TautoX.is_X_inv	40
Coq.micromega.TautoX.if_same	40	0.0.4	search with cache (only 1: destruct b; only 1: reflexivity; only 1: reflexivity).	0.0425992012024	15
Coq.micromega.TautoX.is_cnf_tt_cnf_ff	40	1	search with cache (only 1: reflexivity).	0.0215089321136	2
Coq.micromega.TautoX.is_cnf_ff_cnf_ff	40	3	search with cache (only 1: reflexivity).	0.0202810764313	4
Coq.micromega.TautoX.is_cnf_tt_inv	40	0.4.5.1	search with cache (only 1: destruct f1; only 1: auto; only 1: simpl in *; only 1: congruence).	0.367094039917	213
Coq.micromega.TautoX.is_cnf_ff_inv	40
Coq.micromega.TautoX.if_cnf_tt	40	1.0.0.0.20.0	search with cache (only 1: unfold cnf_tt; only 1: induction f; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	1.24556684494	1513
Coq.micromega.TautoX.or_cnf_opt_cnf_ff	40
Coq.micromega.TautoX.abs_and_pol	40
Coq.micromega.TautoX.abs_or_pol	40
Coq.micromega.TautoX.xcnf_true_mk_arrow_l	40
Coq.micromega.TautoX.or_cnf_opt_cnf_ff_r	40	1.3.11	search with cache (only 1: induction f; only 1: reflexivity; only 1: reflexivity).	3.37139010429	1954
Coq.micromega.TautoX.xcnf_true_mk_arrow_r	40
Coq.micromega.TautoX.abst_form_correct	40
Coq.micromega.TautoX.radd_term_term	40
Coq.micromega.TautoX.radd_term_term'	40
Coq.micromega.TautoX.xror_clause_clause	40
Coq.micromega.TautoX.ror_clause_clause	40	1.1.2	search with cache (only 1: destruct a; only 1: reflexivity; only 1: apply Tauto.xror_clause_clause).	0.0426590442657	7
Coq.micromega.TautoX.ror_cnf_cnf	40
Coq.micromega.TautoX.ror_opt_cnf_cnf	40
Coq.micromega.TautoX.ratom_cnf	40
Coq.micromega.TautoX.rxcnf_xcnf	40
Coq.micromega.TautoX.eval_cnf_app	40
Coq.micromega.TautoX.eval_cnf_ff	40	0.0.0.1.5.1.57	search with cache (only 1: split; only 1: intros; only 1: destruct H; only 1: simpl; only 1: tauto; only 1: unfold eval_cnf; only 1: tauto).	17.0164191723	31127
Coq.micromega.TautoX.eval_cnf_tt	40	2.0.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: tauto).	0.0539500713348	5
Coq.micromega.TautoX.eval_cnf_and_opt	40
Coq.micromega.TautoX.add_term_correct	40
Coq.micromega.TautoX.no_middle_eval_tt	40	9.8	search with cache (only 1: intro f; only 1: eauto).	0.822854042053	326
Coq.micromega.TautoX.or_clause_correct	40
Coq.micromega.TautoX.or_clause_cnf_correct	40
Coq.micromega.TautoX.eval_cnf_cons	40	0.9.2.8.11	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	11.2514970303	3534
Coq.micromega.TautoX.eval_cnf_cons_iff	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.116199016571	6
Coq.micromega.TautoX.or_cnf_correct	40
Coq.micromega.TautoX.or_cnf_opt_correct	40
Coq.micromega.TautoX.xcnf_correct	40
Coq.micromega.TautoX.cnf_checker_sound	40
Coq.micromega.TautoX.tauto_checker_sound	40
Coq.micromega.TautoX.eval_bf_map	40
Coq.micromega.ZifyInstX.eq_pos_inj	40	0.0	search with cache (only 1: intros; only 1: apply (iff_sym (Pos2Z.inj_iff x y))).	0.0297930240631	2
Coq.micromega.ZifyInstX.of_nat_to_nat_eq	40	0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: reflexivity; only 1: rewrite Z2Nat.id; only 1: reflexivity; only 1: easy; only 1: reflexivity).	0.0848460197449	6
Coq.micromega.ZifyInstX.z_max_spec	40	0.3.2.1.0	search with cache (only 1: intros; only 1: generalize (Z.le_max_r n m); only 1: generalize (Z.le_max_l n m); only 1: generalize (Z.max_spec_le n m); only 1: intuition idtac).	3.01937508583	242
Coq.micromega.ZifyInstX.z_min_spec	40	4.1.0.0	search with cache (only 1: intros; only 1: generalize (Z.min_spec_le n m); only 1: generalize (Z.min_spec_le n m); only 1: intuition).	2.12924981117	97
Coq.micromega.ZifyInstX.pow_pos_strict	40	10.2.5.2.7	search with cache (only 1: intros Ha'; only 1: intros; only 1: apply Z.pow_pos_nonneg; only 1: now Z.nzsimpl; only 1: Z.order).	3.52362012863	3217
Coq.micromega.ZifyComparisonX.Z_of_comparison_bound	40
Coq.micromega.ZifyComparisonX.Zcompare_spec	40
Coq.micromega.OrderedRingX.rplus_morph_Proper	40	0	search with cache (only 1: exact (OrderedRing.SORplus_wd sor)).	0.0101089477539	1
Coq.micromega.OrderedRingX.rtimes_morph_Proper	40	1	search with cache (only 1: exact (OrderedRing.SORtimes_wd sor)).	0.0111241340637	2
Coq.micromega.OrderedRingX.ropp_morph_Proper	40	2	search with cache (only 1: exact (OrderedRing.SORopp_wd sor)).	0.0114061832428	3
Coq.micromega.OrderedRingX.rle_morph_Proper	40	4	search with cache (only 1: exact (OrderedRing.SORle_wd sor)).	0.0158250331879	11
Coq.micromega.OrderedRingX.rlt_morph_Proper	40	4	search with cache (only 1: exact (OrderedRing.SORlt_wd sor)).	0.0124688148499	5
Coq.micromega.OrderedRingX.rminus_morph_Proper	40	2.0.0.0.6	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (OrderedRing.SORrt sor) x1 y1); only 1: rewrite (Rsub_def (OrderedRing.SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.202424049377	101
Coq.micromega.OrderedRingX.Rneq_symm	40	13.11	search with cache (only 1: intros n m H1 H2; only 1: now apply H1).	0.358320951462	538
Coq.micromega.OrderedRingX.Rplus_0_l	40	13.13	search with cache (only 1: intro; only 1: ring).	0.247859954834	452
Coq.micromega.OrderedRingX.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0207660198212	2
Coq.micromega.OrderedRingX.Rtimes_0_r	40	2.10	search with cache (only 1: intro; only 1: ring).	0.0496830940247	63
Coq.micromega.OrderedRingX.Rplus_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0249500274658	6
Coq.micromega.OrderedRingX.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0191469192505	2
Coq.micromega.OrderedRingX.Rtimes_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0245699882507	6
Coq.micromega.OrderedRingX.Rminus_eq_0	40
Coq.micromega.OrderedRingX.Rplus_cancel_l	40
Coq.micromega.OrderedRingX.Req_em	40
Coq.micromega.OrderedRingX.Req_dne	40
Coq.micromega.OrderedRingX.Rle_lt_eq	40
Coq.micromega.OrderedRingX.Rlt_trans	40
Coq.micromega.OrderedRingX.Rle_lt_trans	40
Coq.micromega.OrderedRingX.Rlt_le_trans	40
Coq.micromega.OrderedRingX.Rle_gt_cases	40
Coq.micromega.OrderedRingX.Rlt_neq	40	0.1.3.0	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).	0.074077129364	8
Coq.micromega.OrderedRingX.Rle_ngt	40
Coq.micromega.OrderedRingX.Rlt_nge	40
Coq.micromega.OrderedRingX.Rplus_le_mono_l	40
Coq.micromega.OrderedRingX.Rplus_le_mono_r	40
Coq.micromega.OrderedRingX.Rplus_lt_mono_l	40
Coq.micromega.OrderedRingX.Rplus_lt_mono_r	40	0.0.6.0.1.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite (Rplus_comm n p); only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	1.66350388527	482
Coq.micromega.OrderedRingX.Rplus_lt_mono	40
Coq.micromega.OrderedRingX.Rplus_le_mono	40
Coq.micromega.OrderedRingX.Rplus_lt_le_mono	40
Coq.micromega.OrderedRingX.Rplus_le_lt_mono	40
Coq.micromega.OrderedRingX.Rplus_pos_pos	40
Coq.micromega.OrderedRingX.Rplus_pos_nonneg	40
Coq.micromega.OrderedRingX.Rplus_nonneg_pos	40
Coq.micromega.OrderedRingX.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRingX.Rle_le_minus	40
Coq.micromega.OrderedRingX.Rlt_lt_minus	40
Coq.micromega.OrderedRingX.Ropp_lt_mono	40
Coq.micromega.OrderedRingX.Ropp_pos_neg	40
Coq.micromega.OrderedRingX.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRingX.Rtimes_pos_neg	40
Coq.micromega.OrderedRingX.Rtimes_neg_neg	40
Coq.micromega.OrderedRingX.Rtimes_square_nonneg	40
Coq.micromega.OrderedRingX.Rtimes_neq_0	40
Coq.micromega.OrderedRingX.Ropp_neg_pos	40
Coq.micromega.OrderedRingX.Rlt_0_1	40
Coq.micromega.OrderedRingX.Rlt_succ_r	40
Coq.micromega.OrderedRingX.Rlt_lt_succ	40
Coq.micromega.Fourier_utilX.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_utilX.Rlt_zero_pos_plus1	40	0.9.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: apply (Rle_lt_0_plus_1 x (Rlt_le 0 x H))).	0.203166007996	88
Coq.micromega.Fourier_utilX.Rle_zero_pos_plus1	40	0.7.1.0.12.2	search with cache (only 1: pattern 1 at 1; only 1: unfold Rle; only 1: left; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: auto with real).	16.7494580746	14152
Coq.micromega.Fourier_utilX.Rle_mult_inv_pos	40	0.0.1.13	search with cache (only 1: intros r r1 r2 H; only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real).	3.40892100334	1892
Coq.micromega.EnvRingX.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0670709609985	1
Coq.micromega.EnvRingX.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0611789226532	1
Coq.micromega.EnvRingX.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0591189861298	1
Coq.micromega.EnvRingX.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0650730133057	1
Coq.micromega.EnvRingX.Peq_ok	40
Coq.micromega.EnvRingX.Peq_spec	40
Coq.micromega.EnvRingX.Pphi0	40	0.13	search with cache (only 1: simpl; only 1: apply (morph0 CRmorph)).	0.523906946182	75
Coq.micromega.EnvRingX.Pphi1	40
Coq.micromega.EnvRingX.env_morph	40
Coq.micromega.EnvRingX.Pjump_add	40	0.2.0.1.0	search with cache (only 1: apply EnvRing.env_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.294140100479	8
Coq.micromega.EnvRingX.Pjump_xO_tail	40	0.0.1	search with cache (only 1: apply EnvRing.env_morph; only 1: intros; only 1: now jump_simpl).	0.215415000916	4
Coq.micromega.EnvRingX.Pjump_pred_double	40	0.0.0.0	search with cache (only 1: apply env_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.268773078918	4
Coq.micromega.EnvRingX.mkPinj_ok	40
Coq.micromega.EnvRingX.pow_pos_add	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	0.484101057053	12
Coq.micromega.EnvRingX.ceqb_spec	40	0.0.0.1	search with cache (only 1: generalize (morph_eq CRmorph c c'); only 1: destruct (c ?=! c'); only 1: auto; only 1: auto).	3.16403317451	81
Coq.micromega.EnvRingX.mkPX_ok	40
Coq.micromega.EnvRingX.PaddC_ok	40
Coq.micromega.EnvRingX.PsubC_ok	40
Coq.micromega.EnvRingX.PmulC_aux_ok	40
Coq.micromega.EnvRingX.PmulC_ok	40
Coq.micromega.EnvRingX.Popp_ok	40
Coq.micromega.EnvRingX.PaddX_ok	40
Coq.micromega.EnvRingX.Padd_ok	40
Coq.micromega.EnvRingX.PsubX_ok	40
Coq.micromega.EnvRingX.Psub_ok	40
Coq.micromega.EnvRingX.PmulI_ok	40
Coq.micromega.EnvRingX.Pmul_ok	40
Coq.micromega.EnvRingX.Psquare_ok	40
Coq.micromega.EnvRingX.Mphi_morph	40
Coq.micromega.EnvRingX.Mjump_xO_tail	40	0.0.0	search with cache (only 1: apply EnvRing.Mphi_morph; only 1: intros; only 1: now jump_simpl).	0.217331171036	3
Coq.micromega.EnvRingX.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.30103802681	4
Coq.micromega.EnvRingX.Mjump_add	40	0.2.0.1.0	search with cache (only 1: apply EnvRing.Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.336011171341	8
Coq.micromega.EnvRingX.mkZmon_ok	40
Coq.micromega.EnvRingX.zmon_pred_ok	40
Coq.micromega.EnvRingX.mkVmon_ok	40
Coq.micromega.EnvRingX.Mphi_ok	40
Coq.micromega.EnvRingX.POneSubst_ok	40
Coq.micromega.EnvRingX.PNSubst1_ok	40
Coq.micromega.EnvRingX.PNSubst_ok	40
Coq.micromega.EnvRingX.PSubstL1_ok	40
Coq.micromega.EnvRingX.PSubstL_ok	40
Coq.micromega.EnvRingX.PNSubstL_ok	40
Coq.micromega.EnvRingX.mkX_ok	40
Coq.micromega.EnvRingX.Ppow_pos_ok	40
Coq.micromega.EnvRingX.Ppow_N_ok	40
Coq.micromega.EnvRingX.norm_aux_PEadd	40
Coq.micromega.EnvRingX.norm_aux_PEopp	40	23	search with cache (only 1: now destruct pe).	5.39707994461	533
Coq.micromega.EnvRingX.norm_aux_spec	40
Coq.micromega.RMicromegaX.Rsrt	40
Coq.micromega.RMicromegaX.Rsor	40
Coq.micromega.RMicromegaX.Rinv_1	40	1.4	search with cache (only 1: rewrite Rinv_1; only 1: auto with real).	0.0730421543121	22
Coq.micromega.RMicromegaX.Qeq_true	40
Coq.micromega.RMicromegaX.Qeq_false	40
Coq.micromega.RMicromegaX.Qle_true	40
Coq.micromega.RMicromegaX.Q2R_0	40
Coq.micromega.RMicromegaX.Q2R_1	40
Coq.micromega.RMicromegaX.Q2R_inv_ext	40
Coq.micromega.RMicromegaX.QSORaddon	40
Coq.micromega.RMicromegaX.is_neg_true	40
Coq.micromega.RMicromegaX.is_neg_false	40
Coq.micromega.RMicromegaX.Q2R_m_Proper	40
Coq.micromega.RMicromegaX.Q2R_pow_pos	40
Coq.micromega.RMicromegaX.Q2R_pow_N	40	0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.3	search with cache (only 1: intros (x1, x2); only 1: destruct n; only 1: simpl; only 1: compute; only 1: apply Rinv_1; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: reflexivity).	10.0135068893	3758
Coq.micromega.RMicromegaX.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0710179805756	4
Coq.micromega.RMicromegaX.Qpower_positive_eq_zero	40
Coq.micromega.RMicromegaX.Qpower_positive_zero	40
Coq.micromega.RMicromegaX.Q2RpowerRZ	40
Coq.micromega.RMicromegaX.Qpower0	40
Coq.micromega.RMicromegaX.Q_of_RcstR	40
Coq.micromega.RMicromegaX.Reval_formula_compat	40
Coq.micromega.RMicromegaX.Reval_nformula_dec	40
Coq.micromega.RMicromegaX.RWeakChecker_sound	40
Coq.micromega.RMicromegaX.RTautoChecker_sound	40
Coq.micromega.ZifyClassesX.mkapp2	40	1.0	search with cache (only 1: subst; only 1: apply TBOPINJ).	0.0257818698883	3
Coq.micromega.ZifyClassesX.mkapp	40	1.0	search with cache (only 1: subst; only 1: apply TUOPINJ).	0.0245289802551	3
Coq.micromega.ZifyClassesX.mkrel	40	0.0	search with cache (only 1: subst; only 1: apply TRINJ).	0.0289299488068	2
Coq.micromega.ZifyClassesX.and_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0387620925903	2
Coq.micromega.ZifyClassesX.or_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0465049743652	2
Coq.micromega.ZifyClassesX.impl_morph	40	0	search with cache (only 1: tauto).	0.0334041118622	1
Coq.micromega.ZifyClassesX.iff_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.105466127396	2
Coq.micromega.ZifyClassesX.not_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.031378030777	2
Coq.micromega.ZifyClassesX.eq_iff	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: apply iff_refl).	0.0288009643555	3
Coq.micromega.ZifyClassesX.rew_iff	40	3	search with cache (only 1: exact (fun H => proj1 IFF H)).	0.0170748233795	4
Coq.micromega.ReflX.make_impl_true	40
Coq.micromega.ReflX.make_impl_map	40
Coq.micromega.ReflX.make_conj_cons	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.067645072937	6
Coq.micromega.ReflX.make_conj_impl	40
Coq.micromega.ReflX.make_conj_in	40
Coq.micromega.ReflX.make_conj_app	40
Coq.micromega.ReflX.make_conj_rapp	40
Coq.micromega.ReflX.not_make_conj_cons	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Refl.make_conj_cons; only 1: tauto).	0.107673168182	3
Coq.micromega.ReflX.not_make_conj_app	40
Coq.micromega.ZtacX.eq_incl	40	1.1.5	search with cache (only 1: intros n m; only 1: intuition; only 1: now subst).	0.264323949814	26
Coq.micromega.ZtacX.elim_concl_eq	40	0.0.4.1	search with cache (only 1: intros n m; only 1: destruct (Z.lt_trichotomy n m); only 1: tauto; only 1: tauto).	0.972431898117	243
Coq.micromega.ZtacX.elim_concl_le	40	0.1	search with cache (only 1: intros a b; only 1: Z.order).	1.0461139679	311
Coq.micromega.ZtacX.elim_concl_lt	40	0.1	search with cache (only 1: intros a b; only 1: Z.order).	0.911174058914	279
Coq.micromega.ZtacX.Zlt_le_add_1	40	0	search with cache (only 1: exact Zlt_le_succ).	0.0190999507904	1
Coq.micromega.ZtacX.add_le	40	10.2	search with cache (only 1: intros n m H; only 1: now apply Z.add_nonneg_nonneg).	1.13949513435	371
Coq.micromega.ZtacX.mul_le	40	3.3.0.1.4	search with cache (only 1: intros; only 1: change 0 with (0 * e2); only 1: apply Zmult_le_compat_r; only 1: auto; only 1: auto).	1.97765398026	790
Coq.micromega.QMicromegaX.Qsor	40
Coq.micromega.QMicromegaX.QSORaddon	40
Coq.micromega.QMicromegaX.Qeval_expr_simpl	40	6.2.5.1.0.0.0.0.5.24.8.1	search with cache (only 1: unfold Qminus; only 1: intros; only 1: induction e; only 1: reflexivity; only 1: reflexivity; only 1: tauto; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: reflexivity; only 1: simpl in *; only 1: reflexivity).	15.615737915	14381
Coq.micromega.QMicromegaX.QNpower	40	0.0.0	search with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0220181941986	3
Coq.micromega.QMicromegaX.Qeval_expr_compat	40
Coq.micromega.QMicromegaX.Qeval_formula_compat	40
Coq.micromega.QMicromegaX.Qeval_nformula_dec	40
Coq.micromega.QMicromegaX.QWeakChecker_sound	40
Coq.micromega.QMicromegaX.QTautoChecker_sound	40
Coq.micromega.EnvX.jump_add	40
Coq.micromega.EnvX.jump_simpl	40
Coq.micromega.EnvX.jump_tl	40	2.1.0.0.1.0	search with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: unfold jump; only 1: f_equal; only 1: f_equal; only 1: apply Pos.add_comm).	0.115143060684	40
Coq.micromega.EnvX.jump_succ	40	0.1.0.0	search with cache (only 1: rewrite <- !jump_add; only 1: f_equal; only 1: symmetry; only 1: apply Pos.add_1_l).	0.0501320362091	5
Coq.micromega.EnvX.jump_pred_double	40
Coq.micromega.EnvX.nth_spec	40
Coq.micromega.EnvX.nth_jump	40
Coq.micromega.EnvX.nth_pred_double	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0377671718597	3
Coq.Vectors.FinX.of_nat_ext	40	0	search with cache (only 1: now rewrite (Peano_dec.le_unique _ _ h h')).	0.0287289619446	1
Coq.Vectors.FinX.of_nat_to_nat_inv	40
Coq.Vectors.FinX.to_nat_of_nat	40
Coq.Vectors.FinX.to_nat_inj	40
Coq.Vectors.FinX.L_sanity	40
Coq.Vectors.FinX.L_R	40	29.0.3.63	search with cache (only 1: destruct n; only 1: now PeanoNat.Nat.nzsimpl; only 1: PeanoNat.Nat.nzsimpl; only 1: now left).	10.4555969238	9089
Coq.Vectors.FinX.R_sanity	40	2.1.0.0.1.4.4	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct (Fin.to_nat (Fin.R n p)); only 1: simpl in *; only 1: rewrite IHn; only 1: now destruct (Fin.to_nat p)).	7.23782491684	2586
Coq.Vectors.FinX.depair_sanity	40
Coq.Vectors.FinX.eqb_nat_eq	40
Coq.Vectors.FinX.eqb_eq	40
Coq.Vectors.FinX.eq_dec	40
Coq.Vectors.FinX.cast	40	17.2	search with cache (only 1: intros; only 1: now subst).	4.12127113342	2714
Coq.Vectors.VectorSpecX.eta	40	0.0.1	search with cache (only 1: apply caseS with (v := v); only 1: intros; only 1: reflexivity).	0.0220608711243	4
Coq.Vectors.VectorSpecX.eq_nth_iff	40	0.0.0.0.3.1.0.0.0.0.1.0.2.0.0	search with cache (only 1: split; only 1: revert n v1 v2; only 1: refine (@rect2 _ _ _ _ _); only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: apply (H0 Fin.F1 Fin.F1 eq_refl); only 1: apply H; only 1: intros p1 p2 H1; only 1: apply (H0 (Fin.FS p1) (Fin.FS p2) (f_equal Fin.FS H1)); only 1: revert n v1 v2; only 1: intros; only 1: now f_equal).	21.9074440002	12068
Coq.Vectors.VectorSpecX.nth_order_hd	40	0.0	search with cache (only 1: intros; only 1: now rewrite (Vector.eta v)).	0.0214350223541	2
Coq.Vectors.VectorSpecX.nth_order_tl	40	0.0.0.0.1.0.0.0	search with cache (only 1: induction n; only 1: intros; only 1: inversion H; only 1: intros; only 1: rewrite (Vector.eta v); only 1: unfold nth_order; only 1: simpl; only 1: now rewrite (Fin.of_nat_ext H (Lt.lt_S_n _ _ HS))).	0.0559659004211	9
Coq.Vectors.VectorSpecX.nth_order_last	40	0.0.0.0	search with cache (only 1: unfold nth_order; only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0243649482727	4
Coq.Vectors.VectorSpecX.nth_order_ext	40	0.0.1.1	search with cache (only 1: intros Hk; only 1: intros; only 1: unfold nth_order; only 1: now rewrite (Fin.of_nat_ext H1 H2)).	0.054368019104	6
Coq.Vectors.VectorSpecX.shiftin_nth	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: subst k2; only 1: induction k1; only 1: generalize dependent n; only 1: apply caseS; only 1: intros; only 1: now simpl; only 1: generalize dependent n; only 1: refine (@caseS _ _ _); only 1: intros; only 1: now simpl).	0.63646697998	170
Coq.Vectors.VectorSpecX.shiftin_last	40	0.0.1	search with cache (only 1: induction v; only 1: now simpl; only 1: now simpl).	0.0220711231232	4
Coq.Vectors.VectorSpecX.shiftrepeat_nth	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: refine (@Fin.rectS _ _ _); only 1: refine (@caseS _ _ _); only 1: simpl; only 1: intros; only 1: now destruct t; only 1: intros n p H v; only 1: revert p H; only 1: refine match v as v' in (t _ m) return (match m as m' return (t A m' -> Prop) with | S (S n) => fun v => forall p : Fin.t (S n), (forall v0 : t A (S n), (shiftrepeat v0)[@Fin.L_R 1 p] = v0[@p]) -> (shiftrepeat v)[@Fin.L_R 1 (Fin.FS p)] = v[@Fin.FS p] | _ => fun _ => True end v') with | [] => I | h :: t => _ end; only 1: destruct n0; only 1: exact I; only 1: now simpl).	1.77479505539	437
Coq.Vectors.VectorSpecX.shiftrepeat_last	40	0.0.0	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0198638439178	3
Coq.Vectors.VectorSpecX.nth_order_replace_eq	40
Coq.Vectors.VectorSpecX.nth_order_replace_neq	40
Coq.Vectors.VectorSpecX.replace_id	40	1.0.0.1.1.0.0.0	search with cache (only 1: induction p; only 1: intros; only 1: rewrite 2!(VectorSpec.eta v); only 1: auto; only 1: intros; only 1: rewrite 2!(VectorSpec.eta v); only 1: simpl; only 1: now rewrite IHp).	0.513807058334	180
Coq.Vectors.VectorSpecX.replace_replace_eq	40	1.0.0.0.0.0.1.1	search with cache (only 1: intros; only 1: induction p; only 1: rewrite 2!(VectorSpec.eta v); only 1: simpl; only 1: auto; only 1: rewrite 2!(VectorSpec.eta v); only 1: simpl; only 1: now rewrite IHp).	0.363896131516	102
Coq.Vectors.VectorSpecX.replace_replace_neq	40
Coq.Vectors.VectorSpecX.const_nth	40	0	search with cache (only 1: now induction p).	0.0121121406555	1
Coq.Vectors.VectorSpecX.map_id	40	1.0.0.0.0.1	search with cache (only 1: induction v; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHv; only 1: auto).	0.0741229057312	24
Coq.Vectors.VectorSpecX.map_map	40	1.0.0.0.0.0	search with cache (only 1: induction v; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHv; only 1: auto).	0.0356290340424	7
Coq.Vectors.VectorSpecX.map_ext_in	40
Coq.Vectors.VectorSpecX.map_ext	40	0.4.0	search with cache (only 1: intros; only 1: apply Vector.map_ext_in; only 1: auto).	0.185068845749	7
Coq.Vectors.VectorSpecX.nth_map	40	0.0.0.0.0.0.0.0	search with cache (only 1: subst p2; only 1: induction p1; only 1: revert n v; only 1: refine (@caseS _ _ _); only 1: now simpl; only 1: revert n v p1 IHp1; only 1: refine (@caseS _ _ _); only 1: now simpl).	0.0420949459076	8
Coq.Vectors.VectorSpecX.nth_map2	40	0.0.0.0.0.0.0.0.0.3.1.1.0	search with cache (only 1: intros; only 1: subst p2; only 1: subst p3; only 1: revert n v w p1; only 1: refine (@rect2 _ _ _ _ _); only 1: simpl; only 1: exact (Fin.case0 _); only 1: simpl; only 1: intros n v1 v2 H a b p; only 1: revert n p v1 v2 H; only 1: refine (@Fin.caseS _ _ _); only 1: now simpl; only 1: now simpl).	1.81200695038	815
Coq.Vectors.VectorSpecX.fold_left_right_assoc_eq	40	0.0.0.2.1.0.1.0.0.0.0.3	search with cache (only 1: assert (forall n h (v : t B n) a, fold_left f (f a h) v = f (fold_left f a v) h); only 1: induction v0; only 1: now simpl; only 1: intros; only 1: simpl; only 1: rewrite <- IHv0, assoc; only 1: now f_equal; only 1: intros; only 1: induction v; only 1: reflexivity; only 1: simpl; only 1: now rewrite <- IHv).	26.1466519833	9001
Coq.Vectors.VectorSpecX.to_list_of_list_opp	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: reflexivity; only 1: unfold to_list; only 1: simpl; only 1: now f_equal).	0.0585370063782	21
Coq.Vectors.VectorSpecX.take_O	40	0	search with cache (only 1: reflexivity).	0.0134198665619	1
Coq.Vectors.VectorSpecX.take_idem	40	1.0.0.0.0.1.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	1.92036294937	488
Coq.Vectors.VectorSpecX.take_app	40	0.0.0.0.0.0.0	search with cache (only 1: induction v; only 1: intros m w le; only 1: reflexivity; only 1: intros m w le; only 1: simpl; only 1: apply f_equal; only 1: apply IHv).	0.0443530082703	7
Coq.Vectors.VectorSpecX.take_prf_irr	40	1.0.0.0.0.1.0.0.2	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: reflexivity; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	3.3582880497	959
Coq.Vectors.VectorSpecX.uncons_cons	40	0	search with cache (only 1: reflexivity).	0.0116670131683	1
Coq.Vectors.VectorSpecX.append_comm_cons	40	0	search with cache (only 1: reflexivity).	0.0123689174652	1
Coq.Vectors.VectorSpecX.splitat_append	40
Coq.Vectors.VectorSpecX.append_splitat	40
Coq.Vectors.VectorSpecX.Forall_impl	40	1.1.3.0.0.3.4.0.0	search with cache (only 1: induction v; only 1: constructor; only 1: intros HP; only 1: inversion HP as [| ? ? ? ? ? Heq1 [Heq2 He]]; only 1: apply (inj_pair2_eq_dec _ Nat.eq_dec) in He; only 1: subst; only 1: constructor; only 1: intuition; only 1: intuition).	18.8716650009	4502
Coq.Vectors.VectorSpecX.Forall_forall	40
Coq.Vectors.VectorSpecX.Forall_nth_order	40
Coq.Vectors.VectorSpecX.Forall2_nth_order	40
Coq.Vectors.VectorEqX.eqb_nat_eq	40	0.2.0.1.0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros m n v1; only 1: revert n; only 1: induction v1; only 1: destruct v2; only 1: now constructor; only 1: discriminate; only 1: destruct v2; only 1: discriminate; only 1: simpl; only 1: intros Hbeq; only 1: apply andb_prop in Hbeq; only 1: destruct Hbeq; only 1: f_equal; only 1: eauto).	25.2206389904	9185
Coq.Vectors.VectorEqX.eqb_eq	40
Coq.Vectors.VectorEqX.eq_dec	40
Coq.Vectors.VectorEqX.cast	40	0.0.1	search with cache (only 1: refine (fix cast {A m} (v : t A m) {struct v} := match v in (t _ m') return (forall n, m' = n -> t A n) with | [] => fun n => match n with | 0 => fun _ => [] | S _ => fun H => False_rect _ _ end | h :: w => fun n => match n with | 0 => fun H => False_rect _ _ | S n' => fun H => h :: cast _ _ w n' (f_equal Nat.pred H) end end); only 1: discriminate; only 1: discriminate).	0.0322470664978	13
Coq.Vectors.VectorDefX.trunc	40	0.5.0.2.4.4.5.0.1	search with cache (only 1: induction p as [| p f]; only 1: destruct n; only 1: auto with arith; only 1: trivial; only 1: intros H v; only 1: apply Vector.shiftout; only 1: rewrite minus_Sn_m; only 1: auto with *; only 1: auto with *).	16.8904900551	15108
Coq.rtauto.BintreeX.Gt_Psucc	40
Coq.rtauto.BintreeX.Psucc_Gt	40
Coq.rtauto.BintreeX.map_app	40	2.0.1.0.3.0	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	1.00721001625	407
Coq.rtauto.BintreeX.length_map	40	0.0.0.0.2.0	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0438721179962	8
Coq.rtauto.BintreeX.Lget_map	40
Coq.rtauto.BintreeX.Lget_app	40
Coq.rtauto.BintreeX.Lget_app_Some	40	1.0.6.0.4.0	search with cache (only 1: induction l; only 1: now discriminate; only 1: simpl Lget; only 1: induction i; only 1: auto; only 1: auto).	2.24516510963	1086
Coq.rtauto.BintreeX.Tget_Tempty	40	0.0.1.0.10.6	search with cache (only 1: symmetry; only 1: destruct p; only 1: easy; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.447458028793	373
Coq.rtauto.BintreeX.Tget_Tadd	40
Coq.rtauto.BintreeX.get_empty	40	1.6.2.8	search with cache (only 1: destruct i; only 1: reflexivity || congruence; only 1: auto with arith; only 1: reflexivity || congruence).	0.355130910873	364
Coq.rtauto.BintreeX.get_Full_Gt	40
Coq.rtauto.BintreeX.get_Full_Eq	40
Coq.rtauto.BintreeX.get_push_Full	40
Coq.rtauto.BintreeX.Full_push_compat	40
Coq.rtauto.BintreeX.Full_index_one_empty	40
Coq.rtauto.BintreeX.push_not_empty	40	9.10.1.9.4	search with cache (only 1: unfold push, index, get; only 1: intuition; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: destr_eq H; only 1: now destruct H).	15.9138350487	10797
Coq.rtauto.BintreeX.get_In	40
Coq.rtauto.BintreeX.Tget_Tmap	40
Coq.rtauto.BintreeX.Tmap_Tadd	40
Coq.rtauto.BintreeX.get_map	40
Coq.rtauto.BintreeX.map_push	40
Coq.rtauto.BintreeX.Full_map	40
Coq.rtauto.RtautoX.pos_eq_refl	40
Coq.rtauto.RtautoX.form_eq_refl	40
Coq.rtauto.RtautoX.compose0	40
Coq.rtauto.RtautoX.compose1	40
Coq.rtauto.RtautoX.compose2	40	1.0.0.7.0.1.0.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: simpl; only 1: auto; only 1: intros A B H; only 1: intro i; only 1: simpl; only 1: apply IHF; only 1: auto).	12.1429970264	10948
Coq.rtauto.RtautoX.compose3	40	1.0.0.8.1.1.0.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: simpl; only 1: auto; only 1: intros A B C H; only 1: intro i; only 1: simpl; only 1: apply IHF; only 1: auto).	6.63600182533	6961
Coq.rtauto.RtautoX.weaken	40
Coq.rtauto.RtautoX.project_In	40
Coq.rtauto.RtautoX.project	40
Coq.rtauto.RtautoX.interp_proof	40
Coq.rtauto.RtautoX.Reflect	40
Coq.Setoids.SetoidX.Seq_refl	40	23	search with cache (only 1: firstorder).	0.553789138794	376
Coq.Setoids.SetoidX.Seq_sym	40	2.1.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: assumption).	0.190362930298	90
Coq.Setoids.SetoidX.Seq_trans	40	1.1.0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: transitivity ltac:(y); only 1: assumption; only 1: assumption).	0.11258482933	68
Coq.Setoids.SetoidX.gen_st	40	0.0.0.24	search with cache (only 1: constructor; only 1: congruence; only 1: congruence; only 1: congruence).	0.565712928772	779
Coq.Bool.ZerobX.zerob_true_intro	40	0.1.8.1	search with cache (only 1: intros a Ha; only 1: destruct a; only 1: now try Nat.order'; only 1: now try Nat.order').	0.519025802612	158
Coq.Bool.ZerobX.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0504701137543	3
Coq.Bool.ZerobX.zerob_false_intro	40	2.1.0	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: now try Nat.order').	0.0504729747772	6
Coq.Bool.ZerobX.zerob_false_elim	40	1.1.3.0	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: inversion 1; only 1: inversion 1).	0.0855460166931	18
Coq.Bool.BoolX.bool_dec	40	4.0	search with cache (only 1: intros; only 1: decide equality).	0.0233511924744	11
Coq.Bool.BoolX.diff_true_false	40	1	search with cache (only 1: discriminate).	0.0124130249023	2
Coq.Bool.BoolX.diff_false_true	40	1	search with cache (only 1: discriminate).	0.0119459629059	2
Coq.Bool.BoolX.eq_true_false_abs	40	0	search with cache (only 1: Bool.destr_bool).	0.0149660110474	1
Coq.Bool.BoolX.not_true_is_false	40	2.0	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0208950042725	4
Coq.Bool.BoolX.not_false_is_true	40	2.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0200698375702	4
Coq.Bool.BoolX.not_true_iff_false	40	0.0.0	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	0.0300159454346	3
Coq.Bool.BoolX.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0308010578156	3
Coq.Bool.BoolX.le_implb	40	0.6.0.0.0	search with cache (only 1: Bool.destr_bool; only 1: <Coq.Strings.String.t_eqb>; only 1: intuition; only 1: intuition; only 1: intuition).	0.412584066391	58
Coq.Bool.BoolX.compare_spec	40	0.0.0.0.15	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.695040941238	767
Coq.Bool.BoolX.eqb_subst	40	1	search with cache (only 1: Bool.destr_bool).	0.0154318809509	2
Coq.Bool.BoolX.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.0142171382904	1
Coq.Bool.BoolX.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.0161399841309	1
Coq.Bool.BoolX.eqb_true_iff	40	0.0.4.4	search with cache (only 1: intros; only 1: split; only 1: destr_bool; only 1: destr_bool).	0.244545936584	111
Coq.Bool.BoolX.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0924510955811	5
Coq.Bool.BoolX.negb_orb	40	0	search with cache (only 1: Bool.destr_bool).	0.0128631591797	1
Coq.Bool.BoolX.negb_andb	40	0	search with cache (only 1: Bool.destr_bool).	0.0129969120026	1
Coq.Bool.BoolX.negb_involutive	40	0	search with cache (only 1: Bool.destr_bool).	0.0100288391113	1
Coq.Bool.BoolX.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.0100119113922	1
Coq.Bool.BoolX.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0127460956573	1
Coq.Bool.BoolX.no_fixpoint_negb	40	0	search with cache (only 1: Bool.destr_bool).	0.0110111236572	1
Coq.Bool.BoolX.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.0115959644318	1
Coq.Bool.BoolX.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.0109989643097	1
Coq.Bool.BoolX.if_negb	40	0	search with cache (only 1: destr_bool).	0.0104010105133	1
Coq.Bool.BoolX.negb_true_iff	40	1.1.2.1	search with cache (only 1: intro H; only 1: intuition; only 1: Bool.destr_bool; only 1: Bool.destr_bool).	0.613529920578	28
Coq.Bool.BoolX.negb_false_iff	40	1.1.3.2	search with cache (only 1: intro H; only 1: intuition; only 1: destr_bool; only 1: destr_bool).	1.26981186867	110
Coq.Bool.BoolX.orb_true_iff	40	0.0.0.1.0	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.267248153687	6
Coq.Bool.BoolX.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0403730869293	5
Coq.Bool.BoolX.orb_true_elim	40	0.1.0.2.1.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: left; only 1: tauto; only 1: simpl; only 1: right; only 1: trivial).	0.36461186409	126
Coq.Bool.BoolX.orb_prop	40	0.0.0	search with cache (only 1: intros; only 1: apply Bool.orb_true_iff; only 1: trivial).	0.0278089046478	3
Coq.Bool.BoolX.orb_true_intro	40	0.0.0	search with cache (only 1: intros; only 1: apply Bool.orb_true_iff; only 1: trivial).	0.0190598964691	3
Coq.Bool.BoolX.orb_false_intro	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.0180389881134	3
Coq.Bool.BoolX.orb_false_elim	40	2.0.1.0.0	search with cache (only 1: intros; only 1: apply Bool.orb_false_iff; only 1: apply Bool.orb_false_iff; only 1: apply Bool.orb_false_iff; only 1: trivial).	0.0403521060944	13
Coq.Bool.BoolX.orb_diag	40	3.0	search with cache (only 1: intros; only 1: by case : b ).	0.0180389881134	5
Coq.Bool.BoolX.orb_true_r	40	1	search with cache (only 1: Bool.destr_bool).	0.0139791965485	2
Coq.Bool.BoolX.orb_true_l	40	0	search with cache (only 1: reflexivity).	0.013375043869	1
Coq.Bool.BoolX.orb_false_r	40	0	search with cache (only 1: Bool.destr_bool).	0.0118541717529	1
Coq.Bool.BoolX.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.0123019218445	1
Coq.Bool.BoolX.orb_negb_r	40	0	search with cache (only 1: Bool.destr_bool).	0.0136978626251	1
Coq.Bool.BoolX.orb_negb_l	40	0	search with cache (only 1: destr_bool).	0.0136730670929	1
Coq.Bool.BoolX.orb_comm	40	4.0	search with cache (only 1: intros; only 1: by case b1; case b2; constructor; auto; case).	0.0172619819641	6
Coq.Bool.BoolX.orb_assoc	40	0	search with cache (only 1: Bool.destr_bool).	0.0153660774231	1
Coq.Bool.BoolX.andb_true_iff	40	0.0.0.1.0	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0409181118011	6
Coq.Bool.BoolX.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.172513961792	5
Coq.Bool.BoolX.andb_true_eq	40	1.1	search with cache (only 1: destr_bool; only 1: easy).	0.341471195221	106
Coq.Bool.BoolX.andb_false_intro1	40	0.0.0	search with cache (only 1: intros; only 1: apply Bool.andb_false_iff; only 1: auto).	0.0169429779053	3
Coq.Bool.BoolX.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply Bool.andb_false_iff; only 1: auto).	0.0167078971863	3
Coq.Bool.BoolX.andb_false_r	40	2	search with cache (only 1: Bool.destr_bool).	0.0116798877716	3
Coq.Bool.BoolX.andb_false_l	40	0	search with cache (only 1: reflexivity).	0.0101780891418	1
Coq.Bool.BoolX.andb_diag	40	2.0	search with cache (only 1: intros; only 1: by case : b ).	0.0167350769043	4
Coq.Bool.BoolX.andb_true_r	40	2	search with cache (only 1: Bool.destr_bool).	0.0116341114044	3
Coq.Bool.BoolX.andb_true_l	40	0	search with cache (only 1: reflexivity).	0.0110919475555	1
Coq.Bool.BoolX.andb_false_elim	40	2.0.3.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0755300521851	32
Coq.Bool.BoolX.andb_negb_r	40	0	search with cache (only 1: Bool.destr_bool).	0.010899066925	1
Coq.Bool.BoolX.andb_negb_l	40	0	search with cache (only 1: destr_bool).	0.0110330581665	1
Coq.Bool.BoolX.andb_comm	40	2.0	search with cache (only 1: intros; only 1: by case b1; case b2; constructor; auto; case; auto).	0.018059015274	4
Coq.Bool.BoolX.andb_assoc	40	2	search with cache (only 1: Bool.destr_bool).	0.0156700611115	3
Coq.Bool.BoolX.andb_orb_distrib_r	40	0	search with cache (only 1: Bool.destr_bool).	0.0149109363556	1
Coq.Bool.BoolX.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0146481990814	1
Coq.Bool.BoolX.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0355699062347	1
Coq.Bool.BoolX.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.014328956604	1
Coq.Bool.BoolX.absorption_andb	40	0	search with cache (only 1: Bool.destr_bool).	0.0125560760498	1
Coq.Bool.BoolX.absorption_orb	40	0	search with cache (only 1: Bool.destr_bool).	0.0124859809875	1
Coq.Bool.BoolX.implb_true_iff	40	6.6.6.0.0	search with cache (only 1: Bool.destr_bool; only 1: <Coq.Strings.String.t_eqb>; only 1: intuition; only 1: intuition; only 1: intuition).	5.39715409279	3088
Coq.Bool.BoolX.implb_false_iff	40	0.0.0.0.0	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0463221073151	5
Coq.Bool.BoolX.implb_orb	40	0	search with cache (only 1: Bool.destr_bool).	0.0133309364319	1
Coq.Bool.BoolX.implb_negb_orb	40	0	search with cache (only 1: Bool.destr_bool).	0.0127079486847	1
Coq.Bool.BoolX.implb_true_r	40	0	search with cache (only 1: Bool.destr_bool).	0.0104649066925	1
Coq.Bool.BoolX.implb_false_r	40	0	search with cache (only 1: Bool.destr_bool).	0.0105519294739	1
Coq.Bool.BoolX.implb_true_l	40	0	search with cache (only 1: Bool.destr_bool).	0.00994801521301	1
Coq.Bool.BoolX.implb_false_l	40	0	search with cache (only 1: Bool.destr_bool).	0.0108029842377	1
Coq.Bool.BoolX.implb_same	40	0	search with cache (only 1: destr_bool).	0.0132200717926	1
Coq.Bool.BoolX.implb_contrapositive	40	0	search with cache (only 1: destr_bool).	0.0145869255066	1
Coq.Bool.BoolX.implb_negb	40	0	search with cache (only 1: destr_bool).	0.0153810977936	1
Coq.Bool.BoolX.implb_curry	40	0	search with cache (only 1: Bool.destr_bool).	0.0134229660034	1
Coq.Bool.BoolX.implb_andb_distrib_r	40	0	search with cache (only 1: Bool.destr_bool).	0.0140888690948	1
Coq.Bool.BoolX.implb_orb_distrib_r	40	0	search with cache (only 1: Bool.destr_bool).	0.0168490409851	1
Coq.Bool.BoolX.implb_orb_distrib_l	40	0	search with cache (only 1: Bool.destr_bool).	0.0159940719604	1
Coq.Bool.BoolX.xorb_false_r	40	0	search with cache (only 1: Bool.destr_bool).	0.0687789916992	1
Coq.Bool.BoolX.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.0110709667206	1
Coq.Bool.BoolX.xorb_true_r	40	0	search with cache (only 1: reflexivity).	0.00983595848083	1
Coq.Bool.BoolX.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.0105309486389	1
Coq.Bool.BoolX.xorb_nilpotent	40	1	search with cache (only 1: Bool.destr_bool).	0.0105490684509	2
Coq.Bool.BoolX.xorb_comm	40	3	search with cache (only 1: destr_bool).	0.0115339756012	4
Coq.Bool.BoolX.xorb_assoc_reverse	40	2	search with cache (only 1: Bool.destr_bool).	0.0135650634766	3
Coq.Bool.BoolX.xorb_eq	40	0	search with cache (only 1: Bool.destr_bool).	0.0121388435364	1
Coq.Bool.BoolX.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0141971111298	1
Coq.Bool.BoolX.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0138530731201	1
Coq.Bool.BoolX.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0142788887024	1
Coq.Bool.BoolX.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0142760276794	1
Coq.Bool.BoolX.negb_xorb_l	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0221059322357	5
Coq.Bool.BoolX.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0218749046326	5
Coq.Bool.BoolX.xorb_negb_negb	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0229032039642	5
Coq.Bool.BoolX.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destruct b1, b2; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0501470565796	5
Coq.Bool.BoolX.eq_true_iff_eq	40	13.0	search with cache (only 1: intros Heq; only 1: apply Bool.eq_iff_eq_true).	0.779433965683	343
Coq.Bool.BoolX.eq_true_negb_classical	40	2.0	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0208637714386	4
Coq.Bool.BoolX.eq_true_not_negb	40	2.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0189559459686	4
Coq.Bool.BoolX.absurd_eq_bool	40	4	search with cache (only 1: contradiction).	0.0212888717651	14
Coq.Bool.BoolX.absurd_eq_true	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0476348400116	2
Coq.Bool.BoolX.trans_eq_bool	40	1.0.2.0	search with cache (only 1: intros a n H H'; only 1: intro H2; only 1: elim H2; only 1: auto  4).	0.053642988205	7
Coq.Bool.BoolX.Is_true_eq_true	40	0.11	search with cache (only 1: destr_bool; only 1: tauto).	0.0868358612061	72
Coq.Bool.BoolX.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.0109510421753	1
Coq.Bool.BoolX.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0160510540009	3
Coq.Bool.BoolX.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00884389877319	1
Coq.Bool.BoolX.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0249040126801	3
Coq.Bool.BoolX.orb_prop_elim	40	0.0.0.0.0	search with cache (only 1: Bool.destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0227530002594	5
Coq.Bool.BoolX.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0138919353485	2
Coq.Bool.BoolX.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0178937911987	4
Coq.Bool.BoolX.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0214970111847	5
Coq.Bool.BoolX.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.034145116806	13
Coq.Bool.BoolX.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0232458114624	3
Coq.Bool.BoolX.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0159199237823	3
Coq.Bool.BoolX.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0142779350281	2
Coq.Bool.BoolX.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0125551223755	2
Coq.Bool.BoolX.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0165181159973	3
Coq.Bool.BoolX.andb_if	40	3	search with cache (only 1: destr_bool).	0.0190329551697	13
Coq.Bool.BoolX.negb_if	40	0	search with cache (only 1: destr_bool).	0.0110859870911	1
Coq.Bool.BoolX.andb_lazy_alt	40	1.0	search with cache (only 1: intros; only 1: by case : a ; case : b  =>// ->).	0.0197319984436	3
Coq.Bool.BoolX.orb_lazy_alt	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.0183420181274	2
Coq.Bool.BoolX.reflect_iff	40	0.0.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0269949436188	3
Coq.Bool.BoolX.iff_reflect	40	0.0.1	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	0.0339760780334	13
Coq.Bool.BoolX.reflect_dec	40	2.2.0	search with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.0185279846191	7
Coq.Bool.BoolX.eqb_spec	40	0.0.0.0.9	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.167330980301	70
Coq.Bool.SumboolX.sumbool_of_bool	40	1.2.5.2	search with cache (only 1: destruct b; only 1: auto; only 1: right; only 1: tauto).	0.444492101669	403
Coq.Bool.SumboolX.bool_eq_rec	40	1.1.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0252079963684	5
Coq.Bool.SumboolX.bool_eq_ind	40	1.1.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0223240852356	5
Coq.Bool.SumboolX.sumbool_and	40	2.2.0	search with cache (only 1: case H1; only 1: auto; only 1: auto).	0.795021057129	373
Coq.Bool.SumboolX.sumbool_or	40	2.2.0	search with cache (only 1: case H1; only 1: auto; only 1: auto).	0.974297046661	368
Coq.Bool.SumboolX.sumbool_not	40	2.2.0	search with cache (only 1: case H1; only 1: auto; only 1: auto).	0.800931215286	368
Coq.Bool.SumboolX.bool_of_sumbool	40	1.2.1.0.1.0	search with cache (only 1: intros A B H; only 1: elim H; only 1: exists true; only 1: auto; only 1: exists false; only 1: auto).	0.242127180099	159
Coq.Bool.IfPropX.Iftrue_inv	40	6.1.9	search with cache (only 1: destruct 1; only 1: intuition; only 1: easy).	0.862265110016	938
Coq.Bool.IfPropX.Iffalse_inv	40	0.1.2.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: auto with bool).	0.0320158004761	8
Coq.Bool.IfPropX.IfProp_true	40
Coq.Bool.IfPropX.IfProp_false	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0412549972534	11
Coq.Bool.IfPropX.IfProp_or	40
Coq.Bool.IfPropX.IfProp_sum	40
Coq.Bool.DecBoolX.ifdec_left	40	4.0	search with cache (only 1: intros; only 1: intuition).	0.0218439102173	6
Coq.Bool.DecBoolX.ifdec_right	40	5.0	search with cache (only 1: intros; only 1: tauto).	0.183850049973	96
Coq.Bool.BoolEqX.beq_eq_true	40	1.3	search with cache (only 1: intros Hbeq; only 1: congruence).	0.697897911072	22
Coq.Bool.BoolEqX.beq_eq_not_false	40	2	search with cache (only 1: congruence).	0.0126478672028	3
Coq.Bool.BoolEqX.beq_false_not_eq	40	5	search with cache (only 1: congruence).	0.0224449634552	16
Coq.Bool.BoolEqX.exists_beq_eq	40	90	search with cache (only 1: eauto).	7.2285888195	33774
Coq.Bool.BoolEqX.not_eq_false_beq	40
Coq.Bool.BoolEqX.eq_dec	40
Coq.Bool.BoolOrderX.le_refl	40
Coq.Bool.BoolOrderX.le_trans	40	0	search with cache (only 1: destr_bool).	0.0139660835266	1
Coq.Bool.BoolOrderX.le_true	40	0	search with cache (only 1: destr_bool).	0.0116140842438	1
Coq.Bool.BoolOrderX.false_le	40	0	search with cache (only 1: destr_bool).	0.0109021663666	1
Coq.Bool.BoolOrderX.le_compat	40	2	search with cache (only 1: <Coq.Strings.Ascii.t_eqb>).	0.132617950439	20
Coq.Bool.BoolOrderX.lt_irrefl	40	8.2.17	search with cache (only 1: red; only 1: intros l; only 1: destr_bool).	1.92417907715	1189
Coq.Bool.BoolOrderX.lt_trans	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0216341018677	2
Coq.Bool.BoolOrderX.lt_compat	40	0	search with cache (only 1: intuition).	0.0750288963318	1
Coq.Bool.BoolOrderX.lt_trichotomy	40
Coq.Bool.BoolOrderX.lt_total	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.275645971298	5
Coq.Bool.BoolOrderX.lt_le_incl	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0197970867157	2
Coq.Bool.BoolOrderX.le_lteq_dec	40	0.2.5.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: right; only 1: tauto).	0.347496032715	119
Coq.Bool.BoolOrderX.le_lteq	40	0.1.0.2.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: tauto; only 1: intuition; only 1: tauto).	0.134196996689	8
Coq.Bool.BoolOrderX.le_preorder	40
Coq.Bool.BoolOrderX.lt_strorder	40
Coq.Lists.SetoidPermutationX.Equivalence_instance_0	40
Coq.Lists.SetoidPermutationX.PermutationA_cons	40	5.1	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: auto).	0.0167849063873	8
Coq.Lists.SetoidPermutationX.PermutationA_app_head	40
Coq.Lists.SetoidPermutationX.PermutationA_app	40
Coq.Lists.SetoidPermutationX.PermutationA_app_tail	40
Coq.Lists.SetoidPermutationX.PermutationA_cons_append	40
Coq.Lists.SetoidPermutationX.PermutationA_app_comm	40
Coq.Lists.SetoidPermutationX.PermutationA_cons_app	40	1.7.21.6	search with cache (only 1: intros E; only 1: rewrite E; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	36.0280900002	14548
Coq.Lists.SetoidPermutationX.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0189299583435	1
Coq.Lists.SetoidPermutationX.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutationX.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutationX.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutationX.PermutationA_decompose	40
Coq.Lists.SetoidPermutationX.Permutation_PermutationA	40	3.1.12.2.3	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').	2.22885608673	1981
Coq.Lists.SetoidPermutationX.eqlistA_PermutationA	40	1.2.0	search with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0211808681488	6
Coq.Lists.SetoidPermutationX.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutationX.PermutationA_preserves_NoDupA	40
Coq.Lists.SetoidListX.InA_altdef	40	0.1.0.1.2.0.0.0.1	search with cache (only 1: induction l; only 1: split; only 1: abstract now rewrite Exists_nil; only 1: abstract now rewrite Exists_nil; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	2.82810211182	446
Coq.Lists.SetoidListX.InA_cons	40
Coq.Lists.SetoidListX.InA_nil	40	9	search with cache (only 1: easy).	0.0296890735626	30
Coq.Lists.SetoidListX.InA_alt	40	0.0.1.0.5.1.0.3.1	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	5.29925394058	2882
Coq.Lists.SetoidListX.NoDupA_altdef	40
Coq.Lists.SetoidListX.incl_nil	40	1.1.4.5	search with cache (only 1: intro H0; only 1: rewrite InA_altdef, Exists_exists; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).	0.166110038757	123
Coq.Lists.SetoidListX.eqlistA_altdef	40	1.3.1.8.1.1.6	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto).	9.42583489418	8638
Coq.Lists.SetoidListX.equivlist_equiv	40	43	search with cache (only 1: firstorder).	0.894958972931	945
Coq.Lists.SetoidListX.eqlistA_equiv	40
Coq.Lists.SetoidListX.eqlistA_equivlistA	40
Coq.Lists.SetoidListX.InA_compat	40
Coq.Lists.SetoidListX.InA_eqA	40
Coq.Lists.SetoidListX.In_InA	40	0.0.2.0.0.3.7	search with cache (only 1: induction l as [| x l]; only 1: intros a H; only 1: inversion_clear H; only 1: intros; only 1: firstorder; only 1: subst; only 1: auto).	1.08194208145	344
Coq.Lists.SetoidListX.InA_split	40
Coq.Lists.SetoidListX.InA_app	40	1.0.3.0.8.10	search with cache (only 1: intros l m a; only 1: induction l as [| x l IH]; only 1: intuition; only 1: simpl; only 1: rewrite 2!InA_cons; only 1: intuition).	22.7248389721	1844
Coq.Lists.SetoidListX.InA_app_iff	40
Coq.Lists.SetoidListX.InA_rev	40
Coq.Lists.SetoidListX.InA_singleton	40	3.4.0.4.8	search with cache (only 1: constructor; only 1: intuition; only 1: invlist InA; only 1: intuition; only 1: auto).	7.16574287415	629
Coq.Lists.SetoidListX.InA_double_head	40	6.1	search with cache (only 1: rewrite 2!InA_cons; only 1: intuition).	0.170805931091	11
Coq.Lists.SetoidListX.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0612831115723	2
Coq.Lists.SetoidListX.InA_app_idem	40
Coq.Lists.SetoidListX.NoDupA_app	40
Coq.Lists.SetoidListX.NoDupA_rev	40
Coq.Lists.SetoidListX.NoDupA_split	40
Coq.Lists.SetoidListX.NoDupA_swap	40
Coq.Lists.SetoidListX.NoDupA_singleton	40	0.0.2.34	search with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	1.6376709938	796
Coq.Lists.SetoidListX.equivlistA_cons_proper	40
Coq.Lists.SetoidListX.equivlistA_app_proper	40
Coq.Lists.SetoidListX.equivlistA_cons_nil	40
Coq.Lists.SetoidListX.equivlistA_nil_eq	40
Coq.Lists.SetoidListX.equivlistA_double_head	40	1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: rewrite 2!InA_cons; only 1: intuition).	0.256074905396	5
Coq.Lists.SetoidListX.equivlistA_permute_heads	40	0.3.1.0	search with cache (only 1: intro; only 1: rewrite 2!InA_cons; only 1: rewrite !InA_cons; only 1: tauto).	0.0730469226837	8
Coq.Lists.SetoidListX.equivlistA_app_idem	40	0.0.7	search with cache (only 1: intros H; only 1: rewrite InA_app_iff; only 1: tauto).	0.144259929657	37
Coq.Lists.SetoidListX.equivlistA_NoDupA_split	40
Coq.Lists.SetoidListX.fold_right_eqlistA	40
Coq.Lists.SetoidListX.ForallOrdPairs_inclA	40
Coq.Lists.SetoidListX.fold_right_commutes_restr	40
Coq.Lists.SetoidListX.fold_right_equivlistA_restr	40
Coq.Lists.SetoidListX.fold_right_add_restr	40
Coq.Lists.SetoidListX.fold_right_commutes	40	4.1.0.2.1.1.0.0.0.0.5	search with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	3.33263587952	2157
Coq.Lists.SetoidListX.fold_right_equivlistA	40
Coq.Lists.SetoidListX.fold_right_add	40
Coq.Lists.SetoidListX.fold_right_eqlistA2	40	0.0.1.0.3.0.17.14	search with cache (only 1: intros ND Incl FOP; only 1: intros z Hz; only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply Comp; only 1: auto with relations; only 1: auto with relations).	15.0265979767	8160
Coq.Lists.SetoidListX.fold_right_commutes_restr2	40
Coq.Lists.SetoidListX.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidListX.fold_right_add_restr2	40
Coq.Lists.SetoidListX.fold_right_commutes2	40
Coq.Lists.SetoidListX.fold_right_equivlistA2	40
Coq.Lists.SetoidListX.fold_right_add2	40
Coq.Lists.SetoidListX.InA_dec	40
Coq.Lists.SetoidListX.removeA_filter	40
Coq.Lists.SetoidListX.removeA_InA	40
Coq.Lists.SetoidListX.removeA_NoDupA	40
Coq.Lists.SetoidListX.removeA_equivlistA	40
Coq.Lists.SetoidListX.InfA_ltA	40
Coq.Lists.SetoidListX.InfA_compat	40
Coq.Lists.SetoidListX.InfA_eqA	40
Coq.Lists.SetoidListX.SortA_InfA_InA	40
Coq.Lists.SetoidListX.In_InfA	40	12.1.0	search with cache (only 1: simple induction l; only 1: constructor; only 1: intuition).	13.9890699387	2591
Coq.Lists.SetoidListX.InA_InfA	40	2.1.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: eauto).	0.0970740318298	11
Coq.Lists.SetoidListX.InfA_alt	40
Coq.Lists.SetoidListX.InfA_app	40	2.4.2.33	search with cache (only 1: induction 1; only 1: eauto; only 1: constructor; only 1: eauto).	6.09253191948	5176
Coq.Lists.SetoidListX.SortA_app	40
Coq.Lists.SetoidListX.SortA_NoDupA	40
Coq.Lists.SetoidListX.eqlistA_length	40
Coq.Lists.SetoidListX.app_eqlistA_compat	40	0.1.3.0.1.1.1.1.9	search with cache (only 1: intro; only 1: induction 1; only 1: simpl in *; only 1: induction 1; only 1: intuition; only 1: auto; only 1: intro; only 1: simpl; only 1: auto).	5.7772898674	1688
Coq.Lists.SetoidListX.eqlistA_app	40	0.0.2.0	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.267115116119	53
Coq.Lists.SetoidListX.eqlistA_rev_app	40
Coq.Lists.SetoidListX.rev_eqlistA_compat	40
Coq.Lists.SetoidListX.eqlistA_rev	40	3.1.4.1.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.785061120987	429
Coq.Lists.SetoidListX.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidListX.filter_sort	40
Coq.Lists.SetoidListX.filter_InA	40
Coq.Lists.SetoidListX.filter_split	40
Coq.Lists.SetoidListX.findA_NoDupA	40
Coq.Lists.StreamsX.unfold_Stream	40	1.4.20	search with cache (only 1: intros H; only 1: destruct H; only 1: easy).	2.95070910454	1050
Coq.Lists.StreamsX.tl_nth_tl	40	5.7.3.1.2	search with cache (only 1: induction n; only 1: intro n; only 1: trivial; only 1: simpl; only 1: auto with arith).	1.47249317169	1480
Coq.Lists.StreamsX.Str_nth_tl_plus	40
Coq.Lists.StreamsX.Str_nth_plus	40
Coq.Lists.StreamsX.EqSt_reflex	40
Coq.Lists.StreamsX.sym_EqSt	40	0.4.0.3.0.1	search with cache (only 1: intro x; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: destruct H; only 1: reflexivity; only 1: auto).	0.344406843185	249
Coq.Lists.StreamsX.trans_EqSt	40
Coq.Lists.StreamsX.eqst_ntheq	40
Coq.Lists.StreamsX.ntheq_eqst	40
Coq.Lists.StreamsX.ForAll_Str_nth_tl	40
Coq.Lists.StreamsX.ForAll_coind	40	9.3.12	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: eauto).	1.38885498047	1340
Coq.Lists.StreamsX.Str_nth_tl_map	40	1.0.0.0.1	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0848798751831	16
Coq.Lists.StreamsX.Str_nth_map	40	0.0.0.1.0.19	search with cache (only 1: induction n; only 1: auto; only 1: unfold Str_nth; only 1: simpl; only 1: intros s; only 1: apply IHn).	4.4690759182	5256
Coq.Lists.StreamsX.ForAll_map	40
Coq.Lists.StreamsX.Exists_map	40
Coq.Lists.StreamsX.Str_nth_tl_zipWith	40	0.1.0.0.7	search with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: trivial with datatypes).	0.314692974091	112
Coq.Lists.StreamsX.Str_nth_zipWith	40	0.1.0.0.4.0.2	search with cache (only 1: intros n; only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.81963300705	434
Coq.Lists.ListX.nil_cons	40	1.1.0	search with cache (only 1: destruct l; only 1: discriminate; only 1: discriminate).	0.0288579463959	5
Coq.Lists.ListX.destruct_list	40	1.2.0.6.2.0	search with cache (only 1: induction l as [| a tail]; only 1: right; only 1: auto with arith; only 1: left; only 1: exists a,tail; only 1: reflexivity).	1.03176593781	948
Coq.Lists.ListX.hd_error_tl_repr	40	1.0.0.0.0.1.1.0.1.0.1.0.2	search with cache (only 1: destruct l as [| x xs]; only 1: intros a r; only 1: firstorder  discriminate; only 1: intros; only 1: simpl; only 1: split; only 1: intros (H1, H2); only 1: inversion H1; only 1: rewrite H2; only 1: reflexivity; only 1: inversion 1; only 1: subst; only 1: firstorder  discriminate).	38.7059600353	19150
Coq.Lists.ListX.hd_error_some_nil	40	0.0.0.0	search with cache (only 1: unfold hd_error, tl; only 1: destruct l; only 1: now discriminate; only 1: now discriminate).	0.0373191833496	4
Coq.Lists.ListX.length_zero_iff_nil	40	0.2.0	search with cache (only 1: split; only 1: now destruct l; only 1: now intros ->).	0.0372359752655	5
Coq.Lists.ListX.hd_error_nil	40	0.1	search with cache (only 1: simpl; only 1: auto with arith).	0.0181229114532	3
Coq.Lists.ListX.hd_error_cons	40	2.2.0	search with cache (only 1: intros; only 1: unfold hd_error, tl; only 1: reflexivity).	0.0238559246063	7
Coq.Lists.ListX.app_cons_not_nil	40	0.0.0.0.0.0.0.1	search with cache (only 1: unfold not; only 1: destruct x as [| a l]; only 1: simpl; only 1: intros; only 1: discriminate H; only 1: simpl; only 1: intros; only 1: discriminate H).	0.0720429420471	9
Coq.Lists.ListX.app_nil_l	40	0	search with cache (only 1: reflexivity).	0.0178861618042	1
Coq.Lists.ListX.app_nil_r	40	3.1.1.0.5	search with cache (only 1: induction l; only 1: repeat split; only 1: simpl; only 1: f_equal; only 1: trivial).	0.370694160461	237
Coq.Lists.ListX.app_nil_end	40	1.1	search with cache (only 1: symmetry; only 1: apply List.app_nil_r).	0.0210189819336	4
Coq.Lists.ListX.app_assoc	40	1.0.0.0.0.2.3	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.583688020706	191
Coq.Lists.ListX.app_assoc_reverse	40	2	search with cache (only 1: auto using List.app_assoc).	0.0179450511932	3
Coq.Lists.ListX.app_comm_cons	40	0	search with cache (only 1: now f_equal).	0.0180721282959	1
Coq.Lists.ListX.app_eq_nil	40	0.1.0.0.0.3.0.1.0.0.0.1	search with cache (only 1: destruct l as [| x l]; only 1: destruct l' as [| y l']; only 1: repeat split; only 1: simpl; only 1: intros H; only 1: discriminate H; only 1: destruct l' as [| y l']; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: intros H; only 1: discriminate H).	3.09086894989	1606
Coq.Lists.ListX.app_eq_unit	40
Coq.Lists.ListX.elt_eq_unit	40	0.0.0	search with cache (only 1: intros l1 l2 a b Heq; only 1: apply List.app_eq_unit in Heq; only 1: now destruct Heq as [[Heq1 Heq2]| [Heq1 Heq2]]; inversion_clear Heq2).	0.0375499725342	3
Coq.Lists.ListX.app_inj_tail	40	0.0.0.0.0.0.1.0.0.6.0.0.0.2.1.0.1.2	search with cache (only 1: induction x as [| x l IHl]; only 1: destruct y as [| a l]; only 1: simpl; only 1: intros a b [=]; only 1: auto; only 1: simpl; only 1: intros a0 b [=H1 H0]; only 1: apply List.app_cons_not_nil in H0 as []; only 1: destruct y as [| a l0]; only 1: simpl; only 1: intros a b [=H1 H0]; only 1: assert ([] = l ++ [a]) by auto; only 1: apply List.app_cons_not_nil in H as []; only 1: intros a0 b [=<- H0]; only 1: destruct (IHl l0 a0 b H0) as (<-, <-); only 1: split; only 1: split; only 1: split).	25.0978560448	14281
Coq.Lists.ListX.app_length	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: auto).	0.0423190593719	6
Coq.Lists.ListX.last_length	40	0.1.1.0.1.0.0	search with cache (only 1: intros; only 1: rewrite List.app_length; only 1: simpl; only 1: elim (length l); only 1: reflexivity; only 1: simpl; only 1: auto).	0.0887789726257	16
Coq.Lists.ListX.app_inv_head	40
Coq.Lists.ListX.app_inv_tail	40
Coq.Lists.ListX.in_eq	40	4.19	search with cache (only 1: simpl; only 1: intuition).	0.500329017639	641
Coq.Lists.ListX.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0195589065552	2
Coq.Lists.ListX.not_in_cons	40	0.0	search with cache (only 1: simpl; only 1: intuition).	0.0337128639221	2
Coq.Lists.ListX.in_nil	40	0.0	search with cache (only 1: simpl; only 1: tauto).	0.0173161029816	2
Coq.Lists.ListX.in_app_or	40	10	search with cache (only 1: auto with datatypes).	0.271810054779	126
Coq.Lists.ListX.in_or_app	40	0.2.0.2.0.1.13	search with cache (only 1: destruct l; only 1: intros l m a; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intro H1; only 1: intuition).	13.7850549221	10837
Coq.Lists.ListX.in_app_iff	40	15.0.0.12.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intro H; only 1: tauto).	33.5145850182	22533
Coq.Lists.ListX.in_split	40	4.0.1.0.4.0.10.0.5.0.2	search with cache (only 1: induction l; only 1: destruct 1; only 1: destruct 1; only 1: subst a; only 1: exists [],l; only 1: auto; only 1: destruct (IHl H) as (l1, (l2, H0)); only 1: exists (a :: l1),l2; only 1: simpl; only 1: apply f_equal; only 1: auto).	18.5209710598	18784
Coq.Lists.ListX.in_elt	40	0.0.0.12	search with cache (only 1: intros; only 1: apply List.in_or_app; only 1: simpl; only 1: intuition).	0.223304033279	123
Coq.Lists.ListX.in_elt_inv	40
Coq.Lists.ListX.in_inv	40	1.0.0.1	search with cache (only 1: simpl; only 1: intro H; only 1: intros y H0 H1; only 1: auto  4).	0.0356178283691	6
Coq.Lists.ListX.in_dec	40	0.0.0.0.0.0.2.3.0	search with cache (only 1: intro H; only 1: induction l; only 1: right; only 1: easy; only 1: destruct (H a0 a); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.14666819572	304
Coq.Lists.ListX.nth_in_or_default	40
Coq.Lists.ListX.nth_S_cons	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.0328779220581	12
Coq.Lists.ListX.nth_default_eq	40
Coq.Lists.ListX.nth_In	40
Coq.Lists.ListX.In_nth	40
Coq.Lists.ListX.nth_overflow	40	2.1.0.1.1.1.1.2.5	search with cache (only 1: induction l as [| x xs Hrec]; only 1: destruct n; only 1: trivial; only 1: easy; only 1: destruct n; only 1: now simpl; only 1: simpl; only 1: intros d ie; only 1: auto with arith).	32.3895068169	12705
Coq.Lists.ListX.nth_indep	40	0.0.0.0.0.3.0.1	search with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: intros; only 1: auto with arith).	0.69614315033	261
Coq.Lists.ListX.app_nth1	40	0.0.0.0.4.0.0	search with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.45565700531	144
Coq.Lists.ListX.app_nth2	40	0.0.0.2.0.0.2.0.0.0.0	search with cache (only 1: induction l; only 1: intros l' d [| n]; only 1: auto; only 1: auto; only 1: intros l' d [| n]; only 1: inversion 1; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto with arith; only 1: auto with arith).	8.59270501137	3124
Coq.Lists.ListX.app_nth2_plus	40	3.0.0.1.0	search with cache (only 1: induction l; only 1: intros l' d [| n]; only 1: auto; only 1: auto; only 1: auto).	0.0630111694336	15
Coq.Lists.ListX.nth_middle	40	2.0.1.5	search with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: auto).	0.324992895126	106
Coq.Lists.ListX.nth_split	40	0.0.0.1.0.2.0.1.0.1.1.0.0.0.0.1.0	search with cache (only 1: revert l; only 1: induction n as [| n IH]; only 1: intros [| a l] H; only 1: easy; only 1: exists []; only 1: exists l; only 1: now simpl; only 1: intros [| a l] H; only 1: easy; only 1: destruct (IH l) as (l1, (l2, (Hl, Hl1))); only 1: auto with arith; only 1: exists (a :: l1); only 1: exists l2; only 1: simpl; only 1: split; only 1: now f_equal; only 1: now f_equal).	35.9001290798	16506
Coq.Lists.ListX.nth_ext	40
Coq.Lists.ListX.nth_error_In	40
Coq.Lists.ListX.In_nth_error	40
Coq.Lists.ListX.nth_error_None	40
Coq.Lists.ListX.nth_error_Some	40
Coq.Lists.ListX.nth_error_split	40
Coq.Lists.ListX.nth_error_app1	40	1.0.0.0.0.2.0.5.0	search with cache (only 1: revert n; only 1: induction l; only 1: simpl in *; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	5.91372203827	1680
Coq.Lists.ListX.nth_error_app2	40	0.0.0.1.2.1.1.0.0.1	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: solve [ inversion H ]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	2.93039107323	1119
Coq.Lists.ListX.nth_error_nth	40
Coq.Lists.ListX.nth_error_nth'	40	1.0.0.0.0.0.1.7	search with cache (only 1: induction l; only 1: simpl in *; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: now auto with arith).	2.16659998894	570
Coq.Lists.ListX.last_last	40	0.0.0.0.0.2.0.6	search with cache (only 1: induction l; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: destruct l; only 1: reflexivity; only 1: reflexivity).	0.449515104294	210
Coq.Lists.ListX.app_removelast_last	40	1.0.0.0.8.6.0.6.4.0	search with cache (only 1: induction l; only 1: destruct 1; only 1: auto with arith; only 1: destruct l; only 1: auto; only 1: intros d _; only 1: pattern (a0 :: l) at 1; only 1: rewrite IHl with d; only 1: auto; only 1: discriminate).	21.4426720142	18653
Coq.Lists.ListX.exists_last	40	0.0.0.0.0.0.0.2.0.6.2.0	search with cache (only 1: induction l; only 1: destruct 1; only 1: auto with arith; only 1: destruct l; only 1: exists [],a; only 1: auto; only 1: destruct IHl as [l' (a', H)]; only 1: pattern (a0 :: l) at 1; only 1: discriminate; only 1: rewrite H; only 1: exists (a :: l'),a'; only 1: auto).	4.90073990822	2759
Coq.Lists.ListX.removelast_app	40	1.0.1.2.0.0.0.0.0.1.0.0.5.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: assert (l ++ l' <> []); only 1: destruct l; only 1: auto; only 1: discriminate; only 1: specialize (IHl l' H); only 1: destruct (l ++ l'); only 1: elim H0; only 1: auto; only 1: f_equal; only 1: auto).	30.2058849335	12306
Coq.Lists.ListX.removelast_last	40	0.0.1.8.10.2	search with cache (only 1: intros; only 1: rewrite List.removelast_app; only 1: simpl; only 1: apply app_nil_r; only 1: intros Heq; only 1: inversion Heq).	5.03282094002	4200
Coq.Lists.ListX.remove_cons	40	0.1.0.1.5	search with cache (only 1: simpl; only 1: intros x l; only 1: destruct eq_dec as [_| NEQ]; only 1: reflexivity; only 1: now exfalso).	0.29384803772	82
Coq.Lists.ListX.remove_app	40	0.0.0.0.0.0.0.0.0.0.7	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: reflexivity; only 1: intros l2; only 1: simpl; only 1: destruct (eq_dec x a); only 1: apply IHl1; only 1: rewrite <- List.app_comm_cons; only 1: f_equal; only 1: apply IHl1).	3.44928693771	869
Coq.Lists.ListX.remove_In	40
Coq.Lists.ListX.notin_remove	40
Coq.Lists.ListX.in_remove	40
Coq.Lists.ListX.in_in_remove	40
Coq.Lists.ListX.remove_remove_comm	40
Coq.Lists.ListX.remove_remove_eq	40	0.1.0.0.2.0.3.0.8.0.2.5	search with cache (only 1: induction l as [| z l]; only 1: tauto; only 1: simpl; only 1: symmetry; only 1: destruct (eq_dec x z); only 1: rewrite IHl; only 1: tauto; only 1: simpl; only 1: destruct (eq_dec x z); only 1: tauto; only 1: rewrite IHl; only 1: tauto).	28.9580030441	17325
Coq.Lists.ListX.remove_length_le	40	3.0.1.2.0.0.0.0.0.2	search with cache (only 1: induction l as [| y l IHl]; only 1: easy; only 1: simpl; only 1: intros x; only 1: destruct (eq_dec x y); only 1: rewrite IHl; only 1: constructor; only 1: reflexivity; only 1: simpl; only 1: apply (proj1 (Nat.succ_le_mono _ _) (IHl x))).	6.26032400131	2343
Coq.Lists.ListX.remove_length_lt	40
Coq.Lists.ListX.count_occ_In	40
Coq.Lists.ListX.count_occ_not_In	40	0.0.10	search with cache (only 1: rewrite List.count_occ_In; only 1: unfold gt; only 1: now rewrite Nat.nlt_ge, Nat.le_0_r).	1.38067007065	273
Coq.Lists.ListX.count_occ_nil	40	3	search with cache (only 1: reflexivity).	0.0189259052277	4
Coq.Lists.ListX.count_occ_inv_nil	40	5.1.0.0.3.0.5.10.2.2	search with cache (only 1: split; only 1: induction l as [| x l]; only 1: trivial; only 1: intros H; only 1: specialize (H x); only 1: simpl in H; only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate; only 1: now elim NEQ; only 1: now intros ->).	8.65336298943	9171
Coq.Lists.ListX.count_occ_cons_eq	40	1.2.1	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0724589824677	12
Coq.Lists.ListX.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0551710128784	4
Coq.Lists.ListX.rev_app_distr	40	1.2.0.0.0.1.1.16	search with cache (only 1: induction x as [| a l IHl]; only 1: symmetry; only 1: apply app_nil_r; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: rewrite List.app_assoc; only 1: trivial).	7.54164004326	6399
Coq.Lists.ListX.rev_unit	40	14.6	search with cache (only 1: intros; only 1: apply (List.rev_app_distr [a])).	1.5499329567	1154
Coq.Lists.ListX.rev_involutive	40	7.10.1.7.0.8.0	search with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: rewrite (List.rev_unit a); only 1: now rewrite H).	19.5803079605	24805
Coq.Lists.ListX.rev_eq_app	40	1.0.30	search with cache (only 1: intros l l1 l2 Heq; only 1: rewrite <- (List.rev_involutive (A:=l)), Heq; only 1: apply List.rev_app_distr).	2.15723800659	2114
Coq.Lists.ListX.in_rev	40
Coq.Lists.ListX.rev_length	40	0.1.1.0.0.2.7.10	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite List.app_length; only 1: rewrite IHl; only 1: simpl; only 1: rewrite <- plus_n_Sm, plus_n_O; only 1: reflexivity).	6.7764840126	5176
Coq.Lists.ListX.rev_nth	40
Coq.Lists.ListX.rev_append_rev	40
Coq.Lists.ListX.rev_alt	40
Coq.Lists.ListX.rev_list_ind	40	2.4.2	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.260970830917	163
Coq.Lists.ListX.rev_ind	40
Coq.Lists.ListX.concat_nil	40	0	search with cache (only 1: reflexivity).	0.0180339813232	1
Coq.Lists.ListX.concat_cons	40	0	search with cache (only 1: reflexivity).	0.0157010555267	1
Coq.Lists.ListX.concat_app	40	0.0.1.3.0.2	search with cache (only 1: induction l1 as [| x l1 IH]; only 1: reflexivity; only 1: intros l2; only 1: simpl; only 1: rewrite IH; only 1: apply List.app_assoc).	0.505627155304	270
Coq.Lists.ListX.in_concat	40
Coq.Lists.ListX.list_eq_dec	40	20	search with cache (only 1: decide equality).	4.72047400475	1239
Coq.Lists.ListX.map_cons	40	0	search with cache (only 1: reflexivity).	0.0185768604279	1
Coq.Lists.ListX.in_map	40	3.0.1.3.1.0.15.5	search with cache (only 1: intros; only 1: induction l as [| a l IH]; only 1: simpl; only 1: inversion_clear H; only 1: firstorder; only 1: subst; only 1: left; only 1: auto with arith).	3.82919692993	2419
Coq.Lists.ListX.in_map_iff	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0825669765472	3
Coq.Lists.ListX.map_length	40	0.0.0.2.0	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0419139862061	7
Coq.Lists.ListX.map_nth	40
Coq.Lists.ListX.map_nth_error	40	1.1.0.7.0.0.0.0.0.2.0.15	search with cache (only 1: induction n; only 1: simpl; only 1: intros [| ] ? Heq; only 1: inversion Heq; only 1: simpl in *; only 1: inversion Heq; only 1: auto; only 1: simpl; only 1: induction l as [| a l IH]; only 1: now auto with arith; only 1: simpl; only 1: auto).	39.6512241364	17131
Coq.Lists.ListX.map_app	40	1.0.1.0.0.0.16	search with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.65209197998	569
Coq.Lists.ListX.map_last	40	1.0.1.0.1.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: reflexivity).	0.631897926331	183
Coq.Lists.ListX.map_rev	40
Coq.Lists.ListX.map_eq_nil	40	3.1.1.5	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: reflexivity || discriminate).	0.725306034088	356
Coq.Lists.ListX.map_eq_cons	40	0.0.0.0.0.0	search with cache (only 1: intros l l' b Heq; only 1: destruct l; only 1: inversion_clear Heq; only 1: inversion_clear Heq; only 1: exists a,l; only 1: repeat split).	0.0635590553284	6
Coq.Lists.ListX.map_eq_app	40
Coq.Lists.ListX.count_occ_map	40
Coq.Lists.ListX.flat_map_app	40
Coq.Lists.ListX.in_flat_map	40
Coq.Lists.ListX.flat_map_concat_map	40
Coq.Lists.ListX.concat_map	40
Coq.Lists.ListX.remove_concat	40
Coq.Lists.ListX.map_id	40	11.1.1.10	search with cache (only 1: induction l; only 1: repeat split; only 1: simpl; only 1: now f_equal).	3.0161690712	2916
Coq.Lists.ListX.map_map	40	4.8.1.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: repeat split).	2.69271612167	2578
Coq.Lists.ListX.map_ext_in	40	0.1.3.0.2.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto; only 1: auto).	4.54043292999	1359
Coq.Lists.ListX.ext_in_map	40
Coq.Lists.ListX.map_ext_in_iff	40
Coq.Lists.ListX.map_ext	40	3.0.1.1.0.1.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.781516075134	404
Coq.Lists.ListX.flat_map_ext	40	11.0.0.0.2.0.7	search with cache (only 1: intros Hnin; only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: congruence).	9.57826185226	8622
Coq.Lists.ListX.nth_nth_nth_map	40
Coq.Lists.ListX.fold_left_app	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	0.0415689945221	7
Coq.Lists.ListX.fold_left_length	40
Coq.Lists.ListX.fold_right_app	40	1.0.0.0.1.4	search with cache (only 1: induction l; only 1: repeat split; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	0.33122086525	139
Coq.Lists.ListX.fold_left_rev_right	40	2.0.1.0.6.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: intro x; only 1: simpl; only 1: rewrite List.fold_right_app; only 1: simpl; only 1: auto).	6.08838701248	3741
Coq.Lists.ListX.fold_symmetric	40
Coq.Lists.ListX.existsb_exists	40
Coq.Lists.ListX.existsb_nth	40
Coq.Lists.ListX.existsb_app	40	0.0.2.0.0.0.2.0.7	search with cache (only 1: induction l1; only 1: intros l2; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	1.38818979263	550
Coq.Lists.ListX.forallb_forall	40
Coq.Lists.ListX.forallb_app	40
Coq.Lists.ListX.filter_In	40
Coq.Lists.ListX.filter_app	40
Coq.Lists.ListX.concat_filter_map	40
Coq.Lists.ListX.find_some	40	1.2.0.0.0.0.4	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intuition congruence).	1.61351108551	419
Coq.Lists.ListX.find_none	40
Coq.Lists.ListX.partition_cons1	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0228199958801	2
Coq.Lists.ListX.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0235059261322	2
Coq.Lists.ListX.partition_length	40	2.0.0.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l1 l2; only 1: induction l as [| a l' Hrec]; only 1: intros l1 l2; only 1: now intros [=<- <-]; only 1: intros l1 l2; only 1: simpl; only 1: destruct (f a), (List.partition (A:=l')) as (left, right); only 1: intros [=<- <-]; only 1: simpl; only 1: auto; only 1: intros [=<- <-]; only 1: simpl; only 1: rewrite (Hrec left right); only 1: auto; only 1: auto).	11.9998369217	4652
Coq.Lists.ListX.partition_inv_nil	40	1.0.0.0.2.2.0.0	search with cache (only 1: split; only 1: destruct l as [| a l']; only 1: intuition; only 1: simpl; only 1: destruct (f a), (List.partition (A:=l')); only 1: now intros [=-> ->]; only 1: now intros [=-> ->]; only 1: now intros ->).	2.72617197037	506
Coq.Lists.ListX.elements_in_partition	40
Coq.Lists.ListX.filter_map	40
Coq.Lists.ListX.filter_ext_in	40
Coq.Lists.ListX.ext_in_filter	40
Coq.Lists.ListX.filter_ext_in_iff	40	0.1.1.1.4	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	0.408010005951	131
Coq.Lists.ListX.filter_ext	40	3.2.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.0639588832855	17
Coq.Lists.ListX.remove_alt	40
Coq.Lists.ListX.count_occ_alt	40
Coq.Lists.ListX.in_split_l	40
Coq.Lists.ListX.in_split_r	40
Coq.Lists.ListX.split_nth	40
Coq.Lists.ListX.split_length_l	40	0.0.0.1.0.7.0	search with cache (only 1: induction l; only 1: easy; only 1: simpl; only 1: destruct a; only 1: destruct (List.split (A:=l)); only 1: simpl; only 1: auto).	0.601016044617	256
Coq.Lists.ListX.split_length_r	40	0.0.0.1.0.4.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (List.split (A:=l)); only 1: simpl; only 1: auto).	0.53540802002	150
Coq.Lists.ListX.split_combine	40	1.1.0.0.2.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (List.split (A:=l)); only 1: simpl in *; only 1: f_equal; only 1: auto).	5.00452613831	1253
Coq.Lists.ListX.combine_split	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: induction l, l'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: now intros [=->%IHl]).	0.0846431255341	10
Coq.Lists.ListX.in_combine_l	40
Coq.Lists.ListX.in_combine_r	40
Coq.Lists.ListX.combine_length	40	0.0.0.0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.189642906189	28
Coq.Lists.ListX.combine_nth	40
Coq.Lists.ListX.in_prod_aux	40	2.2.1.1.4.4.1.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct H; only 1: destruct H; only 1: auto; only 1: auto).	15.9369289875	7672
Coq.Lists.ListX.in_prod	40
Coq.Lists.ListX.in_prod_iff	40
Coq.Lists.ListX.prod_length	40	0.1.0.0.0.0.1.1	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite List.app_length; only 1: rewrite List.map_length; only 1: auto).	0.384764909744	89
Coq.Lists.ListX.lel_refl	40	20	search with cache (only 1: left).	0.337838172913	287
Coq.Lists.ListX.lel_trans	40	0.0.3.1.0	search with cache (only 1: unfold lel; only 1: intros; only 1: apply Nat.le_trans with (length m); only 1: auto with arith; only 1: auto with arith).	0.030757188797	9
Coq.Lists.ListX.lel_cons_cons	40	21	search with cache (only 1: apply le_n_S).	0.129285097122	253
Coq.Lists.ListX.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0225629806519	3
Coq.Lists.ListX.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.024218082428	3
Coq.Lists.ListX.lel_nil	40
Coq.Lists.ListX.incl_nil_l	40	0	search with cache (only 1: easy).	0.0200779438019	1
Coq.Lists.ListX.incl_l_nil	40	3.8.0.5.6.1	search with cache (only 1: induction l as [| x l]; only 1: auto with arith; only 1: intros H; only 1: specialize (H x); only 1: simpl in H; only 1: intuition).	8.26343417168	7732
Coq.Lists.ListX.incl_refl	40	1.0	search with cache (only 1: intros l a Hin; only 1: auto using in_app_or, in_or_app).	0.059739112854	26
Coq.Lists.ListX.incl_tl	40	0.1.4	search with cache (only 1: intros l1 l2 a b Heq; only 1: right; only 1: auto).	0.0518169403076	24
Coq.Lists.ListX.incl_tran	40	0	search with cache (only 1: auto with datatypes).	0.0150291919708	1
Coq.Lists.ListX.incl_appl	40	4.0	search with cache (only 1: intros l a Hin; only 1: auto using List.in_app_or, List.in_or_app).	0.0230679512024	6
Coq.Lists.ListX.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0165500640869	1
Coq.Lists.ListX.incl_cons	40	8.6	search with cache (only 1: intros Hincl; only 1: firstorder  (subst; auto)).	1.92150402069	554
Coq.Lists.ListX.incl_cons_inv	40	4.2.0	search with cache (only 1: unfold incl; only 1: intros; only 1: firstorder  (subst; auto)).	0.118889093399	24
Coq.Lists.ListX.incl_app	40
Coq.Lists.ListX.incl_app_app	40	0	search with cache (only 1: auto with datatypes).	0.0832350254059	1
Coq.Lists.ListX.incl_app_inv	40	8.0	search with cache (only 1: intros; only 1: intuition).	0.029776096344	14
Coq.Lists.ListX.incl_filter	40
Coq.Lists.ListX.remove_incl	40
Coq.Lists.ListX.incl_map	40
Coq.Lists.ListX.firstn_nil	40	4.2.40	search with cache (only 1: destruct n; only 1: auto; only 1: auto with arith).	5.77105998993	1357
Coq.Lists.ListX.firstn_cons	40	0	search with cache (only 1: now simpl).	0.0159158706665	1
Coq.Lists.ListX.firstn_all	40	1.11.1.16	search with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: now f_equal).	7.50143098831	5129
Coq.Lists.ListX.firstn_all2	40
Coq.Lists.ListX.firstn_O	40	1	search with cache (only 1: now simpl).	0.0153818130493	2
Coq.Lists.ListX.firstn_le_length	40	5.0.5.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now reflexivity; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: apply Peano.le_n_S, iHk).	5.54980897903	4312
Coq.Lists.ListX.firstn_length_le	40
Coq.Lists.ListX.firstn_app	40	0.0.0.3.0.0.0.0.0	search with cache (only 1: induction n; only 1: auto; only 1: intros [| ]; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: f_equal; only 1: auto).	1.81822919846	633
Coq.Lists.ListX.firstn_app_2	40
Coq.Lists.ListX.firstn_firstn	40
Coq.Lists.ListX.firstn_skipn_comm	40
Coq.Lists.ListX.skipn_firstn_comm	40
Coq.Lists.ListX.skipn_O	40	3.1	search with cache (only 1: intro; only 1: split).	0.03746509552	15
Coq.Lists.ListX.skipn_nil	40	6	search with cache (only 1: now intros []).	0.0205209255219	7
Coq.Lists.ListX.skipn_cons	40	2	search with cache (only 1: now simpl).	0.0191071033478	3
Coq.Lists.ListX.skipn_all	40	11	search with cache (only 1: now induction l).	0.137203931808	34
Coq.Lists.ListX.skipn_all2	40	1.0.1	search with cache (only 1: intros l L%Nat.sub_0_le; only 1: rewrite <- (List.firstn_all (A:=l))  at 1; only 1: now rewrite List.skipn_firstn_comm, L).	0.726186990738	31
Coq.Lists.ListX.firstn_skipn	40	4.0.1.1.9.5.6	search with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: f_equal; only 1: apply iHk).	7.31402611732	6072
Coq.Lists.ListX.firstn_length	40	0.0.0.0.0.2.0	search with cache (only 1: induction n; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.323660850525	99
Coq.Lists.ListX.skipn_length	40	2.0.1.0.2.0.0.2	search with cache (only 1: induction n; only 1: intros l; only 1: rewrite Nat.sub_0_r; only 1: auto; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	3.09232497215	1065
Coq.Lists.ListX.skipn_app	40	0.0.2.3.0.1.0	search with cache (only 1: induction n; only 1: intros l1 l2; only 1: now simpl; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: auto).	0.93516087532	427
Coq.Lists.ListX.firstn_skipn_rev	40
Coq.Lists.ListX.firstn_rev	40
Coq.Lists.ListX.skipn_rev	40
Coq.Lists.ListX.removelast_firstn	40
Coq.Lists.ListX.removelast_firstn_len	40	2.2.4.1.5.0.1.4.3	search with cache (only 1: intros; only 1: induction l; only 1: now reflexivity; only 1: simpl; only 1: destruct l; only 1: auto with arith; only 1: rewrite IHl; only 1: simpl; only 1: reflexivity).	9.75014877319	9881
Coq.Lists.ListX.firstn_removelast	40
Coq.Lists.ListX.combine_nil	40	4.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.280796051025	70
Coq.Lists.ListX.combine_firstn_l	40	0.0.0.3.0.0.0.1.0.0.2	search with cache (only 1: induction l; only 1: intros l; only 1: apply length_zero_iff_nil; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: apply length_zero_iff_nil; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	8.51021695137	2894
Coq.Lists.ListX.combine_firstn_r	40	0.1.0.0.0.0.1.0.1.3.3.0	search with cache (only 1: induction l as [| x l IHl]; only 1: intros l; only 1: induction l as [| x l IHl]; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	7.63403892517	3782
Coq.Lists.ListX.combine_firstn	40
Coq.Lists.ListX.Add_app	40	0.0.10.0.1	search with cache (only 1: induction l1; only 1: simpl; only 1: left; only 1: simpl; only 1: now constructor).	0.186325073242	212
Coq.Lists.ListX.Add_split	40
Coq.Lists.ListX.Add_in	40
Coq.Lists.ListX.Add_length	40	0.0.1.0.1	search with cache (only 1: induction 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.0675830841064	7
Coq.Lists.ListX.Add_inv	40
Coq.Lists.ListX.incl_Add_inv	40
Coq.Lists.ListX.NoDup_Add	40
Coq.Lists.ListX.NoDup_remove	40	4.12	search with cache (only 1: apply List.NoDup_Add; only 1: apply List.Add_app).	0.953180789948	683
Coq.Lists.ListX.NoDup_remove_1	40	3.1	search with cache (only 1: intros; only 1: now apply List.NoDup_remove with a).	0.0264990329742	6
Coq.Lists.ListX.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.022894859314	2
Coq.Lists.ListX.NoDup_cons_iff	40	1.0.2.1	search with cache (only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: now constructor).	0.0526580810547	8
Coq.Lists.ListX.NoDup_rev	40
Coq.Lists.ListX.NoDup_filter	40
Coq.Lists.ListX.nodup_fixed_point	40
Coq.Lists.ListX.nodup_In	40
Coq.Lists.ListX.nodup_incl	40
Coq.Lists.ListX.NoDup_nodup	40
Coq.Lists.ListX.nodup_inv	40	3.2.8.4.2.10.4	search with cache (only 1: intros H; only 1: assert (H' : List.NoDup (A:=a :: l)); only 1: rewrite <- H; only 1: apply List.NoDup_nodup; only 1: apply NoDup_cons_iff; only 1: rewrite <- H; only 1: apply List.NoDup_nodup).	5.84071207047	5746
Coq.Lists.ListX.NoDup_count_occ	40
Coq.Lists.ListX.NoDup_count_occ'	40
Coq.Lists.ListX.NoDup_nth_error	40
Coq.Lists.ListX.NoDup_nth	40
Coq.Lists.ListX.NoDup_incl_length	40
Coq.Lists.ListX.NoDup_length_incl	40
Coq.Lists.ListX.NoDup_incl_NoDup	40
Coq.Lists.ListX.NoDup_map_inv	40
Coq.Lists.ListX.cons_seq	40	0	search with cache (only 1: reflexivity).	0.0197608470917	1
Coq.Lists.ListX.seq_length	40	0.0.3.0	search with cache (only 1: induction len; only 1: now simpl; only 1: simpl; only 1: auto).	0.0667858123779	22
Coq.Lists.ListX.seq_nth	40
Coq.Lists.ListX.seq_shift	40	0.1.1.1.0.5	search with cache (only 1: induction len; only 1: auto with arith; only 1: simpl; only 1: intros; only 1: rewrite IHlen; only 1: auto with arith).	0.653302907944	203
Coq.Lists.ListX.in_seq	40
Coq.Lists.ListX.seq_NoDup	40
Coq.Lists.ListX.seq_app	40	0.1.0.1.1.3	search with cache (only 1: induction len1 as [| len1' IHlen]; only 1: intros; only 1: now rewrite Nat.add_0_r; only 1: intros; only 1: simpl in *; only 1: now rewrite Nat.add_succ_r, IHlen).	0.458436965942	127
Coq.Lists.ListX.seq_S	40	0.2.3.4.1.4	search with cache (only 1: induction len; only 1: intros; only 1: now rewrite Nat.add_0_r; only 1: intros; only 1: simpl in *; only 1: now rewrite Nat.add_succ_r, IHlen).	10.1044800282	5541
Coq.Lists.ListX.Exists_exists	40	0.0.0.6.7.1.15.0.1	search with cache (only 1: induction l; only 1: split; only 1: easy; only 1: firstorder; only 1: split; only 1: inversion_clear 1; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	22.2817409039	22512
Coq.Lists.ListX.Exists_nth	40
Coq.Lists.ListX.Exists_nil	40	5.5.0	search with cache (only 1: split; only 1: inversion 1; only 1: inversion 1).	0.088033914566	123
Coq.Lists.ListX.Exists_cons	40	0.0.1.0.0.1.1	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.0392339229584	10
Coq.Lists.ListX.Exists_app	40
Coq.Lists.ListX.Exists_rev	40
Coq.Lists.ListX.Exists_dec	40
Coq.Lists.ListX.Exists_fold_right	40
Coq.Lists.ListX.incl_Exists	40
Coq.Lists.ListX.Forall_forall	40	1.3.0.1.0.0.1.0.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	10.9826350212	3469
Coq.Lists.ListX.Forall_nth	40
Coq.Lists.ListX.Forall_inv	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: subst; only 1: inversion H; only 1: subst; only 1: inversion H; only 1: subst; only 1: intuition).	0.0914070606232	13
Coq.Lists.ListX.Forall_inv_tail	40	0.1.0	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.0409500598907	4
Coq.Lists.ListX.Forall_app	40
Coq.Lists.ListX.Forall_elt	40	1.2.1.0	search with cache (only 1: intros HF; only 1: apply List.Forall_app in HF; only 1: destruct HF as [HF1 HF2]; only 1: now inversion HF2).	0.226536989212	14
Coq.Lists.ListX.Forall_rev	40
Coq.Lists.ListX.Forall_rect	40	0.0.1.1.0.0.0	search with cache (only 1: intros Q H H'; only 1: induction l; only 1: intro; only 1: eassumption; only 1: intro; only 1: eapply H', List.Forall_inv; only 1: eassumption).	0.0568470954895	9
Coq.Lists.ListX.Forall_dec	40
Coq.Lists.ListX.Forall_fold_right	40	0.1.0.1.2.0.2.0	search with cache (only 1: induction l; only 1: now intuition; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	2.99887418747	1451
Coq.Lists.ListX.incl_Forall	40
Coq.Lists.ListX.map_ext_Forall	40	7.14.1	search with cache (only 1: intros; only 1: apply List.map_ext_in, List.Forall_forall; only 1: auto).	7.74679780006	4870
Coq.Lists.ListX.Exists_impl	40
Coq.Lists.ListX.Exists_or	40
Coq.Lists.ListX.Exists_or_inv	40
Coq.Lists.ListX.Forall_impl	40
Coq.Lists.ListX.Forall_and	40
Coq.Lists.ListX.Forall_and_inv	40
Coq.Lists.ListX.Forall_Exists_neg	40	2.2.0.2	search with cache (only 1: rewrite List.Forall_forall, List.Exists_exists; only 1: split; only 1: firstorder; only 1: firstorder).	0.0378220081329	11
Coq.Lists.ListX.Exists_Forall_neg	40
Coq.Lists.ListX.neg_Forall_Exists_neg	40
Coq.Lists.ListX.Forall_Exists_dec	40
Coq.Lists.ListX.incl_Forall_in_iff	40
Coq.Lists.ListX.exists_Forall	40
Coq.Lists.ListX.Forall_image	40
Coq.Lists.ListX.concat_nil_Forall	40
Coq.Lists.ListX.in_flat_map_Exists	40
Coq.Lists.ListX.notin_flat_map_Forall	40
Coq.Lists.ListX.Forall2_refl	40	6	search with cache (only 1: apply List.Forall2_nil).	0.0133500099182	7
Coq.Lists.ListX.Forall2_app_inv_l	40
Coq.Lists.ListX.Forall2_app_inv_r	40
Coq.Lists.ListX.Forall2_app	40	1.0.0.5.0.0.0.2.0.0	search with cache (only 1: intros; only 1: induction l1 in l1', H, H0 |- *; only 1: inversion H; only 1: subst; only 1: auto; only 1: simpl; only 1: inversion H; only 1: simpl; only 1: subst; only 1: auto).	5.00115299225	3440
Coq.Lists.ListX.ForallOrdPairs_In	40
Coq.Lists.ListX.ForallPairs_ForallOrdPairs	40
Coq.Lists.ListX.ForallOrdPairs_ForallPairs	40
Coq.Lists.ListX.repeat_length	40	0.0.1.2.0.0	search with cache (only 1: induction n as [| k Hrec]; only 1: simpl; only 1: now simpl; only 1: simpl; only 1: rewrite ?Hrec; only 1: reflexivity).	0.0482769012451	9
Coq.Lists.ListX.repeat_spec	40	14.0.2.0.0	search with cache (only 1: induction n as [| k Hrec]; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intuition).	2.00881004333	1457
Coq.Lists.ListX.repeat_cons	40	1.0.0.8.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: f_equal; only 1: apply IHn).	0.271284818649	191
Coq.Lists.ListX.repeat_to_concat	40	1.2.0.7.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: f_equal; only 1: apply IHn).	0.69911980629	302
Coq.Lists.ListX.list_sum_app	40	0.0.0.0.0.1.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: reflexivity; only 1: intros l2; only 1: simpl; only 1: rewrite IHl1; only 1: apply Nat.add_assoc).	0.0622119903564	9
Coq.Lists.ListX.list_max_app	40	0.1.0.0.1	search with cache (only 1: induction l1; only 1: intros l2; only 1: reflexivity; only 1: intros l2; only 1: now simpl; rewrite IHl1, Nat.max_assoc).	0.0431661605835	7
Coq.Lists.ListX.list_max_le	40
Coq.Lists.ListX.list_max_lt	40
Coq.Lists.StreamMemoX.memo_get_correct	40
Coq.Lists.StreamMemoX.imemo_get_correct	40
Coq.Lists.StreamMemoX.dmemo_get_correct	40
Coq.Lists.StreamMemoX.dimemo_get_correct	40
Coq.Lists.ListDecX.In_decidable	40	4.0.0.0.1.10	search with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: unfold decidable, not; only 1: tauto; only 1: simpl; only 1: intuition).	0.661917924881	375
Coq.Lists.ListDecX.incl_decidable	40
Coq.Lists.ListDecX.NoDup_decidable	40
Coq.Lists.ListDecX.incl_dec	40
Coq.Lists.ListDecX.NoDup_dec	40
Coq.Lists.ListDecX.uniquify_map	40
Coq.Lists.ListDecX.uniquify	40
Coq.NArith.BinNatX.N.eq_dec	40	0.0	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec).	0.0262851715088	2
Coq.NArith.BinNatX.N.discr	40	2.2.0.2.0	search with cache (only 1: destruct n; only 1: auto; only 1: left; only 1: exists p; only 1: easy).	0.137781143188	80
Coq.NArith.BinNatX.N.peano_rect_base	40	2	search with cache (only 1: trivial).	0.0136449337006	3
Coq.NArith.BinNatX.N.peano_rect_succ	40	0.1.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0237510204315	7
Coq.NArith.BinNatX.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0113251209259	1
Coq.NArith.BinNatX.N.peano_rec_succ	40	0.1.0.1.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.028048992157	8
Coq.NArith.BinNatX.N.bi_induction	40	0.0.5.1.0	search with cache (only 1: intros A A_wd A0 AS; only 1: apply BinNat.N.peano_rect; only 1: assumption; only 1: intros; only 1: now apply -> AS).	0.391201972961	134
Coq.NArith.BinNatX.N.recursion_wd	40	14.5	search with cache (only 1: intros a a' Ea f f' Ef x x' Ex; only 1: now f_equiv).	5.27912998199	1113
Coq.NArith.BinNatX.N.recursion_0	40	0.4	search with cache (only 1: simpl; only 1: reflexivity).	0.0172889232635	6
Coq.NArith.BinNatX.N.recursion_succ	40	0.1.0.3.1.4	search with cache (only 1: intros a_wd f_wd n; only 1: induction n using BinNat.N.peano_ind; only 1: now apply f_wd; only 1: unfold recursion in *; only 1: rewrite !BinNat.N.peano_rect_succ in *; only 1: now apply f_wd).	0.848670005798	452
Coq.NArith.BinNatX.N.one_succ	40	0	search with cache (only 1: reflexivity).	0.0125651359558	1
Coq.NArith.BinNatX.N.two_succ	40	0	search with cache (only 1: reflexivity).	0.0147421360016	1
Coq.NArith.BinNatX.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.0100409984589	1
Coq.NArith.BinNatX.N.pos_pred_spec	40	0	search with cache (only 1: now destruct p).	0.0126001834869	1
Coq.NArith.BinNatX.N.succ_pos_spec	40	0	search with cache (only 1: now destruct n).	0.0118069648743	1
Coq.NArith.BinNatX.N.pos_pred_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: apply Pos.pred_N_succ).	0.0321519374847	3
Coq.NArith.BinNatX.N.succ_pos_pred	40	2.2.0.0.2.0	search with cache (only 1: destruct p; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.succ_pred_double; only 1: reflexivity).	1.37729811668	449
Coq.NArith.BinNatX.N.pred_succ	40	1.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply Pos.pred_N_succ).	0.13231420517	29
Coq.NArith.BinNatX.N.pred_sub	40	0	search with cache (only 1: now BinNat.N.nzsimpl').	0.0434830188751	1
Coq.NArith.BinNatX.N.succ_0_discr	40	14	search with cache (only 1: now destruct n).	0.284860134125	252
Coq.NArith.BinNatX.N.add_0_l	40	0.0	search with cache (only 1: BinNat.N.nzsimpl; only 1: tauto).	0.0455329418182	2
Coq.NArith.BinNatX.N.add_succ_l	40	7.0	search with cache (only 1: BinNat.N.nzsimpl; only 1: now f_equiv).	0.488915920258	68
Coq.NArith.BinNatX.N.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.0125179290771	1
Coq.NArith.BinNatX.N.sub_succ_r	40	0.0.1.0.0.1.2	search with cache (only 1: destruct n as [| p], m as [| q]; only 1: trivial; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: rewrite Pos.sub_mask_succ_r, Pos.sub_mask_carry_spec; only 1: now destruct (Pos.sub_mask p q) as [| [r| r| ]| ]).	0.164622068405	45
Coq.NArith.BinNatX.N.mul_0_l	40	3.1	search with cache (only 1: BinNat.N.nzsimpl; only 1: tauto).	0.115833997726	6
Coq.NArith.BinNatX.N.mul_succ_l	40	0.0.1.1.0.1.0	search with cache (only 1: BinNat.N.nzsimpl; only 1: destruct n, m; only 1: now BinNat.N.nzsimpl; only 1: now BinNat.N.nzsimpl'; only 1: trivial; only 1: simpl; only 1: f_equal).	0.281330108643	23
Coq.NArith.BinNatX.N.eqb_eq	40	2.1.0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: split; only 1: intro H; only 1: now subst; only 1: intro H; only 1: now destr_eq H).	29.8866679668	8769
Coq.NArith.BinNatX.N.ltb_lt	40
Coq.NArith.BinNatX.N.leb_le	40
Coq.NArith.BinNatX.N.compare_eq_iff	40	0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.1.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: rewrite ?Pos.compare_eq_iff; only 1: split; only 1: congruence; only 1: congruence).	30.77780509	15928
Coq.NArith.BinNatX.N.compare_lt_iff	40	0	search with cache (only 1: reflexivity).	0.0125029087067	1
Coq.NArith.BinNatX.N.compare_le_iff	40	1	search with cache (only 1: reflexivity).	4.04857993126	170
Coq.NArith.BinNatX.N.compare_antisym	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: now subst; only 1: simpl; only 1: now subst; only 1: simpl; only 1: now subst; only 1: simpl; only 1: apply Pos.compare_antisym).	0.0534589290619	9
Coq.NArith.BinNatX.N.min_l	40	27	search with cache (only 1: BinNat.N.solve_min).	0.864830970764	967
Coq.NArith.BinNatX.N.min_r	40	0.0.0.0.1.0	search with cache (only 1: unfold min, le; only 1: rewrite BinNat.N.compare_antisym; only 1: case BinNat.N.compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.880792856216	74
Coq.NArith.BinNatX.N.max_l	40	9	search with cache (only 1: BinNat.N.solve_max).	0.975247144699	117
Coq.NArith.BinNatX.N.max_r	40	3.0.1.0.0	search with cache (only 1: unfold max, le; only 1: case BinNat.N.compare; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0356462001801	9
Coq.NArith.BinNatX.N.lt_succ_r	40
Coq.NArith.BinNatX.N.double_spec	40	0	search with cache (only 1: reflexivity).	0.011234998703	1
Coq.NArith.BinNatX.N.succ_double_spec	40	0	search with cache (only 1: now destruct n).	0.0147998332977	1
Coq.NArith.BinNatX.N.double_add	40	0	search with cache (only 1: now destruct n, m).	0.0155000686646	1
Coq.NArith.BinNatX.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0134282112122	1
Coq.NArith.BinNatX.N.double_mul	40	0	search with cache (only 1: now destruct n, m).	0.0134119987488	1
Coq.NArith.BinNatX.N.succ_double_mul	40	0.0.0.0.7.0	search with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: now rewrite Pos.add_comm).	1.13704800606	286
Coq.NArith.BinNatX.N.div2_double	40	0	search with cache (only 1: now destruct n).	0.0125639438629	1
Coq.NArith.BinNatX.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.013906955719	1
Coq.NArith.BinNatX.N.double_inj	40	0.1.0	search with cache (only 1: intro H; only 1: rewrite <- (BinNat.N.div2_double n), H; only 1: apply BinNat.N.div2_double).	0.023509979248	4
Coq.NArith.BinNatX.N.succ_double_inj	40	0.1.0	search with cache (only 1: intro H; only 1: rewrite <- (BinNat.N.div2_succ_double n), H; only 1: apply BinNat.N.div2_succ_double).	0.0285348892212	4
Coq.NArith.BinNatX.N.succ_double_lt	40
Coq.NArith.BinNatX.N.double_lt_mono	40	3.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.0380651950836	10
Coq.NArith.BinNatX.N.double_le_mono	40	0.0.0.7.2	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: now nzsimpl; only 1: easy; only 1: easy; only 1: easy).	0.691773891449	405
Coq.NArith.BinNatX.N.succ_double_lt_mono	40	4.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: easy).	0.0356929302216	14
Coq.NArith.BinNatX.N.succ_double_le_mono	40
Coq.NArith.BinNatX.N.compare_0_r	40	0	search with cache (only 1: now destruct n).	0.0211119651794	1
Coq.NArith.BinNatX.N.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.0140070915222	1
Coq.NArith.BinNatX.N.pow_succ_r	40	2.1.8	search with cache (only 1: nzsimpl; only 1: now destruct p; only 1: apply BinNat.N.le_0_l).	3.16601610184	749
Coq.NArith.BinNatX.N.pow_neg_r	40	0	search with cache (only 1: now destruct p).	0.0200271606445	1
Coq.NArith.BinNatX.N.square_spec	40	0.0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	0.0312418937683	6
Coq.NArith.BinNatX.N.size_log2	40	0.0.0.1.0	search with cache (only 1: destruct n as [| [n| n| ]]; only 1: now destruct 1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0500128269196	6
Coq.NArith.BinNatX.N.size_gt	40
Coq.NArith.BinNatX.N.size_le	40	0.1.0.0.0	search with cache (only 1: destruct n; only 1: discriminate; only 1: simpl; only 1: change (2 ^ Pos.size p <= Pos.succ p~0)%positive; only 1: apply Pos.lt_le_incl, Pos.lt_succ_r, Pos.size_le).	0.0253071784973	6
Coq.NArith.BinNatX.N.log2_spec	40
Coq.NArith.BinNatX.N.log2_nonpos	40	0.13.2.0.0.0.0.0.5.0	search with cache (only 1: intro H; only 1: le_elim H; only 1: destruct n as [| [p| p| ]]; only 1: reflexivity; only 1: discriminate || intros _; only 1: discriminate || intros _; only 1: rewrite <- (BinNat.N.pow_0_r 2); only 1: discriminate || intros _; only 1: rewrite H; only 1: reflexivity).	13.3039422035	8269
Coq.NArith.BinNatX.N.even_spec	40
Coq.NArith.BinNatX.N.odd_spec	40	0.0.3.1.0.4.0.0.0.0.0.3.0.0.0	search with cache (only 1: destruct n; only 1: split; only 1: discriminate; only 1: intros (m, H); only 1: now destruct m; only 1: split; only 1: destruct p; only 1: now exists (pos p); only 1: easy; only 1: now exists 0; only 1: destruct p; only 1: easy; only 1: intros (m, H); only 1: now destruct m; only 1: easy).	6.10981607437	4997
Coq.NArith.BinNatX.N.pos_div_eucl_spec	40
Coq.NArith.BinNatX.N.div_eucl_spec	40	0.3.1.0.0.0.0.0.0.0.2	search with cache (only 1: destruct a as [| a], b as [| b]; only 1: unfold BinNat.N.div_eucl; only 1: trivial; only 1: unfold BinNat.N.div_eucl; only 1: trivial; only 1: unfold BinNat.N.div_eucl; only 1: trivial; only 1: unfold BinNat.N.div_eucl; only 1: generalize (BinNat.N.pos_div_eucl_spec a (pos b)); only 1: destruct pos_div_eucl; only 1: now rewrite BinNat.N.mul_comm).	9.71778798103	2346
Coq.NArith.BinNatX.N.div_mod'	40	0.0.2	search with cache (only 1: generalize (BinNat.N.div_eucl_spec a b); only 1: unfold BinNat.N.div, BinNat.N.modulo; only 1: now destruct div_eucl).	0.033215045929	5
Coq.NArith.BinNatX.N.div_mod	40	0.0.2.0	search with cache (only 1: intros _; only 1: generalize (BinNat.N.div_eucl_spec a b); only 1: unfold BinNat.N.div, BinNat.N.modulo; only 1: now destruct div_eucl).	0.0419049263	6
Coq.NArith.BinNatX.N.pos_div_eucl_remainder	40
Coq.NArith.BinNatX.N.mod_lt	40	0.1.0.0.0.1.1	search with cache (only 1: destruct b as [| b]; only 1: now destruct 1; only 1: destruct a as [| a]; only 1: reflexivity; only 1: unfold BinNat.N.modulo; only 1: unfold div_eucl; only 1: apply BinNat.N.pos_div_eucl_remainder).	0.0610678195953	10
Coq.NArith.BinNatX.N.mod_bound_pos	40
Coq.NArith.BinNatX.N.sqrtrem_sqrt	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold BinNat.N.sqrtrem, BinNat.N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r).	0.0351111888885	5
Coq.NArith.BinNatX.N.sqrtrem_spec	40	1.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: now split; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: subst; only 1: now split; only 1: simpl; only 1: subst; only 1: now split).	0.97710609436	389
Coq.NArith.BinNatX.N.sqrt_spec	40
Coq.NArith.BinNatX.N.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0834619998932	1
Coq.NArith.BinNatX.N.ggcd_gcd	40	0.0.0.0.0.2.0.6.0.4.0.0	search with cache (only 1: destruct a as [| p], b as [| q]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy; only 1: simpl; only 1: pose proof (Pos.ggcd_gcd p q) as H; only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: simpl; only 1: now f_equal).	3.49736189842	2798
Coq.NArith.BinNatX.N.ggcd_correct_divisors	40	0.0.1.0.0.0.0.0.0.0.0.0.2.1	search with cache (only 1: destruct a as [| p], b as [| q]; only 1: now split; only 1: simpl; only 1: now rewrite Pos.mul_1_r; only 1: simpl; only 1: now rewrite Pos.mul_1_r; only 1: simpl; only 1: generalize (Pos.ggcd_correct_divisors p q); only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: simpl; only 1: destruct 1; only 1: split; only 1: now f_equal; only 1: now f_equal).	26.5809071064	1401
Coq.NArith.BinNatX.N.gcd_divide_l	40	1.0.2.2.0.0.0	search with cache (only 1: rewrite <- BinNat.N.ggcd_gcd; only 1: generalize (BinNat.N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (H, _); only 1: exists aa; only 1: simpl; only 1: now rewrite BinNat.N.mul_comm).	0.714599132538	299
Coq.NArith.BinNatX.N.gcd_divide_r	40	1.3.2.0.1.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	4.01809692383	1392
Coq.NArith.BinNatX.N.gcd_greatest	40
Coq.NArith.BinNatX.N.gcd_nonneg	40	4	search with cache (only 1: apply BinNat.N.le_0_l).	0.0117228031158	5
Coq.NArith.BinNatX.N.testbit_even_0	40	1	search with cache (only 1: now destruct a).	0.0162069797516	2
Coq.NArith.BinNatX.N.testbit_odd_0	40	1	search with cache (only 1: now destruct a).	0.0150508880615	2
Coq.NArith.BinNatX.N.testbit_succ_r_div2	40
Coq.NArith.BinNatX.N.testbit_odd_succ	40	0.0.0.1	search with cache (only 1: intros H; only 1: rewrite BinNat.N.testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0563681125641	5
Coq.NArith.BinNatX.N.testbit_even_succ	40	0.0.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0589210987091	5
Coq.NArith.BinNatX.N.testbit_neg_r	40	45	search with cache (only 1: now destruct n).	2.32220721245	4644
Coq.NArith.BinNatX.N.shiftr_succ_r	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply Pos.iter_succ).	0.03573179245	5
Coq.NArith.BinNatX.N.shiftl_succ_r	40	0.0.0.2.0.5.4.0.0	search with cache (only 1: destruct n, a; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: simpl; only 1: now try rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos.iter_succ).	2.14107084274	1382
Coq.NArith.BinNatX.N.shiftr_spec	40	0.0.0.0.0.0.2.0	search with cache (only 1: intros _; only 1: revert a m; only 1: induction n using BinNat.N.peano_ind; only 1: intros a m; only 1: now rewrite BinNat.N.add_0_r; only 1: intros a m; only 1: rewrite BinNat.N.add_comm, BinNat.N.add_succ_l, BinNat.N.add_comm, <- BinNat.N.add_succ_l; only 1: now rewrite <- IHn, BinNat.N.testbit_succ_r_div2, BinNat.N.shiftr_succ_r by apply BinNat.N.le_0_l).	0.0774619579315	10
Coq.NArith.BinNatX.N.shiftl_spec_high	40	0.0.0.0.0.0.0.0.2.1.0.0.0.0	search with cache (only 1: intros _ H; only 1: rewrite <- (BinNat.N.sub_add n m H)  at 1; only 1: set (m' := m - n); only 1: clearbody m'; only 1: clear H m; only 1: revert a m'; only 1: induction n using BinNat.N.peano_ind; only 1: intros a m; only 1: rewrite BinNat.N.add_0_r; only 1: now destruct a; only 1: intros a m; only 1: rewrite BinNat.N.shiftl_succ_r; only 1: rewrite BinNat.N.add_comm, BinNat.N.add_succ_l, BinNat.N.add_comm; only 1: now rewrite BinNat.N.testbit_succ_r_div2, BinNat.N.div2_double by apply BinNat.N.le_0_l).	7.27481603622	2474
Coq.NArith.BinNatX.N.shiftl_spec_low	40	0.0.0.0.0.0.0.0.0.1.2.1.2.0.0.1	search with cache (only 1: revert a m; only 1: induction n using BinNat.N.peano_ind; only 1: intros a m H; only 1: destruct m; only 1: now destruct a; only 1: now destruct p; only 1: intros a m H; only 1: rewrite BinNat.N.shiftl_succ_r; only 1: destruct m; only 1: now destruct (BinNat.N.shiftl a n); only 1: rewrite <- (BinNat.N.succ_pos_pred p), BinNat.N.testbit_succ_r_div2, BinNat.N.div2_double by apply BinNat.N.le_0_l; only 1: apply IHn; only 1: apply BinNat.N.add_lt_mono_l with 1; only 1: rewrite 2!(BinNat.N.add_succ_l 0); only 1: simpl; only 1: now rewrite BinNat.N.succ_pos_pred).	16.1493330002	8680
Coq.NArith.BinNatX.N.div2_spec	40	0	search with cache (only 1: reflexivity).	0.0120480060577	1
Coq.NArith.BinNatX.N.pos_lxor_spec	40
Coq.NArith.BinNatX.N.lxor_spec	40	1.0.1.0.1.0.15.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: simpl; only 1: now destruct Pos.testbit; only 1: simpl; only 1: now destruct Pos.testbit; only 1: simpl; only 1: apply BinNat.N.pos_lxor_spec).	2.29101681709	2519
Coq.NArith.BinNatX.N.pos_lor_spec	40
Coq.NArith.BinNatX.N.lor_spec	40	1.0.0.0.3.0.5.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: apply BinNat.N.pos_lor_spec).	1.11767292023	660
Coq.NArith.BinNatX.N.pos_land_spec	40
Coq.NArith.BinNatX.N.land_spec	40	0.0.1.0.0.0.10.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply BinNat.N.pos_land_spec).	0.922641038895	854
Coq.NArith.BinNatX.N.pos_ldiff_spec	40
Coq.NArith.BinNatX.N.ldiff_spec	40	1.0.0.0.0.0.14.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply BinNat.N.pos_ldiff_spec).	1.41491794586	1601
Coq.NArith.BinNatX.N.gt_lt_iff	40	1.13	search with cache (only 1: unfold ltb, lt; only 1: now rewrite BinNat.N.compare_antisym, CompOpp_iff).	0.468322992325	112
Coq.NArith.BinNatX.N.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite BinNat.N.compare_antisym, CompOpp_iff).	0.0250370502472	2
Coq.NArith.BinNatX.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0117158889771	1
Coq.NArith.BinNatX.N.ge_le_iff	40	1.12	search with cache (only 1: unfold leb, le; only 1: now rewrite BinNat.N.compare_antisym, CompOpp_iff).	2.06613492966	115
Coq.NArith.BinNatX.N.ge_le	40	2.0	search with cache (only 1: unfold le, ge; only 1: now rewrite BinNat.N.compare_antisym, CompOpp_iff).	3.41099596024	237
Coq.NArith.BinNatX.N.le_ge	40	2.0	search with cache (only 1: unfold le, ge; only 1: now rewrite BinNat.N.compare_antisym, CompOpp_iff).	3.29779696465	236
Coq.NArith.BinNatX.N.pos_pred_shiftl_low	40
Coq.NArith.BinNatX.N.pos_pred_shiftl_high	40
Coq.NArith.BinNatX.N.pred_div2_up	40	0.0.2.1.1.0	search with cache (only 1: destruct p as [p| p| ]; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.354791879654	57
Coq.NArith.BinNatX.N.iter_swap_gen	40	0.0.0.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: now apply Pos.iter_swap_gen).	0.12984585762	17
Coq.NArith.BinNatX.N.iter_swap	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply BinNat.N.iter_swap_gen).	0.129961013794	11
Coq.NArith.BinNatX.N.iter_succ	40	0.0.0.3.0.0.0	search with cache (only 1: destruct n; only 1: intros; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl; only 1: now apply Pos.iter_succ).	0.124323129654	10
Coq.NArith.BinNatX.N.iter_succ_r	40	0.0	search with cache (only 1: intros; only 1: now rewrite BinNat.N.iter_succ, BinNat.N.iter_swap).	0.0173940658569	2
Coq.NArith.BinNatX.N.iter_add	40	0.0.0.0.1	search with cache (only 1: induction p using BinNat.N.peano_ind; only 1: intros; only 1: trivial; only 1: intros; only 1: now rewrite BinNat.N.add_succ_l, !BinNat.N.iter_succ, IHp).	0.0542171001434	22
Coq.NArith.BinNatX.N.iter_ind	40	0.0.0.0	search with cache (only 1: induction n using BinNat.N.peano_ind; only 1: trivial; only 1: rewrite BinNat.N.iter_succ; only 1: auto).	0.0229020118713	4
Coq.NArith.BinNatX.N.iter_invariant	40	1.1.0.1	search with cache (only 1: intros; only 1: apply BinNat.N.iter_ind with (P := fun _ => Inv); only 1: trivial; only 1: trivial).	0.176957130432	63
Coq.NArith.NArithX.test	40	3.4	search with cache (only 1: intros a b Hb; only 1: N.order).	0.18822479248	37
Coq.NArith.NdigitsX.Ptestbit_Pbit	40
Coq.NArith.NdigitsX.Ntestbit_Nbit	40	0.0.0	search with cache (only 1: destruct a; only 1: trivial; only 1: apply Ndigits.Ptestbit_Pbit).	0.0404229164124	3
Coq.NArith.NdigitsX.Pbit_Ptestbit	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- Ndigits.Ptestbit_Pbit, N2Nat.id).	0.0304970741272	2
Coq.NArith.NdigitsX.Nbit_Ntestbit	40	0.0.0	search with cache (only 1: destruct a; only 1: trivial; only 1: apply Ndigits.Pbit_Ptestbit).	0.0451350212097	3
Coq.NArith.NdigitsX.Nshiftr_nat_S	40	0	search with cache (only 1: reflexivity).	0.0256440639496	1
Coq.NArith.NdigitsX.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0239148139954	1
Coq.NArith.NdigitsX.Nshiftr_nat_equiv	40	1.0.0.13.0.0	search with cache (only 1: intros a [| n]; only 1: simpl; only 1: now N.nzsimpl'; only 1: simpl; only 1: symmetry; only 1: apply Pos2Nat.inj_iter).	2.23737192154	1344
Coq.NArith.NdigitsX.Nshiftr_equiv_nat	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- Ndigits.Nshiftr_nat_equiv, Nat2N.id).	0.0315499305725	2
Coq.NArith.NdigitsX.Nshiftl_nat_equiv	40	0.1.1.0.0.1.1.0.0.1.0.0.0.3.0.0	search with cache (only 1: intros [| a] [| n]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold N.shiftl_nat; only 1: induction (Pos.to_nat n) as [| ? H]; only 1: now try rewrite H; only 1: simpl; only 1: now try rewrite H; only 1: unfold N.shiftl_nat; only 1: trivial; only 1: simpl; only 1: unfold N.shiftl_nat; only 1: rewrite <- Pos2Nat.inj_iter; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).	25.99452281	10849
Coq.NArith.NdigitsX.Nshiftl_equiv_nat	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- Ndigits.Nshiftl_nat_equiv, Nat2N.id).	0.0337998867035	2
Coq.NArith.NdigitsX.Nshiftr_nat_spec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: intros m; only 1: now rewrite <- plus_n_O; only 1: intros m; only 1: simpl; only 1: rewrite <- plus_n_Sm, <- plus_Sn_m, <- IHn; only 1: destruct (N.shiftr_nat a n) as [| [p| p| ]]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	8.55339503288	1947
Coq.NArith.NdigitsX.Nshiftl_nat_spec_high	40
Coq.NArith.NdigitsX.Nshiftl_nat_spec_low	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: induction n; only 1: intros m H; only 1: inversion H; only 1: intros m H; only 1: rewrite Ndigits.Nshiftl_nat_S; only 1: destruct m; only 1: destruct (N.shiftl_nat a n); only 1: trivial; only 1: trivial; only 1: apply Lt.lt_S_n in H; only 1: specialize (IHn m H); only 1: destruct (N.shiftl_nat a n); only 1: trivial; only 1: trivial).	10.3473849297	2668
Coq.NArith.NdigitsX.Pshiftl_nat_0	40	0	search with cache (only 1: reflexivity).	0.022999048233	1
Coq.NArith.NdigitsX.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.023796081543	1
Coq.NArith.NdigitsX.Pshiftl_nat_N	40	0.0.2.0.0.0	search with cache (only 1: unfold Pos.shiftl_nat, N.shiftl_nat; only 1: induction n; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite <- IHn).	0.0545129776001	8
Coq.NArith.NdigitsX.Pshiftl_nat_plus	40	0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: intros; only 1: now f_equal).	0.097629070282	7
Coq.NArith.NdigitsX.Pxor_semantics	40	0.0	search with cache (only 1: rewrite <- Ndigits.Ntestbit_Nbit, <- !Ndigits.Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	0.0668849945068	2
Coq.NArith.NdigitsX.Nxor_semantics	40	0.0	search with cache (only 1: rewrite <- !Ndigits.Ntestbit_Nbit; only 1: apply N.lxor_spec).	0.0322630405426	2
Coq.NArith.NdigitsX.Por_semantics	40	0.0	search with cache (only 1: rewrite <- !Ndigits.Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	0.0331430435181	2
Coq.NArith.NdigitsX.Nor_semantics	40	0.0	search with cache (only 1: rewrite <- !Ndigits.Ntestbit_Nbit; only 1: apply N.lor_spec).	0.0582280158997	2
Coq.NArith.NdigitsX.Pand_semantics	40	0.0	search with cache (only 1: rewrite <- Ndigits.Ntestbit_Nbit, <- !Ndigits.Ptestbit_Pbit; only 1: apply N.pos_land_spec).	0.0341029167175	2
Coq.NArith.NdigitsX.Nand_semantics	40	0.0	search with cache (only 1: rewrite <- !Ndigits.Ntestbit_Nbit; only 1: apply N.land_spec).	0.0364332199097	2
Coq.NArith.NdigitsX.Pdiff_semantics	40	0.0	search with cache (only 1: rewrite <- Ndigits.Ntestbit_Nbit, <- !Ndigits.Ptestbit_Pbit; only 1: apply N.pos_ldiff_spec).	0.0334408283234	2
Coq.NArith.NdigitsX.Ndiff_semantics	40	0.0	search with cache (only 1: rewrite <- !Ndigits.Ntestbit_Nbit; only 1: apply N.ldiff_spec).	0.0312299728394	2
Coq.NArith.NdigitsX.Pbit_faithful_0	40	0.0.0.0.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros H; only 1: discriminate (H 0%nat); only 1: intros H; only 1: apply (IHp (Step H)); only 1: intros H; only 1: discriminate (H 0%nat)).	0.0519068241119	7
Coq.NArith.NdigitsX.Pbit_faithful	40	3.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros [p'| p'| ] H; only 1: f_equal; only 1: apply (IHp _ (Step H)); only 1: discriminate (H 0%nat); only 1: destruct (Ndigits.Pbit_faithful_0 _ (Step H)); only 1: intros [p'| p'| ] H; only 1: discriminate (H 0%nat); only 1: f_equal; only 1: apply (IHp _ (Step H)); only 1: discriminate (H 0%nat); only 1: intros [p'| p'| ] H; only 1: symmetry in H; only 1: destruct (Ndigits.Pbit_faithful_0 _ (Step H)); only 1: discriminate (H 0%nat); only 1: trivial).	9.83229422569	3135
Coq.NArith.NdigitsX.Nbit_faithful	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros [| p] [| p'] H; only 1: trivial; only 1: symmetry in H; only 1: symmetry in H; only 1: symmetry in H; only 1: destruct (Ndigits.Pbit_faithful_0 _ H); only 1: destruct (Ndigits.Pbit_faithful_0 _ H); only 1: f_equal; only 1: apply Ndigits.Pbit_faithful, H).	0.10931801796	21
Coq.NArith.NdigitsX.Nbit_faithful_iff	40	0.1.2.4	search with cache (only 1: split; only 1: apply Ndigits.Nbit_faithful; only 1: intros; only 1: now subst).	0.397317886353	43
Coq.NArith.NdigitsX.Nbit0_correct	40	0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.0625939369202	6
Coq.NArith.NdigitsX.Ndouble_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0423748493195	3
Coq.NArith.NdigitsX.Ndouble_plus_one_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0385408401489	3
Coq.NArith.NdigitsX.Ndiv2_double	40	1.0.1.1.0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: intro H; only 1: discriminate H; only 1: reflexivity; only 1: intro H; only 1: discriminate H).	0.629295110703	155
Coq.NArith.NdigitsX.Ndiv2_double_plus_one	40	0.1.0.1.0.0.1.0	search with cache (only 1: destruct n; only 1: intro; only 1: discriminate H; only 1: destruct p; only 1: reflexivity; only 1: intro H; only 1: discriminate H; only 1: reflexivity).	0.486262083054	113
Coq.NArith.NdigitsX.Ndiv2_correct	40	0.0.0.0.0.0	search with cache (only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.138161182404	6
Coq.NArith.NdigitsX.Nxor_bit0	40	2.0.0.0	search with cache (only 1: intros; only 1: rewrite <- Ndigits.Nbit0_correct, (Ndigits.Nxor_semantics a a' 0); only 1: rewrite Ndigits.Nbit0_correct, Ndigits.Nbit0_correct; only 1: reflexivity).	0.131999969482	6
Coq.NArith.NdigitsX.Nxor_div2	40	1.0.0.2.0.0	search with cache (only 1: intros; only 1: apply Ndigits.Nbit_faithful; only 1: intro; only 1: rewrite (Ndigits.Nxor_semantics (N.div2 a) (N.div2 a') n), Ndigits.Ndiv2_correct, (Ndigits.Nxor_semantics a a' (S n)); only 1: rewrite 2!Ndigits.Ndiv2_correct; only 1: reflexivity).	0.0655920505524	9
Coq.NArith.NdigitsX.Nneg_bit0	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- xorb_true_l, <- H, Ndigits.Nxor_bit0, xorb_assoc_reverse, xorb_nilpotent, xorb_false_r; only 1: reflexivity).	0.0380470752716	4
Coq.NArith.NdigitsX.Nneg_bit0_1	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Ndigits.Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0527939796448	4
Coq.NArith.NdigitsX.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Ndigits.Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0475931167603	4
Coq.NArith.NdigitsX.Nsame_bit0	40	1.0.1.4.0	search with cache (only 1: intros; only 1: rewrite <- (xorb_false_r (N.odd a)); only 1: assert (H0 : N.odd (N.pos p~0) = false) by reflexivity; only 1: rewrite <- H0, <- H, Ndigits.Nxor_bit0, <- xorb_assoc_reverse, xorb_nilpotent, xorb_false_l; only 1: reflexivity).	0.102990865707	40
Coq.NArith.NdigitsX.Nbit0_less	40
Coq.NArith.NdigitsX.Nbit0_gt	40	0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	6.98134803772	3093
Coq.NArith.NdigitsX.Nless_not_refl	40	21.5.0.0	search with cache (only 1: intros; only 1: unfold Nless; only 1: rewrite (N.lxor_nilpotent a); only 1: reflexivity).	7.19115996361	6945
Coq.NArith.NdigitsX.Nless_def_1	40
Coq.NArith.NdigitsX.Nless_def_2	40	0.0.0.0.0.0.0.0.0.4.0	search with cache (only 1: intros; only 1: destruct a, a'; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: simpl; only 1: trivial).	6.30963802338	2147
Coq.NArith.NdigitsX.Nless_def_3	40	0.0.1.2	search with cache (only 1: intros; only 1: apply Ndigits.Nbit0_less; only 1: apply Ndigits.Ndouble_bit0; only 1: apply Ndigits.Ndouble_plus_one_bit0).	0.746434211731	146
Coq.NArith.NdigitsX.Nless_def_4	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Ndigits.Nbit0_gt; only 1: apply Ndigits.Ndouble_plus_one_bit0; only 1: apply Ndigits.Ndouble_bit0).	0.0526249408722	5
Coq.NArith.NdigitsX.Nless_z	40	0.0.0.8.1.6	search with cache (only 1: destruct a; only 1: reflexivity; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	4.28514409065	2691
Coq.NArith.NdigitsX.N0_less_1	40	0.1.0.0.0	search with cache (only 1: destruct a; only 1: discriminate; only 1: intros; only 1: exists p; only 1: trivial).	0.0693979263306	6
Coq.NArith.NdigitsX.N0_less_2	40
Coq.NArith.NdigitsX.Nless_trans	40
Coq.NArith.NdigitsX.Nless_total	40
Coq.NArith.NdigitsX.Bv2N_N2Bv	40
Coq.NArith.NdigitsX.Bv2N_Nsize	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0	search with cache (only 1: induction bv; only 1: auto; only 1: simpl; only 1: destruct h; only 1: destruct (Ndigits.Bv2N bv); only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith; only 1: destruct (Ndigits.Bv2N bv); only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	4.18862915039	1223
Coq.NArith.NdigitsX.Bv2N_Nsize_1	40
Coq.NArith.NdigitsX.Bv2N_upper_bound	40	2.0.0.5.1.11.0	search with cache (only 1: induction bv; only 1: reflexivity; only 1: simpl; only 1: generalize IHbv; only 1: destruct h; only 1: apply N.succ_double_lt; only 1: apply N.double_lt_mono).	1.92818117142	1241
Coq.NArith.NdigitsX.ByteV2N_upper_bound	40	0	search with cache (only 1: apply Ndigits.Bv2N_upper_bound).	0.0173799991608	1
Coq.NArith.NdigitsX.N2Bv_N2Bv_gen	40
Coq.NArith.NdigitsX.N2Bv_N2Bv_gen_above	40
Coq.NArith.NdigitsX.N2Bv_Bv2N	40
Coq.NArith.NdigitsX.Nbit0_Blow	40	0.0.0.0.0.3.0.0.0.0.0	search with cache (only 1: apply Vector.caseS; only 1: intros; only 1: unfold Blow; only 1: simpl; only 1: destruct h; only 1: apply Ndigits.Ndouble_plus_one_bit0; only 1: destruct (Ndigits.Bv2N t); only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	6.20714092255	1959
Coq.NArith.NdigitsX.Bnth_Nbit	40
Coq.NArith.NdigitsX.Nbit_Nsize	40
Coq.NArith.NdigitsX.Nbit_Bth	40
Coq.NArith.NdigitsX.Nxor_BVxor	40
Coq.NArith.NdigitsX.Nand_BVand	40
Coq.NArith.NdigitsX.N2Bv_sized_Nsize	40	1.0.3.0.0.3.0.0.2.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: auto; only 1: simpl; only 1: rewrite IHp; only 1: auto; only 1: simpl; only 1: auto).	7.12971282005	5389
Coq.NArith.NdigitsX.N2Bv_sized_Bv2N	40
Coq.NArith.NdigitsX.N2Bv_N2Bv_sized_above	40	1.2.0.0.2.0.1.7.0.0.0	search with cache (only 1: destruct a; only 1: simpl; only 1: f_equal; only 1: induction p as [| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	21.6298160553	12092
Coq.NArith.NdecX.Peqb_complete	40
Coq.NArith.NdecX.Peqb_Pcompare	40	0.1	search with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.0484819412231	3
Coq.NArith.NdecX.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0684330463409	1
Coq.NArith.NdecX.Neqb_Ncompare	40
Coq.NArith.NdecX.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0404779911041	1
Coq.NArith.NdecX.Neqb_complete	40
Coq.NArith.NdecX.Nxor_eq_true	40
Coq.NArith.NdecX.Nxor_eq_false	40
Coq.NArith.NdecX.Nodd_not_double	40
Coq.NArith.NdecX.Nnot_div2_not_double	40
Coq.NArith.NdecX.Neven_not_double_plus_one	40
Coq.NArith.NdecX.Nnot_div2_not_double_plus_one	40
Coq.NArith.NdecX.Nbit0_neq	40
Coq.NArith.NdecX.Ndiv2_eq	40	10.0.1	search with cache (only 1: intros H; only 1: eqb2eq; only 1: now subst).	1.46199202538	675
Coq.NArith.NdecX.Ndiv2_neq	40	0.3.0.1	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.148041963577	20
Coq.NArith.NdecX.Ndiv2_bit_eq	40
Coq.NArith.NdecX.Ndiv2_bit_neq	40	0.3.1.0	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.103285074234	8
Coq.NArith.NdecX.Nneq_elim	40
Coq.NArith.NdecX.Ndouble_or_double_plus_un	40
Coq.NArith.NdecX.Nleb_alt	40
Coq.NArith.NdecX.Nleb_Nle	40
Coq.NArith.NdecX.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0284059047699	1
Coq.NArith.NdecX.Nleb_antisym	40	3.1.1	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order).	0.0960140228271	8
Coq.NArith.NdecX.Nleb_trans	40	0.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.order).	0.0584599971771	2
Coq.NArith.NdecX.Nleb_ltb_trans	40	1.0.7	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order).	0.637028932571	157
Coq.NArith.NdecX.Nltb_leb_trans	40	1.0.12	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order).	2.86480212212	1369
Coq.NArith.NdecX.Nltb_trans	40
Coq.NArith.NdecX.Nltb_leb_weak	40
Coq.NArith.NdecX.Nleb_double_mono	40
Coq.NArith.NdecX.Nleb_double_plus_one_mono	40
Coq.NArith.NdecX.Nleb_double_mono_conv	40
Coq.NArith.NdecX.Nleb_double_plus_one_mono_conv	40	3.1.0.3.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	1.12045001984	446
Coq.NArith.NdecX.Nltb_double_mono	40
Coq.NArith.NdecX.Nltb_double_plus_one_mono	40
Coq.NArith.NdecX.Nltb_double_mono_conv	40
Coq.NArith.NdecX.Nltb_double_plus_one_mono_conv	40
Coq.NArith.NdecX.Nltb_Ncompare	40
Coq.NArith.NdecX.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0426850318909	1
Coq.NArith.NdecX.Ncompare_Lt_Nltb	40
Coq.NArith.NdecX.Nmin_le_1	40
Coq.NArith.NdecX.Nmin_le_2	40
Coq.NArith.NdecX.Nmin_le_3	40
Coq.NArith.NdecX.Nmin_le_4	40
Coq.NArith.NdecX.Nmin_le_5	40
Coq.NArith.NdecX.Nmin_lt_3	40
Coq.NArith.NdecX.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0786011219025	4
Coq.NArith.NdistX.Nplength_infty	40	1.3.8	search with cache (only 1: induction a as [| p]; only 1: Morphisms.solve_proper; only 1: easy).	0.754879951477	520
Coq.NArith.NdistX.Nplength_zeros	40
Coq.NArith.NdistX.Nplength_one	40
Coq.NArith.NdistX.Nplength_first_one	40
Coq.NArith.NdistX.ni_min_idemp	40
Coq.NArith.NdistX.ni_min_comm	40
Coq.NArith.NdistX.ni_min_assoc	40
Coq.NArith.NdistX.ni_min_O_l	40	1.0.9	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.110517024994	117
Coq.NArith.NdistX.ni_min_O_r	40	0.0.5.4.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: intros; only 1: elim n; only 1: trivial; only 1: trivial).	0.382385969162	420
Coq.NArith.NdistX.ni_min_inf_l	40	1	search with cache (only 1: trivial).	0.0133857727051	2
Coq.NArith.NdistX.ni_min_inf_r	40	0.0.2	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0245909690857	5
Coq.NArith.NdistX.ni_le_refl	40	1.0.0.1.0.0.0.1.0.0.0.48	search with cache (only 1: red; only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: intros; only 1: simpl; only 1: inversion H; only 1: rewrite H1; only 1: rewrite H1; only 1: reflexivity).	4.44547700882	11181
Coq.NArith.NdistX.ni_le_antisym	40	7.0.0.3	search with cache (only 1: intros; only 1: inversion H0; only 1: rewrite ni_min_comm; only 1: auto).	0.335269927979	256
Coq.NArith.NdistX.ni_le_trans	40
Coq.NArith.NdistX.ni_le_min_1	40
Coq.NArith.NdistX.ni_le_min_2	40	6.3.0.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	1.04202699661	737
Coq.NArith.NdistX.ni_min_case	40
Coq.NArith.NdistX.ni_le_total	40
Coq.NArith.NdistX.ni_le_min_induc	40
Coq.NArith.NdistX.le_ni_le	40	5.4.13	search with cache (only 1: fix le_div2 1; only 1: intro n; only 1: intuition).	2.16792583466	2571
Coq.NArith.NdistX.ni_le_le	40	3.1.5.14	search with cache (only 1: fix le_div2 1; only 1: intro n; only 1: intros * H; only 1: auto).	4.01623892784	5021
Coq.NArith.NdistX.Nplength_lb	40
Coq.NArith.NdistX.Nplength_ub	40
Coq.NArith.NdistX.Npdist_eq_1	40
Coq.NArith.NdistX.Npdist_eq_2	40
Coq.NArith.NdistX.Npdist_comm	40
Coq.NArith.NdistX.Nplength_ultra_1	40
Coq.NArith.NdistX.Nplength_ultra	40
Coq.NArith.NdistX.Npdist_ultra	40
Coq.NArith.NnatX.N2Nat.id	40	2.0.0.0.1.0.3.0.0	search with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	2.20143413544	815
Coq.NArith.NnatX.N2Nat.inj	40	0.3.1	search with cache (only 1: intro H; only 1: rewrite <- (Nnat.N2Nat.id a), <- (Nnat.N2Nat.id a'); only 1: now f_equal).	0.0916659832001	7
Coq.NArith.NnatX.N2Nat.inj_iff	40	0.1.5.0	search with cache (only 1: split; only 1: apply Nnat.N2Nat.inj; only 1: intro H; only 1: now subst).	0.344685077667	49
Coq.NArith.NnatX.N2Nat.inj_double	40	2.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: now Nat.nzsimpl; only 1: simpl N.to_nat; only 1: apply Pos2Nat.inj_xO).	0.11875295639	7
Coq.NArith.NnatX.N2Nat.inj_succ_double	40	1.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: apply Pos2Nat.inj_xI).	0.0367980003357	6
Coq.NArith.NnatX.N2Nat.inj_succ	40	2.1.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0464458465576	9
Coq.NArith.NnatX.N2Nat.inj_add	40	1.0.0.0.2.2.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add).	0.276949882507	132
Coq.NArith.NnatX.N2Nat.inj_mul	40	0.0.0.0.0.0.1.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	0.0581188201904	17
Coq.NArith.NnatX.N2Nat.inj_sub	40
Coq.NArith.NnatX.N2Nat.inj_pred	40	0.0	search with cache (only 1: rewrite <- Nat.sub_1_r, N.pred_sub; only 1: apply Nnat.N2Nat.inj_sub).	0.0229721069336	2
Coq.NArith.NnatX.N2Nat.inj_div2	40	0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| [p| p| ]]; only 1: trivial; only 1: unfold N.div2, N.to_nat; only 1: now rewrite Pos2Nat.inj_xI, Nat.div2_succ_double; only 1: unfold N.div2, N.to_nat; only 1: now rewrite Pos2Nat.inj_xO, Nat.div2_double; only 1: trivial).	0.0430269241333	7
Coq.NArith.NnatX.N2Nat.inj_compare	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: now subst; only 1: simpl; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: simpl; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: simpl; only 1: apply Pos2Nat.inj_compare).	0.0484209060669	9
Coq.NArith.NnatX.N2Nat.inj_max	40	1.0.2.0.0.1.0.1.0.0	search with cache (only 1: unfold N.max; only 1: rewrite Nnat.N2Nat.inj_compare; only 1: symmetry; only 1: case Nat.compare_spec; only 1: intros; only 1: now apply Nat.max_r, Nat.eq_le_incl; only 1: intros; only 1: now apply Nat.max_r, Nat.lt_le_incl; only 1: intros; only 1: now apply Nat.max_l, Nat.lt_le_incl).	2.38421010971	1051
Coq.NArith.NnatX.N2Nat.inj_min	40	0.1.2.1.5.1.0.1.0.0	search with cache (only 1: unfold N.min; only 1: rewrite Nnat.N2Nat.inj_compare; only 1: symmetry; only 1: case Nat.compare_spec; only 1: intros; only 1: now apply Nat.min_l, Nat.eq_le_incl; only 1: intros; only 1: now apply Nat.min_l, Nat.lt_le_incl; only 1: intros; only 1: now apply Nat.min_r, Nat.lt_le_incl).	14.7676231861	6861
Coq.NArith.NnatX.N2Nat.inj_iter	40	0.0.0	search with cache (only 1: destruct a as [| a]; only 1: trivial; only 1: apply Pos2Nat.inj_iter).	0.0293650627136	3
Coq.NArith.NnatX.Nat2N.id	40	0.0.3.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0330209732056	15
Coq.NArith.NnatX.Nat2N.inj	40	0.5.1	search with cache (only 1: intros; only 1: rewrite <- (Nnat.Nat2N.id n), <- (Nnat.Nat2N.id n'); only 1: now f_equal).	0.0271790027618	9
Coq.NArith.NnatX.Nat2N.inj_iff	40	0.1.2.0	search with cache (only 1: split; only 1: apply Nnat.Nat2N.inj; only 1: intros; only 1: now subst).	0.134761095047	23
Coq.NArith.NnatX.Nat2N.inj_double	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0939228534698	1
Coq.NArith.NnatX.Nat2N.inj_succ_double	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0318961143494	1
Coq.NArith.NnatX.Nat2N.inj_succ	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0268039703369	1
Coq.NArith.NnatX.Nat2N.inj_pred	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0257050991058	1
Coq.NArith.NnatX.Nat2N.inj_add	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0268518924713	1
Coq.NArith.NnatX.Nat2N.inj_sub	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0779349803925	1
Coq.NArith.NnatX.Nat2N.inj_mul	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0281281471252	1
Coq.NArith.NnatX.Nat2N.inj_div2	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0247099399567	1
Coq.NArith.NnatX.Nat2N.inj_compare	40	0	search with cache (only 1: now rewrite Nnat.N2Nat.inj_compare, !Nnat.Nat2N.id).	0.0140240192413	1
Coq.NArith.NnatX.Nat2N.inj_min	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.044224023819	1
Coq.NArith.NnatX.Nat2N.inj_max	40	0	search with cache (only 1: Nnat.Nat2N.nat2N).	0.0268881320953	1
Coq.NArith.NnatX.Nat2N.inj_iter	40	0	search with cache (only 1: now rewrite Nnat.N2Nat.inj_iter, !Nnat.Nat2N.id).	0.0147149562836	1
Coq.NArith.Ndiv_defX.Pdiv_eucl_remainder	40	0	search with cache (only 1: now apply (N.pos_div_eucl_remainder a (N.pos b))).	0.0292010307312	1
Coq.Strings.ByteX.byte_dec_lb	40	1.10.0.0.0.1.2.2	search with cache (only 1: rewrite <- (of_bits_to_bits x), <- (of_bits_to_bits y); only 1: generalize (to_bits x), (to_bits y); only 1: clear x y; only 1: intros x y H; only 1: repeat match goal with | H:_ /\ _ |- _ => destruct H | H:(_ * _)%type |- _ => destruct H | H:context [ (_ && _)%bool = true ] |- _ => rewrite Bool.andb_true_iff in H | H:context [ Bool.eqb _ _ = true ] |- _ => rewrite Bool.eqb_true_iff in H | _ => progress subst | _ => reflexivity end; only 1: destruct H; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	15.6931779385	5599
Coq.Strings.ByteX.byte_dec_bl	40
Coq.Strings.ByteX.eqb_false	40	4.5.4	search with cache (only 1: intros H H'; only 1: pose proof (Byte.byte_dec_lb H'); only 1: congruence).	11.3845670223	2095
Coq.Strings.ByteX.of_to_nat	40
Coq.Strings.ByteX.to_of_nat	40
Coq.Strings.ByteX.to_of_nat_iff	40
Coq.Strings.ByteX.to_of_nat_option_map	40
Coq.Strings.ByteX.to_nat_bounded	40
Coq.Strings.ByteX.of_nat_None_iff	40
Coq.Strings.ByteX.of_to_N	40
Coq.Strings.ByteX.to_of_N	40
Coq.Strings.ByteX.to_of_N_iff	40
Coq.Strings.ByteX.to_of_N_option_map	40	1.31.0.11	search with cache (only 1: do 256 try destruct x as [| x]; only 1: reflexivity; only 1: simpl in *; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	32.8220539093	26867
Coq.Strings.ByteX.to_N_bounded	40
Coq.Strings.ByteX.of_N_None_iff	40
Coq.Strings.ByteX.to_N_via_nat	40
Coq.Strings.ByteX.to_nat_via_N	40
Coq.Strings.ByteX.of_N_via_nat	40
Coq.Strings.ByteX.of_nat_via_N	40
Coq.Strings.BinaryStringX.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.012265920639	2
Coq.Strings.BinaryStringX.to_N_of_N	40
Coq.Strings.BinaryStringX.Z_of_of_Z	40
Coq.Strings.BinaryStringX.to_nat_of_nat	40
Coq.Strings.BinaryStringX.to_pos_of_pos	40
Coq.Strings.OctalStringX.Raw.to_N_of_pos	40	6	search with cache (only 1: trivial).	0.141690969467	28
Coq.Strings.OctalStringX.to_N_of_N	40
Coq.Strings.OctalStringX.to_Z_of_Z	40
Coq.Strings.OctalStringX.to_nat_of_nat	40
Coq.Strings.OctalStringX.to_pos_of_pos	40
Coq.Strings.HexStringX.Raw.to_N_of_pos	40	2	search with cache (only 1: trivial).	0.0221190452576	3
Coq.Strings.HexStringX.to_N_of_N	40
Coq.Strings.HexStringX.to_Z_of_Z	40
Coq.Strings.HexStringX.to_nat_of_nat	40
Coq.Strings.HexStringX.to_pos_of_pos	40
Coq.Strings.AsciiX.ascii_dec	40	0.0.0.0.0.0.0.0.25	search with cache (only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	12.2944328785	3881
Coq.Strings.AsciiX.eqb_spec	40
Coq.Strings.AsciiX.eqb_refl	40	1.0.7	search with cache (only 1: destruct x; only 1: simpl; only 1: destr_bool).	0.302943944931	24
Coq.Strings.AsciiX.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0192499160767	1
Coq.Strings.AsciiX.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0165779590607	1
Coq.Strings.AsciiX.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0171511173248	1
Coq.Strings.AsciiX.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.0129940509796	1
Coq.Strings.AsciiX.ascii_N_embedding	40
Coq.Strings.AsciiX.N_ascii_embedding	40
Coq.Strings.AsciiX.N_ascii_bounded	40
Coq.Strings.AsciiX.ascii_nat_embedding	40
Coq.Strings.AsciiX.nat_ascii_embedding	40
Coq.Strings.AsciiX.nat_ascii_bounded	40
Coq.Strings.AsciiX.ascii_of_byte_of_ascii	40	1.0.3.6	search with cache (only 1: apply Pos.eqb_eq; only 1: destruct x; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.562756061554	103
Coq.Strings.AsciiX.byte_of_ascii_of_byte	40
Coq.Strings.AsciiX.ascii_of_byte_via_N	40
Coq.Strings.AsciiX.ascii_of_byte_via_nat	40
Coq.Strings.AsciiX.byte_of_ascii_via_N	40
Coq.Strings.AsciiX.byte_of_ascii_via_nat	40
Coq.Strings.StringX.string_dec	40	0.11.8	search with cache (only 1: intros x; only 1: decide equality; only 1: apply ascii_dec).	1.66250705719	865
Coq.Strings.StringX.eqb_spec	40
Coq.Strings.StringX.eqb_refl	40
Coq.Strings.StringX.eqb_sym	40	0.0.0.25	search with cache (only 1: apply Nat.eqb_eq; only 1: t_eqb; only 1: destr_bool; only 1: destr_bool).	0.262329816818	394
Coq.Strings.StringX.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.019366979599	1
Coq.Strings.StringX.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0182268619537	1
Coq.Strings.StringX.eqb_compat	40	0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: t_eqb).	0.0186948776245	2
Coq.Strings.StringX.get_correct	40
Coq.Strings.StringX.append_correct1	40
Coq.Strings.StringX.append_correct2	40
Coq.Strings.StringX.substring_correct1	40
Coq.Strings.StringX.substring_correct2	40
Coq.Strings.StringX.prefix_correct	40
Coq.Strings.StringX.index_correct1	40
Coq.Strings.StringX.index_correct2	40
Coq.Strings.StringX.index_correct3	40
Coq.Strings.StringX.index_correct4	40
Coq.Strings.StringX.string_of_list_ascii_of_string	40
Coq.Strings.StringX.list_ascii_of_string_of_list_ascii	40
Coq.Strings.StringX.string_of_list_byte_of_string	40
Coq.Strings.StringX.list_byte_of_string_of_list_byte	40	0.0.1.1.0.8.1.3.2	search with cache (only 1: induction s as [| ? ? IHs]; only 1: auto with arith; only 1: cbn; only 1: f_equal; only 1: apply byte_of_ascii_of_byte; only 1: erewrite String.list_ascii_of_string_of_list_ascii, List.map_map, List.map_ext, List.map_id; only 1: reflexivity; only 1: intro; only 1: apply byte_of_ascii_of_byte).	1.5997800827	1511
Coq.nsatz.NsatzTacticX.psos_r1b	40
Coq.nsatz.NsatzTacticX.psos_r1	40	2.2.0.0.1	search with cache (only 1: intros x y H; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: cring; only 1: cring).	0.311295986176	12
Coq.nsatz.NsatzTacticX.nsatzR_diff	40
Coq.nsatz.NsatzTacticX.P0Z_correct	40	18	search with cache (only 1: trivial).	6.95570898056	825
Coq.nsatz.NsatzTacticX.Rext	40
Coq.nsatz.NsatzTacticX.Rset	40	7	search with cache (only 1: apply ring_setoid).	0.0419800281525	8
Coq.nsatz.NsatzTacticX.Rtheory	40
Coq.nsatz.NsatzTacticX.PolZadd_correct	40
Coq.nsatz.NsatzTacticX.PolZmul_correct	40
Coq.nsatz.NsatzTacticX.R_power_theory	40
Coq.nsatz.NsatzTacticX.norm_correct	40
Coq.nsatz.NsatzTacticX.PolZeq_correct	40
Coq.nsatz.NsatzTacticX.mult_l_correct	40
Coq.nsatz.NsatzTacticX.compute_list_correct	40
Coq.nsatz.NsatzTacticX.check_correct	40
Coq.nsatz.NsatzX.Rsth	40	1.0.1.10.0.2	search with cache (only 1: constructor; only 1: constructor; only 1: intro y; only 1: intros n nN2; only 1: auto with relations; only 1: congruence).	2.84299206734	1159
Coq.nsatz.NsatzX.Rri	40
Coq.nsatz.NsatzX.R_one_zero	40	9	search with cache (only 1: exact R1_neq_R0).	0.0953068733215	11
Coq.nsatz.NsatzX.Rcri	40
Coq.nsatz.NsatzX.Rdi	40
Coq.nsatz.NsatzX.Qri	40
Coq.nsatz.NsatzX.Q_one_zero	40	2	search with cache (only 1: discriminate).	0.0331609249115	3
Coq.nsatz.NsatzX.Qcri	40	7.7.0.0.23	search with cache (only 1: unfold Qminus; only 1: red; only 1: intros; only 1: apply Q_Setoid; only 1: apply Qsrt).	4.80459690094	1972
Coq.nsatz.NsatzX.Qdi	40
Coq.nsatz.NsatzX.Z_one_zero	40	0.6	search with cache (only 1: intro EQ; only 1: discriminate).	0.107867956161	8
Coq.nsatz.NsatzX.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0616481304169	3
Coq.nsatz.NsatzX.Zdi	40
Coq.Reals.Ranalysis4X.derivable_pt_inv	40
Coq.Reals.Ranalysis4X.pr_nu_var	40
Coq.Reals.Ranalysis4X.pr_nu_var2	40
Coq.Reals.Ranalysis4X.derivable_inv	40
Coq.Reals.Ranalysis4X.derive_pt_inv	40
Coq.Reals.Ranalysis4X.Rabs_derive_1	40
Coq.Reals.Ranalysis4X.Rabs_derive_2	40
Coq.Reals.Ranalysis4X.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4X.Rcontinuity_abs	40
Coq.Reals.Ranalysis4X.continuity_finite_sum	40
Coq.Reals.Ranalysis4X.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4X.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4X.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4X.derivable_finite_sum	40	0.1.0.0.0.3.1.10.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	5.38235402107	2575
Coq.Reals.Ranalysis4X.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4X.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4X.derivable_pt_exp	40
Coq.Reals.Ranalysis4X.derivable_pt_cosh	40
Coq.Reals.Ranalysis4X.derivable_pt_sinh	40
Coq.Reals.Ranalysis4X.derivable_exp	40	0.0.0.2	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0323181152344	6
Coq.Reals.Ranalysis4X.derivable_cosh	40	0.0.0.0.8	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.560865163803	248
Coq.Reals.Ranalysis4X.derivable_sinh	40	0.0.0.0	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0266890525818	4
Coq.Reals.Ranalysis4X.derive_pt_exp	40	2.6.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.203151941299	55
Coq.Reals.Ranalysis4X.derive_pt_cosh	40
Coq.Reals.Ranalysis4X.derive_pt_sinh	40	2.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.918550014496	101
Coq.Reals.Ranalysis4X.sinh_lt	40
Coq.Reals.R_sqrX.Rsqr_neg	40	3.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).	0.0396108627319	11
Coq.Reals.R_sqrX.Rsqr_mult	40	0.1	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0227899551392	3
Coq.Reals.R_sqrX.Rsqr_plus	40
Coq.Reals.R_sqrX.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.029709815979	2
Coq.Reals.R_sqrX.Rsqr_neg_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0259599685669	2
Coq.Reals.R_sqrX.Rsqr_1	40	0.0	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0191469192505	2
Coq.Reals.R_sqrX.Rsqr_gt_0_0	40
Coq.Reals.R_sqrX.Rsqr_pos_lt	40	9.0	search with cache (only 1: intros; only 1: auto with real).	0.146294116974	61
Coq.Reals.R_sqrX.Rsqr_div	40	1.0.5.2.0	search with cache (only 1: intros; only 1: rewrite Rsqr_neg; only 1: unfold Rsqr; only 1: field; only 1: auto with real).	1.45483517647	495
Coq.Reals.R_sqrX.Rsqr_eq_0	40	5.1.2	search with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with real).	0.337012052536	140
Coq.Reals.R_sqrX.Rsqr_minus_plus	40	0.11	search with cache (only 1: intros z t; only 1: ring_Rsqr).	0.268862009048	154
Coq.Reals.R_sqrX.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0240941047668	2
Coq.Reals.R_sqrX.Rsqr_incr_0	40
Coq.Reals.R_sqrX.Rsqr_incr_0_var	40
Coq.Reals.R_sqrX.Rsqr_incr_1	40	3.3.2	search with cache (only 1: unfold Rsqr; only 1: intros r r1 r2 H; only 1: auto with real).	0.553040027618	234
Coq.Reals.R_sqrX.Rsqr_incrst_0	40
Coq.Reals.R_sqrX.Rsqr_incrst_1	40
Coq.Reals.R_sqrX.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqrX.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqrX.neg_pos_Rsqr_le	40
Coq.Reals.R_sqrX.neg_pos_Rsqr_lt	40
Coq.Reals.R_sqrX.Rsqr_bounds_le	40
Coq.Reals.R_sqrX.Rsqr_bounds_lt	40
Coq.Reals.R_sqrX.Rsqr_abs	40
Coq.Reals.R_sqrX.Rsqr_le_abs_0	40
Coq.Reals.R_sqrX.Rsqr_le_abs_1	40
Coq.Reals.R_sqrX.Rsqr_lt_abs_0	40
Coq.Reals.R_sqrX.Rsqr_lt_abs_1	40
Coq.Reals.R_sqrX.Rsqr_inj	40
Coq.Reals.R_sqrX.Rsqr_eq_abs_0	40
Coq.Reals.R_sqrX.Rsqr_eq_asb_1	40
Coq.Reals.R_sqrX.triangle_rectangle	40
Coq.Reals.R_sqrX.triangle_rectangle_lt	40
Coq.Reals.R_sqrX.triangle_rectangle_le	40
Coq.Reals.R_sqrX.Rsqr_inv	40
Coq.Reals.R_sqrX.canonical_Rsqr	40
Coq.Reals.R_sqrX.Rsqr_eq	40
Coq.Reals.Sqrt_regX.sqrt_var_maj	40
Coq.Reals.Sqrt_regX.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_regX.sqrt_continuity_pt	40
Coq.Reals.Sqrt_regX.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_regX.derivable_pt_sqrt	40
Coq.Reals.Sqrt_regX.derive_pt_sqrt	40
Coq.Reals.Sqrt_regX.continuity_pt_sqrt	40
Coq.Reals.Rtrigo_altX.pre_sin_bound	40
Coq.Reals.Rtrigo_altX.pre_cos_bound	40
Coq.Reals.PartSumX.tech1	40
Coq.Reals.PartSumX.tech2	40
Coq.Reals.PartSumX.tech3	40
Coq.Reals.PartSumX.tech4	40
Coq.Reals.PartSumX.tech5	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0182199478149	2
Coq.Reals.PartSumX.tech6	40
Coq.Reals.PartSumX.tech7	40
Coq.Reals.PartSumX.tech11	40
Coq.Reals.PartSumX.tech12	40	8.0	search with cache (only 1: intros; only 1: assumption).	0.0203220844269	10
Coq.Reals.PartSumX.scal_sum	40
Coq.Reals.PartSumX.decomp_sum	40
Coq.Reals.PartSumX.plus_sum	40	2.0.3.5.0.2	search with cache (only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.758401870728	626
Coq.Reals.PartSumX.sum_eq	40
Coq.Reals.PartSumX.uniqueness_sum	40
Coq.Reals.PartSumX.minus_sum	40	2.1.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.249706983566	69
Coq.Reals.PartSumX.sum_decomposition	40
Coq.Reals.PartSumX.sum_Rle	40
Coq.Reals.PartSumX.Rsum_abs	40
Coq.Reals.PartSumX.sum_cte	40
Coq.Reals.PartSumX.sum_growing	40
Coq.Reals.PartSumX.Rabs_triang_gen	40	5.3.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	6.7482919693	5347
Coq.Reals.PartSumX.cond_pos_sum	40
Coq.Reals.PartSumX.cauchy_abs	40
Coq.Reals.PartSumX.cv_cauchy_1	40
Coq.Reals.PartSumX.cv_cauchy_2	40
Coq.Reals.PartSumX.sum_eq_R0	40
Coq.Reals.PartSumX.sum_incr	40
Coq.Reals.PartSumX.sum_cv_maj	40
Coq.Reals.RListX.MaxRlist_P1	40
Coq.Reals.RListX.MinRlist_P1	40
Coq.Reals.RListX.AbsList_P1	40
Coq.Reals.RListX.MinRlist_P2	40
Coq.Reals.RListX.AbsList_P2	40
Coq.Reals.RListX.MaxRlist_P2	40
Coq.Reals.RListX.pos_Rl_P1	40	0.1.1.5.0	search with cache (only 1: destruct l; only 1: intros; only 1: simpl; only 1: now simpl; only 1: reflexivity).	0.74368596077	216
Coq.Reals.RListX.pos_Rl_P2	40
Coq.Reals.RListX.Rlist_P1	40
Coq.Reals.RListX.RList_P0	40
Coq.Reals.RListX.RList_P1	40
Coq.Reals.RListX.RList_P2	40
Coq.Reals.RListX.RList_P3	40
Coq.Reals.RListX.RList_P4	40
Coq.Reals.RListX.RList_P5	40
Coq.Reals.RListX.RList_P6	40
Coq.Reals.RListX.RList_P7	40
Coq.Reals.RListX.RList_P8	40
Coq.Reals.RListX.RList_P9	40
Coq.Reals.RListX.RList_P10	40
Coq.Reals.RListX.RList_P11	40
Coq.Reals.RListX.RList_P12	40
Coq.Reals.RListX.RList_P13	40
Coq.Reals.RListX.RList_P14	40
Coq.Reals.RListX.RList_P15	40
Coq.Reals.RListX.RList_P16	40
Coq.Reals.RListX.RList_P17	40
Coq.Reals.RListX.RList_P18	40	2.5.0.2.0	search with cache (only 1: simple induction l; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	2.24591803551	1071
Coq.Reals.RListX.RList_P19	40
Coq.Reals.RListX.RList_P20	40
Coq.Reals.RListX.RList_P21	40	12.6	search with cache (only 1: intros; only 1: congruence).	1.58268594742	1160
Coq.Reals.RListX.RList_P22	40	6.0.15.0.1	search with cache (only 1: symmetry; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: elim (RList_P9 (r :: l1) l2 (pos_Rl (cons_ORlist (r :: l1) l2) 0)); only 1: reflexivity).	10.6330180168	6453
Coq.Reals.RListX.RList_P24	40
Coq.Reals.RListX.RList_P25	40
Coq.Reals.RListX.RList_P26	40
Coq.Reals.RListX.RList_P29	40
Coq.Reals.ClassicalDedekindRealsX.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindRealsX.lowerCutBelow	40
Coq.Reals.ClassicalDedekindRealsX.lowerCutAbove	40
Coq.Reals.ClassicalDedekindRealsX.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindRealsX.DRealQlim	40
Coq.Reals.ClassicalDedekindRealsX.DRealAbstr	40
Coq.Reals.ClassicalDedekindRealsX.UpperAboveLower	40
Coq.Reals.ClassicalDedekindRealsX.DRealRepr	40
Coq.Reals.ClassicalDedekindRealsX.Rle_antisym	40
Coq.Reals.ClassicalDedekindRealsX.lowerUpper	40
Coq.Reals.ClassicalDedekindRealsX.DRealOpen	40
Coq.Reals.ClassicalDedekindRealsX.DRealReprQ	40
Coq.Reals.ClassicalDedekindRealsX.DRealReprQup	40
Coq.Reals.ClassicalDedekindRealsX.DRealQuot1	40
Coq.Reals.ClassicalDedekindRealsX.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindRealsX.DRealQuot2	40
Coq.Reals.Ranalysis2X.formule	40
Coq.Reals.Ranalysis2X.maj_term1	40
Coq.Reals.Ranalysis2X.maj_term2	40
Coq.Reals.Ranalysis2X.maj_term3	40
Coq.Reals.Ranalysis2X.maj_term4	40
Coq.Reals.Ranalysis2X.D_x_no_cond	40
Coq.Reals.Ranalysis2X.Rabs_4	40
Coq.Reals.Ranalysis2X.Rlt_4	40
Coq.Reals.Ranalysis2X.quadruple	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.028911113739	2
Coq.Reals.Ranalysis2X.quadruple_var	40	1.0	search with cache (only 1: intros; only 1: field).	0.0904240608215	3
Coq.Reals.Ranalysis2X.continuous_neq_0	40
Coq.Reals.RIneqX.Rle_refl	40	7.1.5.0	search with cache (only 1: intro; only 1: right; only 1: apply Rquot1; only 1: reflexivity).	12.0873200893	3206
Coq.Reals.RIneqX.Rge_refl	40	2.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0393438339233	13
Coq.Reals.RIneqX.Rlt_irrefl	40
Coq.Reals.RIneqX.Rgt_irrefl	40	1.0.0.48.0	search with cache (only 1: intros; only 1: intro H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	1.09574985504	4441
Coq.Reals.RIneqX.Rlt_not_eq	40
Coq.Reals.RIneqX.Rgt_not_eq	40
Coq.Reals.RIneqX.Rlt_dichotomy_converse	40	0.0.1.0.7.14.0	search with cache (only 1: intros; only 1: destruct H; only 1: apply Rlt_not_eq; only 1: exact H; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: auto with real).	15.9918370247	16999
Coq.Reals.RIneqX.Req_dec	40
Coq.Reals.RIneqX.Rtotal_order	40	0.0.5.0	search with cache (only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.597723960876	21
Coq.Reals.RIneqX.Rdichotomy	40	0.1.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.523035049438	4
Coq.Reals.RIneqX.Rlt_le	40	0.0.1	search with cache (only 1: intro; only 1: left; only 1: exact H).	0.0257649421692	4
Coq.Reals.RIneqX.Rgt_ge	40	0.22.10	search with cache (only 1: intro y; only 1: left; only 1: auto with real).	5.95224785805	2630
Coq.Reals.RIneqX.Rle_ge	40	1.1.0.0.0.11.1.1	search with cache (only 1: intro; only 1: intros; only 1: destruct H; only 1: red; only 1: tauto; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	5.35486984253	2833
Coq.Reals.RIneqX.Rge_le	40	1.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: intuition eauto  3).	0.0469450950623	6
Coq.Reals.RIneqX.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0242660045624	2
Coq.Reals.RIneqX.Rgt_lt	40	0	search with cache (only 1: trivial).	0.0202929973602	1
Coq.Reals.RIneqX.Rnot_le_lt	40
Coq.Reals.RIneqX.Rnot_ge_gt	40
Coq.Reals.RIneqX.Rnot_le_gt	40	4.0.3	search with cache (only 1: intro; only 1: red; only 1: apply Rnot_le_lt).	0.0442700386047	11
Coq.Reals.RIneqX.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0303621292114	3
Coq.Reals.RIneqX.Rnot_lt_le	40	1.1.2.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: unfold not; only 1: intuition eauto  3).	0.114841938019	10
Coq.Reals.RIneqX.Rnot_gt_le	40	0.3.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.050831079483	7
Coq.Reals.RIneqX.Rnot_gt_ge	40	2.3.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0577681064606	9
Coq.Reals.RIneqX.Rnot_lt_ge	40	0.3.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0525121688843	8
Coq.Reals.RIneqX.Rlt_not_le	40
Coq.Reals.RIneqX.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.079293012619	17
Coq.Reals.RIneqX.Rlt_not_ge	40
Coq.Reals.RIneqX.Rgt_not_ge	40	0.1.2.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto using Rnot_lt_le with rorders; only 1: auto with real).	0.116180181503	26
Coq.Reals.RIneqX.Rle_not_lt	40	0.0.0.1	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.129172086716	30
Coq.Reals.RIneqX.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.0554690361023	6
Coq.Reals.RIneqX.Rle_not_gt	40	0.0.5.4	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	4.27005410194	309
Coq.Reals.RIneqX.Rge_not_gt	40	0.5.1.0	search with cache (only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: auto with real).	0.0543048381805	10
Coq.Reals.RIneqX.Req_le	40	0.0.0.0	search with cache (only 1: intros; only 1: subst; only 1: red; only 1: tauto).	0.0637919902802	4
Coq.Reals.RIneqX.Req_ge	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0367579460144	3
Coq.Reals.RIneqX.Req_le_sym	40	1.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0366849899292	3
Coq.Reals.RIneqX.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: intuition eauto  3).	0.0364289283752	3
Coq.Reals.RIneqX.Rgt_asym	40	0.0.1.1	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: tauto).	0.0400421619415	6
Coq.Reals.RIneqX.Rle_antisym	40
Coq.Reals.RIneqX.Rge_antisym	40	2.1.0	search with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: auto with real).	0.0522019863129	6
Coq.Reals.RIneqX.Rle_le_eq	40	1.2.1.0	search with cache (only 1: intros r1 r2; only 1: red; only 1: unfold Rle; only 1: intuition).	0.449836015701	8
Coq.Reals.RIneqX.Rge_ge_eq	40	2.1.1	search with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: auto with real).	0.0643920898438	7
Coq.Reals.RIneqX.Rlt_eq_compat	40	2.1.2	search with cache (only 1: intros; only 1: subst; only 1: tauto).	0.0472838878632	12
Coq.Reals.RIneqX.Rgt_eq_compat	40	2.1.2.6	search with cache (only 1: unfold Rgt; only 1: intros; only 1: subst; only 1: tauto).	3.43437814713	400
Coq.Reals.RIneqX.Rle_trans	40
Coq.Reals.RIneqX.Rge_trans	40
Coq.Reals.RIneqX.Rgt_trans	40
Coq.Reals.RIneqX.Rle_lt_trans	40	1.0.7	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  3).	6.35329508781	481
Coq.Reals.RIneqX.Rlt_le_trans	40	1.0.0	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  3).	0.0602779388428	4
Coq.Reals.RIneqX.Rge_gt_trans	40
Coq.Reals.RIneqX.Rgt_ge_trans	40
Coq.Reals.RIneqX.Rlt_dec	40	0.3.5.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	7.26019597054	227
Coq.Reals.RIneqX.Rle_dec	40
Coq.Reals.RIneqX.Rgt_dec	40	0.5.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.410773038864	8
Coq.Reals.RIneqX.Rge_dec	40
Coq.Reals.RIneqX.Rlt_le_dec	40	0.1.0	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.0558490753174	4
Coq.Reals.RIneqX.Rgt_ge_dec	40	1.0.0.1.0.1.5.0	search with cache (only 1: intros; only 1: edestruct Rle_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: intuition eauto  4 with real).	9.87402510643	1014
Coq.Reals.RIneqX.Rle_lt_dec	40	0.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.729214191437	4
Coq.Reals.RIneqX.Rge_gt_dec	40	0.1.0.1.1.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	1.6676440239	62
Coq.Reals.RIneqX.Rlt_or_le	40	0.2.0.0.0	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.129617929459	7
Coq.Reals.RIneqX.Rgt_or_ge	40	0.1.0.0.3.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.0704469680786	23
Coq.Reals.RIneqX.Rle_or_lt	40	0.2.0.1.0.1	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros n m; only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.764359951019	112
Coq.Reals.RIneqX.Rge_or_gt	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.764153003693	54
Coq.Reals.RIneqX.Rle_lt_or_eq_dec	40	0.11.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	28.3661799431	874
Coq.Reals.RIneqX.inser_trans_R	40
Coq.Reals.RIneqX.Rplus_0_r	40	0.9.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	8.62501311302	384
Coq.Reals.RIneqX.Rplus_ne	40	18.0	search with cache (only 1: intros; only 1: intuition).	0.435573101044	439
Coq.Reals.RIneqX.Rplus_opp_l	40	4.0	search with cache (only 1: intros; only 1: ring).	5.48216414452	34
Coq.Reals.RIneqX.Rplus_opp_r_uniq	40
Coq.Reals.RIneqX.Rplus_eq_compat_l	40	1.1.1	search with cache (only 1: intros; only 1: subst; only 1: ring).	2.11193990707	42
Coq.Reals.RIneqX.Rplus_eq_compat_r	40	1.2.1	search with cache (only 1: intros; only 1: subst; only 1: ring).	2.10491204262	36
Coq.Reals.RIneqX.Rplus_eq_reg_l	40
Coq.Reals.RIneqX.Rplus_eq_reg_r	40
Coq.Reals.RIneqX.Rplus_0_r_uniq	40	0.1.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.07874584198	6
Coq.Reals.RIneqX.Rplus_eq_0_l	40
Coq.Reals.RIneqX.Rplus_eq_R0	40	0.1.0.3.0.0.1.0.0.0	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto using Rplus_lt_compat_l with real; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	5.19883012772	1142
Coq.Reals.RIneqX.Rinv_r	40
Coq.Reals.RIneqX.Rinv_l_sym	40	3.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0481479167938	7
Coq.Reals.RIneqX.Rinv_r_sym	40	3.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0484890937805	7
Coq.Reals.RIneqX.Rmult_0_r	40	1.2.2.1	search with cache (only 1: intros; only 1: replace r with (r + 0); only 1: ring; only 1: ring).	0.161970853806	20
Coq.Reals.RIneqX.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0349578857422	2
Coq.Reals.RIneqX.Rmult_ne	40	1.8.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: unfold IZR, IPR; only 1: auto with real).	0.670651197433	410
Coq.Reals.RIneqX.Rmult_1_r	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.154253959656	17
Coq.Reals.RIneqX.Rmult_eq_compat_l	40	5.3	search with cache (only 1: intros m n p; only 1: auto with real).	4.23941802979	204
Coq.Reals.RIneqX.Rmult_eq_compat_r	40	2.9.0	search with cache (only 1: intros; only 1: subst; only 1: ring).	26.0363538265	1464
Coq.Reals.RIneqX.Rmult_eq_reg_l	40
Coq.Reals.RIneqX.Rmult_eq_reg_r	40
Coq.Reals.RIneqX.Rmult_integral	40
Coq.Reals.RIneqX.Rmult_eq_0_compat	40
Coq.Reals.RIneqX.Rmult_eq_0_compat_r	40	5.0	search with cache (only 1: intros; only 1: auto with real).	0.266651153564	56
Coq.Reals.RIneqX.Rmult_eq_0_compat_l	40	2	search with cache (only 1: auto with real).	0.226983070374	61
Coq.Reals.RIneqX.Rmult_neq_0_reg	40	17.0	search with cache (only 1: intros; only 1: intuition eauto  4 with real).	0.608461856842	383
Coq.Reals.RIneqX.Rmult_integral_contrapositive	40
Coq.Reals.RIneqX.Rmult_integral_contrapositive_currified	40	3.1	search with cache (only 1: intros; only 1: auto with real).	0.231048107147	35
Coq.Reals.RIneqX.Rmult_plus_distr_r	40	7.0	search with cache (only 1: intros; only 1: ring).	5.41468405724	29
Coq.Reals.RIneqX.Rsqr_0	40
Coq.Reals.RIneqX.Rsqr_0_uniq	40
Coq.Reals.RIneqX.Ropp_eq_compat	40	2.2.1.0.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite H; only 1: replace y with (- x + x + y) by ring; only 1: ring).	0.362320899963	43
Coq.Reals.RIneqX.Ropp_0	40	2	search with cache (only 1: ring).	0.0459070205688	3
Coq.Reals.RIneqX.Ropp_eq_0_compat	40	0.5.1	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.121581077576	24
Coq.Reals.RIneqX.Ropp_involutive	40	3.1	search with cache (only 1: intros; only 1: ring).	0.965153932571	16
Coq.Reals.RIneqX.Ropp_neq_0_compat	40
Coq.Reals.RIneqX.Ropp_plus_distr	40
Coq.Reals.RIneqX.Ropp_mult_distr_l	40
Coq.Reals.RIneqX.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0363669395447	2
Coq.Reals.RIneqX.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0408661365509	2
Coq.Reals.RIneqX.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.039115190506	2
Coq.Reals.RIneqX.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0390200614929	2
Coq.Reals.RIneqX.Rminus_0_r	40	1.0.0	search with cache (only 1: unfold Rminus; only 1: intros; only 1: ring).	1.2510330677	19
Coq.Reals.RIneqX.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0391731262207	2
Coq.Reals.RIneqX.Ropp_minus_distr	40	0.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.03706407547	3
Coq.Reals.RIneqX.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.033576965332	2
Coq.Reals.RIneqX.Rminus_diag_eq	40	0.2.1.8	search with cache (only 1: intros x y H; only 1: unfold Rminus; only 1: rewrite H; only 1: ring).	1.0205719471	372
Coq.Reals.RIneqX.Rminus_eq_0	40	0.1	search with cache (only 1: unfold Rminus; only 1: ring).	0.049791097641	3
Coq.Reals.RIneqX.Rminus_diag_uniq	40
Coq.Reals.RIneqX.Rminus_diag_uniq_sym	40
Coq.Reals.RIneqX.Rplus_minus	40	5.2	search with cache (only 1: intros; only 1: ring).	0.0368390083313	9
Coq.Reals.RIneqX.Rminus_eq_contra	40	8.0	search with cache (only 1: intros; only 1: auto with real).	0.296287059784	66
Coq.Reals.RIneqX.Rminus_not_eq	40	1.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0504438877106	5
Coq.Reals.RIneqX.Rminus_not_eq_right	40	3.2.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto with real).	0.0705361366272	13
Coq.Reals.RIneqX.Rmult_minus_distr_l	40	1.0	search with cache (only 1: intros; only 1: ring).	0.0789971351624	22
Coq.Reals.RIneqX.Rmult_minus_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.044182062149	2
Coq.Reals.RIneqX.Rinv_1	40	0	search with cache (only 1: field).	0.0323269367218	1
Coq.Reals.RIneqX.Rinv_neq_0_compat	40
Coq.Reals.RIneqX.Rinv_involutive	40
Coq.Reals.RIneqX.Rinv_mult_distr	40
Coq.Reals.RIneqX.Ropp_inv_permute	40	6.0.1	search with cache (only 1: intros; only 1: field; only 1: apply H).	0.0532717704773	10
Coq.Reals.RIneqX.Rinv_r_simpl_r	40	1.1.0.1	search with cache (only 1: intros; only 1: field; only 1: red; only 1: apply H).	0.139767885208	15
Coq.Reals.RIneqX.Rinv_r_simpl_l	40	1.1.3.0	search with cache (only 1: intros; only 1: field; only 1: red; only 1: apply H).	0.36686205864	36
Coq.Reals.RIneqX.Rinv_r_simpl_m	40	1.1.5.0	search with cache (only 1: intros; only 1: field; only 1: red; only 1: apply H).	3.7636449337	676
Coq.Reals.RIneqX.Rinv_mult_simpl	40
Coq.Reals.RIneqX.Rplus_gt_compat_l	40	3.0.11	search with cache (only 1: red; only 1: intros; only 1: auto with real).	1.8496119976	1033
Coq.Reals.RIneqX.Rplus_lt_compat_r	40
Coq.Reals.RIneqX.Rplus_gt_compat_r	40	6.3.2.1	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.870131015778	543
Coq.Reals.RIneqX.Rplus_le_compat_l	40	1.0.10.1	search with cache (only 1: intros; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition eauto  4 with real).	4.8849298954	504
Coq.Reals.RIneqX.Rplus_ge_compat_l	40	1.4.14.11	search with cache (only 1: intros r1 r2; only 1: unfold Rge; only 1: intro; only 1: intuition).	14.6488909721	2076
Coq.Reals.RIneqX.Rplus_le_compat_r	40	3.2.1.2	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	3.22384500504	650
Coq.Reals.RIneqX.Rplus_ge_compat_r	40	1.4.15.12	search with cache (only 1: intros r1 r2; only 1: unfold Rge; only 1: intro; only 1: intuition).	13.211908102	2143
Coq.Reals.RIneqX.Rplus_lt_compat	40
Coq.Reals.RIneqX.Rplus_le_compat	40
Coq.Reals.RIneqX.Rplus_gt_compat	40	1.1.0.0.2	search with cache (only 1: intros; only 1: red; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0522267818451	20
Coq.Reals.RIneqX.Rplus_ge_compat	40
Coq.Reals.RIneqX.Rplus_lt_le_compat	40
Coq.Reals.RIneqX.Rplus_le_lt_compat	40
Coq.Reals.RIneqX.Rplus_gt_ge_compat	40	2.1.0.3	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.145704984665	38
Coq.Reals.RIneqX.Rplus_ge_gt_compat	40	0.0.1.4.6.1.4	search with cache (only 1: intros; only 1: red; only 1: edestruct Rlt_or_le; only 1: eauto with rorders; only 1: apply Rlt_le_trans with (r2 + r3); only 1: eauto with real; only 1: auto with real).	4.7298579216	2433
Coq.Reals.RIneqX.Rplus_lt_0_compat	40
Coq.Reals.RIneqX.Rplus_le_lt_0_compat	40
Coq.Reals.RIneqX.Rplus_lt_le_0_compat	40
Coq.Reals.RIneqX.Rplus_le_le_0_compat	40
Coq.Reals.RIneqX.sum_inequa_Rle_lt	40	3.1.0	search with cache (only 1: intros; only 1: pattern x at 1; only 1: intuition).	0.0957419872284	7
Coq.Reals.RIneqX.Rplus_lt_reg_l	40
Coq.Reals.RIneqX.Rplus_lt_reg_r	40
Coq.Reals.RIneqX.Rplus_le_reg_l	40
Coq.Reals.RIneqX.Rplus_le_reg_r	40
Coq.Reals.RIneqX.Rplus_gt_reg_l	40	0.0.0.0.0.0.4.0.15	search with cache (only 1: unfold Rgt; only 1: intros; only 1: rewrite Rlt_def; only 1: apply CRealLtForget; only 1: apply (CReal_plus_lt_reg_l (Rrepr r)); only 1: rewrite <- Rrepr_plus, <- Rrepr_plus; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	8.63805294037	3399
Coq.Reals.RIneqX.Rplus_ge_reg_l	40
Coq.Reals.RIneqX.Rplus_le_reg_pos_r	40
Coq.Reals.RIneqX.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneqX.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneqX.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneqX.Ropp_gt_lt_contravar	40
Coq.Reals.RIneqX.Ropp_lt_gt_contravar	40	0.5.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.410055875778	18
Coq.Reals.RIneqX.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0658118724823	8
Coq.Reals.RIneqX.Ropp_gt_contravar	40	3.2.0	search with cache (only 1: intros; only 1: unfold Rgt; only 1: eauto with rorders).	1.2395260334	29
Coq.Reals.RIneqX.Ropp_le_ge_contravar	40	2.1.2.3	search with cache (only 1: do 2 intro; only 1: red; only 1: unfold Rle; only 1: intuition).	4.59025597572	314
Coq.Reals.RIneqX.Ropp_ge_le_contravar	40	0.3.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0429379940033	7
Coq.Reals.RIneqX.Ropp_le_contravar	40	0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0916550159454	4
Coq.Reals.RIneqX.Ropp_ge_contravar	40	0.0.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.102676868439	4
Coq.Reals.RIneqX.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneqX.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0625789165497	4
Coq.Reals.RIneqX.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.038910150528	4
Coq.Reals.RIneqX.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0364980697632	4
Coq.Reals.RIneqX.Ropp_0_le_ge_contravar	40
Coq.Reals.RIneqX.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0420010089874	4
Coq.Reals.RIneqX.Ropp_lt_cancel	40
Coq.Reals.RIneqX.Ropp_gt_cancel	40	2.3.1	search with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.0300159454346	9
Coq.Reals.RIneqX.Ropp_le_cancel	40
Coq.Reals.RIneqX.Ropp_ge_cancel	40
Coq.Reals.RIneqX.Rmult_lt_compat_r	40
Coq.Reals.RIneqX.Rmult_gt_compat_r	40	9	search with cache (only 1: auto using Ropp_lt_cancel with rorders).	0.136029005051	71
Coq.Reals.RIneqX.Rmult_gt_compat_l	40	4.6.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.407243013382	216
Coq.Reals.RIneqX.Rmult_le_compat_l	40
Coq.Reals.RIneqX.Rmult_le_compat_r	40
Coq.Reals.RIneqX.Rmult_ge_compat_l	40
Coq.Reals.RIneqX.Rmult_ge_compat_r	40	6.4.2.3	search with cache (only 1: intros; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: eauto using Rmult_le_compat_l with rorders).	16.2477087975	6552
Coq.Reals.RIneqX.Rmult_le_compat	40
Coq.Reals.RIneqX.Rmult_ge_compat	40
Coq.Reals.RIneqX.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneqX.Rmult_le_0_lt_compat	40
Coq.Reals.RIneqX.Rmult_lt_0_compat	40
Coq.Reals.RIneqX.Rmult_le_compat_neg_l	40
Coq.Reals.RIneqX.Rmult_le_ge_compat_neg_l	40	0.2.0.4.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.454319000244	136
Coq.Reals.RIneqX.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneqX.Rmult_lt_reg_l	40
Coq.Reals.RIneqX.Rmult_lt_reg_r	40
Coq.Reals.RIneqX.Rmult_gt_reg_l	40	5.0.1.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0817329883575	13
Coq.Reals.RIneqX.Rmult_le_reg_l	40
Coq.Reals.RIneqX.Rmult_le_reg_r	40
Coq.Reals.RIneqX.Rlt_minus	40
Coq.Reals.RIneqX.Rgt_minus	40	0.0.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0437138080597	4
Coq.Reals.RIneqX.Rlt_Rminus	40
Coq.Reals.RIneqX.Rle_minus	40	6.4.2.1.3.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: unfold Rle; only 1: auto with real; only 1: elim H; only 1: unfold Rminus; only 1: auto with real).	17.6186070442	7883
Coq.Reals.RIneqX.Rge_minus	40
Coq.Reals.RIneqX.Rminus_lt	40
Coq.Reals.RIneqX.Rminus_gt	40	0.0.1.5.1.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	2.36362695694	866
Coq.Reals.RIneqX.Rminus_gt_0_lt	40
Coq.Reals.RIneqX.Rminus_le	40	0.0.0.0.0.0.1.2.3.1	search with cache (only 1: unfold Rle; only 1: intro; only 1: intuition eauto  3; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring; only 1: auto with real).	22.4959361553	6101
Coq.Reals.RIneqX.Rminus_ge	40
Coq.Reals.RIneqX.tech_Rplus	40
Coq.Reals.RIneqX.Rle_0_sqr	40
Coq.Reals.RIneqX.Rlt_0_sqr	40
Coq.Reals.RIneqX.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneqX.Rplus_sqr_eq_0	40
Coq.Reals.RIneqX.Rlt_0_1	40	0.2.2	search with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0589299201965	16
Coq.Reals.RIneqX.Rle_0_1	40	3.9	search with cache (only 1: constructor; only 1: auto with real).	6.19407105446	845
Coq.Reals.RIneqX.Rinv_0_lt_compat	40
Coq.Reals.RIneqX.Rinv_lt_0_compat	40	0.0.0.1.1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	4.55261301994	1219
Coq.Reals.RIneqX.Rinv_lt_contravar	40
Coq.Reals.RIneqX.Rinv_1_lt_contravar	40
Coq.Reals.RIneqX.Rle_lt_0_plus_1	40	0.0.1.8	search with cache (only 1: intros; only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.506465911865	291
Coq.Reals.RIneqX.Rlt_plus_1	40	7	search with cache (only 1: apply Rlt_n_Sn).	0.0429470539093	28
Coq.Reals.RIneqX.tech_Rgt_minus	40
Coq.Reals.RIneqX.S_INR	40	2.0.0.3	search with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: auto with real).	0.0880560874939	15
Coq.Reals.RIneqX.S_O_plus_INR	40
Coq.Reals.RIneqX.plus_INR	40
Coq.Reals.RIneqX.minus_INR	40
Coq.Reals.RIneqX.mult_INR	40
Coq.Reals.RIneqX.pow_INR	40
Coq.Reals.RIneqX.lt_0_INR	40
Coq.Reals.RIneqX.lt_INR	40
Coq.Reals.RIneqX.lt_1_INR	40
Coq.Reals.RIneqX.pos_INR_nat_of_P	40
Coq.Reals.RIneqX.pos_INR	40
Coq.Reals.RIneqX.INR_lt	40
Coq.Reals.RIneqX.le_INR	40	1.1.3.1.0.0.2	search with cache (only 1: apply le_elim_rel; only 1: simpl; only 1: intro n; only 1: apply pos_INR; only 1: intros n m; only 1: repeat rewrite S_INR; only 1: auto with real).	4.48993706703	1998
Coq.Reals.RIneqX.INR_not_0	40	0.5.3.0.2	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: red; only 1: auto with real; only 1: auto with arith).	2.44356489182	855
Coq.Reals.RIneqX.not_0_INR	40
Coq.Reals.RIneqX.not_INR	40
Coq.Reals.RIneqX.INR_eq	40
Coq.Reals.RIneqX.INR_le	40
Coq.Reals.RIneqX.not_1_INR	40
Coq.Reals.RIneqX.IZN	40	0.1.0.74	search with cache (only 1: intros x y; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	24.4732739925	16423
Coq.Reals.RIneqX.INR_IPR	40
Coq.Reals.RIneqX.INR_IZR_INZ	40
Coq.Reals.RIneqX.plus_IZR_NEG_POS	40
Coq.Reals.RIneqX.plus_IZR	40
Coq.Reals.RIneqX.mult_IZR	40
Coq.Reals.RIneqX.pow_IZR	40
Coq.Reals.RIneqX.succ_IZR	40	1.4.0.0.0.7.1.0.0	search with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	10.949655056	3146
Coq.Reals.RIneqX.opp_IZR	40	4.2.0.0.2.7	search with cache (only 1: intro t; only 1: case t; only 1: auto with real; only 1: auto with real; only 1: unfold IZR; only 1: auto with real).	2.54681611061	894
Coq.Reals.RIneqX.minus_IZR	40
Coq.Reals.RIneqX.Z_R_minus	40
Coq.Reals.RIneqX.lt_0_IZR	40
Coq.Reals.RIneqX.lt_IZR	40
Coq.Reals.RIneqX.eq_IZR_R0	40
Coq.Reals.RIneqX.eq_IZR	40
Coq.Reals.RIneqX.not_0_IZR	40
Coq.Reals.RIneqX.le_0_IZR	40
Coq.Reals.RIneqX.le_IZR	40
Coq.Reals.RIneqX.le_IZR_R1	40
Coq.Reals.RIneqX.IZR_ge	40
Coq.Reals.RIneqX.IZR_le	40
Coq.Reals.RIneqX.IZR_lt	40
Coq.Reals.RIneqX.IZR_neq	40
Coq.Reals.RIneqX.one_IZR_lt1	40
Coq.Reals.RIneqX.one_IZR_r_R1	40
Coq.Reals.RIneqX.single_z_r_R1	40
Coq.Reals.RIneqX.tech_single_z_r_R1	40
Coq.Reals.RIneqX.Rmult_le_pos	40
Coq.Reals.RIneqX.Rinv_le_contravar	40
Coq.Reals.RIneqX.Rle_Rinv	40
Coq.Reals.RIneqX.Ropp_div	40
Coq.Reals.RIneqX.Ropp_div_den	40	0.2.1.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: intros; only 1: field; only 1: auto with real).	0.10329580307	8
Coq.Reals.RIneqX.double	40	2.6	search with cache (only 1: intros; only 1: ring).	0.0815558433533	10
Coq.Reals.RIneqX.double_var	40
Coq.Reals.RIneqX.R_rm	40
Coq.Reals.RIneqX.Zeq_bool_IZR	40
Coq.Reals.RIneqX.Rmult_ge_0_gt_0_lt_compat	40	1.1.2.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.555509090424	101
Coq.Reals.RIneqX.le_epsilon	40
Coq.Reals.RIneqX.completeness_weak	40
Coq.Reals.RIneqX.Rdiv_lt_0_compat	40
Coq.Reals.RIneqX.Rdiv_plus_distr	40	0.7.8	search with cache (only 1: intros r r1 r2; only 1: unfold Rdiv; only 1: ring).	33.6978030205	2770
Coq.Reals.RIneqX.Rdiv_minus_distr	40	0.0.5	search with cache (only 1: unfold Rdiv; only 1: intros; only 1: ring).	0.220210075378	61
Coq.Reals.RIneqX.Req_EM_T	40
Coq.Reals.RIneqX.pos_half_prf	40	0	search with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.0203540325165	1
Coq.Reals.Rsqrt_defX.dicho_comp	40
Coq.Reals.Rsqrt_defX.dicho_lb_growing	40
Coq.Reals.Rsqrt_defX.dicho_up_decreasing	40
Coq.Reals.Rsqrt_defX.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_defX.dicho_lb_maj	40
Coq.Reals.Rsqrt_defX.dicho_up_min_x	40
Coq.Reals.Rsqrt_defX.dicho_up_min	40
Coq.Reals.Rsqrt_defX.dicho_lb_cv	40
Coq.Reals.Rsqrt_defX.dicho_up_cv	40
Coq.Reals.Rsqrt_defX.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_defX.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_defX.pow_2_n_growing	40
Coq.Reals.Rsqrt_defX.pow_2_n_infty	40
Coq.Reals.Rsqrt_defX.cv_dicho	40
Coq.Reals.Rsqrt_defX.continuity_seq	40
Coq.Reals.Rsqrt_defX.dicho_lb_car	40
Coq.Reals.Rsqrt_defX.dicho_up_car	40
Coq.Reals.Rsqrt_defX.cv_pow_half	40
Coq.Reals.Rsqrt_defX.IVT	40
Coq.Reals.Rsqrt_defX.IVT_cor	40
Coq.Reals.Rsqrt_defX.Rsqrt_exists	40
Coq.Reals.Rsqrt_defX.Rsqrt_positivity	40
Coq.Reals.Rsqrt_defX.Rsqrt_Rsqrt	40
Coq.Reals.RcompleteX.R_complete	40
Coq.Reals.RuncountableX.in_holed_interval_dec	40
Coq.Reals.RuncountableX.middle_in_interval	40
Coq.Reals.RuncountableX.point_in_holed_interval_works	40
Coq.Reals.RuncountableX.first_in_holed_interval	40
Coq.Reals.RuncountableX.first_in_holed_interval_works	40
Coq.Reals.RuncountableX.split_couple_eq	40	0.3.2	search with cache (only 1: intros; only 1: injection H; only 1: auto).	0.424510002136	99
Coq.Reals.RuncountableX.first_two_in_interval_works	40
Coq.Reals.RuncountableX.tearing_sequences	40
Coq.Reals.RuncountableX.tearing_sequences_projsig	40
Coq.Reals.RuncountableX.tearing_sequences_inc_dec	40
Coq.Reals.RuncountableX.split_lt_succ	40
Coq.Reals.RuncountableX.increase_seq_transit	40
Coq.Reals.RuncountableX.decrease_seq_transit	40
Coq.Reals.RuncountableX.tearing_sequences_ordered_forall	40
Coq.Reals.RuncountableX.torn_number	40
Coq.Reals.RuncountableX.torn_number_above_first_sequence	40
Coq.Reals.RuncountableX.torn_number_below_second_sequence	40
Coq.Reals.RuncountableX.limit_index_above_all_indices	40
Coq.Reals.RuncountableX.first_indices_increasing	40
Coq.Reals.RuncountableX.R_uncountable	40
Coq.Reals.Exp_propX.E1_cvg	40
Coq.Reals.Exp_propX.exp_form	40
Coq.Reals.Exp_propX.div2_double	40	3	search with cache (only 1: apply Nat.div2_double).	0.0257248878479	4
Coq.Reals.Exp_propX.div2_S_double	40	2	search with cache (only 1: apply Nat.div2_succ_double).	0.0230720043182	3
Coq.Reals.Exp_propX.div2_not_R0	40	2.0.1.1.6.0.0.41	search with cache (only 1: intro n; only 1: destruct n; only 1: inversion 1; only 1: induction n; only 1: inversion 1; only 1: Nat.order; only 1: intros _; only 1: apply Nat.lt_0_succ).	14.5400350094	18856
Coq.Reals.Exp_propX.Reste_E_maj	40
Coq.Reals.Exp_propX.maj_Reste_cv_R0	40
Coq.Reals.Exp_propX.Reste_E_cv	40
Coq.Reals.Exp_propX.exp_plus	40
Coq.Reals.Exp_propX.exp_pos_pos	40
Coq.Reals.Exp_propX.exp_pos	40
Coq.Reals.Exp_propX.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_propX.derivable_pt_lim_exp	40
Coq.Reals.AlembertX.Alembert_C1	40
Coq.Reals.AlembertX.Alembert_C2	40
Coq.Reals.AlembertX.AlembertC3_step1	40
Coq.Reals.AlembertX.AlembertC3_step2	40
Coq.Reals.AlembertX.Alembert_C3	40
Coq.Reals.AlembertX.Alembert_C4	40
Coq.Reals.AlembertX.Alembert_C5	40
Coq.Reals.AlembertX.Alembert_C6	40
Coq.Reals.RseriesX.EUn_noempty	40
Coq.Reals.RseriesX.Un_in_EUn	40
Coq.Reals.RseriesX.Un_bound_imp	40
Coq.Reals.RseriesX.growing_prop	40
Coq.Reals.RseriesX.Un_cv_crit_lub	40
Coq.Reals.RseriesX.Un_cv_crit	40
Coq.Reals.RseriesX.finite_greater	40
Coq.Reals.RseriesX.cauchy_bound	40
Coq.Reals.RseriesX.GP_infinite	40
Coq.Reals.RseriesX.CV_shift	40
Coq.Reals.RseriesX.CV_shift'	40	0.0.2.3.0.0.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists (N + k)%nat; only 1: intros n nN; only 1: apply Pn; only 1: apply Nat.le_trans with (N + k)%nat; only 1: auto with arith; only 1: auto with arith).	0.931802034378	229
Coq.Reals.RseriesX.Un_growing_shift	40	3.1.16	search with cache (only 1: intros n IH a m; only 1: Nat.nzsimpl; only 1: auto).	2.36042690277	1065
Coq.Reals.RiemannIntX.phi_sequence_prop	40
Coq.Reals.RiemannIntX.RiemannInt_P1	40
Coq.Reals.RiemannIntX.RiemannInt_P2	40
Coq.Reals.RiemannIntX.RiemannInt_P3	40
Coq.Reals.RiemannIntX.RiemannInt_exists	40
Coq.Reals.RiemannIntX.RiemannInt_P4	40
Coq.Reals.RiemannIntX.RinvN_pos	40
Coq.Reals.RiemannIntX.RinvN_cv	40
Coq.Reals.RiemannIntX.Riemann_integrable_ext	40
Coq.Reals.RiemannIntX.RiemannInt_P5	40
Coq.Reals.RiemannIntX.maxN	40
Coq.Reals.RiemannIntX.Heine_cor1	40
Coq.Reals.RiemannIntX.Heine_cor2	40
Coq.Reals.RiemannIntX.SubEqui_P1	40	5	search with cache (only 1: split).	0.108453035355	31
Coq.Reals.RiemannIntX.SubEqui_P2	40
Coq.Reals.RiemannIntX.SubEqui_P3	40
Coq.Reals.RiemannIntX.SubEqui_P4	40
Coq.Reals.RiemannIntX.SubEqui_P5	40
Coq.Reals.RiemannIntX.SubEqui_P6	40
Coq.Reals.RiemannIntX.SubEqui_P7	40
Coq.Reals.RiemannIntX.SubEqui_P8	40
Coq.Reals.RiemannIntX.SubEqui_P9	40
Coq.Reals.RiemannIntX.RiemannInt_P6	40
Coq.Reals.RiemannIntX.RiemannInt_P7	40
Coq.Reals.RiemannIntX.continuity_implies_RiemannInt	40
Coq.Reals.RiemannIntX.RiemannInt_P8	40
Coq.Reals.RiemannIntX.RiemannInt_P9	40
Coq.Reals.RiemannIntX.RiemannInt_P10	40
Coq.Reals.RiemannIntX.RiemannInt_P11	40
Coq.Reals.RiemannIntX.RiemannInt_P12	40
Coq.Reals.RiemannIntX.RiemannInt_P13	40
Coq.Reals.RiemannIntX.RiemannInt_P14	40
Coq.Reals.RiemannIntX.RiemannInt_P15	40
Coq.Reals.RiemannIntX.RiemannInt_P16	40
Coq.Reals.RiemannIntX.Rle_cv_lim	40
Coq.Reals.RiemannIntX.RiemannInt_P17	40
Coq.Reals.RiemannIntX.RiemannInt_P18	40
Coq.Reals.RiemannIntX.RiemannInt_P19	40
Coq.Reals.RiemannIntX.FTC_P1	40
Coq.Reals.RiemannIntX.RiemannInt_P20	40
Coq.Reals.RiemannIntX.RiemannInt_P21	40
Coq.Reals.RiemannIntX.RiemannInt_P22	40
Coq.Reals.RiemannIntX.RiemannInt_P23	40
Coq.Reals.RiemannIntX.RiemannInt_P24	40
Coq.Reals.RiemannIntX.RiemannInt_P25	40
Coq.Reals.RiemannIntX.RiemannInt_P26	40
Coq.Reals.RiemannIntX.RiemannInt_P27	40
Coq.Reals.RiemannIntX.RiemannInt_P28	40
Coq.Reals.RiemannIntX.RiemannInt_P29	40
Coq.Reals.RiemannIntX.RiemannInt_P30	40
Coq.Reals.RiemannIntX.RiemannInt_P31	40
Coq.Reals.RiemannIntX.RiemannInt_P32	40
Coq.Reals.RiemannIntX.RiemannInt_P33	40
Coq.Reals.RiemannIntX.FTC_Riemann	40
Coq.Reals.RiemannIntX.RiemannInt_const_bound	40
Coq.Reals.RiemannIntX.Riemann_integrable_scal	40
Coq.Reals.RiemannIntX.Riemann_integrable_Ropp	40
Coq.Reals.AltSeriesX.CV_ALT_step0	40
Coq.Reals.AltSeriesX.CV_ALT_step1	40
Coq.Reals.AltSeriesX.CV_ALT_step2	40
Coq.Reals.AltSeriesX.CV_ALT_step3	40
Coq.Reals.AltSeriesX.CV_ALT_step4	40
Coq.Reals.AltSeriesX.CV_ALT	40
Coq.Reals.AltSeriesX.alternated_series	40
Coq.Reals.AltSeriesX.alternated_series_ineq	40
Coq.Reals.AltSeriesX.PI_tg_pos	40	0.0.0.27.14	search with cache (only 1: left; only 1: apply Rinv_0_lt_compat; only 1: Nat.nzsimpl'; only 1: rewrite S_INR; only 1: auto with real).	9.81498193741	9195
Coq.Reals.AltSeriesX.PI_tg_decreasing	40
Coq.Reals.AltSeriesX.PI_tg_cv	40
Coq.Reals.AltSeriesX.exist_PI	40
Coq.Reals.AltSeriesX.Alt_PI_ineq	40
Coq.Reals.AltSeriesX.Alt_PI_RGT_0	40
Coq.Reals.Rtrigo_factsX.sin2_bound	40
Coq.Reals.Rtrigo_factsX.cos2_bound	40
Coq.Reals.Rtrigo_factsX.cos_sin	40
Coq.Reals.Rtrigo_factsX.cos_sin_opp	40
Coq.Reals.Rtrigo_factsX.cos_sin_Rabs	40
Coq.Reals.Rtrigo_factsX.sin_cos	40
Coq.Reals.Rtrigo_factsX.sin_cos_opp	40
Coq.Reals.Rtrigo_factsX.sin_cos_Rabs	40
Coq.Reals.Rtrigo_factsX.tan_sin	40
Coq.Reals.Rtrigo_factsX.tan_sin_opp	40
Coq.Reals.Rtrigo_factsX.tan_cos	40
Coq.Reals.Rtrigo_factsX.tan_cos_opp	40
Coq.Reals.Rtrigo_factsX.sin_tan	40
Coq.Reals.Rtrigo_factsX.cos_tan	40
Coq.Reals.Rtrigo_factsX.sin_pi_minus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0650401115417	5
Coq.Reals.Rtrigo_factsX.sin_pi_plus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0704698562622	5
Coq.Reals.Rtrigo_factsX.cos_pi_minus	40
Coq.Reals.Rtrigo_factsX.cos_pi_plus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0703160762787	5
Coq.Reals.Rtrigo_factsX.tan_pi_minus	40
Coq.Reals.Rtrigo_factsX.tan_pi_plus	40
Coq.Reals.RfunctionsX.INR_fact_neq_0	40
Coq.Reals.RfunctionsX.fact_simpl	40	6.6	search with cache (only 1: simpl; only 1: intuition).	1.27153110504	390
Coq.Reals.RfunctionsX.simpl_fact	40
Coq.Reals.RfunctionsX.pow_O	40	0	search with cache (only 1: auto with real).	0.0125961303711	1
Coq.Reals.RfunctionsX.pow_1	40	4.0.4	search with cache (only 1: intros; only 1: simpl; only 1: auto with real).	0.207205057144	82
Coq.Reals.RfunctionsX.pow_add	40	1.0.1.0.0.0.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.407886981964	88
Coq.Reals.RfunctionsX.Rpow_mult_distr	40
Coq.Reals.RfunctionsX.pow_nonzero	40
Coq.Reals.RfunctionsX.pow_RN_plus	40	1.15.1.0.1.0.0.2	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: repeat rewrite Rmult_assoc; only 1: auto with real).	39.4794938564	13452
Coq.Reals.RfunctionsX.pow_lt	40
Coq.Reals.RfunctionsX.Rlt_pow_R1	40
Coq.Reals.RfunctionsX.Rlt_pow	40
Coq.Reals.RfunctionsX.tech_pow_Rmult	40	0.0.2.0	search with cache (only 1: simpl; only 1: intros x n; only 1: apply Rmult_eq_compat_l; only 1: auto with real).	0.0515458583832	6
Coq.Reals.RfunctionsX.tech_pow_Rplus	40	0.1.7	search with cache (only 1: intros x y n; only 1: repeat rewrite S_INR; only 1: ring).	0.209748029709	68
Coq.Reals.RfunctionsX.poly	40
Coq.Reals.RfunctionsX.Power_monotonic	40
Coq.Reals.RfunctionsX.RPow_abs	40
Coq.Reals.RfunctionsX.Pow_x_infinity	40
Coq.Reals.RfunctionsX.pow_ne_zero	40	12.0.11.0.1.1	search with cache (only 1: intro; only 1: case n; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: auto with real).	30.739180088	14571
Coq.Reals.RfunctionsX.Rinv_pow	40
Coq.Reals.RfunctionsX.pow_lt_1_zero	40
Coq.Reals.RfunctionsX.pow_R1	40
Coq.Reals.RfunctionsX.pow_Rsqr	40
Coq.Reals.RfunctionsX.pow_le	40	2.0.5.1.0.1.0.0.5.5	search with cache (only 1: destruct 1; only 1: apply Rge_le; only 1: auto with real rorders; only 1: elim n; only 1: auto with real; only 1: intros; only 1: simpl; only 1: case H; only 1: rewrite Rmult_0_l; only 1: auto with real).	31.0212790966	22759
Coq.Reals.RfunctionsX.pow_1_even	40
Coq.Reals.RfunctionsX.pow_1_odd	40
Coq.Reals.RfunctionsX.pow_1_abs	40
Coq.Reals.RfunctionsX.pow_mult	40
Coq.Reals.RfunctionsX.pow_incr	40
Coq.Reals.RfunctionsX.pow_R1_Rle	40
Coq.Reals.RfunctionsX.Rle_pow	40
Coq.Reals.RfunctionsX.pow1	40	2.3.0.0.0.0.7	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto with real rorders; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: ring).	2.4030649662	938
Coq.Reals.RfunctionsX.pow_Rabs	40
Coq.Reals.RfunctionsX.pow_maj_Rabs	40
Coq.Reals.RfunctionsX.Rsqr_pow2	40	2.4.0.4	search with cache (only 1: simpl; only 1: intros; only 1: rewrite <- Rmult_assoc; only 1: auto with real).	0.431911945343	244
Coq.Reals.RfunctionsX.intP	40
Coq.Reals.RfunctionsX.Zpower_NR0	40
Coq.Reals.RfunctionsX.powerRZ_O	40	3	search with cache (only 1: auto with real rorders).	0.0197920799255	12
Coq.Reals.RfunctionsX.powerRZ_1	40	4.17.4	search with cache (only 1: intros; only 1: simpl; only 1: auto with real).	2.00873708725	2640
Coq.Reals.RfunctionsX.powerRZ_NOR	40
Coq.Reals.RfunctionsX.powerRZ_pos_sub	40
Coq.Reals.RfunctionsX.powerRZ_add	40
Coq.Reals.RfunctionsX.Zpower_nat_powerRZ	40
Coq.Reals.RfunctionsX.Zpower_pos_powerRZ	40
Coq.Reals.RfunctionsX.powerRZ_lt	40
Coq.Reals.RfunctionsX.powerRZ_le	40	9.0	search with cache (only 1: intros x z; only 1: auto with real).	0.399385213852	181
Coq.Reals.RfunctionsX.Zpower_nat_powerRZ_absolu	40
Coq.Reals.RfunctionsX.powerRZ_R1	40
Coq.Reals.RfunctionsX.pow_powerRZ	40	0.0.1.3.0.7	search with cache (only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: auto with real rorders; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	1.28960609436	297
Coq.Reals.RfunctionsX.powerRZ_ind	40
Coq.Reals.RfunctionsX.powerRZ_inv	40
Coq.Reals.RfunctionsX.powerRZ_neg	40
Coq.Reals.RfunctionsX.powerRZ_mult_distr	40
Coq.Reals.RfunctionsX.GP_finite	40
Coq.Reals.RfunctionsX.sum_f_R0_triangle	40
Coq.Reals.RfunctionsX.R_dist_pos	40
Coq.Reals.RfunctionsX.R_dist_sym	40
Coq.Reals.RfunctionsX.R_dist_refl	40
Coq.Reals.RfunctionsX.R_dist_eq	40	0.2.3.14.0	search with cache (only 1: unfold R_dist; only 1: intros Eq1; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).	5.15480303764	4288
Coq.Reals.RfunctionsX.R_dist_tri	40
Coq.Reals.RfunctionsX.R_dist_plus	40
Coq.Reals.RfunctionsX.R_dist_mult_l	40
Coq.Reals.Cos_plusX.Majxy_cv_R0	40
Coq.Reals.Cos_plusX.reste1_maj	40
Coq.Reals.Cos_plusX.reste2_maj	40
Coq.Reals.Cos_plusX.reste1_cv_R0	40
Coq.Reals.Cos_plusX.reste2_cv_R0	40
Coq.Reals.Cos_plusX.reste_cv_R0	40
Coq.Reals.Cos_plusX.cos_plus	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.seq_cv_proper	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.seq_cv_morph	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.Rfloor	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.FQ_dense	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.Qabs_Rabs	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.CReal_cv_self	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.Rcauchy_limit	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.Rcauchy_complete	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.CRealLtIsLinear	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.CRealAbsLUB	40
Coq.Reals.Cauchy.ConstructiveRcompleteX.CRealComplete	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.QCauchySeq_bounded_prop	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.factorDenom	40	8.3.0.1.4.18	search with cache (only 1: intros; only 1: rewrite Qmult_comm; only 1: unfold Qred, Qeq in *; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	4.24712014198	2269
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult	40	6.9	search with cache (only 1: pose proof (CRealLe_not_lt y x) as [_ H2]; only 1: assumption).	0.107306957245	189
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_proper_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_0_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CRealLt_0_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_lt_0_compat_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_bound_indep	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_plus_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_plus_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_opp_mult_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_1_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_isRingExt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_isRing	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_morph_T	40	7	search with cache (only 1: apply CReal_isRingExt).	13.2568349838	132
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_opp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_opp_morph_T	40	2	search with cache (only 1: apply CReal_isRingExt).	0.77264881134	3
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_minus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_minus_morph_T	40	0.0.0.0	search with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	0.0362200737	4
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_1_r	40	4.2.2	search with cache (only 1: intros; only 1: rewrite CReal_mult_comm; only 1: apply CReal_mult_1_l).	10.1715750694	192
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_opp_mult_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_lt_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_abs_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CRealArchimedean	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.Rup_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CRealLtDisjunctEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CRealPosShift_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_pos_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_neg_lt_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_0_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_linear_shift	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_linear_shift_eq	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_l_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_1	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_inv_mult_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.Rinv_eq_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_eq_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_eq_compat_l	40	5.4	search with cache (only 1: intros x y z; only 1: apply CReal_mult_proper_l).	2.45169115067	271
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_eq_compat_r	40	1.3.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.103147029877	47
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_pos_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_compat_l_half	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_invQ	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CRealQ_dense	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.inject_Q_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.Rup_nat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_0_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMultX.CReal_mult_le_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CauchyAbsStable	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_neg_nth	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_nonneg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_le_abs	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_opp	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_appart_0	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_le	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_minus_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_triang	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_triang_inv	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_triang_inv2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_gt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.Rabs_def1	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_abs_def2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_double	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_lub	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_glb	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_lt_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.posPartAbsMax	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.negPartAbsMin	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_max_mult_neg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_lub_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_max_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyAbsX.CReal_min_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLtEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLtForget	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_lpo_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLe_not_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealEq_diff	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_above	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_above_same	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_asym	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_irrefl	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLe_refl	40	0.2	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0360651016235	12
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealEq_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealEq_sym	40	0.1.0.1.0.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intro abs; only 1: contradiction; only 1: intro abs; only 1: contradiction).	0.0663411617279	22
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_le_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_lt_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealEq_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealEq_relT	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealGt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_appart_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLtProp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealGe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLe_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLe_proper_r	40	1.3.20	search with cache (only 1: intros x y H; only 1: apply CRealLe_morph; only 1: apply CRealEq_refl).	10.2146990299	7298
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.ConstCauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLt_0_1	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_injectQPos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLtQ	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CRealLtQopp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_compare	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	1.53045797348	530
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp	40	7	search with cache (only 1: assumption).	0.024178981781	8
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.belowMultiple	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_0_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_lt_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_le_reg_r	40	6.1.3.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	14.2378041744	1300
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_le_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_le_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_opp_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_opp_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	5.55570411682	1768
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_plus_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp_0	40	13.7.0.13.7.0.15	search with cache (only 1: split; only 1: intros [n maj]; only 1: simpl in maj; only 1: discriminate; only 1: intros [n maj]; only 1: simpl in maj; only 1: discriminate).	12.9558660984	14958
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp_plus_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp_involutive	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp_gt_lt_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.CReal_opp_ge_le_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_one	40	0	search with cache (only 1: reflexivity).	0.0213918685913	1
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.opp_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.lt_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.le_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Q_le	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.inject_Z_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsX.opp_inject_Z	40
Coq.Reals.Cos_relX.cos_plus_form	40
Coq.Reals.Cos_relX.pow_sqr	40
Coq.Reals.Cos_relX.A1_cvg	40
Coq.Reals.Cos_relX.C1_cvg	40
Coq.Reals.Cos_relX.B1_cvg	40
Coq.Reals.RsigmaX.sigma_split	40
Coq.Reals.RsigmaX.sigma_diff	40
Coq.Reals.RsigmaX.sigma_diff_neg	40	0.2.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.19820189476	16
Coq.Reals.RsigmaX.sigma_first	40
Coq.Reals.RsigmaX.sigma_last	40
Coq.Reals.RsigmaX.sigma_eq_arg	40	0.4.0.1.1.9.2	search with cache (only 1: unfold sigma; only 1: intros; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: firstorder; only 1: ring).	2.63408398628	697
Coq.Reals.DiscrRX.Rlt_R0_R2	40	14	search with cache (only 1: apply Rlt_0_2).	0.38997387886	406
Coq.Reals.DiscrRX.IZR_eq	40	10.4.0	search with cache (only 1: intros; only 1: elim H; only 1: auto with zarith real).	2.75891399384	1659
Coq.Reals.RgeomX.distance_refl	40
Coq.Reals.RgeomX.distance_symm	40
Coq.Reals.RgeomX.law_cosines	40
Coq.Reals.RgeomX.triangle	40
Coq.Reals.RgeomX.translation_0	40	9.23	search with cache (only 1: intro; only 1: auto with real).	15.9357559681	9666
Coq.Reals.RgeomX.isometric_translation	40
Coq.Reals.RgeomX.rotation_0	40
Coq.Reals.RgeomX.rotation_PI2	40
Coq.Reals.RgeomX.isometric_rotation_0	40
Coq.Reals.RgeomX.isometric_rotation	40
Coq.Reals.RgeomX.isometric_rot_trans	40
Coq.Reals.RgeomX.isometric_trans_rot	40
Coq.Reals.RtopologyX.interior_P1	40
Coq.Reals.RtopologyX.interior_P2	40	5.0.7	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold included; only 1: tauto).	0.951052904129	610
Coq.Reals.RtopologyX.adherence_P1	40
Coq.Reals.RtopologyX.included_trans	40	1.0.3.4.1	search with cache (only 1: intro; only 1: intros h H1 H2; only 1: intro H; only 1: unfold included; only 1: auto with real rorders).	0.36683011055	252
Coq.Reals.RtopologyX.interior_P3	40
Coq.Reals.RtopologyX.complementary_P1	40	9.7.1.13.3.13.34	search with cache (only 1: intros l2 H0; only 1: elim H0; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H2; only 1: assumption).	34.747836113	35437
Coq.Reals.RtopologyX.adherence_P2	40
Coq.Reals.RtopologyX.adherence_P3	40
Coq.Reals.RtopologyX.open_set_P1	40
Coq.Reals.RtopologyX.closed_set_P1	40
Coq.Reals.RtopologyX.neighbourhood_P1	40
Coq.Reals.RtopologyX.open_set_P2	40	2.0.37	search with cache (only 1: intros x y z; only 1: unfold open_set, complementary, point_adherent; only 1: firstorder).	22.8403558731	26057
Coq.Reals.RtopologyX.open_set_P3	40
Coq.Reals.RtopologyX.open_set_P4	40	0.7	search with cache (only 1: intro H9; only 1: tauto).	0.0486879348755	25
Coq.Reals.RtopologyX.open_set_P5	40
Coq.Reals.RtopologyX.disc_P1	40
Coq.Reals.RtopologyX.continuity_P1	40
Coq.Reals.RtopologyX.continuity_P2	40
Coq.Reals.RtopologyX.continuity_P3	40
Coq.Reals.RtopologyX.Rsepare	40
Coq.Reals.RtopologyX.restriction_family	40
Coq.Reals.RtopologyX.family_P1	40
Coq.Reals.RtopologyX.open_set_P6	40
Coq.Reals.RtopologyX.compact_P1	40
Coq.Reals.RtopologyX.compact_P2	40
Coq.Reals.RtopologyX.compact_EMP	40
Coq.Reals.RtopologyX.compact_eqDom	40
Coq.Reals.RtopologyX.compact_P3	40
Coq.Reals.RtopologyX.compact_P4	40
Coq.Reals.RtopologyX.compact_P5	40
Coq.Reals.RtopologyX.compact_carac	40
Coq.Reals.RtopologyX.continuity_compact	40
Coq.Reals.RtopologyX.prolongement_C0	40
Coq.Reals.RtopologyX.continuity_ab_maj	40
Coq.Reals.RtopologyX.continuity_ab_min	40
Coq.Reals.RtopologyX.ValAdh_un_exists	40
Coq.Reals.RtopologyX.ValAdh_un_prop	40
Coq.Reals.RtopologyX.adherence_P4	40
Coq.Reals.RtopologyX.compact_P6	40
Coq.Reals.RtopologyX.Bolzano_Weierstrass	40
Coq.Reals.RtopologyX.is_lub_u	40
Coq.Reals.RtopologyX.domain_P1	40
Coq.Reals.RtopologyX.Heine	40
Coq.Reals.Rtrigo_calcX.tan_PI	40	1.5.0.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: ring).	0.091010093689	10
Coq.Reals.Rtrigo_calcX.sin_3PI2	40	0.0.0.1.2.0.1.0.21.41	search with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	11.6944539547	7823
Coq.Reals.Rtrigo_calcX.tan_2PI	40
Coq.Reals.Rtrigo_calcX.sin_cos_PI4	40
Coq.Reals.Rtrigo_calcX.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calcX.sin_PI6_cos_PI3	40	3.1.0.2.0	search with cache (only 1: replace (PI / 6) with (PI / 2 - PI / 3) by field; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.544600009918	71
Coq.Reals.Rtrigo_calcX.PI6_RGT_0	40
Coq.Reals.Rtrigo_calcX.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calcX.sin_PI6	40
Coq.Reals.Rtrigo_calcX.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calcX.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calcX.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calcX.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calcX.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calcX.PI4_RGT_0	40	5.18	search with cache (only 1: generalize PI4_RLT_PI2; only 1: Lra.lra).	1.49067807198	789
Coq.Reals.Rtrigo_calcX.cos_PI4	40
Coq.Reals.Rtrigo_calcX.sin_PI4	40
Coq.Reals.Rtrigo_calcX.tan_PI4	40
Coq.Reals.Rtrigo_calcX.cos_3PI4	40
Coq.Reals.Rtrigo_calcX.sin_3PI4	40
Coq.Reals.Rtrigo_calcX.cos_PI6	40
Coq.Reals.Rtrigo_calcX.tan_PI6	40
Coq.Reals.Rtrigo_calcX.sin_PI3	40
Coq.Reals.Rtrigo_calcX.cos_PI3	40
Coq.Reals.Rtrigo_calcX.tan_PI3	40
Coq.Reals.Rtrigo_calcX.sin_2PI3	40
Coq.Reals.Rtrigo_calcX.cos_2PI3	40
Coq.Reals.Rtrigo_calcX.tan_2PI3	40
Coq.Reals.Rtrigo_calcX.cos_5PI4	40
Coq.Reals.Rtrigo_calcX.sin_5PI4	40	0.1.1.5.0.0.2.1	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	4.23378610611	836
Coq.Reals.Rtrigo_calcX.sin_cos5PI4	40	0.0.0.0.1.0.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite neg_sin; only 1: rewrite neg_cos; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	0.320787906647	42
Coq.Reals.Rtrigo_calcX.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calcX.Rgt_2PI_0	40
Coq.Reals.Rtrigo_calcX.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calcX.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calcX.rad_deg	40
Coq.Reals.Rtrigo_calcX.toRad_inj	40
Coq.Reals.Rtrigo_calcX.deg_rad	40
Coq.Reals.Rtrigo_calcX.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calcX.sin_lb_ge_0	40
Coq.Reals.SeqSeriesX.sum_maj1	40
Coq.Reals.SeqSeriesX.Rseries_CV_comp	40
Coq.Reals.SeqSeriesX.Cesaro	40
Coq.Reals.SeqSeriesX.Cesaro_1	40
Coq.Reals.Rbasic_funX.Rmin_case	40
Coq.Reals.Rbasic_funX.Rmin_case_strong	40	0.3.1.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.190901994705	66
Coq.Reals.Rbasic_funX.Rmin_Rgt_l	40
Coq.Reals.Rbasic_funX.Rmin_Rgt_r	40	0.0.2.12.0.0	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intuition eauto  4 with real; only 1: intuition eauto  4 with real).	27.2380599976	12737
Coq.Reals.Rbasic_funX.Rmin_Rgt	40
Coq.Reals.Rbasic_funX.Rmin_l	40	0.0.2.4.0.1	search with cache (only 1: intros r1 r2; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intuition; only 1: intuition eauto  4 with real).	16.9208159447	841
Coq.Reals.Rbasic_funX.Rmin_r	40	0.0.2.4.0.2	search with cache (only 1: intros r1 r2; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intuition; only 1: intuition eauto  4 with real).	11.6201958656	1066
Coq.Reals.Rbasic_funX.Rmin_left	40	0.2.0.0.4	search with cache (only 1: intros r1 r2; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: auto with real; only 1: intuition eauto  4 with real).	1.49823713303	120
Coq.Reals.Rbasic_funX.Rmin_right	40	1.1.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0317230224609	6
Coq.Reals.Rbasic_funX.Rle_min_compat_r	40
Coq.Reals.Rbasic_funX.Rle_min_compat_l	40	2.2.2.2.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	33.0804181099	2968
Coq.Reals.Rbasic_funX.Rmin_comm	40	1.2.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.455033063889	191
Coq.Reals.Rbasic_funX.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_funX.Rmin_pos	40	6.0.2	search with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: auto).	0.315815925598	106
Coq.Reals.Rbasic_funX.Rmin_glb	40	1.2.1.1.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	1.37694001198	58
Coq.Reals.Rbasic_funX.Rmin_glb_lt	40	0.1.0.2	search with cache (only 1: intros a b; only 1: intros; only 1: apply Rmin_Rgt_r; only 1: auto with real).	0.821707963943	149
Coq.Reals.Rbasic_funX.Rmax_case	40
Coq.Reals.Rbasic_funX.Rmax_case_strong	40	1.1.1.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.178395986557	49
Coq.Reals.Rbasic_funX.Rmax_Rle	40
Coq.Reals.Rbasic_funX.Rmax_comm	40
Coq.Reals.Rbasic_funX.Rmax_l	40
Coq.Reals.Rbasic_funX.Rmax_r	40	4.7.1.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: auto with real).	38.363478899	6286
Coq.Reals.Rbasic_funX.Rmax_left	40	1.1.1.0.2	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.630056142807	178
Coq.Reals.Rbasic_funX.Rmax_right	40	1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity).	0.0757048130035	8
Coq.Reals.Rbasic_funX.Rle_max_compat_r	40
Coq.Reals.Rbasic_funX.Rle_max_compat_l	40	2.2.2.2.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	13.6206629276	3741
Coq.Reals.Rbasic_funX.RmaxRmult	40
Coq.Reals.Rbasic_funX.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_funX.Rmax_lub	40	2.2.2.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.436871051788	76
Coq.Reals.Rbasic_funX.Rmax_lub_lt	40	1.1.0.0.1	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto with real; only 1: auto with real).	0.17524600029	40
Coq.Reals.Rbasic_funX.Rmax_Rlt	40
Coq.Reals.Rbasic_funX.Rmax_neg	40	2.1.3.2.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	19.109513998	5997
Coq.Reals.Rbasic_funX.Rcase_abs	40
Coq.Reals.Rbasic_funX.Rabs_R0	40
Coq.Reals.Rbasic_funX.Rabs_R1	40
Coq.Reals.Rbasic_funX.Rabs_no_R0	40
Coq.Reals.Rbasic_funX.Rabs_left	40
Coq.Reals.Rbasic_funX.Rabs_right	40
Coq.Reals.Rbasic_funX.Rabs_left1	40
Coq.Reals.Rbasic_funX.Rabs_pos	40
Coq.Reals.Rbasic_funX.Rle_abs	40
Coq.Reals.Rbasic_funX.Rabs_le	40
Coq.Reals.Rbasic_funX.Rabs_pos_eq	40	3.0.4.1	search with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	1.02814102173	359
Coq.Reals.Rbasic_funX.Rabs_Rabsolu	40
Coq.Reals.Rbasic_funX.Rabs_pos_lt	40
Coq.Reals.Rbasic_funX.Rabs_minus_sym	40
Coq.Reals.Rbasic_funX.Rabs_mult	40
Coq.Reals.Rbasic_funX.Rabs_Rinv	40
Coq.Reals.Rbasic_funX.Rabs_Ropp	40
Coq.Reals.Rbasic_funX.Rabs_triang	40
Coq.Reals.Rbasic_funX.Rabs_triang_inv	40
Coq.Reals.Rbasic_funX.Rabs_triang_inv2	40
Coq.Reals.Rbasic_funX.Rabs_def1	40
Coq.Reals.Rbasic_funX.Rabs_def2	40
Coq.Reals.Rbasic_funX.RmaxAbs	40
Coq.Reals.Rbasic_funX.Rabs_Zabs	40
Coq.Reals.Rbasic_funX.abs_IZR	40
Coq.Reals.Rbasic_funX.Ropp_Rmax	40
Coq.Reals.Rbasic_funX.Ropp_Rmin	40
Coq.Reals.Rbasic_funX.Rmax_assoc	40
Coq.Reals.Rbasic_funX.Rminmax	40
Coq.Reals.Rbasic_funX.Rmin_assoc	40
Coq.Reals.Ranalysis5X.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5X.derivable_pt_id_interv	40	0.0.26	search with cache (only 1: intros a b; only 1: intros; only 1: apply derivable_pt_id).	8.13040280342	3012
Coq.Reals.Ranalysis5X.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5X.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5X.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5X.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5X.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5X.IVT_interv	40
Coq.Reals.Ranalysis5X.f_interv_is_interv	40
Coq.Reals.Ranalysis5X.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5X.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5X.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5X.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5X.derivable_pt_recip_interv_prelim1	40	7.0.0	search with cache (only 1: intros; only 1: assert (x_encad : f lb <= x <= f ub) by lra; only 1: intuition).	0.0969269275665	10
Coq.Reals.Ranalysis5X.derivable_pt_recip_interv_prelim1_decr	40	0.0.1.0.2	search with cache (only 1: intros f g lb ub x lb_lt_ub x_encad g_wf f_deriv; only 1: apply f_deriv; only 1: apply g_wf; only 1: lra; only 1: lra).	0.162909984589	17
Coq.Reals.Ranalysis5X.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5X.derivable_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5X.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5X.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5X.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5X.derive_pt_recip_interv_prelim1_1_decr	40
Coq.Reals.Ranalysis5X.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5X.derive_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5X.ub_lt_2_pos	40	3.13.0	search with cache (only 1: intros; only 1: unfold Rdiv; only 1: lra).	1.07991099358	405
Coq.Reals.Ranalysis5X.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5X.derivable_pt_lim_CVU	40
Coq.Reals.Ranalysis1X.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1X.continuity_pt_plus	40
Coq.Reals.Ranalysis1X.continuity_pt_opp	40
Coq.Reals.Ranalysis1X.continuity_pt_minus	40
Coq.Reals.Ranalysis1X.continuity_pt_mult	40
Coq.Reals.Ranalysis1X.continuity_pt_const	40
Coq.Reals.Ranalysis1X.continuity_pt_scal	40
Coq.Reals.Ranalysis1X.continuity_pt_inv	40
Coq.Reals.Ranalysis1X.div_eq_inv	40	2.0	search with cache (only 1: intros a b; only 1: reflexivity).	0.0147058963776	4
Coq.Reals.Ranalysis1X.continuity_pt_div	40
Coq.Reals.Ranalysis1X.continuity_pt_comp	40
Coq.Reals.Ranalysis1X.continuity_plus	40
Coq.Reals.Ranalysis1X.continuity_opp	40
Coq.Reals.Ranalysis1X.continuity_minus	40	1.0.0.0.0.4.0.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: unfold Dgf, D_x, no_cond; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: trivial; only 1: trivial).	2.77469491959	1285
Coq.Reals.Ranalysis1X.continuity_mult	40
Coq.Reals.Ranalysis1X.continuity_const	40
Coq.Reals.Ranalysis1X.continuity_scal	40
Coq.Reals.Ranalysis1X.continuity_inv	40	0.0.1.0.0.13	search with cache (only 1: intros z H; only 1: red; only 1: intros; only 1: apply continuity_pt_inv; only 1: auto with real; only 1: auto with real).	5.80547404289	2254
Coq.Reals.Ranalysis1X.continuity_div	40
Coq.Reals.Ranalysis1X.continuity_comp	40
Coq.Reals.Ranalysis1X.uniqueness_step1	40
Coq.Reals.Ranalysis1X.uniqueness_step2	40
Coq.Reals.Ranalysis1X.uniqueness_step3	40
Coq.Reals.Ranalysis1X.uniqueness_limite	40
Coq.Reals.Ranalysis1X.derive_pt_eq	40
Coq.Reals.Ranalysis1X.derive_pt_eq_0	40	3.2.0.0.0.0.3.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	4.56149816513	1177
Coq.Reals.Ranalysis1X.derive_pt_eq_1	40	0.0.1.5.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.174992084503	71
Coq.Reals.Ranalysis1X.derive_pt_D_in	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1X.derivable_derive	40	0.14.2.2	search with cache (only 1: intros alpha H2; only 1: cut (0%nat <> 2%nat); only 1: eauto with arith; only 1: Nat.order').	2.35161805153	1778
Coq.Reals.Ranalysis1X.derivable_continuous_pt	40
Coq.Reals.Ranalysis1X.derivable_continuous	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_opp_fwd	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_opp_rev	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_mirr_fwd	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_mirr_rev	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1X.derivable_pt_id	40
Coq.Reals.Ranalysis1X.derivable_pt_comp	40
Coq.Reals.Ranalysis1X.derivable_pt_xeq	40	12.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0879139900208	180
Coq.Reals.Ranalysis1X.derivable_pt_opp	40
Coq.Reals.Ranalysis1X.derivable_pt_opp_rev	40	2.2.1.0.1.1.6.0.0.0.0	search with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: unfold derivable_pt_abs; only 1: apply derivable_pt_lim_ext with (f := fun x => - - f x); only 1: intros; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_opp; only 1: assumption).	5.58884811401	4580
Coq.Reals.Ranalysis1X.derivable_pt_mirr	40
Coq.Reals.Ranalysis1X.derivable_pt_mirr_rev	40	3.1.0.1.0.0.0.10.0.0.0.0	search with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: assumption).	29.0135860443	15437
Coq.Reals.Ranalysis1X.derivable_pt_mirr_prem	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_rev; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive; only 1: assumption).	0.0347518920898	8
Coq.Reals.Ranalysis1X.derivable_pt_plus	40
Coq.Reals.Ranalysis1X.derivable_pt_minus	40
Coq.Reals.Ranalysis1X.derivable_pt_mult	40
Coq.Reals.Ranalysis1X.derivable_pt_const	40
Coq.Reals.Ranalysis1X.derivable_pt_scal	40
Coq.Reals.Ranalysis1X.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1X.derivable_id	40	0.0.0	search with cache (only 1: intros EQ; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0152468681335	3
Coq.Reals.Ranalysis1X.derivable_comp	40
Coq.Reals.Ranalysis1X.derivable_opp	40
Coq.Reals.Ranalysis1X.derivable_mirr	40
Coq.Reals.Ranalysis1X.derivable_plus	40
Coq.Reals.Ranalysis1X.derivable_minus	40
Coq.Reals.Ranalysis1X.derivable_mult	40
Coq.Reals.Ranalysis1X.derivable_const	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0250890254974	5
Coq.Reals.Ranalysis1X.derivable_scal	40
Coq.Reals.Ranalysis1X.derivable_Rsqr	40	0.0.1.0.2	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0298690795898	16
Coq.Reals.Ranalysis1X.derive_pt_id	40
Coq.Reals.Ranalysis1X.derive_pt_comp	40
Coq.Reals.Ranalysis1X.derive_pt_opp	40
Coq.Reals.Ranalysis1X.derive_pt_opp_rev	40
Coq.Reals.Ranalysis1X.derive_pt_mirr	40
Coq.Reals.Ranalysis1X.derive_pt_mirr_rev	40
Coq.Reals.Ranalysis1X.derive_pt_plus	40
Coq.Reals.Ranalysis1X.derive_pt_minus	40
Coq.Reals.Ranalysis1X.derive_pt_mult	40	1.1.0.0.2.1.5.14.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: pose proof (derivable_derive f2 x pr2) as H0; only 1: pose proof (proj2_sig pr1) as H3; only 1: pose proof (proj2_sig pr2) as H4; only 1: unfold derive_pt in H0; only 1: apply derivable_pt_lim_mult; only 1: assumption; only 1: assumption).	7.58981800079	6674
Coq.Reals.Ranalysis1X.derive_pt_const	40	5.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	13.9889469147	4360
Coq.Reals.Ranalysis1X.derive_pt_scal	40	2.1.0.3.6.1.0.2.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: pose proof (derivable_pt_lim_const a x) as H0; only 1: unfold mult_real_fct, mult_fct, fct_cte; only 1: apply derivable_pt_lim_scal; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: unfold derive_pt; only 1: assumption).	7.67968988419	5731
Coq.Reals.Ranalysis1X.derive_pt_Rsqr	40	2.9.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.383943080902	141
Coq.Reals.Ranalysis1X.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1X.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1X.derivable_pt_pow	40
Coq.Reals.Ranalysis1X.derivable_pow	40	0.0.0.0.17	search with cache (only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	3.61866092682	4066
Coq.Reals.Ranalysis1X.derive_pt_pow	40
Coq.Reals.Ranalysis1X.pr_nu	40	3.11.2.3.0.5	search with cache (only 1: intros alpha H2; only 1: intros; only 1: pose proof (proj2_sig pr1) as H3; only 1: pose proof (proj2_sig pr2) as H4; only 1: apply derive_pt_eq_0; only 1: assumption).	10.8825361729	6506
Coq.Reals.Ranalysis1X.pr_nu_xeq	40	3.7.5.2.1.0.4	search with cache (only 1: intros alpha H2; only 1: intros; only 1: pose proof (proj2_sig pr2) as H4; only 1: unfold derive_pt; only 1: destruct H as [l H]; only 1: apply derive_pt_eq_0; only 1: assumption).	18.1535959244	14323
Coq.Reals.Ranalysis1X.deriv_maximum	40
Coq.Reals.Ranalysis1X.deriv_minimum	40
Coq.Reals.Ranalysis1X.deriv_constant2	40
Coq.Reals.Ranalysis1X.nonneg_derivative_0	40
Coq.Reals.BinomialX.pascal_step1	40
Coq.Reals.BinomialX.pascal_step2	40
Coq.Reals.BinomialX.pascal_step3	40
Coq.Reals.BinomialX.pascal	40
Coq.Reals.BinomialX.binomial	40
Coq.Reals.PSeries_regX.Boule_convex	40
Coq.Reals.PSeries_regX.boule_of_interval	40
Coq.Reals.PSeries_regX.boule_in_interval	40
Coq.Reals.PSeries_regX.Ball_in_inter	40
Coq.Reals.PSeries_regX.Boule_center	40
Coq.Reals.PSeries_regX.CVN_CVU	40
Coq.Reals.PSeries_regX.CVU_continuity	40
Coq.Reals.PSeries_regX.continuity_pt_finite_SF	40
Coq.Reals.PSeries_regX.SFL_continuity_pt	40
Coq.Reals.PSeries_regX.SFL_continuity	40
Coq.Reals.PSeries_regX.CVN_R_CVS	40
Coq.Reals.PSeries_regX.CVU_cv	40
Coq.Reals.PSeries_regX.CVU_ext_lim	40
Coq.Reals.PSeries_regX.CVU_derivable	40
Coq.Reals.SeqPropX.growing_cv	40
Coq.Reals.SeqPropX.decreasing_growing	40
Coq.Reals.SeqPropX.decreasing_cv	40
Coq.Reals.SeqPropX.ub_to_lub	40
Coq.Reals.SeqPropX.lb_to_glb	40
Coq.Reals.SeqPropX.maj_ss	40
Coq.Reals.SeqPropX.min_ss	40
Coq.Reals.SeqPropX.Wn_decreasing	40
Coq.Reals.SeqPropX.Vn_growing	40
Coq.Reals.SeqPropX.Vn_Un_Wn_order	40
Coq.Reals.SeqPropX.min_maj	40
Coq.Reals.SeqPropX.maj_min	40
Coq.Reals.SeqPropX.cauchy_maj	40
Coq.Reals.SeqPropX.cauchy_opp	40
Coq.Reals.SeqPropX.cauchy_min	40
Coq.Reals.SeqPropX.maj_cv	40
Coq.Reals.SeqPropX.min_cv	40
Coq.Reals.SeqPropX.cond_eq	40
Coq.Reals.SeqPropX.not_Rlt	40	0.7.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	1.86060500145	25
Coq.Reals.SeqPropX.approx_maj	40
Coq.Reals.SeqPropX.approx_min	40
Coq.Reals.SeqPropX.UL_sequence	40
Coq.Reals.SeqPropX.CV_plus	40
Coq.Reals.SeqPropX.cv_cvabs	40
Coq.Reals.SeqPropX.CV_Cauchy	40
Coq.Reals.SeqPropX.maj_by_pos	40
Coq.Reals.SeqPropX.CV_mult	40
Coq.Reals.SeqPropX.tech9	40
Coq.Reals.SeqPropX.tech13	40
Coq.Reals.SeqPropX.growing_ineq	40
Coq.Reals.SeqPropX.CV_opp	40
Coq.Reals.SeqPropX.decreasing_ineq	40
Coq.Reals.SeqPropX.CV_minus	40
Coq.Reals.SeqPropX.cv_infty_cv_R0	40
Coq.Reals.SeqPropX.decreasing_prop	40
Coq.Reals.SeqPropX.cv_speed_pow_fact	40
Coq.Reals.Rtrigo1X.CVN_R_cos	40
Coq.Reals.Rtrigo1X.continuity_cos	40
Coq.Reals.Rtrigo1X.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1X.PI_2_aux	40
Coq.Reals.Rtrigo1X.cos_pi2	40
Coq.Reals.Rtrigo1X.pi2_int	40
Coq.Reals.Rtrigo1X.cos_minus	40
Coq.Reals.Rtrigo1X.sin2_cos2	40
Coq.Reals.Rtrigo1X.cos2	40
Coq.Reals.Rtrigo1X.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0578200817108	3
Coq.Reals.Rtrigo1X.cos_PI2	40
Coq.Reals.Rtrigo1X.sin_pos_tech	40
Coq.Reals.Rtrigo1X.sin_PI2	40
Coq.Reals.Rtrigo1X.PI_RGT_0	40	0.1.4.2.19.26	search with cache (only 1: red; only 1: pose proof (Alt_PI_ineq 0) as H; only 1: prove_sup0; only 1: clear H; only 1: destruct pi2_int; only 1: lra).	9.0848801136	6764
Coq.Reals.Rtrigo1X.PI_4	40
Coq.Reals.Rtrigo1X.PI_neq0	40	0.2.0	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.34855389595	28
Coq.Reals.Rtrigo1X.cos_PI	40
Coq.Reals.Rtrigo1X.sin_PI	40
Coq.Reals.Rtrigo1X.sin_bound	40
Coq.Reals.Rtrigo1X.cos_bound	40
Coq.Reals.Rtrigo1X.neg_cos	40
Coq.Reals.Rtrigo1X.sin_cos	40	0.5.1.1.0.0.2	search with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite Ropp_minus_distr; only 1: rewrite cos_PI2; only 1: unfold Rminus; only 1: ring).	9.22995710373	1713
Coq.Reals.Rtrigo1X.sin_plus	40
Coq.Reals.Rtrigo1X.sin_minus	40
Coq.Reals.Rtrigo1X.tan_plus	40
Coq.Reals.Rtrigo1X.sin_2a	40
Coq.Reals.Rtrigo1X.cos_2a	40
Coq.Reals.Rtrigo1X.cos_2a_cos	40
Coq.Reals.Rtrigo1X.cos_2a_sin	40	2.1.0.0.0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	4.94292211533	609
Coq.Reals.Rtrigo1X.tan_2a	40
Coq.Reals.Rtrigo1X.sin_neg	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg; only 1: apply Rsqr_neg).	0.47359085083	37
Coq.Reals.Rtrigo1X.cos_neg	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: replace (- x)² with x²; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg; only 1: apply Rsqr_neg; only 1: apply Rsqr_neg).	0.328758001328	25
Coq.Reals.Rtrigo1X.tan_0	40
Coq.Reals.Rtrigo1X.tan_neg	40	0.0.1.1.1.1.1.0.0	search with cache (only 1: unfold tan; only 1: intro; only 1: rewrite sin_antisym; only 1: unfold sin; only 1: case (exist_sin x²); only 1: rewrite <- cos_sym; only 1: unfold Rdiv; only 1: intros; only 1: ring).	10.0723369122	1654
Coq.Reals.Rtrigo1X.tan_minus	40
Coq.Reals.Rtrigo1X.cos_3PI2	40
Coq.Reals.Rtrigo1X.sin_2PI	40
Coq.Reals.Rtrigo1X.cos_2PI	40	0.3.0.8.2	search with cache (only 1: repeat rewrite double; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	9.98105287552	3132
Coq.Reals.Rtrigo1X.neg_sin	40	0.0.0.0.0	search with cache (only 1: intro; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.120280981064	5
Coq.Reals.Rtrigo1X.sin_PI_x	40	0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	0.145174980164	10
Coq.Reals.Rtrigo1X.sin_period	40
Coq.Reals.Rtrigo1X.cos_period	40
Coq.Reals.Rtrigo1X.sin_shift	40
Coq.Reals.Rtrigo1X.cos_shift	40
Coq.Reals.Rtrigo1X.cos_sin	40	4.0.0.0.0.0.0.0.2.0	search with cache (only 1: intro x; only 1: rewrite sin_cos; only 1: replace (PI / 2 + (PI / 2 + x)) with (x + PI); only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	14.308577776	1503
Coq.Reals.Rtrigo1X.PI2_RGT_0	40	0.1.5	search with cache (only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: destruct pi2_int; only 1: lra).	0.060818195343	9
Coq.Reals.Rtrigo1X.SIN_bound	40
Coq.Reals.Rtrigo1X.COS_bound	40
Coq.Reals.Rtrigo1X.cos_sin_0	40
Coq.Reals.Rtrigo1X.cos_sin_0_var	40
Coq.Reals.Rtrigo1X.sin_lb_gt_0	40
Coq.Reals.Rtrigo1X.SIN	40
Coq.Reals.Rtrigo1X.COS	40
Coq.Reals.Rtrigo1X._PI2_RLT_0	40	0.2.16	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.955621957779	467
Coq.Reals.Rtrigo1X.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1X.PI2_Rlt_PI	40	0.2	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0605978965759	13
Coq.Reals.Rtrigo1X.sin_gt_0	40
Coq.Reals.Rtrigo1X.cos_gt_0	40
Coq.Reals.Rtrigo1X.sin_ge_0	40
Coq.Reals.Rtrigo1X.cos_ge_0	40
Coq.Reals.Rtrigo1X.sin_le_0	40
Coq.Reals.Rtrigo1X.cos_le_0	40
Coq.Reals.Rtrigo1X.sin_lt_0	40
Coq.Reals.Rtrigo1X.sin_lt_0_var	40
Coq.Reals.Rtrigo1X.cos_lt_0	40
Coq.Reals.Rtrigo1X.tan_gt_0	40
Coq.Reals.Rtrigo1X.tan_lt_0	40
Coq.Reals.Rtrigo1X.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1X.form1	40
Coq.Reals.Rtrigo1X.form2	40	0.0.1.0.0.2.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.905771017075	88
Coq.Reals.Rtrigo1X.form3	40
Coq.Reals.Rtrigo1X.form4	40
Coq.Reals.Rtrigo1X.sin_increasing_0	40
Coq.Reals.Rtrigo1X.sin_increasing_1	40
Coq.Reals.Rtrigo1X.sin_decreasing_0	40
Coq.Reals.Rtrigo1X.sin_decreasing_1	40
Coq.Reals.Rtrigo1X.sin_inj	40
Coq.Reals.Rtrigo1X.cos_increasing_0	40
Coq.Reals.Rtrigo1X.cos_increasing_1	40
Coq.Reals.Rtrigo1X.cos_decreasing_0	40
Coq.Reals.Rtrigo1X.cos_decreasing_1	40
Coq.Reals.Rtrigo1X.cos_inj	40
Coq.Reals.Rtrigo1X.tan_diff	40
Coq.Reals.Rtrigo1X.tan_increasing_0	40
Coq.Reals.Rtrigo1X.tan_increasing_1	40
Coq.Reals.Rtrigo1X.sin_incr_0	40
Coq.Reals.Rtrigo1X.sin_incr_1	40
Coq.Reals.Rtrigo1X.sin_decr_0	40
Coq.Reals.Rtrigo1X.sin_decr_1	40
Coq.Reals.Rtrigo1X.cos_incr_0	40
Coq.Reals.Rtrigo1X.cos_incr_1	40
Coq.Reals.Rtrigo1X.cos_decr_0	40
Coq.Reals.Rtrigo1X.cos_decr_1	40
Coq.Reals.Rtrigo1X.tan_incr_0	40
Coq.Reals.Rtrigo1X.tan_incr_1	40
Coq.Reals.Rtrigo1X.sin_eq_0_1	40
Coq.Reals.Rtrigo1X.sin_eq_0_0	40
Coq.Reals.Rtrigo1X.cos_eq_0_0	40
Coq.Reals.Rtrigo1X.cos_eq_0_1	40
Coq.Reals.Rtrigo1X.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1X.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1X.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1X.cos_eq_0_2PI_1	40
Coq.Reals.RpowerX.P_Rmin	40	2.2.0.0.3	search with cache (only 1: intros a b c; only 1: unfold Rmin; only 1: destruct (Rle_dec b c); only 1: auto with real; only 1: auto with real).	1.26752710342	373
Coq.Reals.RpowerX.exp_le_3	40
Coq.Reals.RpowerX.exp_increasing	40
Coq.Reals.RpowerX.exp_lt_inv	40
Coq.Reals.RpowerX.exp_ineq1	40
Coq.Reals.RpowerX.ln_exists1	40
Coq.Reals.RpowerX.ln_exists	40
Coq.Reals.RpowerX.exp_ln	40
Coq.Reals.RpowerX.exp_inv	40
Coq.Reals.RpowerX.exp_Ropp	40
Coq.Reals.RpowerX.ln_increasing	40
Coq.Reals.RpowerX.ln_exp	40
Coq.Reals.RpowerX.ln_1	40
Coq.Reals.RpowerX.ln_lt_inv	40
Coq.Reals.RpowerX.ln_inv	40
Coq.Reals.RpowerX.ln_mult	40
Coq.Reals.RpowerX.ln_Rinv	40
Coq.Reals.RpowerX.ln_continue	40
Coq.Reals.RpowerX.Rpower_plus	40
Coq.Reals.RpowerX.Rpower_mult	40
Coq.Reals.RpowerX.Rpower_O	40
Coq.Reals.RpowerX.Rpower_1	40	1.0.0.0.0.0.4.0.2	search with cache (only 1: intros; only 1: unfold Rpower; only 1: rewrite Rmult_1_l; only 1: unfold ln; only 1: decide (Rlt_dec 0 x) with H; only 1: unfold Rln; only 1: destruct (ln_exists {| pos := x; cond_pos := H |} (cond_pos {| pos := x; cond_pos := H |})) as (?, Hex); only 1: symmetry; only 1: apply Hex).	10.0478179455	1578
Coq.Reals.RpowerX.Rpower_pow	40
Coq.Reals.RpowerX.Rpower_lt	40
Coq.Reals.RpowerX.Rpower_sqrt	40
Coq.Reals.RpowerX.Rpower_Ropp	40
Coq.Reals.RpowerX.powerRZ_Rpower	40
Coq.Reals.RpowerX.Rle_Rpower	40
Coq.Reals.RpowerX.ln_lt_2	40
Coq.Reals.RpowerX.limit1_ext	40
Coq.Reals.RpowerX.limit1_imp	40
Coq.Reals.RpowerX.Rinv_Rdiv	40	3.2.2	search with cache (only 1: symmetry; only 1: field; only 1: now split).	0.105515956879	22
Coq.Reals.RpowerX.Dln	40
Coq.Reals.RpowerX.derivable_pt_lim_ln	40
Coq.Reals.RpowerX.D_in_imp	40
Coq.Reals.RpowerX.D_in_ext	40
Coq.Reals.RpowerX.Dpower	40
Coq.Reals.RpowerX.derivable_pt_lim_power	40
Coq.Reals.RpowerX.Rpower_mult_distr	40
Coq.Reals.RpowerX.Rlt_Rpower_l	40
Coq.Reals.RpowerX.Rle_Rpower_l	40
Coq.Reals.RpowerX.arcsinh_sinh	40
Coq.Reals.RpowerX.sinh_arcsinh	40
Coq.Reals.RpowerX.derivable_pt_lim_arcsinh	40
Coq.Reals.RpowerX.arcsinh_lt	40
Coq.Reals.RpowerX.arcsinh_le	40
Coq.Reals.RpowerX.arcsinh_0	40
Coq.Reals.R_IfpX.tech_up	40
Coq.Reals.R_IfpX.up_tech	40
Coq.Reals.R_IfpX.fp_R0	40
Coq.Reals.R_IfpX.for_base_fp	40
Coq.Reals.R_IfpX.base_fp	40
Coq.Reals.R_IfpX.base_Int_part	40
Coq.Reals.R_IfpX.Int_part_INR	40
Coq.Reals.R_IfpX.fp_nat	40
Coq.Reals.R_IfpX.R0_fp_O	40
Coq.Reals.R_IfpX.Rminus_Int_part1	40
Coq.Reals.R_IfpX.Rminus_Int_part2	40
Coq.Reals.R_IfpX.Rminus_fp1	40
Coq.Reals.R_IfpX.Rminus_fp2	40
Coq.Reals.R_IfpX.plus_Int_part1	40
Coq.Reals.R_IfpX.plus_Int_part2	40
Coq.Reals.R_IfpX.plus_frac_part1	40
Coq.Reals.R_IfpX.plus_frac_part2	40
Coq.Reals.ClassicalConstructiveRealsX.RisLinearOrder	40
Coq.Reals.ClassicalConstructiveRealsX.RdisjunctEpsilon	40
Coq.Reals.ClassicalConstructiveRealsX.Req_constr_refl	40
Coq.Reals.ClassicalConstructiveRealsX.Req_constr_leibniz	40
Coq.Reals.ClassicalConstructiveRealsX.IQR_zero_quot	40
Coq.Reals.ClassicalConstructiveRealsX.Rring	40
Coq.Reals.ClassicalConstructiveRealsX.RringExt	40
Coq.Reals.ClassicalConstructiveRealsX.Rleft_inverse	40
Coq.Reals.ClassicalConstructiveRealsX.Rinv_pos	40
Coq.Reals.ClassicalConstructiveRealsX.Rmult_pos	40
Coq.Reals.ClassicalConstructiveRealsX.Rplus_reg_l	40
Coq.Reals.ClassicalConstructiveRealsX.Rzero_lt_one	40
Coq.Reals.ClassicalConstructiveRealsX.plus_IQR	40
Coq.Reals.ClassicalConstructiveRealsX.mult_IQR	40
Coq.Reals.ClassicalConstructiveRealsX.IQR_lt	40
Coq.Reals.ClassicalConstructiveRealsX.lt_IQR	40
Coq.Reals.ClassicalConstructiveRealsX.IQR_plus_quot	40
Coq.Reals.ClassicalConstructiveRealsX.IQR_mult_quot	40
Coq.Reals.ClassicalConstructiveRealsX.Rabove_pos	40
Coq.Reals.ClassicalConstructiveRealsX.Rarchimedean	40
Coq.Reals.ClassicalConstructiveRealsX.RabsLUB	40
Coq.Reals.ClassicalConstructiveRealsX.Rcomplete	40
Coq.Reals.ClassicalConstructiveRealsX.Rrepr_morphism	40
Coq.Reals.ClassicalConstructiveRealsX.Rabst_morphism	40
Coq.Reals.R_sqrtX.sqrt_pos	40
Coq.Reals.R_sqrtX.sqrt_positivity	40	0.4.14.0.0.0	search with cache (only 1: intros x; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [H| H]; only 1: auto with real; only 1: intros; only 1: apply Rsqrt_positivity).	30.2919771671	13884
Coq.Reals.R_sqrtX.sqrt_sqrt	40
Coq.Reals.R_sqrtX.sqrt_0	40
Coq.Reals.R_sqrtX.sqrt_1	40
Coq.Reals.R_sqrtX.sqrt_eq_0	40
Coq.Reals.R_sqrtX.sqrt_lem_0	40
Coq.Reals.R_sqrtX.sqrt_lem_1	40
Coq.Reals.R_sqrtX.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0748119354248	6
Coq.Reals.R_sqrtX.sqrt_square	40
Coq.Reals.R_sqrtX.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0590870380402	5
Coq.Reals.R_sqrtX.sqrt_pow2	40
Coq.Reals.R_sqrtX.pow2_sqrt	40
Coq.Reals.R_sqrtX.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrtX.Rsqr_sqrt	40	0.0.0.0.0.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.090677022934	7
Coq.Reals.R_sqrtX.sqrt_mult_alt	40
Coq.Reals.R_sqrtX.sqrt_mult	40
Coq.Reals.R_sqrtX.sqrt_lt_R0	40
Coq.Reals.R_sqrtX.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrtX.Rle_mult_inv_pos	40	4.4.12.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	12.3642349243	6080
Coq.Reals.R_sqrtX.sqrt_div_alt	40
Coq.Reals.R_sqrtX.sqrt_div	40
Coq.Reals.R_sqrtX.sqrt_lt_0_alt	40
Coq.Reals.R_sqrtX.sqrt_lt_0	40
Coq.Reals.R_sqrtX.sqrt_lt_1_alt	40
Coq.Reals.R_sqrtX.sqrt_lt_1	40
Coq.Reals.R_sqrtX.sqrt_le_0	40
Coq.Reals.R_sqrtX.sqrt_le_1_alt	40
Coq.Reals.R_sqrtX.sqrt_le_1	40
Coq.Reals.R_sqrtX.sqrt_neg_0	40
Coq.Reals.R_sqrtX.sqrt_inj	40
Coq.Reals.R_sqrtX.sqrt_less_alt	40
Coq.Reals.R_sqrtX.sqrt_less	40
Coq.Reals.R_sqrtX.sqrt_more	40
Coq.Reals.R_sqrtX.inv_sqrt	40
Coq.Reals.R_sqrtX.sqrt_cauchy	40
Coq.Reals.R_sqrtX.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrtX.Rsqr_sol_eq_0_0	40
Coq.Reals.NewtonIntX.FTCN_step1	40
Coq.Reals.NewtonIntX.FTC_Newton	40	1.1.4.0	search with cache (only 1: intros f a b; only 1: case (Rle_dec a b); only 1: split; only 1: split).	0.0956509113312	15
Coq.Reals.NewtonIntX.NewtonInt_P1	40
Coq.Reals.NewtonIntX.NewtonInt_P2	40
Coq.Reals.NewtonIntX.NewtonInt_P3	40
Coq.Reals.NewtonIntX.NewtonInt_P4	40
Coq.Reals.NewtonIntX.NewtonInt_P5	40
Coq.Reals.NewtonIntX.antiderivative_P1	40
Coq.Reals.NewtonIntX.NewtonInt_P6	40
Coq.Reals.NewtonIntX.antiderivative_P2	40
Coq.Reals.NewtonIntX.antiderivative_P3	40
Coq.Reals.NewtonIntX.antiderivative_P4	40
Coq.Reals.NewtonIntX.NewtonInt_P7	40
Coq.Reals.NewtonIntX.NewtonInt_P8	40
Coq.Reals.NewtonIntX.NewtonInt_P9	40
Coq.Reals.RderivX.cont_deriv	40
Coq.Reals.RderivX.Dconst	40
Coq.Reals.RderivX.Dx	40
Coq.Reals.RderivX.Dadd	40
Coq.Reals.RderivX.Dmult	40
Coq.Reals.RderivX.Dmult_const	40
Coq.Reals.RderivX.Dopp	40
Coq.Reals.RderivX.Dminus	40
Coq.Reals.RderivX.Dx_pow_n	40
Coq.Reals.RderivX.Dcomp	40
Coq.Reals.RderivX.D_pow_n	40
Coq.Reals.RlogicX.sig_forall_dec	40
Coq.Reals.RlogicX.not_not_archimedean	40
Coq.Reals.RlogicX.sig_not_dec	40
Coq.Reals.RprodX.prod_SO_split	40
Coq.Reals.RprodX.prod_SO_pos	40
Coq.Reals.RprodX.prod_SO_Rle	40
Coq.Reals.RprodX.fact_prodSO	40
Coq.Reals.RprodX.le_n_2n	40	1.4.1	search with cache (only 1: intros; only 1: Nat.nzsimpl; only 1: trivial using Nat.le_add_r).	0.209436893463	28
Coq.Reals.RprodX.RfactN_fact2N_factk	40
Coq.Reals.RprodX.INR_fact_lt_0	40
Coq.Reals.RprodX.C_maj	40
Coq.Reals.ArithPropX.minus_neq_O	40
Coq.Reals.ArithPropX.le_minusni_n	40
Coq.Reals.ArithPropX.lt_minus_O_lt	40	1.4.2	search with cache (only 1: intros n m p; only 1: apply Nat.lt_add_lt_sub_r; only 1: now Nat.nzsimpl).	0.0532050132751	10
Coq.Reals.ArithPropX.even_odd_cor	40
Coq.Reals.ArithPropX.le_double	40
Coq.Reals.ArithPropX.euclidian_division	40
Coq.Reals.ArithPropX.tech8	40	4.4.0	search with cache (only 1: intros m IH; only 1: simpl; only 1: intuition auto with arith).	0.107037067413	41
Coq.Reals.MVTX.MVT	40
Coq.Reals.MVTX.MVT_cor1	40
Coq.Reals.MVTX.MVT_cor2	40
Coq.Reals.MVTX.MVT_cor3	40
Coq.Reals.MVTX.Rolle	40
Coq.Reals.MVTX.nonneg_derivative_1	40
Coq.Reals.MVTX.nonpos_derivative_0	40
Coq.Reals.MVTX.increasing_decreasing_opp	40	1.4.2	search with cache (only 1: unfold opp_fct; only 1: intros x y H H0 H1; only 1: auto with real).	0.0434510707855	35
Coq.Reals.MVTX.nonpos_derivative_1	40
Coq.Reals.MVTX.positive_derivative	40
Coq.Reals.MVTX.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVTX.negative_derivative	40
Coq.Reals.MVTX.null_derivative_0	40
Coq.Reals.MVTX.increasing_decreasing	40
Coq.Reals.MVTX.null_derivative_1	40
Coq.Reals.MVTX.derive_increasing_interv_ax	40
Coq.Reals.MVTX.derive_increasing_interv	40
Coq.Reals.MVTX.derive_increasing_interv_var	40
Coq.Reals.MVTX.IAF	40
Coq.Reals.MVTX.IAF_var	40
Coq.Reals.MVTX.null_derivative_loc	40
Coq.Reals.MVTX.antiderivative_Ucte	40
Coq.Reals.MVTX.MVT_abs	40
Coq.Reals.MachinX.atan_sub_correct	40
Coq.Reals.MachinX.tech	40	24	search with cache (only 1: shelve).	15.1586720943	2532
Coq.Reals.MachinX.Machin_2_3	40
Coq.Reals.MachinX.Machin_4_5_239	40
Coq.Reals.MachinX.Machin_2_3_7	40
Coq.Reals.MachinX.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt_SFX.IZN_var	40	0.1.0.49	search with cache (only 1: intros x y; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	13.629338026	16157
Coq.Reals.RiemannInt_SFX.Nzorn	40
Coq.Reals.RiemannInt_SFX.StepFun_P1	40
Coq.Reals.RiemannInt_SFX.StepFun_P2	40
Coq.Reals.RiemannInt_SFX.StepFun_P3	40
Coq.Reals.RiemannInt_SFX.StepFun_P4	40
Coq.Reals.RiemannInt_SFX.StepFun_P5	40
Coq.Reals.RiemannInt_SFX.StepFun_P6	40
Coq.Reals.RiemannInt_SFX.StepFun_P7	40
Coq.Reals.RiemannInt_SFX.StepFun_P8	40
Coq.Reals.RiemannInt_SFX.StepFun_P9	40
Coq.Reals.RiemannInt_SFX.StepFun_P10	40
Coq.Reals.RiemannInt_SFX.StepFun_P11	40
Coq.Reals.RiemannInt_SFX.StepFun_P12	40
Coq.Reals.RiemannInt_SFX.StepFun_P13	40
Coq.Reals.RiemannInt_SFX.StepFun_P14	40
Coq.Reals.RiemannInt_SFX.StepFun_P15	40
Coq.Reals.RiemannInt_SFX.StepFun_P16	40
Coq.Reals.RiemannInt_SFX.StepFun_P17	40
Coq.Reals.RiemannInt_SFX.StepFun_P18	40
Coq.Reals.RiemannInt_SFX.StepFun_P19	40
Coq.Reals.RiemannInt_SFX.StepFun_P20	40
Coq.Reals.RiemannInt_SFX.StepFun_P21	40
Coq.Reals.RiemannInt_SFX.StepFun_P22	40
Coq.Reals.RiemannInt_SFX.StepFun_P23	40
Coq.Reals.RiemannInt_SFX.StepFun_P24	40
Coq.Reals.RiemannInt_SFX.StepFun_P25	40
Coq.Reals.RiemannInt_SFX.StepFun_P26	40
Coq.Reals.RiemannInt_SFX.StepFun_P27	40
Coq.Reals.RiemannInt_SFX.StepFun_P28	40
Coq.Reals.RiemannInt_SFX.StepFun_P29	40
Coq.Reals.RiemannInt_SFX.StepFun_P30	40
Coq.Reals.RiemannInt_SFX.StepFun_P31	40
Coq.Reals.RiemannInt_SFX.StepFun_P32	40
Coq.Reals.RiemannInt_SFX.StepFun_P33	40
Coq.Reals.RiemannInt_SFX.StepFun_P34	40
Coq.Reals.RiemannInt_SFX.StepFun_P35	40
Coq.Reals.RiemannInt_SFX.StepFun_P36	40
Coq.Reals.RiemannInt_SFX.StepFun_P37	40
Coq.Reals.RiemannInt_SFX.StepFun_P38	40
Coq.Reals.RiemannInt_SFX.StepFun_P39	40
Coq.Reals.RiemannInt_SFX.StepFun_P40	40
Coq.Reals.RiemannInt_SFX.StepFun_P41	40
Coq.Reals.RiemannInt_SFX.StepFun_P42	40
Coq.Reals.RiemannInt_SFX.StepFun_P43	40
Coq.Reals.RiemannInt_SFX.StepFun_P44	40
Coq.Reals.RiemannInt_SFX.StepFun_P45	40
Coq.Reals.RiemannInt_SFX.StepFun_P46	40
Coq.Reals.Ranalysis_regX.AppVar	40	0.6.175	search with cache (only 1: assert (int78 : -2 <= 7 / 8 <= 2) by (split; Lra.lra); only 1: case PI_2_aux; only 1: tauto).	4.06715798378	22346
Coq.Reals.Ranalysis3X.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3X.derivable_pt_div	40
Coq.Reals.Ranalysis3X.derivable_div	40
Coq.Reals.Ranalysis3X.derive_pt_div	40
Coq.Reals.Rtrigo_regX.continuity_sin	40
Coq.Reals.Rtrigo_regX.CVN_R_sin	40
Coq.Reals.Rtrigo_regX.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_regX.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_regX.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_regX.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_regX.derivable_pt_sin	40
Coq.Reals.Rtrigo_regX.derivable_pt_cos	40
Coq.Reals.Rtrigo_regX.derivable_sin	40	0.0.1.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0292718410492	6
Coq.Reals.Rtrigo_regX.derivable_cos	40	0.0.1.10	search with cache (only 1: intro x; only 1: unfold derivable_pt; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.15576505661	83
Coq.Reals.Rtrigo_regX.derive_pt_sin	40
Coq.Reals.Rtrigo_regX.derive_pt_cos	40	3.2.0	search with cache (only 1: intro x; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.877183198929	51
Coq.Reals.RdefinitionsX.total_order_T	40
Coq.Reals.RdefinitionsX.Req_appart_dec	40
Coq.Reals.RdefinitionsX.Rrepr_appart_0	40
Coq.Reals.RdefinitionsX.up	40	170	search with cache (only 1: constructor).	6.03809213638	14661
Coq.Reals.RlimitX.eps2_Rgt_R0	40	0.13.0.7	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: trivial; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.798069000244	1000
Coq.Reals.RlimitX.eps2	40	0.1	search with cache (only 1: intros; only 1: lra).	0.0260310173035	3
Coq.Reals.RlimitX.eps4	40	2.3	search with cache (only 1: intros; only 1: lra).	0.171314954758	19
Coq.Reals.RlimitX.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0233068466187	2
Coq.Reals.RlimitX.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0230309963226	2
Coq.Reals.RlimitX.prop_eps	40
Coq.Reals.RlimitX.mul_factor_wd	40
Coq.Reals.RlimitX.mul_factor_gt	40
Coq.Reals.RlimitX.mul_factor_gt_f	40
Coq.Reals.RlimitX.tech_limit	40
Coq.Reals.RlimitX.tech_limit_contr	40
Coq.Reals.RlimitX.lim_x	40	7.0	search with cache (only 1: intros; only 1: firstorder).	0.0451390743256	9
Coq.Reals.RlimitX.limit_plus	40
Coq.Reals.RlimitX.limit_Ropp	40
Coq.Reals.RlimitX.limit_minus	40
Coq.Reals.RlimitX.limit_free	40
Coq.Reals.RlimitX.limit_mul	40
Coq.Reals.RlimitX.single_limit	40
Coq.Reals.RlimitX.limit_comp	40	0.6.14	search with cache (only 1: intros P Ho Hrec; only 1: intros; only 1: firstorder).	35.7450799942	15689
Coq.Reals.RlimitX.limit_inv	40
Coq.Reals.Cauchy_prodX.sum_N_predN	40	8.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	0.419452190399	139
Coq.Reals.Cauchy_prodX.sum_plus	40	1.0.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.103835821152	9
Coq.Reals.Cauchy_prodX.cauchy_finite	40
Coq.Reals.Rtrigo_funX.Alembert_exp	40
Coq.Reals.Rtrigo_defX.exp_cof_no_R0	40	0.0.19.8.4	search with cache (only 1: intro; only 1: red; only 1: apply Rinv_neq_0_compat; only 1: red; only 1: apply (not_0_INR (fact n) (fact_neq_0 n))).	9.62975001335	5541
Coq.Reals.Rtrigo_defX.exist_exp	40
Coq.Reals.Rtrigo_defX.pow_i	40	13.2.8.0	search with cache (only 1: intros; only 1: rewrite pow_ne_zero; only 1: auto; only 1: now elim H).	1.84961485863	1396
Coq.Reals.Rtrigo_defX.exist_exp0	40
Coq.Reals.Rtrigo_defX.exp_0	40
Coq.Reals.Rtrigo_defX.cosh_0	40
Coq.Reals.Rtrigo_defX.sinh_0	40
Coq.Reals.Rtrigo_defX.simpl_cos_n	40
Coq.Reals.Rtrigo_defX.archimed_cor1	40
Coq.Reals.Rtrigo_defX.Alembert_cos	40
Coq.Reals.Rtrigo_defX.cosn_no_R0	40	0.0.0.0.2.3	search with cache (only 1: intro n; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.377326011658	35
Coq.Reals.Rtrigo_defX.exist_cos	40
Coq.Reals.Rtrigo_defX.simpl_sin_n	40
Coq.Reals.Rtrigo_defX.Alembert_sin	40
Coq.Reals.Rtrigo_defX.sin_no_R0	40	0.0.0.0.6.0	search with cache (only 1: intros; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.344846963882	104
Coq.Reals.Rtrigo_defX.exist_sin	40
Coq.Reals.Rtrigo_defX.cos_sym	40
Coq.Reals.Rtrigo_defX.sin_antisym	40
Coq.Reals.Rtrigo_defX.sin_0	40
Coq.Reals.Rtrigo_defX.exist_cos0	40
Coq.Reals.Rtrigo_defX.cos_0	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_lt_r	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_morphT	40	0.0.2.0.0.0.0	search with cache (only 1: intros R x y exy z t ezt; only 1: unfold CRmin; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite exy, ezt; only 1: reflexivity; only 1: reflexivity).	0.0877771377563	9
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_l	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_r	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRnegPartAbsMin	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_sym	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_mult	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_plus	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_left	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_right	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_lt	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_contract	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_glb	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_assoc	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRlt_min	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_morphT	40	0.0.0.0.0.0.1	search with cache (only 1: intros R x y H x0 y0 H0; only 1: unfold CRmax; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	0.150537967682	29
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_lub	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_l	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_r	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRposPartAbsMax	40	0.2.0.0.0.1.86	search with cache (only 1: intros; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite CRplus_0_l; only 1: rewrite CRopp_0, CRplus_0_r; only 1: reflexivity; only 1: reflexivity).	2.15554594994	4712
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_sym	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_plus	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_left	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_right	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_contract	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_lub_lt	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_assoc	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_min_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRlt_max	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmax_mult	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmin_max_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMaxX.CRmorph_min	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_asym	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_proper	40
Coq.Reals.Abstract.ConstructiveRealsX.CRle_refl	40
Coq.Reals.Abstract.ConstructiveRealsX.CRle_lt_trans	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_le_trans	40
Coq.Reals.Abstract.ConstructiveRealsX.CRle_trans	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_trans	40	0.14.2	search with cache (only 1: intro H0; only 1: intros a n Hn; only 1: apply H0).	3.34180212021	3254
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_trans_flip	40
Coq.Reals.Abstract.ConstructiveRealsX.CReq_refl	40	1.1.0.1.1.0.21.0	search with cache (only 1: intros; only 1: constructor 1; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	11.8253490925	3363
Coq.Reals.Abstract.ConstructiveRealsX.CReq_sym	40	4.0.1.10.0.1.0	search with cache (only 1: split; only 1: intro abs; only 1: destruct H, H0; only 1: assumption; only 1: intro abs; only 1: destruct H, H0; only 1: contradiction).	5.55820202827	6223
Coq.Reals.Abstract.ConstructiveRealsX.CReq_trans	40
Coq.Reals.Abstract.ConstructiveRealsX.CReq_relT	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_morph	40
Coq.Reals.Abstract.ConstructiveRealsX.CRle_morph_Proper	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_0_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_0_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_opp_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_opp_r	40	0.2.1	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Ropp_def).	0.0631799697876	21
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_0	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_compat_l	40	11.0.0.9.1.0	search with cache (only 1: intros; only 1: red; only 1: contradict H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_reg_l in H; only 1: now subst).	7.32106113434	5487
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_compat_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_compat	40
Coq.Reals.Abstract.ConstructiveRealsX.CRle_minus	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_reg_l	40	13.3.13.3.0.2	search with cache (only 1: intros; only 1: intros abs; only 1: destruct (CRisRing R); only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	30.7393600941	23907
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_lt_le_compat	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_le_lt_compat	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_assoc	40	4.3.0.12	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply CReq_sym; only 1: apply Radd_assoc).	3.30105900764	1067
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_comm	40	9.0	search with cache (only 1: intros; only 1: apply (Radd_comm (CRisRing R))).	0.284508943558	91
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_morph_Proper	40	4	search with cache (only 1: apply (CRisRingExt R)).	0.0450258255005	30
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_morph_Proper	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_morph_T	40	2.1	search with cache (only 1: intros; only 1: apply (CRisRingExt R)).	0.0304341316223	17
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_morph_T	40	2.12	search with cache (only 1: intros; only 1: apply (CRisRingExt R)).	1.8290579319	523
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_morph_T	40	0.17.4	search with cache (only 1: intros; only 1: intros a b; only 1: apply (CRisRingExt R)).	10.586427927	565
Coq.Reals.Abstract.ConstructiveRealsX.CRminus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveRealsX.CRminus_morph_T	40	0.0.0.0	search with cache (only 1: intros R x y H x0 y0 H0; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity).	0.0312650203705	4
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_involutive	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_gt_lt_contravar	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_lt_cancel	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_ge_le_contravar	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_plus_distr	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_1_l	40	5.5.5.0	search with cache (only 1: intros; only 1: split; only 1: apply CRisRing; only 1: apply CRisRing).	1.34453296661	721
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_1_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_assoc	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_comm	40	22.1.2	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Rmul_comm).	16.6246180534	7130
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_plus_distr_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_plus_distr_r	40	2.0.1.0.1.0	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: transitivity (r2 * r1 + r3 * r1); only 1: apply Rdistr_l; only 1: destruct (CRisRingExt R); only 1: apply CReq_refl).	0.881500005722	210
Coq.Reals.Abstract.ConstructiveRealsX.CRzero_double	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_0_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_0_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_mult_distr_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRopp_mult_distr_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_lt_compat_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRinv_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_lt_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_compat_l_half	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_compat_r_half	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRinv_1	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRinv_mult_distr	40
Coq.Reals.Abstract.ConstructiveRealsX.CRinv_morph	40
Coq.Reals.Abstract.ConstructiveRealsX.CRlt_minus	40
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_le	40
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_morph_Proper	40
Coq.Reals.Abstract.ConstructiveRealsX.eq_inject_Q	40
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_morph_T	40	0.1.0.0.1.0.1.22	search with cache (only 1: intros H1 H2; only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).	1.48015499115	827
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_opp	40
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_pos	40
Coq.Reals.Abstract.ConstructiveRealsX.CR_of_Q_inv	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_0_compat	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_compat_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_compat_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_pos_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_le_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRup_nat	40
Coq.Reals.Abstract.ConstructiveRealsX.CRfloor	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRplus_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveRealsX.CRmult_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveRealsX.CRapart_morph	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_increasing_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_unique	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.Endomorph_id	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_proper	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_compose	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_le	40	0.5.3.4	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.142082929611	276
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_le_inv	40	8.19.1.36.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: destruct (CRltLinear R1); only 1: apply CRmorph_increasing; only 1: assumption).	21.0175249577	46470
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_zero	40	0.12	search with cache (only 1: intros; only 1: apply CRmorph_rat).	0.0451321601868	60
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_one	40	0.0	search with cache (only 1: intros; only 1: apply CRmorph_rat).	0.0148959159851	2
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_opp	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRplus_pos_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRplus_neg_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_plus_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_plus	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.NatOfZ	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_int	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_pos_pos_le	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_mult	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_appart	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_rat_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CR_Q_limit	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CR_Q_limit_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CauchyMorph_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.SlowMorph_increasing_Qr	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.SlowMorph_increasing_Ql	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.SlowMorph_increasing	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_abs	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphismsX.CRmorph_cauchy_reverse	40
Coq.Reals.Abstract.ConstructiveSumX.CRsum_eq	40
Coq.Reals.Abstract.ConstructiveSumX.sum_eq_R0	40
Coq.Reals.Abstract.ConstructiveSumX.sum_const	40
Coq.Reals.Abstract.ConstructiveSumX.multiTriangleIneg	40
Coq.Reals.Abstract.ConstructiveSumX.sum_assoc	40
Coq.Reals.Abstract.ConstructiveSumX.sum_Rle	40
Coq.Reals.Abstract.ConstructiveSumX.Abs_sum_maj	40
Coq.Reals.Abstract.ConstructiveSumX.cond_pos_sum	40
Coq.Reals.Abstract.ConstructiveSumX.pos_sum_more	40
Coq.Reals.Abstract.ConstructiveSumX.sum_opp	40	6.0.12.2.14.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite CRopp_plus_distr; only 1: rewrite IHn; only 1: reflexivity).	11.3415620327	6952
Coq.Reals.Abstract.ConstructiveSumX.sum_scale	40
Coq.Reals.Abstract.ConstructiveSumX.sum_plus	40
Coq.Reals.Abstract.ConstructiveSumX.decomp_sum	40
Coq.Reals.Abstract.ConstructiveSumX.reverse_sum	40
Coq.Reals.Abstract.ConstructiveSumX.Rplus_le_pos	40
Coq.Reals.Abstract.ConstructiveSumX.selectOneInSum	40
Coq.Reals.Abstract.ConstructiveSumX.splitSum	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_maj	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_abs_lt	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_abs	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_unique	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_abs_eq	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_abs_cv	40	2.0.0	search with cache (only 1: intros; only 1: destruct (series_cv_abs u cau); only 1: exact s).	0.034264087677	5
Coq.Reals.Abstract.ConstructiveSumX.series_cv_opp	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_scale	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_plus	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_minus	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_eq	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_remainder_maj	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_abs_remainder	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_triangle	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_shift	40
Coq.Reals.Abstract.ConstructiveSumX.series_cv_shift'	40
Coq.Reals.Abstract.ConstructiveSumX.CRmorph_sum	40
Coq.Reals.Abstract.ConstructiveSumX.CRmorph_INR	40	3.0	search with cache (only 1: intros; only 1: apply CRmorph_rat).	0.109372854233	5
Coq.Reals.Abstract.ConstructiveSumX.CRmorph_series_cv	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_morph	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_morph_prop_Proper	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_right	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_opp	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_minus_sym	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_left	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_triang	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_le	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_triang_inv	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_triang_inv2	40
Coq.Reals.Abstract.ConstructiveAbsX.CR_of_Q_abs	40
Coq.Reals.Abstract.ConstructiveAbsX.CRle_abs	40	0.1.3.3	search with cache (only 1: intros; only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]; only 1: apply H1; only 1: apply CRle_refl).	0.108445882797	41
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_pos	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_appart_0	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_mult	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_lt	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_def1	40
Coq.Reals.Abstract.ConstructiveAbsX.CRabs_def2	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_extens	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_opp	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_plus	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_unique	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_eq	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cauchy_eq	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_proper	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_morph	40
Coq.Reals.Abstract.ConstructiveLimitsX.Un_cv_nat_real	40
Coq.Reals.Abstract.ConstructiveLimitsX.Un_cv_real_nat	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_minus	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_scale	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_const	40
Coq.Reals.Abstract.ConstructiveLimitsX.Rcv_cauchy_mod	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_growing_transit	40	4.10.0.52	search with cache (only 1: intros def_n0; only 1: intros P H0 HS; only 1: fix le_div2 1; only 1: auto with arith).	23.8781950474	36854
Coq.Reals.Abstract.ConstructiveLimitsX.growing_ineq	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_open_below	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_open_above	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_bound_down	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_bound_up	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_le	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_abs_cont	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_dist_cont	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_shift	40
Coq.Reals.Abstract.ConstructiveLimitsX.CR_cv_shift'	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_ge_one	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_ge_zero	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_gt_zero	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_mult	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_one	40	5.2.7.1.10.2	search with cache (only 1: induction n; only 1: apply CReq_refl; only 1: simpl; only 1: rewrite <- (Rmul_comm (CRisRing R)); only 1: rewrite CRmult_1_r; only 1: apply IHn).	3.86108088493	3267
Coq.Reals.Abstract.ConstructivePowerX.CRpow_proper	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_inv	40
Coq.Reals.Abstract.ConstructivePowerX.CRpow_plus_distr	40
Coq.Reals.Abstract.ConstructivePowerX.CR_double	40
Coq.Reals.Abstract.ConstructivePowerX.GeoCvZero	40
Coq.Reals.Abstract.ConstructivePowerX.GeoFiniteSum	40
Coq.Reals.Abstract.ConstructivePowerX.GeoHalfBelowTwo	40
Coq.Reals.Abstract.ConstructivePowerX.GeoHalfTwo	40
Coq.Reals.Abstract.ConstructiveLUBX.CRlt_lpo_dec	40
Coq.Reals.Abstract.ConstructiveLUBX.is_upper_bound_dec	40
Coq.Reals.Abstract.ConstructiveLUBX.is_upper_bound_epsilon	40
Coq.Reals.Abstract.ConstructiveLUBX.is_upper_bound_not_epsilon	40
Coq.Reals.Abstract.ConstructiveLUBX.DDlow_below_up	40
Coq.Reals.Abstract.ConstructiveLUBX.DDcut_limit_fix	40
Coq.Reals.Abstract.ConstructiveLUBX.DDcut_limit	40
Coq.Reals.Abstract.ConstructiveLUBX.glb_dec_Q	40
Coq.Reals.Abstract.ConstructiveLUBX.is_upper_bound_glb	40
Coq.Reals.Abstract.ConstructiveLUBX.is_upper_bound_closed	40
Coq.Reals.Abstract.ConstructiveLUBX.sig_lub	40
Coq.Reals.Abstract.ConstructiveLUBX.CR_sig_lub	40
Coq.Reals.RaxiomsX.Rrepr_0	40
Coq.Reals.RaxiomsX.Rrepr_1	40
Coq.Reals.RaxiomsX.Rrepr_plus	40
Coq.Reals.RaxiomsX.Rrepr_opp	40
Coq.Reals.RaxiomsX.Rrepr_minus	40
Coq.Reals.RaxiomsX.Rrepr_mult	40
Coq.Reals.RaxiomsX.Rrepr_inv	40
Coq.Reals.RaxiomsX.Rrepr_le	40
Coq.Reals.RaxiomsX.Rrepr_appart	40
Coq.Reals.RaxiomsX.Rappart_repr	40
Coq.Reals.RaxiomsX.Rplus_comm	40
Coq.Reals.RaxiomsX.Rplus_assoc	40	2.13.1.1.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite <- CReal_plus_assoc; only 1: reflexivity).	31.4927120209	3505
Coq.Reals.RaxiomsX.Rplus_opp_r	40
Coq.Reals.RaxiomsX.Rplus_0_l	40
Coq.Reals.RaxiomsX.Rmult_comm	40
Coq.Reals.RaxiomsX.Rmult_assoc	40	11.0.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_mult; only 1: do 2 rewrite Rrepr_mult; only 1: ring).	9.17194080353	603
Coq.Reals.RaxiomsX.Rinv_l	40
Coq.Reals.RaxiomsX.Rmult_1_l	40
Coq.Reals.RaxiomsX.R1_neq_R0	40
Coq.Reals.RaxiomsX.Rmult_plus_distr_l	40
Coq.Reals.RaxiomsX.Rlt_asym	40
Coq.Reals.RaxiomsX.Rlt_trans	40
Coq.Reals.RaxiomsX.Rplus_lt_compat_l	40
Coq.Reals.RaxiomsX.Rmult_lt_compat_l	40
Coq.Reals.RaxiomsX.Rrepr_INR	40
Coq.Reals.RaxiomsX.Rrepr_IPR2	40
Coq.Reals.RaxiomsX.Rrepr_IPR	40
Coq.Reals.RaxiomsX.Rrepr_IZR	40
Coq.Reals.RaxiomsX.archimed	40
Coq.Reals.RaxiomsX.completeness	40
Coq.Reals.RminmaxX.Rmax_l	40	2.0.3.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0841629505157	20
Coq.Reals.RminmaxX.Rmax_r	40	2.0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity).	0.0485320091248	10
Coq.Reals.RminmaxX.Rmin_l	40	2.0.3.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: reflexivity; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0773389339447	20
Coq.Reals.RminmaxX.Rmin_r	40	2.0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity).	0.0421071052551	10
Coq.Reals.RminmaxX.R.plus_max_distr_l	40
Coq.Reals.RminmaxX.R.plus_max_distr_r	40
Coq.Reals.RminmaxX.R.plus_min_distr_l	40
Coq.Reals.RminmaxX.R.plus_min_distr_r	40
Coq.Reals.RminmaxX.R.opp_max_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0567350387573	5
Coq.Reals.RminmaxX.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0418210029602	5
Coq.Reals.RminmaxX.R.minus_max_distr_l	40
Coq.Reals.RminmaxX.R.minus_max_distr_r	40
Coq.Reals.RminmaxX.R.minus_min_distr_l	40
Coq.Reals.RminmaxX.R.minus_min_distr_r	40
Coq.FSets.FMapListX.Raw.empty_1	40	4	search with cache (only 1: now f_equal).	0.138882160187	22
Coq.FSets.FMapListX.Raw.empty_sorted	40	5	search with cache (only 1: constructor).	0.0203900337219	11
Coq.FSets.FMapListX.Raw.is_empty_1	40
Coq.FSets.FMapListX.Raw.is_empty_2	40	1.8.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: inversion_clear 2; only 1: auto).	1.78199601173	399
Coq.FSets.FMapListX.Raw.mem_1	40
Coq.FSets.FMapListX.Raw.mem_2	40
Coq.FSets.FMapListX.Raw.find_2	40
Coq.FSets.FMapListX.Raw.find_1	40
Coq.FSets.FMapListX.Raw.add_1	40
Coq.FSets.FMapListX.Raw.add_2	40
Coq.FSets.FMapListX.Raw.add_3	40
Coq.FSets.FMapListX.Raw.add_Inf	40
Coq.FSets.FMapListX.Raw.add_sorted	40
Coq.FSets.FMapListX.Raw.remove_1	40
Coq.FSets.FMapListX.Raw.remove_2	40
Coq.FSets.FMapListX.Raw.remove_3	40
Coq.FSets.FMapListX.Raw.remove_Inf	40
Coq.FSets.FMapListX.Raw.remove_sorted	40	0.0.0.0.2.2.0.0.0.0.1	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: simpl; only 1: inversion_clear Hm; only 1: case (X.compare x x''); only 1: intuition; only 1: intuition; only 1: intuition).	13.0007917881	2329
Coq.FSets.FMapListX.Raw.elements_1	40	2.1	search with cache (only 1: intros sorted hyp; only 1: auto).	0.0513229370117	5
Coq.FSets.FMapListX.Raw.elements_2	40	0	search with cache (only 1: auto).	0.019073009491	1
Coq.FSets.FMapListX.Raw.elements_3	40	0.1.0.3.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.0605139732361	18
Coq.FSets.FMapListX.Raw.elements_3w	40
Coq.FSets.FMapListX.Raw.fold_1	40
Coq.FSets.FMapListX.Raw.equal_1	40
Coq.FSets.FMapListX.Raw.equal_2	40
Coq.FSets.FMapListX.Raw.equal_cons	40
Coq.FSets.FMapListX.Raw.map_1	40
Coq.FSets.FMapListX.Raw.map_2	40
Coq.FSets.FMapListX.Raw.map_lelistA	40	0.1.3.0.0.0.0.0	search with cache (only 1: induction m; only 1: intuition; only 1: constructor 1; only 1: intros; only 1: destruct a as (x'', e''); only 1: simpl; only 1: inversion_clear H; only 1: intuition).	5.03840494156	503
Coq.FSets.FMapListX.Raw.map_sorted	40
Coq.FSets.FMapListX.Raw.mapi_1	40
Coq.FSets.FMapListX.Raw.mapi_2	40
Coq.FSets.FMapListX.Raw.mapi_lelistA	40	0.4.1.0.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e); only 1: inversion_clear 1; only 1: auto).	3.63904285431	544
Coq.FSets.FMapListX.Raw.mapi_sorted	40	1.2.2.1.0.2.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: simpl; only 1: auto).	4.38498806953	1163
Coq.FSets.FMapListX.Raw.map2_alt_equiv	40
Coq.FSets.FMapListX.Raw.combine_lelistA	40
Coq.FSets.FMapListX.Raw.combine_sorted	40
Coq.FSets.FMapListX.Raw.map2_sorted	40
Coq.FSets.FMapListX.Raw.combine_1	40
Coq.FSets.FMapListX.Raw.map2_0	40
Coq.FSets.FMapListX.Raw.map2_1	40
Coq.FSets.FMapListX.Raw.map2_2	40
Coq.FSets.FMapListX.Make.MapsTo_1	40
Coq.FSets.FMapListX.Make.mem_1	40
Coq.FSets.FMapListX.Make.mem_2	40
Coq.FSets.FMapListX.Make.empty_1	40	4.2.3	search with cache (only 1: intros EQ; only 1: simpl; only 1: inversion 1).	0.671015024185	104
Coq.FSets.FMapListX.Make.is_empty_1	40
Coq.FSets.FMapListX.Make.is_empty_2	40
Coq.FSets.FMapListX.Make.add_1	40
Coq.FSets.FMapListX.Make.add_2	40
Coq.FSets.FMapListX.Make.add_3	40
Coq.FSets.FMapListX.Make.remove_1	40
Coq.FSets.FMapListX.Make.remove_2	40
Coq.FSets.FMapListX.Make.remove_3	40
Coq.FSets.FMapListX.Make.find_1	40
Coq.FSets.FMapListX.Make.find_2	40
Coq.FSets.FMapListX.Make.elements_1	40	7	search with cache (only 1: firstorder).	2.51911306381	29
Coq.FSets.FMapListX.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0274169445038	2
Coq.FSets.FMapListX.Make.elements_3	40	4.4.0	search with cache (only 1: intros m; only 1: induction m; only 1: intuition).	0.237112045288	39
Coq.FSets.FMapListX.Make.elements_3w	40
Coq.FSets.FMapListX.Make.cardinal_1	40	5	search with cache (only 1: auto).	0.0274319648743	15
Coq.FSets.FMapListX.Make.fold_1	40
Coq.FSets.FMapListX.Make.equal_1	40
Coq.FSets.FMapListX.Make.equal_2	40
Coq.FSets.FMapListX.Make.map_1	40
Coq.FSets.FMapListX.Make.map_2	40
Coq.FSets.FMapListX.Make.mapi_1	40
Coq.FSets.FMapListX.Make.mapi_2	40
Coq.FSets.FMapListX.Make.map2_1	40
Coq.FSets.FMapListX.Make.map2_2	40
Coq.FSets.FMapListX.Make_ord.eq_equal	40
Coq.FSets.FMapListX.Make_ord.eq_1	40
Coq.FSets.FMapListX.Make_ord.eq_2	40
Coq.FSets.FMapListX.Make_ord.eq_refl	40
Coq.FSets.FMapListX.Make_ord.eq_sym	40
Coq.FSets.FMapListX.Make_ord.eq_trans	40
Coq.FSets.FMapListX.Make_ord.lt_trans	40
Coq.FSets.FMapListX.Make_ord.lt_not_eq	40
Coq.FSets.FMapListX.Make_ord.compare	40
Coq.FSets.FSetPositiveX.PositiveSet.In_1	40	0.8	search with cache (only 1: compute; only 1: congruence).	0.185062885284	31
Coq.FSets.FSetPositiveX.PositiveSet.eq_refl	40	0.1	search with cache (only 1: intros a b; only 1: solve_proper).	0.0271098613739	3
Coq.FSets.FSetPositiveX.PositiveSet.eq_sym	40	7	search with cache (only 1: now f_equal).	0.142719984055	62
Coq.FSets.FSetPositiveX.PositiveSet.eq_trans	40
Coq.FSets.FSetPositiveX.PositiveSet.mem_1	40	0	search with cache (only 1: trivial).	0.0221800804138	1
Coq.FSets.FSetPositiveX.PositiveSet.mem_2	40	1.0	search with cache (only 1: unfold In; only 1: trivial).	0.032634973526	3
Coq.FSets.FSetPositiveX.PositiveSet.mem_Leaf	40	1	search with cache (only 1: trivial).	0.0208630561829	2
Coq.FSets.FSetPositiveX.PositiveSet.empty_1	40	6	search with cache (only 1: now BinInt.Z.nzsimpl).	0.0389430522919	16
Coq.FSets.FSetPositiveX.PositiveSet.mem_node	40	0.1.0.0.0.9	search with cache (only 1: fix even_spec 1; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: intro; only 1: trivial).	2.14597082138	1306
Coq.FSets.FSetPositiveX.PositiveSet.is_empty_spec	40	6.1.6	search with cache (only 1: fix even_spec 1; only 1: intros Heq; only 1: destr_bool).	0.769446849823	323
Coq.FSets.FSetPositiveX.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositiveX.PositiveSet.is_empty_2	40	1.0.1	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.954039812088	89
Coq.FSets.FSetPositiveX.PositiveSet.subset_Leaf_s	40	3.0	search with cache (only 1: intros a b; only 1: now BinInt.Z.nzsimpl).	0.0495209693909	5
Coq.FSets.FSetPositiveX.PositiveSet.subset_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.subset_1	40
Coq.FSets.FSetPositiveX.PositiveSet.subset_2	40
Coq.FSets.FSetPositiveX.PositiveSet.equal_subset	40	0.1.70	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: trivial).	15.9434351921	20793
Coq.FSets.FSetPositiveX.PositiveSet.equal_spec	40	3.8	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.537722826004	331
Coq.FSets.FSetPositiveX.PositiveSet.equal_1	40	6.15	search with cache (only 1: fix even_spec 1; only 1: trivial).	9.39360404015	7864
Coq.FSets.FSetPositiveX.PositiveSet.equal_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.189433097839	34
Coq.FSets.FSetPositiveX.PositiveSet.eq_dec	40
Coq.FSets.FSetPositiveX.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_bool_inv	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_inv	40
Coq.FSets.FSetPositiveX.PositiveSet.lex_Eq	40	0.0.2.0.1.16	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: now split; only 1: now split; only 1: now split).	2.23318910599	925
Coq.FSets.FSetPositiveX.PositiveSet.compare_bool_Eq	40	1.0.0.1.0	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: now split; only 1: easy').	0.0919098854065	7
Coq.FSets.FSetPositiveX.PositiveSet.compare_equal	40	1.28	search with cache (only 1: fix even_spec 1; only 1: intuition discriminate).	25.1739029884	14511
Coq.FSets.FSetPositiveX.PositiveSet.compare_gt	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_eq	40
Coq.FSets.FSetPositiveX.PositiveSet.compare	40
Coq.FSets.FSetPositiveX.PositiveSet.ct_cxe	40	15.0.15.0.11.21.3	search with cache (only 1: intuition; only 1: destruct x; only 1: constructor; only 1: cbn in *; only 1: constructor; only 1: cbn in *; only 1: constructor).	28.916503191	40659
Coq.FSets.FSetPositiveX.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0317430496216	4
Coq.FSets.FSetPositiveX.PositiveSet.ct_lxl	40
Coq.FSets.FSetPositiveX.PositiveSet.ct_gxg	40	0.0.0.55.5	search with cache (only 1: intros H; only 1: destruct H; only 1: constructor; only 1: constructor; only 1: constructor).	2.93229222298	5615
Coq.FSets.FSetPositiveX.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0287590026855	4
Coq.FSets.FSetPositiveX.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0519840717316	4
Coq.FSets.FSetPositiveX.PositiveSet.ct_lex	40
Coq.FSets.FSetPositiveX.PositiveSet.ct_compare_bool	40	1.0.0.0.0.0.0.1.40.2	search with cache (only 1: intro H; only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	26.0668740273	35363
Coq.FSets.FSetPositiveX.PositiveSet.compare_x_Leaf	40	1.0.1.9	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: tauto; only 1: trivial).	1.25909686089	293
Coq.FSets.FSetPositiveX.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositiveX.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositiveX.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositiveX.PositiveSet.lt_trans	40
Coq.FSets.FSetPositiveX.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositiveX.PositiveSet.add_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.add_1	40
Coq.FSets.FSetPositiveX.PositiveSet.add_2	40	1.1.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: unfold In; only 1: intuition congruence).	0.0573110580444	18
Coq.FSets.FSetPositiveX.PositiveSet.add_3	40
Coq.FSets.FSetPositiveX.PositiveSet.remove_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.remove_1	40
Coq.FSets.FSetPositiveX.PositiveSet.remove_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.0411758422852	3
Coq.FSets.FSetPositiveX.PositiveSet.remove_3	40	0.0.11	search with cache (only 1: intros a b c; only 1: rewrite remove_spec; only 1: tauto).	0.269493818283	167
Coq.FSets.FSetPositiveX.PositiveSet.singleton_1	40
Coq.FSets.FSetPositiveX.PositiveSet.singleton_2	40	1.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0631279945374	7
Coq.FSets.FSetPositiveX.PositiveSet.union_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.union_1	40
Coq.FSets.FSetPositiveX.PositiveSet.union_2	40
Coq.FSets.FSetPositiveX.PositiveSet.union_3	40	2.1.0.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: firstorder).	0.0914871692657	15
Coq.FSets.FSetPositiveX.PositiveSet.inter_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.inter_1	40
Coq.FSets.FSetPositiveX.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0357458591461	3
Coq.FSets.FSetPositiveX.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0412030220032	3
Coq.FSets.FSetPositiveX.PositiveSet.diff_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.diff_1	40
Coq.FSets.FSetPositiveX.PositiveSet.diff_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0383207798004	3
Coq.FSets.FSetPositiveX.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0454258918762	3
Coq.FSets.FSetPositiveX.PositiveSet.fold_1	40
Coq.FSets.FSetPositiveX.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositiveX.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.filter_1	40
Coq.FSets.FSetPositiveX.PositiveSet.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.057245016098	4
Coq.FSets.FSetPositiveX.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.064738035202	4
Coq.FSets.FSetPositiveX.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.for_all_1	40
Coq.FSets.FSetPositiveX.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.055958032608	4
Coq.FSets.FSetPositiveX.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.exists_1	40
Coq.FSets.FSetPositiveX.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0503158569336	4
Coq.FSets.FSetPositiveX.PositiveSet.partition_filter	40
Coq.FSets.FSetPositiveX.PositiveSet.partition_1	40
Coq.FSets.FSetPositiveX.PositiveSet.partition_2	40	0.0.2.4	search with cache (only 1: intros s s'; only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.115542888641	36
Coq.FSets.FSetPositiveX.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositiveX.PositiveSet.elements_1	40
Coq.FSets.FSetPositiveX.PositiveSet.elements_2	40
Coq.FSets.FSetPositiveX.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositiveX.PositiveSet.elements_3	40
Coq.FSets.FSetPositiveX.PositiveSet.elements_3w	40
Coq.FSets.FSetPositiveX.PositiveSet.choose_1	40
Coq.FSets.FSetPositiveX.PositiveSet.choose_2	40
Coq.FSets.FSetPositiveX.PositiveSet.choose_empty	40
Coq.FSets.FSetPositiveX.PositiveSet.choose_3'	40
Coq.FSets.FSetPositiveX.PositiveSet.choose_3	40
Coq.FSets.FSetPositiveX.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositiveX.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositiveX.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositiveX.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositiveX.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositiveX.PositiveSet.max_elt_2	40
Coq.FSets.FMapWeakListX.Raw.empty_1	40	7	search with cache (only 1: now f_equal).	0.0154600143433	8
Coq.FSets.FMapWeakListX.Raw.empty_NoDup	40	4	search with cache (only 1: repeat constructor).	0.011871099472	5
Coq.FSets.FMapWeakListX.Raw.is_empty_1	40	0.0.40	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: intuition).	32.2178421021	2746
Coq.FSets.FMapWeakListX.Raw.is_empty_2	40	3.5.0.3.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros p l inlist; only 1: destruct p; only 1: inversion_clear 1; only 1: auto).	2.9208419323	985
Coq.FSets.FMapWeakListX.Raw.mem_1	40
Coq.FSets.FMapWeakListX.Raw.mem_2	40
Coq.FSets.FMapWeakListX.Raw.find_2	40
Coq.FSets.FMapWeakListX.Raw.find_1	40
Coq.FSets.FMapWeakListX.Raw.find_eq	40
Coq.FSets.FMapWeakListX.Raw.add_1	40
Coq.FSets.FMapWeakListX.Raw.add_2	40
Coq.FSets.FMapWeakListX.Raw.add_3	40
Coq.FSets.FMapWeakListX.Raw.add_3'	40
Coq.FSets.FMapWeakListX.Raw.add_NoDup	40
Coq.FSets.FMapWeakListX.Raw.add_eq	40
Coq.FSets.FMapWeakListX.Raw.add_not_eq	40
Coq.FSets.FMapWeakListX.Raw.remove_1	40
Coq.FSets.FMapWeakListX.Raw.remove_2	40
Coq.FSets.FMapWeakListX.Raw.remove_3	40	2.0.1.1.0.0.0.1.1	search with cache (only 1: intros m Hm x e; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	9.81435608864	3677
Coq.FSets.FMapWeakListX.Raw.remove_3'	40	0.4.0.3.0.0.0.12	search with cache (only 1: intros m Hm x y e; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: inversion_clear Hm; only 1: auto).	3.19571995735	1670
Coq.FSets.FMapWeakListX.Raw.remove_NoDup	40
Coq.FSets.FMapWeakListX.Raw.elements_1	40	1.0.0.0.1.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros p l inlist; only 1: destruct p; only 1: auto).	0.0468850135803	12
Coq.FSets.FMapWeakListX.Raw.elements_2	40	0	search with cache (only 1: auto).	0.012186050415	1
Coq.FSets.FMapWeakListX.Raw.elements_3w	40	4.2.1	search with cache (only 1: induction m; only 1: intuition; only 1: auto).	0.0915539264679	40
Coq.FSets.FMapWeakListX.Raw.fold_1	40
Coq.FSets.FMapWeakListX.Raw.submap_1	40
Coq.FSets.FMapWeakListX.Raw.submap_2	40
Coq.FSets.FMapWeakListX.Raw.equal_1	40
Coq.FSets.FMapWeakListX.Raw.equal_2	40
Coq.FSets.FMapWeakListX.Raw.map_1	40
Coq.FSets.FMapWeakListX.Raw.map_2	40
Coq.FSets.FMapWeakListX.Raw.map_NoDup	40
Coq.FSets.FMapWeakListX.Raw.mapi_1	40
Coq.FSets.FMapWeakListX.Raw.mapi_2	40
Coq.FSets.FMapWeakListX.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakListX.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakListX.Raw.combine_NoDup	40
Coq.FSets.FMapWeakListX.Raw.combine_l_1	40
Coq.FSets.FMapWeakListX.Raw.combine_r_1	40
Coq.FSets.FMapWeakListX.Raw.combine_1	40
Coq.FSets.FMapWeakListX.Raw.map2_NoDup	40
Coq.FSets.FMapWeakListX.Raw.map2_0	40
Coq.FSets.FMapWeakListX.Raw.map2_1	40
Coq.FSets.FMapWeakListX.Raw.map2_2	40
Coq.FSets.FMapWeakListX.Make.MapsTo_1	40
Coq.FSets.FMapWeakListX.Make.mem_1	40
Coq.FSets.FMapWeakListX.Make.mem_2	40
Coq.FSets.FMapWeakListX.Make.empty_1	40	6	search with cache (only 1: now f_equal).	0.0227429866791	22
Coq.FSets.FMapWeakListX.Make.is_empty_1	40
Coq.FSets.FMapWeakListX.Make.is_empty_2	40
Coq.FSets.FMapWeakListX.Make.add_1	40
Coq.FSets.FMapWeakListX.Make.add_2	40
Coq.FSets.FMapWeakListX.Make.add_3	40
Coq.FSets.FMapWeakListX.Make.remove_1	40
Coq.FSets.FMapWeakListX.Make.remove_2	40
Coq.FSets.FMapWeakListX.Make.remove_3	40
Coq.FSets.FMapWeakListX.Make.find_1	40
Coq.FSets.FMapWeakListX.Make.find_2	40
Coq.FSets.FMapWeakListX.Make.elements_1	40	5.1	search with cache (only 1: intros m; only 1: auto).	0.0163741111755	8
Coq.FSets.FMapWeakListX.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.016252040863	2
Coq.FSets.FMapWeakListX.Make.elements_3w	40
Coq.FSets.FMapWeakListX.Make.cardinal_1	40	3.0	search with cache (only 1: intros m; only 1: auto).	0.0214989185333	5
Coq.FSets.FMapWeakListX.Make.fold_1	40
Coq.FSets.FMapWeakListX.Make.equal_1	40
Coq.FSets.FMapWeakListX.Make.equal_2	40
Coq.FSets.FMapWeakListX.Make.map_1	40
Coq.FSets.FMapWeakListX.Make.map_2	40
Coq.FSets.FMapWeakListX.Make.mapi_1	40
Coq.FSets.FMapWeakListX.Make.mapi_2	40
Coq.FSets.FMapWeakListX.Make.map2_1	40
Coq.FSets.FMapWeakListX.Make.map2_2	40
Coq.FSets.FSetCompatX.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompatX.Backport_Sets.compare	40
Coq.FSets.FSetCompatX.Update_WSets.In_compat	40	3	search with cache (only 1: solve_proper).	1.31983685493	104
Coq.FSets.FSetCompatX.Update_WSets.mem_spec	40
Coq.FSets.FSetCompatX.Update_WSets.equal_spec	40
Coq.FSets.FSetCompatX.Update_WSets.subset_spec	40
Coq.FSets.FSetCompatX.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompatX.Update_WSets.add_spec	40
Coq.FSets.FSetCompatX.Update_WSets.remove_spec	40
Coq.FSets.FSetCompatX.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompatX.Update_WSets.elements_spec1	40	0.14.1	search with cache (only 1: intuition; only 1: red; only 1: intuition).	0.788412094116	218
Coq.FSets.FSetCompatX.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompatX.Update_WSets.exists_spec	40
Coq.FSets.FSetCompatX.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompatX.Update_Sets.lt_compat	40
Coq.FSets.FSetCompatX.Update_Sets.compare_spec	40
Coq.FSets.FMapPositiveX.append_assoc_0	40
Coq.FSets.FMapPositiveX.append_assoc_1	40	3.0.9.0.1.8.0.0.6	search with cache (only 1: induction i; only 1: intros; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	18.1938800812	13075
Coq.FSets.FMapPositiveX.append_neutral_r	40	1.1.7.0.7.0.6	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	5.66562199593	1626
Coq.FSets.FMapPositiveX.append_neutral_l	40	1.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).	0.0548579692841	8
Coq.FSets.FMapPositiveX.PositiveMap.gempty	40	0.1.3.8.13	search with cache (only 1: intros s1; only 1: case s1; only 1: auto; only 1: now auto with arith; only 1: auto with arith).	0.536669015884	575
Coq.FSets.FMapPositiveX.PositiveMap.gss	40
Coq.FSets.FMapPositiveX.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	0.064444065094	7
Coq.FSets.FMapPositiveX.PositiveMap.gso	40
Coq.FSets.FMapPositiveX.PositiveMap.rleaf	40	1.1.3.5.2.0.70	search with cache (only 1: induction i using Pos.peano_ind; only 1: simpl; only 1: auto; only 1: induction i; only 1: now f_equal; only 1: auto; only 1: auto).	27.0739049911	11534
Coq.FSets.FMapPositiveX.PositiveMap.grs	40
Coq.FSets.FMapPositiveX.PositiveMap.gro	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_correct	40
Coq.FSets.FMapPositiveX.PositiveMap.xfind_left	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_io	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositiveX.PositiveMap.find_xfind_h	40	1.4.4.2	search with cache (only 1: destruct i; only 1: auto; only 1: auto; only 1: auto).	1.04837203026	477
Coq.FSets.FMapPositiveX.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_complete	40
Coq.FSets.FMapPositiveX.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositiveX.PositiveMap.mem_find	40
Coq.FSets.FMapPositiveX.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositiveX.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositiveX.PositiveMap.mem_1	40
Coq.FSets.FMapPositiveX.PositiveMap.mem_2	40
Coq.FSets.FMapPositiveX.PositiveMap.MapsTo_1	40	1	search with cache (only 1: congruence).	0.0256149768829	2
Coq.FSets.FMapPositiveX.PositiveMap.find_1	40	4	search with cache (only 1: auto).	0.0908708572388	12
Coq.FSets.FMapPositiveX.PositiveMap.find_2	40	1.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0560059547424	3
Coq.FSets.FMapPositiveX.PositiveMap.empty_1	40	64	search with cache (only 1: by case  =>// undecP; apply /undecP ; <ssreflect_plugin::ssrtclintros@0> right =>notP; apply /notF/undecP ; left).	15.1537799835	22325
Coq.FSets.FMapPositiveX.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositiveX.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositiveX.PositiveMap.add_1	40
Coq.FSets.FMapPositiveX.PositiveMap.add_2	40
Coq.FSets.FMapPositiveX.PositiveMap.add_3	40	9.2.1.2.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: intuition).	7.89554309845	3473
Coq.FSets.FMapPositiveX.PositiveMap.remove_1	40
Coq.FSets.FMapPositiveX.PositiveMap.remove_2	40
Coq.FSets.FMapPositiveX.PositiveMap.remove_3	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_1	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_2	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositiveX.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_3	40
Coq.FSets.FMapPositiveX.PositiveMap.elements_3w	40
Coq.FSets.FMapPositiveX.PositiveMap.xgmapi	40
Coq.FSets.FMapPositiveX.PositiveMap.gmapi	40
Coq.FSets.FMapPositiveX.PositiveMap.mapi_1	40
Coq.FSets.FMapPositiveX.PositiveMap.mapi_2	40
Coq.FSets.FMapPositiveX.PositiveMap.map_1	40
Coq.FSets.FMapPositiveX.PositiveMap.map_2	40
Coq.FSets.FMapPositiveX.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositiveX.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositiveX.PositiveMap.gmap2	40
Coq.FSets.FMapPositiveX.PositiveMap.map2_1	40
Coq.FSets.FMapPositiveX.PositiveMap.map2_2	40
Coq.FSets.FMapPositiveX.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositiveX.PositiveMap.fold_1	40
Coq.FSets.FMapPositiveX.PositiveMap.equal_1	40
Coq.FSets.FMapPositiveX.PositiveMap.equal_2	40
Coq.FSets.FMapPositiveX.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositiveX.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositiveX.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositiveX.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff s x), (FM.mem_iff s y), (FM.In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.116327047348	10
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.choose_mem_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.choose_mem_2	40	2.0.3	search with cache (only 1: intros; only 1: apply is_empty_1; only 1: auto with set).	0.233283042908	15
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_mem_1	40	10	search with cache (only 1: intuition).	0.325532913208	80
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_mem_2	40	0.0.0.0.1.2.1.0.1	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	4.74874806404	870
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_mem_1	40	0.7	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.131546020508	12
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_mem_2	40	0.0.0.0.1.2.2.0.1	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	4.64035987854	744
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0918159484863	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.mem_3	40	0.0.0.0	search with cache (only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0421259403229	4
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.mem_4	40	2.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with arith).	0.0263698101044	4
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_refl	40	0.4	search with cache (only 1: apply equal_1; only 1: auto with set).	0.0158050060272	6
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_sym	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_trans	40	8.2.4	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	1.09609985352	334
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_equal	40	2.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0257449150085	6
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.equal_cardinal	40	5.0.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: split).	0.0299618244171	10
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_refl	40	3.2	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0346078872681	18
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_antisym	40	8.0	search with cache (only 1: intros; only 1: auto with set fset).	0.0220818519592	10
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.0134599208832	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_mem_3	40	5.5	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	0.685842990875	132
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_equal	40	0.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0740749835968	6
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_mem_3	40	5.3	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	0.593364953995	91
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_equal	40	0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.235532999039	51
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_remove	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_add	40	3.12	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	1.45610404015	690
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.is_empty_cardinal	40	0.0.0.0.2.0.0.0.0.2.1.3	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: discriminate; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: discriminate).	11.0365741253	3799
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.singleton_mem_1	40	4.1	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	1.522824049	236
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.singleton_mem_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.singleton_mem_3	40	4.5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	2.0284318924	272
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_sym	40	0	search with cache (only 1: intuition).	0.0599110126495	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.018345117569	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0160520076752	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0156509876251	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.0143010616302	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0234811306	3
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.0148749351501	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0139517784119	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0152778625488	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0207078456879	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_sym	40	0.4	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.105826854706	6
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0144259929657	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0147070884705	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0143010616302	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0763080120087	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0257749557495	2
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0138309001923	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0153629779816	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_add_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0136308670044	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0133309364319	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0211760997772	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.diff_subset	40	0.1	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.030130147934	3
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0154061317444	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0983130931854	4
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0246789455414	2
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0140180587769	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0191118717194	2
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.fold_add	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_fold_1	40	0.2.1.1.1.0.1	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.80228185654	363
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_cardinal_1	40	1	search with cache (only 1: auto with set fset).	0.110607147217	31
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_cardinal_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.subset_cardinal	40	2.2	search with cache (only 1: intros H a; only 1: auto with set fset).	0.0306329727173	15
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.Comp'	40	4	search with cache (only 1: solve_proper).	0.019926071167	5
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.partition_filter_1	40	9.8	search with cache (only 1: intros m; only 1: auto with set).	0.244965076447	325
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0372631549835	1
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.filter_union	40	0.0.0.1.4.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	26.7049319744	912
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_mem_1	40	16.0.0.8.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	10.9250609875	4358
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_mem_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.Comp'	40	2.1.1.12	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.304076910019	408
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqPropertiesX.WEqProperties_fun.sum_compat	40
Coq.FSets.FMapAVLX.Raw.Proofs.MapsTo_In	40	0.0.2.1.3.10	search with cache (only 1: intros x y H; only 1: intro H2; only 1: elim H2; only 1: eauto; only 1: intuition; only 1: intuition).	5.4413459301	2866
Coq.FSets.FMapAVLX.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVLX.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVLX.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.In_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.In_node_iff	40	1	search with cache (only 1: intuition_in).	0.418044090271	2
Coq.FSets.FMapAVLX.Raw.Proofs.lt_leaf	40	5.2	search with cache (only 1: intros; only 1: inversion 1).	0.0153820514679	9
Coq.FSets.FMapAVLX.Raw.Proofs.gt_leaf	40	1.9	search with cache (only 1: intros a b; only 1: intuition_in).	0.240798950195	89
Coq.FSets.FMapAVLX.Raw.Proofs.lt_tree_node	40	5.0.1	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: L.MX.order).	0.471536159515	18
Coq.FSets.FMapAVLX.Raw.Proofs.gt_tree_node	40	0.0.1	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.209645986557	4
Coq.FSets.FMapAVLX.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0211849212646	2
Coq.FSets.FMapAVLX.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0123870372772	1
Coq.FSets.FMapAVLX.Raw.Proofs.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.0333659648895	2
Coq.FSets.FMapAVLX.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0138900279999	1
Coq.FSets.FMapAVLX.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.lt_tree_trans	40	5.6	search with cache (only 1: intros m x e f; only 1: eauto with ordered_type).	2.91978502274	401
Coq.FSets.FMapAVLX.Raw.Proofs.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0162789821625	3
Coq.FSets.FMapAVLX.Raw.Proofs.gt_tree_trans	40	8.0	search with cache (only 1: unfold gt_tree in *; only 1: eauto with ordered_type).	0.216315031052	23
Coq.FSets.FMapAVLX.Raw.Proofs.empty_bst	40	8	search with cache (only 1: eauto with ordered_type).	0.0114040374756	9
Coq.FSets.FMapAVLX.Raw.Proofs.empty_1	40	8.0	search with cache (only 1: unfold empty; only 1: now f_equal).	0.0562460422516	10
Coq.FSets.FMapAVLX.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.is_empty_2	40	12.3	search with cache (only 1: intros; only 1: now destruct m).	2.81531381607	852
Coq.FSets.FMapAVLX.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.mem_2	40	2.0.2.2.0.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	1.40609717369	363
Coq.FSets.FMapAVLX.Raw.Proofs.find_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.in_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_in_iff	40	0.0.0.2.1.0.0.1.4.1	search with cache (only 1: split; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: auto using find_1, find_2; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	11.2943439484	2109
Coq.FSets.FMapAVLX.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVLX.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVLX.Raw.Proofs.create_bst	40	0.0.0.0.13.0	search with cache (only 1: intuition_in; only 1: constructor 2; only 1: intuition_in; only 1: intuition_in; only 1: intuition_in; only 1: intuition_in).	3.52864313126	766
Coq.FSets.FMapAVLX.Raw.Proofs.create_in	40	1.1	search with cache (only 1: unfold create; only 1: intuition_in).	1.54205298424	13
Coq.FSets.FMapAVLX.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVLX.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_3	40
Coq.FSets.FMapAVLX.Raw.Proofs.add_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVLX.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVLX.Raw.Proofs.join_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.join_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVLX.Raw.Proofs.split_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVLX.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVLX.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVLX.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVLX.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.flatten_e_elements	40	0.1.2.0.0	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.0480709075928	8
Coq.FSets.FMapAVLX.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVLX.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVLX.Raw.Proofs.equal_more_IfEq	40
Coq.FSets.FMapAVLX.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVLX.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVLX.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVLX.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0479829311371	7
Coq.FSets.FMapAVLX.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVLX.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVLX.IntMake.MapsTo_1	40
Coq.FSets.FMapAVLX.IntMake.mem_1	40
Coq.FSets.FMapAVLX.IntMake.mem_2	40
Coq.FSets.FMapAVLX.IntMake.empty_1	40	2.0.3.1	search with cache (only 1: intros a b; only 1: simpl; only 1: intuition_in; only 1: inversion H).	0.409111022949	17
Coq.FSets.FMapAVLX.IntMake.is_empty_1	40
Coq.FSets.FMapAVLX.IntMake.is_empty_2	40
Coq.FSets.FMapAVLX.IntMake.add_1	40	3.4.0.2.1.12	search with cache (only 1: red; only 1: simpl; only 1: induction m; only 1: intros m x y e; only 1: simpl; only 1: auto using find_1, add_1 with ordered_type).	32.2227499485	7060
Coq.FSets.FMapAVLX.IntMake.add_2	40
Coq.FSets.FMapAVLX.IntMake.add_3	40
Coq.FSets.FMapAVLX.IntMake.remove_1	40
Coq.FSets.FMapAVLX.IntMake.remove_2	40
Coq.FSets.FMapAVLX.IntMake.remove_3	40
Coq.FSets.FMapAVLX.IntMake.find_1	40	2.0.1.0.14	search with cache (only 1: induction m; only 1: intros; only 1: apply find_1; only 1: auto; only 1: auto).	4.80992007256	2011
Coq.FSets.FMapAVLX.IntMake.find_2	40	0.1.2.8.7	search with cache (only 1: intros e' eqfind; only 1: red; only 1: intros; only 1: apply find_2; only 1: auto using Raw.Proofs.find_1, find_2).	1.35719394684	1663
Coq.FSets.FMapAVLX.IntMake.fold_1	40
Coq.FSets.FMapAVLX.IntMake.elements_1	40
Coq.FSets.FMapAVLX.IntMake.elements_2	40	1.10.1.1	search with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intros; only 1: rewrite <- elements_mapsto; only 1: auto).	1.07416200638	579
Coq.FSets.FMapAVLX.IntMake.elements_3	40
Coq.FSets.FMapAVLX.IntMake.elements_3w	40
Coq.FSets.FMapAVLX.IntMake.cardinal_1	40
Coq.FSets.FMapAVLX.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVLX.IntMake.equal_1	40
Coq.FSets.FMapAVLX.IntMake.equal_2	40	1.1.1.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	5.44600892067	572
Coq.FSets.FMapAVLX.IntMake.map_1	40
Coq.FSets.FMapAVLX.IntMake.map_2	40
Coq.FSets.FMapAVLX.IntMake.mapi_1	40
Coq.FSets.FMapAVLX.IntMake.mapi_2	40
Coq.FSets.FMapAVLX.IntMake.map2_1	40
Coq.FSets.FMapAVLX.IntMake.map2_2	40
Coq.FSets.FMapAVLX.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVLX.IntMake_ord.compare_end_Cmp	40
Coq.FSets.FMapAVLX.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVLX.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVLX.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVLX.IntMake_ord.compare	40
Coq.FSets.FMapAVLX.IntMake_ord.eq_seq	40	0.0	search with cache (only 1: intros a b; only 1: solve_proper).	0.0172469615936	2
Coq.FSets.FMapAVLX.IntMake_ord.lt_slt	40	4	search with cache (only 1: solve_proper).	0.0951099395752	5
Coq.FSets.FMapAVLX.IntMake_ord.eq_1	40
Coq.FSets.FMapAVLX.IntMake_ord.eq_2	40
Coq.FSets.FMapAVLX.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVLX.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVLX.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVLX.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVLX.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFactsX.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.mem_iff	40	48	search with cache (only 1: intuition).	21.8120660782	13774
Coq.FSets.FSetFactsX.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.equal_iff	40	7	search with cache (only 1: intuition).	0.355100154877	15
Coq.FSets.FSetFactsX.WFacts_fun.subset_iff	40	8	search with cache (only 1: intuition).	0.223688840866	22
Coq.FSets.FSetFactsX.WFacts_fun.empty_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.is_empty_iff	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.778958797455	78
Coq.FSets.FSetFactsX.WFacts_fun.singleton_iff	40	2.4	search with cache (only 1: compute; only 1: intuition).	0.168547153473	8
Coq.FSets.FSetFactsX.WFacts_fun.add_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.remove_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.remove_neq_iff	40	9.0.4.6.3.0	search with cache (only 1: split; only 1: intro; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	8.43973493576	6449
Coq.FSets.FSetFactsX.WFacts_fun.union_iff	40	15	search with cache (only 1: intuition).	1.87249302864	265
Coq.FSets.FSetFactsX.WFacts_fun.inter_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.diff_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.filter_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.for_all_iff	40	21	search with cache (only 1: intuition).	6.41202402115	4818
Coq.FSets.FSetFactsX.WFacts_fun.exists_iff	40
Coq.FSets.FSetFactsX.WFacts_fun.elements_iff	40	38	search with cache (only 1: intuition).	7.43448400497	5398
Coq.FSets.FSetFactsX.WFacts_fun.mem_b	40
Coq.FSets.FSetFactsX.WFacts_fun.empty_b	40
Coq.FSets.FSetFactsX.WFacts_fun.add_b	40
Coq.FSets.FSetFactsX.WFacts_fun.add_neq_b	40
Coq.FSets.FSetFactsX.WFacts_fun.remove_b	40
Coq.FSets.FSetFactsX.WFacts_fun.remove_neq_b	40
Coq.FSets.FSetFactsX.WFacts_fun.singleton_b	40
Coq.FSets.FSetFactsX.WFacts_fun.union_b	40
Coq.FSets.FSetFactsX.WFacts_fun.inter_b	40
Coq.FSets.FSetFactsX.WFacts_fun.diff_b	40
Coq.FSets.FSetFactsX.WFacts_fun.elements_b	40
Coq.FSets.FSetFactsX.WFacts_fun.filter_b	40
Coq.FSets.FSetFactsX.WFacts_fun.for_all_b	40
Coq.FSets.FSetFactsX.WFacts_fun.exists_b	40
Coq.FSets.FSetFactsX.WFacts_fun.E_ST	40	15.0.11.4.11	search with cache (only 1: constructor; only 1: auto; only 1: intros EQ; only 1: auto; only 1: eauto).	3.17690396309	2756
Coq.FSets.FSetFactsX.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFactsX.WFacts_fun.In_m	40
Coq.FSets.FSetFactsX.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFactsX.WFacts_fun.Empty_m	40
Coq.FSets.FSetFactsX.WFacts_fun.mem_m	40
Coq.FSets.FSetFactsX.WFacts_fun.singleton_m	40
Coq.FSets.FSetFactsX.WFacts_fun.add_m	40
Coq.FSets.FSetFactsX.WFacts_fun.remove_m	40
Coq.FSets.FSetFactsX.WFacts_fun.union_m	40
Coq.FSets.FSetFactsX.WFacts_fun.inter_m	40
Coq.FSets.FSetFactsX.WFacts_fun.diff_m	40
Coq.FSets.FSetFactsX.WFacts_fun.Subset_m	40
Coq.FSets.FSetFactsX.WFacts_fun.subset_m	40
Coq.FSets.FSetFactsX.WFacts_fun.equal_m	40
Coq.FSets.FSetFactsX.WFacts_fun.Subset_refl	40	5.1	search with cache (only 1: intuition; only 1: now f_equal).	0.124361991882	8
Coq.FSets.FSetFactsX.WFacts_fun.Subset_trans	40	4.1.0	search with cache (only 1: red; only 1: intros s s' H s'' s''' H0 a; only 1: auto).	0.69193315506	95
Coq.FSets.FSetFactsX.WFacts_fun.In_s_m	40
Coq.FSets.FSetFactsX.WFacts_fun.Empty_s_m_Proper	40	3.1.0	search with cache (only 1: unfold Subset; only 1: unfold Empty; only 1: firstorder).	0.0572350025177	7
Coq.FSets.FSetFactsX.WFacts_fun.add_s_m_Proper	40	0.2.0.10.1.15	search with cache (only 1: intros Hb; only 1: intuition; only 1: intro; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	18.09207201	5172
Coq.FSets.FSetFactsX.WFacts_fun.remove_s_m_Proper	40	0.2.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.413645982742	13
Coq.FSets.FSetFactsX.WFacts_fun.union_s_m_Proper	40	0.0.3	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.383029937744	6
Coq.FSets.FSetFactsX.WFacts_fun.inter_s_m_Proper	40	0.0.6.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.0579471588135	10
Coq.FSets.FSetFactsX.WFacts_fun.diff_s_m_Proper	40	0.0.0.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.0561800003052	4
Coq.FSets.FSetFactsX.WFacts_fun.filter_equal	40
Coq.FSets.FSetFactsX.WFacts_fun.filter_ext	40
Coq.FSets.FSetFactsX.WFacts_fun.filter_subset	40
Coq.FSets.FMapFullAVLX.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVLX.AvlProofs.avl_node	40	0	search with cache (only 1: intuition).	0.0249519348145	1
Coq.FSets.FMapFullAVLX.AvlProofs.height_0	40
Coq.FSets.FMapFullAVLX.AvlProofs.empty_avl	40	2.0	search with cache (only 1: unfold empty, Empty; only 1: intuition_in).	0.0356559753418	4
Coq.FSets.FMapFullAVLX.AvlProofs.create_avl	40	0.9.0	search with cache (only 1: intros; only 1: unfold assert_false, create; only 1: auto).	5.79142904282	275
Coq.FSets.FMapFullAVLX.AvlProofs.create_height	40	0	search with cache (only 1: intuition).	0.0189919471741	1
Coq.FSets.FMapFullAVLX.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVLX.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.merge_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVLX.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.map_height	40	2.0.30	search with cache (only 1: destruct m; only 1: intuition; only 1: auto).	2.89039492607	1163
Coq.FSets.FMapFullAVLX.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0363681316376	5
Coq.FSets.FMapFullAVLX.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVLX.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVLX.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVLX.IntMake.mem_1	40	2.1.15	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: eauto with bool).	6.50169801712	672
Coq.FSets.FMapFullAVLX.IntMake.mem_2	40	5.0.16	search with cache (only 1: fix even_spec 1; only 1: unfold In, mem; only 1: intuition_in).	10.8895919323	3836
Coq.FSets.FMapFullAVLX.IntMake.empty_1	40	11	search with cache (only 1: now f_equal).	0.703492164612	100
Coq.FSets.FMapFullAVLX.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVLX.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVLX.IntMake.add_1	40
Coq.FSets.FMapFullAVLX.IntMake.add_2	40
Coq.FSets.FMapFullAVLX.IntMake.add_3	40
Coq.FSets.FMapFullAVLX.IntMake.remove_1	40
Coq.FSets.FMapFullAVLX.IntMake.remove_2	40
Coq.FSets.FMapFullAVLX.IntMake.remove_3	40
Coq.FSets.FMapFullAVLX.IntMake.find_1	40
Coq.FSets.FMapFullAVLX.IntMake.find_2	40
Coq.FSets.FMapFullAVLX.IntMake.fold_1	40
Coq.FSets.FMapFullAVLX.IntMake.elements_1	40
Coq.FSets.FMapFullAVLX.IntMake.elements_2	40
Coq.FSets.FMapFullAVLX.IntMake.elements_3	40
Coq.FSets.FMapFullAVLX.IntMake.elements_3w	40
Coq.FSets.FMapFullAVLX.IntMake.cardinal_1	40
Coq.FSets.FMapFullAVLX.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVLX.IntMake.equal_1	40
Coq.FSets.FMapFullAVLX.IntMake.equal_2	40	0.0.1.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.098461151123	20
Coq.FSets.FMapFullAVLX.IntMake.map_1	40
Coq.FSets.FMapFullAVLX.IntMake.map_2	40
Coq.FSets.FMapFullAVLX.IntMake.mapi_1	40
Coq.FSets.FMapFullAVLX.IntMake.mapi_2	40
Coq.FSets.FMapFullAVLX.IntMake.map2_1	40
Coq.FSets.FMapFullAVLX.IntMake.map2_2	40
Coq.FSets.FMapFullAVLX.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVLX.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVLX.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVLX.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVLX.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVLX.IntMake_ord.compare	40
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_seq	40	1	search with cache (only 1: solve_proper).	0.02272605896	2
Coq.FSets.FMapFullAVLX.IntMake_ord.lt_slt	40	0.0	search with cache (only 1: intros a b; only 1: tauto).	0.0321080684662	2
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVLX.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVLX.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVLX.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.In_In	40	0.1.7	search with cache (only 1: intros a; only 1: symmetry; only 1: intuition).	0.0765330791473	24
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.Subset_Included	40	0.0	search with cache (only 1: compute; only 1: auto with extcore).	0.0301129817963	2
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.Equal_Same_set	40	0.0.4.3.2.0	search with cache (only 1: compute; only 1: intros until s; only 1: intro x; only 1: intuition; only 1: eauto with set; only 1: eauto with set).	11.0156629086	736
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.empty_Empty_Set	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.Empty_Empty_set	40	11.3	search with cache (only 1: unfold Subset, Empty, impl; only 1: firstorder).	12.9695990086	1864
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.singleton_Singleton	40	0.3.2.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intros; only 1: intuition; only 1: Dec.fsetdec).	0.360512971878	9
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSetX.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetLogicalFacts.test_push	40	6.0	search with cache (only 1: unfold decidable; only 1: auto).	1.02297091484	8
Coq.FSets.FSetDecideX.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.137797117233	3
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	1.1.0	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0300281047821	5
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	1	search with cache (only 1: fsetdec).	1.12664890289	32
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.22071313858	1
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0297889709473	1
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_add_In	40	2	search with cache (only 1: fsetdec).	0.075599193573	3
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.0	search with cache (only 1: unfold Subset; only 1: fsetdec).	0.0660948753357	2
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0794289112091	1
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.122482061386	1
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.152633190155	1
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0652730464935	1
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	2	search with cache (only 1: fsetdec).	0.223685979843	12
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.25766992569	1
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_too_complex	40	1.1.2	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.766661882401	28
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.function_test_1	40	0	search with cache (only 1: fsetdec).	0.0745160579681	1
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0899751186371	1
Coq.FSets.FSetDecideX.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0660028457642	1
Coq.FSets.FSetPropertiesX.WProperties_fun.In_dec	40	0.0.0.7.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	3.90141797066	109
Coq.FSets.FSetPropertiesX.WProperties_fun.Add_Equal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.equal_refl	40	1.1.0	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0279381275177	5
Coq.FSets.FSetPropertiesX.WProperties_fun.equal_sym	40	3.3.1	search with cache (only 1: destruct (subset s s''); only 1: intuition; only 1: intuition).	0.108933210373	42
Coq.FSets.FSetPropertiesX.WProperties_fun.equal_trans	40
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_refl	40	3.0.1.0	search with cache (only 1: apply subset_2; only 1: apply subset_1; only 1: apply subset_2; only 1: intuition).	0.100888967514	16
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0357370376587	1
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_antisym	40	0.0.2	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0266320705414	5
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0376207828522	1
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_empty	40	1.1.0.1.0	search with cache (only 1: apply subset_2; only 1: apply subset_1; only 1: apply subset_2; only 1: apply subset_1; only 1: fsetdec).	0.0448911190033	12
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0491089820862	1
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0522990226746	1
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0745289325714	1
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0617859363556	1
Coq.FSets.FSetPropertiesX.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.0320661067963	1
Coq.FSets.FSetPropertiesX.WProperties_fun.double_inclusion	40	0.0.0.24.9	search with cache (only 1: red; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	2.2117061615	1265
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0593221187592	1
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0410559177399	1
Coq.FSets.FSetPropertiesX.WProperties_fun.add_equal	40	2.1.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.0979609489441	6
Coq.FSets.FSetPropertiesX.WProperties_fun.add_add	40	0	search with cache (only 1: fsetdec).	0.156394004822	1
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_equal	40	1	search with cache (only 1: fsetdec).	0.0944509506226	2
Coq.FSets.FSetPropertiesX.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.128429174423	1
Coq.FSets.FSetPropertiesX.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.116713047028	1
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.121467828751	1
Coq.FSets.FSetPropertiesX.WProperties_fun.singleton_equal_add	40	1	search with cache (only 1: fsetdec).	0.0899848937988	2
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.231305122375	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_sym	40	4	search with cache (only 1: fsetdec).	0.0878179073334	5
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0919141769409	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0856277942657	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.107022047043	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.152052164078	1
Coq.FSets.FSetPropertiesX.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0717821121216	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.165114879608	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.265939950943	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.227088928223	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0345709323883	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0356390476227	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_3	40	2	search with cache (only 1: fsetdec).	0.060889005661	3
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_4	40	2	search with cache (only 1: fsetdec).	0.05029296875	3
Coq.FSets.FSetPropertiesX.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0473990440369	1
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0840210914612	1
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0828170776367	1
Coq.FSets.FSetPropertiesX.WProperties_fun.not_in_union	40	8	search with cache (only 1: fsetdec).	2.24673199654	66
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_sym	40	0.0.0.0.2	search with cache (only 1: split; only 1: do 2 rewrite inter_iff; only 1: tauto; only 1: do 2 rewrite inter_iff; only 1: tauto).	0.146255970001	7
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_subset_equal	40	2	search with cache (only 1: fsetdec).	0.0586550235748	3
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0738198757172	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0957629680634	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.136250972748	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.152112960815	1
Coq.FSets.FSetPropertiesX.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.176993131638	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_add_1	40	6.2	search with cache (only 1: intuition; only 1: fsetdec).	0.684027910233	57
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.124204874039	1
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_inter_1	40	3	search with cache (only 1: fsetdec).	0.0438170433044	4
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0402860641479	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.035178899765	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0335299968719	1
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.054878950119	1
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_diff_1	40	4	search with cache (only 1: fsetdec).	0.0635538101196	5
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0843091011047	1
Coq.FSets.FSetPropertiesX.WProperties_fun.diff_subset	40	1	search with cache (only 1: fsetdec).	0.0363538265228	2
Coq.FSets.FSetPropertiesX.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0909810066223	1
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0951380729675	1
Coq.FSets.FSetPropertiesX.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.158159017563	1
Coq.FSets.FSetPropertiesX.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.109488964081	1
Coq.FSets.FSetPropertiesX.WProperties_fun.Add_add	40
Coq.FSets.FSetPropertiesX.WProperties_fun.Add_remove	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.150959968567	3
Coq.FSets.FSetPropertiesX.WProperties_fun.union_Add	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.20724606514	5
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.326946020126	2
Coq.FSets.FSetPropertiesX.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.296984910965	2
Coq.FSets.FSetPropertiesX.WProperties_fun.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.223062992096	2
Coq.FSets.FSetPropertiesX.WProperties_fun.elements_Empty	40
Coq.FSets.FSetPropertiesX.WProperties_fun.elements_empty	40
Coq.FSets.FSetPropertiesX.WProperties_fun.of_list_1	40
Coq.FSets.FSetPropertiesX.WProperties_fun.of_list_2	40
Coq.FSets.FSetPropertiesX.WProperties_fun.of_list_3	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_rec	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_rec_nodep	40	1.0.2.0.0.0.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.094822883606	14
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_rel	40
Coq.FSets.FSetPropertiesX.WProperties_fun.set_induction	40
Coq.FSets.FSetPropertiesX.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_identity	40	0.2.0.3.0.6.1	search with cache (only 1: intros a b; only 1: red; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: intuition; only 1: fsetdec).	6.19610095024	692
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_0	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_1	40	9.0.6.4.0.1	search with cache (only 1: intro x; only 1: intros; only 1: apply fold_rec_bis; only 1: firstorder; only 1: auto with relations; only 1: fsetdec).	15.7683088779	5639
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_2	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_1b	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_commutes	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_init	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_equal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_empty	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_add	40	2.3.3.3.3.3.2.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	20.2549240589	9140
Coq.FSets.FSetPropertiesX.WProperties_fun.add_fold	40
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_fold_1	40
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_fold_2	40	0.8.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.856616973877	255
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_union	40
Coq.FSets.FSetPropertiesX.WProperties_fun.fold_plus	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_0	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_1	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_2	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_inv_2b	40	0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	0.156975030899	16
Coq.FSets.FSetPropertiesX.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetPropertiesX.WProperties_fun.empty_cardinal	40	0.0.0.0	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.0354299545288	4
Coq.FSets.FSetPropertiesX.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.union_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetPropertiesX.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetPropertiesX.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetPropertiesX.WProperties_fun.union_cardinal_le	40	2.1.8.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	1.42774891853	607
Coq.FSets.FSetPropertiesX.WProperties_fun.add_cardinal_1	40	2.4.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	0.563588857651	74
Coq.FSets.FSetPropertiesX.WProperties_fun.add_cardinal_2	40	0.1.0.0.0.1.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with arith; only 1: auto with set).	1.24099397659	303
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_cardinal_1	40	0.0.0.1.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: auto with set; only 1: auto with set; only 1: expAdd; only 1: fsetdec).	1.04855895042	249
Coq.FSets.FSetPropertiesX.WProperties_fun.remove_cardinal_2	40	4	search with cache (only 1: auto with set fset).	0.27157998085	63
Coq.FSets.FSetPropertiesX.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetPropertiesX.OrdProperties.gtb_1	40
Coq.FSets.FSetPropertiesX.OrdProperties.leb_1	40
Coq.FSets.FSetPropertiesX.OrdProperties.gtb_compat	40	0.1.0.1.0.0.1.0.6.8	search with cache (only 1: intros m Hm; only 1: intros; only 1: unfold gtb; only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: intuition; only 1: ME.elim_comp; only 1: intuition; only 1: ME.elim_comp; only 1: intuition).	5.12990903854	809
Coq.FSets.FSetPropertiesX.OrdProperties.leb_compat	40
Coq.FSets.FSetPropertiesX.OrdProperties.elements_split	40
Coq.FSets.FSetPropertiesX.OrdProperties.elements_Add	40
Coq.FSets.FSetPropertiesX.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetPropertiesX.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetPropertiesX.OrdProperties.set_induction_max	40
Coq.FSets.FSetPropertiesX.OrdProperties.set_induction_min	40
Coq.FSets.FSetPropertiesX.OrdProperties.fold_3	40
Coq.FSets.FSetPropertiesX.OrdProperties.fold_4	40
Coq.FSets.FSetPropertiesX.OrdProperties.fold_equal	40
Coq.FSets.FSetPropertiesX.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0345640182495	3
Coq.FSets.FSetPropertiesX.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.061136007309	3
Coq.FSets.FSetPropertiesX.OrdProperties.choose_equal	40
Coq.Wellfounded.Lexicographic_ProductX.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_ProductX.wf_lexprod	40
Coq.Wellfounded.Lexicographic_ProductX.Acc_symprod	40
Coq.Wellfounded.Lexicographic_ProductX.wf_symprod	40
Coq.Wellfounded.Lexicographic_ProductX.swap_Acc	40
Coq.Wellfounded.Lexicographic_ProductX.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_ProductX.wf_swapprod	40
Coq.Wellfounded.Transitive_ClosureX.incl_clos_trans	40	9.3	search with cache (only 1: red; only 1: (apply t_step; assumption) || eapply t_trans).	0.0614111423492	115
Coq.Wellfounded.Transitive_ClosureX.Acc_clos_trans	40
Coq.Wellfounded.Transitive_ClosureX.Acc_inv_trans	40	0.0.0.1.3.3	search with cache (only 1: induction 1; only 1: constructor; only 1: apply Acc_inv with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.184492111206	135
Coq.Wellfounded.Transitive_ClosureX.wf_clos_trans	40	17	search with cache (only 1: firstorder).	0.238550901413	303
Coq.Wellfounded.Inverse_ImageX.Acc_lemma	40
Coq.Wellfounded.Inverse_ImageX.Acc_inverse_image	40
Coq.Wellfounded.Inverse_ImageX.wf_inverse_image	40
Coq.Wellfounded.Inverse_ImageX.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_ImageX.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_UnionX.acc_A_sum	40
Coq.Wellfounded.Disjoint_UnionX.acc_B_sum	40
Coq.Wellfounded.Disjoint_UnionX.wf_disjoint_sum	40
Coq.Wellfounded.UnionX.strip_commut	40
Coq.Wellfounded.UnionX.Acc_union	40
Coq.Wellfounded.UnionX.wf_union	40
Coq.Wellfounded.InclusionX.Acc_incl	40
Coq.Wellfounded.InclusionX.wf_incl	40	3.2	search with cache (only 1: intros x x' Hxx'; only 1: auto with arith).	0.0193178653717	7
Coq.Wellfounded.Well_OrderingX.wf_WO	40
Coq.Wellfounded.Well_OrderingX.wof	40
Coq.Wellfounded.Lexicographic_ExponentiationX.left_prefix	40
Coq.Wellfounded.Lexicographic_ExponentiationX.right_prefix	40
Coq.Wellfounded.Lexicographic_ExponentiationX.desc_prefix	40
Coq.Wellfounded.Lexicographic_ExponentiationX.desc_tail	40
Coq.Wellfounded.Lexicographic_ExponentiationX.dist_aux	40
Coq.Wellfounded.Lexicographic_ExponentiationX.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_ExponentiationX.desc_end	40
Coq.Wellfounded.Lexicographic_ExponentiationX.ltl_unit	40
Coq.Wellfounded.Lexicographic_ExponentiationX.acc_app	40
Coq.Wellfounded.Lexicographic_ExponentiationX.wf_lex_exp	40
Coq.Numbers.HexadecimalNX.Unsigned.of_to	40
Coq.Numbers.HexadecimalNX.Unsigned.to_of	40
Coq.Numbers.HexadecimalNX.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNX.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalNX.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalNX.Unsigned.of_inj	40	7	search with cache (only 1: apply Unsigned.of_inj).	0.0515050888062	20
Coq.Numbers.HexadecimalNX.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNX.Signed.of_to	40
Coq.Numbers.HexadecimalNX.Signed.to_of	40
Coq.Numbers.HexadecimalNX.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNX.Signed.to_int_pos_surj	40	0.0.2.1.0.0	search with cache (only 1: simpl; only 1: rewrite <- HexadecimalPos.Unsigned.to_of; only 1: unfold N.to_hex_int; only 1: exists (N.of_hex_uint d); only 1: rewrite Unsigned.to_of; only 1: now f_equal).	0.12047290802	38
Coq.Numbers.HexadecimalNX.Signed.of_int_norm	40
Coq.Numbers.HexadecimalNX.Signed.of_inj_pos	40
Coq.Numbers.DecimalZX.of_to	40
Coq.Numbers.DecimalZX.to_of	40
Coq.Numbers.DecimalZX.to_int_inj	40
Coq.Numbers.DecimalZX.to_int_surj	40
Coq.Numbers.DecimalZX.of_int_norm	40
Coq.Numbers.DecimalZX.of_inj	40	4.2.14	search with cache (only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: intros [=<-]; only 1: trivial).	17.358412981	12862
Coq.Numbers.DecimalZX.of_iff	40
Coq.Numbers.DecimalZX.of_uint_iter_D0	40
Coq.Numbers.DecimalZX.of_int_iter_D0	40
Coq.Numbers.DecimalNatX.Unsigned.to_lu_succ	40	5	search with cache (only 1: now simpl).	0.0111050605774	6
Coq.Numbers.DecimalNatX.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNatX.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNatX.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNatX.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNatX.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNatX.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNatX.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNatX.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNatX.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNatX.Unsigned.of_to	40
Coq.Numbers.DecimalNatX.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNatX.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNatX.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNatX.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNatX.Unsigned.to_of	40
Coq.Numbers.DecimalNatX.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNatX.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNatX.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNatX.Unsigned.of_inj	40
Coq.Numbers.DecimalNatX.Unsigned.of_iff	40
Coq.Numbers.DecimalNatX.Signed.of_to	40
Coq.Numbers.DecimalNatX.Signed.to_of	40
Coq.Numbers.DecimalNatX.Signed.to_int_inj	40
Coq.Numbers.DecimalNatX.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNatX.Signed.of_int_norm	40
Coq.Numbers.DecimalNatX.Signed.of_inj_pos	40
Coq.Numbers.DecimalFactsX.uint_dec	40	12	search with cache (only 1: decide equality).	0.278958082199	46
Coq.Numbers.DecimalFactsX.rev_revapp	40
Coq.Numbers.DecimalFactsX.rev_rev	40
Coq.Numbers.DecimalFactsX.revapp_rev_nil	40
Coq.Numbers.DecimalFactsX.app_nil_r	40
Coq.Numbers.DecimalFactsX.app_int_nil_r	40
Coq.Numbers.DecimalFactsX.revapp_revapp_1	40
Coq.Numbers.DecimalFactsX.nb_digits_pos	40
Coq.Numbers.DecimalFactsX.nb_digits_revapp	40
Coq.Numbers.DecimalFactsX.nb_digits_rev	40
Coq.Numbers.DecimalFactsX.nb_digits_nzhead	40
Coq.Numbers.DecimalFactsX.del_head_nb_digits	40
Coq.Numbers.DecimalFactsX.nb_digits_del_head	40
Coq.Numbers.DecimalFactsX.nb_digits_iter_D0	40	10.5.1.0.3.3	search with cache (only 1: Nat.induct n; only 1: intuition; only 1: intro n; only 1: Nat.nzsimpl; only 1: simpl; only 1: auto).	24.6849160194	5983
Coq.Numbers.DecimalFactsX.nb_digits_nth	40
Coq.Numbers.DecimalFactsX.del_head_nth	40
Coq.Numbers.DecimalFactsX.nth_revapp_r	40
Coq.Numbers.DecimalFactsX.nth_revapp_l	40
Coq.Numbers.DecimalFactsX.app_del_tail_head	40
Coq.Numbers.DecimalFactsX.app_int_del_tail_head	40
Coq.Numbers.DecimalFactsX.nzhead_revapp_0	40
Coq.Numbers.DecimalFactsX.nzhead_revapp	40
Coq.Numbers.DecimalFactsX.nzhead_rev	40
Coq.Numbers.DecimalFactsX.rev_nztail_rev	40
Coq.Numbers.DecimalFactsX.nzhead_D0	40	16	search with cache (only 1: tauto).	0.0552248954773	108
Coq.Numbers.DecimalFactsX.nzhead_iter_D0	40	0.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	0.0453021526337	6
Coq.Numbers.DecimalFactsX.revapp_nil_inv	40
Coq.Numbers.DecimalFactsX.rev_nil_inv	40
Coq.Numbers.DecimalFactsX.rev_lnorm_rev	40
Coq.Numbers.DecimalFactsX.nzhead_nonzero	40
Coq.Numbers.DecimalFactsX.unorm_0	40	0.0.0.0.0.0.3.0.0.0.3.2	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	32.3858120441	5822
Coq.Numbers.DecimalFactsX.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.6.0.0	search with cache (only 1: unfold unorm, lnorm; only 1: destruct nzhead; only 1: easy; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	16.3354558945	6656
Coq.Numbers.DecimalFactsX.unorm_D0	40	1.0	search with cache (only 1: unfold unorm; only 1: trivial).	0.0245180130005	3
Coq.Numbers.DecimalFactsX.unorm_iter_D0	40	0	search with cache (only 1: now induction n).	0.0209290981293	1
Coq.Numbers.DecimalFactsX.nb_digits_unorm	40
Coq.Numbers.DecimalFactsX.del_head_nonnil	40	0.1.0.0.0.0	search with cache (only 1: revert u; only 1: induction n; only 1: intro u; only 1: now case u; only 1: intro u; only 1: now case u; [ idtac | intro u'; intro H; apply IHn, le_S_n.. ]).	0.265650033951	7
Coq.Numbers.DecimalFactsX.del_tail_nonnil	40
Coq.Numbers.DecimalFactsX.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.1.1	search with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.49512600899	1058
Coq.Numbers.DecimalFactsX.nztail_invol	40
Coq.Numbers.DecimalFactsX.unorm_invol	40
Coq.Numbers.DecimalFactsX.norm_invol	40
Coq.Numbers.DecimalFactsX.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.DecimalFactsX.nzhead_del_tail_nzhead	40
Coq.Numbers.DecimalFactsX.unorm_del_tail_unorm	40
Coq.Numbers.DecimalFactsX.norm_del_tail_int_norm	40
Coq.Numbers.DecimalFactsX.nzhead_app_nzhead	40
Coq.Numbers.DecimalFactsX.unorm_app_unorm	40
Coq.Numbers.DecimalFactsX.norm_app_int_norm	40
Coq.Numbers.HexadecimalFactsX.rev_revapp	40
Coq.Numbers.HexadecimalFactsX.rev_rev	40
Coq.Numbers.HexadecimalFactsX.revapp_rev_nil	40
Coq.Numbers.HexadecimalFactsX.app_nil_r	40
Coq.Numbers.HexadecimalFactsX.app_int_nil_r	40
Coq.Numbers.HexadecimalFactsX.revapp_revapp_1	40
Coq.Numbers.HexadecimalFactsX.nb_digits_pos	40
Coq.Numbers.HexadecimalFactsX.nb_digits_revapp	40
Coq.Numbers.HexadecimalFactsX.nb_digits_rev	40
Coq.Numbers.HexadecimalFactsX.nb_digits_nzhead	40
Coq.Numbers.HexadecimalFactsX.nb_digits_iter_D0	40	11.4.2.1.5.33	search with cache (only 1: Nat.induct n; only 1: reflexivity; only 1: intros p IH; only 1: Nat.nzsimpl; only 1: apply eq_S; only 1: trivial).	8.40226793289	4529
Coq.Numbers.HexadecimalFactsX.nb_digits_nth	40
Coq.Numbers.HexadecimalFactsX.nth_revapp_r	40
Coq.Numbers.HexadecimalFactsX.nth_revapp_l	40
Coq.Numbers.HexadecimalFactsX.nzhead_revapp_0	40
Coq.Numbers.HexadecimalFactsX.nzhead_revapp	40
Coq.Numbers.HexadecimalFactsX.nzhead_rev	40
Coq.Numbers.HexadecimalFactsX.rev_nztail_rev	40
Coq.Numbers.HexadecimalFactsX.nzhead_D0	40	0	search with cache (only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	0.0214469432831	1
Coq.Numbers.HexadecimalFactsX.nzhead_iter_D0	40	0.0.39	search with cache (only 1: induction n; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	2.40914797783	2571
Coq.Numbers.HexadecimalFactsX.revapp_nil_inv	40
Coq.Numbers.HexadecimalFactsX.rev_nil_inv	40	3.0.0.3.10	search with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: now rewrite ?IHd).	5.29504990578	2469
Coq.Numbers.HexadecimalFactsX.rev_lnorm_rev	40
Coq.Numbers.HexadecimalFactsX.nzhead_nonzero	40
Coq.Numbers.HexadecimalFactsX.unorm_0	40
Coq.Numbers.HexadecimalFactsX.unorm_nonnil	40
Coq.Numbers.HexadecimalFactsX.unorm_D0	40	1.0	search with cache (only 1: unfold unorm; only 1: trivial).	0.0309271812439	3
Coq.Numbers.HexadecimalFactsX.unorm_iter_D0	40
Coq.Numbers.HexadecimalFactsX.nb_digits_unorm	40
Coq.Numbers.HexadecimalFactsX.nzhead_invol	40
Coq.Numbers.HexadecimalFactsX.nztail_invol	40
Coq.Numbers.HexadecimalFactsX.unorm_invol	40
Coq.Numbers.HexadecimalFactsX.norm_invol	40
Coq.Numbers.HexadecimalFactsX.nzhead_app_nzhead	40
Coq.Numbers.HexadecimalFactsX.unorm_app_unorm	40
Coq.Numbers.HexadecimalFactsX.norm_app_int_norm	40
Coq.Numbers.HexadecimalQX.of_to	40
Coq.Numbers.HexadecimalQX.hnorme_spec	40
Coq.Numbers.HexadecimalQX.hnorme_invol	40
Coq.Numbers.HexadecimalQX.to_of	40
Coq.Numbers.HexadecimalQX.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalQX.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalQX.of_hexadecimal_hnorme	40
Coq.Numbers.HexadecimalQX.of_inj	40
Coq.Numbers.HexadecimalQX.of_iff	40
Coq.Numbers.DecimalStringX.uint_of_char_spec	40
Coq.Numbers.DecimalStringX.NilEmpty.usu	40
Coq.Numbers.DecimalStringX.NilEmpty.sus	40
Coq.Numbers.DecimalStringX.NilEmpty.isi	40
Coq.Numbers.DecimalStringX.NilEmpty.sis	40
Coq.Numbers.DecimalStringX.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalStringX.NilZero.sus	40
Coq.Numbers.DecimalStringX.NilZero.usu	40
Coq.Numbers.DecimalStringX.NilZero.usu_nil	40	4.4	search with cache (only 1: simpl; only 1: auto).	0.0175969600677	10
Coq.Numbers.DecimalStringX.NilZero.usu_gen	40
Coq.Numbers.DecimalStringX.NilZero.isi	40
Coq.Numbers.DecimalStringX.NilZero.isi_posnil	40	1.1	search with cache (only 1: simpl; only 1: auto).	0.0129129886627	4
Coq.Numbers.DecimalStringX.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.0102500915527	1
Coq.Numbers.DecimalStringX.NilZero.sis	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.sub_add_opp	40	3.0	search with cache (only 1: intros a b; only 1: now BinInt.Z.nzsimpl).	0.0717029571533	5
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.succ_wd	40	3.6.0.5.0.13	search with cache (only 1: intros x; only 1: unfold Reflexive, Z.eq; only 1: intros n m; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	6.03898596764	2823
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.pred_wd	40	0.7.2.0.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: nzsimpl; only 1: now rewrite H).	0.717700004578	173
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.pred_succ	40	0.7.9.1	search with cache (only 1: unfold Z.succ, Z.eq; only 1: destruct n as [n m]; only 1: simpl; only 1: now rewrite add_succ_r, add_succ_l).	16.1878130436	3646
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.zero, Z.succ, Z.eq in *; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.197821855545	4
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.one_succ	40	4.0.82	search with cache (only 1: red; only 1: simpl in *; only 1: now nzsimpl).	2.73608493805	3985
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.two_succ	40	7.73	search with cache (only 1: compute; only 1: now nzsimpl').	0.903827905655	3386
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.opp_0	40	14	search with cache (only 1: now f_equal).	0.0525720119476	75
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.opp_succ	40	1.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.229094028473	5
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.add_0_l	40	0.7.6.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: destruct n as [n m]; only 1: simpl; only 1: now nzsimpl).	0.813008069992	385
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.add_succ_l	40	1.0.1.0.3	search with cache (only 1: intro H1; only 1: intro n; only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.537180900574	57
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.219200849533	4
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.sub_succ_r	40	0.0.2.0.12	search with cache (only 1: intro n; only 1: unfold Z.sub, Z.eq; only 1: intro H1; only 1: simpl; only 1: now nzsimpl).	1.44718384743	524
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.mul_0_l	40	2.0.5.1	search with cache (only 1: unfold Z.opp, Z.eq; only 1: intro H2; only 1: simpl; only 1: now nzsimpl).	2.80680799484	342
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.lt_irrefl	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.lt_nge	40	28.0.4	search with cache (only 1: intro n; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	25.9995138645	15179
Coq.Numbers.Integer.NatPairs.ZNatPairsX.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.add_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMinX.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.mul_nonpos_nonpos	40	3.3.9.5.3	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	20.1399550438	10118
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.mul_nonneg_nonpos	40	1.5.3	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.511903047562	161
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.square_le_mono_nonpos	40	1.1.3.3.4.3	search with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonpos; only 1: rewrite <- H2; only 1: now apply eq_le_incl).	4.46831202507	2739
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.1.0.6.5.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	19.5364420414	12930
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrderX.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_quot_gcd	40	0.1.0.1.0.0.0.1.0.0.0.3.0	search with cache (only 1: intros a b g NZ EQ; only 1: rewrite EQ; only 1: rewrite !quot_div_exact; only 1: rewrite gcd_div_factor; only 1: now rewrite <- EQ, div_same; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_l; only 1: apply gcd_divide_r; only 1: order; only 1: apply gcd_divide_r; only 1: order; only 1: apply gcd_divide_l).	16.5630040169	4206
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_rem	40	0.1.0.20.0	search with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	18.5189781189	6013
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_equiv1	40	0.3.9.5.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: order; only 1: apply gcd_divide_r).	1.777146101	1213
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_0_l	40	0.0.13.8.3	search with cache (only 1: unfold lcm; only 1: intros; only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: now nzsimpl).	6.36617898941	3493
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_0_r	40	0.1.0.0.10.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	1.41320419312	728
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.1.2.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.132276058197	10
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_diag_nonneg	40	0.0.0.1.2.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.133321046829	10
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_lcm_eq_r	40	3.1.8.0.1.2	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: apply H; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.996104955673	839
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0640811920166	6
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.lcm_mul_mono_r_nonneg	40	5.6.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: now f_equiv).	12.8149240017	734
Coq.Numbers.Integer.Abstract.ZLcmX.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_pred_l	40	0.1.2.5	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.28469991684	78
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_opp_diag_r	40	2.2.1.3.0.3	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro p; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	13.1974759102	1433
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_opp_l	40	7.0.2.3.1	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: now rewrite add_cancel_r).	18.9857730865	3460
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.opp_inj_wd	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.eq_opp_r	40	0.1	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0412900447845	20
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_add_distr	40	0.1.1.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_assoc).	0.180813074112	24
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_opp_l	40	6.1.1.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.977680921555	287
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_opp_r	40	0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0268058776855	4
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_sub_swap	40	3.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: apply add_shuffle0).	0.149466991425	11
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_move_l	40	8.10.4	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	25.9234080315	6555
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_move_0_r	40	0.5.0.5.9.0	search with cache (only 1: intros n m; only 1: split; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	5.23273015022	1945
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_move_0_l	40	3.0.2	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0302400588989	16
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_simpl_l	40	0.1	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.030699968338	3
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_simpl_r	40	6.1.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0924170017242	19
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_simpl_r	40	1.0.0.3	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.333626031876	48
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_add	40	2.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0536580085754	4
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_add_simpl_r_l	40	3.14.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	12.6908149719	3002
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAddX.ZAddProp.sub_add_simpl_r_r	40	0.11.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	1.49117493629	386
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_same	40	1.2.0.3.5.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	3.41356611252	1624
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_same	40	0.1.0.0.20.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	1.84511399269	2111
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_small	40	0.2.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.134000062943	26
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_small	40	0.4.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: intuition).	0.129702091217	36
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_0_l	40	0.1.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.112102985382	9
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_1_r	40	1.0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	1.85052895546	279
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_1_l	40	0.4.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: intuition; only 1: apply le_0_1).	0.0713970661163	21
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_1_l	40	0.4.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: intuition; only 1: apply le_0_1).	0.0750980377197	21
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_mul	40	0.0.2.2.1.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	1.19157886505	685
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_pos	40	0.0.1	search with cache (only 1: intros; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto using div_pos).	0.0240421295166	4
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_str_pos	40	0.10.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	2.84593915939	477
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_div_le	40	1.4.6.19.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	14.0980989933	5339
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0325980186462	4
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_lt_upper_bound	40	3.7.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	5.94248199463	1230
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_le_lower_bound	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_add	40	1.0.1.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.317463874817	61
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_add	40	0.0.0.2.4.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.06580686569	370
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_add_l	40	1.0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: intros EQ; only 1: tauto).	0.0294270515442	8
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_mul_cancel_l	40	4.5.2	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	11.3669419289	1758
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_mod_distr_r	40	5.6.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	3.48768687248	631
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_mod_idemp_r	40	0.6.7.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: tauto).	10.2069959641	2628
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mul_mod	40	1.1.4.11.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: tauto; only 1: tauto).	19.6607029438	6369
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.add_mod_idemp_r	40	1.6.4.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: tauto).	7.38710594177	1963
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.add_mod	40	1.1.0.1.5.6.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite (div_mod a n)  at 1 2 by order; only 1: rewrite <- add_assoc, add_comm, mul_comm; only 1: now rewrite mod_add; only 1: tauto; only 1: tauto).	24.3699820042	7833
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.div_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivEuclX.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPowX.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_pred_l	40	2.7.5.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: now rewrite <- add_sub_assoc, sub_diag, add_0_r).	21.5953009129	2909
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMulX.ZMulProp.mul_sub_distr_r	40	8.6.0.0	search with cache (only 1: intros n m p; only 1: do 2 rewrite <- add_opp_r; only 1: rewrite mul_add_distr_r; only 1: now rewrite mul_opp_l, <- mul_opp_r).	5.77953505516	1333
Coq.Numbers.Integer.Abstract.ZBaseX.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBaseX.ZBaseProp.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBaseX.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0647649765015	12
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_diag	40	3.2.0.1.14.1.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_1_l, le_0_1).	31.9428369999	16284
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gcd_mul_mono_r_nonneg	40	3.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: now f_equiv).	0.0929191112518	22
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcdX.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_false	40	0.0.1.0.0.0.0.2.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	4.99111199379	1297
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.b2z_inj	40	0.0.1.0.1.0.2	search with cache (only 1: intros [| ] [| ]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split).	0.374795913696	70
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bit0_mod	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.testbit_eqf	40	1.14.1	search with cache (only 1: intros x x' EQ; only 1: intros H; only 1: now f_equiv).	2.44828605652	369
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_mul_pow2	40	2.1.0.0.0.1.1.0.1	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: order).	4.08653092384	682
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.384468078613	31
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.136759996414	3
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0673909187317	3
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_assoc	40	19.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	4.16435790062	1804
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_0_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_0_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_assoc	40	21.1.0.11	search with cache (only 1: intros m Hm; only 1: intros; only 1: bitwise; only 1: apply andb_assoc).	30.5144078732	13628
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_0_l	40	1.0.3	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0805170536041	7
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.066174030304	8
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_diag	40	53.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_negb_r).	22.3993940353	16748
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_land_distr_l	40	17.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_l).	4.25235819817	1376
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_land_distr_r	40	18.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_r).	5.34474682808	1591
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_lor_distr_l	40	19.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_l).	5.72611904144	1866
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_lor_distr_r	40	19.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_r).	8.86590003967	2422
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_ldiff_l	40	17.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite negb_orb, andb_assoc).	1.8192589283	923
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_ldiff_and	40	19.0.0.3	search with cache (only 1: intro n; only 1: intros; only 1: bitwise; only 1: now rewrite <- andb_orb_distrib_r, orb_comm, orb_negb_r, andb_true_r).	5.47388410568	2941
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_ldiff	40	29.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite <- andb_assoc, (andb_comm (negb _)), andb_negb_r, andb_false_r).	7.38929700851	3142
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_wd	40	7.0.1.0.8	search with cache (only 1: intros x y Hxy; only 1: compute; only 1: intros; only 1: rewrite <- H; only 1: now f_equiv).	21.3721990585	2330
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_iff	40	19.1.4	search with cache (only 1: intros H0; only 1: intros a n Hn; only 1: now rewrite BinInt.Z.setbit_eqb, orb_true_iff, BinInt.Z.eqb_eq).	19.8284618855	6981
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_iff	40	1.4.1	search with cache (only 1: intros; only 1: rewrite PeanoNat.Nat.clearbit_eqb, andb_true_iff, <- PeanoNat.Nat.eqb_eq; only 1: now rewrite negb_true_iff, not_true_iff_false).	0.107720136642	21
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_m1_l	40	6.1.8	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.50883793831	658
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_m1_l	40	6.1.1.26	search with cache (only 1: intros EQ; only 1: pose proof lt_m1_0 as F; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	4.07166218758	2462
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_m1_r	40	10.10.6.0.0.1	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: apply xorb_comm; only 1: order; only 1: order).	22.7735159397	11309
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_m1_l	40	10.10.6.0.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: apply xorb_comm; only 1: order; only 1: order).	18.8395090103	9599
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_equiv	40	3.1.0.26	search with cache (only 1: unfold ones; only 1: intros n; only 1: f_equiv; only 1: now rewrite shiftl_1_l).	3.14477777481	2164
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.shiftr_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.div2_neg	40	0.0.15	search with cache (only 1: intros a; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.512875795364	142
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add3_bit0	40	15.0	search with cache (only 1: intros; only 1: now rewrite !PeanoNat.Nat.add_bit0).	1.01662898064	308
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBitsX.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.neg_pos_cases	40	1.1.1.20.18	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	7.94036984444	2907
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.nonpos_nonneg_cases	40	1.1.1	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0710439682007	6
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_pred_l	40	8.5.0.5	search with cache (only 1: intro m; only 1: rewrite <- (succ_pred m)  at 2; only 1: apply lt_succ_r; only 1: apply le_refl).	0.729857206345	738
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.le_pred_l	40	3.1.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now apply le_le_succ_r).	0.034646987915	7
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.nle_pred_r	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_pred_le	40	2.2.2.0.2.1.2	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: split; only 1: now apply le_succ_l; only 1: now apply le_succ_l).	11.6806190014	3475
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.le_le_pred	40	7.3.0.6	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: now f_equiv).	4.78101587296	2586
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.le_pred_lt	40	7.2.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: now apply le_le_succ_r).	2.0543179512	837
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.pred_le_mono	40	1.0.0.8.0.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_le_pred; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	5.09104180336	2300
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_succ_lt_pred	40	6.0.0	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.144134998322	16
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.le_succ_le_pred	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0421779155731	6
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_pred_lt_succ	40	1.0.0.7.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	1.04829406738	414
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.le_pred_lt_succ	40	5.1.2.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	1.56068181992	618
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.neq_pred_l	40	5.2.8	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.781430959702	459
Coq.Numbers.Integer.Abstract.ZLtX.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_unique_pos	40	0.0.0.3.0.1.0.0.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	9.41482996941	2998
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_unique_neg	40	1.1.4.1.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: right; only 1: intuition order; only 1: intuition order).	1.31357908249	472
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_unique_pos	40	0.0.0.3.0.1.0.0.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	10.7328410149	3057
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_unique_neg	40	2.2.4.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: right; only 1: intuition order; only 1: intuition order).	1.93851089478	687
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_small	40	1.1.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).	0.223931074142	28
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_small	40	1.0.1.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.166244983673	9
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_1_r	40	1.11.0.1.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: apply le_refl; only 1: order || apply lt_0_1; only 1: now nzsimpl).	2.56204390526	2221
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_1_l	40	2.2.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.024432182312	9
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_1_l	40	2.2.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.0242412090302	9
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_le	40	1.19	search with cache (only 1: intro; only 1: apply mod_le).	16.6073241234	4181
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_pos	40	6.1	search with cache (only 1: intros; only 1: auto using div_pos).	0.224986076355	36
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_str_pos	40	0.6.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.799116134644	64
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_div_le	40	3.7.0.1.1.2.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: apply mod_pos_bound; only 1: intuition).	10.713394165	3056
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_succ_div_gt	40	4.8.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_pos_bound; only 1: intuition).	5.47011399269	2095
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0354599952698	4
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_lt_upper_bound	40	3.3.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.847656011581	260
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_le_upper_bound	40	4.1.2.2.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: order).	1.47990512848	617
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_le_lower_bound	40	1.6.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: order; only 1: now rewrite mul_comm).	0.83621096611	271
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_add	40	2.0.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.28093099594	167
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_add	40	0.0.0.0.2.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.311909914017	66
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_add_l	40	3.2.1.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: intuition).	0.0379810333252	10
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_mod_distr_l	40	0.0.1.3.3.4.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now rewrite <- div_mod; only 1: tauto; only 1: tauto).	28.9762141705	5157
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_mod_distr_r	40	1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.475255012512	54
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.add_mod_idemp_r	40	0.3.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: tauto).	0.42538690567	84
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloorX.ZDivProp.div_mul_le	40
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.odd_pred	40	0.8.0.1.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	0.553273916245	277
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.even_pred	40
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParityX.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_pos	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_le_lower_bound	40	5.4.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: order; only 1: now rewrite mul_comm).	7.77479720116	2228
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTruncX.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.GenericSgn.sgn_pos	40	5.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order').	0.293730020523	94
Coq.Numbers.Integer.Abstract.ZSgnAbsX.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0517930984497	6
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_neq'	40	6.0.0.29.3	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: rewrite abs_neq; only 1: auto with relations; only 1: now rewrite (opp_le_mono n 0), opp_0).	14.88829422	9753
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_nonneg	40	10.2.10.1.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: order; only 1: rewrite opp_nonneg_nonpos; only 1: order).	15.1528379917	6923
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_eq_or_opp	40	7.7.4.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	2.05481505394	1152
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_involutive	40	1.12.0	search with cache (only 1: intros; only 1: apply abs_eq; only 1: apply abs_nonneg).	0.66375207901	325
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_case	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.100583076477	6
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbsX.ZSgnAbsProp.sgn_sgn	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.add_neg_neg	40	0.0.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.176903963089	24
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0247459411621	3
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0241138935089	3
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.add_nonpos_nonpos	40	0.0.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.396136045456	38
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_add_lt_sub_l	40	0.17.7.11	search with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	29.7117888927	10857
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_neg_cases	40	8.1.7.1	search with cache (only 1: intros; only 1: apply add_lt_cases; only 1: apply lt_sub_lt_add_r; only 1: now nzsimpl).	10.4384181499	2288
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_pos_cases	40	9.3.9.0	search with cache (only 1: intros; only 1: apply add_lt_cases; only 1: apply lt_add_lt_sub_r; only 1: now nzsimpl).	15.0067529678	3844
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_nonpos_cases	40	6.0.7.1	search with cache (only 1: intros; only 1: apply add_le_cases; only 1: apply le_sub_le_add_r; only 1: now nzsimpl).	3.01262593269	799
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrderX.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Binary.ZBinaryX.test	40	1.0	search with cache (only 1: intros a n Hn; only 1: BinInt.Z.order).	0.0300660133362	3
Coq.Numbers.DecimalNX.Unsigned.of_to	40
Coq.Numbers.DecimalNX.Unsigned.to_of	40	12.7.0	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: now f_equal).	9.69826006889	4311
Coq.Numbers.DecimalNX.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNX.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNX.Unsigned.of_uint_norm	40	1	search with cache (only 1: now induction d).	0.0310699939728	2
Coq.Numbers.DecimalNX.Unsigned.of_inj	40	0.1.1.0.8	search with cache (only 1: destruct (Pos.of_uint d) eqn:Hd, (Pos.of_uint d') eqn:Hd'; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj).	1.10000610352	418
Coq.Numbers.DecimalNX.Unsigned.of_iff	40
Coq.Numbers.DecimalNX.Signed.of_to	40
Coq.Numbers.DecimalNX.Signed.to_of	40
Coq.Numbers.DecimalNX.Signed.to_int_inj	40
Coq.Numbers.DecimalNX.Signed.to_int_pos_surj	40	1.0.8.0	search with cache (only 1: simpl norm; only 1: exists (N.of_uint d); only 1: rewrite <- DecimalPos.Unsigned.to_of; only 1: now f_equal).	5.44115185738	1450
Coq.Numbers.DecimalNX.Signed.of_int_norm	40
Coq.Numbers.DecimalNX.Signed.of_inj_pos	40
Coq.Numbers.Cyclic.Int31.Ring31X.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31X.ring_theory_switch_eq	40	1.11	search with cache (only 1: intros; only 1: firstorder).	0.492404937744	262
Coq.Numbers.Cyclic.Int31.Ring31X.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31X.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31X.eqb31_correct	40	0.0.1.0.1.1.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: intuition; only 1: easy; only 1: easy).	1.51450014114	253
Coq.Numbers.Cyclic.Int31.Ring31X.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sneakl_shiftr	40	4.16.10	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	1.45563316345	1153
Coq.Numbers.Cyclic.Int31.Cyclic31X.sneakr_shiftl	40	2.0	search with cache (only 1: destruct x; only 1: auto).	0.0326070785522	4
Coq.Numbers.Cyclic.Int31.Cyclic31X.twice_zero	40	3.6.0.3.6.0.13.0	search with cache (only 1: destruct x; only 1: split; only 1: intros; only 1: inversion H; only 1: auto; only 1: intros; only 1: inversion H; only 1: auto).	35.9933321476	10971
Coq.Numbers.Cyclic.Int31.Cyclic31X.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_S	40	4.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0458159446716	7
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_S_tail	40	0.4.1.3.0.2	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: simpl in *; only 1: rewrite ?IHn; only 1: reflexivity).	1.53871107101	1019
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_size	40	0.1.3.6	search with cache (only 1: intros n; only 1: induction n; only 1: simpl in *; only 1: auto).	15.1364450455	111
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftl_S	40	0	search with cache (only 1: reflexivity).	0.018317937851	1
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftl_S_tail	40	7.3.0.0.1.0.1.2	search with cache (only 1: intros; only 1: elim n; only 1: reflexivity; only 1: destruct x; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: split).	4.76534509659	3112
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftl_n_0	40	0.3.1.2.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: now f_equal).	0.664875030518	184
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftl_size	40	0.0.2	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	1.03563380241	5
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.firstr_firstl	40	5.0.0	search with cache (only 1: destruct x; only 1: simpl in *; only 1: tauto).	0.0423130989075	8
Coq.Numbers.Cyclic.Int31.Cyclic31X.firstl_firstr	40	1.0.7	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	2.06679987907	33
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_predsize_0_firstl	40	3.8.0.1	search with cache (only 1: intros; only 1: destruct x; only 1: injection H; only 1: auto).	23.8660030365	915
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.recr_aux_eqn	40	4.5.8.5.3	search with cache (only 1: inversion 1; only 1: simpl; only 1: destruct x; only 1: rewrite H; only 1: auto).	6.17541694641	3633
Coq.Numbers.Cyclic.Int31.Cyclic31X.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.recr_eqn	40	4.5.3.0.0.1	search with cache (only 1: destruct x; only 1: simpl in *; only 1: intros; only 1: compute; only 1: rewrite H; only 1: auto).	7.0899810791	1629
Coq.Numbers.Cyclic.Int31.Cyclic31X.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phibis_aux_equiv	40	2.0.0	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.0732641220093	5
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_zero	40	5.2.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.102331876755	12
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.i2l_length	40	3.0	search with cache (only 1: intros; only 1: auto with arith).	0.0721299648285	5
Coq.Numbers.Cyclic.Int31.Cyclic31X.l2i_i2l	40	3.0.12	search with cache (only 1: intro n; only 1: induction n; only 1: auto).	0.490435838699	259
Coq.Numbers.Cyclic.Int31.Cyclic31X.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.i2l_sneakl	40	0.0.14	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	20.22991395	298
Coq.Numbers.Cyclic.Int31.Cyclic31X.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_shiftr	40	2.0.15	search with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto).	13.799834013	6843
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0183250904083	1
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_zdigits	40	0	search with cache (only 1: auto).	0.0202991962433	1
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_more_than_1_digit	40	0.0	search with cache (only 1: red; only 1: auto).	0.0309941768646	2
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_0	40	0	search with cache (only 1: reflexivity).	0.0245270729065	1
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_1	40	0	search with cache (only 1: reflexivity).	0.0219349861145	1
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_m1	40	0.17	search with cache (only 1: simpl; only 1: reflexivity).	0.856468200684	173
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_compare	40	1.0	search with cache (only 1: intros; only 1: auto with arith).	0.0301501750946	3
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_succ	40	3.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.112396001816	43
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sub	40	2.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.412944078445	81
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sub_carry	40	0.0.0.7	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.440100193024	75
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_opp	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.398520946503	42
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0285239219666	2
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_pred	40	2.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.535323143005	75
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_mul	40	2.2	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0361230373383	6
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_square_c	40	1.4.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: nia).	6.74436187744	193
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_tail00	40	2.0.1.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0823121070862	10
Coq.Numbers.Cyclic.Int31.Cyclic31X.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31X.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_more_than_1_digit	40	33	search with cache (only 1: auto with zarith).	0.385293006897	554
Coq.Numbers.Cyclic.ZModulo.ZModuloX.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_to_Z_2	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0467891693115	6
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_to_Z	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0485019683838	6
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_0	40	0.3.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0567297935486	9
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_Bm1	40	0.13.0.0	search with cache (only 1: unfold to_Z, zero; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: auto with zarith).	4.02270507812	2266
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_compare	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0883030891418	4
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_add_mul_div	40	5	search with cache (only 1: split).	0.0162658691406	6
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.two_p_power2	40	0.11.2.0.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).	3.94038796425	812
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModuloX.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63X.P	40	28	search with cache (only 1: auto).	0.241271018982	643
Coq.Numbers.Cyclic.Int63.Cyclic63X.shift_unshift_mod_3	40	0.0.1.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	10.581870079	1727
Coq.Numbers.Cyclic.Int63.Cyclic63X.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Ring63X.ring_theory_switch_eq	40	1.9	search with cache (only 1: intros; only 1: firstorder).	0.0670809745789	73
Coq.Numbers.Cyclic.Int63.Ring63X.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63X.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0176730155945	3
Coq.Numbers.Cyclic.Int63.Ring63X.test	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.two_succ	40	16	search with cache (only 1: now f_equal).	0.0683600902557	108
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.B0	40	7	search with cache (only 1: assumption).	0.0222570896149	8
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.add_0_l	40	2.0.0	search with cache (only 1: intro n; only 1: zify; only 1: apply NZ_to_Z_mod).	0.0498008728027	5
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.mul_0_l	40	0.0.1.1.7.6.1	search with cache (only 1: intro n; only 1: zify; only 1: apply Zmod_small; only 1: split; only 1: auto with zarith; only 1: pose proof gt_wB_1; only 1: lia).	0.988481998444	679
Coq.Numbers.Cyclic.Abstract.NZCyclicX.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.mul_1_l	40	0.0.24.0.27	search with cache (only 1: intro H; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	4.13141512871	7496
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.mul_comm	40	14.39.1.0.3	search with cache (only 1: intro y; only 1: intros; only 1: zify; only 1: rewrite Z.mul_comm; only 1: reflexivity).	14.5766839981	19191
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxiomsX.CyclicRing.eqb_correct	40	2.7.0	search with cache (only 1: intros; only 1: apply Pos.eqb_eq; only 1: tauto).	0.380249977112	140
Coq.Numbers.DecimalQX.of_to	40
Coq.Numbers.DecimalQX.dnorme_spec	40
Coq.Numbers.DecimalQX.dnormf_spec	40
Coq.Numbers.DecimalQX.dnorme_invol	40
Coq.Numbers.DecimalQX.dnormf_invol	40
Coq.Numbers.DecimalQX.to_of	40
Coq.Numbers.DecimalQX.to_decimal_inj	40
Coq.Numbers.DecimalQX.to_decimal_surj	40
Coq.Numbers.DecimalQX.of_decimal_dnorme	40
Coq.Numbers.DecimalQX.of_decimal_dnormf	40
Coq.Numbers.Natural.Peano.NPeanoX.Even_equiv	40	1.1.1	search with cache (only 1: constructor; only 1: parity_binop; only 1: parity_binop).	0.0954830646515	32
Coq.Numbers.Natural.Peano.NPeanoX.Odd_equiv	40	0	search with cache (only 1: parity_binop).	0.0237481594086	1
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcdX.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_lcm_l	40	7.1.13	search with cache (only 1: unfold lcm; only 1: intros; only 1: now apply divide_mul_l).	1.3128349781	693
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_0_l	40	0.0.4.2	search with cache (only 1: intros; only 1: apply divide_0_l; only 1: unfold lcm; only 1: now nzsimpl).	0.106955051422	15
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_0_r	40	0.1.0.8.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto'; only 1: apply divide_0_r; only 1: apply divide_0_r; only 1: trivial).	0.590206861496	519
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_1_l	40	1.1.7.2.8.0.2	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	9.04632115364	6845
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_1_r	40	0.1.6.5.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.909533023834	926
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_diag	40	0.6.6.5.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	2.64451909065	2738
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcmX.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.add_pred_l	40	0.7.1.12.0.1	search with cache (only 1: cases ltac:(n); only 1: intros H; only 1: intuition order; only 1: intros m H2 H3; only 1: nzsimpl; only 1: now nzsimpl).	21.0204319954	11056
Coq.Numbers.Natural.Abstract.NAddX.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.mul_le_mono_r	40	7.1.4.8	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l).	9.17867612839	4558
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrderX.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_succ_r'	40	18.2.0.7	search with cache (only 1: intros n IH; only 1: nzsimpl; only 1: order; only 1: apply le_0_l).	32.3538489342	6143
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_0_l	40	1.0.0.2.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.043496131897	8
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_1_l	40	2.2.5.0.4.8.6	search with cache (only 1: intro n; only 1: apply succ_inj_wd; only 1: nzsimpl; only 1: now nzsimpl; only 1: destruct (lt_ge_cases n 0); only 1: false_hyp ltac:(H) nlt_0_r; only 1: order).	7.19340991974	2531
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_mul_l	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_gt_1	40	0.0.2.5.2	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order).	0.456408977509	211
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_le_mono_r	40	10.3.10.9	search with cache (only 1: intros a b c Hb; only 1: apply pow_le_mono_r; only 1: generalize (le_0_l b); only 1: auto').	20.7339758873	16020
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_le_mono	40	0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.177329063416	41
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_inj_l	40	0.5.5.0.4.10.2	search with cache (only 1: intros; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: order; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	5.60639691353	6246
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_inj_r	40	0.3.0.0.1.1.2	search with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: order; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.499965190887	282
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_lt_mono_r_iff	40	0.0.1.4.3.8	search with cache (only 1: split; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: order).	7.48999905586	4038
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_le_mono_r_iff	40	0.1.0.4.8.2.0.6	search with cache (only 1: intros; only 1: split; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: order; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	10.1728279591	6406
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPowX.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.case_analysis	40	0.0.0.5.3.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: now apply bi_induction; only 1: auto; only 1: intros; only 1: auto; only 1: apply le_0_l).	1.15429091454	509
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.succ_pred	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBaseX.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.b2n_proper	40	3.2.8	search with cache (only 1: intros H1 H2 H3; only 1: <Coq.Strings.String.t_eqb>; only 1: solve_proper).	0.283991098404	221
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_false	40	1.1.0.0.0.1.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: simpl; only 1: now try order').	1.61112809181	401
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.b2n_inj	40	0.0.1.0.1.0.3	search with cache (only 1: intros [| ] [| ]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split).	0.363987922668	109
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.b2n_bit0	40	0.0.0.0.4	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.195212125778	17
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bit0_mod	40	1.3.0	search with cache (only 1: intros a; only 1: rewrite testbit_spec'; only 1: now nzsimpl).	0.717334985733	93
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.div2_bits	40	0.1.0.1.6.2.12.13	search with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: rewrite testbit_spec'; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: f_equiv; only 1: rewrite pow_succ_r', <- div_div by order_nz; only 1: f_equiv).	29.9090669155	11306
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0323631763458	2
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.eqf_equiv	40	0.9.9.2	search with cache (only 1: split; only 1: now nzsimpl'; only 1: now nzsimpl'; only 1: congruence).	1.22595620155	561
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.testbit_eqf	40	16.2.4	search with cache (only 1: repeat red; only 1: intros; only 1: now f_equiv).	9.15377402306	4442
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_0_l	40	2.0.1	search with cache (only 1: intro H; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.12474489212	15
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_0_l	40	0.2.8.0.1.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: generalize (lt_succ_diag_r 0); only 1: reflexivity; only 1: order_nz).	1.17594099045	509
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_eq_0	40	0.1.0.1.2.0.2.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: order'; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: order'; only 1: trivial using le_0_l).	1.68339514732	457
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.208889007568	16
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_wd	40	0.1.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.122416973114	4
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_nilpotent	40	5.0.5	search with cache (only 1: intro H; only 1: bitwise; only 1: apply xorb_nilpotent).	0.373620986938	126
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_0_l	40	10.0.5	search with cache (only 1: intro H; only 1: bitwise; only 1: apply xorb_false_r).	1.79821205139	722
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0589802265167	3
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_comm	40	18.0.1	search with cache (only 1: intros; only 1: bitwise; only 1: now destruct (PeanoNat.Nat.testbit a m), (PeanoNat.Nat.testbit b m)).	4.91528081894	1996
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_assoc	40	7.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.0693969726562	10
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_0_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_0_r	40	6.0.4	search with cache (only 1: intro H; only 1: bitwise; only 1: apply orb_false_r).	0.935081005096	210
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_comm	40	18.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now destruct (PeanoNat.Nat.testbit a m), (PeanoNat.Nat.testbit b m)).	5.05590295792	1902
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_assoc	40	6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply orb_assoc).	0.0931479930878	9
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_diag	40	32.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply orb_diag).	9.67706894875	4151
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_0_l	40	5.0.7	search with cache (only 1: intro H; only 1: bitwise; only 1: trivial).	0.393689870834	171
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_0_r	40	13.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_r).	0.684453010559	300
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_comm	40	11.13.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_eq; only 1: now destruct (BinNat.N.testbit a m), (BinNat.N.testbit b m)).	9.93811702728	3448
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_assoc	40	6.0.0.1	search with cache (only 1: intro n; only 1: intros; only 1: bitwise; only 1: apply andb_assoc).	0.616123914719	99
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_0_l	40	1.0.5	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.106263160706	23
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.074688911438	8
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_diag	40	34.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now destruct (PeanoNat.Nat.testbit a m)).	3.91410303116	4059
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_land_distr_l	40	5.0.0.4	search with cache (only 1: intro H; only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_l).	1.67791104317	408
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_land_distr_r	40	6.0.0.4	search with cache (only 1: intro H; only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_r).	2.64721012115	615
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_lor_distr_l	40	7.0.0.4	search with cache (only 1: intro H; only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_l).	2.82289195061	784
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_lor_distr_r	40	7.0.0.4	search with cache (only 1: intro H; only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_r).	3.70658683777	898
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_ldiff_l	40	13.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite negb_orb, andb_assoc).	1.54540801048	453
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_ldiff_and	40	17.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite <- andb_orb_distrib_r, orb_comm, orb_negb_r, andb_true_r).	3.07480812073	1324
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_ldiff	40	10.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite <- andb_assoc, (andb_comm (negb _)), andb_negb_r, andb_false_r).	0.516086816788	175
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_wd	40	0.0.3.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.39019203186	25
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_eqb	40	34.1	search with cache (only 1: intros; only 1: now rewrite PeanoNat.Nat.clearbit_spec', PeanoNat.Nat.ldiff_spec, PeanoNat.Nat.pow2_bits_eqb).	10.5687460899	5459
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_iff	40	1.7.16.0	search with cache (only 1: intros a Ha; only 1: intros n; only 1: rewrite BinInt.Z.clearbit_eqb, andb_true_iff, <- BinInt.Z.eqb_eq; only 1: now rewrite negb_true_iff, not_true_iff_false).	13.7180371284	6991
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_equiv	40	0.0.6.18	search with cache (only 1: unfold ones; only 1: generalize (lt_succ_diag_r 0); only 1: intros; only 1: now rewrite shiftl_1_l).	3.54291915894	1423
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_ones	40	2.1.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0574560165405	7
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lor_lnot_diag_low	40	0.0.0.1.1.1.0.0.0.2.0.0	search with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: now apply lt_le_trans with n; only 1: now apply lt_le_trans with n).	8.78512597084	3525
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lxor_lor	40	19.25.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: assert (BinNat.N.testbit a m && BinNat.N.testbit b m = false) by now rewrite <- BinNat.N.land_spec, H, BinNat.N.bits_0; only 1: now destruct (BinInt.Z.testbit a m), (BinInt.Z.testbit b m)).	35.0942401886	22846
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add3_bit0	40	25.0	search with cache (only 1: intros; only 1: now rewrite !PeanoNat.Nat.add_bit0).	15.0030119419	3262
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBitsX.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_square	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrtX.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_alt	40	0	search with cache (only 1: auto).	0.0129790306091	1
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_0_any	40	0.1.3.3.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	2.28020596504	111
Coq.Numbers.Natural.Abstract.NStrongRecX.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NParityX.NParityProp.odd_pred	40	0.3.0.1.1.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.351288080215	185
Coq.Numbers.Natural.Abstract.NParityX.NParityProp.even_pred	40
Coq.Numbers.Natural.Abstract.NParityX.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParityX.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.add_min_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.mul_min_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMinX.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_unique_exact	40	0.1.12.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: order).	3.25755000114	2206
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_same	40	1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: now nzsimpl).	0.273555994034	29
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_same	40	0.0.5.6.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.411873102188	202
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_small	40	0.2.4.6	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: order; only 1: now nzsimpl).	2.33742403984	951
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_small	40	0.0.1	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.0230581760406	4
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0184268951416	5
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0176818370819	4
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_1_r	40	1.0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: setoid_rewrite one_succ; only 1: intro n; only 1: now apply (neq_succ_diag_l 0); only 1: nzsimpl; only 1: order').	0.422646999359	147
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_1_r	40	0.8.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	0.418864965439	286
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_1_l	40	2.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: order).	0.0163190364838	5
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_1_l	40	2.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: order).	0.0161640644073	5
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_mul	40	5.3.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: intuition; only 1: apply mul_comm).	3.41509008408	1035
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_mul	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_le	40	1.1.9.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	1.91926908493	579
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_str_pos	40	0.5.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.351774930954	59
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_div_le	40	1.1.9.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	1.7675640583	616
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_succ_div_gt	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0352799892426	4
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_le_lower_bound	40	0.0.0.14.0	search with cache (only 1: intros; only 1: apply div_le_lower_bound; only 1: auto'; only 1: auto'; only 1: auto').	1.2635037899	921
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_add	40	0.1.1.5.0	search with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.914463043213	303
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_add_l	40	0.1.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	0.0304222106934	7
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_mul_cancel_r	40	1.2.2.2.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	2.02204108238	318
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_mul_cancel_l	40	0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.0765900611877	20
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_mod_distr_r	40	0.0.1.0.0.1.2.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	2.29847407341	563
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_mod_distr_l	40	0.0.1.0.0.1.3.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	1.50407099724	414
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_mod	40	0.1.2.1.4.0.1.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small_iff; only 1: intro H1; only 1: now apply H; only 1: apply mod_bound_pos; only 1: auto'; only 1: apply neq_0_lt_0; only 1: intro H1; only 1: now apply H).	3.55430603027	1811
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_mod_idemp_l	40	1.1.0.7.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.905291080475	231
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_mod_idemp_r	40	1.0.0.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').	0.037407875061	10
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mul_mod	40	1.0.1.0.5.4.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	1.42043685913	561
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.add_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.add_mod_idemp_r	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.add_mod	40	0.0.4.2.5	search with cache (only 1: intros a b Ha Hb; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: order; only 1: tauto; only 1: tauto).	1.74505591393	582
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_mul_r	40	1.0.0.0.0.0.1	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.165989875793	12
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.div_mul_le	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.137630939484	9
Coq.Numbers.Natural.Abstract.NDivX.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_0_succ	40	2.6.3.9.1.6.7.2	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: destruct (lt_ge_cases n 0); only 1: apply lt_le_incl; only 1: false_hyp H nlt_0_r; only 1: le_elim H; only 1: order; only 1: now apply eq_le_incl).	13.5413479805	14954
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.eq_0_gt_0_cases	40	0.6.0.1	search with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: right; only 1: apply lt_0_succ).	0.303688049316	73
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.succ_pred_pos	40	0.1.0.1.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: intros; only 1: now rewrite pred_succ).	0.0531158447266	10
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_pred_l	40	1.11.1.1.2.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: apply le_succ_l; only 1: now rewrite pred_succ).	9.54860401154	6723
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.lt_pred_lt_succ	40	2.0.1.1.4.0.4	search with cache (only 1: cases ltac:(n); only 1: intros n m; only 1: apply lt_0_succ; only 1: intros n m; only 1: rewrite pred_succ; only 1: rewrite <- le_succ_l; only 1: apply lt_succ_r).	4.50582695007	3523
Coq.Numbers.Natural.Abstract.NOrderX.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_le_mono_r	40	0.2.1.0.1.6.1	search with cache (only 1: intros n m p LE; only 1: destruct (le_ge_cases n p) as [LE'| GE]; only 1: rewrite <- sub_0_le in LE'; only 1: rewrite LE'; only 1: apply le_0_l; only 1: apply le_add_le_sub_r; only 1: now rewrite sub_add).	27.8445110321	8450
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSubX.NSubProp.add_dichotomy	40
Coq.Numbers.Natural.Abstract.NIsoX.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIsoX.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIsoX.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIsoX.Homomorphism.hom_nat_iso	40	0.0.0.0.1.0.0.0.0.0.18.51	search with cache (only 1: red; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	1.58028292656	4560
Coq.Numbers.Natural.Abstract.NIsoX.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIsoX.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_base	40	0.34.15.0.5	search with cache (only 1: intros; only 1: unfold if_zero; only 1: apply eq_true_iff_eq; only 1: compute; only 1: now rewrite recursion_0).	14.2933409214	11230
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.even_0	40	0.37.67	search with cache (only 1: apply PeanoNat.Nat.eqb_eq; only 1: compute; only 1: now rewrite recursion_0).	8.60173797607	6474
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOpsX.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NAddOrderX.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrderX.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrderX.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrderX.NAddOrderProp.add_pos_l	40	0.22.0	search with cache (only 1: intros n m H; only 1: apply lt_lt_add_r; only 1: order).	25.3782229424	5884
Coq.Numbers.Natural.Abstract.NAddOrderX.NAddOrderProp.add_pos_r	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_lu_succ	40	0	search with cache (only 1: now induction n).	0.0174548625946	1
Coq.Numbers.HexadecimalNatX.Unsigned.to_little_uint_succ	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_lu_equiv	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_uint_alt	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_lu_succ	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_to_lu	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_uint_acc_spec	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_to	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_lu_sixteenfold	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_of_lu_sixteenfold	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_of	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNatX.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_inj	40
Coq.Numbers.HexadecimalNatX.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNatX.Signed.of_to	40
Coq.Numbers.HexadecimalNatX.Signed.to_of	40
Coq.Numbers.HexadecimalNatX.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNatX.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalNatX.Signed.of_int_norm	40
Coq.Numbers.HexadecimalNatX.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalPosX.Unsigned.Nadd_simpl	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_uint_acc_rev	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_rev	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_double_gen	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_double	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_succ_double	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_to	40
Coq.Numbers.HexadecimalPosX.Unsigned.succ_double_alt	40
Coq.Numbers.HexadecimalPosX.Unsigned.double_succ	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_lu_succ	40
Coq.Numbers.HexadecimalPosX.Unsigned.nat_iter_S	40	1	search with cache (only 1: firstorder).	0.0136780738831	2
Coq.Numbers.HexadecimalPosX.Unsigned.nat_iter_0	40	1	search with cache (only 1: auto).	0.0117430686951	2
Coq.Numbers.HexadecimalPosX.Unsigned.to_lhex_tenfold	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.HexadecimalPosX.Unsigned.Nadd_alt	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_of	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_uint_nonzero	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0353980064392	3
Coq.Numbers.HexadecimalPosX.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalPosX.Unsigned.to_uint_pos_surj	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_uint_norm	40	19.0	search with cache (only 1: generalize (to_of d); only 1: now induction d).	27.5974500179	9414
Coq.Numbers.HexadecimalPosX.Unsigned.of_inj	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_iff	40
Coq.Numbers.HexadecimalPosX.Unsigned.nztail_to_hex_uint	40
Coq.Numbers.HexadecimalPosX.Unsigned.double_unorm	40
Coq.Numbers.HexadecimalPosX.Unsigned.double_nzhead	40
Coq.Numbers.HexadecimalPosX.Unsigned.of_hex_uint_double	40
Coq.Numbers.HexadecimalPosX.Signed.of_to	40
Coq.Numbers.HexadecimalPosX.Signed.to_of	40
Coq.Numbers.HexadecimalPosX.Signed.to_int_inj	40
Coq.Numbers.HexadecimalPosX.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalPosX.Signed.of_int_norm	40
Coq.Numbers.HexadecimalPosX.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalStringX.uint_of_char_spec	40
Coq.Numbers.HexadecimalStringX.NilEmpty.usu	40
Coq.Numbers.HexadecimalStringX.NilEmpty.sus	40
Coq.Numbers.HexadecimalStringX.NilEmpty.isi	40
Coq.Numbers.HexadecimalStringX.NilEmpty.sis	40
Coq.Numbers.HexadecimalStringX.NilZero.uint_of_string_nonnil	40
Coq.Numbers.HexadecimalStringX.NilZero.sus	40
Coq.Numbers.HexadecimalStringX.NilZero.usu	40
Coq.Numbers.HexadecimalStringX.NilZero.usu_nil	40	0.4	search with cache (only 1: simpl; only 1: auto).	0.0296199321747	6
Coq.Numbers.HexadecimalStringX.NilZero.usu_gen	40
Coq.Numbers.HexadecimalStringX.NilZero.isi	40
Coq.Numbers.HexadecimalStringX.NilZero.isi_posnil	40	6.1	search with cache (only 1: unfold int_of_string; only 1: trivial).	0.0269019603729	25
Coq.Numbers.HexadecimalStringX.NilZero.isi_negnil	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0152039527893	2
Coq.Numbers.HexadecimalStringX.NilZero.sis	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_0_r	40	5.1.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: tauto).	0.589351892471	71
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_comm	40	0.0.0.0.1.1	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.467877864838	41
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_1_l	40	3.1.0.2.0.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.06101107597	232
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0824460983276	2
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMulX.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.263259887695	8
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.1.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.229369163513	7
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_pos_cases	40	2.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0834600925446	5
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0588119029999	3
Coq.Numbers.NatInt.NZAddOrderX.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZDomainX.nat_rect_wd	40	5.0.0.4.0	search with cache (only 1: intros x; only 1: induction n; only 1: simpl_relation; only 1: simpl; only 1: firstorder).	1.46532607079	331
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.initial_alt2	40	24	search with cache (only 1: firstorder).	0.763050079346	1906
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomainX.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomainX.NZOfNat.ofnat_zero	40	5	search with cache (only 1: now f_equal).	0.0117092132568	6
Coq.Numbers.NatInt.NZDomainX.NZOfNat.ofnat_succ	40	0	search with cache (only 1: now f_equal).	0.0120549201965	1
Coq.Numbers.NatInt.NZDomainX.NZOfNat.ofnat_pred	40	0.4.18.1.0.3.1.4	search with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: tauto; only 1: intros H; only 1: simpl in *; only 1: rewrite PeanoNat.Nat.pred_succ; only 1: reflexivity).	33.093927145	25197
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomainX.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_succ_diag_r	40	0.1.63.0	search with cache (only 1: intros; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	3.15031003952	8741
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.nle_succ_diag_l	40	13.2.2.3	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: now subst).	8.4623708725	2377
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_neq	40	1.1.0.9	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	3.88569903374	793
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.eq_le_incl	40	4.1.2	search with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.0308451652527	18
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_stepl	40	0	search with cache (only 1: order).	0.0158088207245	1
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_stepr	40	0	search with cache (only 1: order).	0.0161950588226	1
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_stepl	40	0	search with cache (only 1: order).	0.0173552036285	1
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_stepr	40	0	search with cache (only 1: order).	0.0164380073547	1
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_lt_trans	40	8	search with cache (only 1: order).	0.226306200027	78
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_le_trans	40	3.1	search with cache (only 1: intro n; only 1: order).	0.211369037628	51
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_antisymm	40	0	search with cache (only 1: order).	0.0157561302185	1
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_succ_l	40	0.5.4	search with cache (only 1: intros H H1 H2; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.397113800049	341
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_le_succ_r	40	2.1.8.0	search with cache (only 1: intro n; only 1: intros x y; only 1: apply lt_le_incl; only 1: now rewrite lt_succ_r).	2.75355505943	948
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_lt_succ_r	40	3.1.0.1	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl).	0.185631990433	51
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_0_1	40	0.2.2.0.27	search with cache (only 1: apply BinNat.N.lt_succ_r; only 1: rewrite one_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.568080186844	685
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_0_2	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_0_2	40	0.2.0.1.2.38.0	search with cache (only 1: rewrite two_succ; only 1: apply BinNat.N.lt_le_incl; only 1: rewrite one_succ; only 1: transitivity 1; only 1: apply lt_0_1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	1.55427408218	2460
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_ge_cases	40	0.0.1.1.1.5.0	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	2.10608291626	733
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_ge_cases	40	3.2.1.1	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.876526832581	164
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_gt_cases	40	6.6.0	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	9.20880699158	455
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.eq_dne	40	1.0.0.6.10	search with cache (only 1: split; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order; only 1: intuition order).	7.6012699604	1199
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_ngt	40	8.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: intuition order).	0.583925008774	110
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0193960666656	1
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_decidable	40	0.0.0.25.2.1	search with cache (only 1: intro n; only 1: intros; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	17.477684021	3296
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_dne	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.nle_gt	40	0.0.2.0.1	search with cache (only 1: intro n; only 1: intro m; only 1: split; only 1: order; only 1: order).	0.0342268943787	8
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0215609073639	1
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_decidable	40	2.3.4.0.7	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	9.62844204903	4032
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_dne	40	0.0.3.1.4	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	3.65312099457	316
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.nlt_succ_r	40	0.1.0.1.0.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: split; only 1: rewrite lt_succ_r; only 1: order; only 1: rewrite lt_succ_r; only 1: order).	0.0531489849091	9
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.rbase	40	44.6	search with cache (only 1: intros RS' n; only 1: intuition order).	6.21876001358	6929
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.le_ind	40	3.11.27	search with cache (only 1: intros RS' n; only 1: apply right_induction; only 1: assumption).	3.7468020916	5553
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.Rgt_wd	40	1.0.3.0	search with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: unfold Rgt; only 1: rewrite H1; only 1: now rewrite H2).	0.292508840561	8
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrderX.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.9.0.0.1.2.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	29.3089170456	8183
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.6.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.208642959595	74
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_neg_r	40	0.1.0.0.0.2.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: order).	0.172431945801	25
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_pos_neg	40	2.19.3	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	2.86599993706	2252
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_neg_pos	40	0.19.3	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	1.86593699455	1600
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_nonneg_cancel_l	40	0.1.12.19.1	search with cache (only 1: intros n m p; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply mul_le_mono_pos_l; only 1: order).	16.5210649967	5823
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.eq_mul_0_l	40	0.3.1.2	search with cache (only 1: intros n m; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.19432091713	48
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.eq_mul_0_r	40	0.3.2	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.13356089592	32
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_lt_mono_nonneg	40	1.3	search with cache (only 1: intros n m p H; only 1: now apply mul_lt_mono_nonneg).	0.0486011505127	13
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.5.1	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.1623878479	59
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_nonneg	40	0.0.0.0.1.13.3.7.13.11	search with cache (only 1: intro n; only 1: rewrite <- (mul_0_r n)  at 1; only 1: destruct (lt_ge_cases n 0); only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	20.2312600613	14025
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrderX.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_1_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_2_r	40	0.5.1.27.8	search with cache (only 1: intro H1; only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply lt_le_incl, lt_0_1).	11.4986338615	5528
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPowX.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_0	40	0.12.0.5.11.3.213	search with cache (only 1: apply PeanoNat.Nat.Private_NZSqrt.sqrt_unique; only 1: split; only 1: apply lt_succ_r; only 1: apply le_succ_l; only 1: now nzsimpl; only 1: apply le_succ_l; only 1: now nzsimpl).	21.62824893	34191
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_2	40	1.6.1.2.12.1.1	search with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: apply sqrt_unique; only 1: nzsimpl'; only 1: split; only 1: now apply le_le_succ_r; only 1: rewrite lt_succ_r; only 1: now apply le_le_succ_r).	21.4541909695	4569
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_eqn	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_0	40	2.0.4.0.0	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: now nzsimpl; only 1: order; only 1: reflexivity).	0.300507068634	86
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrtX.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.eq_sym_iff	40	0.0	search with cache (only 1: intros a b; only 1: intuition).	0.0154509544373	2
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.neq_sym	40	1.0.3.7.0	search with cache (only 1: intros; only 1: intro H1; only 1: destruct H; only 1: symmetry; only 1: auto).	0.583254098892	512
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.eq_stepl	40	17	search with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	3.00894713402	2729
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.succ_inj_wd_neg	40	38.0	search with cache (only 1: intros; only 1: now rewrite BinNat.N.succ_inj_wd).	21.0699660778	8929
Coq.Numbers.NatInt.NZBaseX.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.double_below	40	1.1.7.0.0.0.11	search with cache (only 1: intros H; only 1: intros n m; only 1: rewrite two_succ; only 1: nzsimpl; only 1: apply le_succ_l; only 1: rewrite <- succ_le_mono; only 1: now apply add_le_mono).	23.9266870022	3885
Coq.Numbers.NatInt.NZParityX.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.219214916229	6
Coq.Numbers.NatInt.NZParityX.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.orb_even_odd	40	5.7.2.1.1.3.0	search with cache (only 1: intros; only 1: destruct (PeanoNat.Nat.Even_or_Odd n) as [H| H]; only 1: rewrite <- PeanoNat.Nat.even_spec in H; only 1: now rewrite H; only 1: rewrite <- PeanoNat.Nat.odd_spec in H; only 1: apply orb_true_iff; only 1: intuition).	11.31148386	2499
Coq.Numbers.NatInt.NZParityX.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	5.50316309929	687
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_0	40	0.0.10	search with cache (only 1: rewrite PeanoNat.Nat.even_spec; only 1: exists 0; only 1: now nzsimpl).	0.0870728492737	47
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_0	40	83	search with cache (only 1: now rewrite <- BinNat.N.negb_even, BinNat.N.even_0).	2.34727501869	3674
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_1	40	1.16.30	search with cache (only 1: rewrite BinInt.Z.odd_spec; only 1: exists BinNums.N0; only 1: now nzsimpl').	1.33043813705	1403
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_1	40	3	search with cache (only 1: now rewrite <- PeanoNat.Nat.negb_odd, PeanoNat.Nat.odd_1).	0.0457258224487	4
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_2	40	104	search with cache (only 1: now rewrite <- BinNat.N.negb_even, BinNat.N.even_2).	6.83775210381	6388
Coq.Numbers.NatInt.NZParityX.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_succ_succ	40	0.7.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.138537883759	32
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_add_even	40	0.0.0.8.0	search with cache (only 1: intros; only 1: rewrite <- even_spec in H; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	0.815572023392	320
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParityX.NZParityProp.odd_add_mul_2	40	0.0.0.1.6.1	search with cache (only 1: intros; only 1: nzsimpl'; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	1.83175802231	223
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_succ_comm	40	0.0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.227210998535	7
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_comm	40	1.0.0.0.0.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.401305913925	41
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0739009380341	2
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_assoc	40	1.0.0.0.0.6.0	search with cache (only 1: intro n; only 1: intros m IH; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	8.35709905624	993
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.19838809967	6
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_shuffle0	40	0.0.0.0.3.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.617786884308	34
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_shuffle2	40	0.0.0.3.5.5.0	search with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: apply add_shuffle0; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	26.9014830589	3712
Coq.Numbers.NatInt.NZAddX.NZAddProp.add_shuffle3	40	1.0.0.0.1.0.1	search with cache (only 1: intros n m p; only 1: rewrite 2!add_assoc, add_cancel_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.183187007904	10
Coq.Numbers.NatInt.NZAddX.NZAddProp.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0819509029388	2
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.mul_divide_cancel_r	40	0.0.0.2.0.4.0	search with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	0.944216966629	509
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_factor_l	40	1.1.7.1	search with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	0.233368873596	132
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_factor_r	40	1.7.1	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.0770320892334	51
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_comm	40	1.6.5.8.0.4.0.18	search with cache (only 1: intros n m; only 1: apply gcd_unique; only 1: rewrite <- (mul_1_l n)  at 1; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	33.0445761681	20754
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_0_l_nonneg	40	10.5.2.1.5.0.15	search with cache (only 1: intros x y; only 1: apply gcd_unique; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: now nzsimpl; only 1: auto).	3.19301104546	3445
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_0_r_nonneg	40	0.1.0.13.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.964905977249	595
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_1_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_1_r	40	0.2.1.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.109321117401	12
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_diag_nonneg	40	0.0.0.13.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.715054988861	610
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.gcd_mul_diag_l	40	5.1.0.13.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	11.3576309681	6881
Coq.Numbers.NatInt.NZGcdX.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_2	40	1.0.6.3.0.3.2.1	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: order'; only 1: split; only 1: solve_proper; only 1: order_pos; only 1: now nzsimpl).	8.04438996315	1891
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLogX.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.2.1	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0504720211029	9
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_nonpos	40	3.3.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.892305850983	205
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_1	40	1.2	search with cache (only 1: apply log2_up_eqn0; only 1: order').	0.019474029541	5
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLogX.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.HexadecimalZX.of_to	40
Coq.Numbers.HexadecimalZX.to_of	40
Coq.Numbers.HexadecimalZX.to_int_inj	40	8.9	search with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).	0.416903018951	436
Coq.Numbers.HexadecimalZX.to_int_surj	40
Coq.Numbers.HexadecimalZX.of_int_norm	40
Coq.Numbers.HexadecimalZX.of_inj	40
Coq.Numbers.HexadecimalZX.of_iff	40
Coq.Numbers.HexadecimalZX.of_hex_uint_iter_D0	40
Coq.Numbers.HexadecimalZX.of_hex_int_iter_D0	40
Coq.Numbers.HexadecimalZX.double_norm	40
Coq.Numbers.HexadecimalZX.of_hex_int_double	40
Coq.Numbers.HexadecimalZX.double_to_hex_int	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPosX.Unsigned.Nadd_simpl	40
Coq.Numbers.DecimalPosX.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPosX.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPosX.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_succ_double	40
Coq.Numbers.DecimalPosX.Unsigned.of_to	40
Coq.Numbers.DecimalPosX.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPosX.Unsigned.double_succ	40
Coq.Numbers.DecimalPosX.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPosX.Unsigned.nat_iter_S	40	1	search with cache (only 1: firstorder).	0.0232038497925	2
Coq.Numbers.DecimalPosX.Unsigned.nat_iter_0	40	1	search with cache (only 1: auto).	0.0196850299835	2
Coq.Numbers.DecimalPosX.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPosX.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPosX.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPosX.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPosX.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPosX.Unsigned.to_of	40
Coq.Numbers.DecimalPosX.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPosX.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0383079051971	3
Coq.Numbers.DecimalPosX.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPosX.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPosX.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPosX.Unsigned.of_inj	40
Coq.Numbers.DecimalPosX.Unsigned.of_iff	40
Coq.Numbers.DecimalPosX.Unsigned.nztail_to_uint	40
Coq.Numbers.DecimalPosX.Signed.of_to	40
Coq.Numbers.DecimalPosX.Signed.to_of	40
Coq.Numbers.DecimalPosX.Signed.to_int_inj	40
Coq.Numbers.DecimalPosX.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPosX.Signed.of_int_norm	40
Coq.Numbers.DecimalPosX.Signed.of_inj_pos	40
Coq.Structures.EqualitiesX.UpdateEq.eq_equiv	40
Coq.Structures.EqualitiesX.HasEqDec2Bool.eqb_eq	40
Coq.Structures.EqualitiesX.HasEqBool2Dec.eq_dec	40
Coq.Structures.EqualitiesX.BoolEqualityFacts.eqb_compat	40
Coq.Structures.EqualitiesX.BoolEqualityFacts.eqb_spec	40	2.10.2	search with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply BinPos.Pos.eqb_eq).	0.151100873947	181
Coq.Structures.EqualitiesX.BoolEqualityFacts.eqb_neq	40	9.37	search with cache (only 1: unfold not; only 1: now rewrite <- not_true_iff_false, BinPos.Pos.eqb_eq).	5.11953401566	10381
Coq.Structures.EqualitiesX.BoolEqualityFacts.eqb_refl	40	10	search with cache (only 1: now apply BinInt.Z.eqb_eq).	0.0383839607239	32
Coq.Structures.EqualitiesX.BoolEqualityFacts.eqb_sym	40	16.3	search with cache (only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinPos.Pos.eqb_eq).	1.93536710739	1647
Coq.Structures.OrdersX.Compare2EqBool.eqb_eq	40
Coq.Structures.OrdersX.OT_to_Full.le_lteq	40	1.12	search with cache (only 1: red; only 1: auto with arith).	0.113713026047	76
Coq.Structures.OrdersX.OTF_LtIsTotal.lt_total	40
Coq.Structures.OrdersX.OTF_to_TTLB.leb_le	40
Coq.Structures.OrdersX.OTF_to_TTLB.leb_total	40
Coq.Structures.OrdersX.OTF_to_TTLB.leb_trans	40
Coq.Structures.OrdersX.TTLB_to_OTF.compare_spec	40
Coq.Structures.OrdersX.TTLB_to_OTF.eqb_eq	40
Coq.Structures.OrdersX.TTLB_to_OTF.eq_equiv	40
Coq.Structures.OrdersX.TTLB_to_OTF.lt_strorder	40
Coq.Structures.OrdersX.TTLB_to_OTF.lt_compat	40
Coq.Structures.OrdersX.TTLB_to_OTF.le_lteq	40
Coq.Structures.OrdersExX.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersExX.PairOrderedType.lt_compat	40
Coq.Structures.OrdersExX.PairOrderedType.compare_spec	40
Coq.Structures.OrdersExX.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersExX.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersExX.PositiveOrderedTypeBits.lt_compat	40	8	search with cache (only 1: eauto with *).	0.303231954575	50
Coq.Structures.OrdersExX.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersExX.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.DecidableTypeExX.PairDecidableType.eq_refl	40	11.0	search with cache (only 1: intros EQ; only 1: now rewrite <- ?BinNat.N.add_le_mono_l).	0.115118980408	82
Coq.Structures.DecidableTypeExX.PairDecidableType.eq_sym	40
Coq.Structures.DecidableTypeExX.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeExX.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeExX.PairUsualDecidableType.eq_dec	40
Coq.Structures.GenericMinMaxX.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMaxX.GenericMinMax.max_l	40
Coq.Structures.GenericMinMaxX.GenericMinMax.max_r	40
Coq.Structures.GenericMinMaxX.GenericMinMax.min_l	40
Coq.Structures.GenericMinMaxX.GenericMinMax.min_r	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_spec_le	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.le_max_l	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0944521427155	1
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_l_iff	40	8	search with cache (only 1: solve_max).	0.517003059387	31
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.129726886749	1
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lt_iff	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub_l	40	1	search with cache (only 1: solve_max).	0.237013101578	18
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub_r	40	1	search with cache (only 1: solve_max).	0.238910913467	19
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub	40	1.0	search with cache (only 1: intuition; only 1: solve_max).	0.165233135223	3
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub_iff	40	1.0.1.0	search with cache (only 1: split; only 1: solve_max; only 1: intuition; only 1: solve_max).	0.395683050156	18
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub_lt	40	1.0.1.0.2.0	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.232084989548	10
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_lub_lt_iff	40	2	search with cache (only 1: solve_max).	2.05729913712	91
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_le_compat_r	40	0.0.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.170889854431	4
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_le_compat	40	2.1.2	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.563849925995	13
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_id	40	1.6	search with cache (only 1: apply min_l; only 1: order).	0.0501029491425	9
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.le_min_r	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.0893409252167	1
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_l_iff	40	12	search with cache (only 1: solve_min).	8.00304698944	402
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0894498825073	1
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb_l	40	2.0.2.0.0	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.177662849426	9
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb_r	40	2.0.2.1.0	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.178938150406	10
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb	40	2.0.2.1.0	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.178679943085	10
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb_iff	40	1.0.3.0	search with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: solve_min).	1.14405083656	67
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb_lt	40	1.0.1.0.0	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.17732000351	7
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_glb_lt_iff	40	2	search with cache (only 1: solve_min).	3.07490897179	155
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_le_compat_r	40	0.0.1	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.173578023911	4
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_le_compat	40	0.1.2	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.393189907074	6
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_max_absorption	40	3.4	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.269788980484	12
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_min_absorption	40	3.16	search with cache (only 1: apply min_r || apply min_l; only 1: solve_max).	31.1134140491	2264
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMaxX.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMaxX.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMaxX.UsualMinMaxLogicalProperties.max_monotone	40	12.20	search with cache (only 1: apply BinInt.Z.max_mono; only 1: eauto with *).	2.02939796448	1863
Coq.Structures.GenericMinMaxX.UsualMinMaxLogicalProperties.min_monotone	40	2.31	search with cache (only 1: apply BinInt.Z.min_mono; only 1: congruence).	1.68543410301	1892
Coq.Structures.GenericMinMaxX.UsualMinMaxLogicalProperties.min_max_antimonotone	40	2.2.3.10.13.10	search with cache (only 1: intros; only 1: apply PeanoNat.Nat.min_max_antimono; only 1: congruence; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: auto).	3.11457586288	4255
Coq.Structures.GenericMinMaxX.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.max_case	40	1.0.4	search with cache (only 1: intros P H0 HS; only 1: apply max_case; only 1: congruence).	0.0479788780212	29
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.max_dec	40	1.1.0.1	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0280790328979	7
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.min_case	40	1.1.6.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: congruence; only 1: congruence).	0.182873010635	104
Coq.Structures.GenericMinMaxX.UsualMinMaxDecProperties.min_dec	40	1.1.1.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0224969387054	7
Coq.Structures.GenericMinMaxX.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrdersAltX.Update_OT.lt_strorder	40
Coq.Structures.OrdersAltX.Update_OT.lt_compat	40
Coq.Structures.OrdersAltX.Update_OT.compare_spec	40
Coq.Structures.OrdersAltX.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAltX.Backport_OT.lt_trans	40	2.5.0	search with cache (only 1: intros x y L E; only 1: rewrite E; only 1: auto).	0.0380821228027	10
Coq.Structures.OrdersAltX.Backport_OT.compare	40
Coq.Structures.OrdersAltX.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAltX.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAltX.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAltX.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAltX.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAltX.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAltX.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAltX.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAltX.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAltX.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAltX.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAltX.OT_to_Alt.compare_trans	40
Coq.Structures.OrderedTypeAltX.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAltX.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAltX.OrderedType_from_Alt.lt_not_eq	40	2.2.0	search with cache (only 1: intro x; only 1: intro y; only 1: <Coq.Strings.String.t_eqb>).	0.190398931503	37
Coq.Structures.OrderedTypeAltX.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAltX.OrderedType_from_Alt.eq_dec	40	0.0.0.8.0.0	search with cache (only 1: unfold eq, lt; only 1: intros; only 1: destruct (QArith_base.Qcompare x y); only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.453256130219	296
Coq.Structures.OrderedTypeAltX.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAltX.OrderedType_to_Alt.compare_trans	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqke_eqk	40	3.2.0.14	search with cache (only 1: red; only 1: intros; only 1: destruct H; only 1: intuition).	0.76285815239	406
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqke_def	40	3	search with cache (only 1: tauto).	0.0243639945984	4
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqke_def'	40	4	search with cache (only 1: auto).	0.0597710609436	5
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqke_1	40	22	search with cache (only 1: now destruct 1 || intros _).	0.444673061371	300
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.0250980854034	2
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqk_def	40	11	search with cache (only 1: let rec add_permut := repeat reflexivity || match goal with | |- req ?t _ => <Coq.setoid_ring.Ring_polynom.add_permut_rec> t end in add_permut).	0.0356068611145	33
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: now f_equal).	0.0540590286255	1
Coq.Structures.EqualitiesFactsX.KeyDecidableType.eqk_1	40	5	search with cache (only 1: tauto).	0.0246579647064	6
Coq.Structures.EqualitiesFactsX.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.InA_eqk_eqke	40	0.0.0.1.4.0.6.6.0	search with cache (only 1: induction 1; only 1: compute in H; only 1: exists y; only 1: firstorder; only 1: rewrite InA_alt; only 1: exists y; only 1: firstorder; only 1: reflexivity; only 1: firstorder).	2.04160404205	1479
Coq.Structures.EqualitiesFactsX.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_nil	40	2.0.0	search with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: now compute).	0.0767707824707	5
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.MapsTo_eq	40	5.1.21.0	search with cache (only 1: unfold MapsTo; only 1: induction l as [| a l' Hrec]; only 1: now intros <-; only 1: now intros <-).	16.817661047	4873
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_eq	40	1	search with cache (only 1: now intros <-).	0.230940103531	18
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.142242193222	2
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_inv_2	40
Coq.Structures.EqualitiesFactsX.KeyDecidableType.In_inv_3	40	0.0.36.13	search with cache (only 1: intuition; only 1: inversion H; only 1: firstorder; only 1: firstorder).	15.5910670757	5954
Coq.Structures.EqualitiesFactsX.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFactsX.PairUsualDecidableType.eq_dec	40
Coq.Structures.OrderedTypeExX.Nat_as_OT.lt_trans	40	2.2.0	search with cache (only 1: intros a b; only 1: set (n := N.max a b); only 1: Nat.order').	0.0353322029114	15
Coq.Structures.OrderedTypeExX.Nat_as_OT.lt_not_eq	40	7.4.0	search with cache (only 1: unfold lt; only 1: intros n Hnil; only 1: Nat.Private_Tac.order).	0.789314985275	312
Coq.Structures.OrderedTypeExX.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeExX.Z_as_OT.lt_trans	40	8.6	search with cache (only 1: intros a n Hn; only 1: Z.order).	0.85507106781	357
Coq.Structures.OrderedTypeExX.Z_as_OT.lt_not_eq	40	4.0	search with cache (only 1: intros x y H; only 1: auto using Z.lt_neq, Z.neq_sym).	0.210931062698	48
Coq.Structures.OrderedTypeExX.Z_as_OT.compare	40
Coq.Structures.OrderedTypeExX.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeExX.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeExX.N_as_OT.compare	40
Coq.Structures.OrderedTypeExX.PairOrderedType.eq_refl	40	3.11	search with cache (only 1: intro n; only 1: now Z.swap_greater).	0.0500659942627	97
Coq.Structures.OrderedTypeExX.PairOrderedType.eq_sym	40	1.18.0.0.0	search with cache (only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: intros m [H3 H4]; only 1: auto with ordered_type).	1.84521818161	3079
Coq.Structures.OrderedTypeExX.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeExX.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeExX.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeExX.PairOrderedType.compare	40
Coq.Structures.OrderedTypeExX.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.2.3.10.4	search with cache (only 1: induction x; only 1: trivial; only 1: intuition; only 1: simpl; only 1: tauto).	3.09818983078	1747
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeExX.PositiveOrderedTypeBits.eq_dec	40	22	search with cache (only 1: decide equality).	5.4812271595	1587
Coq.Structures.OrderedTypeExX.Ascii_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.cmp_lt_nat	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.lt_trans	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.compare_helper_eq	40
Coq.Structures.OrderedTypeExX.Ascii_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeExX.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeExX.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeExX.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeExX.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeExX.String_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeExX.String_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeExX.String_as_OT.cmp_lt	40
Coq.Structures.OrderedTypeExX.String_as_OT.compare_helper_lt	40
Coq.Structures.OrderedTypeExX.String_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeExX.String_as_OT.compare_helper_eq	40	16	search with cache (only 1: now apply Ascii_as_OT.cmp_eq).	0.60845708847	306
Coq.Structures.OrdersFactsX.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFactsX.CompareFacts.compare_eq	40	1.0.1.0.1.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0555241107941	10
Coq.Structures.OrdersFactsX.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFactsX.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFactsX.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFactsX.CompareFacts.compare_ngt_iff	40	0.13	search with cache (only 1: rewrite PeanoNat.Nat.compare_gt_iff; only 1: intuition).	1.47820401192	827
Coq.Structures.OrdersFactsX.CompareFacts.compare_compat	40
Coq.Structures.OrdersFactsX.CompareFacts.compare_refl	40	5.0	search with cache (only 1: apply compare_eq_iff; only 1: now subst).	0.0145099163055	7
Coq.Structures.OrdersFactsX.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_order	40	0.1	search with cache (only 1: compute; only 1: iorder).	0.0163910388947	3
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_antisym	40	2.0.2	search with cache (only 1: intros a b; only 1: intros; only 1: order).	0.0135989189148	7
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_not_gt_iff	40	4	search with cache (only 1: iorder).	0.155861854553	17
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.lt_not_ge_iff	40	1	search with cache (only 1: iorder).	0.0125720500946	2
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.lt_or_ge	40	0.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: intuition; only 1: intuition).	0.349578857422	7
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0137341022491	1
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.compare_le_iff	40	4.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.524260044098	29
Coq.Structures.OrdersFactsX.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0534770488739	3
Coq.Structures.OrdersFactsX.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFactsX.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFactsX.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFactsX.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFactsX.OrderedTypeTest.lt_not_eq	40	4.1	search with cache (only 1: intro H; only 1: order).	0.124582052231	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0185480117798	1
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0159909725189	1
Coq.Structures.OrdersFactsX.OrderedTypeTest.le_eq	40	1.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	3.18331885338	3
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.0109651088715	1
Coq.Structures.OrdersFactsX.OrderedTypeTest.neq_eq	40	2.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	3.19909000397	4
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0131928920746	1
Coq.Structures.OrdersFactsX.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.0110700130463	1
Coq.Structures.OrdersFactsX.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.0111930370331	1
Coq.Structures.OrdersFactsX.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0114200115204	1
Coq.Structures.OrdersFactsX.OrderedTypeTest.le_antisym	40	8.0	search with cache (only 1: intuition; only 1: order).	0.248314142227	18
Coq.Structures.OrdersFactsX.OrderedTypeTest.le_neq	40	2.1	search with cache (only 1: intro H; only 1: order).	0.11828494072	12
Coq.Structures.OrdersFactsX.OrderedTypeTest.neq_sym	40	2.1	search with cache (only 1: intro H; only 1: order).	0.0818021297455	12
Coq.Structures.OrdersFactsX.OrderedTypeTest.lt_le	40	8.0	search with cache (only 1: intuition; only 1: order).	0.229044914246	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.gt_not_eq	40	2.1	search with cache (only 1: intro H; only 1: order).	0.013475894928	5
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_not_lt	40	8.0	search with cache (only 1: intuition; only 1: order).	0.191395998001	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_not_gt	40	8.0	search with cache (only 1: intuition; only 1: order).	0.192224025726	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.lt_not_gt	40	8.0	search with cache (only 1: intuition; only 1: order).	0.190577030182	11
Coq.Structures.OrdersFactsX.OrderedTypeTest.eq_is_nlt_ngt	40	8.8.8.0	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	13.5178539753	2327
Coq.Structures.OrdersFactsX.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFactsX.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFactsX.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFactsX.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_eq	40	0	search with cache (only 1: now apply compare_eq_iff).	0.00962591171265	1
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_refl	40	0	search with cache (only 1: now apply compare_eq_iff).	0.0100998878479	1
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_gt_iff	40	8	search with cache (only 1: now rewrite <- BinInt.Z.compare_lt_iff, BinInt.Z.compare_antisym, CompOpp_iff).	0.0543508529663	36
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0168359279633	1
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_nlt_iff	40	4	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.171422958374	17
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.compare_nge_iff	40	8	search with cache (only 1: now rewrite <- BinInt.Z.compare_nle_iff, BinInt.Z.compare_antisym, CompOpp_iff).	1.77934098244	140
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFactsX.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_spec	40	0.0.7.0.4.0.7	search with cache (only 1: case PeanoNat.Nat.ltb_spec0; only 1: constructor; only 1: intuition; only 1: constructor; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: intuition).	4.9679350853	1596
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_nle	40	13	search with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.leb_le).	2.33852791786	853
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_gt	40	12	search with cache (only 1: now rewrite BinNat.N.leb_nle, <- BinNat.N.compare_lt_iff, BinNat.N.compare_nge_iff).	0.706093072891	198
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_nlt	40	11	search with cache (only 1: now rewrite <- not_true_iff_false, BinPos.Pos.ltb_lt).	0.22033905983	142
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_ge	40	0.5.1	search with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	0.104856014252	37
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_refl	40	2.0.14	search with cache (only 1: rewrite PeanoNat.Nat.leb_le, <- PeanoNat.Nat.compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- compare_lt_iff, compare_refl).	0.678994894028	473
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_irrefl	40	1.6.4	search with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: constructor).	0.407928943634	229
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_antisym	40	4.1	search with cache (only 1: apply eq_true_iff_eq; only 1: now rewrite negb_true_iff, BinPos.Pos.ltb_lt, BinPos.Pos.leb_gt).	0.0287590026855	11
Coq.Structures.OrdersFactsX.BoolOrderFacts.eqb_compare	40	0.0.0.5.10.13	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite BinPos.Pos.eqb_eq, <- BinPos.Pos.compare_eq_iff; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: now split).	6.61182403564	6641
Coq.Structures.OrdersFactsX.BoolOrderFacts.ltb_compare	40	0.10.1	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite BinInt.Z.ltb_lt, <- BinInt.Z.compare_lt_iff; only 1: now destruct compare).	0.482483863831	220
Coq.Structures.OrdersFactsX.BoolOrderFacts.leb_compare	40	0.0.0.0.16.3	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite BinNat.N.leb_le, <- BinNat.N.compare_le_iff; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.786068916321	651
Coq.Structures.OrdersListsX.OrderedTypeLists.In_eq	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- H; only 1: tauto).	0.0288488864899	4
Coq.Structures.OrdersListsX.OrderedTypeLists.ListIn_In	40	1.15.0.1.0.0.1	search with cache (only 1: simple induction l; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: compute in H; only 1: intuition).	21.540446043	9869
Coq.Structures.OrdersListsX.OrderedTypeLists.Inf_lt	40	17.25.2.1.1	search with cache (only 1: intros; only 1: destruct H0; only 1: auto with qarith; only 1: constructor; only 1: now rewrite H).	29.5255970955	50976
Coq.Structures.OrdersListsX.OrderedTypeLists.Inf_eq	40	8.5.26	search with cache (only 1: intros c l1; only 1: intuition; only 1: now rewrite H).	33.275108099	29309
Coq.Structures.OrdersListsX.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersListsX.OrderedTypeLists.ListIn_Inf	40	0.1.4.15	search with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	1.90332698822	1704
Coq.Structures.OrdersListsX.OrderedTypeLists.In_Inf	40
Coq.Structures.OrdersListsX.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersListsX.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersListsX.KeyOrderedType.ltk_compat	40	9	search with cache (only 1: solve_proper).	0.445399999619	16
Coq.Structures.OrdersListsX.KeyOrderedType.ltk_compat'	40	11	search with cache (only 1: solve_proper).	1.62837910652	131
Coq.Structures.OrdersListsX.KeyOrderedType.pair_compat	40	0.12	search with cache (only 1: intros a a' Ha b b' Hb; only 1: auto).	14.7054409981	60
Coq.Structures.OrdersListsX.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersListsX.KeyOrderedType.ltk_not_eqke	40	2.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0624589920044	5
Coq.Structures.OrdersListsX.KeyOrderedType.Inf_eq	40	13	search with cache (only 1: now intros <-).	2.63439893723	100
Coq.Structures.OrdersListsX.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersListsX.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrdersTacX.OrderFacts.eq_refl	40	12	search with cache (only 1: solve_proper).	0.0546281337738	56
Coq.Structures.OrdersTacX.OrderFacts.le_refl	40	5.25.36	search with cache (only 1: intros; only 1: rewrite ?BinNat.N.Private_OrderTac.IsTotal.le_lteq; only 1: now right).	2.15049815178	3335
Coq.Structures.OrdersTacX.OrderFacts.lt_irrefl	40	3.41.3.0	search with cache (only 1: intros; only 1: intros Heq; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: tauto).	8.08374881744	11687
Coq.Structures.OrdersTacX.OrderFacts.eq_sym	40	8.9	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.281430006027	330
Coq.Structures.OrdersTacX.OrderFacts.le_antisym	40
Coq.Structures.OrdersTacX.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.0232040882111	1
Coq.Structures.OrdersTacX.OrderFacts.trans	40
Coq.Structures.OrdersTacX.OrderFacts.eq_neq	40
Coq.Structures.OrdersTacX.OrderFacts.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0273702144623	1
Coq.Structures.OrdersTacX.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTacX.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTacX.OrderFacts.not_gt_le	40	3.2.1.3.2.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: auto; only 1: rewrite P.le_lteq; only 1: intuition).	17.1711680889	2828
Coq.Structures.OrdersTacX.OrderFacts.le_neq_lt	40	1.2.2	search with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: intuition).	0.296036958694	46
Coq.Structures.OrderedTypeX.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.IsTO.le_lteq	40	1.1.12	search with cache (only 1: split; only 1: auto; only 1: auto).	0.631000995636	904
Coq.Structures.OrderedTypeX.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.0119109153748	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.neq_eq	40	5	search with cache (only 1: order).	0.0162501335144	6
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.0132169723511	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0120689868927	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0110228061676	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.011892080307	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0112879276276	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0110530853271	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.0102460384369	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.0108709335327	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0107839107513	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0106031894684	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.010678768158	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00993490219116	1
Coq.Structures.OrderedTypeX.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.elim_compare_lt	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.elim_compare_gt	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.In_eq	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.ListIn_In	40	1.15.0.1.1.1.1	search with cache (only 1: simple induction l; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: compute in H; only 1: intuition).	18.2652578354	8832
Coq.Structures.OrderedTypeX.OrderedTypeFacts.Inf_lt	40	0.1.2.6.1	search with cache (only 1: intros; only 1: destruct H0; only 1: auto with ordered_type; only 1: right; only 1: order).	0.39137506485	313
Coq.Structures.OrderedTypeX.OrderedTypeFacts.Inf_eq	40	0.1.1.6.1	search with cache (only 1: intros; only 1: destruct H0; only 1: auto; only 1: right; only 1: order).	0.621206998825	429
Coq.Structures.OrderedTypeX.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.ListIn_Inf	40	0.1.4.15	search with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	1.61823987961	2036
Coq.Structures.OrderedTypeX.OrderedTypeFacts.In_Inf	40	4.1.44	search with cache (only 1: destruct l; only 1: intuition; only 1: intuition).	5.91953492165	3421
Coq.Structures.OrderedTypeX.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedTypeX.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedTypeX.KeyOrderedType.eqke_eqk	40	4.18	search with cache (only 1: intros n m Hn; only 1: now elim Hn).	0.436486959457	425
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_right_r	40	9.6	search with cache (only 1: intros l1 l2 Eq x; only 1: auto with ordered_type).	0.178673028946	233
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.00988507270813	1
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0128989219666	2
Coq.Structures.OrderedTypeX.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0140659809113	2
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0141131877899	2
Coq.Structures.OrderedTypeX.KeyOrderedType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0864968299866	2
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_trans	40	6.0	search with cache (only 1: unfold eqk, eqke; only 1: order).	0.0572078227997	16
Coq.Structures.OrderedTypeX.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_trans	40	5.5	search with cache (only 1: intros g c; only 1: eauto with ordered_type).	0.205170154572	66
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_not_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.0156269073486	1
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_not_eqke	40	8.4.0.2.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: intuition; only 1: simpl in *; only 1: order).	15.3795449734	2152
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_equiv	40	3.0.0.3.0	search with cache (only 1: unfold eqk, ltk; only 1: split; only 1: intuition; only 1: auto with ordered_type; only 1: eauto with ordered_type).	0.624737024307	52
Coq.Structures.OrderedTypeX.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0246419906616	4
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_strorder	40
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_compat	40	6.6.3.1.0	search with cache (only 1: unfold eqk, ltk; only 1: intros x; only 1: constructor; only 1: order; only 1: order).	14.1578249931	4886
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_not_ltk	40	4.0.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: simpl in *; only 1: order).	0.189228057861	8
Coq.Structures.OrderedTypeX.KeyOrderedType.ltk_eqk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0659899711609	4
Coq.Structures.OrderedTypeX.KeyOrderedType.eqk_ltk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0561580657959	4
Coq.Structures.OrderedTypeX.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedTypeX.KeyOrderedType.In_alt	40
Coq.Structures.OrderedTypeX.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedTypeX.KeyOrderedType.In_eq	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Inf_eq	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedTypeX.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedTypeX.KeyOrderedType.In_inv	40
Coq.Structures.OrderedTypeX.KeyOrderedType.In_inv_2	40	4.5.2	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto with ordered_type).	1.05648708344	374
Coq.Structures.OrderedTypeX.KeyOrderedType.In_inv_3	40	0.0.6.1	search with cache (only 1: unfold eqk, eqke; only 1: inversion_clear 1; only 1: intuition; only 1: intuition).	1.58186388016	101
Coq.Structures.DecidableTypeX.KeyDecidableType.eqke_eqk	40	13.3	search with cache (only 1: intros g c; only 1: firstorder).	0.331979990005	350
Coq.Structures.DecidableTypeX.KeyDecidableType.eqk_refl	40	2.0.1	search with cache (only 1: intros EQ; only 1: unfold eqk, eqke; only 1: auto).	0.11102104187	17
Coq.Structures.DecidableTypeX.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0360639095306	2
Coq.Structures.DecidableTypeX.KeyDecidableType.eqk_sym	40	1	search with cache (only 1: auto).	0.0638198852539	13
Coq.Structures.DecidableTypeX.KeyDecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0461840629578	2
Coq.Structures.DecidableTypeX.KeyDecidableType.eqk_trans	40	1.8.2	search with cache (only 1: intros EQ; only 1: intros p1 p2; only 1: eauto).	1.26723003387	315
Coq.Structures.DecidableTypeX.KeyDecidableType.eqke_trans	40
Coq.Structures.DecidableTypeX.KeyDecidableType.eqk_equiv	40
Coq.Structures.DecidableTypeX.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0936849117279	4
Coq.Structures.DecidableTypeX.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableTypeX.KeyDecidableType.InA_eqk	40
Coq.Structures.DecidableTypeX.KeyDecidableType.In_alt	40
Coq.Structures.DecidableTypeX.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableTypeX.KeyDecidableType.In_eq	40
Coq.Structures.DecidableTypeX.KeyDecidableType.In_inv	40
Coq.Structures.DecidableTypeX.KeyDecidableType.In_inv_2	40	1.5.11.0	search with cache (only 1: firstorder; only 1: invlist InA; only 1: firstorder; only 1: eauto).	1.91690182686	1292
Coq.Structures.DecidableTypeX.KeyDecidableType.In_inv_3	40	1.0.6.0	search with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: auto using eqke_equiv).	2.93976092339	104
Coq.ZArith.ZorderX.Ztrichotomy_inf	40	0.1.2.0.0.1.0.0.0.0	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: left; only 1: right; only 1: intuition; only 1: left; only 1: auto; only 1: right; only 1: intuition).	22.0320360661	2928
Coq.ZArith.ZorderX.Ztrichotomy	40	0.0.2.0	search with cache (only 1: Z.swap_greater; only 1: destruct (Z.lt_trichotomy n m); only 1: tauto; only 1: tauto).	0.0464608669281	6
Coq.ZArith.ZorderX.dec_Zne	40	3.0.0.0.1.1	search with cache (only 1: destruct (Z.eq_decidable n m); only 1: right; only 1: subst; only 1: auto; only 1: left; only 1: auto).	1.13854002953	338
Coq.ZArith.ZorderX.dec_Zgt	40	2.0.0.0.0	search with cache (only 1: destruct (Z.lt_decidable m n); only 1: left; only 1: now Z.swap_greater; only 1: right; only 1: now Z.swap_greater).	0.0499889850616	12
Coq.ZArith.ZorderX.dec_Zge	40	2.0.0.0.2	search with cache (only 1: destruct (Z.le_decidable m n); only 1: left; only 1: now Z.swap_greater; only 1: right; only 1: now Z.swap_greater).	0.327012062073	83
Coq.ZArith.ZorderX.not_Zeq	40	1	search with cache (only 1: apply Z.lt_gt_cases).	0.0170860290527	2
Coq.ZArith.ZorderX.Zle_not_lt	40	0	search with cache (only 1: Z.order).	0.0141000747681	1
Coq.ZArith.ZorderX.Zlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0128309726715	1
Coq.ZArith.ZorderX.Zle_not_gt	40	0	search with cache (only 1: trivial).	0.0110561847687	1
Coq.ZArith.ZorderX.Zgt_not_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0240647792816	2
Coq.ZArith.ZorderX.Znot_ge_lt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0224421024323	2
Coq.ZArith.ZorderX.Znot_lt_ge	40	0	search with cache (only 1: trivial).	0.0104629993439	1
Coq.ZArith.ZorderX.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.0109579563141	1
Coq.ZArith.ZorderX.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.022922039032	2
Coq.ZArith.ZorderX.not_Zne	40	0.4.1.2	search with cache (only 1: intros H; only 1: destruct (Z.eq_decidable n m); only 1: assumption; only 1: now elim H).	0.684169054031	184
Coq.ZArith.ZorderX.Zgt_asym	40	5.1.0	search with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.0862679481506	11
Coq.ZArith.ZorderX.Zgt_irrefl	40	4.0.0	search with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.0207841396332	7
Coq.ZArith.ZorderX.Zle_lt_or_eq	40	3	search with cache (only 1: apply Z.lt_eq_cases).	0.0289978981018	11
Coq.ZArith.ZorderX.Zgt_trans	40	5.0	search with cache (only 1: Z.swap_greater; only 1: now transitivity m).	0.0626139640808	7
Coq.ZArith.ZorderX.Zle_gt_trans	40	6.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.14476108551	12
Coq.ZArith.ZorderX.Zgt_le_trans	40	3.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.0256989002228	5
Coq.ZArith.ZorderX.Zge_trans	40	13.0	search with cache (only 1: Z.swap_greater; only 1: eauto using Z.le_trans).	0.720437049866	276
Coq.ZArith.ZorderX.Zsucc_le_compat	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0222899913788	2
Coq.ZArith.ZorderX.Zsucc_lt_compat	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0117089748383	1
Coq.ZArith.ZorderX.Zsucc_gt_compat	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0237839221954	2
Coq.ZArith.ZorderX.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0237920284271	2
Coq.ZArith.ZorderX.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0710039138794	2
Coq.ZArith.ZorderX.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0116028785706	1
Coq.ZArith.ZorderX.Zgt_succ	40	4.1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.0262179374695	11
Coq.ZArith.ZorderX.Znot_le_succ	40	0	search with cache (only 1: apply Z.lt_nge, Z.lt_succ_diag_r).	0.0123929977417	1
Coq.ZArith.ZorderX.Zgt_le_succ	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0191650390625	3
Coq.ZArith.ZorderX.Zle_gt_succ	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.021115064621	3
Coq.ZArith.ZorderX.Zle_lt_succ	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.011167049408	2
Coq.ZArith.ZorderX.Zlt_le_succ	40	1	search with cache (only 1: apply Z.le_succ_l).	0.0115549564362	2
Coq.ZArith.ZorderX.Zgt_succ_le	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0209329128265	3
Coq.ZArith.ZorderX.Zlt_succ_le	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.011421918869	2
Coq.ZArith.ZorderX.Zle_succ_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0209579467773	3
Coq.ZArith.ZorderX.Zle_succ_le	40	1.2	search with cache (only 1: intros; only 1: now apply Z.lt_le_incl, Z.le_succ_l).	0.0333030223846	5
Coq.ZArith.ZorderX.Zgt_succ_pred	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_lt_pred).	0.0205869674683	2
Coq.ZArith.ZorderX.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0104761123657	1
Coq.ZArith.ZorderX.Zlt_0_le_0_pred	40	1	search with cache (only 1: apply Z.lt_le_pred).	0.012284040451	2
Coq.ZArith.ZorderX.Zgt_0_le_0_pred	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0206251144409	3
Coq.ZArith.ZorderX.Zle_neg_pos	40	0	search with cache (only 1: exact Pos2Z.neg_le_pos).	0.00848388671875	1
Coq.ZArith.ZorderX.Zgt_pos_0	40	0	search with cache (only 1: easy).	0.011990070343	1
Coq.ZArith.ZorderX.Zle_0_pos	40	0	search with cache (only 1: exact Pos2Z.pos_is_nonneg).	0.00829982757568	1
Coq.ZArith.ZorderX.Zlt_neg_0	40	0	search with cache (only 1: exact Pos2Z.neg_is_neg).	0.0100729465485	1
Coq.ZArith.ZorderX.Zle_0_nat	40	0.0.2.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: easy).	0.0456960201263	21
Coq.ZArith.ZorderX.Zgt_succ_gt_or_eq	40	1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.lt_eq_cases, Z.lt_succ_r).	0.0911438465118	4
Coq.ZArith.ZorderX.Zplus_gt_compat_l	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.089684009552	4
Coq.ZArith.ZorderX.Zplus_gt_compat_r	40	7.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.30335688591	23
Coq.ZArith.ZorderX.Zplus_le_compat_l	40	12	search with cache (only 1: apply Z.add_le_mono_l).	1.28065705299	139
Coq.ZArith.ZorderX.Zplus_le_compat_r	40	7	search with cache (only 1: apply Z.add_le_mono_r).	0.247186899185	22
Coq.ZArith.ZorderX.Zplus_lt_compat_l	40	2	search with cache (only 1: apply Z.add_lt_mono_l).	0.0274150371552	3
Coq.ZArith.ZorderX.Zplus_lt_compat_r	40	7	search with cache (only 1: apply Z.add_lt_mono_r).	0.315448999405	26
Coq.ZArith.ZorderX.Zplus_le_reg_l	40	12	search with cache (only 1: apply Z.add_le_mono_l).	1.26693892479	138
Coq.ZArith.ZorderX.Zplus_le_reg_r	40	7	search with cache (only 1: apply Z.add_le_mono_r).	0.250277996063	22
Coq.ZArith.ZorderX.Zplus_lt_reg_l	40	2	search with cache (only 1: apply Z.add_lt_mono_l).	0.0280828475952	3
Coq.ZArith.ZorderX.Zplus_lt_reg_r	40	7	search with cache (only 1: apply Z.add_lt_mono_r).	0.316941022873	26
Coq.ZArith.ZorderX.Zplus_gt_reg_l	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0400018692017	4
Coq.ZArith.ZorderX.Zplus_gt_reg_r	40	7.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.316409111023	23
Coq.ZArith.ZorderX.Zmult_le_compat_r	40	11.1	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.155431985855	98
Coq.ZArith.ZorderX.Zmult_le_compat_l	40	7.1	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0240888595581	10
Coq.ZArith.ZorderX.Zmult_lt_compat_r	40	18	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.587230920792	286
Coq.ZArith.ZorderX.Zmult_gt_compat_r	40	5.0.2	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.270356893539	54
Coq.ZArith.ZorderX.Zmult_gt_0_lt_compat_r	40	5.0.2	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.306530952454	55
Coq.ZArith.ZorderX.Zmult_gt_0_le_compat_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0678040981293	4
Coq.ZArith.ZorderX.Zmult_lt_0_le_compat_r	40	2	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0147480964661	3
Coq.ZArith.ZorderX.Zmult_gt_0_lt_compat_l	40	5.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0530381202698	11
Coq.ZArith.ZorderX.Zmult_lt_compat_l	40	5	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0439219474792	11
Coq.ZArith.ZorderX.Zmult_gt_compat_l	40	5.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.062206029892	11
Coq.ZArith.ZorderX.Zmult_ge_compat_r	40	1.1.9	search with cache (only 1: revert n m; only 1: intros a b g; only 1: intuition).	0.68673992157	320
Coq.ZArith.ZorderX.Zmult_ge_compat_l	40	7.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.174244165421	55
Coq.ZArith.ZorderX.Zmult_ge_compat	40	2.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.152458906174	11
Coq.ZArith.ZorderX.Zmult_le_compat	40	2.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0475800037384	11
Coq.ZArith.ZorderX.Zmult_gt_0_lt_reg_r	40	5.0.2	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.193605899811	46
Coq.ZArith.ZorderX.Zmult_lt_reg_r	40	18	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.552523136139	286
Coq.ZArith.ZorderX.Zmult_le_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.025377035141	4
Coq.ZArith.ZorderX.Zmult_lt_0_le_reg_r	40	2	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0144870281219	3
Coq.ZArith.ZorderX.Zmult_ge_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0331900119781	4
Coq.ZArith.ZorderX.Zmult_gt_reg_r	40	5.0.2	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.180601119995	45
Coq.ZArith.ZorderX.Zmult_lt_compat	40	0.0	search with cache (only 1: intros (Hn, Hnp) (Hm, Hmq); only 1: now apply Z.mul_lt_mono_nonneg).	0.0217070579529	2
Coq.ZArith.ZorderX.Zmult_lt_compat2	40	2.0.1.2.2.0.1.0	search with cache (only 1: intros (Hn, Hnp) (Hm, Hmq); only 1: apply Z.le_lt_trans with (p * m); only 1: apply Z.mul_le_mono_pos_r; only 1: Z.order; only 1: Z.order; only 1: apply Z.mul_lt_mono_pos_l; only 1: Z.order; only 1: Z.order).	0.691596984863	360
Coq.ZArith.ZorderX.Zmult_gt_0_compat	40	8.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_pos).	0.079962015152	10
Coq.ZArith.ZorderX.Zmult_gt_0_le_0_compat	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_nonneg_cancel_r).	0.0265760421753	2
Coq.ZArith.ZorderX.Zmult_le_0_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_nonneg_cancel_r).	0.0269069671631	2
Coq.ZArith.ZorderX.Zmult_lt_0_reg_r	40	27	search with cache (only 1: apply Z.mul_pos_cancel_r).	1.63157296181	671
Coq.ZArith.ZorderX.Zmult_gt_0_lt_0_reg_r	40	27.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	3.09304189682	1487
Coq.ZArith.ZorderX.Zmult_gt_0_reg_l	40	55.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_l).	25.7543361187	18186
Coq.ZArith.ZorderX.Zlt_square_simpl	40	7	search with cache (only 1: apply Z.square_lt_simpl_nonneg).	0.01664686203	8
Coq.ZArith.ZorderX.Zgt_square_simpl	40	7.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0345799922943	9
Coq.ZArith.ZorderX.Zeq_plus_swap	40	0	search with cache (only 1: apply Z.add_move_r).	0.0139842033386	1
Coq.ZArith.ZorderX.Zlt_0_minus_lt	40	7	search with cache (only 1: apply Z.lt_0_sub).	0.0136399269104	8
Coq.ZArith.ZorderX.Zle_0_minus_le	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0134978294373	1
Coq.ZArith.ZorderX.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0132699012756	1
Coq.ZArith.ZnumtheoryX.Zdivide_opp_r	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0131449699402	1
Coq.ZArith.ZnumtheoryX.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0134680271149	1
Coq.ZArith.ZnumtheoryX.Zdivide_opp_l	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.012647151947	1
Coq.ZArith.ZnumtheoryX.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0129828453064	1
Coq.ZArith.ZnumtheoryX.Zdivide_Zabs_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0114982128143	1
Coq.ZArith.ZnumtheoryX.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0113451480865	1
Coq.ZArith.ZnumtheoryX.Zmult_one	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.eq_mul_1_nonneg).	0.0343499183655	2
Coq.ZArith.ZnumtheoryX.Zdivide_bounds	40	0.0.0.1	search with cache (only 1: intros H Hb; only 1: rewrite <- Z.divide_abs_l, <- Z.divide_abs_r in H; only 1: apply Z.abs_pos in Hb; only 1: now apply Z.divide_pos_le).	0.0551609992981	5
Coq.ZArith.ZnumtheoryX.Zmod_divide	40	6.1.0	search with cache (only 1: intros a b Hb; only 1: intros Hab; only 1: now rewrite <- Z.mod_divide).	0.0571839809418	14
Coq.ZArith.ZnumtheoryX.Zdivide_mod	40	7.4	search with cache (only 1: intros a b (c, ->); only 1: apply Z_mod_mult).	0.573256969452	187
Coq.ZArith.ZnumtheoryX.Zdivide_dec	40
Coq.ZArith.ZnumtheoryX.Z_lt_neq	40	4.2	search with cache (only 1: intro H; only 1: auto using Z.lt_neq, Z.neq_sym).	0.12243103981	27
Coq.ZArith.ZnumtheoryX.Zdivide_Zdiv_eq	40	0.4.0.0.1.0	search with cache (only 1: intros Ha H; only 1: rewrite (Z.div_mod b a)  at 1; only 1: rewrite Znumtheory.Zdivide_mod; only 1: auto with zarith; only 1: auto with zarith; only 1: now apply Znumtheory.Z_lt_neq).	0.38484787941	79
Coq.ZArith.ZnumtheoryX.Zdivide_Zdiv_eq_2	40	4.0.0.1	search with cache (only 1: intros; only 1: apply Z.divide_div_mul_exact; only 1: now apply Znumtheory.Z_lt_neq; only 1: auto with zarith).	0.0488550662994	9
Coq.ZArith.ZnumtheoryX.Zdivide_le	40	0.0	search with cache (only 1: intros; only 1: now apply Z.divide_pos_le).	0.0250508785248	2
Coq.ZArith.ZnumtheoryX.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.ZnumtheoryX.Zmod_div_mod	40
Coq.ZArith.ZnumtheoryX.Zmod_divide_minus	40
Coq.ZArith.ZnumtheoryX.Zdivide_mod_minus	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_sym	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_0	40	2.0.2.0.6.0.16	search with cache (only 1: intros n; only 1: constructor; only 1: exists 1; only 1: now Z.nzsimpl; only 1: exists 0; only 1: now Z.nzsimpl; only 1: trivial).	1.49679088593	1097
Coq.ZArith.ZnumtheoryX.Zis_gcd_1	40	2.0.0.0.4.3.35	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists 1; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: intros; only 1: intuition).	7.21011209488	4873
Coq.ZArith.ZnumtheoryX.Zis_gcd_refl	40	4	search with cache (only 1: now subst).	0.0253870487213	13
Coq.ZArith.ZnumtheoryX.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.1506960392	5
Coq.ZArith.ZnumtheoryX.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.286170959473	5
Coq.ZArith.ZnumtheoryX.Zis_gcd_0_abs	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_unique	40	2.2.0.4	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	4.54862689972	345
Coq.ZArith.ZnumtheoryX.Zis_gcd_for_euclid	40	0.0.0.0.1.1.1	search with cache (only 1: simple induction 1; only 1: constructor; only 1: replace a with (a - q * b + q * b); only 1: auto with zarith; only 1: ring; only 1: intuition; only 1: intuition).	7.04459214211	65
Coq.ZArith.ZnumtheoryX.Zis_gcd_for_euclid2	40
Coq.ZArith.ZnumtheoryX.euclid_rec	40
Coq.ZArith.ZnumtheoryX.euclid	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_uniqueness_apart_sign	40	2.2.1.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: assert (d | c) by auto; only 1: auto; only 1: auto).	0.0806150436401	18
Coq.ZArith.ZnumtheoryX.Zis_gcd_bezout	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_mult	40
Coq.ZArith.ZnumtheoryX.rel_prime_bezout	40
Coq.ZArith.ZnumtheoryX.bezout_rel_prime	40
Coq.ZArith.ZnumtheoryX.Gauss	40	0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: elim (Znumtheory.rel_prime_bezout a b H0); only 1: intros; only 1: replace c with (c * 1); only 1: rewrite <- H1; only 1: replace (c * (u * a + v * b)) with (c * u * a + v * (b * c)); only 1: eauto with zarith; only 1: ring; only 1: ring).	0.191189050674	10
Coq.ZArith.ZnumtheoryX.rel_prime_mult	40
Coq.ZArith.ZnumtheoryX.rel_prime_cross_prod	40
Coq.ZArith.ZnumtheoryX.Zis_gcd_rel_prime	40
Coq.ZArith.ZnumtheoryX.rel_prime_sym	40	8.0	search with cache (only 1: intros a b; only 1: now apply Zis_gcd_sym).	0.0189471244812	10
Coq.ZArith.ZnumtheoryX.rel_prime_div	40
Coq.ZArith.ZnumtheoryX.rel_prime_1	40	2.0.1.0.0.4.1.3	search with cache (only 1: intro n; only 1: repeat split; only 1: exists 1; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto).	2.0655670166	583
Coq.ZArith.ZnumtheoryX.not_rel_prime_0	40
Coq.ZArith.ZnumtheoryX.rel_prime_mod	40
Coq.ZArith.ZnumtheoryX.rel_prime_mod_rev	40
Coq.ZArith.ZnumtheoryX.Zrel_prime_neq_mod_0	40	4.0.3.1.0.0	search with cache (only 1: intros a b H H1 H2; only 1: case (Znumtheory.not_rel_prime_0 _ H); only 1: rewrite <- H2; only 1: apply Znumtheory.rel_prime_mod; only 1: now transitivity 1; only 1: auto).	2.11009597778	604
Coq.ZArith.ZnumtheoryX.prime_divisors	40
Coq.ZArith.ZnumtheoryX.prime_rel_prime	40
Coq.ZArith.ZnumtheoryX.rel_prime_le_prime	40
Coq.ZArith.ZnumtheoryX.prime_mult	40
Coq.ZArith.ZnumtheoryX.not_prime_0	40
Coq.ZArith.ZnumtheoryX.not_prime_1	40	53	search with cache (only 1: now destruct 1 || intros _).	4.77018094063	3847
Coq.ZArith.ZnumtheoryX.prime_2	40
Coq.ZArith.ZnumtheoryX.prime_3	40
Coq.ZArith.ZnumtheoryX.prime_ge_2	40	0	search with cache (only 1: now intros (Hp, _); apply (Zlt_le_succ 1)).	0.012687921524	1
Coq.ZArith.ZnumtheoryX.Z_0_1_more	40	4.4.4.0.0.0.0.1	search with cache (only 1: intros H; only 1: Z.le_elim H; only 1: apply Z.le_succ_l in H; only 1: change (1 <= x) in H; only 1: Z.le_elim H; only 1: auto; only 1: auto; only 1: auto).	16.1898910999	3594
Coq.ZArith.ZnumtheoryX.prime_alt	40
Coq.ZArith.ZnumtheoryX.square_not_prime	40
Coq.ZArith.ZnumtheoryX.prime_div_prime	40
Coq.ZArith.ZnumtheoryX.Zgcd_is_gcd	40	1.9.7.1	search with cache (only 1: constructor; only 1: apply Z.gcd_divide_l; only 1: apply Z.gcd_divide_r; only 1: apply Z.gcd_greatest).	3.40966415405	1731
Coq.ZArith.ZnumtheoryX.Zgcd_spec	40	0.2.0.6.1	search with cache (only 1: intros x y; only 1: exists (Z.gcd x y); only 1: split; only 1: apply Znumtheory.Zgcd_is_gcd; only 1: apply Z.gcd_nonneg).	0.425347805023	163
Coq.ZArith.ZnumtheoryX.Zdivide_Zgcd	40	0.0	search with cache (only 1: intros; only 1: now apply Z.gcd_greatest).	0.0157628059387	2
Coq.ZArith.ZnumtheoryX.Zis_gcd_gcd	40
Coq.ZArith.ZnumtheoryX.Zgcd_div_swap0	40
Coq.ZArith.ZnumtheoryX.Zgcd_div_swap	40
Coq.ZArith.ZnumtheoryX.Zgcd_ass	40	0.1	search with cache (only 1: symmetry; only 1: apply Z.gcd_assoc).	0.0228700637817	3
Coq.ZArith.ZnumtheoryX.Zgcd_1_rel_prime	40
Coq.ZArith.ZnumtheoryX.rel_prime_dec	40
Coq.ZArith.ZnumtheoryX.prime_dec_aux	40
Coq.ZArith.ZnumtheoryX.prime_dec	40
Coq.ZArith.ZnumtheoryX.not_prime_divide	40
Coq.ZArith.ZdivX.Z_div_mod_POS	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros b Hb a; only 1: Z.swap_greater; only 1: generalize (Z.pos_div_eucl_eq a b Hb), (Z.pos_div_eucl_bound a b Hb); only 1: destruct Z.pos_div_eucl; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: auto).	0.677563905716	60
Coq.ZArith.ZdivX.Z_div_mod	40	0.2.0.0.3.0.1	search with cache (only 1: Z.swap_greater; only 1: intros Hb; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl; only 1: auto).	2.55116796494	339
Coq.ZArith.ZdivX.Remainder_equiv	40
Coq.ZArith.ZdivX.Z_div_mod_full	40	0.0.1.0.0.0.0.3.1.0.3.0.2.0	search with cache (only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: split; only 1: intuition Z.order; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	33.3972821236	9198
Coq.ZArith.ZdivX.Z_mod_remainder	40
Coq.ZArith.ZdivX.Z_div_mod_eq	40	0.1.0	search with cache (only 1: intros Hb; only 1: apply Z.div_mod; only 1: now destruct b).	0.0622699260712	4
Coq.ZArith.ZdivX.Zmod_eq_full	40	2.3.0	search with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: now apply Z.mod_eq).	0.0575258731842	8
Coq.ZArith.ZdivX.Zmod_eq	40	0.0.1	search with cache (only 1: intros; only 1: apply Zdiv.Zmod_eq_full; only 1: now destruct b).	0.06214594841	4
Coq.ZArith.ZdivX.Zdiv_eucl_exist	40	0.0.0	search with cache (only 1: intros b Hb a; only 1: exists (Z.div_eucl a b); only 1: exact (Zdiv.Z_div_mod a b Hb)).	0.0591118335724	3
Coq.ZArith.ZdivX.Zdiv_mod_unique	40
Coq.ZArith.ZdivX.Zdiv_unique	40	0.1.4.6	search with cache (only 1: intros n Hn; only 1: intros a b c0; only 1: eapply Zdiv.Zdiv_unique_full; only 1: intuition).	2.13224411011	724
Coq.ZArith.ZdivX.Zmod_unique	40	0.3.1.0	search with cache (only 1: intros; only 1: eapply Zdiv.Zmod_unique_full; only 1: auto; only 1: eauto).	0.176981925964	21
Coq.ZArith.ZdivX.Zmod_0_l	40	4.0	search with cache (only 1: intros; only 1: reflexivity).	0.0423591136932	6
Coq.ZArith.ZdivX.Zmod_0_r	40	0.0.3.1	search with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.116781949997	20
Coq.ZArith.ZdivX.Zdiv_0_l	40	5.0	search with cache (only 1: intros; only 1: reflexivity).	0.0809020996094	14
Coq.ZArith.ZdivX.Zdiv_0_r	40	0.0.5.1	search with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.118386030197	28
Coq.ZArith.ZdivX.Zmod_1_r	40	1.0	search with cache (only 1: intros; only 1: apply Z.mod_1_r).	0.0404479503632	3
Coq.ZArith.ZdivX.Zdiv_1_r	40	0.1.0	search with cache (only 1: intros; only 1: Zdiv.zero_or_not a; only 1: apply Z.div_1_r).	0.0508718490601	4
Coq.ZArith.ZdivX.Z_mod_same_full	40	11.43.2	search with cache (only 1: intros; only 1: Zdiv.zero_or_not a; only 1: now apply Z.mod_divide).	11.0232670307	9561
Coq.ZArith.ZdivX.Z_mod_mult	40	1.2.5.0	search with cache (only 1: intros; only 1: Zdiv.zero_or_not b; only 1: apply Z.mod_mul; only 1: tauto).	0.24679684639	74
Coq.ZArith.ZdivX.Z_div_pos	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.0586590766907	4
Coq.ZArith.ZdivX.Z_div_ge0	40	0.1.0.0	search with cache (only 1: intros; only 1: apply Z.le_ge, Zdiv.Z_div_pos; only 1: auto using Z.ge_le; only 1: auto using Z.ge_le).	0.048583984375	5
Coq.ZArith.ZdivX.Z_div_lt	40	5.0.0.0.4.0.0.0	search with cache (only 1: intros a b b_ge_2 a_gt_0; only 1: apply Z.div_lt; only 1: apply Z.gt_lt; only 1: exact a_gt_0; only 1: apply (Z.lt_le_trans _ 2); only 1: reflexivity; only 1: apply Z.ge_le; only 1: exact b_ge_2).	2.539757967	1240
Coq.ZArith.ZdivX.Z_div_ge	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0537459850311	5
Coq.ZArith.ZdivX.Z_div_le	40	1.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.0773251056671	5
Coq.ZArith.ZdivX.Z_mult_div_ge	40	0.0.0	search with cache (only 1: intros; only 1: apply Z.mul_div_le; only 1: auto using Z.gt_lt).	0.046245098114	3
Coq.ZArith.ZdivX.Z_mult_div_ge_neg	40	5.12.0.0	search with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z.mul_div_ge; only 1: now Z.nzsimpl).	1.95530986786	949
Coq.ZArith.ZdivX.Z_div_exact_full_1	40	1.2.2.4.0	search with cache (only 1: intros a b; only 1: Zdiv.zero_or_not b; only 1: rewrite Z.div_exact; only 1: now Z.nzsimpl; only 1: tauto).	0.972676038742	219
Coq.ZArith.ZdivX.Z_div_exact_full_2	40	2.2.2.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	0.14187002182	10
Coq.ZArith.ZdivX.Zmod_le	40	6.6.4.0	search with cache (only 1: intros; only 1: apply Z.mod_le; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	1.03968000412	556
Coq.ZArith.ZdivX.Zdiv_lt_upper_bound	40	1.0.0.0.0.0.1	search with cache (only 1: intros a b q; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.div_lt_upper_bound).	0.101761102676	28
Coq.ZArith.ZdivX.Zdiv_le_upper_bound	40	6.5.2	search with cache (only 1: intros a b q; only 1: rewrite Z.mul_comm; only 1: apply Z.div_le_upper_bound).	0.929455041885	422
Coq.ZArith.ZdivX.Zdiv_le_lower_bound	40	0.5.2	search with cache (only 1: intros a b q; only 1: rewrite Z.mul_comm; only 1: apply Z.div_le_lower_bound).	0.118046045303	35
Coq.ZArith.ZdivX.Zdiv_le_compat_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_compat_l; only 1: intuition auto using Z.lt_le_incl; only 1: intuition auto using Z.lt_le_incl).	0.0874681472778	4
Coq.ZArith.ZdivX.Zdiv_sgn	40
Coq.ZArith.ZdivX.Z_mod_plus_full	40	0.1.0.0.2.0	search with cache (only 1: intros; only 1: Zdiv.zero_or_not c; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: tauto).	0.181194782257	15
Coq.ZArith.ZdivX.Zdiv_opp_opp	40	1.3.0.0	search with cache (only 1: intros a b; only 1: Zdiv.zero_or_not b; only 1: apply Z.div_opp_opp; only 1: tauto).	0.131798028946	15
Coq.ZArith.ZdivX.Zmod_opp_opp	40	1.0.0.0	search with cache (only 1: intros; only 1: Zdiv.zero_or_not b; only 1: apply Z.mod_opp_opp; only 1: tauto).	0.103628873825	5
Coq.ZArith.ZdivX.Z_mod_zero_opp_full	40	1.4.2.2	search with cache (only 1: intros a b; only 1: Zdiv.zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: tauto).	0.734694004059	179
Coq.ZArith.ZdivX.Z_mod_nz_opp_full	40	2.2.3.0.1	search with cache (only 1: intros; only 1: Zdiv.zero_or_not b; only 1: apply Z.mod_opp_l_nz; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	1.39978194237	312
Coq.ZArith.ZdivX.Z_mod_zero_opp_r	40	1.2.2.2	search with cache (only 1: intros a b; only 1: Zdiv.zero_or_not b; only 1: apply Z.mod_opp_r_z; only 1: tauto).	0.454591989517	81
Coq.ZArith.ZdivX.Z_mod_nz_opp_r	40	2.2.0.1.1	search with cache (only 1: intros; only 1: Zdiv.zero_or_not b; only 1: apply Z.mod_opp_r_nz; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	0.49022603035	70
Coq.ZArith.ZdivX.Z_div_zero_opp_full	40	1.1.3.2	search with cache (only 1: intros a b; only 1: Zdiv.zero_or_not b; only 1: apply Z.div_opp_l_z; only 1: tauto).	0.526385068893	97
Coq.ZArith.ZdivX.Z_div_nz_opp_full	40	2.2.8.5.2.0.4.0	search with cache (only 1: intros a b; only 1: Zdiv.zero_or_not b; only 1: easy; only 1: intros; only 1: rewrite Z.div_opp_l_nz; only 1: auto; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	32.3980329037	14350
Coq.ZArith.ZdivX.Z_div_zero_opp_r	40	1.0.2.2	search with cache (only 1: intros a b; only 1: Zdiv.zero_or_not b; only 1: apply Z.div_opp_r_z; only 1: tauto).	0.310737133026	44
Coq.ZArith.ZdivX.Z_div_nz_opp_r	40	2.2.8.0.1.0.3.0	search with cache (only 1: intros a b; only 1: Zdiv.zero_or_not b; only 1: easy; only 1: intros; only 1: rewrite Z.div_opp_r_nz; only 1: auto; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	23.3647060394	8484
Coq.ZArith.ZdivX.Zdiv_mult_cancel_r	40	0.0.4.2.0	search with cache (only 1: intros; only 1: Zdiv.zero_or_not b; only 1: apply Z.div_mul_cancel_r; only 1: tauto; only 1: tauto).	0.510700941086	81
Coq.ZArith.ZdivX.Zdiv_mult_cancel_l	40	0.0.5.2.2.4.0	search with cache (only 1: intros; only 1: rewrite (Z.mul_comm c b); only 1: Zdiv.zero_or_not b; only 1: rewrite (Z.mul_comm b c); only 1: apply Z.div_mul_cancel_l; only 1: tauto; only 1: tauto).	6.8680369854	2155
Coq.ZArith.ZdivX.Zmult_mod_distr_l	40	0.0.1.5.3.0.1.5.0	search with cache (only 1: intros; only 1: rewrite (Z.mul_comm c b); only 1: Zdiv.zero_or_not b; only 1: now rewrite Z.mul_0_r; only 1: rewrite (Z.mul_comm b c); only 1: Zdiv.zero_or_not c; only 1: apply Z.mul_mod_distr_l; only 1: tauto; only 1: tauto).	7.31222105026	2595
Coq.ZArith.ZdivX.Zmult_mod_distr_r	40	0.0.0.4.0.5.3.1.0	search with cache (only 1: intros; only 1: Zdiv.zero_or_not b; only 1: rewrite (Z.mul_comm b c); only 1: Zdiv.zero_or_not c; only 1: now rewrite Z.mul_0_r; only 1: rewrite (Z.mul_comm c b); only 1: apply Z.mul_mod_distr_r; only 1: tauto; only 1: tauto).	15.9180371761	4162
Coq.ZArith.ZdivX.Zmod_mod	40	0.1.0.0	search with cache (only 1: intros; only 1: Zdiv.zero_or_not n; only 1: apply Z.mod_mod; only 1: tauto).	0.062844991684	5
Coq.ZArith.ZdivX.Zmult_mod	40	0.1.0.1	search with cache (only 1: intros; only 1: Zdiv.zero_or_not n; only 1: apply Z.mul_mod; only 1: tauto).	0.069974899292	6
Coq.ZArith.ZdivX.Zplus_mod	40	0.1.1.1	search with cache (only 1: intros; only 1: Zdiv.zero_or_not n; only 1: apply Z.add_mod; only 1: tauto).	0.0694541931152	7
Coq.ZArith.ZdivX.Zminus_mod	40	0.0.3.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: replace (a - b) with (a + -1 * b); only 1: replace (a mod n - b mod n) with (a mod n + -1 * (b mod n)); only 1: rewrite Zdiv.Zplus_mod; only 1: rewrite Zdiv.Zmult_mod; only 1: rewrite Zdiv.Zplus_mod with (b := (-1 * (b mod n))); only 1: rewrite Zdiv.Zmult_mod with (b := (b mod n)); only 1: rewrite Zdiv.Zmult_mod with (b := (b mod n)); only 1: repeat rewrite Zdiv.Zmod_mod; only 1: auto; only 1: auto with zarith; only 1: auto with zarith).	13.1018691063	2714
Coq.ZArith.ZdivX.Zplus_mod_idemp_l	40	5.7.1	search with cache (only 1: intros; only 1: rewrite Zdiv.Zplus_mod, Zdiv.Zmod_mod, <- Zdiv.Zplus_mod; only 1: reflexivity).	0.805032968521	337
Coq.ZArith.ZdivX.Zplus_mod_idemp_r	40	5.6.1	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: reflexivity).	0.6843521595	252
Coq.ZArith.ZdivX.Zminus_mod_idemp_l	40	0.3.1.0.0	search with cache (only 1: intros; only 1: rewrite Zdiv.Zminus_mod, Zdiv.Zmod_mod, <- Zdiv.Zminus_mod; only 1: replace (a - b) with (a + -1 * b); only 1: auto with zarith; only 1: auto with zarith).	0.517680883408	53
Coq.ZArith.ZdivX.Zminus_mod_idemp_r	40	0.3.2.0.0	search with cache (only 1: intros; only 1: rewrite Zdiv.Zminus_mod, Zdiv.Zmod_mod, <- Zdiv.Zminus_mod; only 1: replace (a - b) with (a + -1 * b); only 1: auto with zarith; only 1: auto with zarith).	0.33983206749	33
Coq.ZArith.ZdivX.Zmult_mod_idemp_l	40	6.0.1	search with cache (only 1: intros; only 1: rewrite Zdiv.Zmult_mod, Zdiv.Zmod_mod, <- Zdiv.Zmult_mod; only 1: reflexivity).	0.0653262138367	15
Coq.ZArith.ZdivX.Zmult_mod_idemp_r	40	6.0.1	search with cache (only 1: intros; only 1: rewrite Zdiv.Zmult_mod, Zdiv.Zmod_mod, <- Zdiv.Zmult_mod; only 1: reflexivity).	0.0650432109833	15
Coq.ZArith.ZdivX.eqm_refl	40	3	search with cache (only 1: now Z.nzsimpl).	0.0370419025421	4
Coq.ZArith.ZdivX.eqm_sym	40	3.1.0	search with cache (only 1: unfold eqm; only 1: intros; only 1: auto).	0.0419738292694	7
Coq.ZArith.ZdivX.eqm_trans	40	19.0	search with cache (only 1: unfold eqm; only 1: Z.order').	8.91505885124	4224
Coq.ZArith.ZdivX.eqm_setoid	40	1.1.1.3	search with cache (only 1: split; only 1: now f_equal; only 1: exact Zdiv.eqm_sym; only 1: exact Zdiv.eqm_trans).	0.0462620258331	19
Coq.ZArith.ZdivX.Zplus_eqm	40	0.0.0.9	search with cache (only 1: repeat red; only 1: intros; only 1: rewrite Zdiv.Zplus_mod, H, H0, <- Zdiv.Zplus_mod; only 1: auto).	0.388231992722	155
Coq.ZArith.ZdivX.Zminus_eqm	40	1.0.0.0.0	search with cache (only 1: unfold eqm; only 1: repeat red; only 1: intros; only 1: rewrite Zdiv.Zminus_mod, H, H0, <- Zdiv.Zminus_mod; only 1: auto).	0.056077003479	6
Coq.ZArith.ZdivX.Zmult_eqm	40	1.0.0.0.0	search with cache (only 1: unfold eqm; only 1: repeat red; only 1: intros; only 1: rewrite Zdiv.Zmult_mod, H, H0, <- Zdiv.Zmult_mod; only 1: auto).	0.0566351413727	6
Coq.ZArith.ZdivX.Zopp_eqm	40	0.1.1	search with cache (only 1: intros x y H; only 1: change (Zdiv.eqm (- x) (- y)) with (Zdiv.eqm (0 - x) (0 - y)); only 1: now rewrite H).	0.211827993393	36
Coq.ZArith.ZdivX.Zmod_eqm	40	0.1	search with cache (only 1: intros; only 1: exact (Zdiv.Zmod_mod a N)).	0.091285943985	19
Coq.ZArith.ZdivX.Zdiv_Zdiv	40	0.0.3.0.1.2.1.0.0	search with cache (only 1: intros; only 1: Zdiv.zero_or_not b; only 1: rewrite Z.mul_comm; only 1: Zdiv.zero_or_not c; only 1: rewrite Z.mul_comm; only 1: apply Z.div_div; only 1: auto; only 1: apply Z.le_neq; only 1: auto).	21.9777438641	4224
Coq.ZArith.ZdivX.Zmod_div	40	1.1.0	search with cache (only 1: intros a b; only 1: Zdiv.zero_or_not b; only 1: auto using Z.mod_div).	0.0642030239105	5
Coq.ZArith.ZdivX.Zdiv_mult_le	40	2.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: Zdiv.zero_or_not b; only 1: now rewrite Z.mul_0_r; only 1: apply Z.div_mul_le; only 1: auto; only 1: apply Z.le_neq; only 1: auto; only 1: auto).	3.06762909889	466
Coq.ZArith.ZdivX.Zmod_divides	40
Coq.ZArith.ZdivX.Zmod_odd	40	0.0	search with cache (only 1: intros a; only 1: now rewrite <- Z.bit0_odd, <- Z.bit0_mod).	0.035080909729	2
Coq.ZArith.ZdivX.Zmod_even	40	0.0.0	search with cache (only 1: intros a; only 1: rewrite Zdiv.Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.042307138443	3
Coq.ZArith.ZdivX.Zodd_mod	40	0.0.0	search with cache (only 1: intros a; only 1: rewrite Zdiv.Zmod_odd; only 1: now destruct Z.odd).	0.0666718482971	3
Coq.ZArith.ZdivX.Zeven_mod	40	0.0.0	search with cache (only 1: intros a; only 1: rewrite Zdiv.Zmod_even; only 1: now destruct Z.even).	0.0402770042419	3
Coq.ZArith.ZdivX.Z_mod_same	40	0.0	search with cache (only 1: intros; only 1: apply Zdiv.Z_mod_same_full).	0.0402898788452	2
Coq.ZArith.ZdivX.Z_div_same	40	0	search with cache (only 1: now intros; apply Zdiv.Z_div_same_full; intros ->).	0.0300149917603	1
Coq.ZArith.ZdivX.Z_div_plus	40	0	search with cache (only 1: now intros; apply Zdiv.Z_div_plus_full; intros ->).	0.0275139808655	1
Coq.ZArith.ZdivX.Z_div_mult	40	0	search with cache (only 1: now intros; apply Zdiv.Z_div_mult_full; intros ->).	0.0279879570007	1
Coq.ZArith.ZdivX.Z_mod_plus	40	0.0	search with cache (only 1: intros; only 1: apply Zdiv.Z_mod_plus_full).	0.0373921394348	2
Coq.ZArith.ZdivX.Z_div_exact_1	40	0.0.0	search with cache (only 1: intros; only 1: apply Zdiv.Z_div_exact_full_1; only 1: auto with zarith).	0.0526480674744	3
Coq.ZArith.ZdivX.Z_div_exact_2	40	1	search with cache (only 1: now intros; apply Zdiv.Z_div_exact_full_2; auto; intros ->).	0.0455198287964	11
Coq.ZArith.ZdivX.Z_mod_zero_opp	40	2.0.0	search with cache (only 1: intros; only 1: apply Zdiv.Z_mod_zero_opp_full; only 1: auto with zarith).	0.0646572113037	12
Coq.ZArith.ZdivX.Zmod_POS_correct	40
Coq.ZArith.ZdivX.Zmod'_correct	40
Coq.ZArith.ZdivX.Zdiv_eucl_extended	40
Coq.ZArith.ZdivX.div_Zdiv	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply (Zdiv.Zdiv_unique _ _ _ (Z.of_nat (n mod m))); only 1: split; only 1: auto with zarith; only 1: now apply inj_lt, Nat.mod_upper_bound; only 1: rewrite <- Nat2Z.inj_mul, <- Nat2Z.inj_add; only 1: now apply inj_eq, Nat.div_mod).	0.0986590385437	8
Coq.ZArith.ZdivX.mod_Zmod	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply (Zdiv.Zmod_unique _ _ (Z.of_nat n / Z.of_nat m)); only 1: split; only 1: auto with zarith; only 1: now apply inj_lt, Nat.mod_upper_bound; only 1: rewrite <- Zdiv.div_Zdiv, <- Nat2Z.inj_mul, <- Nat2Z.inj_add by trivial; only 1: now apply inj_eq, Nat.div_mod).	0.098541021347	8
Coq.ZArith.Wf_ZX.Z_of_nat_complete	40	0.1.0	search with cache (only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0544719696045	4
Coq.ZArith.Wf_ZX.Z_of_nat_complete_inf	40	0.1.0	search with cache (only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0542669296265	4
Coq.ZArith.Wf_ZX.Z_of_nat_prop	40	0.0	search with cache (only 1: intros P H x Hx; only 1: now destruct (Wf_Z.Z_of_nat_complete x Hx) as (n, ->)).	0.0422229766846	2
Coq.ZArith.Wf_ZX.Z_of_nat_set	40	2.0	search with cache (only 1: intros P H x Hx; only 1: now destruct (Wf_Z.Z_of_nat_complete_inf x Hx) as (n, ->)).	0.0418400764465	4
Coq.ZArith.Wf_ZX.natlike_ind	40	5.2.0.0.0.0.0.0.0	search with cache (only 1: intros P Ho Hrec x Hx; only 1: apply Wf_Z.Z_of_nat_set; only 1: induction n; only 1: exact Ho; only 1: rewrite Nat2Z.inj_succ; only 1: apply Hrec; only 1: trivial using Nat2Z.is_nonneg; only 1: trivial using Nat2Z.is_nonneg; only 1: trivial).	3.98136305809	1626
Coq.ZArith.Wf_ZX.natlike_rec	40	6.2.0.0.0.0.0.0.0	search with cache (only 1: intros P Ho Hrec x Hx; only 1: apply Wf_Z.Z_of_nat_set; only 1: induction n; only 1: exact Ho; only 1: rewrite Nat2Z.inj_succ; only 1: apply Hrec; only 1: trivial using Nat2Z.is_nonneg; only 1: trivial using Nat2Z.is_nonneg; only 1: trivial).	3.79138708115	1528
Coq.ZArith.Wf_ZX.R_wf	40
Coq.ZArith.Wf_ZX.natlike_rec2	40
Coq.ZArith.Wf_ZX.natlike_rec3	40	0.1.0.0.0.1.3.0.0.1.2.0.1.0.4.0	search with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: apply Hrec; only 1: easy; only 1: apply IH; only 1: split; only 1: easy; only 1: apply Z.lt_pred_l; only 1: easy; only 1: intros Hz; only 1: now destruct Hz).	18.6837930679	13023
Coq.ZArith.Wf_ZX.Zlt_0_rec	40
Coq.ZArith.Wf_ZX.Zlt_0_ind	40	4.6	search with cache (only 1: intros; only 1: now apply Wf_Z.Zlt_0_rec).	0.136742115021	52
Coq.ZArith.Wf_ZX.Z_lt_rec	40
Coq.ZArith.Wf_ZX.Z_lt_induction	40	2.6	search with cache (only 1: intros; only 1: now apply Wf_Z.Z_lt_rec).	0.0518901348114	12
Coq.ZArith.Wf_ZX.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_ZX.Zlt_lower_bound_ind	40	1.6	search with cache (only 1: intros; only 1: now apply Wf_Z.Zlt_lower_bound_rec with z).	0.172534942627	28
Coq.ZArith.BinIntX.Z.eq_dec	40	0.0.0	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0509769916534	3
Coq.ZArith.BinIntX.Z.pos_sub_spec	40
Coq.ZArith.BinIntX.Z.pos_sub_discr	40	6.2.2.0.0.0.0	search with cache (only 1: rewrite BinInt.Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: now f_equal; only 1: intros; only 1: now rewrite Pos.add_comm, Pos.sub_add; only 1: intros; only 1: now rewrite Pos.add_comm, Pos.sub_add).	3.58220410347	2069
Coq.ZArith.BinIntX.Z.pos_sub_diag	40	0	search with cache (only 1: now rewrite BinInt.Z.pos_sub_spec, Pos.compare_refl).	0.0207569599152	1
Coq.ZArith.BinIntX.Z.pos_sub_lt	40	1.0	search with cache (only 1: intros H; only 1: now rewrite BinInt.Z.pos_sub_spec, H).	0.0311939716339	3
Coq.ZArith.BinIntX.Z.pos_sub_gt	40	0.2	search with cache (only 1: intros H; only 1: now rewrite BinInt.Z.pos_sub_spec, Pos.compare_antisym, H).	0.0309820175171	4
Coq.ZArith.BinIntX.Z.pos_sub_opp	40
Coq.ZArith.BinIntX.Z.Private_BootStrap.add_0_r	40	0	search with cache (only 1: now BinInt.Z.nzsimpl).	0.0691409111023	1
Coq.ZArith.BinIntX.Z.Private_BootStrap.mul_0_r	40	0	search with cache (only 1: now BinInt.Z.nzsimpl).	0.0698688030243	1
Coq.ZArith.BinIntX.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now BinInt.Z.nzsimpl).	0.0658819675446	1
Coq.ZArith.BinIntX.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinIntX.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinIntX.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinIntX.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinIntX.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinIntX.Z.Private_BootStrap.add_assoc	40	0.0.0.0.0.0.10	search with cache (only 1: destruct n; only 1: now BinInt.Z.nzsimpl; only 1: apply BinInt.Z.Private_BootStrap.add_assoc_pos; only 1: apply BinInt.Z.Private_BootStrap.opp_inj; only 1: rewrite !BinInt.Z.Private_BootStrap.opp_add_distr; only 1: simpl; only 1: apply BinInt.Z.Private_BootStrap.add_assoc_pos).	1.17174601555	167
Coq.ZArith.BinIntX.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.1.1.0.0	search with cache (only 1: rewrite BinInt.Z.add_comm; only 1: rewrite BinInt.Z.add_comm; only 1: destruct n; only 1: now BinInt.Z.nzsimpl; only 1: simpl; only 1: now rewrite BinInt.Z.pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite BinInt.Z.pos_sub_spec, Pos.compare_refl).	0.718863010406	83
Coq.ZArith.BinIntX.Z.Private_BootStrap.mul_opp_r	40	1	search with cache (only 1: now destruct n, m).	0.0224628448486	2
Coq.ZArith.BinIntX.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinIntX.Z.Private_BootStrap.mul_add_distr_r	40	0.0.0.1.0.4	search with cache (only 1: destruct p as [| p| p]; only 1: now rewrite !BinInt.Z.Private_BootStrap.mul_0_r; only 1: apply BinInt.Z.Private_BootStrap.mul_add_distr_pos; only 1: apply BinInt.Z.Private_BootStrap.opp_inj; only 1: rewrite BinInt.Z.Private_BootStrap.opp_add_distr, <- !BinInt.Z.Private_BootStrap.mul_opp_r; only 1: apply BinInt.Z.Private_BootStrap.mul_add_distr_pos).	1.41960310936	121
Coq.ZArith.BinIntX.Z.one_succ	40	0	search with cache (only 1: reflexivity).	0.0166590213776	1
Coq.ZArith.BinIntX.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.0169148445129	1
Coq.ZArith.BinIntX.Z.add_0_l	40	0	search with cache (only 1: now BinInt.Z.nzsimpl).	0.0658671855927	1
Coq.ZArith.BinIntX.Z.add_succ_l	40	4.0	search with cache (only 1: BinInt.Z.nzsimpl; only 1: now f_equiv).	0.561347007751	37
Coq.ZArith.BinIntX.Z.opp_0	40	0	search with cache (only 1: now BinInt.Z.nzsimpl).	0.0653519630432	1
Coq.ZArith.BinIntX.Z.opp_succ	40	0.0	search with cache (only 1: unfold BinInt.Z.succ, BinInt.Z.pred; only 1: apply BinInt.Z.Private_BootStrap.opp_add_distr).	0.0242259502411	2
Coq.ZArith.BinIntX.Z.succ_pred	40	0.2	search with cache (only 1: unfold BinInt.Z.succ, BinInt.Z.pred; only 1: now rewrite <- BinInt.Z.Private_BootStrap.add_assoc, BinInt.Z.Private_BootStrap.add_opp_diag_r, BinInt.Z.Private_BootStrap.add_0_r).	0.0262241363525	4
Coq.ZArith.BinIntX.Z.pred_succ	40	0.0	search with cache (only 1: unfold BinInt.Z.succ, BinInt.Z.pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0271389484406	2
Coq.ZArith.BinIntX.Z.sub_0_r	40	0	search with cache (only 1: apply BinInt.Z.Private_BootStrap.add_0_r).	0.0167710781097	1
Coq.ZArith.BinIntX.Z.sub_succ_r	40	0.0	search with cache (only 1: unfold BinInt.Z.sub, BinInt.Z.succ, BinInt.Z.pred; only 1: now rewrite BinInt.Z.Private_BootStrap.opp_add_distr, BinInt.Z.Private_BootStrap.add_assoc).	0.025866985321	2
Coq.ZArith.BinIntX.Z.mul_0_l	40	0	search with cache (only 1: now BinInt.Z.nzsimpl).	0.0709850788116	1
Coq.ZArith.BinIntX.Z.mul_succ_l	40	0.0	search with cache (only 1: unfold BinInt.Z.succ; only 1: now rewrite BinInt.Z.Private_BootStrap.mul_add_distr_r, BinInt.Z.Private_BootStrap.mul_1_l).	0.0294439792633	2
Coq.ZArith.BinIntX.Z.eqb_eq	40
Coq.ZArith.BinIntX.Z.ltb_lt	40
Coq.ZArith.BinIntX.Z.leb_le	40
Coq.ZArith.BinIntX.Z.compare_eq_iff	40
Coq.ZArith.BinIntX.Z.compare_sub	40
Coq.ZArith.BinIntX.Z.compare_antisym	40
Coq.ZArith.BinIntX.Z.compare_lt_iff	40	2.0	search with cache (only 1: unfold ltb, lt; only 1: reflexivity).	0.0298171043396	4
Coq.ZArith.BinIntX.Z.compare_le_iff	40	2	search with cache (only 1: reflexivity).	0.0176219940186	3
Coq.ZArith.BinIntX.Z.lt_succ_r	40
Coq.ZArith.BinIntX.Z.max_l	40	21	search with cache (only 1: BinInt.Z.solve_max).	1.75201296806	373
Coq.ZArith.BinIntX.Z.max_r	40	0.0.0.1.0	search with cache (only 1: unfold le, max; only 1: case BinInt.Z.compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.0666999816895	6
Coq.ZArith.BinIntX.Z.min_l	40	5	search with cache (only 1: BinInt.Z.solve_min).	0.901697158813	41
Coq.ZArith.BinIntX.Z.min_r	40	0.0.0.0.0.0	search with cache (only 1: unfold le, min; only 1: rewrite (BinInt.Z.compare_antisym n m); only 1: case BinInt.Z.compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.0944209098816	6
Coq.ZArith.BinIntX.Z.peano_ind	40	0.0.0.1.0.0.0.0.7.0.3	search with cache (only 1: intros H0 Hs Hp z; only 1: destruct z; only 1: assumption; only 1: induction p using Pos.peano_ind; only 1: now apply (Hs 0); only 1: rewrite <- Pos.add_1_r; only 1: now apply (Hs (pos p)); only 1: induction p using Pos.peano_ind; only 1: now apply (Hp 0); only 1: rewrite <- Pos.add_1_r; only 1: now apply (Hp (neg p))).	0.906299829483	1005
Coq.ZArith.BinIntX.Z.bi_induction	40	0.0.0.0.2.4.0	search with cache (only 1: intros _ H0 Hs; only 1: induction z using BinInt.Z.peano_ind; only 1: apply Hs; only 1: now apply -> Hs; only 1: now apply -> Hs; only 1: apply Hs; only 1: now rewrite BinInt.Z.succ_pred).	0.305248975754	137
Coq.ZArith.BinIntX.Z.abs_eq	40	9.0.1.7	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now f_equal).	4.48263502121	2228
Coq.ZArith.BinIntX.Z.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0296101570129	5
Coq.ZArith.BinIntX.Z.sgn_null	40	0.1	search with cache (only 1: intros; only 1: now subst).	0.0278658866882	3
Coq.ZArith.BinIntX.Z.sgn_pos	40	2	search with cache (only 1: now destruct n).	0.141981840134	26
Coq.ZArith.BinIntX.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0220310688019	1
Coq.ZArith.BinIntX.Z.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.0194919109344	1
Coq.ZArith.BinIntX.Z.pow_succ_r	40	0.0.0.1.0.1.0.0	search with cache (only 1: destruct m as [| m| m]; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinInt.Z.pow_pos; only 1: now rewrite Pos.add_comm, Pos.iter_add; only 1: now destruct 1 || intros _).	0.304698944092	18
Coq.ZArith.BinIntX.Z.pow_neg_r	40	0	search with cache (only 1: now destruct m).	0.0286400318146	1
Coq.ZArith.BinIntX.Z.pow_pos_fold	40	0	search with cache (only 1: reflexivity).	0.01646900177	1
Coq.ZArith.BinIntX.Z.square_spec	40	0.0.1.0.0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	0.0673899650574	10
Coq.ZArith.BinIntX.Z.sqrtrem_spec	40	0.1.0.0.2.0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: now repeat split; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: subst; only 1: now split; only 1: simpl; only 1: subst; only 1: now repeat split; only 1: now destruct 1).	4.44732499123	1413
Coq.ZArith.BinIntX.Z.sqrt_spec	40
Coq.ZArith.BinIntX.Z.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0714099407196	1
Coq.ZArith.BinIntX.Z.sqrtrem_sqrt	40	0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold BinInt.Z.sqrtrem, BinInt.Z.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: reflexivity).	0.0557811260223	6
Coq.ZArith.BinIntX.Z.log2_spec	40
Coq.ZArith.BinIntX.Z.log2_nonpos	40	0.1.0.6	search with cache (only 1: destruct n; only 1: trivial; only 1: easy; only 1: trivial).	0.56956410408	72
Coq.ZArith.BinIntX.Z.even_spec	40	0.6.1.1.1	search with cache (only 1: split; only 1: exists (BinInt.Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]; only 1: intros (m, ->); only 1: now destruct m).	0.338626146317	161
Coq.ZArith.BinIntX.Z.odd_spec	40
Coq.ZArith.BinIntX.Z.double_spec	40	0	search with cache (only 1: reflexivity).	0.0176348686218	1
Coq.ZArith.BinIntX.Z.succ_double_spec	40	0	search with cache (only 1: now destruct n).	0.0216619968414	1
Coq.ZArith.BinIntX.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.0180909633636	1
Coq.ZArith.BinIntX.Z.pos_div_eucl_eq	40
Coq.ZArith.BinIntX.Z.div_eucl_eq	40
Coq.ZArith.BinIntX.Z.div_mod	40	1.0.6.0	search with cache (only 1: intros Hb; only 1: generalize (BinInt.Z.div_eucl_eq a b Hb); only 1: unfold BinInt.Z.div, BinInt.Z.modulo; only 1: now destruct div_eucl).	0.282986164093	52
Coq.ZArith.BinIntX.Z.pos_div_eucl_bound	40
Coq.ZArith.BinIntX.Z.mod_pos_bound	40
Coq.ZArith.BinIntX.Z.mod_neg_bound	40
Coq.ZArith.BinIntX.Z.quotrem_eq	40
Coq.ZArith.BinIntX.Z.quot_rem'	40	0.0.3.2	search with cache (only 1: rewrite BinInt.Z.mul_comm; only 1: generalize (BinInt.Z.quotrem_eq a b); only 1: unfold BinInt.Z.quot, BinInt.Z.rem; only 1: now destruct quotrem).	0.0705900192261	14
Coq.ZArith.BinIntX.Z.quot_rem	40	0.0.1.3.2	search with cache (only 1: intros _; only 1: rewrite BinInt.Z.mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.510283946991	74
Coq.ZArith.BinIntX.Z.rem_bound_pos	40
Coq.ZArith.BinIntX.Z.rem_opp_l'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold BinInt.Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold BinInt.Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold BinInt.Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold BinInt.Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	27.1913380623	9263
Coq.ZArith.BinIntX.Z.rem_opp_r'	40
Coq.ZArith.BinIntX.Z.rem_opp_l	40	3.1	search with cache (only 1: intros _; only 1: apply BinInt.Z.rem_opp_l').	0.422616004944	68
Coq.ZArith.BinIntX.Z.rem_opp_r	40	3.1	search with cache (only 1: intros _; only 1: apply BinInt.Z.rem_opp_r').	0.505960941315	72
Coq.ZArith.BinIntX.Z.divide_Zpos	40	0.0.0.2.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros ([| r| r], H); only 1: simpl in *; only 1: destr_eq H; only 1: simpl in *; only 1: destr_eq H; only 1: exists r; only 1: now f_equal; only 1: simpl in *; only 1: destr_eq H; only 1: intros (r, H); only 1: exists (pos r); only 1: simpl; only 1: now f_equal).	7.03501296043	2375
Coq.ZArith.BinIntX.Z.divide_Zpos_Zneg_r	40	0.0.5.0.0.5.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: now rewrite BinInt.Z.mul_opp_l, <- H; only 1: intros (m, H); only 1: exists (- m); only 1: now rewrite BinInt.Z.mul_opp_l, <- H).	0.732914209366	359
Coq.ZArith.BinIntX.Z.divide_Zpos_Zneg_l	40	0.0.1.0.0.1.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: now rewrite BinInt.Z.mul_opp_l, <- BinInt.Z.mul_opp_r; only 1: intros (m, H); only 1: exists (- m); only 1: now rewrite BinInt.Z.mul_opp_l, <- BinInt.Z.mul_opp_r).	0.0920469760895	9
Coq.ZArith.BinIntX.Z.ggcd_gcd	40
Coq.ZArith.BinIntX.Z.ggcd_correct_divisors	40
Coq.ZArith.BinIntX.Z.gcd_divide_l	40
Coq.ZArith.BinIntX.Z.gcd_divide_r	40	0.4.1.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite BinInt.Z.mul_comm).	2.0222530365	422
Coq.ZArith.BinIntX.Z.gcd_greatest	40
Coq.ZArith.BinIntX.Z.gcd_nonneg	40	7	search with cache (only 1: now destruct a, b).	0.0678050518036	8
Coq.ZArith.BinIntX.Z.ggcd_opp	40
Coq.ZArith.BinIntX.Z.testbit_of_N	40	0.0.0.0.2.0.1.0.1	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.325169086456	145
Coq.ZArith.BinIntX.Z.testbit_of_N'	40	0.0.0.0.0.3.0	search with cache (only 1: rewrite <- BinInt.Z.testbit_of_N; only 1: intro Hn; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0620100498199	10
Coq.ZArith.BinIntX.Z.testbit_Zpos	40	2.1	search with cache (only 1: intro Hn; only 1: now rewrite <- BinInt.Z.testbit_of_N').	0.026703119278	5
Coq.ZArith.BinIntX.Z.testbit_Zneg	40	0.0.0.0.0.0.0.1	search with cache (only 1: intro Hn; only 1: rewrite <- BinInt.Z.testbit_of_N' by trivial; only 1: destruct n as [| n| n]; only 1: unfold BinInt.Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct (Pos.pred_N a); only 1: now destruct Hn).	0.0794560909271	9
Coq.ZArith.BinIntX.Z.div2_spec	40	0	search with cache (only 1: reflexivity).	0.0184090137482	1
Coq.ZArith.BinIntX.Z.testbit_0_l	40	3	search with cache (only 1: now destruct n).	0.176073074341	22
Coq.ZArith.BinIntX.Z.testbit_neg_r	40	7	search with cache (only 1: now destruct n).	0.0809810161591	22
Coq.ZArith.BinIntX.Z.testbit_odd_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0209178924561	1
Coq.ZArith.BinIntX.Z.testbit_even_0	40	1	search with cache (only 1: now destruct a).	0.0213248729706	2
Coq.ZArith.BinIntX.Z.testbit_odd_succ	40
Coq.ZArith.BinIntX.Z.testbit_even_succ	40
Coq.ZArith.BinIntX.Z.shiftr_spec_aux	40
Coq.ZArith.BinIntX.Z.shiftl_spec_low	40
Coq.ZArith.BinIntX.Z.shiftl_spec_high	40
Coq.ZArith.BinIntX.Z.shiftr_spec	40
Coq.ZArith.BinIntX.Z.lor_spec	40
Coq.ZArith.BinIntX.Z.land_spec	40
Coq.ZArith.BinIntX.Z.ldiff_spec	40
Coq.ZArith.BinIntX.Z.lxor_spec	40
Coq.ZArith.BinIntX.Z.gt_lt_iff	40
Coq.ZArith.BinIntX.Z.gt_lt	40	5.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.162631034851	26
Coq.ZArith.BinIntX.Z.lt_gt	40	5.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.162518024445	26
Coq.ZArith.BinIntX.Z.ge_le_iff	40	6.2	search with cache (only 1: unfold leb, le; only 1: now rewrite BinInt.Z.compare_antisym, CompOpp_iff).	0.0649378299713	19
Coq.ZArith.BinIntX.Z.ge_le	40	3.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.84225487709	96
Coq.ZArith.BinIntX.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0169401168823	1
Coq.ZArith.BinIntX.Z.gtb_ltb	40	0.1.0	search with cache (only 1: unfold BinInt.Z.gtb, BinInt.Z.ltb; only 1: rewrite BinInt.Z.compare_antisym; only 1: now case BinInt.Z.compare).	0.0488259792328	4
Coq.ZArith.BinIntX.Z.geb_leb	40	0.1.0	search with cache (only 1: unfold BinInt.Z.geb, BinInt.Z.leb; only 1: rewrite compare_antisym; only 1: now case compare).	0.0488018989563	4
Coq.ZArith.BinIntX.Z.gtb_lt	40	2.1.3	search with cache (only 1: unfold ltb, lt; only 1: rewrite BinInt.Z.gtb_ltb; only 1: apply BinInt.Z.ltb_lt).	0.932906866074	124
Coq.ZArith.BinIntX.Z.geb_le	40	0.0.0.0.0.0	search with cache (only 1: rewrite BinInt.Z.geb_leb; only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.109809875488	6
Coq.ZArith.BinIntX.Z.gtb_spec	40
Coq.ZArith.BinIntX.Z.geb_spec	40
Coq.ZArith.BinIntX.Z.add_reg_l	40	0	search with cache (only 1: exact (proj1 (BinInt.Z.add_cancel_l m p n))).	0.0217289924622	1
Coq.ZArith.BinIntX.Z.mul_reg_l	40	0.3.0	search with cache (only 1: intro H; only 1: apply mul_cancel_l; only 1: now BinInt.Z.nzsimpl).	0.0790278911591	6
Coq.ZArith.BinIntX.Z.mul_reg_r	40	1	search with cache (only 1: exact (fun Hp => proj1 (BinInt.Z.mul_cancel_r n m p Hp))).	0.0520899295807	11
Coq.ZArith.BinIntX.Z.opp_eq_mul_m1	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: now destruct n).	0.163020849228	12
Coq.ZArith.BinIntX.Z.add_diag	40	0.2.0.0.0.0.0.0	search with cache (only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: change 2 with (1 + 1); only 1: now rewrite Private_BootStrap.mul_add_distr_r, Private_BootStrap.mul_1_l).	0.201337099075	16
Coq.ZArith.BinIntX.Z.compare_opp	40
Coq.ZArith.BinIntX.Z.add_compare_mono_l	40	0.0.0.0.1.1	search with cache (only 1: rewrite (BinInt.Z.compare_sub m p), BinInt.Z.compare_sub; only 1: f_equal; only 1: unfold BinInt.Z.sub; only 1: rewrite BinInt.Z.opp_add_distr, (BinInt.Z.add_comm n m), BinInt.Z.add_assoc; only 1: f_equal; only 1: now rewrite <- BinInt.Z.add_assoc, BinInt.Z.add_opp_diag_r, BinInt.Z.add_0_r).	0.214555978775	25
Coq.ZArith.BinIntX.Z.testbit_mod_pow2	40	0.0.1.0.0	search with cache (only 1: destruct (BinInt.Z.ltb_spec i n); only 1: rewrite ?BinInt.Z.mod_pow2_bits_low, ?BinInt.Z.mod_pow2_bits_high by auto; only 1: auto; only 1: rewrite ?BinInt.Z.mod_pow2_bits_low, ?BinInt.Z.mod_pow2_bits_high by auto; only 1: auto).	0.13187789917	6
Coq.ZArith.BinIntX.Z.testbit_ones	40
Coq.ZArith.BinIntX.Z.testbit_ones_nonneg	40	3.4.1.3	search with cache (only 1: rewrite BinInt.Z.testbit_ones by auto; only 1: destruct (BinInt.Z.leb_spec 0 i); only 1: auto; only 1: solve [ trivial | destruct (proj1 (BinInt.Z.le_ngt _ _) Hi _) ]).	9.59905910492	2490
Coq.ZArith.BinIntX.Pos2Z.id	40	0	search with cache (only 1: reflexivity).	0.0161700248718	1
Coq.ZArith.BinIntX.Pos2Z.inj	40	1	search with cache (only 1: now injection 1).	0.0288960933685	2
Coq.ZArith.BinIntX.Pos2Z.inj_iff	40	0.3.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0701329708099	8
Coq.ZArith.BinIntX.Pos2Z.is_pos	40	7	search with cache (only 1: split).	0.0166189670563	8
Coq.ZArith.BinIntX.Pos2Z.is_nonneg	40	1.0	search with cache (only 1: red; only 1: easy').	0.0338430404663	3
Coq.ZArith.BinIntX.Pos2Z.inj_1	40	0	search with cache (only 1: now BinInt.Z.nzsimpl).	0.0816929340363	1
Coq.ZArith.BinIntX.Pos2Z.inj_xO	40	0	search with cache (only 1: reflexivity).	0.0207939147949	1
Coq.ZArith.BinIntX.Pos2Z.inj_xI	40	0	search with cache (only 1: reflexivity).	0.0227921009064	1
Coq.ZArith.BinIntX.Pos2Z.inj_succ	40	0.0	search with cache (only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0329689979553	2
Coq.ZArith.BinIntX.Pos2Z.inj_add	40	0	search with cache (only 1: reflexivity).	0.0591819286346	1
Coq.ZArith.BinIntX.Pos2Z.inj_sub	40	2.1.0	search with cache (only 1: intros; only 1: simpl; only 1: now rewrite BinInt.Z.pos_sub_gt).	0.0682010650635	6
Coq.ZArith.BinIntX.Pos2Z.inj_sub_max	40	0.1.0.0.0.1.0.0.0	search with cache (only 1: simpl; only 1: rewrite BinInt.Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros; only 1: subst; only 1: now rewrite Pos.sub_diag; only 1: intros; only 1: now rewrite Pos.sub_lt; only 1: now destruct (p - q)%positive).	0.324851989746	64
Coq.ZArith.BinIntX.Pos2Z.inj_pred	40	0.0.0.0	search with cache (only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	0.0416970252991	4
Coq.ZArith.BinIntX.Pos2Z.inj_mul	40	0	search with cache (only 1: reflexivity).	0.0193219184875	1
Coq.ZArith.BinIntX.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0211470127106	1
Coq.ZArith.BinIntX.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0271270275116	1
Coq.ZArith.BinIntX.Pos2Z.inj_square	40	0	search with cache (only 1: reflexivity).	0.0163471698761	1
Coq.ZArith.BinIntX.Pos2Z.inj_compare	40	0	search with cache (only 1: reflexivity).	0.0238320827484	1
Coq.ZArith.BinIntX.Pos2Z.inj_leb	40	0	search with cache (only 1: reflexivity).	0.014524936676	1
Coq.ZArith.BinIntX.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.0179681777954	1
Coq.ZArith.BinIntX.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0168190002441	1
Coq.ZArith.BinIntX.Pos2Z.inj_max	40	1.0.0	search with cache (only 1: unfold BinInt.Z.max, Pos.max; only 1: rewrite BinInt.Pos2Z.inj_compare; only 1: now case BinInt.Z.compare_spec).	0.0605490207672	4
Coq.ZArith.BinIntX.Pos2Z.inj_min	40	0.0.0	search with cache (only 1: unfold BinInt.Z.min, Pos.min; only 1: rewrite BinInt.Pos2Z.inj_compare; only 1: now case Z.compare_spec).	0.0578038692474	3
Coq.ZArith.BinIntX.Pos2Z.inj_sqrt	40	0	search with cache (only 1: reflexivity).	0.0215549468994	1
Coq.ZArith.BinIntX.Pos2Z.inj_gcd	40	0	search with cache (only 1: reflexivity).	0.0213749408722	1
Coq.ZArith.BinIntX.Pos2Z.inj_divide	40	1	search with cache (only 1: apply BinInt.Z.divide_Zpos).	0.592772006989	105
Coq.ZArith.BinIntX.Pos2Z.inj_testbit	40	4.2.0	search with cache (only 1: intro Hn; only 1: apply BinInt.Z.testbit_Zpos; only 1: trivial).	0.0401241779327	9
Coq.ZArith.BinIntX.Pos2Z.inj_neg	40	1	search with cache (only 1: now injection 1).	0.0239419937134	2
Coq.ZArith.BinIntX.Pos2Z.inj_neg_iff	40	0.2.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0527939796448	7
Coq.ZArith.BinIntX.Pos2Z.inj_pos	40	1	search with cache (only 1: now injection 1).	0.0288889408112	2
Coq.ZArith.BinIntX.Pos2Z.inj_pos_iff	40	0.3.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0714430809021	8
Coq.ZArith.BinIntX.Pos2Z.neg_is_neg	40	0	search with cache (only 1: easy).	0.01522397995	1
Coq.ZArith.BinIntX.Pos2Z.neg_is_nonpos	40	0	search with cache (only 1: easy).	0.0195059776306	1
Coq.ZArith.BinIntX.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0168039798737	1
Coq.ZArith.BinIntX.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0195329189301	1
Coq.ZArith.BinIntX.Pos2Z.neg_le_pos	40	0	search with cache (only 1: easy).	0.0196139812469	1
Coq.ZArith.BinIntX.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0160269737244	1
Coq.ZArith.BinIntX.Pos2Z.neg_le_neg	40	1.0.30.11	search with cache (only 1: unfold Pos.le; only 1: red; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	2.9063410759	4314
Coq.ZArith.BinIntX.Pos2Z.neg_lt_neg	40	1.0.2.8	search with cache (only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: red; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	0.513520956039	178
Coq.ZArith.BinIntX.Pos2Z.pos_le_pos	40	0	search with cache (only 1: easy).	0.0135428905487	1
Coq.ZArith.BinIntX.Pos2Z.pos_lt_pos	40	0	search with cache (only 1: easy).	0.0166871547699	1
Coq.ZArith.BinIntX.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0222179889679	1
Coq.ZArith.BinIntX.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.0168409347534	1
Coq.ZArith.BinIntX.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0208990573883	1
Coq.ZArith.BinIntX.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0931918621063	1
Coq.ZArith.BinIntX.Pos2Z.opp_neg	40	0	search with cache (only 1: reflexivity).	0.0182859897614	1
Coq.ZArith.BinIntX.Pos2Z.opp_pos	40	0	search with cache (only 1: reflexivity).	0.0205390453339	1
Coq.ZArith.BinIntX.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0201101303101	1
Coq.ZArith.BinIntX.Pos2Z.add_pos_neg	40	0	search with cache (only 1: reflexivity).	0.0207810401917	1
Coq.ZArith.BinIntX.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.019278049469	1
Coq.ZArith.BinIntX.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0251591205597	1
Coq.ZArith.BinIntX.Pos2Z.divide_pos_neg_r	40	8	search with cache (only 1: apply BinInt.Z.divide_Zpos_Zneg_r).	0.073175907135	36
Coq.ZArith.BinIntX.Pos2Z.divide_pos_neg_l	40	8	search with cache (only 1: apply BinInt.Z.divide_Zpos_Zneg_l).	0.0741050243378	29
Coq.ZArith.BinIntX.Pos2Z.testbit_neg	40	3	search with cache (only 1: apply BinInt.Z.testbit_Zneg).	0.0406470298767	16
Coq.ZArith.BinIntX.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.019464969635	1
Coq.ZArith.BinIntX.Z2Pos.id	40	0	search with cache (only 1: now destruct x).	0.0246648788452	1
Coq.ZArith.BinIntX.Z2Pos.inj	40	0.0.0.0.0.0.0.3	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros _ H ->; only 1: now apply BinInt.Z2Pos.id; only 1: simpl; only 1: easy).	0.610507965088	90
Coq.ZArith.BinIntX.Z2Pos.inj_iff	40	1.3.2.1	search with cache (only 1: split; only 1: now apply BinInt.Z2Pos.inj; only 1: intros; only 1: now f_equal).	1.8312728405	360
Coq.ZArith.BinIntX.Z2Pos.to_pos_nonpos	40	0.1.0.0	search with cache (only 1: destruct x; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0411219596863	5
Coq.ZArith.BinIntX.Z2Pos.inj_1	40	0	search with cache (only 1: reflexivity).	0.0135319232941	1
Coq.ZArith.BinIntX.Z2Pos.inj_double	40	0	search with cache (only 1: now destruct x).	0.0271329879761	1
Coq.ZArith.BinIntX.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0254099369049	1
Coq.ZArith.BinIntX.Z2Pos.inj_succ	40	0.0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: easy).	0.0597789287567	5
Coq.ZArith.BinIntX.Z2Pos.inj_add	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0910339355469	4
Coq.ZArith.BinIntX.Z2Pos.inj_sub	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: simpl; only 1: intros; only 1: now rewrite BinInt.Z.pos_sub_gt; only 1: easy; only 1: easy).	0.135514974594	10
Coq.ZArith.BinIntX.Z2Pos.inj_pred	40	0	search with cache (only 1: now destruct x as [| [x| x| ]| ]).	0.0186710357666	1
Coq.ZArith.BinIntX.Z2Pos.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0793550014496	4
Coq.ZArith.BinIntX.Z2Pos.inj_pow	40
Coq.ZArith.BinIntX.Z2Pos.inj_pow_pos	40	1.0	search with cache (only 1: intros; only 1: now apply (BinInt.Z2Pos.inj_pow x (Zpos p))).	0.0261192321777	3
Coq.ZArith.BinIntX.Z2Pos.inj_compare	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.119853973389	4
Coq.ZArith.BinIntX.Z2Pos.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0618660449982	4
Coq.ZArith.BinIntX.Z2Pos.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0751140117645	4
Coq.ZArith.BinIntX.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0795879364014	4
Coq.ZArith.BinIntX.Z2Pos.inj_max	40
Coq.ZArith.BinIntX.Z2Pos.inj_min	40
Coq.ZArith.BinIntX.Z2Pos.inj_sqrt	40	0	search with cache (only 1: now destruct x).	0.0170950889587	1
Coq.ZArith.BinIntX.Z2Pos.inj_gcd	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0801858901978	4
Coq.ZArith.BinIntX.Zplus_minus_eq	40	0.0	search with cache (only 1: intros; only 1: now apply BinInt.Z.add_move_l).	0.0290198326111	2
Coq.ZArith.BinIntX.Zpos_eq	40	0	search with cache (only 1: congruence).	0.0175199508667	1
Coq.ZArith.BinIntX.ZL0	40	7	search with cache (only 1: reflexivity).	0.0619390010834	8
Coq.ZArith.BinIntX.Zplus_diag_eq_mult_2	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: rewrite BinInt.Z.mul_comm; only 1: apply BinInt.Z.add_diag).	0.101708173752	12
Coq.ZArith.BinIntX.Z_eq_mult	40	0.3	search with cache (only 1: intro H; only 1: now subst).	0.060802936554	5
Coq.ZArith.Zpow_defX.Zpower_theory	40
Coq.ZArith.ZArith_decX.Dcompare_inf	40	3.0.0.0.0.0	search with cache (only 1: induction r; only 1: left; only 1: now left || now right; only 1: left; only 1: now left || now right; only 1: auto).	0.0966799259186	19
Coq.ZArith.ZArith_decX.Zcompare_rect	40	0.0.0.2.1	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0668869018555	8
Coq.ZArith.ZArith_decX.Zcompare_rec	40	0	search with cache (only 1: apply ZArith_dec.Zcompare_rect).	0.028745174408	1
Coq.ZArith.ZArith_decX.Z_lt_dec	40	0.0.0.0.0	search with cache (only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.0784349441528	5
Coq.ZArith.ZArith_decX.Z_le_dec	40	0.0.0.0.0	search with cache (only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || (right; tauto); only 1: now left || (right; tauto); only 1: now left || (right; tauto)).	0.0761351585388	5
Coq.ZArith.ZArith_decX.Z_gt_dec	40	0.0.0.0.0	search with cache (only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.140384912491	5
Coq.ZArith.ZArith_decX.Z_ge_dec	40	0.0.0.0.0	search with cache (only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || (right; tauto); only 1: now left || (right; tauto); only 1: now left || (right; tauto)).	0.133450984955	5
Coq.ZArith.ZArith_decX.Z_lt_ge_dec	40	1	search with cache (only 1: exact ZArith_dec.Z_lt_dec).	0.0220580101013	2
Coq.ZArith.ZArith_decX.Z_lt_le_dec	40	3.0.2.1	search with cache (only 1: elim ZArith_dec.Z_lt_ge_dec; only 1: now left; only 1: right; only 1: now apply Z.ge_le).	0.323673963547	81
Coq.ZArith.ZArith_decX.Z_le_gt_dec	40	1.2.1.0.2	search with cache (only 1: elim ZArith_dec.Z_le_dec; only 1: auto with arith; only 1: right; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.763820886612	129
Coq.ZArith.ZArith_decX.Z_gt_le_dec	40	5	search with cache (only 1: exact ZArith_dec.Z_gt_dec).	0.39618396759	103
Coq.ZArith.ZArith_decX.Z_ge_lt_dec	40	1.2.1.0.3	search with cache (only 1: elim ZArith_dec.Z_ge_dec; only 1: auto with arith; only 1: right; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.469907999039	119
Coq.ZArith.ZArith_decX.Z_le_lt_eq_dec	40	0.0.1.0.0.0.0.1.0.2.0	search with cache (only 1: intro H; only 1: apply ZArith_dec.Zcompare_rec with (n := x) (m := y); only 1: right; only 1: elim (Z.compare_eq_iff x y); only 1: auto with arith; only 1: left; only 1: auto with arith; only 1: intro H1; only 1: absurd (x > y); only 1: auto with arith; only 1: auto with arith).	9.13072609901	2858
Coq.ZArith.ZArith_decX.Zlt_cotrans	40	4.0.2.0.2.0.0.0.2.2	search with cache (only 1: intros x y H z; only 1: case (ZArith_dec.Z_lt_ge_dec x z); only 1: left; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: right; only 1: apply Z.le_lt_trans with (m := x); only 1: apply Z.ge_le; only 1: intro; only 1: auto with arith; only 1: assumption).	36.3938539028	19400
Coq.ZArith.ZArith_decX.Zlt_cotrans_pos	40	0.0.2.5.3.0	search with cache (only 1: intros x y H; only 1: case (ZArith_dec.Zlt_cotrans 0 (x + y) H x); only 1: now left; only 1: right; only 1: apply Z.add_lt_mono_l with (p := x); only 1: now rewrite Z.add_0_r).	2.88946700096	1498
Coq.ZArith.ZArith_decX.Zlt_cotrans_neg	40	6.0.0.3.0.0	search with cache (only 1: intros x y H; only 1: case (ZArith_dec.Zlt_cotrans (x + y) 0 H x); only 1: right; only 1: apply Z.add_lt_mono_l with (p := x); only 1: now rewrite Z.add_0_r; only 1: now left).	11.1530089378	3966
Coq.ZArith.ZArith_decX.not_Zeq_inf	40
Coq.ZArith.ZArith_decX.Z_dec	40
Coq.ZArith.ZArith_decX.Z_dec'	40
Coq.ZArith.ZArith_decX.Z_zerop	40	0	search with cache (only 1: exact (fun x : Z => Z.eq_dec x 0)).	0.0297360420227	1
Coq.ZArith.ZminX.Zmin_spec	40	3.3.5.1.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.min_comm; only 1: destruct (Z.min_spec y x); only 1: auto; only 1: auto).	2.5746679306	1461
Coq.ZArith.ZminX.Zmin_irreducible	40	0.0	search with cache (only 1: generalize (Z.min_spec_le n m); only 1: intuition).	0.145275115967	2
Coq.ZArith.ZminX.Zmin_le_prime_inf	40	1.1.0	search with cache (only 1: apply Z.min_case; only 1: auto; only 1: auto).	0.0297908782959	5
Coq.ZArith.ZminX.Zpos_min_1	40	0	search with cache (only 1: now destruct p).	0.0147490501404	1
Coq.ZArith.ZmaxX.Zmax_spec	40	3.3.4.0	search with cache (only 1: Z.swap_greater; only 1: destruct (Z.max_spec x y); only 1: auto; only 1: auto).	0.531291007996	183
Coq.ZArith.ZmaxX.Zmax_left	40	0.11	search with cache (only 1: unfold Z.le, Z.max; only 1: now case Z.compare_spec).	0.82675409317	125
Coq.ZArith.ZmaxX.Zpos_max_1	40	0	search with cache (only 1: now destruct p).	0.029886007309	1
Coq.ZArith.ZquotX.Zquot_0_r	40
Coq.ZArith.ZquotX.Zrem_0_r	40
Coq.ZArith.ZquotX.Zrem_0_l	40	2	search with cache (only 1: now destruct a).	0.0154011249542	3
Coq.ZArith.ZquotX.Zquot_0_l	40	4	search with cache (only 1: now destruct a).	0.134728908539	25
Coq.ZArith.ZquotX.Z_rem_same	40
Coq.ZArith.ZquotX.Z_rem_mult	40
Coq.ZArith.ZquotX.Zquot_opp_l	40
Coq.ZArith.ZquotX.Zquot_opp_r	40
Coq.ZArith.ZquotX.Zrem_opp_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	26.5716660023	9980
Coq.ZArith.ZquotX.Zrem_opp_r	40
Coq.ZArith.ZquotX.Zquot_opp_opp	40
Coq.ZArith.ZquotX.Zrem_opp_opp	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	33.524394989	12298
Coq.ZArith.ZquotX.Zrem_sgn	40
Coq.ZArith.ZquotX.Zrem_sgn2	40
Coq.ZArith.ZquotX.Zrem_lt_pos	40
Coq.ZArith.ZquotX.Zrem_lt_neg	40
Coq.ZArith.ZquotX.Zrem_lt_pos_pos	40	0.9	search with cache (only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.698280096054	158
Coq.ZArith.ZquotX.Zrem_lt_pos_neg	40	0.3.1.1.0	search with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	2.544921875	16
Coq.ZArith.ZquotX.Zrem_lt_neg_pos	40	0.1.0	search with cache (only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.131993055344	4
Coq.ZArith.ZquotX.Zrem_lt_neg_neg	40	0.0	search with cache (only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.0390830039978	2
Coq.ZArith.ZquotX.Remainder_equiv	40
Coq.ZArith.ZquotX.Zquot_mod_unique_full	40
Coq.ZArith.ZquotX.Zquot_unique_full	40
Coq.ZArith.ZquotX.Zrem_unique_full	40	1.3.3.3.2	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	3.95831418037	1381
Coq.ZArith.ZquotX.Z_quot_pos	40
Coq.ZArith.ZquotX.Z_quot_lt	40
Coq.ZArith.ZquotX.Z_quot_monotone	40
Coq.ZArith.ZquotX.Z_mult_quot_le	40
Coq.ZArith.ZquotX.Z_mult_quot_ge	40
Coq.ZArith.ZquotX.Z_quot_exact_full	40
Coq.ZArith.ZquotX.Zrem_le	40
Coq.ZArith.ZquotX.Zquot_le_upper_bound	40
Coq.ZArith.ZquotX.Zquot_lt_upper_bound	40
Coq.ZArith.ZquotX.Zquot_le_lower_bound	40
Coq.ZArith.ZquotX.Zquot_sgn	40
Coq.ZArith.ZquotX.Z_rem_plus	40
Coq.ZArith.ZquotX.Z_quot_plus	40
Coq.ZArith.ZquotX.Z_quot_plus_l	40
Coq.ZArith.ZquotX.Zquot_mult_cancel_r	40
Coq.ZArith.ZquotX.Zquot_mult_cancel_l	40
Coq.ZArith.ZquotX.Zmult_rem_distr_l	40
Coq.ZArith.ZquotX.Zmult_rem_distr_r	40
Coq.ZArith.ZquotX.Zrem_rem	40
Coq.ZArith.ZquotX.Zmult_rem	40
Coq.ZArith.ZquotX.Zplus_rem	40
Coq.ZArith.ZquotX.Zplus_rem_idemp_l	40
Coq.ZArith.ZquotX.Zplus_rem_idemp_r	40
Coq.ZArith.ZquotX.Zmult_rem_idemp_l	40
Coq.ZArith.ZquotX.Zmult_rem_idemp_r	40
Coq.ZArith.ZquotX.Zquot_Zquot	40
Coq.ZArith.ZquotX.Zquot_mult_le	40
Coq.ZArith.ZquotX.Zrem_divides	40
Coq.ZArith.ZquotX.Zquot2_odd_remainder	40
Coq.ZArith.ZquotX.Zrem_odd	40
Coq.ZArith.ZquotX.Zrem_even	40
Coq.ZArith.ZquotX.Zeven_rem	40
Coq.ZArith.ZquotX.Zodd_rem	40
Coq.ZArith.ZquotX.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.ZquotX.Zquot_Zdiv_pos	40
Coq.ZArith.ZquotX.Zrem_Zmod_pos	40
Coq.ZArith.ZquotX.Zrem_Zmod_zero	40	1.6.4.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.rem_divide; only 1: now rewrite <- Z.mod_divide; only 1: tauto).	4.6368021965	647
Coq.ZArith.Zpow_altX.Piter_mul_acc	40
Coq.ZArith.Zpow_altX.Piter_op_square	40
Coq.ZArith.Zpow_altX.Zpower_equiv	40
Coq.ZArith.Zpow_altX.Zpower_alt_0_r	40	0	search with cache (only 1: trivial).	0.0144889354706	1
Coq.ZArith.Zpow_altX.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_altX.Zpower_alt_neg_r	40	0.3.14.2.0	search with cache (only 1: destruct b as [| p| p]; only 1: unfold Zpower_alt, Z.pow, Z.pow_pos; only 1: Z.order'; only 1: easy; only 1: trivial).	13.5627589226	4966
Coq.ZArith.Zpow_altX.Zpower_alt_Ppow	40
Coq.ZArith.Zpow_factsX.Zpower_pos_1_l	40
Coq.ZArith.Zpow_factsX.Zpower_pos_0_l	40	0.0.0.1.231	search with cache (only 1: induction p using Pos.peano_ind; only 1: apply Pos2Nat.inj_iter; only 1: rewrite <- Pos.add_1_r; only 1: unfold Z.pow_pos; only 1: now rewrite Pos.add_comm, Pos.iter_add).	11.7399110794	35151
Coq.ZArith.Zpow_factsX.Zpower_pos_pos	40
Coq.ZArith.Zpow_factsX.Zpower_le_monotone	40
Coq.ZArith.Zpow_factsX.Zpower_lt_monotone	40
Coq.ZArith.Zpow_factsX.Zpower_gt_1	40
Coq.ZArith.Zpow_factsX.Zmult_power	40
Coq.ZArith.Zpow_factsX.Zpower_le_monotone3	40
Coq.ZArith.Zpow_factsX.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_factsX.Zpower2_lt_lin	40
Coq.ZArith.Zpow_factsX.Zpower2_le_lin	40
Coq.ZArith.Zpow_factsX.Zpower2_Psize	40
Coq.ZArith.Zpow_factsX.Zpower_mod	40
Coq.ZArith.Zpow_factsX.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_factsX.Zpow_mod_correct	40
Coq.ZArith.Zpow_factsX.Zpower_divide	40
Coq.ZArith.Zpow_factsX.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_factsX.rel_prime_Zpower	40
Coq.ZArith.Zpow_factsX.prime_power_prime	40
Coq.ZArith.Zpow_factsX.Zdivide_power_2	40
Coq.ZArith.ZeuclidX.ZEuclid.mod_wd	40	0	search with cache (only 1: solve_proper).	0.0420310497284	1
Coq.ZArith.ZeuclidX.ZEuclid.div_wd	40	0	search with cache (only 1: solve_proper).	0.0398869514465	1
Coq.ZArith.ZeuclidX.ZEuclid.div_mod	40
Coq.ZArith.ZeuclidX.ZEuclid.mod_always_pos	40
Coq.ZArith.ZeuclidX.ZEuclid.mod_bound_pos	40
Coq.ZArith.auxiliaryX.Zne_left	40	0.0	search with cache (only 1: unfold Zne; only 1: now rewrite <- Z.sub_move_0_r).	0.0487680435181	2
Coq.ZArith.auxiliaryX.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0397560596466	1
Coq.ZArith.auxiliaryX.Zle_left	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0271060466766	1
Coq.ZArith.auxiliaryX.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0282819271088	1
Coq.ZArith.auxiliaryX.Zlt_left_rev	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.0291080474854	1
Coq.ZArith.auxiliaryX.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.0283200740814	1
Coq.ZArith.auxiliaryX.Zlt_left	40	0.2.1.0	search with cache (only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.12935090065	18
Coq.ZArith.auxiliaryX.Zge_left	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0462419986725	2
Coq.ZArith.auxiliaryX.Zgt_left	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply auxiliary.Zlt_left).	0.0475661754608	2
Coq.ZArith.auxiliaryX.Zgt_left_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0522530078888	2
Coq.ZArith.auxiliaryX.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0535898208618	2
Coq.ZArith.auxiliaryX.Zle_mult_approx	40	2.2.1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.lt_succ_r; only 1: apply Z.lt_succ_r; only 1: Z.order_pos).	0.299278020859	19
Coq.ZArith.auxiliaryX.Zmult_le_approx	40	0.6.1.0.6.0.1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.lt_succ_r; only 1: apply Z.mul_pos_cancel_r with n; only 1: trivial; only 1: Z.nzsimpl; only 1: apply Z.le_lt_trans with (m * n + p); only 1: trivial; only 1: now apply Z.add_lt_mono_l).	28.3319571018	6669
Coq.ZArith.ZdigitsX.binary_value	40	1.37	search with cache (only 1: fix gcd_divide 1; only 1: auto).	2.99125099182	6295
Coq.ZArith.ZdigitsX.two_compl_value	40	0.0.0.8.0.1	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.542740106583	486
Coq.ZArith.ZdigitsX.Zmod2_twice	40
Coq.ZArith.ZdigitsX.Z_to_binary	40	4.40	search with cache (only 1: fix gcd_divide 1; only 1: auto).	11.9297380447	36944
Coq.ZArith.ZdigitsX.Z_to_two_compl	40	4.0.11	search with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto with arith).	1.17947101593	1188
Coq.ZArith.ZdigitsX.binary_value_Sn	40	7	search with cache (only 1: easy).	0.0208551883698	12
Coq.ZArith.ZdigitsX.Z_to_binary_Sn	40
Coq.ZArith.ZdigitsX.binary_value_pos	40
Coq.ZArith.ZdigitsX.two_compl_value_Sn	40	3.1	search with cache (only 1: intros; only 1: trivial).	0.0742311477661	46
Coq.ZArith.ZdigitsX.Z_to_two_compl_Sn	40
Coq.ZArith.ZdigitsX.Z_to_binary_Sn_z	40	2.0.0.0.0.0.1	search with cache (only 1: intros a; only 1: destruct z; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto).	0.113195896149	10
Coq.ZArith.ZdigitsX.Z_div2_value	40	1.0.0.0.1.0.0.1.1.0.2	search with cache (only 1: simpl; only 1: destruct z; only 1: simpl; only 1: auto with zarith; only 1: simpl; only 1: destruct p; only 1: auto; only 1: auto; only 1: simpl; only 1: now destruct Hn || easy; only 1: now destruct Hn || easy).	10.2531330585	3678
Coq.ZArith.ZdigitsX.Pdiv2	40
Coq.ZArith.ZdigitsX.Zdiv2_two_power_nat	40
Coq.ZArith.ZdigitsX.Z_to_two_compl_Sn_z	40	0	search with cache (only 1: auto).	0.0133950710297	1
Coq.ZArith.ZdigitsX.Zeven_bit_value	40
Coq.ZArith.ZdigitsX.Zodd_bit_value	40	4.0.2.0.0.0.0.0.0.0	search with cache (only 1: destruct z; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: now destruct Hn || easy; only 1: unfold bit_value; only 1: now try destruct p).	26.7675440311	7264
Coq.ZArith.ZdigitsX.Zge_minus_two_power_nat_S	40	3.14	search with cache (only 1: fix le_div2 1; only 1: trivial).	11.8210151196	5253
Coq.ZArith.ZdigitsX.Zlt_two_power_nat_S	40	11.6	search with cache (only 1: fix le_div2 1; only 1: now simpl).	0.986880064011	1065
Coq.ZArith.ZdigitsX.binary_to_Z_to_binary	40
Coq.ZArith.ZdigitsX.two_compl_to_Z_to_two_compl	40
Coq.ZArith.ZdigitsX.Z_to_binary_to_Z	40
Coq.ZArith.ZdigitsX.Z_to_two_compl_to_Z	40
Coq.ZArith.ZnatX.nat_N_Z	40	0	search with cache (only 1: now destruct n).	0.0125348567963	1
Coq.ZArith.ZnatX.N_nat_Z	40	0.0.0.0.1.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.157481908798	25
Coq.ZArith.ZnatX.positive_nat_Z	40	1.2.0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0616888999939	10
Coq.ZArith.ZnatX.positive_N_Z	40	0	search with cache (only 1: reflexivity).	0.0123047828674	1
Coq.ZArith.ZnatX.positive_N_nat	40	0	search with cache (only 1: reflexivity).	0.00911116600037	1
Coq.ZArith.ZnatX.positive_nat_N	40	2.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0581030845642	13
Coq.ZArith.ZnatX.Z_N_nat	40	0	search with cache (only 1: now destruct n).	0.011687040329	1
Coq.ZArith.ZnatX.Z_nat_N	40	2.0.0.0.2.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: apply Znat.positive_nat_N; only 1: simpl; only 1: now try rewrite H).	0.0717949867249	30
Coq.ZArith.ZnatX.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0150809288025	1
Coq.ZArith.ZnatX.Zabs_nat_N	40	0.0.0.0.3.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: apply Znat.positive_nat_N; only 1: simpl; only 1: apply Znat.positive_nat_N).	0.0544340610504	10
Coq.ZArith.ZnatX.N2Z.id	40	0	search with cache (only 1: now destruct n).	0.0110020637512	1
Coq.ZArith.ZnatX.N2Z.inj	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.496895074844	157
Coq.ZArith.ZnatX.N2Z.inj_iff	40	0.2.4.0	search with cache (only 1: split; only 1: apply Znat.N2Z.inj; only 1: intros; only 1: now f_equal).	0.188359022141	38
Coq.ZArith.ZnatX.N2Z.is_nonneg	40	2	search with cache (only 1: now destruct n).	0.0164759159088	3
Coq.ZArith.ZnatX.N2Z.inj_0	40	0	search with cache (only 1: reflexivity).	0.0113341808319	1
Coq.ZArith.ZnatX.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0119178295135	1
Coq.ZArith.ZnatX.N2Z.inj_compare	40	0	search with cache (only 1: now destruct n, m).	0.0143508911133	1
Coq.ZArith.ZnatX.N2Z.inj_le	40	0.0	search with cache (only 1: unfold Z.le; only 1: now rewrite Znat.N2Z.inj_compare).	0.0189549922943	2
Coq.ZArith.ZnatX.N2Z.inj_lt	40	0.0	search with cache (only 1: unfold Z.lt; only 1: now rewrite Znat.N2Z.inj_compare).	0.0171179771423	2
Coq.ZArith.ZnatX.N2Z.inj_ge	40	0.0	search with cache (only 1: unfold Z.ge; only 1: now rewrite Znat.N2Z.inj_compare).	0.018520116806	2
Coq.ZArith.ZnatX.N2Z.inj_gt	40	0.0	search with cache (only 1: unfold Z.gt; only 1: now rewrite Znat.N2Z.inj_compare).	0.0156781673431	2
Coq.ZArith.ZnatX.N2Z.inj_abs_N	40	0	search with cache (only 1: now destruct z).	0.0120139122009	1
Coq.ZArith.ZnatX.N2Z.inj_add	40	0	search with cache (only 1: now destruct n, m).	0.0175180435181	1
Coq.ZArith.ZnatX.N2Z.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.0135409832001	1
Coq.ZArith.ZnatX.N2Z.inj_sub_max	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Z.pos_sub_spec, Pos.compare_sub_mask; only 1: unfold Pos.sub; only 1: now destruct (Pos.sub_mask n m)).	0.362791061401	104
Coq.ZArith.ZnatX.N2Z.inj_sub	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros H; only 1: rewrite Znat.N2Z.inj_sub_max; only 1: unfold N.le in H; only 1: rewrite N.compare_antisym, <- Znat.N2Z.inj_compare, Z.compare_sub in H; only 1: destruct (Z.of_N n - Z.of_N m); only 1: trivial; only 1: trivial; only 1: now destruct H).	0.493184804916	90
Coq.ZArith.ZnatX.N2Z.inj_succ	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0920150279999	4
Coq.ZArith.ZnatX.N2Z.inj_pred_max	40	0.0	search with cache (only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, Znat.N2Z.inj_sub_max).	0.0783739089966	2
Coq.ZArith.ZnatX.N2Z.inj_pred	40	4.0.0.1.0	search with cache (only 1: intros H; only 1: unfold Z.pred; only 1: rewrite N.pred_sub, Znat.N2Z.inj_sub; only 1: trivial; only 1: now apply N.le_succ_l in H).	0.0386199951172	10
Coq.ZArith.ZnatX.N2Z.inj_min	40	0.0.0	search with cache (only 1: unfold Z.min, N.min; only 1: rewrite Znat.N2Z.inj_compare; only 1: now case N.compare).	0.0215628147125	3
Coq.ZArith.ZnatX.N2Z.inj_max	40	2.2.0.2.2.0.0	search with cache (only 1: unfold Z.max, N.max; only 1: rewrite Znat.N2Z.inj_compare; only 1: case N.compare_spec; only 1: intros; only 1: now f_equal; only 1: trivial; only 1: trivial).	1.5968079567	575
Coq.ZArith.ZnatX.N2Z.inj_div	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct m as [| m]; only 1: now destruct n; only 1: apply Z.div_unique_pos with (Z.of_N (n mod N.pos m)); only 1: split; only 1: apply Znat.N2Z.is_nonneg; only 1: apply Znat.N2Z.inj_lt; only 1: now apply N.mod_lt; only 1: rewrite <- Znat.N2Z.inj_mul, <- Znat.N2Z.inj_add; only 1: f_equal; only 1: now apply N.div_mod).	0.0606348514557	10
Coq.ZArith.ZnatX.N2Z.inj_mod	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: intros Hm; only 1: apply Z.mod_unique_pos with (Z.of_N (n / m)); only 1: split; only 1: apply Znat.N2Z.is_nonneg; only 1: apply Znat.N2Z.inj_lt; only 1: now apply N.mod_lt; only 1: rewrite <- Znat.N2Z.inj_mul, <- Znat.N2Z.inj_add; only 1: f_equal; only 1: now apply N.div_mod).	0.0527698993683	10
Coq.ZArith.ZnatX.N2Z.inj_quot	40	0.0.0.0.0.0	search with cache (only 1: destruct m; only 1: now destruct n; only 1: rewrite Z.quot_div_nonneg, Znat.N2Z.inj_div; only 1: trivial; only 1: apply Znat.N2Z.is_nonneg; only 1: easy).	0.0338819026947	6
Coq.ZArith.ZnatX.N2Z.inj_rem	40	0.0.0.0.0.0.0	search with cache (only 1: destruct m; only 1: now destruct n; only 1: rewrite Z.rem_mod_nonneg, Znat.N2Z.inj_mod; only 1: trivial; only 1: easy; only 1: apply Znat.N2Z.is_nonneg; only 1: easy).	0.0442869663239	7
Coq.ZArith.ZnatX.N2Z.inj_div2	40	0.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0212171077728	3
Coq.ZArith.ZnatX.N2Z.inj_quot2	40	0.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0193300247192	3
Coq.ZArith.ZnatX.N2Z.inj_pow	40	1.1.0.1.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: now rewrite Z.pow_0_l; only 1: trivial; only 1: apply Pos2Z.inj_pow).	0.0283269882202	8
Coq.ZArith.ZnatX.N2Z.inj_testbit	40	0	search with cache (only 1: apply Z.testbit_of_N).	0.0133411884308	1
Coq.ZArith.ZnatX.Z2N.id	40	1.0.0.0	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	0.02920794487	5
Coq.ZArith.ZnatX.Z2N.inj	40	0.2.1	search with cache (only 1: intros; only 1: rewrite <- (Znat.Z2N.id n), <- (Znat.Z2N.id m) by trivial; only 1: now f_equal).	0.0599679946899	6
Coq.ZArith.ZnatX.Z2N.inj_iff	40	0.1.4.1	search with cache (only 1: split; only 1: now apply Znat.Z2N.inj; only 1: intros; only 1: now subst).	0.450117826462	85
Coq.ZArith.ZnatX.Z2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0106909275055	1
Coq.ZArith.ZnatX.Z2N.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0105121135712	1
Coq.ZArith.ZnatX.Z2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0112159252167	1
Coq.ZArith.ZnatX.Z2N.inj_add	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	0.580702066422	131
Coq.ZArith.ZnatX.Z2N.inj_mul	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	0.0597970485687	10
Coq.ZArith.ZnatX.Z2N.inj_succ	40	0.1.0.0	search with cache (only 1: unfold Z.succ; only 1: intros; only 1: rewrite Znat.Z2N.inj_add by easy; only 1: apply N.add_1_r).	0.0445728302002	5
Coq.ZArith.ZnatX.Z2N.inj_sub	40	1.0.0.1.0.0.0.2.0.0.1.0.0.0	search with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: trivial; only 1: trivial; only 1: now destruct 1; only 1: trivial; only 1: intros _; only 1: simpl; only 1: rewrite Z.pos_sub_spec, Pos.compare_sub_mask; only 1: unfold Pos.sub; only 1: now destruct (Pos.sub_mask n m); only 1: now destruct 1; only 1: trivial; only 1: trivial; only 1: now destruct 1).	14.7321810722	6248
Coq.ZArith.ZnatX.Z2N.inj_pred	40	0.0.1	search with cache (only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: now apply (Znat.Z2N.inj_sub n 1)).	0.0267238616943	4
Coq.ZArith.ZnatX.Z2N.inj_compare	40	1.3	search with cache (only 1: intros Hn Hm; only 1: now rewrite <- Znat.N2Z.inj_compare, !Znat.Z2N.id).	0.0206081867218	6
Coq.ZArith.ZnatX.Z2N.inj_le	40	0.3.0	search with cache (only 1: unfold Z.le, N.le; only 1: intros Hn Hm; only 1: now rewrite Znat.Z2N.inj_compare).	0.0311138629913	6
Coq.ZArith.ZnatX.Z2N.inj_lt	40	0.4.0	search with cache (only 1: unfold Z.lt, N.lt; only 1: intros Hn Hm; only 1: now rewrite Znat.Z2N.inj_compare).	0.0343630313873	7
Coq.ZArith.ZnatX.Z2N.inj_min	40
Coq.ZArith.ZnatX.Z2N.inj_max	40
Coq.ZArith.ZnatX.Z2N.inj_div	40
Coq.ZArith.ZnatX.Z2N.inj_mod	40
Coq.ZArith.ZnatX.Z2N.inj_quot	40	0.1.0.0.0	search with cache (only 1: destruct m; only 1: now destruct n; only 1: intros; only 1: now rewrite Z.quot_div_nonneg, Znat.Z2N.inj_div; only 1: now destruct 2).	0.0404589176178	6
Coq.ZArith.ZnatX.Z2N.inj_rem	40	0.1.0.0.0	search with cache (only 1: destruct m; only 1: now destruct n; only 1: intros; only 1: now rewrite Z.rem_mod_nonneg, Znat.Z2N.inj_mod; only 1: now destruct 2).	0.0387978553772	6
Coq.ZArith.ZnatX.Z2N.inj_div2	40	0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: trivial).	0.0249290466309	4
Coq.ZArith.ZnatX.Z2N.inj_quot2	40	0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0282428264618	4
Coq.ZArith.ZnatX.Z2N.inj_pow	40	0.1.0.0.0	search with cache (only 1: destruct m; only 1: trivial; only 1: intros; only 1: now rewrite <- (Znat.N2Z.id (_ ^ _)), Znat.N2Z.inj_pow, Znat.Z2N.id; only 1: now destruct 2).	0.0351312160492	6
Coq.ZArith.ZnatX.Z2N.inj_testbit	40	1	search with cache (only 1: apply Z.testbit_of_N').	0.0136690139771	2
Coq.ZArith.ZnatX.Zabs2N.abs_N_spec	40	0	search with cache (only 1: now destruct n).	0.0122401714325	1
Coq.ZArith.ZnatX.Zabs2N.abs_N_nonneg	40	1.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0546741485596	5
Coq.ZArith.ZnatX.Zabs2N.id_abs	40	1	search with cache (only 1: now destruct n).	0.0108070373535	2
Coq.ZArith.ZnatX.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.0328679084778	1
Coq.ZArith.ZnatX.Zabs2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0128061771393	1
Coq.ZArith.ZnatX.Zabs2N.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0123410224915	1
Coq.ZArith.ZnatX.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0118839740753	1
Coq.ZArith.ZnatX.Zabs2N.inj_opp	40	0	search with cache (only 1: now destruct n).	0.012403011322	1
Coq.ZArith.ZnatX.Zabs2N.inj_succ	40	1.0.1.0.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.34123015404	370
Coq.ZArith.ZnatX.Zabs2N.inj_add	40	10.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_add; only 1: now f_equal; only 1: now f_equal; only 1: now apply Z.add_nonneg_nonneg).	25.0608370304	6300
Coq.ZArith.ZnatX.Zabs2N.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.0167829990387	1
Coq.ZArith.ZnatX.Zabs2N.inj_sub	40
Coq.ZArith.ZnatX.Zabs2N.inj_pred	40	0.0.4.0.1.0	search with cache (only 1: intros; only 1: rewrite !Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_pred; only 1: Z.order; only 1: apply Z.lt_succ_r; only 1: now rewrite Z.succ_pred).	0.405976057053	153
Coq.ZArith.ZnatX.Zabs2N.inj_compare	40	2.2.0	search with cache (only 1: intros; only 1: rewrite !Znat.Zabs2N.abs_N_nonneg by trivial; only 1: now apply Znat.Z2N.inj_compare).	0.0266389846802	7
Coq.ZArith.ZnatX.Zabs2N.inj_le	40	0.1.0	search with cache (only 1: unfold Z.le, N.le; only 1: intros; only 1: now rewrite Znat.Zabs2N.inj_compare).	0.0313341617584	4
Coq.ZArith.ZnatX.Zabs2N.inj_lt	40	0.2.0	search with cache (only 1: unfold Z.lt, N.lt; only 1: intros; only 1: now rewrite Znat.Zabs2N.inj_compare).	0.0454130172729	5
Coq.ZArith.ZnatX.Zabs2N.inj_min	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_min; only 1: now f_equal; only 1: now f_equal; only 1: now apply Z.min_glb).	0.0445489883423	7
Coq.ZArith.ZnatX.Zabs2N.inj_max	40	2.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !Znat.Zabs2N.abs_N_nonneg; only 1: now apply Znat.Z2N.inj_max; only 1: now f_equal; only 1: now f_equal; only 1: transitivity n; only 1: now f_equal; only 1: apply Z.le_max_l).	0.668402910233	159
Coq.ZArith.ZnatX.Zabs2N.inj_quot	40
Coq.ZArith.ZnatX.Zabs2N.inj_rem	40
Coq.ZArith.ZnatX.Zabs2N.inj_pow	40
Coq.ZArith.ZnatX.Zabs2N.inj_succ_abs	40	1.0.1.0.3.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: Morphisms.solve_proper; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.470999956131	215
Coq.ZArith.ZnatX.Zabs2N.inj_add_abs	40	0	search with cache (only 1: now destruct n, m).	0.0182180404663	1
Coq.ZArith.ZnatX.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0180170536041	1
Coq.ZArith.ZnatX.Nat2Z.inj_0	40	0	search with cache (only 1: auto with arith).	0.0127320289612	1
Coq.ZArith.ZnatX.Nat2Z.inj_succ	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply Pos2Z.inj_succ).	0.0553069114685	4
Coq.ZArith.ZnatX.Nat2Z.is_nonneg	40	2	search with cache (only 1: now induction n).	0.0414671897888	3
Coq.ZArith.ZnatX.Nat2Z.id	40	0	search with cache (only 1: now rewrite <- Znat.nat_N_Z, <- Znat.Z_N_nat, Znat.N2Z.id, Nat2N.id).	0.0124859809875	1
Coq.ZArith.ZnatX.Nat2Z.inj	40	2.1	search with cache (only 1: intros; only 1: now rewrite <- (Znat.Nat2Z.id n), <- (Znat.Nat2Z.id m), H).	0.0305259227753	5
Coq.ZArith.ZnatX.Nat2Z.inj_iff	40	0.1.2.1.0	search with cache (only 1: split; only 1: intros; only 1: now rewrite <- (Znat.Nat2Z.id n), <- (Znat.Nat2Z.id m), H; only 1: intros; only 1: now f_equal).	0.0605571269989	9
Coq.ZArith.ZnatX.Nat2Z.inj_compare	40	0	search with cache (only 1: now rewrite <- !Znat.nat_N_Z, Znat.N2Z.inj_compare, <- Nat2N.inj_compare).	0.0127501487732	1
Coq.ZArith.ZnatX.Nat2Z.inj_le	40	0.0	search with cache (only 1: unfold Z.le; only 1: now rewrite Znat.Nat2Z.inj_compare, nat_compare_le).	0.0212249755859	2
Coq.ZArith.ZnatX.Nat2Z.inj_lt	40	0.0	search with cache (only 1: unfold Z.lt; only 1: now rewrite Znat.Nat2Z.inj_compare, nat_compare_lt).	0.0213539600372	2
Coq.ZArith.ZnatX.Nat2Z.inj_ge	40	0.0	search with cache (only 1: unfold Z.ge; only 1: now rewrite Znat.Nat2Z.inj_compare, nat_compare_ge).	0.0207409858704	2
Coq.ZArith.ZnatX.Nat2Z.inj_gt	40	0.0	search with cache (only 1: unfold Z.gt; only 1: now rewrite Znat.Nat2Z.inj_compare, nat_compare_gt).	0.0300078392029	2
Coq.ZArith.ZnatX.Nat2Z.inj_abs_nat	40	0.0.0.0.1.0.0.0.0.0.1.0.0.2.0	search with cache (only 1: destruct z; only 1: rewrite <- Znat.Zabs_N_nat, Znat.N_nat_Z; only 1: apply Znat.Zabs2N.id_abs; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	10.6899769306	4292
Coq.ZArith.ZnatX.Nat2Z.inj_add	40	0	search with cache (only 1: now rewrite <- !Znat.nat_N_Z, Nat2N.inj_add, Znat.N2Z.inj_add).	0.017256975174	1
Coq.ZArith.ZnatX.Nat2Z.inj_mul	40	0	search with cache (only 1: now rewrite <- !Znat.nat_N_Z, Nat2N.inj_mul, Znat.N2Z.inj_mul).	0.0176179409027	1
Coq.ZArith.ZnatX.Nat2Z.inj_sub_max	40	0	search with cache (only 1: now rewrite <- !Znat.nat_N_Z, Nat2N.inj_sub, Znat.N2Z.inj_sub_max).	0.0165610313416	1
Coq.ZArith.ZnatX.Nat2Z.inj_sub	40	1.0.0	search with cache (only 1: rewrite nat_compare_le, Nat2N.inj_compare; only 1: intros; only 1: now rewrite <- !Znat.nat_N_Z, Nat2N.inj_sub, Znat.N2Z.inj_sub).	0.0266740322113	4
Coq.ZArith.ZnatX.Nat2Z.inj_pred_max	40	0	search with cache (only 1: now rewrite <- !Znat.nat_N_Z, Nat2N.inj_pred, Znat.N2Z.inj_pred_max).	0.0125019550323	1
Coq.ZArith.ZnatX.Nat2Z.inj_pred	40	1.0.0	search with cache (only 1: rewrite nat_compare_lt, Nat2N.inj_compare; only 1: intros; only 1: now rewrite <- !Znat.nat_N_Z, Nat2N.inj_pred, Znat.N2Z.inj_pred).	0.0407989025116	4
Coq.ZArith.ZnatX.Nat2Z.inj_min	40	0	search with cache (only 1: now rewrite <- !Znat.nat_N_Z, Nat2N.inj_min, Znat.N2Z.inj_min).	0.0163908004761	1
Coq.ZArith.ZnatX.Nat2Z.inj_max	40	0	search with cache (only 1: now rewrite <- !Znat.nat_N_Z, Nat2N.inj_max, Znat.N2Z.inj_max).	0.0165779590607	1
Coq.ZArith.ZnatX.Z2Nat.id	40	0.1	search with cache (only 1: intros; only 1: now rewrite <- Znat.Z_N_nat, <- Znat.nat_N_Z, N2Nat.id, Znat.Z2N.id).	0.0256140232086	3
Coq.ZArith.ZnatX.Z2Nat.inj	40	0.2.1	search with cache (only 1: intros; only 1: rewrite <- (Znat.Z2Nat.id n), <- (Znat.Z2Nat.id m) by trivial; only 1: now f_equal).	0.100658178329	6
Coq.ZArith.ZnatX.Z2Nat.inj_iff	40	0.1.3.1.0	search with cache (only 1: intros; only 1: split; only 1: now apply Znat.Z2Nat.inj; only 1: intros; only 1: now subst).	0.195458889008	24
Coq.ZArith.ZnatX.Z2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0113971233368	1
Coq.ZArith.ZnatX.Z2Nat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0135698318481	1
Coq.ZArith.ZnatX.Z2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0127768516541	1
Coq.ZArith.ZnatX.Z2Nat.inj_add	40	1.0	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Z_N_nat, Znat.Z2N.inj_add, N2Nat.inj_add).	0.0220401287079	3
Coq.ZArith.ZnatX.Z2Nat.inj_mul	40	0.1	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Z_N_nat, Znat.Z2N.inj_mul, N2Nat.inj_mul).	0.0321159362793	3
Coq.ZArith.ZnatX.Z2Nat.inj_succ	40	1.0	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Z_N_nat, Znat.Z2N.inj_succ, N2Nat.inj_succ).	0.0245320796967	3
Coq.ZArith.ZnatX.Z2Nat.inj_sub	40	1.0	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Z_N_nat, Znat.Z2N.inj_sub, N2Nat.inj_sub).	0.023656129837	3
Coq.ZArith.ZnatX.Z2Nat.inj_pred	40	0	search with cache (only 1: now rewrite <- !Znat.Z_N_nat, Znat.Z2N.inj_pred, N2Nat.inj_pred).	0.0144538879395	1
Coq.ZArith.ZnatX.Z2Nat.inj_compare	40	1.0	search with cache (only 1: intros Hn Hm; only 1: now rewrite <- Znat.Nat2Z.inj_compare, !Znat.Z2Nat.id).	0.0166628360748	3
Coq.ZArith.ZnatX.Z2Nat.inj_le	40	0.2.0	search with cache (only 1: unfold Z.le; only 1: intros Hn Hm; only 1: now rewrite nat_compare_le, Znat.Z2Nat.inj_compare).	0.036257982254	5
Coq.ZArith.ZnatX.Z2Nat.inj_lt	40	0.0.1	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Znat.Z2Nat.inj_compare).	0.148720026016	27
Coq.ZArith.ZnatX.Z2Nat.inj_min	40	0	search with cache (only 1: now rewrite <- !Znat.Z_N_nat, Znat.Z2N.inj_min, N2Nat.inj_min).	0.0151648521423	1
Coq.ZArith.ZnatX.Z2Nat.inj_max	40	0	search with cache (only 1: now rewrite <- !Znat.Z_N_nat, Znat.Z2N.inj_max, N2Nat.inj_max).	0.0152630805969	1
Coq.ZArith.ZnatX.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0116379261017	1
Coq.ZArith.ZnatX.Zabs2Nat.abs_nat_nonneg	40	1.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0311009883881	5
Coq.ZArith.ZnatX.Zabs2Nat.id_abs	40	0.0	search with cache (only 1: rewrite <- Znat.Zabs_N_nat, Znat.N_nat_Z; only 1: apply Znat.Zabs2N.id_abs).	0.0164129734039	2
Coq.ZArith.ZnatX.Zabs2Nat.id	40	0	search with cache (only 1: now rewrite <- Znat.Zabs_N_nat, <- Znat.nat_N_Z, Znat.Zabs2N.id, Nat2N.id).	0.0146579742432	1
Coq.ZArith.ZnatX.Zabs2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0125811100006	1
Coq.ZArith.ZnatX.Zabs2Nat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0096709728241	1
Coq.ZArith.ZnatX.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0101161003113	1
Coq.ZArith.ZnatX.Zabs2Nat.inj_succ	40	0.1	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Zabs_N_nat, Znat.Zabs2N.inj_succ, N2Nat.inj_succ).	0.0303001403809	3
Coq.ZArith.ZnatX.Zabs2Nat.inj_add	40	1.0	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Zabs_N_nat, Znat.Zabs2N.inj_add, N2Nat.inj_add).	0.0222249031067	3
Coq.ZArith.ZnatX.Zabs2Nat.inj_mul	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	22.2583339214	9904
Coq.ZArith.ZnatX.Zabs2Nat.inj_sub	40	1.0	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Zabs_N_nat, Znat.Zabs2N.inj_sub, N2Nat.inj_sub).	0.0224602222443	3
Coq.ZArith.ZnatX.Zabs2Nat.inj_pred	40	1.0	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Zabs_N_nat, Znat.Zabs2N.inj_pred, N2Nat.inj_pred).	0.0534920692444	3
Coq.ZArith.ZnatX.Zabs2Nat.inj_compare	40	0.1	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Zabs_N_nat, <- N2Nat.inj_compare, Znat.Zabs2N.inj_compare).	0.0529899597168	3
Coq.ZArith.ZnatX.Zabs2Nat.inj_le	40	0.4.0	search with cache (only 1: unfold Z.le; only 1: intros; only 1: now rewrite nat_compare_le, Znat.Zabs2Nat.inj_compare).	0.0339789390564	7
Coq.ZArith.ZnatX.Zabs2Nat.inj_lt	40	0.6.0	search with cache (only 1: unfold Z.lt; only 1: intros; only 1: now rewrite nat_compare_lt, Znat.Zabs2Nat.inj_compare).	0.0632121562958	9
Coq.ZArith.ZnatX.Zabs2Nat.inj_min	40	1.0	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Zabs_N_nat, Znat.Zabs2N.inj_min, N2Nat.inj_min).	0.0242109298706	3
Coq.ZArith.ZnatX.Zabs2Nat.inj_max	40	1.0	search with cache (only 1: intros; only 1: now rewrite <- !Znat.Zabs_N_nat, Znat.Zabs2N.inj_max, N2Nat.inj_max).	0.0219509601593	3
Coq.ZArith.ZnatX.Zabs2Nat.inj_succ_abs	40	0	search with cache (only 1: now rewrite <- !Znat.Zabs_N_nat, Znat.Zabs2N.inj_succ_abs, N2Nat.inj_succ).	0.0154490470886	1
Coq.ZArith.ZnatX.Zabs2Nat.inj_add_abs	40	0	search with cache (only 1: now rewrite <- !Znat.Zabs_N_nat, Znat.Zabs2N.inj_add_abs, N2Nat.inj_add).	0.0153779983521	1
Coq.ZArith.ZnatX.Zabs2Nat.inj_mul_abs	40	0	search with cache (only 1: now rewrite <- !Znat.Zabs_N_nat, Znat.Zabs2N.inj_mul_abs, N2Nat.inj_mul).	0.014585018158	1
Coq.ZArith.ZnatX.inj_neq	40	0.0.11.1.1.2.3.2.3	search with cache (only 1: Nat.double_induct n m; only 1: intros H; only 1: now elim H; only 1: intro n; only 1: simpl; only 1: discriminate; only 1: intros z Base Step; only 1: intros H H'; only 1: now apply H, Znat.Nat2Z.inj).	10.7843968868	7035
Coq.ZArith.ZnatX.inj_minus2	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite not_le_minus_0; only 1: auto with arith; only 1: auto with arith).	0.0400419235229	4
Coq.ZArith.ZabsX.Zabs_ind	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Z.abs_case_strong; only 1: Z.swap_greater; only 1: intros x y Hx; only 1: now subst; only 1: Z.swap_greater; only 1: now subst; only 1: Z.swap_greater; only 1: now subst).	0.0954990386963	9
Coq.ZArith.ZabsX.Zabs_intro	40	7.0	search with cache (only 1: intros; only 1: now destruct n).	0.0239388942719	9
Coq.ZArith.ZabsX.Zabs_dec	40	0.0.0.0	search with cache (only 1: destruct x; only 1: auto; only 1: auto; only 1: auto).	0.0362200737	4
Coq.ZArith.ZabsX.Zabs_spec	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.abs_spec).	0.0323770046234	2
Coq.ZArith.ZabsX.Zsgn_spec	40	1.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.sgn_spec).	0.0362730026245	4
Coq.ZArith.ZabsX.Zabs_nat_le	40	0.16.0.2.0	search with cache (only 1: intros (H, H'); only 1: apply Zabs2Nat.inj_le; only 1: now f_equal; only 1: Z.order; only 1: now f_equal).	6.19359302521	2653
Coq.ZArith.ZabsX.Zabs_nat_lt	40	11.11.11.3.0	search with cache (only 1: intros (H, H'); only 1: apply Zabs2Nat.inj_lt; only 1: Z.order; only 1: Z.order; only 1: Z.order).	17.653881073	10005
Coq.ZArith.ZwfX.Zwf_well_founded	40
Coq.ZArith.ZwfX.Zwf_up_well_founded	40
Coq.ZArith.ZevenX.Zeven_equiv	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: rewrite <- Z.even_spec; only 1: destruct z as [| p| p]; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	17.6433641911	4600
Coq.ZArith.ZevenX.Zodd_equiv	40
Coq.ZArith.ZevenX.Zeven_bool_iff	40	3	search with cache (only 1: now rewrite Z.even_spec, Zeven.Zeven_equiv).	0.0187320709229	4
Coq.ZArith.ZevenX.Zodd_bool_iff	40	3	search with cache (only 1: now rewrite Z.odd_spec, Zeven.Zodd_equiv).	0.0358788967133	13
Coq.ZArith.ZevenX.Zodd_even_bool	40	0.2	search with cache (only 1: symmetry; only 1: apply Z.negb_even).	0.0207221508026	4
Coq.ZArith.ZevenX.Zeven_odd_bool	40	2.4	search with cache (only 1: symmetry; only 1: apply Z.negb_odd).	0.0144910812378	8
Coq.ZArith.ZevenX.Zeven_odd_dec	40	0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.5.0	search with cache (only 1: destruct n as [| p| p]; only 1: left; only 1: now Z.nzsimpl; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	2.19779801369	2262
Coq.ZArith.ZevenX.Zeven_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	6.83602809906	4619
Coq.ZArith.ZevenX.Zodd_dec	40	0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.1	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	17.95855093	6858
Coq.ZArith.ZevenX.Zeven_not_Zodd	40
Coq.ZArith.ZevenX.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0452439785004	5
Coq.ZArith.ZevenX.Zeven_Sn	40	0.0	search with cache (only 1: boolify_even_odd; only 1: now rewrite Z.even_succ).	0.0244832038879	2
Coq.ZArith.ZevenX.Zodd_Sn	40	0.0	search with cache (only 1: boolify_even_odd; only 1: now rewrite Z.odd_succ).	0.0249650478363	2
Coq.ZArith.ZevenX.Zeven_pred	40
Coq.ZArith.ZevenX.Zodd_pred	40	0.0	search with cache (only 1: boolify_even_odd; only 1: now rewrite Z.odd_pred).	0.025267124176	2
Coq.ZArith.ZevenX.Zeven_div2	40	6.1	search with cache (only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.862997055054	89
Coq.ZArith.ZevenX.Zodd_div2	40	0.0.1.5	search with cache (only 1: Zeven.boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zeven.Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	2.13019704819	237
Coq.ZArith.ZevenX.Zquot2_odd_eqn	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0813190937042	1
Coq.ZArith.ZevenX.Zeven_quot2	40	0.0.0.1	search with cache (only 1: intros Hn; only 1: apply Zeven.Zeven_bool_iff in Hn; only 1: rewrite (Zeven.Zquot2_odd_eqn n)  at 1; only 1: now rewrite Zeven.Zodd_even_bool, Hn, Z.add_0_r).	0.0431740283966	5
Coq.ZArith.ZevenX.Zodd_quot2	40	2.1.1.0	search with cache (only 1: intros Hn Hn'; only 1: rewrite (Zeven.Zquot2_odd_eqn n)  at 1; only 1: f_equal; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0901899337769	17
Coq.ZArith.ZevenX.Zodd_quot2_neg	40	5.0.1.0	search with cache (only 1: intros Hn Hn'; only 1: rewrite (Zeven.Zquot2_odd_eqn n)  at 1; only 1: unfold Z.sub; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.137875080109	26
Coq.ZArith.ZevenX.Zquot2_opp	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0152850151062	1
Coq.ZArith.ZevenX.Zquot2_quot	40
Coq.ZArith.ZevenX.Z_modulo_2	40	5.0.1.4.0.0.2	search with cache (only 1: destruct (Zeven.Zeven_odd_dec n) as [Hn| Hn]; only 1: left; only 1: exists (Z.div2 n); only 1: exact (Zeven.Zeven_div2 n Hn); only 1: right; only 1: exists (Z.div2 n); only 1: exact (Zeven.Zodd_div2 n Hn)).	36.3706002235	6773
Coq.ZArith.ZevenX.Zsplit2	40	0.0.0.0.0.2.3.0.0.0.1	search with cache (only 1: destruct (Zeven.Z_modulo_2 n) as [(y, Hy)| (y, Hy)]; only 1: rewrite <- Z.add_diag in Hy; only 1: exists (y, y); only 1: split; only 1: assumption; only 1: now left; only 1: rewrite <- Z.add_diag in Hy; only 1: exists (y, y + 1); only 1: split; only 1: now rewrite Z.add_assoc; only 1: now right).	4.38531184196	1063
Coq.ZArith.ZevenX.Zeven_ex	40	0.0.3	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.256969928741	31
Coq.ZArith.ZevenX.Zodd_ex	40	8.4.0	search with cache (only 1: exists (Z.div2 n); only 1: apply Zeven.Zodd_div2; only 1: now Z.swap_greater).	10.6545209885	1148
Coq.ZArith.ZevenX.Zeven_2p	40	7	search with cache (only 1: now destruct p).	0.0216031074524	12
Coq.ZArith.ZevenX.Zodd_2p_plus_1	40	0.0.2.7	search with cache (only 1: destruct p as [| p| p]; only 1: now try destruct p; only 1: now try destruct p; only 1: now try destruct p).	0.133358955383	116
Coq.ZArith.ZevenX.Zeven_plus_Zodd	40	1.0.0.11	search with cache (only 1: Zeven.boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.435736894608	106
Coq.ZArith.ZevenX.Zeven_plus_Zeven	40	1.0.0	search with cache (only 1: boolify_even_odd; only 1: intros Ha Hb; only 1: now rewrite Z.even_add, Ha, Hb).	0.0439538955688	4
Coq.ZArith.ZevenX.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- 2!Z.negb_even, 2!Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.even_add, Ha, Hb).	0.0535600185394	5
Coq.ZArith.ZevenX.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- 2!Z.negb_even, 2!Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.even_add, Ha, Hb).	0.0551450252533	5
Coq.ZArith.ZevenX.Zeven_mult_Zeven_l	40
Coq.ZArith.ZevenX.Zeven_mult_Zeven_r	40
Coq.ZArith.ZevenX.Zodd_mult_Zodd	40	0.1.36	search with cache (only 1: boolify_even_odd; only 1: intros Ha Hb; only 1: now rewrite Z.odd_mul, Ha, Hb).	7.34797286987	2824
Coq.ZArith.IntX.MoreInt.eqb_eq	40
Coq.ZArith.IntX.MoreInt.eqb_neq	40
Coq.ZArith.IntX.MoreInt.ltb_lt	40
Coq.ZArith.IntX.MoreInt.ltb_nlt	40
Coq.ZArith.IntX.MoreInt.leb_le	40
Coq.ZArith.IntX.MoreInt.leb_nle	40
Coq.ZArith.IntX.MoreInt.norm_ei_correct	40
Coq.ZArith.IntX.MoreInt.norm_ez_correct	40
Coq.ZArith.IntX.MoreInt.norm_ep_correct	40
Coq.ZArith.IntX.MoreInt.norm_ep_correct2	40
Coq.ZArith.IntX.Z_as_Int.gt_le_dec	40
Coq.ZArith.IntX.Z_as_Int.ge_lt_dec	40
Coq.ZArith.IntX.Z_as_Int.i2z_eq	40	0	search with cache (only 1: now Z.nzsimpl).	0.0654270648956	1
Coq.ZArith.IntX.Z_as_Int.i2z_0	40	8	search with cache (only 1: now f_equal).	0.0245850086212	9
Coq.ZArith.IntX.Z_as_Int.i2z_1	40	0	search with cache (only 1: trivial).	0.0196831226349	1
Coq.ZArith.IntX.Z_as_Int.i2z_2	40	4	search with cache (only 1: easy).	0.0238749980927	5
Coq.ZArith.IntX.Z_as_Int.i2z_3	40	0	search with cache (only 1: auto with zarith).	0.0182709693909	1
Coq.ZArith.IntX.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.0226519107819	1
Coq.ZArith.IntX.Z_as_Int.i2z_opp	40	10	search with cache (only 1: auto with relations).	0.0523121356964	21
Coq.ZArith.IntX.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.0209720134735	1
Coq.ZArith.IntX.Z_as_Int.i2z_mul	40	0	search with cache (only 1: trivial).	0.0305860042572	1
Coq.ZArith.IntX.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0207710266113	1
Coq.ZArith.IntX.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.0239088535309	1
Coq.ZArith.IntX.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0225448608398	1
Coq.ZArith.IntX.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0226662158966	1
Coq.ZArith.ZpowerX.Zpower_nat_0_r	40	0	search with cache (only 1: now Z.nzsimpl).	0.0220329761505	1
Coq.ZArith.ZpowerX.Zpower_nat_succ_r	40	3	search with cache (only 1: trivial).	0.0135610103607	4
Coq.ZArith.ZpowerX.Zpower_nat_is_exp	40
Coq.ZArith.ZpowerX.Zpower_pos_nat	40
Coq.ZArith.ZpowerX.Zpower_nat_Z	40
Coq.ZArith.ZpowerX.Zpower_nat_Zpower	40	6.4.7.17.2	search with cache (only 1: induction n; only 1: split; only 1: intros Hn; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1 || trivial).	4.47235894203	4895
Coq.ZArith.ZpowerX.Zpower_pos_is_exp	40
Coq.ZArith.ZpowerX.Zpower_exp	40
Coq.ZArith.ZpowerX.shift_nat_equiv	40	0	search with cache (only 1: now f_equal).	0.012934923172	1
Coq.ZArith.ZpowerX.shift_pos_equiv	40	0	search with cache (only 1: now subst).	0.011803150177	1
Coq.ZArith.ZpowerX.shift_equiv	40
Coq.ZArith.ZpowerX.two_power_nat_equiv	40
Coq.ZArith.ZpowerX.two_power_pos_equiv	40	2.101	search with cache (only 1: Z.nzsimpl'; only 1: now apply Pos.iter_swap_gen).	3.52370500565	5628
Coq.ZArith.ZpowerX.two_p_equiv	40
Coq.ZArith.ZpowerX.two_power_nat_S	40	4.1.1	search with cache (only 1: induction n; only 1: trivial; only 1: now Morphisms.f_equiv).	0.0304269790649	9
Coq.ZArith.ZpowerX.shift_nat_plus	40	0.13.4.2.2	search with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: simpl; only 1: rewrite <- IHn; only 1: tauto).	16.6128380299	3274
Coq.ZArith.ZpowerX.shift_nat_correct	40
Coq.ZArith.ZpowerX.two_power_nat_correct	40
Coq.ZArith.ZpowerX.shift_pos_nat	40
Coq.ZArith.ZpowerX.two_power_pos_nat	40
Coq.ZArith.ZpowerX.shift_pos_correct	40
Coq.ZArith.ZpowerX.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0124640464783	2
Coq.ZArith.ZpowerX.two_power_pos_is_exp	40
Coq.ZArith.ZpowerX.two_p_is_exp	40
Coq.ZArith.ZpowerX.two_p_gt_ZERO	40	0.1.1.26.1	search with cache (only 1: Z.swap_greater; only 1: destruct x; only 1: Morphisms.solve_proper; only 1: split; only 1: easy).	3.28385806084	2831
Coq.ZArith.ZpowerX.two_p_S	40
Coq.ZArith.ZpowerX.two_p_pred	40
Coq.ZArith.ZpowerX.Zdiv_rest_correct1	40
Coq.ZArith.ZpowerX.Zdiv_rest_correct2	40
Coq.ZArith.ZpowerX.Zdiv_rest_correct	40
Coq.ZArith.ZpowerX.Zdiv_rest_ok	40
Coq.ZArith.ZpowerX.Zdiv_rest_shiftr	40
Coq.ZArith.ZcompareX.Zcompare_Gt_trans	40	5.0.0.0	search with cache (only 1: intros n m p; only 1: change (n > m -> m > p -> n > p); only 1: Z.swap_greater; only 1: now transitivity m).	0.112945795059	9
Coq.ZArith.ZcompareX.Zcompare_opp	40	1.2	search with cache (only 1: symmetry; only 1: apply Z.compare_opp).	0.562114953995	168
Coq.ZArith.ZcompareX.Zcompare_Gt_spec	40	0.0.0.0.0.0	search with cache (only 1: rewrite Z.compare_sub; only 1: unfold Z.sub; only 1: destruct (n + - m) as [| p| p]; only 1: discriminate; only 1: now exists p; only 1: discriminate).	0.0653839111328	6
Coq.ZArith.ZcompareX.Zcompare_plus_compat	40	1	search with cache (only 1: apply Z.add_compare_mono_l).	0.0148141384125	2
Coq.ZArith.ZcompareX.Zplus_compare_compat	40
Coq.ZArith.ZcompareX.Zcompare_succ_Gt	40	3.2.1.0	search with cache (only 1: apply Z.lt_gt; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.0932710170746	11
Coq.ZArith.ZcompareX.Zcompare_Gt_not_Lt	40	0.1.0.0	search with cache (only 1: change (n > m <-> n >= m + 1); only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.le_succ_l).	0.0374639034271	5
Coq.ZArith.ZcompareX.Zcompare_succ_compat	40	0.0	search with cache (only 1: rewrite <- 2!Z.add_1_l; only 1: apply Z.add_compare_mono_l).	0.019770860672	2
Coq.ZArith.ZcompareX.Zcompare_mult_compat	40
Coq.ZArith.ZcompareX.Zmult_compare_compat_l	40	0.1.0.0.3.0	search with cache (only 1: intros; only 1: destruct p; only 1: discriminate; only 1: symmetry; only 1: apply Zcompare.Zcompare_mult_compat; only 1: discriminate).	0.0741889476776	13
Coq.ZArith.ZcompareX.Zmult_compare_compat_r	40	2.1.0	search with cache (only 1: intros; only 1: rewrite 2!(Z.mul_comm _ p); only 1: now apply Zcompare.Zmult_compare_compat_l).	0.0294051170349	6
Coq.ZArith.ZcompareX.Zcompare_elim	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: now Z.swap_greater; only 1: now Z.swap_greater; only 1: now Z.swap_greater).	0.0481641292572	5
Coq.ZArith.ZcompareX.Zcompare_eq_case	40	1.0.0	search with cache (only 1: intros; only 1: subst; only 1: now rewrite Z.compare_refl).	0.0277619361877	4
Coq.ZArith.ZcompareX.Zle_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).	0.0419960021973	5
Coq.ZArith.ZcompareX.Zlt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0235350131989	2
Coq.ZArith.ZcompareX.Zge_compare	40	0.0	search with cache (only 1: intros; only 1: now case Z.compare_spec).	0.0174350738525	2
Coq.ZArith.ZcompareX.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0234220027924	2
Coq.ZArith.ZboolX.Zle_cases	40	0.1.0	search with cache (only 1: case Z.leb_spec; only 1: now f_equal; only 1: now Z.swap_greater).	0.0389552116394	4
Coq.ZArith.ZboolX.Zlt_cases	40	0.1.0	search with cache (only 1: case Z.ltb_spec; only 1: tauto; only 1: now Z.swap_greater).	0.03276014328	4
Coq.ZArith.ZboolX.Zge_cases	40	1.0.0.0	search with cache (only 1: rewrite Z.geb_leb; only 1: case Z.leb_spec; only 1: now Z.swap_greater; only 1: tauto).	0.0375988483429	5
Coq.ZArith.ZboolX.Zgt_cases	40	1.0.0.0	search with cache (only 1: rewrite Z.gtb_ltb; only 1: case Z.ltb_spec; only 1: now Z.swap_greater; only 1: now f_equal).	0.0361399650574	5
Coq.ZArith.ZboolX.Zle_bool_imp_le	40	2	search with cache (only 1: apply Z.leb_le).	0.03875207901	12
Coq.ZArith.ZboolX.Zle_imp_le_bool	40	2	search with cache (only 1: apply Z.leb_le).	0.0348188877106	12
Coq.ZArith.ZboolX.Zle_bool_antisym	40	9.0	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.Private_Tac.order).	0.927680969238	70
Coq.ZArith.ZboolX.Zle_bool_trans	40	13.0	search with cache (only 1: rewrite !Z.leb_le; only 1: eauto using Z.le_trans).	1.3690559864	474
Coq.ZArith.ZboolX.Zle_bool_total	40	0.0.0.9.0.3	search with cache (only 1: case_eq (x <=? y); only 1: left; only 1: trivial; only 1: right; only 1: apply Z.leb_gt in H; only 1: now apply Z.leb_le, Z.lt_le_incl).	2.21990609169	1118
Coq.ZArith.ZboolX.Zle_bool_plus_mono	40	4.0	search with cache (only 1: rewrite !Z.leb_le; only 1: apply Z.add_le_mono).	0.041806936264	6
Coq.ZArith.ZboolX.Zone_pos	40	0	search with cache (only 1: reflexivity).	0.0154490470886	1
Coq.ZArith.ZboolX.Zone_min_pos	40	1.0	search with cache (only 1: rewrite Z.leb_le, Z.leb_gt; only 1: apply Z.le_succ_l).	0.0322091579437	3
Coq.ZArith.ZboolX.Zle_is_le_bool	40	2.3	search with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.0745341777802	22
Coq.ZArith.ZboolX.Zge_is_le_bool	40	2.3.0	search with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.07093501091	20
Coq.ZArith.ZboolX.Zlt_is_lt_bool	40	1.3	search with cache (only 1: symmetry; only 1: apply Z.ltb_lt).	0.0641000270844	21
Coq.ZArith.ZboolX.Zgt_is_gt_bool	40	1.3.1.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: apply Z.ltb_lt).	0.0663819313049	17
Coq.ZArith.ZboolX.Zlt_is_le_bool	40	0.0	search with cache (only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.0272350311279	2
Coq.ZArith.ZboolX.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.039391040802	3
Coq.ZArith.ZboolX.Zeq_is_eq_bool	40
Coq.ZArith.ZboolX.Zeq_bool_eq	40	1.0.2.0.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now split; only 1: easy'; only 1: easy').	0.137740850449	16
Coq.ZArith.ZboolX.Zeq_bool_neq	40	1.0.0.0.0.1	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.136724948883	8
Coq.ZArith.ZboolX.Zeq_bool_if	40	1.1.4.5	search with cache (only 1: generalize (Zbool.Zeq_bool_eq x y), (Zbool.Zeq_bool_neq x y); only 1: destruct Zeq_bool; only 1: auto; only 1: auto).	25.2710158825	347
Coq.ZArith.ZmiscX.iter_nat_of_Z	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n A f x; only 1: case n; only 1: auto; only 1: intros p _; only 1: unfold Z.iter, Z.abs_nat; only 1: apply Pos2Nat.inj_iter; only 1: intros p abs; only 1: case abs; only 1: trivial).	0.0713849067688	9
Coq.ZArith.Zgcd_altX.Zgcdn_pos	40
Coq.ZArith.Zgcd_altX.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_altX.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_altX.fibonacci_pos	40
Coq.ZArith.Zgcd_altX.fibonacci_incr	40
Coq.ZArith.Zgcd_altX.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_altX.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_altX.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_altX.Zgcd_bound_opp	40	1.2.0.135	search with cache (only 1: destruct a; only 1: trivial; only 1: intuition; only 1: trivial).	37.5890049934	69180
Coq.ZArith.Zgcd_altX.Zgcdn_opp	40
Coq.ZArith.Zgcd_altX.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_altX.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_altX.Zgcd_is_gcd	40
Coq.ZArith.ZcomplementsX.floor_gt0	40	1	search with cache (only 1: easy).	0.0145411491394	2
Coq.ZArith.ZcomplementsX.floor_ok	40
Coq.ZArith.ZcomplementsX.Z_lt_abs_rec	40
Coq.ZArith.ZcomplementsX.Z_lt_abs_induction	40
Coq.ZArith.ZcomplementsX.Zcase_sign	40	0.1.0.1.1.0.0.0	search with cache (only 1: intros x P Hzero Hpos Hneg; only 1: destruct x; only 1: apply Hzero; only 1: easy; only 1: apply Hpos; only 1: easy; only 1: apply Hneg; only 1: easy).	0.322494983673	104
Coq.ZArith.ZcomplementsX.sqr_pos	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_nonneg).	0.106985092163	11
Coq.ZArith.ZcomplementsX.Zlength_correct	40
Coq.ZArith.ZcomplementsX.Zlength_nil	40	0	search with cache (only 1: reflexivity).	0.0136830806732	1
Coq.ZArith.ZcomplementsX.Zlength_cons	40	1	search with cache (only 1: now rewrite !Zcomplements.Zlength_correct, <- Nat2Z.inj_succ).	0.0167660713196	2
Coq.ZArith.ZcomplementsX.Zlength_nil_inv	40	0.0.0.2	search with cache (only 1: rewrite Zcomplements.Zlength_correct; only 1: destruct l as [| x l]; only 1: auto; only 1: now rewrite <- Nat2Z.inj_0, Nat2Z.inj_iff).	0.133507013321	51
Coq.omega.OmegaLemmasX.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0454058647156	1
Coq.omega.OmegaLemmasX.Zred_factor1	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0730519294739	12
Coq.omega.OmegaLemmasX.Zred_factor2	40
Coq.omega.OmegaLemmasX.Zred_factor3	40
Coq.omega.OmegaLemmasX.Zred_factor4	40
Coq.omega.OmegaLemmasX.Zred_factor5	40	1	search with cache (only 1: now Z.nzsimpl).	0.0472211837769	2
Coq.omega.OmegaLemmasX.Zred_factor6	40	0	search with cache (only 1: now Z.nzsimpl).	0.0590009689331	1
Coq.omega.OmegaLemmasX.new_var	40	33	search with cache (only 1: eauto using Z.Private_Tac.eq_trans, Z.Private_Tac.eq_sym).	1.38208007812	1430
Coq.omega.OmegaLemmasX.OMEGA1	40	0	search with cache (only 1: Z.order).	0.0179698467255	1
Coq.omega.OmegaLemmasX.OMEGA2	40
Coq.omega.OmegaLemmasX.OMEGA3	40
Coq.omega.OmegaLemmasX.OMEGA4	40
Coq.omega.OmegaLemmasX.OMEGA5	40	4.7.1	search with cache (only 1: intros Hx Hxy; only 1: subst; only 1: trivial).	0.425980806351	136
Coq.omega.OmegaLemmasX.OMEGA6	40	1.21.6.2	search with cache (only 1: intros Hx Hxy; only 1: subst; only 1: simpl; only 1: Z.order_pos).	4.22166395187	1296
Coq.omega.OmegaLemmasX.OMEGA7	40
Coq.omega.OmegaLemmasX.OMEGA8	40
Coq.omega.OmegaLemmasX.OMEGA9	40
Coq.omega.OmegaLemmasX.OMEGA10	40
Coq.omega.OmegaLemmasX.OMEGA11	40	2.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0268471240997	6
Coq.omega.OmegaLemmasX.OMEGA12	40
Coq.omega.OmegaLemmasX.OMEGA13	40
Coq.omega.OmegaLemmasX.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.124521970749	13
Coq.omega.OmegaLemmasX.OMEGA15	40	2.2.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0447039604187	9
Coq.omega.OmegaLemmasX.OMEGA16	40
Coq.omega.OmegaLemmasX.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0678379535675	2
Coq.omega.OmegaLemmasX.OMEGA18	40	16.8.0.7	search with cache (only 1: intro; only 1: unfold Zne, not; only 1: intro; only 1: now intros ->).	5.69876122475	3635
Coq.omega.OmegaLemmasX.OMEGA19	40
Coq.omega.OmegaLemmasX.OMEGA20	40	0.0.1.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.102828025818	5
Coq.omega.OmegaLemmasX.intro_Z	40
Coq.omega.PreOmegaX.Z.mod_0_r_ext	40	0.0.3.0.0.1	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.12266087532	10
Coq.omega.PreOmegaX.Z.div_0_r_ext	40	0.0.5.0.0.1	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.415090084076	143
Coq.omega.PreOmegaX.Z.rem_0_r_ext	40	0.0.2.0.0.1	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.108633041382	9
Coq.omega.PreOmegaX.Z.quot_0_r_ext	40	0.0.3.0.0.1	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.115715026855	10
Coq.omega.PreOmegaX.Z.rem_bound_pos_pos	40	6.6.2.3	search with cache (only 1: intros; only 1: apply Z.rem_bound_pos; only 1: assumption; only 1: assumption).	5.20581889153	2782
Coq.omega.PreOmegaX.Z.rem_bound_neg_pos	40	6.4.6.0.1.0	search with cache (only 1: rewrite <- Z.rem_opp_r'; only 1: intros; only 1: apply Z.rem_bound_pos; only 1: assumption; only 1: rewrite ?Z.opp_pos_neg; only 1: assumption).	8.98470807076	3949
Coq.omega.PreOmegaX.Z.rem_bound_pos_neg	40	0.1	search with cache (only 1: rewrite <- (Z.opp_involutive x), Z.rem_opp_l', <- Z.opp_lt_mono, and_comm, !Z.opp_nonpos_nonneg; only 1: apply PreOmega.Z.rem_bound_pos_pos).	0.621622085571	54
Coq.omega.PreOmegaX.Z.rem_bound_neg_neg	40	0.4	search with cache (only 1: rewrite <- (Z.opp_involutive x), <- (Z.opp_involutive y), Z.rem_opp_l', <- Z.opp_lt_mono, and_comm, !Z.opp_nonpos_nonneg, Z.opp_involutive; only 1: apply PreOmega.Z.rem_bound_neg_pos).	0.433364868164	60
Coq.Program.CombinatorsX.compose_id_left	40	6.0	search with cache (only 1: intro y; only 1: firstorder).	0.0140039920807	8
Coq.Program.CombinatorsX.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0136270523071	2
Coq.Program.CombinatorsX.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0163130760193	2
Coq.Program.CombinatorsX.flip_flip	40	1.2	search with cache (only 1: intros a b; only 1: Morphisms.solve_proper).	0.0159111022949	5
Coq.Program.CombinatorsX.prod_uncurry_curry	40	4.0	search with cache (only 1: intros; only 1: now simpl).	0.0374000072479	6
Coq.Program.CombinatorsX.prod_curry_uncurry	40
Coq.Program.EqualityX.JMeq_eq_refl	40	0	search with cache (only 1: apply UIP).	0.0167291164398	1
Coq.Program.EqualityX.UIP_refl_refl	40	0	search with cache (only 1: apply UIP_refl).	0.0136380195618	1
Coq.Program.EqualityX.inj_pairT2_refl	40	0	search with cache (only 1: apply UIP_refl).	0.012964963913	1
Coq.Program.EqualityX.solution_left	40	1.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0202548503876	4
Coq.Program.EqualityX.solution_right	40	1.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0370118618011	4
Coq.Program.EqualityX.deletion	40	2.1	search with cache (only 1: intros; only 1: assumption).	0.0153429508209	5
Coq.Program.EqualityX.simplification_heq	40	1.0.2	search with cache (only 1: intros H J; only 1: apply H; only 1: apply (JMeq_eq J)).	0.0223100185394	6
Coq.Program.EqualityX.simplification_existT2	40	0.1.0.2	search with cache (only 1: intros H E; only 1: apply H; only 1: apply inj_pairT2; only 1: assumption).	0.0237579345703	7
Coq.Program.EqualityX.simplification_existT1	40	1.0	search with cache (only 1: injection 2; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0275280475616	3
Coq.Program.EqualityX.simplification_K	40	2.0.0	search with cache (only 1: intros; only 1: rewrite (UIP_refl A); only 1: assumption).	0.0231139659882	5
Coq.Program.SubsetX.subset_eq	40
Coq.Program.SubsetX.match_eq_rewrite	40
Coq.Program.WfX.Fix_F_eq	40	0.3.18	search with cache (only 1: symmetry; only 1: destruct r using Acc_inv_dep; only 1: reflexivity).	0.439941167831	740
Coq.Program.WfX.Fix_F_inv	40	0.13.7.4.6.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: simpl; only 1: intro H'; only 1: destruct H'; only 1: simpl; only 1: auto).	4.38372302055	8417
Coq.Program.WfX.Fix_eq	40
Coq.Program.WfX.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0300230979919	6
Coq.Program.WfX.measure_wf	40
Coq.Program.WfX.F_unfold	40	0.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0299870967865	2
Coq.Program.WfX.Fix_F_sub_rect	40
Coq.Program.WfX.eq_Fix_F_sub	40	2.3.4.2	search with cache (only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: rewrite F_unfold; only 1: auto).	0.516457796097	242
Coq.Program.WfX.Fix_sub_rect	40
Coq.Program.WfX.WfExtensionality.fix_sub_eq_ext	40
Coq.Sorting.PermutEqX.multiplicity_In	40
Coq.Sorting.PermutEqX.multiplicity_In_O	40	5.2.1.5.1.0.1.7	search with cache (only 1: induction l as [| x l]; only 1: simpl; only 1: reflexivity; only 1: intro H; only 1: simpl in *; only 1: destruct eq_dec as [->| Hneq]; only 1: auto with *; only 1: eauto with typeclass_instances).	24.524200201	11757
Coq.Sorting.PermutEqX.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0624179840088	5
Coq.Sorting.PermutEqX.multiplicity_NoDup	40
Coq.Sorting.PermutEqX.NoDup_permut	40
Coq.Sorting.PermutEqX.permut_In_In	40	2.7.5.1.4.4.5	search with cache (only 1: intro y; only 1: intros l a; only 1: rewrite multiplicity_In; only 1: intro H; only 1: rewrite multiplicity_In; only 1: generalize (H a); only 1: lia).	39.0253500938	27623
Coq.Sorting.PermutEqX.permut_cons_In	40
Coq.Sorting.PermutEqX.permut_nil	40
Coq.Sorting.PermutEqX.permutation_Permutation	40
Coq.Sorting.PermutEqX.permut_length_1	40
Coq.Sorting.PermutEqX.permut_length_2	40
Coq.Sorting.PermutEqX.permut_length	40
Coq.Sorting.PermutEqX.permutation_map	40
Coq.Sorting.PermutSetoidX.list_contents_app	40
Coq.Sorting.PermutSetoidX.permut_refl	40	13.1	search with cache (only 1: intros; only 1: split).	0.241248130798	240
Coq.Sorting.PermutSetoidX.permut_sym	40	0.1.0	search with cache (only 1: unfold permutation; only 1: intros; only 1: auto with datatypes).	0.0293719768524	4
Coq.Sorting.PermutSetoidX.permut_trans	40	1.10.0.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: trivial).	6.31873512268	3155
Coq.Sorting.PermutSetoidX.permut_cons_eq	40
Coq.Sorting.PermutSetoidX.permut_cons	40	2.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0353739261627	6
Coq.Sorting.PermutSetoidX.permut_app	40
Coq.Sorting.PermutSetoidX.permut_add_inside_eq	40
Coq.Sorting.PermutSetoidX.permut_add_inside	40
Coq.Sorting.PermutSetoidX.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoidX.permut_add_cons_inside	40
Coq.Sorting.PermutSetoidX.permut_middle	40
Coq.Sorting.PermutSetoidX.permut_sym_app	40	1.0.2.0.0	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.152591943741	8
Coq.Sorting.PermutSetoidX.permut_rev	40
Coq.Sorting.PermutSetoidX.permut_conv_inv	40
Coq.Sorting.PermutSetoidX.permut_app_inv1	40	0.0.0.4.0.4.0	search with cache (only 1: intros; only 1: unfold permutation, meq; only 1: intro a; only 1: generalize (H a); only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).	3.35250020027	934
Coq.Sorting.PermutSetoidX.if_eqA_then	40
Coq.Sorting.PermutSetoidX.permut_app_inv2	40	0.0.0.0.1.0.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).	0.29989695549	46
Coq.Sorting.PermutSetoidX.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoidX.permut_remove_hd	40	5.0.0.0.2.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: lia).	7.27857208252	1210
Coq.Sorting.PermutSetoidX.if_eqA_else	40	1.40.17.0	search with cache (only 1: intros; only 1: destruct (eqA_dec a _) as [Ha| Ha]; only 1: congruence; only 1: auto).	38.2368459702	42224
Coq.Sorting.PermutSetoidX.if_eqA_refl	40	32.0.2.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: eauto using permut_remove_hd_eq, Equivalence_Reflexive).	10.3661730289	11679
Coq.Sorting.PermutSetoidX.if_eqA	40
Coq.Sorting.PermutSetoidX.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoidX.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoidX.multiplicity_eqA	40
Coq.Sorting.PermutSetoidX.multiplicity_InA	40
Coq.Sorting.PermutSetoidX.multiplicity_InA_O	40
Coq.Sorting.PermutSetoidX.multiplicity_InA_S	40	0.1.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: intros a'; only 1: auto with arith; only 1: auto with arith).	0.0676259994507	7
Coq.Sorting.PermutSetoidX.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoidX.permut_InA_InA	40
Coq.Sorting.PermutSetoidX.permut_cons_InA	40	1.0.0.0.1.0.0.5.5	search with cache (only 1: unfold permutation, meq; only 1: intros a'; only 1: intros l a; only 1: simpl; only 1: intros; only 1: rewrite multiplicity_InA; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: lia).	19.6303300858	5926
Coq.Sorting.PermutSetoidX.permut_nil	40
Coq.Sorting.PermutSetoidX.permut_length_1	40
Coq.Sorting.PermutSetoidX.permut_length_2	40
Coq.Sorting.PermutSetoidX.permut_length	40
Coq.Sorting.PermutSetoidX.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoidX.permut_map	40
Coq.Sorting.PermutSetoidX.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoidX.permut_eqA	40	1.1.1.3.0.2	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: trivial; only 1: trivial; only 1: trivial).	0.914563179016	178
Coq.Sorting.PermutSetoidX.permutation_Permutation	40
Coq.Sorting.HeapX.leA_Tree_Leaf	40	3.10	search with cache (only 1: red; only 1: trivial using permut_refl).	0.12137389183	85
Coq.Sorting.HeapX.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0298209190369	2
Coq.Sorting.HeapX.invert_heap	40	1.6.2.4	search with cache (only 1: intros a b; only 1: intro P; only 1: inversion 1; only 1: auto with datatypes).	0.955564975739	258
Coq.Sorting.HeapX.is_heap_rect	40
Coq.Sorting.HeapX.is_heap_rec	40
Coq.Sorting.HeapX.low_trans	40
Coq.Sorting.HeapX.Equivalence_instance_0	40
Coq.Sorting.HeapX.Proper_instance_0	40	0.0.0.10.14	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: red; only 1: intros; only 1: simpl; only 1: auto with datatypes).	1.63715195656	959
Coq.Sorting.HeapX.merge	40
Coq.Sorting.HeapX.insert	40	1.1.15	search with cache (only 1: fix merge0 1; only 1: intros; only 1: auto with datatypes).	1.45361089706	1255
Coq.Sorting.HeapX.list_to_heap	40	9.8	search with cache (only 1: fix merge0 1; only 1: auto with datatypes).	0.410363912582	271
Coq.Sorting.HeapX.heap_to_list	40	2.0.25	search with cache (only 1: fix merge0 1; only 1: intros; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	1.20254015923	1883
Coq.Sorting.HeapX.treesort	40	7.6	search with cache (only 1: fix merge0 1; only 1: auto with datatypes).	0.286883831024	148
Coq.Sorting.PermutationX.Permutation_nil	40
Coq.Sorting.PermutationX.Permutation_nil_cons	40
Coq.Sorting.PermutationX.Permutation_refl	40	1.3.13	search with cache (only 1: induction l as [| y l IHl]; only 1: auto with arith; only 1: discriminate || auto).	0.233637094498	294
Coq.Sorting.PermutationX.Permutation_refl'	40
Coq.Sorting.PermutationX.Permutation_sym	40
Coq.Sorting.PermutationX.Permutation_trans	40	0.0	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.0128598213196	2
Coq.Sorting.PermutationX.Permutation_morph_transp	40
Coq.Sorting.PermutationX.Permutation_cons	40	2.1.0	search with cache (only 1: intros P HT l1 l2 HP; only 1: subst; only 1: intuition).	0.0238599777222	6
Coq.Sorting.PermutationX.Permutation_in	40
Coq.Sorting.PermutationX.Permutation_in'	40	0.0.0.0.2.2.1	search with cache (only 1: compute; only 1: induction 1; only 1: induction 1; only 1: easy; only 1: tauto; only 1: tauto; only 1: tauto).	4.00164580345	393
Coq.Sorting.PermutationX.Permutation_app_tail	40
Coq.Sorting.PermutationX.Permutation_app_head	40	0.0.0.0.1.8	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	2.63869190216	631
Coq.Sorting.PermutationX.Permutation_app	40
Coq.Sorting.PermutationX.Permutation_app'	40
Coq.Sorting.PermutationX.Permutation_add_inside	40	1.3.11.9.4	search with cache (only 1: intros l m l' m' Hpermll' Hpermmm'; only 1: intuition; only 1: rewrite H; only 1: apply Permutation_app_tail; only 1: trivial).	15.3320300579	5030
Coq.Sorting.PermutationX.Permutation_cons_append	40
Coq.Sorting.PermutationX.Permutation_app_comm	40
Coq.Sorting.PermutationX.Permutation_app_rot	40
Coq.Sorting.PermutationX.Permutation_app_swap_app	40
Coq.Sorting.PermutationX.Permutation_app_middle	40
Coq.Sorting.PermutationX.Permutation_cons_app	40
Coq.Sorting.PermutationX.Permutation_Add	40
Coq.Sorting.PermutationX.Permutation_middle	40	2.2	search with cache (only 1: intro l'; only 1: auto).	0.0181078910828	6
Coq.Sorting.PermutationX.Permutation_middle2	40
Coq.Sorting.PermutationX.Permutation_elt	40
Coq.Sorting.PermutationX.Permutation_rev	40	2.1.6.1.0.6	search with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	9.50829792023	1272
Coq.Sorting.PermutationX.Permutation_rev'	40
Coq.Sorting.PermutationX.Permutation_length	40
Coq.Sorting.PermutationX.Permutation_length'	40	0.0.0.0.0.3.1.0.0	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: now transitivity (length l')).	0.52828001976	241
Coq.Sorting.PermutationX.Permutation_Forall	40	13.1.6.0	search with cache (only 1: repeat red; only 1: intros l HF; only 1: rewrite !Forall_forall; only 1: eauto using Permutation_in).	12.1404378414	5699
Coq.Sorting.PermutationX.Permutation_Exists	40
Coq.Sorting.PermutationX.Permutation_Forall2	40
Coq.Sorting.PermutationX.Permutation_ind_bis	40
Coq.Sorting.PermutationX.Permutation_nil_app_cons	40
Coq.Sorting.PermutationX.Permutation_Add_inv	40
Coq.Sorting.PermutationX.Permutation_app_inv	40
Coq.Sorting.PermutationX.Permutation_cons_inv	40
Coq.Sorting.PermutationX.Permutation_cons_app_inv	40
Coq.Sorting.PermutationX.Permutation_app_inv_l	40
Coq.Sorting.PermutationX.Permutation_app_inv_r	40
Coq.Sorting.PermutationX.Permutation_app_inv_m	40
Coq.Sorting.PermutationX.Permutation_length_1_inv	40
Coq.Sorting.PermutationX.Permutation_length_1	40
Coq.Sorting.PermutationX.Permutation_length_2_inv	40
Coq.Sorting.PermutationX.Permutation_length_2	40
Coq.Sorting.PermutationX.Permutation_vs_elt_inv	40
Coq.Sorting.PermutationX.Permutation_vs_cons_inv	40
Coq.Sorting.PermutationX.Permutation_vs_cons_cons_inv	40
Coq.Sorting.PermutationX.NoDup_Permutation	40
Coq.Sorting.PermutationX.NoDup_Permutation_bis	40
Coq.Sorting.PermutationX.Permutation_NoDup	40
Coq.Sorting.PermutationX.Permutation_NoDup'	40
Coq.Sorting.PermutationX.Permutation_map	40
Coq.Sorting.PermutationX.Permutation_map'	40
Coq.Sorting.PermutationX.Permutation_map_inv	40
Coq.Sorting.PermutationX.Permutation_image	40
Coq.Sorting.PermutationX.Permutation_elt_map_inv	40
Coq.Sorting.PermutationX.Permutation_flat_map	40
Coq.Sorting.PermutationX.nat_bijection_Permutation	40
Coq.Sorting.PermutationX.adapt_injective	40
Coq.Sorting.PermutationX.adapt_ok	40
Coq.Sorting.PermutationX.Permutation_nth_error	40
Coq.Sorting.PermutationX.Permutation_nth_error_bis	40
Coq.Sorting.PermutationX.Permutation_nth	40
Coq.Sorting.PermutationX.Permutation_list_sum	40
Coq.Sorting.PermutationX.Permutation_list_max	40
Coq.Sorting.PermutationX.Permutation_transp_sym	40
Coq.Sorting.PermutationX.Permutation_transp_equiv	40
Coq.Sorting.PermutationX.Permutation_transp_cons	40
Coq.Sorting.PermutationX.Permutation_Permutation_transp	40
Coq.Sorting.PermutationX.Permutation_ind_transp	40
Coq.Sorting.MergesortX.Sort.Sorted_merge	40
Coq.Sorting.MergesortX.Sort.Permuted_merge	40
Coq.Sorting.MergesortX.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.MergesortX.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.MergesortX.Sort.Sorted_merge_stack	40
Coq.Sorting.MergesortX.Sort.Permuted_merge_stack	40
Coq.Sorting.MergesortX.Sort.Sorted_iter_merge	40
Coq.Sorting.MergesortX.Sort.Permuted_iter_merge	40
Coq.Sorting.MergesortX.Sort.LocallySorted_sort	40
Coq.Sorting.MergesortX.Sort.Sorted_sort	40
Coq.Sorting.MergesortX.Sort.Permuted_sort	40
Coq.Sorting.MergesortX.Sort.StronglySorted_sort	40
Coq.Sorting.MergesortX.NatOrder.leb_total	40
Coq.Sorting.SortedX.HdRel_inv	40	6.15.3.15	search with cache (only 1: intros E; only 1: intros; only 1: inversion H; only 1: trivial).	3.5678858757	5204
Coq.Sorting.SortedX.Sorted_inv	40	11.0.0.4	search with cache (only 1: intros a H; only 1: inversion 1; only 1: subst; only 1: intuition).	0.83566904068	848
Coq.Sorting.SortedX.Sorted_rect	40
Coq.Sorting.SortedX.Sorted_LocallySorted_iff	40
Coq.Sorting.SortedX.StronglySorted_inv	40	0.15	search with cache (only 1: inversion 1; only 1: firstorder).	2.9191198349	1037
Coq.Sorting.SortedX.StronglySorted_rect	40
Coq.Sorting.SortedX.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0268259048462	3
Coq.Sorting.SortedX.StronglySorted_Sorted	40
Coq.Sorting.SortedX.Sorted_extends	40
Coq.Sorting.SortedX.Sorted_StronglySorted	40
Coq.Sorting.CPermutationX.CPermutation_Permutation	40	2.4.3.1.25.7	search with cache (only 1: induction 1; only 1: induction l1; only 1: rewrite app_nil_r; only 1: auto; only 1: apply Permutation_cons_app; only 1: auto).	24.7765719891	21322
Coq.Sorting.CPermutationX.CPermutation_nil	40
Coq.Sorting.CPermutationX.CPermutation_nil_cons	40
Coq.Sorting.CPermutationX.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutationX.CPermutation_split	40
Coq.Sorting.CPermutationX.CPermutation_refl	40
Coq.Sorting.CPermutationX.CPermutation_refl'	40	1.5.6.54	search with cache (only 1: intros Hincl; only 1: intros l HF; only 1: subst; only 1: now rewrite <- (app_nil_l l)  at 1; rewrite <- (app_nil_r l)  at 2).	31.2290410995	51902
Coq.Sorting.CPermutationX.CPermutation_sym	40	2.0.1.4	search with cache (only 1: intros l a HC; only 1: inversion HC as [l1 l2 Heq]; only 1: subst; only 1: now simpl).	0.256256818771	105
Coq.Sorting.CPermutationX.CPermutation_trans	40
Coq.Sorting.CPermutationX.CPermutation_app	40	6.0	search with cache (only 1: intros; only 1: eauto using Add_app).	0.0265328884125	8
Coq.Sorting.CPermutationX.CPermutation_app_comm	40	0.1	search with cache (only 1: intros; only 1: now transitivity (l1 ++ l2)).	0.0187990665436	3
Coq.Sorting.CPermutationX.CPermutation_app_rot	40	6.2	search with cache (only 1: intros; only 1: now rewrite (app_assoc l2)).	0.0279958248138	10
Coq.Sorting.CPermutationX.CPermutation_cons_append	40
Coq.Sorting.CPermutationX.CPermutation_morph_cons	40
Coq.Sorting.CPermutationX.CPermutation_length_1	40
Coq.Sorting.CPermutationX.CPermutation_length_1_inv	40
Coq.Sorting.CPermutationX.CPermutation_swap	40
Coq.Sorting.CPermutationX.CPermutation_length_2	40
Coq.Sorting.CPermutationX.CPermutation_length_2_inv	40
Coq.Sorting.CPermutationX.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutationX.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutationX.CPermutation_rev	40
Coq.Sorting.CPermutationX.CPermutation_in	40
Coq.Sorting.CPermutationX.CPermutation_in'	40
Coq.Sorting.CPermutationX.CPermutation_map	40
Coq.Sorting.CPermutationX.CPermutation_map_inv	40
Coq.Sorting.CPermutationX.CPermutation_image	40
Coq.Sorting.CPermutationX.CPermutation_Forall	40
Coq.Sorting.CPermutationX.CPermutation_Exists	40
Coq.Sorting.CPermutationX.CPermutation_Forall2	40
Coq.Sorting.CPermutationX.CPermutation_rewrite_rev	40
Coq.btauto.AlgebraX.Decidable_sound	40	1.4.0.7	search with cache (only 1: intro H; only 1: intro z; only 1: simpl in *; only 1: apply -> Decidable_spec).	0.461024999619	348
Coq.btauto.AlgebraX.Decidable_complete	40	0.5.1.8	search with cache (only 1: intro H; only 1: intro z; only 1: simpl in *; only 1: apply <- Decidable_spec).	0.574085950851	474
Coq.btauto.AlgebraX.Decidable_sound_alt	40	0.0.0.0.1	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0405650138855	6
Coq.btauto.AlgebraX.Decidable_complete_alt	40	1.1.0.2.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl in *; only 1: destruct wit; only 1: intuition; only 1: intuition).	0.197563171387	29
Coq.btauto.AlgebraX.Decidable_PosEq_obligation_1	40
Coq.btauto.AlgebraX.Decidable_PosLt_obligation_1	40
Coq.btauto.AlgebraX.Decidable_PosLe_obligation_1	40
Coq.btauto.AlgebraX.Decidable_eq_poly_obligation_1	40
Coq.btauto.AlgebraX.Decidable_null_obligation_3	40	10.0.0.3.9.4	search with cache (only 1: induction p; only 1: destr_bool; only 1: compute; only 1: easy; only 1: tauto; only 1: easy).	34.2676301003	4071
Coq.btauto.AlgebraX.Decidable_valid_obligation_1	40
Coq.btauto.AlgebraX.valid_le_compat	40
Coq.btauto.AlgebraX.linear_le_compat	40
Coq.btauto.AlgebraX.linear_valid_incl	40
Coq.btauto.AlgebraX.eval_null_zero	40	3.0.20	search with cache (only 1: intros a n; only 1: intros; only 1: now rewrite H).	6.74480509758	537
Coq.btauto.AlgebraX.eval_extensional_eq_compat	40
Coq.btauto.AlgebraX.eval_suffix_compat	40
Coq.btauto.AlgebraX.poly_add_compat	40
Coq.btauto.AlgebraX.poly_mul_cst_compat	40
Coq.btauto.AlgebraX.poly_mul_mon_compat	40
Coq.btauto.AlgebraX.poly_mul_compat	40
Coq.btauto.AlgebraX.poly_add_valid_compat	40
Coq.btauto.AlgebraX.poly_mul_cst_valid_compat	40
Coq.btauto.AlgebraX.poly_mul_mon_null_compat	40
Coq.btauto.AlgebraX.poly_mul_mon_valid_compat	40
Coq.btauto.AlgebraX.poly_mul_valid_compat	40
Coq.btauto.AlgebraX.poly_add_linear_compat	40
Coq.btauto.AlgebraX.reduce_aux_eval_compat	40
Coq.btauto.AlgebraX.reduce_eval_compat	40
Coq.btauto.AlgebraX.reduce_aux_le_compat	40
Coq.btauto.AlgebraX.linear_reduce_aux	40
Coq.btauto.AlgebraX.linear_reduce	40
Coq.btauto.ReflectX.poly_of_formula_eval_compat	40
Coq.btauto.ReflectX.poly_of_formula_valid_compat	40
Coq.btauto.ReflectX.poly_of_formula_sound	40
Coq.btauto.ReflectX.reduce_poly_of_formula_sound	40
Coq.btauto.ReflectX.list_nth_base	40	7	search with cache (only 1: now f_equal).	0.0389258861542	8
Coq.btauto.ReflectX.list_nth_succ	40
Coq.btauto.ReflectX.list_nth_nil	40
Coq.btauto.ReflectX.make_last_nth_1	40
Coq.btauto.ReflectX.make_last_nth_2	40
Coq.btauto.ReflectX.list_replace_nth_1	40
Coq.btauto.ReflectX.list_replace_nth_2	40
Coq.btauto.ReflectX.boolean_witness_nonzero	40
Coq.btauto.ReflectX.reduce_poly_of_formula_sound_alt	40
Coq.funind.RecdefX.le_lt_SS	40	36.3	search with cache (only 1: rewrite Nat.lt_nge; only 1: auto with arith).	3.01893496513	8027
Coq.funind.RecdefX.Splus_lt	40	23	search with cache (only 1: auto with arith).	0.463801860809	576
Coq.funind.RecdefX.SSplus_lt	40	15	search with cache (only 1: intuition).	1.48133707047	1286
Coq.funind.RecdefX.max	40
Coq.QArith.QfieldX.Qsrt	40	1.0.0.1.0.0.2.4.0.1	search with cache (only 1: constructor; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: exact Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_comm; only 1: exact Qmult_assoc; only 1: exact Qmult_plus_distr_l; only 1: reflexivity; only 1: exact Qplus_opp_r).	27.0253698826	6787
Coq.QArith.QfieldX.Qsft	40	0.1.0.1.0.0.0.0	search with cache (only 1: constructor; only 1: exact Qfield.Qsrt; only 1: discriminate; only 1: reflexivity; only 1: intros p Hp; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: exact Hp).	0.359679937363	43
Coq.QArith.QfieldX.Qpower_theory	40	0.0.0.0	search with cache (only 1: constructor; only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0349309444427	4
Coq.QArith.QfieldX.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.0198719501495	1
Coq.QArith.QfieldX.ex2	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0356428623199	3
Coq.QArith.QfieldX.ex3	40	0.0	search with cache (only 1: intros; only 1: ring).	0.040463924408	2
Coq.QArith.QfieldX.ex4	40	1	search with cache (only 1: field).	0.033812046051	2
Coq.QArith.QfieldX.ex5	40	1	search with cache (only 1: field).	0.0644152164459	2
Coq.QArith.QfieldX.ex6	40	1	search with cache (only 1: field).	0.0634381771088	2
Coq.QArith.QfieldX.ex7	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0369000434875	2
Coq.QArith.QfieldX.ex8	40	0.0	search with cache (only 1: intros; only 1: ring).	0.036493062973	2
Coq.QArith.QfieldX.ex9	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0368959903717	2
Coq.QArith.QfieldX.ex10	40	1.0.0	search with cache (only 1: intros; only 1: field; only 1: auto).	0.0530228614807	4
Coq.QArith.QfieldX.Qopp_plus	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0379929542542	2
Coq.QArith.QfieldX.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.055342912674	4
Coq.QArith.QpowerX.Qpower_positive_1	40
Coq.QArith.QpowerX.Qpower_1	40
Coq.QArith.QpowerX.Qpower_positive_0	40	4.0.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	1.56182098389	640
Coq.QArith.QpowerX.Qpower_0	40
Coq.QArith.QpowerX.Qpower_not_0_positive	40
Coq.QArith.QpowerX.Qpower_pos_positive	40
Coq.QArith.QpowerX.Qpower_pos	40
Coq.QArith.QpowerX.Qmult_power_positive	40
Coq.QArith.QpowerX.Qmult_power	40
Coq.QArith.QpowerX.Qinv_power_positive	40
Coq.QArith.QpowerX.Qinv_power	40
Coq.QArith.QpowerX.Qdiv_power	40
Coq.QArith.QpowerX.Qinv_power_n	40
Coq.QArith.QpowerX.Qpower_plus_positive	40
Coq.QArith.QpowerX.Qpower_opp	40
Coq.QArith.QpowerX.Qpower_minus_positive	40
Coq.QArith.QpowerX.Qpower_plus	40
Coq.QArith.QpowerX.Qpower_plus'	40
Coq.QArith.QpowerX.Qpower_mult_positive	40
Coq.QArith.QpowerX.Qpower_mult	40
Coq.QArith.QpowerX.Zpower_Qpower	40
Coq.QArith.QpowerX.Qsqr_nonneg	40	0.0.0.0.1.0.7	search with cache (only 1: intros [[| n| n] d] Ha; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence).	2.13252091408	660
Coq.QArith.QpowerX.Qpower_decomp	40
Coq.QArith.QabsX.Qabs_case	40
Coq.QArith.QabsX.Qabs_wd_Proper	40
Coq.QArith.QabsX.Qabs_pos	40	2.1.2.1.3.7	search with cache (only 1: unfold Qle in *; only 1: intros (x1, x2); only 1: destruct x1; only 1: auto with qarith; only 1: auto with qarith; only 1: auto with qarith).	11.5452299118	4673
Coq.QArith.QabsX.Qabs_neg	40	2.0.0.0.0.0.1.1.1	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: auto with qarith; only 1: auto with qarith; only 1: reflexivity).	1.31034111977	729
Coq.QArith.QabsX.Qabs_nonneg	40	2.0.0.7.9	search with cache (only 1: unfold Qle in *; only 1: intros (n, d); only 1: simpl; only 1: Z.nzsimpl; only 1: apply Z.abs_nonneg).	1.55002713203	1165
Coq.QArith.QabsX.Zabs_Qabs	40	3.0.0	search with cache (only 1: intros; only 1: red; only 1: auto with qarith).	0.109228849411	19
Coq.QArith.QabsX.Qabs_opp	40	1.2.0.0.0.0.9	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qmult, Qplus; only 1: case x1; only 1: simpl; only 1: now subst; only 1: auto; only 1: auto).	2.37837791443	1151
Coq.QArith.QabsX.Qabs_triangle	40
Coq.QArith.QabsX.Qabs_Qmult	40
Coq.QArith.QabsX.Qabs_Qinv	40
Coq.QArith.QabsX.Qabs_Qminus	40
Coq.QArith.QabsX.Qle_Qabs	40	0.0.0.0.0.0.1.0.0.0.7	search with cache (only 1: intros [n d]; only 1: unfold Qle; only 1: case_eq n; only 1: simpl; only 1: now Z.nzsimpl; only 1: intros; only 1: simpl in *; only 1: reflexivity; only 1: intros; only 1: simpl in *; only 1: discriminate).	1.65103292465	917
Coq.QArith.QabsX.Qabs_triangle_reverse	40
Coq.QArith.QabsX.Qabs_Qle_condition	40
Coq.QArith.QabsX.Qabs_diff_Qle_condition	40
Coq.QArith.QcanonX.Qred_identity	40
Coq.QArith.QcanonX.Qred_identity2	40
Coq.QArith.QcanonX.Qred_iff	40
Coq.QArith.QcanonX.Qc_is_canon	40
Coq.QArith.QcanonX.Qc_decomp	40	0.0.0.3.2.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.35720705986	101
Coq.QArith.QcanonX.Qred_involutive	40	10.1.3	search with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	4.59254312515	2136
Coq.QArith.QcanonX.Q2Qc_eq_iff	40
Coq.QArith.QcanonX.Qceq_alt	40
Coq.QArith.QcanonX.Qclt_alt	40	2.1.2.0	search with cache (only 1: unfold Qccompare; only 1: split; only 1: now intros <-; only 1: auto).	0.119216918945	19
Coq.QArith.QcanonX.Qcgt_alt	40	0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0588920116425	4
Coq.QArith.QcanonX.Qcle_alt	40	6.0.0	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: easy').	0.0409660339355	11
Coq.QArith.QcanonX.Qcge_alt	40	2.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0486650466919	13
Coq.QArith.QcanonX.Qc_eq_dec	40
Coq.QArith.QcanonX.Q_apart_0_1	40	0	search with cache (only 1: auto with qarith).	0.0219330787659	1
Coq.QArith.QcanonX.Qcplus_assoc	40
Coq.QArith.QcanonX.Qcplus_0_l	40	12.1.10	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.86533498764	673
Coq.QArith.QcanonX.Qcplus_0_r	40	13.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.559070825577	313
Coq.QArith.QcanonX.Qcplus_comm	40	8.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.239959955215	59
Coq.QArith.QcanonX.Qcopp_involutive	40
Coq.QArith.QcanonX.Qcplus_opp_r	40	23.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	4.76982188225	1767
Coq.QArith.QcanonX.Qcmult_assoc	40	17.0.14	search with cache (only 1: intros x y H; only 1: qc; only 1: ring).	2.43659210205	1901
Coq.QArith.QcanonX.Qcmult_0_l	40	15.0.3	search with cache (only 1: intros; only 1: qc; only 1: easy).	1.11215782166	896
Coq.QArith.QcanonX.Qcmult_0_r	40
Coq.QArith.QcanonX.Qcmult_1_l	40
Coq.QArith.QcanonX.Qcmult_1_r	40	10.3.1.0.7.0.0	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	9.56714892387	6034
Coq.QArith.QcanonX.Qcmult_comm	40	2.3.2.1.7.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	1.81857180595	1036
Coq.QArith.QcanonX.Qcmult_plus_distr_r	40	6.0.0.5	search with cache (only 1: intros (r, Hr); only 1: intros; only 1: qc; only 1: ring).	0.819607973099	324
Coq.QArith.QcanonX.Qcmult_plus_distr_l	40	3.0.0.0.0.0.2.7.0.0.5	search with cache (only 1: intros (r, Hr); only 1: intros; only 1: qc; only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	10.7151601315	3493
Coq.QArith.QcanonX.Qcmult_integral	40
Coq.QArith.QcanonX.Qcmult_integral_l	40
Coq.QArith.QcanonX.Qcmult_inv_r	40
Coq.QArith.QcanonX.Qcmult_inv_l	40	0.0.2.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.0897130966187	7
Coq.QArith.QcanonX.Qcinv_mult_distr	40
Coq.QArith.QcanonX.Qcdiv_mult_l	40
Coq.QArith.QcanonX.Qcmult_div_r	40
Coq.QArith.QcanonX.Qcle_refl	40	11.23.24.13	search with cache (only 1: intro n; only 1: induction n; only 1: red; only 1: auto with qarith).	11.5658781528	16076
Coq.QArith.QcanonX.Qcle_antisym	40	7.0.0	search with cache (only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	0.0486209392548	16
Coq.QArith.QcanonX.Qcle_trans	40
Coq.QArith.QcanonX.Qclt_not_eq	40	0.0.0.1.3.0.0.10	search with cache (only 1: intros x y Hin; only 1: destruct (Qeq_dec x y) as [H| H]; only 1: contradict H; only 1: subst; only 1: auto with qarith; only 1: contradict H; only 1: subst; only 1: auto with qarith).	2.31531620026	1578
Coq.QArith.QcanonX.Qclt_le_weak	40	12.0.1	search with cache (only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	1.13668012619	677
Coq.QArith.QcanonX.Qcle_lt_trans	40
Coq.QArith.QcanonX.Qclt_le_trans	40
Coq.QArith.QcanonX.Qclt_trans	40	2.0.3.0.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qle_lt_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: eauto).	0.227557897568	95
Coq.QArith.QcanonX.Qcnot_lt_le	40	13.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.840039014816	589
Coq.QArith.QcanonX.Qcnot_le_lt	40	0.1.11	search with cache (only 1: intros Heq; only 1: unfold Qclt; only 1: auto with qarith).	1.40851306915	1182
Coq.QArith.QcanonX.Qclt_not_le	40	1.0.2.0.1	search with cache (only 1: unfold Qclt; only 1: intros; only 1: intro; only 1: destruct (Qlt_not_eq _ _ H); only 1: auto with qarith).	0.0945811271667	31
Coq.QArith.QcanonX.Qcle_not_lt	40	17.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	2.27321004868	1104
Coq.QArith.QcanonX.Qcle_lt_or_eq	40
Coq.QArith.QcanonX.Qc_dec	40
Coq.QArith.QcanonX.Qclt_le_dec	40	0.0.3.0	search with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.0525000095367	19
Coq.QArith.QcanonX.Qcopp_le_compat	40
Coq.QArith.QcanonX.Qcle_minus_iff	40
Coq.QArith.QcanonX.Qclt_minus_iff	40
Coq.QArith.QcanonX.Qcplus_le_compat	40
Coq.QArith.QcanonX.Qcmult_le_compat_r	40
Coq.QArith.QcanonX.Qcmult_lt_0_le_reg_r	40
Coq.QArith.QcanonX.Qcmult_lt_compat_r	40
Coq.QArith.QcanonX.Qcpower_1	40
Coq.QArith.QcanonX.Qcpower_0	40	0.0.4.0	search with cache (only 1: induction n; only 1: tauto; only 1: simpl; only 1: auto with qarith).	0.177326917648	32
Coq.QArith.QcanonX.Qcpower_pos	40
Coq.QArith.QcanonX.Qc_eq_bool_correct	40	3.45	search with cache (only 1: fix even_spec 1; only 1: easy).	8.46183896065	9577
Coq.QArith.QcanonX.Qcrt	40
Coq.QArith.QcanonX.Qcft	40
Coq.QArith.QcanonX.test_field	40	0.0.4.0.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: tauto).	0.225960016251	32
Coq.QArith.QcabsX.Qred_abs	40
Coq.QArith.QcabsX.Qcabs_canon	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: destruct x as [[| a| a] d]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos.ggcd a d) as [x [y z]]; only 1: simpl; only 1: congruence).	0.154111862183	37
Coq.QArith.QcabsX.Qcabs_case	40
Coq.QArith.QcabsX.Qcabs_pos	40
Coq.QArith.QcabsX.Qcabs_neg	40
Coq.QArith.QcabsX.Qcabs_nonneg	40	0.2.0.1.0.1	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: repeat rewrite Qred_correct; only 1: apply Qabs_case; only 1: trivial; only 1: apply (Qopp_le_compat x 0)).	0.0426111221313	10
Coq.QArith.QcabsX.Qcabs_opp	40
Coq.QArith.QcabsX.Qcabs_triangle	40	0.0.0.0.4	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: case Qred_abs; only 1: repeat rewrite Qred_correct; only 1: apply Qabs_triangle).	0.0518510341644	9
Coq.QArith.QcabsX.Qcabs_Qcmult	40
Coq.QArith.QcabsX.Qcabs_Qcminus	40
Coq.QArith.QcabsX.Qcle_Qcabs	40
Coq.QArith.QcabsX.Qcabs_triangle_reverse	40
Coq.QArith.QcabsX.Qcabs_Qcle_condition	40
Coq.QArith.QcabsX.Qcabs_diff_Qcle_condition	40
Coq.QArith.QcabsX.Qcabs_null	40
Coq.QArith.QArith_baseX.inject_Z_injective	40
Coq.QArith.QArith_baseX.Qeq_alt	40
Coq.QArith.QArith_baseX.Qlt_alt	40	4.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0510039329529	15
Coq.QArith.QArith_baseX.Qgt_alt	40
Coq.QArith.QArith_baseX.Qle_alt	40	5.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply iff_refl).	0.0490717887878	16
Coq.QArith.QArith_baseX.Qge_alt	40
Coq.QArith.QArith_baseX.Qcompare_antisym	40
Coq.QArith.QArith_baseX.Qcompare_spec	40
Coq.QArith.QArith_baseX.Qeq_refl	40	0.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: now constructor).	0.0293869972229	2
Coq.QArith.QArith_baseX.Qeq_sym	40	3.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: auto with qarith).	0.0442340373993	5
Coq.QArith.QArith_baseX.Qeq_trans	40	3.1.4.7.1	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (Z.pos (QArith_base.Qden y)); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	1.34425902367	406
Coq.QArith.QArith_baseX.Q_Setoid	40
Coq.QArith.QArith_baseX.Qeq_dec	40
Coq.QArith.QArith_baseX.Qeq_bool_iff	40	22.13	search with cache (only 1: symmetry; only 1: apply Zeq_is_eq_bool).	4.30932307243	4188
Coq.QArith.QArith_baseX.Qeq_bool_eq	40	0.1.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Zeq_is_eq_bool; only 1: auto with qarith).	0.113479852676	16
Coq.QArith.QArith_baseX.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0222179889679	1
Coq.QArith.QArith_baseX.Qeq_bool_neq	40
Coq.QArith.QArith_baseX.Qle_bool_iff	40
Coq.QArith.QArith_baseX.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.0244979858398	1
Coq.QArith.QArith_baseX.Qnot_eq_sym	40	1	search with cache (only 1: auto with qarith).	0.0181591510773	2
Coq.QArith.QArith_baseX.Qeq_bool_comm	40
Coq.QArith.QArith_baseX.Qeq_bool_refl	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: rewrite <- Qeq_bool_iff; only 1: rewrite !Qeq_bool_iff; only 1: rewrite <- Qeq_bool_iff; only 1: rewrite !Qeq_bool_iff; only 1: rewrite <- Qeq_bool_iff; only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.121709823608	12
Coq.QArith.QArith_baseX.Qeq_bool_sym	40	0.2.0.0.1.0.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: rewrite <- Qeq_bool_iff; only 1: symmetry; only 1: apply Qeq_bool_iff; only 1: rewrite !Qeq_bool_iff; only 1: apply Zeq_is_eq_bool; only 1: auto with qarith).	0.184967041016	19
Coq.QArith.QArith_baseX.Qeq_bool_trans	40	0.0.1.3.0.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.169829130173	10
Coq.QArith.QArith_baseX.Qmake_Qdiv	40	0.16.21	search with cache (only 1: red; only 1: simpl in *; only 1: ring).	1.65673112869	1131
Coq.QArith.QArith_baseX.Qplus_comp	40
Coq.QArith.QArith_baseX.Qopp_comp	40
Coq.QArith.QArith_baseX.Qminus_comp	40
Coq.QArith.QArith_baseX.Qmult_comp	40
Coq.QArith.QArith_baseX.Qinv_comp	40
Coq.QArith.QArith_baseX.Qdiv_comp	40
Coq.QArith.QArith_baseX.Qcompare_comp	40
Coq.QArith.QArith_baseX.Qle_comp	40
Coq.QArith.QArith_baseX.Qlt_compat	40
Coq.QArith.QArith_baseX.Qeqb_comp	40	4.1.4.9.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: rewrite Hx, Hy; only 1: now symmetry).	11.1399109364	5415
Coq.QArith.QArith_baseX.Qleb_comp	40
Coq.QArith.QArith_baseX.Q_apart_0_1	40	3	search with cache (only 1: discriminate).	0.02032995224	4
Coq.QArith.QArith_baseX.Qplus_assoc	40	12.5.0.0.5.5	search with cache (only 1: intros a b; only 1: intros Hb; only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: QArith_base.simpl_mult; only 1: ring).	33.0226149559	13361
Coq.QArith.QArith_baseX.Qplus_0_l	40	5.0.1.14	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: ring).	3.442882061	350
Coq.QArith.QArith_baseX.Qplus_0_r	40	1.1.0.0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.214094161987	16
Coq.QArith.QArith_baseX.Qplus_comm	40	2.1.2.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.629500150681	126
Coq.QArith.QArith_baseX.Qopp_involutive	40	1.7.1.3	search with cache (only 1: red; only 1: intros; only 1: simpl; only 1: ring).	1.88161182404	252
Coq.QArith.QArith_baseX.Qplus_opp_r	40	2.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.080078125	6
Coq.QArith.QArith_baseX.Qplus_inj_r	40
Coq.QArith.QArith_baseX.Qplus_inj_l	40
Coq.QArith.QArith_baseX.Qmult_assoc	40	2.4.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: QArith_base.simpl_mult; only 1: ring).	0.867197036743	285
Coq.QArith.QArith_baseX.Qmult_0_l	40	0.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: now subst).	0.0471270084381	6
Coq.QArith.QArith_baseX.Qmult_0_r	40	0.1.0.0.4	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite !Z.mul_1_r, Z.mul_eq_0; only 1: intuition).	0.287545204163	59
Coq.QArith.QArith_baseX.Qmult_1_l	40
Coq.QArith.QArith_baseX.Qmult_1_r	40	2.2.5.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	2.60352993011	830
Coq.QArith.QArith_baseX.Qmult_comm	40	1.0.0.0.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	1.41373682022	91
Coq.QArith.QArith_baseX.Qmult_plus_distr_r	40	1.8.0.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: QArith_base.simpl_mult; only 1: ring).	23.6238901615	3944
Coq.QArith.QArith_baseX.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: QArith_base.simpl_mult; only 1: ring).	0.108896017075	5
Coq.QArith.QArith_baseX.Qmult_integral	40
Coq.QArith.QArith_baseX.Qmult_integral_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: rewrite !Z.mul_1_r, Z.mul_eq_0; only 1: intuition).	0.0859529972076	5
Coq.QArith.QArith_baseX.inject_Z_plus	40
Coq.QArith.QArith_baseX.inject_Z_mult	40	4	search with cache (only 1: auto with qarith).	0.1012840271	29
Coq.QArith.QArith_baseX.inject_Z_opp	40	2.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: reflexivity).	0.0329630374908	4
Coq.QArith.QArith_baseX.Qinv_involutive	40
Coq.QArith.QArith_baseX.Qmult_inv_r	40
Coq.QArith.QArith_baseX.Qinv_mult_distr	40
Coq.QArith.QArith_baseX.Qdiv_mult_l	40
Coq.QArith.QArith_baseX.Qmult_div_r	40
Coq.QArith.QArith_baseX.Qinv_plus_distr	40	0.0.0.0.8	search with cache (only 1: intros a n Ha; only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	1.15542793274	366
Coq.QArith.QArith_baseX.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0746638774872	5
Coq.QArith.QArith_baseX.Qmult_inj_r	40
Coq.QArith.QArith_baseX.Qmult_inj_l	40
Coq.QArith.QArith_baseX.Qle_refl	40	6.1	search with cache (only 1: red; only 1: auto with zarith).	0.0247747898102	9
Coq.QArith.QArith_baseX.Qle_antisym	40
Coq.QArith.QArith_baseX.Qle_trans	40
Coq.QArith.QArith_baseX.Qlt_irrefl	40	42.46	search with cache (only 1: destruct x; only 1: apply Z.lt_irrefl).	14.0202670097	12560
Coq.QArith.QArith_baseX.Qlt_not_eq	40
Coq.QArith.QArith_baseX.Zle_Qle	40
Coq.QArith.QArith_baseX.Zlt_Qlt	40
Coq.QArith.QArith_baseX.Qle_lteq	40	0.0.0.0.0.0.0.0.0.0.17	search with cache (only 1: rewrite QArith_base.Qeq_alt, QArith_base.Qle_alt, QArith_base.Qlt_alt; only 1: destruct (QArith_base.Qcompare x y); only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: intuition; only 1: congruence; only 1: discriminate; only 1: intuition; only 1: congruence; only 1: discriminate).	39.3695371151	5172
Coq.QArith.QArith_baseX.Qlt_le_weak	40	1.24	search with cache (only 1: compute; only 1: congruence).	1.31481719017	908
Coq.QArith.QArith_baseX.Qle_lt_trans	40
Coq.QArith.QArith_baseX.Qlt_le_trans	40
Coq.QArith.QArith_baseX.Qlt_trans	40
Coq.QArith.QArith_baseX.Qnot_lt_le	40	0.1.0.0.18.5.9	search with cache (only 1: intros; only 1: apply Zle_is_le_bool; only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: auto with qarith; only 1: now constructor; only 1: auto with qarith).	8.03186678886	9065
Coq.QArith.QArith_baseX.Qnot_le_lt	40
Coq.QArith.QArith_baseX.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0174369812012	1
Coq.QArith.QArith_baseX.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.0183618068695	1
Coq.QArith.QArith_baseX.Qle_lt_or_eq	40	5.1.0	search with cache (only 1: unfold Qle, Qlt; only 1: intros x y H; only 1: now apply Z.lt_eq_cases).	0.0787348747253	9
Coq.QArith.QArith_baseX.Q_dec	40	5.1.0	search with cache (only 1: unfold Qle, Qlt, Qeq; only 1: intros; only 1: exact (Z_dec' (QArith_base.Qnum x * Z.pos (QArith_base.Qden y)) (QArith_base.Qnum y * Z.pos (QArith_base.Qden x)))).	0.041839838028	9
Coq.QArith.QArith_baseX.Qlt_le_dec	40
Coq.QArith.QArith_baseX.Qarchimedean	40
Coq.QArith.QArith_baseX.Qopp_le_compat	40
Coq.QArith.QArith_baseX.Qle_minus_iff	40
Coq.QArith.QArith_baseX.Qlt_minus_iff	40
Coq.QArith.QArith_baseX.Qplus_le_compat	40
Coq.QArith.QArith_baseX.Qplus_lt_le_compat	40
Coq.QArith.QArith_baseX.Qplus_le_l	40
Coq.QArith.QArith_baseX.Qplus_le_r	40
Coq.QArith.QArith_baseX.Qplus_lt_l	40
Coq.QArith.QArith_baseX.Qplus_lt_r	40
Coq.QArith.QArith_baseX.Qmult_le_compat_r	40
Coq.QArith.QArith_baseX.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_baseX.Qmult_le_r	40
Coq.QArith.QArith_baseX.Qmult_le_l	40	0.0.1.2.0.2.0.7	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	5.27128982544	1864
Coq.QArith.QArith_baseX.Qmult_lt_compat_r	40	1.1.1.3.0.1.0.0.0.0	search with cache (only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: unfold Qle, Qlt; only 1: simpl; only 1: QArith_base.simpl_mult; only 1: rewrite Z.mul_shuffle1, (Z.mul_shuffle1 b1); only 1: rewrite Z.mul_1_r; only 1: intro LT; only 1: rewrite <- Z.mul_lt_mono_pos_r; only 1: easy; only 1: now apply Z.mul_pos_pos).	26.0914027691	9775
Coq.QArith.QArith_baseX.Qmult_lt_r	40	1.1.0.1.0.1.0.0.0.0	search with cache (only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: unfold Qle, Qlt; only 1: simpl; only 1: QArith_base.simpl_mult; only 1: rewrite Z.mul_shuffle1, (Z.mul_shuffle1 b1); only 1: rewrite Z.mul_1_r; only 1: intro LT; only 1: rewrite <- Z.mul_lt_mono_pos_r; only 1: reflexivity; only 1: now apply Z.mul_pos_pos).	7.70850896835	2545
Coq.QArith.QArith_baseX.Qmult_lt_l	40
Coq.QArith.QArith_baseX.Qmult_le_0_compat	40
Coq.QArith.QArith_baseX.Qinv_le_0_compat	40
Coq.QArith.QArith_baseX.Qle_shift_div_l	40
Coq.QArith.QArith_baseX.Qle_shift_inv_l	40
Coq.QArith.QArith_baseX.Qle_shift_div_r	40
Coq.QArith.QArith_baseX.Qle_shift_inv_r	40
Coq.QArith.QArith_baseX.Qinv_lt_0_compat	40	0.0.0.2	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.03822016716	6
Coq.QArith.QArith_baseX.Qlt_shift_div_l	40
Coq.QArith.QArith_baseX.Qlt_shift_inv_l	40
Coq.QArith.QArith_baseX.Qlt_shift_div_r	40
Coq.QArith.QArith_baseX.Qlt_shift_inv_r	40
Coq.QArith.QArith_baseX.Qinv_lt_contravar	40
Coq.QArith.QArith_baseX.Qpower_positive_comp	40
Coq.QArith.QArith_baseX.Qpower_comp	40
Coq.QArith.QminmaxX.Q.plus_max_distr_l	40
Coq.QArith.QminmaxX.Q.plus_max_distr_r	40
Coq.QArith.QminmaxX.Q.plus_min_distr_l	40	1.0.0.0.0.0.0.6.0	search with cache (only 1: intros; only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	8.08646798134	933
Coq.QArith.QminmaxX.Q.plus_min_distr_r	40	1.0.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	2.08106398582	518
Coq.QArith.QreductionX.Qred_correct	40
Coq.QArith.QreductionX.Qred_complete	40
Coq.QArith.QreductionX.Qred_eq_iff	40
Coq.QArith.QreductionX.Qred_comp_Proper	40
Coq.QArith.QreductionX.Qplus'_correct	40
Coq.QArith.QreductionX.Qmult'_correct	40	0.2	search with cache (only 1: intros; only 1: apply Qreduction.Qred_correct).	0.0122449398041	4
Coq.QArith.QreductionX.Qminus'_correct	40	0.4	search with cache (only 1: intros; only 1: apply Qreduction.Qred_correct).	0.0599961280823	21
Coq.QArith.QreductionX.Qplus'_comp_Proper	40	0.3.1.1.0	search with cache (only 1: intros; only 1: apply Qeq_bool_iff; only 1: rewrite H, H0; only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.0412859916687	10
Coq.QArith.QreductionX.Qmult'_comp_Proper	40	0.1.0	search with cache (only 1: intros; only 1: rewrite H, H0; only 1: auto with qarith).	0.0290150642395	4
Coq.QArith.QreductionX.Qminus'_comp_Proper	40	0.2.0	search with cache (only 1: intros; only 1: rewrite H, H0; only 1: auto with qarith).	0.0272657871246	5
Coq.QArith.QreductionX.Qred_opp	40	0.0.0.0.0.0.0.1.4	search with cache (only 1: simpl; only 1: intros (n, d); only 1: simpl; only 1: rewrite Z.ggcd_opp; only 1: case Z.ggcd; only 1: intros p1 (p2, p3); only 1: simpl; only 1: unfold Qopp; only 1: auto).	5.97585201263	571
Coq.QArith.QreductionX.Qred_compare	40	0.0.2.1.1.0	search with cache (only 1: intros x y; only 1: symmetry; only 1: symmetry; only 1: apply Qcompare_comp; only 1: now rewrite !Qred_correct; only 1: now rewrite !Qred_correct).	0.0855839252472	14
Coq.QArith.QreductionX.Qred_le	40	0	search with cache (only 1: now rewrite !Qle_alt, <- Qreduction.Qred_compare).	0.0131380558014	1
Coq.QArith.QreductionX.Qred_lt	40
Coq.QArith.QrealsX.IZR_nz	40	0	search with cache (only 1: auto with real).	0.0152459144592	1
Coq.QArith.QrealsX.eqR_Qeq	40
Coq.QArith.QrealsX.Qeq_eqR	40
Coq.QArith.QrealsX.Rle_Qle	40
Coq.QArith.QrealsX.Qle_Rle	40
Coq.QArith.QrealsX.Rlt_Qlt	40
Coq.QArith.QrealsX.Qlt_Rlt	40
Coq.QArith.QrealsX.Q2R_plus	40
Coq.QArith.QrealsX.Q2R_mult	40	0.0.2.0.2.0.0	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: simpl; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	1.4745490551	436
Coq.QArith.QrealsX.Q2R_opp	40
Coq.QArith.QrealsX.Q2R_minus	40
Coq.QArith.QrealsX.Q2R_inv	40
Coq.QArith.QrealsX.Q2R_div	40
Coq.QArith.QOrderedTypeX.Q_as_OT.lt_strorder	40
Coq.QArith.QOrderedTypeX.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0773079395294	3
Coq.QArith.QroundX.Qopp_lt_compat	40
Coq.QArith.QroundX.Qfloor_Z	40	7.0	search with cache (only 1: simpl; only 1: apply Z.div_1_r).	0.042543888092	19
Coq.QArith.QroundX.Qceiling_Z	40
Coq.QArith.QroundX.Qfloor_le	40
Coq.QArith.QroundX.Qle_ceiling	40
Coq.QArith.QroundX.Qle_floor_ceiling	40	0.0.1.1.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.189289808273	8
Coq.QArith.QroundX.Qlt_floor	40
Coq.QArith.QroundX.Qceiling_lt	40
Coq.QArith.QroundX.Qfloor_resp_le	40
Coq.QArith.QroundX.Qceiling_resp_le	40
Coq.QArith.QroundX.Qfloor_comp_Proper	40
Coq.QArith.QroundX.Qceiling_comp_Proper	40	2.3.0.0.2.0.0.0.1	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: symmetry in H; only 1: auto with *).	7.44157886505	2495
Coq.QArith.QroundX.Zdiv_Qdiv	40
Coq.Classes.DecidableClassX.Decidable_sound	40
Coq.Classes.DecidableClassX.Decidable_complete	40
Coq.Classes.DecidableClassX.Decidable_sound_alt	40	1.0.2.26	search with cache (only 1: intros a n; only 1: case n; only 1: Bool.destr_bool; only 1: intuition).	8.32563114166	6244
Coq.Classes.DecidableClassX.Decidable_complete_alt	40	1.8.2.1.0	search with cache (only 1: intros P [wit spec] Hd; only 1: destruct wit; only 1: intuition; only 1: Bool.destr_bool; only 1: intuition).	2.25312209129	778
Coq.Classes.DecidableClassX.Decidable_eq_bool_obligation_1	40	0.7.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: intuition; only 1: tauto).	0.452769994736	174
Coq.Classes.DecidableClassX.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClassX.Decidable_le_nat_obligation_1	40	10	search with cache (only 1: apply Nat.leb_le).	0.144855976105	66
Coq.Classes.DecidableClassX.Decidable_eq_Z_obligation_1	40
Coq.Classes.RelationClassesX.complement_inverse	40	0	search with cache (only 1: reflexivity).	0.0125720500946	1
Coq.Classes.RelationClassesX.StrictOrder_Asymmetric	40	13	search with cache (only 1: firstorder).	0.0291199684143	60
Coq.Classes.RelationClassesX.subrelation_symmetric	40	4.0.0	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0312821865082	17
Coq.Classes.RelationClassesX.flip_Reflexive	40	0	search with cache (only 1: tauto).	0.0115370750427	1
Coq.Classes.RelationClassesX.flip_Antisymmetric	40	4.1.1	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0258140563965	11
Coq.Classes.RelationClassesX.flip_PreOrder	40	4	search with cache (only 1: firstorder).	0.0352509021759	5
Coq.Classes.RelationClassesX.flip_StrictOrder	40	0.4	search with cache (only 1: unfold flip in *; only 1: firstorder).	0.0176718235016	6
Coq.Classes.RelationClassesX.flip_PER	40	7	search with cache (only 1: firstorder).	0.0348930358887	8
Coq.Classes.RelationClassesX.flip_Equivalence	40	5	search with cache (only 1: firstorder).	0.0339438915253	6
Coq.Classes.RelationClassesX.complement_Irreflexive	40	14.5	search with cache (only 1: hnf; only 1: firstorder).	0.272909164429	440
Coq.Classes.RelationClassesX.complement_Symmetric	40	12	search with cache (only 1: firstorder).	0.07994389534	103
Coq.Classes.RelationClassesX.predicate_equivalence_equivalence_obligation_1	40	1.2.2.17.1	search with cache (only 1: induction l; only 1: split; only 1: now subst; only 1: now subst; only 1: firstorder).	0.943864107132	701
Coq.Classes.RelationClassesX.predicate_equivalence_equivalence_obligation_2	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: <Coq.Strings.String.t_eqb>; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.0314290523529	5
Coq.Classes.RelationClassesX.predicate_equivalence_equivalence_obligation_3	40	0.3.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	1.44969701767	23
Coq.Classes.RelationClassesX.predicate_implication_preorder_obligation_1	40	1.0.0.5	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: firstorder).	0.0252721309662	11
Coq.Classes.RelationClassesX.predicate_implication_preorder_obligation_2	40	0.2.0.0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.306543827057	8
Coq.Classes.RelationClassesX.relation_equivalence_equivalence	40
Coq.Classes.RelationClassesX.relation_implication_preorder	40	2.2.6.0.0.1.9	search with cache (only 1: constructor 1; only 1: intros x y H; only 1: firstorder; only 1: hnf; only 1: red; only 1: intros; only 1: auto).	3.84275388718	1688
Coq.Classes.RelationClassesX.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0218698978424	1
Coq.Classes.RelationClassesX.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0405690670013	1
Coq.Classes.RelationClassesX.subrelation_partial_order_obligation_1	40	7	search with cache (only 1: firstorder).	0.163208961487	17
Coq.Classes.SetoidClassX.setoid_refl	40	0	search with cache (only 1: simpl_relation).	0.0261070728302	1
Coq.Classes.SetoidClassX.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0210328102112	1
Coq.Classes.SetoidClassX.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0213260650635	1
Coq.Classes.SetoidClassX.nequiv_equiv_trans	40	0.14.7.5.10	search with cache (only 1: intro n; only 1: intros m IH; only 1: destruct m; only 1: simpl; only 1: firstorder).	12.0621299744	14987
Coq.Classes.SetoidClassX.equiv_nequiv_trans	40	0.0.11.5.0.2.2	search with cache (only 1: intro; only 1: intro y; only 1: intro; only 1: intros; only 1: rewrite H; only 1: intro; only 1: contradiction).	7.02041077614	5011
Coq.Classes.RelationPairsX.RelCompFun_Reflexive	40	0	search with cache (only 1: firstorder).	0.0218179225922	1
Coq.Classes.RelationPairsX.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0225460529327	1
Coq.Classes.RelationPairsX.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0468199253082	1
Coq.Classes.RelationPairsX.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.019228219986	1
Coq.Classes.RelationPairsX.RelProd_Reflexive	40	0	search with cache (only 1: firstorder).	0.0220880508423	1
Coq.Classes.RelationPairsX.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0947442054749	1
Coq.Classes.RelationPairsX.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.36030292511	1
Coq.Classes.RelationPairsX.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0285151004791	1
Coq.Classes.RelationPairsX.SndRel_ProdRel	40	0.3.10	search with cache (only 1: unfold relation_equivalence in *; only 1: red; only 1: firstorder).	0.123836040497	101
Coq.Classes.RelationPairsX.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0236599445343	1
Coq.Classes.RelationPairsX.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0212740898132	1
Coq.Classes.RelationPairsX.pair_compat	40	0	search with cache (only 1: firstorder).	0.0244147777557	1
Coq.Classes.RelationPairsX.fst_compat	40	0	search with cache (only 1: firstorder).	0.0244030952454	1
Coq.Classes.RelationPairsX.snd_compat	40	0	search with cache (only 1: firstorder).	0.0242879390717	1
Coq.Classes.RelationPairsX.RelCompFun_compat	40	1.2.0	search with cache (only 1: compute in *; only 1: intros; only 1: CRelationClasses.simpl_crelation).	0.0427448749542	6
Coq.Classes.EquivalenceX.equiv_transitive_obligation_1	40	5.7.1.27	search with cache (only 1: intros x y Hin; only 1: firstorder; only 1: rewrite H, H0; only 1: intuition).	11.3342931271	14844
Coq.Classes.EquivalenceX.respecting_equiv_obligation_3	40	2.1.13.0.0	search with cache (only 1: intros; only 1: intros f g h H H' x y Rxy; only 1: rewrite H; only 1: program_simpl; only 1: simpl_relation).	9.43240904808	1371
Coq.Classes.EquivalenceX.pointwise_reflexive	40	0	search with cache (only 1: firstorder).	0.0141680240631	1
Coq.Classes.EquivalenceX.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0181639194489	1
Coq.Classes.EquivalenceX.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0454938411713	1
Coq.Classes.EquivalenceX.pointwise_equivalence	40	0.0.0.0	search with cache (only 1: split; only 1: apply _; only 1: apply _; only 1: apply _).	0.0273571014404	4
Coq.Classes.EquivDecX.unit_eqdec_obligation_1	40	23.48.94	search with cache (only 1: destruct y; only 1: destruct x; only 1: now subst).	34.9853618145	82508
Coq.Classes.EquivDecX.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDecX.list_eqdec_obligation_5	40
Coq.Classes.Morphisms_RelationsX.relation_conjunction_morphism	40	1.0.0.0	search with cache (only 1: simpl_relation; only 1: unfold relation_equivalence in *; only 1: compute; only 1: firstorder).	0.193697929382	5
Coq.Classes.Morphisms_RelationsX.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.047660112381	1
Coq.Classes.Morphisms_RelationsX.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0112099647522	1
Coq.Classes.Morphisms_RelationsX.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0121099948883	3
Coq.Classes.Morphisms_RelationsX.relation_equivalence_pointwise	40	0.0	search with cache (only 1: simpl_relation; only 1: firstorder).	0.139556884766	2
Coq.Classes.Morphisms_RelationsX.subrelation_pointwise	40	2.1.0	search with cache (only 1: intro; only 1: intro; only 1: firstorder).	0.0239329338074	6
Coq.Classes.Morphisms_RelationsX.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.0109860897064	1
Coq.Classes.CRelationClassesX.complement_inverse	40	0	search with cache (only 1: tauto).	0.0234489440918	1
Coq.Classes.CRelationClassesX.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClassesX.subrelation_symmetric	40	2.9	search with cache (only 1: compute; only 1: auto with arith).	0.0565521717072	49
Coq.Classes.CRelationClassesX.flip_Reflexive	40	3.0	search with cache (only 1: hnf; only 1: tauto).	0.0215659141541	5
Coq.Classes.CRelationClassesX.flip_Antisymmetric	40	0.1	search with cache (only 1: intros x; only 1: intuition).	0.0276389122009	3
Coq.Classes.CRelationClassesX.flip_PreOrder	40	45	search with cache (only 1: firstorder).	5.46792984009	8590
Coq.Classes.CRelationClassesX.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0745599269867	2
Coq.Classes.CRelationClassesX.flip_PER	40	30	search with cache (only 1: firstorder).	3.37491583824	451
Coq.Classes.CRelationClassesX.flip_Equivalence	40	2	search with cache (only 1: firstorder).	0.0575850009918	3
Coq.Classes.CRelationClassesX.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.0201511383057	2
Coq.Classes.CRelationClassesX.complement_Symmetric	40	4.2.0	search with cache (only 1: intros x y H'; only 1: hnf; only 1: firstorder).	0.042172908783	14
Coq.Classes.CRelationClassesX.iffT_Reflexive	40	8	search with cache (only 1: now f_equal).	0.024521112442	18
Coq.Classes.CRelationClassesX.iffT_Symmetric	40	8	search with cache (only 1: now f_equal).	0.104363918304	17
Coq.Classes.CRelationClassesX.iffT_Transitive	40	0.10.2	search with cache (only 1: intros a b; only 1: intros; only 1: firstorder).	0.295635938644	223
Coq.Classes.CRelationClassesX.relation_equivalence_equivalence	40	1.0.0.5.0.1.23.22	search with cache (only 1: compute; only 1: split; only 1: firstorder; only 1: firstorder; only 1: intro x; only 1: intros; only 1: specialize (X x0 y0); only 1: firstorder).	6.38730978966	2799
Coq.Classes.CRelationClassesX.relation_implication_preorder	40	4	search with cache (only 1: firstorder).	0.0220620632172	5
Coq.Classes.CRelationClassesX.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.039381980896	1
Coq.Classes.CRelationClassesX.PartialOrder_inverse	40	0.5	search with cache (only 1: pose proof (@RelationClasses.partial_order_equivalence _ _ _ _ _) as poe; only 1: firstorder).	0.099221944809	7
Coq.Classes.SetoidDecX.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDecX.bool_function_eqdec_obligation_1	40
Coq.PArith.BinPosX.Pos.eq_dec	40	0	search with cache (only 1: decide equality).	0.0344069004059	1
Coq.PArith.BinPosX.Pos.xI_succ_xO	40	0	search with cache (only 1: reflexivity).	0.022057056427	1
Coq.PArith.BinPosX.Pos.succ_discr	40	0	search with cache (only 1: now destruct p).	0.0390100479126	1
Coq.PArith.BinPosX.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0192940235138	1
Coq.PArith.BinPosX.Pos.succ_pred_double	40	1.0.0.0.0.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.061774969101	9
Coq.PArith.BinPosX.Pos.pred_double_succ	40	0.0.0.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0644879341125	9
Coq.PArith.BinPosX.Pos.double_succ	40	0	search with cache (only 1: now destruct p).	0.0211369991302	1
Coq.PArith.BinPosX.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0355339050293	1
Coq.PArith.BinPosX.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0379638671875	1
Coq.PArith.BinPosX.Pos.pred_succ	40	1.0.0.0.1.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: apply BinPos.Pos.pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.096529006958	9
Coq.PArith.BinPosX.Pos.succ_pred_or	40	0.0.2.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: right; only 1: apply BinPos.Pos.succ_pred_double; only 1: simpl; only 1: auto).	0.123112916946	16
Coq.PArith.BinPosX.Pos.succ_pred	40	0.1.0.0.1.0.1.1.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: intros H; only 1: simpl; only 1: apply BinPos.Pos.succ_pred_double; only 1: intros H; only 1: simpl; only 1: now destruct H).	2.88463711739	1168
Coq.PArith.BinPosX.Pos.succ_inj	40
Coq.PArith.BinPosX.Pos.pred_N_succ	40	3.0.3.1.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply BinPos.Pos.pred_double_succ; only 1: now destruct p; only 1: simpl; only 1: solve_proper).	4.16483688354	1195
Coq.PArith.BinPosX.Pos.add_1_r	40	2	search with cache (only 1: now destruct p).	0.0228600502014	3
Coq.PArith.BinPosX.Pos.add_1_l	40	2	search with cache (only 1: now destruct p).	0.0243129730225	3
Coq.PArith.BinPosX.Pos.add_carry_spec	40
Coq.PArith.BinPosX.Pos.add_comm	40
Coq.PArith.BinPosX.Pos.add_succ_r	40
Coq.PArith.BinPosX.Pos.add_succ_l	40	0.1	search with cache (only 1: rewrite BinPos.Pos.add_comm, (BinPos.Pos.add_comm p); only 1: apply BinPos.Pos.add_succ_r).	0.0360209941864	3
Coq.PArith.BinPosX.Pos.add_no_neutral	40	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0	search with cache (only 1: revert q; only 1: induction p as [p IHp| p IHp| ]; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: apply (IHp q H); only 1: destr_eq H; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: apply (IHp q H); only 1: destr_eq H; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: destr_eq H).	2.95194196701	1633
Coq.PArith.BinPosX.Pos.add_carry_add	40	0.1.0	search with cache (only 1: intros H; only 1: apply BinPos.Pos.succ_inj; only 1: now rewrite <- 2!BinPos.Pos.add_carry_spec).	0.0842418670654	4
Coq.PArith.BinPosX.Pos.add_reg_r	40
Coq.PArith.BinPosX.Pos.add_reg_l	40	0.1	search with cache (only 1: rewrite 2!(BinPos.Pos.add_comm p); only 1: now apply BinPos.Pos.add_reg_r).	0.0326180458069	3
Coq.PArith.BinPosX.Pos.add_cancel_r	40	1.5.0	search with cache (only 1: split; only 1: apply BinPos.Pos.add_reg_r; only 1: congruence).	0.163610935211	26
Coq.PArith.BinPosX.Pos.add_cancel_l	40	1.2.0	search with cache (only 1: split; only 1: apply BinPos.Pos.add_reg_l; only 1: congruence).	0.18422794342	31
Coq.PArith.BinPosX.Pos.add_carry_reg_r	40	0.0.2	search with cache (only 1: intros H; only 1: apply BinPos.Pos.add_reg_r with (r := r); only 1: now apply BinPos.Pos.add_carry_add).	0.034686088562	5
Coq.PArith.BinPosX.Pos.add_carry_reg_l	40	0.5.0.1	search with cache (only 1: intros H; only 1: apply BinPos.Pos.add_reg_r with (r := p); only 1: rewrite (BinPos.Pos.add_comm r), (BinPos.Pos.add_comm q); only 1: now apply add_carry_add).	0.0980770587921	15
Coq.PArith.BinPosX.Pos.add_assoc	40
Coq.PArith.BinPosX.Pos.add_xO	40	0	search with cache (only 1: now destruct p, q).	0.0270349979401	1
Coq.PArith.BinPosX.Pos.add_xI_pred_double	40	0.0	search with cache (only 1: change p~1 with (p~0 + 1); only 1: now rewrite <- BinPos.Pos.add_assoc, BinPos.Pos.add_1_l, BinPos.Pos.succ_pred_double).	0.0307171344757	2
Coq.PArith.BinPosX.Pos.add_xO_pred_double	40
Coq.PArith.BinPosX.Pos.add_diag	40	1.0.0.0.0.0.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now rewrite ?BinPos.Pos.add_carry_spec, ?IHp; only 1: simpl; only 1: now rewrite ?BinPos.Pos.add_carry_spec, ?IHp; only 1: simpl; only 1: now f_equal).	0.0640180110931	9
Coq.PArith.BinPosX.Pos.peano_rect_succ	40	0.1.0.0.4.2.1.0	search with cache (only 1: revert P a f; only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite IHp; only 1: trivial; only 1: simpl; only 1: trivial).	3.01045012474	1536
Coq.PArith.BinPosX.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0252108573914	2
Coq.PArith.BinPosX.Pos.peano_case	40	0.1.2.0.0	search with cache (only 1: induction p using BinPos.Pos.peano_ind; only 1: apply BinPos.Pos.peano_ind; only 1: trivial; only 1: trivial; only 1: trivial).	0.111123085022	57
Coq.PArith.BinPosX.Pos.eq_dep_eq_positive	40	0.0	search with cache (only 1: apply eq_dep_eq_dec; only 1: decide equality).	0.0391809940338	2
Coq.PArith.BinPosX.Pos.PeanoViewUnique	40
Coq.PArith.BinPosX.Pos.peano_equiv	40
Coq.PArith.BinPosX.Pos.mul_1_l	40	0	search with cache (only 1: now f_equal).	0.0185110569	1
Coq.PArith.BinPosX.Pos.mul_1_r	40	0.0.1.0.1.3	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: easy).	0.182551145554	62
Coq.PArith.BinPosX.Pos.mul_xO_r	40	5.3.0.1.3.0.0.1.0	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: trivial).	29.8407051563	12878
Coq.PArith.BinPosX.Pos.mul_xI_r	40	1.0.4.0.0.0.0.0.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: now rewrite IHp, 2!BinPos.Pos.add_assoc, (BinPos.Pos.add_comm p); only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: congruence).	2.93655204773	773
Coq.PArith.BinPosX.Pos.mul_comm	40
Coq.PArith.BinPosX.Pos.mul_add_distr_l	40
Coq.PArith.BinPosX.Pos.mul_add_distr_r	40	1.0	search with cache (only 1: rewrite 3!(BinPos.Pos.mul_comm _ r); only 1: apply BinPos.Pos.mul_add_distr_l).	0.0347540378571	3
Coq.PArith.BinPosX.Pos.mul_assoc	40	0.0.1.0.0.0.1.0.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?IHp; only 1: now rewrite BinPos.Pos.mul_add_distr_r; only 1: simpl; only 1: rewrite ?IHp; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.767091989517	175
Coq.PArith.BinPosX.Pos.mul_succ_l	40	2.1.0.1.0.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now rewrite IHp, BinPos.Pos.add_assoc, BinPos.Pos.add_diag, <- BinPos.Pos.add_xO; only 1: simpl; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: apply BinPos.Pos.add_diag).	0.813323974609	184
Coq.PArith.BinPosX.Pos.mul_succ_r	40	5.3.0	search with cache (only 1: rewrite BinPos.Pos.mul_comm, BinPos.Pos.mul_succ_l; only 1: f_equal; only 1: apply BinPos.Pos.mul_comm).	0.224843025208	73
Coq.PArith.BinPosX.Pos.mul_xI_mul_xO_discr	40	0.0.1.0.0.0.2	search with cache (only 1: induction r; only 1: discriminate; only 1: rewrite 2!BinPos.Pos.mul_xO_r; only 1: intro H; only 1: destr_eq ltac:(H); only 1: auto; only 1: discriminate).	0.410669088364	91
Coq.PArith.BinPosX.Pos.mul_xO_discr	40	0.0.0.0.0.3	search with cache (only 1: induction q; only 1: discriminate; only 1: rewrite BinPos.Pos.mul_xO_r; only 1: injection; only 1: auto; only 1: discriminate).	0.0547931194305	9
Coq.PArith.BinPosX.Pos.mul_reg_r	40
Coq.PArith.BinPosX.Pos.mul_reg_l	40	2.3	search with cache (only 1: rewrite 2!(BinPos.Pos.mul_comm r); only 1: apply BinPos.Pos.mul_reg_r).	0.123793840408	41
Coq.PArith.BinPosX.Pos.mul_cancel_r	40	1.2.0	search with cache (only 1: split; only 1: apply BinPos.Pos.mul_reg_r; only 1: congruence).	0.134285926819	33
Coq.PArith.BinPosX.Pos.mul_cancel_l	40	1.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(BinPos.Pos.mul_comm r); only 1: apply BinPos.Pos.mul_reg_r; only 1: congruence).	0.123241186142	36
Coq.PArith.BinPosX.Pos.mul_eq_1_l	40	0	search with cache (only 1: now destruct p, q).	0.0503871440887	1
Coq.PArith.BinPosX.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0440690517426	1
Coq.PArith.BinPosX.Pos.square_xO	40	0.0	search with cache (only 1: simpl; only 1: now rewrite BinPos.Pos.mul_comm).	0.0234320163727	2
Coq.PArith.BinPosX.Pos.square_xI	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: simpl; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: simpl; only 1: f_equal; only 1: rewrite BinPos.Pos.add_assoc, BinPos.Pos.add_diag; only 1: simpl; only 1: now rewrite BinPos.Pos.add_comm).	0.263906002045	32
Coq.PArith.BinPosX.Pos.iter_swap_gen	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp).	0.728572130203	166
Coq.PArith.BinPosX.Pos.iter_swap	40	0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: now apply BinPos.Pos.iter_swap_gen).	0.0349581241608	4
Coq.PArith.BinPosX.Pos.iter_succ	40	0.0.0.0.0.0.1.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros; only 1: simpl; only 1: now rewrite !IHp, BinPos.Pos.iter_swap; only 1: intros; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl; only 1: trivial).	0.507249116898	120
Coq.PArith.BinPosX.Pos.iter_succ_r	40	0.0	search with cache (only 1: intros; only 1: now rewrite BinPos.Pos.iter_succ, BinPos.Pos.iter_swap).	0.0299458503723	2
Coq.PArith.BinPosX.Pos.iter_add	40	0.0.0.0.0	search with cache (only 1: induction p using BinPos.Pos.peano_ind; only 1: intros; only 1: now rewrite BinPos.Pos.add_1_l, BinPos.Pos.iter_succ; only 1: intros; only 1: now rewrite BinPos.Pos.add_succ_l, !BinPos.Pos.iter_succ, IHp).	0.0909531116486	5
Coq.PArith.BinPosX.Pos.iter_ind	40	0.1.0.0	search with cache (only 1: induction p using BinPos.Pos.peano_ind; only 1: trivial; only 1: rewrite BinPos.Pos.iter_succ; only 1: auto).	0.0670490264893	5
Coq.PArith.BinPosX.Pos.iter_invariant	40	0.0.0.1	search with cache (only 1: intros; only 1: apply BinPos.Pos.iter_ind with (P := fun _ => Inv); only 1: auto; only 1: auto).	0.686619997025	81
Coq.PArith.BinPosX.Pos.pow_1_r	40	4.0.0	search with cache (only 1: unfold BinPos.Pos.pow; only 1: simpl; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0865039825439	17
Coq.PArith.BinPosX.Pos.pow_succ_r	40	0.0	search with cache (only 1: unfold BinPos.Pos.pow; only 1: now rewrite BinPos.Pos.iter_succ).	0.0274739265442	2
Coq.PArith.BinPosX.Pos.square_spec	40	0.0.0.0.0.0.0.2	search with cache (only 1: induction p; only 1: rewrite BinPos.Pos.square_xI; only 1: simpl; only 1: now rewrite IHp; only 1: rewrite BinPos.Pos.square_xO; only 1: simpl; only 1: now rewrite IHp; only 1: trivial).	0.0639538764954	10
Coq.PArith.BinPosX.Pos.sub_mask_succ_r	40
Coq.PArith.BinPosX.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPosX.Pos.sub_mask_spec	40
Coq.PArith.BinPosX.Pos.sub_mask_nul_iff	40	0.0.0.0.0.0.2.1.0.0	search with cache (only 1: split; only 1: now case BinPos.Pos.sub_mask_spec; only 1: intros <-; only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.993227005005	294
Coq.PArith.BinPosX.Pos.sub_mask_diag	40	2	search with cache (only 1: now apply BinPos.Pos.sub_mask_nul_iff).	0.0289978981018	3
Coq.PArith.BinPosX.Pos.sub_mask_add	40	0.0.0.0	search with cache (only 1: case BinPos.Pos.sub_mask_spec; only 1: congruence; only 1: congruence; only 1: congruence).	0.0472438335419	4
Coq.PArith.BinPosX.Pos.sub_mask_add_diag_l	40	0.1.0.0.0.0.0.2.1.0	search with cache (only 1: case BinPos.Pos.sub_mask_spec; only 1: intros H; only 1: rewrite BinPos.Pos.add_comm in H; only 1: elim (BinPos.Pos.add_no_neutral _ _ H); only 1: intros r H; only 1: apply BinPos.Pos.add_cancel_l in H; only 1: now f_equal; only 1: intros r H; only 1: rewrite <- BinPos.Pos.add_assoc, BinPos.Pos.add_comm in H; only 1: elim (BinPos.Pos.add_no_neutral _ _ H)).	0.77389216423	305
Coq.PArith.BinPosX.Pos.sub_mask_pos_iff	40	0.6.0.0.0.0.0	search with cache (only 1: split; only 1: case sub_mask_spec; only 1: congruence; only 1: congruence; only 1: congruence; only 1: intros <-; only 1: apply BinPos.Pos.sub_mask_add_diag_l).	2.57761216164	1033
Coq.PArith.BinPosX.Pos.sub_mask_add_diag_r	40	0.0.1.0.0.4.1.2.0	search with cache (only 1: case BinPos.Pos.sub_mask_spec; only 1: intros H; only 1: symmetry in H; only 1: rewrite BinPos.Pos.add_comm in H; only 1: elim (BinPos.Pos.add_no_neutral _ _ H); only 1: intros r H; only 1: rewrite <- BinPos.Pos.add_assoc, BinPos.Pos.add_comm in H; only 1: elim (BinPos.Pos.add_no_neutral _ _ H); only 1: congruence).	1.4684779644	709
Coq.PArith.BinPosX.Pos.sub_mask_neg_iff	40	0.3.0.5.0.0.0.1	search with cache (only 1: split; only 1: case BinPos.Pos.sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: now exists r; only 1: intros (r, <-); only 1: apply BinPos.Pos.sub_mask_add_diag_r).	1.64510798454	835
Coq.PArith.BinPosX.Pos.eqb_eq	40
Coq.PArith.BinPosX.Pos.ltb_lt	40
Coq.PArith.BinPosX.Pos.leb_le	40
Coq.PArith.BinPosX.Pos.compare_cont_spec	40
Coq.PArith.BinPosX.Pos.compare_cont_Eq	40	1.0.0	search with cache (only 1: rewrite BinPos.Pos.compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	0.039657831192	4
Coq.PArith.BinPosX.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPosX.Pos.compare_cont_Lt_Lt	40
Coq.PArith.BinPosX.Pos.compare_cont_Gt_Lt	40	0.0.0.0.3.0	search with cache (only 1: rewrite BinPos.Pos.compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.514936923981	50
Coq.PArith.BinPosX.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPosX.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.4	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.162849903107	39
Coq.PArith.BinPosX.Pos.compare_cont_Lt_not_Gt	40	0	search with cache (only 1: apply not_iff_compat, BinPos.Pos.compare_cont_Lt_Gt).	0.0200009346008	1
Coq.PArith.BinPosX.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0781941413879	6
Coq.PArith.BinPosX.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0859479904175	6
Coq.PArith.BinPosX.Pos.compare_xO_xO	40	1	search with cache (only 1: reflexivity).	0.0226519107819	2
Coq.PArith.BinPosX.Pos.compare_xI_xI	40	1	search with cache (only 1: reflexivity).	0.0201110839844	2
Coq.PArith.BinPosX.Pos.compare_xI_xO	40	2	search with cache (only 1: exact (BinPos.Pos.compare_cont_spec p q Gt)).	0.154718875885	38
Coq.PArith.BinPosX.Pos.compare_xO_xI	40	2	search with cache (only 1: exact (BinPos.Pos.compare_cont_spec p q Lt)).	0.259443998337	37
Coq.PArith.BinPosX.Pos.compare_sub_mask	40
Coq.PArith.BinPosX.Pos.lt_iff_add	40	0.0.0.0.0.0	search with cache (only 1: unfold ltb, lt; only 1: rewrite <- BinPos.Pos.sub_mask_neg_iff, BinPos.Pos.compare_sub_mask; only 1: destruct sub_mask; only 1: now split; only 1: now split; only 1: now split).	0.0853500366211	6
Coq.PArith.BinPosX.Pos.gt_iff_add	40	0.0.0.0.5.0.0.0.2.0.0.3	search with cache (only 1: unfold gt, le, compare; only 1: rewrite BinPos.Pos.compare_sub_mask; only 1: split; only 1: case_eq (BinPos.Pos.sub_mask p q); only 1: discriminate; only 1: intros r Hr _; only 1: exists r; only 1: now apply BinPos.Pos.sub_mask_pos_iff; only 1: discriminate; only 1: intros (r, Hr); only 1: apply BinPos.Pos.sub_mask_pos_iff in Hr; only 1: now rewrite Hr).	4.07256102562	2257
Coq.PArith.BinPosX.Pos.compare_cont_refl	40	2	search with cache (only 1: now induction p).	0.0762240886688	40
Coq.PArith.BinPosX.Pos.compare_cont_antisym	40
Coq.PArith.BinPosX.Pos.compare_eq_iff	40	0.0.0.0.0	search with cache (only 1: rewrite BinPos.Pos.compare_sub_mask, <- BinPos.Pos.sub_mask_nul_iff; only 1: destruct sub_mask; only 1: now split; only 1: now split; only 1: now split).	0.0646471977234	5
Coq.PArith.BinPosX.Pos.compare_antisym	40	0.0	search with cache (only 1: unfold BinPos.Pos.compare; only 1: now rewrite BinPos.Pos.compare_cont_antisym).	0.0293419361115	2
Coq.PArith.BinPosX.Pos.compare_lt_iff	40	2.0	search with cache (only 1: unfold lt; only 1: now rewrite BinPos.Pos.compare_antisym, CompOpp_iff).	0.0736141204834	4
Coq.PArith.BinPosX.Pos.compare_le_iff	40	3	search with cache (only 1: reflexivity).	0.0740101337433	4
Coq.PArith.BinPosX.Pos.gt_lt_iff	40	1.0.2	search with cache (only 1: unfold ltb, lt; only 1: unfold gt; only 1: now rewrite BinPos.Pos.compare_antisym, CompOpp_iff).	0.0431020259857	6
Coq.PArith.BinPosX.Pos.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0369849205017	2
Coq.PArith.BinPosX.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0177900791168	1
Coq.PArith.BinPosX.Pos.ge_le_iff	40	1.0.0	search with cache (only 1: unfold leb, le; only 1: unfold ge; only 1: now rewrite BinPos.Pos.compare_antisym, CompOpp_iff).	0.0443680286407	4
Coq.PArith.BinPosX.Pos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0415210723877	2
Coq.PArith.BinPosX.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0186970233917	1
Coq.PArith.BinPosX.Pos.compare_succ_r	40
Coq.PArith.BinPosX.Pos.compare_succ_l	40
Coq.PArith.BinPosX.Pos.lt_succ_r	40	0.0.0.0.0.0.0.0.0.3.0.0.0	search with cache (only 1: unfold leb, le; only 1: generalize (BinPos.Pos.compare_succ_r p q); only 1: unfold lt; only 1: do 2 destruct compare; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	38.0560588837	6225
Coq.PArith.BinPosX.Pos.lt_succ_diag_r	40	1.0.10	search with cache (only 1: rewrite BinPos.Pos.lt_iff_add; only 1: exists 1; only 1: now rewrite BinPos.Pos.add_1_r).	2.02727413177	741
Coq.PArith.BinPosX.Pos.compare_succ_succ	40
Coq.PArith.BinPosX.Pos.le_1_l	40	10	search with cache (only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.712434053421	269
Coq.PArith.BinPosX.Pos.nlt_1_r	40	6	search with cache (only 1: now destruct p).	0.456328868866	41
Coq.PArith.BinPosX.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0794270038605	26
Coq.PArith.BinPosX.Pos.le_nlt	40	0.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0374979972839	2
Coq.PArith.BinPosX.Pos.lt_nle	40	0.1.0.1.1.0.0.1	search with cache (only 1: unfold lt, le; only 1: rewrite BinPos.Pos.compare_antisym; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: split; only 1: auto; only 1: split).	5.12175703049	740
Coq.PArith.BinPosX.Pos.lt_le_incl	40	3.3.1	search with cache (only 1: unfold lt, le; only 1: rewrite BinPos.Pos.compare_antisym; only 1: now do 2 destruct compare).	0.55096411705	44
Coq.PArith.BinPosX.Pos.lt_lt_succ	40
Coq.PArith.BinPosX.Pos.succ_lt_mono	40	0.2	search with cache (only 1: unfold lt, le; only 1: now rewrite BinPos.Pos.compare_succ_succ).	0.0303208827972	4
Coq.PArith.BinPosX.Pos.succ_le_mono	40
Coq.PArith.BinPosX.Pos.lt_trans	40	25	search with cache (only 1: BinPos.Pos.Private_Tac.order).	2.95260286331	660
Coq.PArith.BinPosX.Pos.lt_ind	40	14.3.0.2.1.3.2.5	search with cache (only 1: intros A n AB AS m; only 1: intros H; only 1: induction m using BinPos.Pos.peano_ind; only 1: elim (BinPos.Pos.nlt_1_r _ H); only 1: apply BinPos.Pos.lt_succ_r, BinPos.Pos.le_lteq in H; only 1: destruct H as [H| H]; only 1: auto; only 1: now subst).	20.041148901	13813
Coq.PArith.BinPosX.Pos.lt_strorder	40	35	search with cache (only 1: intuition).	0.823202848434	621
Coq.PArith.BinPosX.Pos.lt_compat	40	4.0.1.0	search with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: intuition).	0.182559967041	57
Coq.PArith.BinPosX.Pos.lt_total	40	1.0.1.2	search with cache (only 1: case (BinPos.Pos.compare_spec p q); only 1: intuition; only 1: now left; only 1: intuition).	0.520190000534	8
Coq.PArith.BinPosX.Pos.le_refl	40	7.1	search with cache (only 1: unfold le, ge; only 1: now rewrite BinPos.Pos.compare_refl).	0.645030975342	137
Coq.PArith.BinPosX.Pos.le_lt_trans	40
Coq.PArith.BinPosX.Pos.lt_le_trans	40
Coq.PArith.BinPosX.Pos.le_trans	40
Coq.PArith.BinPosX.Pos.le_succ_l	40
Coq.PArith.BinPosX.Pos.le_antisym	40
Coq.PArith.BinPosX.Pos.le_preorder	40	7.17	search with cache (only 1: compute; only 1: now intuition).	0.690317869186	334
Coq.PArith.BinPosX.Pos.le_partorder	40	11.0.0	search with cache (only 1: intros x y; only 1: change (x = y <-> BinPos.Pos.le x y /\ BinPos.Pos.le y x); only 1: intuition BinPos.Pos.Private_Tac.order).	3.88519501686	923
Coq.PArith.BinPosX.Pos.add_compare_mono_l	40	0.0.0.0.0.0.4	search with cache (only 1: revert p q r; only 1: induction p using BinPos.Pos.peano_ind; only 1: intros q r; only 1: rewrite 2!BinPos.Pos.add_1_l; only 1: apply BinPos.Pos.compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!BinPos.Pos.add_succ_l, BinPos.Pos.compare_succ_succ).	0.176248073578	45
Coq.PArith.BinPosX.Pos.add_compare_mono_r	40	2.2.0.1	search with cache (only 1: rewrite 2!(BinPos.Pos.add_comm _ p); only 1: rewrite BinPos.Pos.add_compare_mono_l; only 1: revert q r; only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.067498922348	19
Coq.PArith.BinPosX.Pos.lt_add_diag_r	40
Coq.PArith.BinPosX.Pos.add_lt_mono_l	40	2.1.2	search with cache (only 1: unfold ge, lt, compare; only 1: rewrite BinPos.Pos.add_compare_mono_l; only 1: apply iff_refl).	0.0834171772003	23
Coq.PArith.BinPosX.Pos.add_lt_mono_r	40	4.2.0	search with cache (only 1: unfold lt; only 1: rewrite BinPos.Pos.add_compare_mono_r; only 1: apply iff_refl).	0.0407688617706	9
Coq.PArith.BinPosX.Pos.add_lt_mono	40	4.6.0.0.3.2	search with cache (only 1: intros; only 1: apply BinPos.Pos.lt_trans with (p + s); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: trivial; only 1: now apply BinPos.Pos.add_lt_mono_r).	15.9014930725	5775
Coq.PArith.BinPosX.Pos.add_le_mono_l	40	3.0.0	search with cache (only 1: unfold lt, le; only 1: rewrite BinPos.Pos.add_compare_mono_l; only 1: apply iff_refl).	0.0342879295349	6
Coq.PArith.BinPosX.Pos.add_le_mono_r	40	4.2.0	search with cache (only 1: unfold le; only 1: rewrite BinPos.Pos.add_compare_mono_r; only 1: apply iff_refl).	0.0354650020599	9
Coq.PArith.BinPosX.Pos.add_le_mono	40	1.2.2.1	search with cache (only 1: intros; only 1: apply BinPos.Pos.le_trans with (p + s); only 1: now apply BinPos.Pos.add_le_mono_l; only 1: now apply BinPos.Pos.add_le_mono_r).	0.0659699440002	35
Coq.PArith.BinPosX.Pos.mul_compare_mono_l	40	2.0.0.0.0.0.1.0.0.0.0.0.0.2	search with cache (only 1: revert q r; only 1: induction p; only 1: simpl; only 1: intros q r; only 1: specialize (IHp q r); only 1: destruct (BinPos.Pos.compare_spec q r); only 1: subst; only 1: apply BinPos.Pos.compare_refl; only 1: now apply BinPos.Pos.add_lt_mono; only 1: now apply BinPos.Pos.lt_gt, BinPos.Pos.add_lt_mono, BinPos.Pos.gt_lt; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	10.80291605	4826
Coq.PArith.BinPosX.Pos.mul_compare_mono_r	40	0.5	search with cache (only 1: rewrite 2!(BinPos.Pos.mul_comm _ p); only 1: apply BinPos.Pos.mul_compare_mono_l).	0.312870025635	91
Coq.PArith.BinPosX.Pos.mul_lt_mono_l	40	4.1.0	search with cache (only 1: unfold lt; only 1: rewrite BinPos.Pos.mul_compare_mono_l; only 1: apply iff_refl).	0.0409390926361	8
Coq.PArith.BinPosX.Pos.mul_lt_mono_r	40	4.0.0	search with cache (only 1: unfold lt; only 1: rewrite BinPos.Pos.mul_compare_mono_r; only 1: apply iff_refl).	0.0400722026825	7
Coq.PArith.BinPosX.Pos.mul_lt_mono	40
Coq.PArith.BinPosX.Pos.mul_le_mono_l	40	4.1.0	search with cache (only 1: unfold le; only 1: rewrite BinPos.Pos.mul_compare_mono_l; only 1: apply iff_refl).	0.0414271354675	8
Coq.PArith.BinPosX.Pos.mul_le_mono_r	40	4.0.0	search with cache (only 1: unfold le; only 1: rewrite BinPos.Pos.mul_compare_mono_r; only 1: apply iff_refl).	0.0409648418427	7
Coq.PArith.BinPosX.Pos.mul_le_mono	40	4.7.5.3	search with cache (only 1: intros; only 1: apply BinPos.Pos.le_trans with (p * s); only 1: now apply BinPos.Pos.mul_le_mono_l; only 1: now apply BinPos.Pos.mul_le_mono_r).	4.65362906456	2220
Coq.PArith.BinPosX.Pos.lt_add_r	40	1.3	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0391299724579	6
Coq.PArith.BinPosX.Pos.lt_not_add_l	40
Coq.PArith.BinPosX.Pos.pow_gt_1	40
Coq.PArith.BinPosX.Pos.sub_1_r	40	1	search with cache (only 1: now destruct p).	0.0246179103851	2
Coq.PArith.BinPosX.Pos.pred_sub	40	1	search with cache (only 1: now destruct p).	0.0249288082123	2
Coq.PArith.BinPosX.Pos.sub_succ_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: unfold BinPos.Pos.sub; only 1: rewrite BinPos.Pos.sub_mask_succ_r, BinPos.Pos.sub_mask_carry_spec; only 1: destruct (BinPos.Pos.sub_mask p q) as [| [r| r| ]| ]; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0759339332581	8
Coq.PArith.BinPosX.Pos.sub_mask_pos'	40	7.5.0.0.0.5	search with cache (only 1: rewrite BinPos.Pos.lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: repeat split; only 1: now apply BinPos.Pos.sub_mask_pos_iff; only 1: congruence).	2.70805811882	1885
Coq.PArith.BinPosX.Pos.sub_mask_pos	40	5.0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply BinPos.Pos.sub_mask_pos_iff).	0.0687329769135	20
Coq.PArith.BinPosX.Pos.sub_add	40	6.5.2.0.3.2	search with cache (only 1: intros; only 1: destruct (BinPos.Pos.sub_mask_pos p q H) as (r, U); only 1: unfold BinPos.Pos.sub; only 1: rewrite U; only 1: rewrite BinPos.Pos.add_comm; only 1: now apply BinPos.Pos.sub_mask_pos_iff).	16.5279741287	8893
Coq.PArith.BinPosX.Pos.add_sub	40	4.0.3.9.6.1	search with cache (only 1: apply BinPos.Pos.add_reg_r with q; only 1: symmetry; only 1: rewrite BinPos.Pos.add_comm; only 1: rewrite BinPos.Pos.sub_add; only 1: now f_equal; only 1: auto using lt_add_r).	16.5598261356	9557
Coq.PArith.BinPosX.Pos.mul_sub_distr_l	40
Coq.PArith.BinPosX.Pos.mul_sub_distr_r	40	2.3.1	search with cache (only 1: intros H; only 1: rewrite 3!(BinPos.Pos.mul_comm _ r); only 1: now apply BinPos.Pos.mul_sub_distr_l).	0.0682950019836	21
Coq.PArith.BinPosX.Pos.sub_lt_mono_l	40
Coq.PArith.BinPosX.Pos.sub_compare_mono_l	40
Coq.PArith.BinPosX.Pos.sub_compare_mono_r	40
Coq.PArith.BinPosX.Pos.sub_lt_mono_r	40
Coq.PArith.BinPosX.Pos.sub_decr	40	0.6.0.0.9.8	search with cache (only 1: intros; only 1: apply BinPos.Pos.add_lt_mono_r with m; only 1: rewrite BinPos.Pos.sub_add; only 1: destruct H; only 1: apply BinPos.Pos.lt_add_r; only 1: now subst).	3.10915517807	2658
Coq.PArith.BinPosX.Pos.add_sub_assoc	40
Coq.PArith.BinPosX.Pos.sub_add_distr	40
Coq.PArith.BinPosX.Pos.sub_sub_distr	40
Coq.PArith.BinPosX.Pos.sub_xO_xO	40	0.0.0.1	search with cache (only 1: intros H; only 1: unfold BinPos.Pos.sub; only 1: simpl; only 1: now destruct (BinPos.Pos.sub_mask_pos n m H) as (p, ->)).	0.0866639614105	22
Coq.PArith.BinPosX.Pos.sub_xI_xI	40	0.0.0.1	search with cache (only 1: intros H; only 1: unfold BinPos.Pos.sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0703420639038	22
Coq.PArith.BinPosX.Pos.sub_xI_xO	40	1.0.0.1	search with cache (only 1: intros H; only 1: unfold BinPos.Pos.sub; only 1: simpl; only 1: now destruct (BinPos.Pos.sub_mask_pos n m) as (p, ->)).	0.118600130081	28
Coq.PArith.BinPosX.Pos.sub_xO_xI	40	0.0.0.0	search with cache (only 1: unfold BinPos.Pos.sub; only 1: simpl; only 1: rewrite BinPos.Pos.sub_mask_carry_spec; only 1: now destruct (BinPos.Pos.sub_mask n m) as [| [r| r| ]| ]).	0.0472569465637	4
Coq.PArith.BinPosX.Pos.sub_mask_neg_iff'	40	0.1	search with cache (only 1: rewrite BinPos.Pos.lt_iff_add; only 1: apply BinPos.Pos.sub_mask_neg_iff).	0.320389032364	49
Coq.PArith.BinPosX.Pos.sub_mask_neg	40	2.0	search with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.0645000934601	19
Coq.PArith.BinPosX.Pos.sub_le	40
Coq.PArith.BinPosX.Pos.sub_lt	40	19.1	search with cache (only 1: intros; only 1: now apply BinPos.Pos.sub_le, BinPos.Pos.lt_le_incl).	1.14060688019	881
Coq.PArith.BinPosX.Pos.sub_diag	40	1.0	search with cache (only 1: unfold BinPos.Pos.sub; only 1: now rewrite BinPos.Pos.sub_mask_diag).	0.0260889530182	3
Coq.PArith.BinPosX.Pos.size_nat_monotone	40
Coq.PArith.BinPosX.Pos.size_gt	40	0.0.0.0.0.0.0.2.7.3.2	search with cache (only 1: induction p; only 1: rewrite BinPos.Pos.xI_succ_xO; only 1: apply BinPos.Pos.le_succ_l in IHp; only 1: simpl; only 1: rewrite BinPos.Pos.pow_succ_r; only 1: now apply BinPos.Pos.le_succ_l; only 1: simpl; only 1: rewrite BinPos.Pos.pow_succ_r; only 1: easy; only 1: simpl; only 1: now rewrite pow_1_r).	4.40156197548	2349
Coq.PArith.BinPosX.Pos.size_le	40	0.0.0.0.0.4.0.7.3.1.0.1.4	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite BinPos.Pos.pow_succ_r; only 1: apply BinPos.Pos.mul_le_mono_l; only 1: apply BinPos.Pos.le_lteq; only 1: rewrite BinPos.Pos.xI_succ_xO; only 1: left; only 1: apply BinPos.Pos.lt_succ_r, IHp; only 1: simpl; only 1: rewrite BinPos.Pos.pow_succ_r; only 1: easy; only 1: simpl; only 1: easy).	25.4143400192	14326
Coq.PArith.BinPosX.Pos.max_l	40	26.0	search with cache (only 1: intros x y H; only 1: BinPos.Pos.solve_max).	21.7732288837	10359
Coq.PArith.BinPosX.Pos.max_r	40	0.0.1.1.0.1.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: now subst; only 1: apply le_nlt in H; only 1: intuition; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	2.95154690742	712
Coq.PArith.BinPosX.Pos.min_l	40	0.0.0.0.3.0.2	search with cache (only 1: unfold BinPos.Pos.le, BinPos.Pos.min; only 1: intros x y; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	1.15128612518	261
Coq.PArith.BinPosX.Pos.min_r	40	1.0.0.0.1.1.0.3.1	search with cache (only 1: intros x y H; only 1: unfold BinPos.Pos.min; only 1: case compare_spec; only 1: now subst; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: apply le_nlt in H; only 1: intuition).	6.48364496231	2310
Coq.PArith.BinPosX.Pos.max_1_l	40
Coq.PArith.BinPosX.Pos.max_1_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: rewrite BinPos.Pos.max_comm; only 1: apply BinPos.Pos.max_1_l).	0.133785009384	12
Coq.PArith.BinPosX.Pos.min_1_l	40	3.1.1.1	search with cache (only 1: rewrite BinPos.Pos.min_comm; only 1: rewrite BinPos.Pos.min_comm; only 1: rewrite BinPos.Pos.min_comm; only 1: apply BinPos.Pos.min_r, BinPos.Pos.le_1_l).	0.0605688095093	13
Coq.PArith.BinPosX.Pos.min_1_r	40	0.1	search with cache (only 1: rewrite BinPos.Pos.min_comm; only 1: apply BinPos.Pos.min_1_l).	0.026917219162	3
Coq.PArith.BinPosX.Pos.succ_max_distr	40	0.0.0.1	search with cache (only 1: symmetry; only 1: apply BinPos.Pos.max_monotone; only 1: intros x x'; only 1: apply BinPos.Pos.succ_le_mono).	0.0390391349792	5
Coq.PArith.BinPosX.Pos.succ_min_distr	40	0.0.0.1	search with cache (only 1: symmetry; only 1: apply BinPos.Pos.min_monotone; only 1: intros x x'; only 1: apply succ_le_mono).	0.0431749820709	5
Coq.PArith.BinPosX.Pos.add_max_distr_l	40	0.0.2	search with cache (only 1: apply BinPos.Pos.max_monotone; only 1: intros x x'; only 1: apply BinPos.Pos.add_le_mono_l).	0.0352668762207	5
Coq.PArith.BinPosX.Pos.add_max_distr_r	40	0.0.0.2	search with cache (only 1: rewrite 3!(BinPos.Pos.add_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0443298816681	6
Coq.PArith.BinPosX.Pos.add_min_distr_l	40	0.0.1	search with cache (only 1: apply BinPos.Pos.min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0366458892822	4
Coq.PArith.BinPosX.Pos.add_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(BinPos.Pos.add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0460541248322	5
Coq.PArith.BinPosX.Pos.mul_max_distr_l	40	0.0.1	search with cache (only 1: apply BinPos.Pos.max_monotone; only 1: intros x x'; only 1: apply BinPos.Pos.mul_le_mono_l).	0.0359790325165	4
Coq.PArith.BinPosX.Pos.mul_max_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(BinPos.Pos.mul_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0439219474792	5
Coq.PArith.BinPosX.Pos.mul_min_distr_l	40	0.0.2	search with cache (only 1: apply BinPos.Pos.min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0366749763489	5
Coq.PArith.BinPosX.Pos.mul_min_distr_r	40	0.0.0.2	search with cache (only 1: rewrite 3!(BinPos.Pos.mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0448679924011	6
Coq.PArith.BinPosX.Pos.iter_op_succ	40	0.0.0.0.0.0.0.2.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	1.04396700859	340
Coq.PArith.BinPosX.Pos.of_nat_succ	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: now rewrite IHn).	0.0571260452271	6
Coq.PArith.BinPosX.Pos.pred_of_succ_nat	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl BinPos.Pos.pred; only 1: rewrite BinPos.Pos.pred_succ; only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: now rewrite IHn).	0.0908188819885	10
Coq.PArith.BinPosX.Pos.succ_of_nat	40	0.1.2.0	search with cache (only 1: rewrite BinPos.Pos.of_nat_succ; only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0727090835571	20
Coq.PArith.BinPosX.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPosX.Pos.sqrtrem_spec	40
Coq.PArith.BinPosX.Pos.sqrt_spec	40
Coq.PArith.BinPosX.Pos.divide_add_cancel_l	40	5.0.1.0.1.0.0.0.0	search with cache (only 1: intros (s, Hs) (t, Ht); only 1: exists (t - s); only 1: rewrite BinPos.Pos.mul_sub_distr_r; only 1: rewrite <- Hs, <- Ht; only 1: symmetry; only 1: apply BinPos.Pos.add_sub; only 1: apply BinPos.Pos.mul_lt_mono_r with p; only 1: rewrite <- Hs, <- Ht, BinPos.Pos.add_comm; only 1: apply BinPos.Pos.lt_add_r).	2.19423317909	1091
Coq.PArith.BinPosX.Pos.divide_xO_xI	40	0.0.0.1.0.0.0.0.0.1.0.0	search with cache (only 1: intros (s, Hs) (t, Ht); only 1: destruct p; only 1: destruct s; only 1: easy; only 1: simpl in Hs; only 1: destr_eq Hs; only 1: now exists s; only 1: easy; only 1: rewrite BinPos.Pos.mul_xO_r in Ht; only 1: discriminate; only 1: exists q; only 1: now rewrite BinPos.Pos.mul_1_r).	5.26022005081	1053
Coq.PArith.BinPosX.Pos.divide_xO_xO	40	0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: split; only 1: intros (r, H); only 1: rewrite BinPos.Pos.mul_xO_r in H; only 1: destr_eq H; only 1: exists r; only 1: now f_equal; only 1: intros (r, H); only 1: exists r; only 1: rewrite BinPos.Pos.mul_xO_r; only 1: f_equal; only 1: now f_equal).	0.472398996353	151
Coq.PArith.BinPosX.Pos.divide_mul_l	40	0.1.0.0	search with cache (only 1: intros (s, H); only 1: exists (s * r); only 1: rewrite <- BinPos.Pos.mul_assoc, (BinPos.Pos.mul_comm r p), BinPos.Pos.mul_assoc; only 1: now f_equal).	0.0518598556519	5
Coq.PArith.BinPosX.Pos.divide_mul_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: rewrite BinPos.Pos.mul_comm; only 1: apply BinPos.Pos.divide_mul_l).	0.0666880607605	12
Coq.PArith.BinPosX.Pos.ggcdn_gcdn	40
Coq.PArith.BinPosX.Pos.ggcd_gcd	40	0.0.0	search with cache (only 1: unfold BinPos.Pos.ggcd, BinPos.Pos.gcd; only 1: intros; only 1: apply BinPos.Pos.ggcdn_gcdn).	0.0393950939178	3
Coq.PArith.BinPosX.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPosX.Pos.ggcd_correct_divisors	40	0.0.0	search with cache (only 1: unfold BinPos.Pos.ggcd; only 1: intros; only 1: apply BinPos.Pos.ggcdn_correct_divisors).	0.0425300598145	3
Coq.PArith.BinPosX.Pos.gcd_divide_l	40	1.1.0.0.0.1.0.0	search with cache (only 1: intros a b; only 1: rewrite <- BinPos.Pos.ggcd_gcd; only 1: generalize (BinPos.Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite BinPos.Pos.mul_comm).	0.701066017151	194
Coq.PArith.BinPosX.Pos.gcd_divide_r	40
Coq.PArith.BinPosX.Pos.gcdn_greatest	40
Coq.PArith.BinPosX.Pos.gcd_greatest	40
Coq.PArith.BinPosX.Pos.ggcd_greatest	40
Coq.PArith.BinPosX.Peqb_true_eq	40	1	search with cache (only 1: apply BinPos.Pos.eqb_eq).	0.0250599384308	2
Coq.PArith.BinPosX.Pcompare_eq_Gt	40	3.0	search with cache (only 1: unfold Pos.gt; only 1: reflexivity).	0.0292251110077	5
Coq.PArith.BinPosX.Pminus_mask_Gt	40
Coq.PArith.BinPosX.Pplus_minus	40	17.2.0	search with cache (only 1: intros; only 1: apply Pos.gt_lt in H; only 1: now rewrite BinPos.Pos.add_comm, BinPos.Pos.sub_add).	2.17013716698	2261
Coq.PArith.BinPosX.Dcompare	40	1.1.1.0	search with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0557479858398	7
Coq.PArith.PnatX.Pos2Nat.inj_succ	40	0.0.0.1	search with cache (only 1: unfold to_nat; only 1: rewrite iter_op_succ; only 1: trivial; only 1: apply Nat.add_assoc).	0.0299589633942	5
Coq.PArith.PnatX.Pos2Nat.inj_add	40	0.0.0.0.0.0	search with cache (only 1: revert q; only 1: induction p using peano_ind; only 1: intros q; only 1: now rewrite add_1_l, Pnat.Pos2Nat.inj_succ; only 1: intros q; only 1: now rewrite add_succ_l, !Pnat.Pos2Nat.inj_succ, IHp).	0.0329358577728	6
Coq.PArith.PnatX.Pos2Nat.inj_mul	40	0.1.0.0.0.0.0	search with cache (only 1: revert q; only 1: induction p using peano_ind; only 1: simpl; only 1: intros; only 1: trivial; only 1: intros; only 1: now rewrite mul_succ_l, Pnat.Pos2Nat.inj_add, IHp, Pnat.Pos2Nat.inj_succ).	0.0477950572968	8
Coq.PArith.PnatX.Pos2Nat.inj_1	40	0	search with cache (only 1: reflexivity).	0.0132768154144	1
Coq.PArith.PnatX.Pos2Nat.inj_xO	40	0	search with cache (only 1: exact (Pnat.Pos2Nat.inj_mul 2 p)).	0.0124168395996	1
Coq.PArith.PnatX.Pos2Nat.inj_xI	40	0	search with cache (only 1: now rewrite xI_succ_xO, Pnat.Pos2Nat.inj_succ, Pnat.Pos2Nat.inj_xO).	0.0150949954987	1
Coq.PArith.PnatX.Pos2Nat.is_succ	40	0.0.0.0.0	search with cache (only 1: induction p using peano_ind; only 1: now exists 0; only 1: destruct IHp as (n, Hn); only 1: exists (S n); only 1: now rewrite Pnat.Pos2Nat.inj_succ, Hn).	0.0338709354401	5
Coq.PArith.PnatX.Pos2Nat.is_pos	40	0.0	search with cache (only 1: destruct (Pnat.Pos2Nat.is_succ p) as (n, ->); only 1: auto with arith).	0.0197951793671	2
Coq.PArith.PnatX.Pos2Nat.id	40	0.0.0.0.0	search with cache (only 1: induction p using peano_ind; only 1: trivial; only 1: rewrite Pnat.Pos2Nat.inj_succ; only 1: rewrite <- IHp  at 2; only 1: now destruct (Pnat.Pos2Nat.is_succ p) as (n, ->)).	0.0359330177307	5
Coq.PArith.PnatX.Pos2Nat.inj	40	2.1	search with cache (only 1: intros; only 1: now rewrite <- (Pnat.Pos2Nat.id p), <- (Pnat.Pos2Nat.id q), H).	0.0211620330811	5
Coq.PArith.PnatX.Pos2Nat.inj_iff	40	0.1.2.1.0	search with cache (only 1: split; only 1: intros; only 1: now rewrite <- (Pnat.Pos2Nat.id p), <- (Pnat.Pos2Nat.id q), H; only 1: intros; only 1: now subst).	0.033637046814	9
Coq.PArith.PnatX.Pos2Nat.inj_compare	40
Coq.PArith.PnatX.Pos2Nat.inj_lt	40	0.0	search with cache (only 1: unfold lt; only 1: now rewrite Pnat.Pos2Nat.inj_compare, Nat.compare_lt_iff).	0.0799219608307	2
Coq.PArith.PnatX.Pos2Nat.inj_le	40	0.0	search with cache (only 1: unfold le; only 1: now rewrite Pnat.Pos2Nat.inj_compare, Nat.compare_le_iff).	0.0170998573303	2
Coq.PArith.PnatX.Pos2Nat.inj_gt	40	0.0	search with cache (only 1: unfold gt; only 1: now rewrite Pnat.Pos2Nat.inj_compare, Nat.compare_gt_iff).	0.0156741142273	2
Coq.PArith.PnatX.Pos2Nat.inj_ge	40	0.0	search with cache (only 1: unfold ge; only 1: now rewrite Pnat.Pos2Nat.inj_compare, Nat.compare_ge_iff).	0.0171320438385	2
Coq.PArith.PnatX.Pos2Nat.inj_sub	40	0.0.0.1.0	search with cache (only 1: intro H; only 1: apply Nat.add_cancel_r with (to_nat q); only 1: rewrite Nat.sub_add; only 1: now rewrite <- Pnat.Pos2Nat.inj_add, sub_add; only 1: now apply Nat.lt_le_incl, Pnat.Pos2Nat.inj_lt).	0.0285248756409	6
Coq.PArith.PnatX.Pos2Nat.inj_sub_max	40	0.0.0.0.0.0	search with cache (only 1: destruct (ltb_spec q p); only 1: rewrite <- Pnat.Pos2Nat.inj_sub by trivial; only 1: now destruct (Pnat.Pos2Nat.is_succ (p - q)) as (m, ->); only 1: rewrite sub_le by trivial; only 1: apply Pnat.Pos2Nat.inj_le, Nat.sub_0_le in H; only 1: now rewrite H).	0.0452580451965	6
Coq.PArith.PnatX.Pos2Nat.inj_pred	40	0.1	search with cache (only 1: intros; only 1: now rewrite <- sub_1_r, Pnat.Pos2Nat.inj_sub, Nat.sub_1_r).	0.0236310958862	3
Coq.PArith.PnatX.Pos2Nat.inj_pred_max	40	0.0	search with cache (only 1: rewrite <- sub_1_r, <- Nat.sub_1_r; only 1: apply Pnat.Pos2Nat.inj_sub_max).	0.017716884613	2
Coq.PArith.PnatX.Pos2Nat.inj_min	40	0.3.1.3.0.0.7.0.0.0	search with cache (only 1: unfold min; only 1: rewrite Pnat.Pos2Nat.inj_compare; only 1: case Nat.compare_spec; only 1: symmetry; only 1: apply Nat.min_l; only 1: now rewrite H; only 1: symmetry; only 1: now apply Nat.min_l, Nat.lt_le_incl; only 1: symmetry; only 1: now apply Nat.min_r, Nat.lt_le_incl).	5.01833510399	4315
Coq.PArith.PnatX.Pos2Nat.inj_max	40	0.2.3.2.0.6.4.0.0.0	search with cache (only 1: unfold max; only 1: rewrite Pnat.Pos2Nat.inj_compare; only 1: case Nat.compare_spec; only 1: symmetry; only 1: apply Nat.max_r; only 1: now rewrite H; only 1: symmetry; only 1: now apply Nat.max_r, Nat.lt_le_incl; only 1: symmetry; only 1: now apply Nat.max_l, Nat.lt_le_incl).	13.4896600246	13365
Coq.PArith.PnatX.Pos2Nat.inj_iter	40	2.0.0.0.0.0.0	search with cache (only 1: induction p using peano_ind; only 1: trivial; only 1: intros; only 1: rewrite Pnat.Pos2Nat.inj_succ, iter_succ; only 1: simpl; only 1: f_equal; only 1: apply IHp).	0.0493121147156	9
Coq.PArith.PnatX.Nat2Pos.id	40	3.0.0.0.0.1.0.1.0	search with cache (only 1: induction n as [| n H]; only 1: now destruct 1; only 1: intros _; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pnat.Pos2Nat.inj_succ; only 1: f_equal; only 1: now apply H).	1.30966997147	522
Coq.PArith.PnatX.Nat2Pos.id_max	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now rewrite Pnat.Nat2Pos.id).	0.0298409461975	3
Coq.PArith.PnatX.Nat2Pos.inj	40	6.4	search with cache (only 1: intros Hn Hm H; only 1: now rewrite <- (Pnat.Nat2Pos.id n), <- (Pnat.Nat2Pos.id m), H).	0.251418113708	76
Coq.PArith.PnatX.Nat2Pos.inj_iff	40	0.3.1.0	search with cache (only 1: split; only 1: now apply Pnat.Nat2Pos.inj; only 1: intros; only 1: now subst).	0.116460084915	8
Coq.PArith.PnatX.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: intro H; only 1: apply Pnat.Pos2Nat.inj; only 1: now rewrite Pnat.Pos2Nat.inj_succ, !Pnat.Nat2Pos.id).	0.0315959453583	4
Coq.PArith.PnatX.Nat2Pos.inj_pred	40	0.1.0.0.0	search with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.pred_succ).	0.0373668670654	6
Coq.PArith.PnatX.Nat2Pos.inj_add	40	0.0.0.1.1.1.2.0.0.1	search with cache (only 1: intros Hn Hm; only 1: apply Pnat.Pos2Nat.inj; only 1: rewrite Pnat.Pos2Nat.inj_add, !Pnat.Nat2Pos.id; only 1: trivial; only 1: tauto; only 1: tauto; only 1: intros H; only 1: destruct n; only 1: now destruct Hn; only 1: now simpl in H).	2.98031497002	794
Coq.PArith.PnatX.Nat2Pos.inj_mul	40	0.0.2.1.1.5.0.0.1	search with cache (only 1: intros Hn Hm; only 1: apply Pnat.Pos2Nat.inj; only 1: rewrite Pnat.Pos2Nat.inj_mul, !Pnat.Nat2Pos.id; only 1: now Morphisms.f_equiv; only 1: tauto; only 1: tauto; only 1: intro H; only 1: apply Nat.mul_eq_0 in H; only 1: tauto).	2.01934504509	847
Coq.PArith.PnatX.Nat2Pos.inj_compare	40	1.1.1.0.1	search with cache (only 1: intros Hn Hm; only 1: rewrite Pnat.Pos2Nat.inj_compare, !Pnat.Nat2Pos.id; only 1: trivial; only 1: tauto; only 1: tauto).	0.200079917908	38
Coq.PArith.PnatX.Nat2Pos.inj_sub	40	0.0.0.0.0.1.0.0.0.1	search with cache (only 1: intros Hm; only 1: apply Pnat.Pos2Nat.inj; only 1: rewrite Pnat.Pos2Nat.inj_sub_max; only 1: rewrite (Pnat.Nat2Pos.id m) by trivial; only 1: rewrite !Pnat.Nat2Pos.id_max; only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.611726045609	173
Coq.PArith.PnatX.Nat2Pos.inj_min	40
Coq.PArith.PnatX.Nat2Pos.inj_max	40
Coq.PArith.PnatX.Pos2SuccNat.id_succ	40	2.0	search with cache (only 1: rewrite Pos.of_nat_succ, <- Pnat.Pos2Nat.inj_succ; only 1: apply Pnat.Pos2Nat.id).	0.0152649879456	4
Coq.PArith.PnatX.Pos2SuccNat.pred_id	40	0	search with cache (only 1: now rewrite Pnat.Pos2SuccNat.id_succ, Pos.pred_succ).	0.0121169090271	1
Coq.PArith.PnatX.SuccNat2Pos.id_succ	40	1.2	search with cache (only 1: rewrite Pos.of_nat_succ; only 1: now apply Pnat.Nat2Pos.id).	0.022047996521	5
Coq.PArith.PnatX.SuccNat2Pos.pred_id	40	0	search with cache (only 1: now rewrite Pnat.SuccNat2Pos.id_succ).	0.0132279396057	1
Coq.PArith.PnatX.SuccNat2Pos.inj	40	2.0.4.1	search with cache (only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !Pnat.SuccNat2Pos.id_succ in H; only 1: auto with arith).	0.120504140854	45
Coq.PArith.PnatX.SuccNat2Pos.inj_iff	40	0.1.3.0	search with cache (only 1: split; only 1: apply Pnat.SuccNat2Pos.inj; only 1: intro H; only 1: now subst).	0.134088039398	33
Coq.PArith.PnatX.SuccNat2Pos.inv	40	0.0.1	search with cache (only 1: intros H; only 1: apply Pnat.Pos2Nat.inj; only 1: now rewrite Pnat.SuccNat2Pos.id_succ).	0.0329809188843	4
Coq.PArith.PnatX.SuccNat2Pos.inj_succ	40	0.0	search with cache (only 1: apply Pnat.Pos2Nat.inj; only 1: now rewrite Pnat.Pos2Nat.inj_succ, !Pnat.SuccNat2Pos.id_succ).	0.0191149711609	2
Coq.PArith.PnatX.SuccNat2Pos.inj_compare	40	0.0	search with cache (only 1: rewrite Pnat.Pos2Nat.inj_compare, !Pnat.SuccNat2Pos.id_succ; only 1: reflexivity).	0.0173690319061	2
Coq.PArith.PnatX.Pmult_nat_mult	40
Coq.PArith.PnatX.Pmult_nat_succ_morphism	40	0.0	search with cache (only 1: intros; only 1: now rewrite !Pnat.Pmult_nat_mult, Pnat.Pos2Nat.inj_succ).	0.0211207866669	2
Coq.PArith.PnatX.Pmult_nat_l_plus_morphism	40	0.0.0	search with cache (only 1: intros; only 1: rewrite !Pnat.Pmult_nat_mult, Pnat.Pos2Nat.inj_add; only 1: apply Nat.mul_add_distr_r).	0.0239560604095	3
Coq.PArith.PnatX.Pmult_nat_plus_carry_morphism	40	0.0	search with cache (only 1: intros; only 1: now rewrite Pos.add_carry_spec, Pnat.Pmult_nat_succ_morphism).	0.0172588825226	2
Coq.PArith.PnatX.Pmult_nat_r_plus_morphism	40	0.1.0	search with cache (only 1: intros; only 1: rewrite !Pnat.Pmult_nat_mult; only 1: apply Nat.mul_add_distr_l).	0.0277860164642	4
Coq.PArith.PnatX.ZL6	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite Pnat.Pmult_nat_mult, Nat.mul_comm; only 1: simpl; only 1: now rewrite Nat.add_0_r).	0.0759098529816	4
Coq.PArith.PnatX.le_Pmult_nat	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Pnat.Pmult_nat_mult; only 1: apply Nat.le_trans with (1 * n); only 1: now rewrite Nat.mul_1_l; only 1: apply Nat.mul_le_mono_r; only 1: apply Pnat.Pos2Nat.is_pos).	0.0762450695038	6
Coq.Arith.Peano_decX.O_or_S	40	2.0.1.3.0	search with cache (only 1: induction n; only 1: now right; only 1: left; only 1: exists n; only 1: auto).	0.188394069672	79
Coq.Arith.Peano_decX.dec_eq_nat	40	1.0.3.0.1	search with cache (only 1: elim (Nat.eq_dec n m); only 1: left; only 1: now f_equal; only 1: right; only 1: tauto).	0.0998651981354	19
Coq.Arith.Peano_decX.le_unique	40
Coq.Arith.PlusX.plus_assoc_reverse	40	5.9	search with cache (only 1: symmetry; only 1: apply Nat.add_assoc).	2.53968787193	252
Coq.Arith.PlusX.plus_reg_l	40	3	search with cache (only 1: apply Nat.add_cancel_l).	1.12007403374	57
Coq.Arith.PlusX.plus_le_reg_l	40	16	search with cache (only 1: apply Nat.add_le_mono_l).	1.36239981651	185
Coq.Arith.PlusX.plus_lt_reg_l	40	8	search with cache (only 1: apply Nat.add_lt_mono_l).	0.145323991776	11
Coq.Arith.PlusX.plus_le_compat_l	40	16	search with cache (only 1: apply Nat.add_le_mono_l).	1.3912320137	185
Coq.Arith.PlusX.plus_le_compat_r	40	15	search with cache (only 1: apply Nat.add_le_mono_r).	1.16828489304	143
Coq.Arith.PlusX.plus_lt_compat_l	40	8	search with cache (only 1: apply Nat.add_lt_mono_l).	0.14522600174	11
Coq.Arith.PlusX.plus_lt_compat_r	40	15	search with cache (only 1: apply Nat.add_lt_mono_r).	1.6197450161	175
Coq.Arith.PlusX.plus_le_compat	40	10	search with cache (only 1: apply Nat.add_le_mono).	0.0376060009003	21
Coq.Arith.PlusX.plus_le_lt_compat	40	1	search with cache (only 1: apply Nat.add_le_lt_mono).	0.0257329940796	2
Coq.Arith.PlusX.plus_lt_le_compat	40	2	search with cache (only 1: apply Nat.add_lt_le_mono).	0.0254969596863	3
Coq.Arith.PlusX.plus_lt_compat	40	4	search with cache (only 1: apply Nat.add_lt_mono).	0.0274288654327	5
Coq.Arith.PlusX.le_plus_l	40	13	search with cache (only 1: apply Nat.le_add_r).	0.314346075058	60
Coq.Arith.PlusX.le_plus_r	40	14.8	search with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.997446775436	381
Coq.Arith.PlusX.le_plus_trans	40	14	search with cache (only 1: now rewrite <- Nat.le_add_r).	0.531722068787	155
Coq.Arith.PlusX.lt_plus_trans	40	1.15.2.1	search with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: auto with arith; only 1: apply Nat.le_add_r).	6.37649393082	2162
Coq.Arith.PlusX.plus_is_O	40	3.0.1.2	search with cache (only 1: Nat.induct n; only 1: now split; only 1: intros n IH; only 1: now split).	0.570952892303	36
Coq.Arith.PlusX.plus_is_one	40	0.2.1.0.0	search with cache (only 1: destruct m as [| m]; only 1: auto; only 1: destruct m; only 1: auto; only 1: discriminate).	0.0892100334167	8
Coq.Arith.PlusX.plus_tail_plus	40	0.0.0.0.1.2	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intro m; only 1: rewrite <- IHn; only 1: auto).	0.633764982224	53
Coq.Arith.PlusX.succ_plus_discr	40	0	search with cache (only 1: apply Nat.succ_add_discr).	0.0342190265656	1
Coq.Arith.MultX.mult_assoc_reverse	40	1.9	search with cache (only 1: symmetry; only 1: apply Nat.mul_assoc).	0.38644194603	44
Coq.Arith.MultX.mult_is_O	40	6	search with cache (only 1: apply Nat.eq_mul_0).	0.0672559738159	27
Coq.Arith.MultX.mult_is_one	40	5	search with cache (only 1: apply Nat.eq_mul_1).	0.0428631305695	18
Coq.Arith.MultX.mult_O_le	40	0.0.0.9.0	search with cache (only 1: destruct m; only 1: auto; only 1: right; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.463016033173	280
Coq.Arith.MultX.mult_le_compat_l	40	5	search with cache (only 1: apply Nat.mul_le_mono_nonneg_l, Nat.le_0_l).	0.0259699821472	13
Coq.Arith.MultX.mult_le_compat_r	40	17	search with cache (only 1: apply Nat.mul_le_mono_nonneg_r, Nat.le_0_l).	0.259162902832	261
Coq.Arith.MultX.mult_le_compat	40	1.1.1.1.1.0	search with cache (only 1: intros; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: Nat.Private_Tac.order; only 1: apply Nat.le_0_l; only 1: Nat.Private_Tac.order).	0.0693829059601	46
Coq.Arith.MultX.mult_S_lt_compat_l	40	0	search with cache (only 1: apply Nat.mul_lt_mono_pos_l, Nat.lt_0_succ).	0.0138080120087	1
Coq.Arith.MultX.mult_lt_compat_l	40	14.5	search with cache (only 1: intros; only 1: now apply Nat.mul_lt_mono_pos_l).	0.830424070358	470
Coq.Arith.MultX.mult_lt_compat_r	40	12.5	search with cache (only 1: intros; only 1: now apply Nat.mul_lt_mono_pos_r).	0.621162891388	321
Coq.Arith.MultX.mult_S_le_reg_l	40	0	search with cache (only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).	0.0118281841278	1
Coq.Arith.MultX.odd_even_lem	40	0.0.0.0	search with cache (only 1: intro; only 1: apply (Nat.Even_Odd_False (2 * q)); only 1: now exists q; only 1: now exists p).	0.0355360507965	4
Coq.Arith.MultX.mult_acc_aux	40
Coq.Arith.MultX.mult_tail_mult	40
Coq.Arith.Wf_natX.well_founded_ltof	40
Coq.Arith.Wf_natX.well_founded_gtof	40	2	search with cache (only 1: exact Wf_nat.well_founded_ltof).	0.309031963348	123
Coq.Arith.Wf_natX.induction_ltof1	40
Coq.Arith.Wf_natX.induction_gtof1	40
Coq.Arith.Wf_natX.induction_ltof2	40	11	search with cache (only 1: exact induction_ltof1).	1.77139091492	614
Coq.Arith.Wf_natX.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0122067928314	1
Coq.Arith.Wf_natX.well_founded_lt_compat	40	0.0.0.0.0.1.0.1.0.2.0.0.0.0.0.0	search with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc R a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	25.1788520813	11347
Coq.Arith.Wf_natX.lt_wf	40	1	search with cache (only 1: exact (Wf_nat.well_founded_ltof nat (fun m => m))).	0.0418810844421	21
Coq.Arith.Wf_natX.lt_wf_rect1	40	0	search with cache (only 1: exact (fun p P F => Wf_nat.induction_ltof2 nat (fun m => m) P F p)).	0.012218952179	1
Coq.Arith.Wf_natX.lt_wf_rect	40	0	search with cache (only 1: exact (fun p P F => Wf_nat.induction_ltof2 nat (fun m => m) P F p)).	0.0122420787811	1
Coq.Arith.Wf_natX.lt_wf_rec1	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.0118169784546	1
Coq.Arith.Wf_natX.lt_wf_rec	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.0118160247803	1
Coq.Arith.Wf_natX.lt_wf_ind	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.0119678974152	1
Coq.Arith.Wf_natX.gt_wf_rect	40	0	search with cache (only 1: exact Wf_nat.lt_wf_rect).	0.0110430717468	1
Coq.Arith.Wf_natX.gt_wf_rec	40	0	search with cache (only 1: exact lt_wf_rect).	0.0107769966125	1
Coq.Arith.Wf_natX.lt_wf_double_rect	40	0.2.2.2.2.2	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply Wf_nat.lt_wf_rect; only 1: intros n H q; only 1: apply Wf_nat.lt_wf_rect; only 1: auto with arith).	1.34510803223	747
Coq.Arith.Wf_natX.lt_wf_double_rec	40	0.1.0.2.2.2.2	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).	1.64939308167	849
Coq.Arith.Wf_natX.lt_wf_double_ind	40	0.0.0.2.1.2.2	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply Wf_nat.lt_wf_ind; only 1: intros n H q; only 1: pattern q; only 1: apply Wf_nat.lt_wf_ind; only 1: auto with arith).	1.14947390556	502
Coq.Arith.Wf_natX.acc_lt_rel	40
Coq.Arith.Wf_natX.well_founded_inv_lt_rel_compat	40	2.0.0.0.1.5.1.1	search with cache (only 1: constructor; only 1: intros; only 1: case (F_compat y a); only 1: trivial; only 1: intros; only 1: apply Wf_nat.acc_lt_rel; only 1: exists x; only 1: trivial).	0.991622924805	890
Coq.Arith.Wf_natX.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_natX.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.MinusX.minus_n_O	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now destruct n).	0.115072965622	12
Coq.Arith.MinusX.minus_Sn_m	40	1.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: now apply Nat.sub_succ_l).	0.0245411396027	6
Coq.Arith.MinusX.pred_of_minus	40	1	search with cache (only 1: now Nat.nzsimpl').	0.0460941791534	2
Coq.Arith.MinusX.minus_diag_reverse	40	8.14	search with cache (only 1: symmetry; only 1: apply Nat.sub_diag).	0.384710073471	291
Coq.Arith.MinusX.minus_plus_simpl_l_reverse	40	0	search with cache (only 1: now rewrite Nat.sub_add_distr, Nat.add_comm, Nat.add_sub).	0.0170791149139	1
Coq.Arith.MinusX.plus_minus	40	5.7	search with cache (only 1: symmetry; only 1: now apply Nat.add_sub_eq_l).	0.310497045517	254
Coq.Arith.MinusX.minus_plus	40	3.0.0.0.0.0	search with cache (only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: apply Nat.add_sub).	0.126493930817	19
Coq.Arith.MinusX.le_plus_minus_r	40	0.2.2.1.0	search with cache (only 1: intros; only 1: rewrite Nat.add_comm; only 1: apply Nat.sub_add; only 1: apply Nat.nlt_ge; only 1: auto with arith).	0.0664532184601	19
Coq.Arith.MinusX.le_plus_minus	40	4.5.1	search with cache (only 1: rewrite Nat.add_comm; only 1: symmetry; only 1: now apply Nat.sub_add).	1.50873613358	598
Coq.Arith.MinusX.lt_O_minus_lt	40	4	search with cache (only 1: apply Nat.lt_add_lt_sub_r).	0.0136029720306	5
Coq.Arith.MinusX.not_le_minus_0	40	1.0	search with cache (only 1: intros; only 1: now apply Nat.sub_0_le, Nat.lt_le_incl, Nat.lt_nge).	0.0205321311951	3
Coq.Arith.BetweenX.bet_eq	40	10.2.0.0	search with cache (only 1: intros a b; only 1: intros EQ; only 1: subst; only 1: auto with arith).	0.74455499649	558
Coq.Arith.BetweenX.between_le	40	5.3.7	search with cache (only 1: fix le_div2 1; only 1: intro n; only 1: intuition).	1.86797094345	797
Coq.Arith.BetweenX.between_Sk_l	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0594108104706	4
Coq.Arith.BetweenX.between_restr	40	0.0.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.0600500106812	3
Coq.Arith.BetweenX.exists_le_S	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0552670955658	4
Coq.Arith.BetweenX.exists_S_le	40
Coq.Arith.BetweenX.in_int_intro	40	7.3	search with cache (only 1: intros a b Ha Hb; only 1: now PeanoNat.Nat.nzsimpl).	0.21882891655	117
Coq.Arith.BetweenX.in_int_lt	40	1.4.3	search with cache (only 1: unfold lt; only 1: induction 1; only 1: PeanoNat.Nat.order).	0.227047920227	62
Coq.Arith.BetweenX.in_int_p_Sq	40	0.0.0.1.0	search with cache (only 1: intros * []; only 1: destruct (le_lt_or_eq r q); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0662529468536	6
Coq.Arith.BetweenX.in_int_S	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0316770076752	2
Coq.Arith.BetweenX.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.032970905304	2
Coq.Arith.BetweenX.between_in_int	40
Coq.Arith.BetweenX.in_int_between	40	0.3.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.126465797424	18
Coq.Arith.BetweenX.exists_in_int	40
Coq.Arith.BetweenX.in_int_exists	40
Coq.Arith.BetweenX.between_or_exists	40
Coq.Arith.BetweenX.between_not_exists	40
Coq.Arith.BetweenX.nth_le	40
Coq.Arith.BetweenX.event_O	40	0.0.0.3	search with cache (only 1: firstorder; only 1: replace 0 with x; only 1: auto with arith; only 1: auto with arith).	0.0464580059052	7
Coq.Arith.EuclidX.eucl_dev	40
Coq.Arith.EuclidX.quotient	40
Coq.Arith.EuclidX.modulo	40
Coq.Arith.CompareX.discrete_nat	40
Coq.Arith.LtX.lt_le_S	40	2	search with cache (only 1: apply Nat.le_succ_l).	0.108346939087	3
Coq.Arith.LtX.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.0170538425446	1
Coq.Arith.LtX.le_lt_n_Sm	40	0.0.1.1	search with cache (only 1: induction 1; only 1: apply le_S_n; only 1: constructor; only 1: auto).	0.0321838855743	6
Coq.Arith.LtX.le_not_lt	40	0	search with cache (only 1: auto with arith).	0.0182430744171	1
Coq.Arith.LtX.lt_not_le	40	0	search with cache (only 1: intuition Nat.order).	0.0177240371704	1
Coq.Arith.LtX.neq_0_lt	40	4.0	search with cache (only 1: intro H1; only 1: now apply Nat.neq_0_lt_0, Nat.neq_sym).	0.0269839763641	6
Coq.Arith.LtX.lt_0_neq	40	1.0	search with cache (only 1: intro H1; only 1: now apply Nat.neq_sym, Nat.neq_0_lt_0).	0.0228810310364	3
Coq.Arith.LtX.lt_n_S	40	2	search with cache (only 1: auto with arith).	0.0212180614471	3
Coq.Arith.LtX.lt_S_n	40	0	search with cache (only 1: apply le_S_n).	0.0153751373291	1
Coq.Arith.LtX.S_pred	40	0.2.1	search with cache (only 1: intros; only 1: symmetry; only 1: now apply Nat.lt_succ_pred with m).	0.0266489982605	6
Coq.Arith.LtX.S_pred_pos	40	1	search with cache (only 1: apply Lt.S_pred).	0.0158858299255	2
Coq.Arith.LtX.lt_pred	40	1	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0143489837646	2
Coq.Arith.LtX.lt_pred_n_n	40	2.1	search with cache (only 1: intros; only 1: now apply Nat.lt_pred_l, Nat.neq_0_lt_0).	0.016273021698	5
Coq.Arith.LtX.le_lt_or_eq	40	1	search with cache (only 1: apply Nat.lt_eq_cases).	0.0186800956726	2
Coq.Arith.LtX.nat_total_order	40	2	search with cache (only 1: apply Nat.lt_gt_cases).	0.0270819664001	3
Coq.Arith.FactorialX.lt_O_fact	40
Coq.Arith.FactorialX.fact_neq_0	40	10	search with cache (only 1: apply Nat.neq_0_lt_0, Factorial.lt_O_fact).	0.0561139583588	41
Coq.Arith.FactorialX.fact_le	40
Coq.Arith.PeanoNatX.Nat.bi_induction	40	0.0.5.1.0	search with cache (only 1: intros A A_wd A0 AS; only 1: apply nat_ind; only 1: assumption; only 1: intros; only 1: now apply -> AS).	0.4638671875	106
Coq.Arith.PeanoNatX.Nat.recursion_wd	40	1.0.1.0.1.0.0.0.0	search with cache (only 1: intros a a' Ha f f' Hf n n' Hn; only 1: subst n'; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Hf; only 1: auto; only 1: auto).	2.98388695717	270
Coq.Arith.PeanoNatX.Nat.recursion_0	40	9	search with cache (only 1: easy).	0.104799985886	27
Coq.Arith.PeanoNatX.Nat.recursion_succ	40	0.1.0.0.2.28	search with cache (only 1: intros A A_wd A0 AS; only 1: unfold Proper, respectful in *; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	37.092468977	27688
Coq.Arith.PeanoNatX.Nat.pred_succ	40	1	search with cache (only 1: reflexivity).	0.0250980854034	2
Coq.Arith.PeanoNatX.Nat.pred_0	40	1	search with cache (only 1: reflexivity).	0.0228779315948	2
Coq.Arith.PeanoNatX.Nat.one_succ	40	9	search with cache (only 1: solve_proper).	0.0271790027618	10
Coq.Arith.PeanoNatX.Nat.two_succ	40	12	search with cache (only 1: easy).	0.0549428462982	46
Coq.Arith.PeanoNatX.Nat.add_0_l	40	1.2	search with cache (only 1: PeanoNat.Nat.nzsimpl; only 1: tauto).	0.124814033508	5
Coq.Arith.PeanoNatX.Nat.add_succ_l	40	1.0.0.0.0	search with cache (only 1: PeanoNat.Nat.nzsimpl; only 1: induction n; only 1: now rewrite PeanoNat.Nat.add_0_l; only 1: PeanoNat.Nat.nzsimpl; only 1: auto).	0.248082876205	6
Coq.Arith.PeanoNatX.Nat.sub_0_r	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now destruct n).	0.108160018921	12
Coq.Arith.PeanoNatX.Nat.sub_succ_r	40	0.0.0.0.0.2.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: apply PeanoNat.Nat.sub_0_r; only 1: simpl; only 1: auto).	0.359664916992	96
Coq.Arith.PeanoNatX.Nat.mul_0_l	40	1	search with cache (only 1: reflexivity).	0.022882938385	2
Coq.Arith.PeanoNatX.Nat.mul_succ_l	40	6.0	search with cache (only 1: PeanoNat.Nat.nzsimpl; only 1: now PeanoNat.Nat.nzsimpl).	0.301946163177	27
Coq.Arith.PeanoNatX.Nat.lt_succ_r	40	0.0.1.1.0.0	search with cache (only 1: split; only 1: apply le_S_n; only 1: induction 1; only 1: apply le_S_n; only 1: constructor; only 1: auto).	0.054939031601	8
Coq.Arith.PeanoNatX.Nat.eqb_eq	40	15.0	search with cache (only 1: revert m; only 1: now apply PeanoNat.Nat.eqb_eq).	5.54788208008	1810
Coq.Arith.PeanoNatX.Nat.leb_le	40
Coq.Arith.PeanoNatX.Nat.ltb_lt	40	0	search with cache (only 1: apply PeanoNat.Nat.leb_le).	0.0265440940857	1
Coq.Arith.PeanoNatX.Nat.eq_dec	40	11.3.8	search with cache (only 1: destruct m; only 1: eauto with arith; only 1: auto with arith).	8.61998295784	2905
Coq.Arith.PeanoNatX.Nat.compare_eq_iff	40	1.1.0.0.0.0.0.0.2.2.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: auto; only 1: auto).	23.6375949383	6673
Coq.Arith.PeanoNatX.Nat.compare_lt_iff	40
Coq.Arith.PeanoNatX.Nat.compare_le_iff	40
Coq.Arith.PeanoNatX.Nat.compare_antisym	40	0.0.0.0.0.2.0.0.1.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now subst; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	3.78792595863	1550
Coq.Arith.PeanoNatX.Nat.compare_succ	40	0	search with cache (only 1: reflexivity).	0.0238509178162	1
Coq.Arith.PeanoNatX.Nat.max_l	40	3	search with cache (only 1: exact max_l).	0.59610581398	126
Coq.Arith.PeanoNatX.Nat.max_r	40	2	search with cache (only 1: exact max_r).	0.7630610466	162
Coq.Arith.PeanoNatX.Nat.min_l	40	2	search with cache (only 1: exact min_l).	0.68071103096	133
Coq.Arith.PeanoNatX.Nat.min_r	40	1	search with cache (only 1: exact min_r).	0.387417793274	81
Coq.Arith.PeanoNatX.Nat.pow_neg_r	40	3	search with cache (only 1: inversion 1).	0.0822510719299	17
Coq.Arith.PeanoNatX.Nat.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.0274910926819	1
Coq.Arith.PeanoNatX.Nat.pow_succ_r	40	0	search with cache (only 1: reflexivity).	0.0255260467529	1
Coq.Arith.PeanoNatX.Nat.square_spec	40	0	search with cache (only 1: reflexivity).	0.0265169143677	1
Coq.Arith.PeanoNatX.Nat.Private_Parity.Even_1	40	0.0.0.23	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.407658100128	337
Coq.Arith.PeanoNatX.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNatX.Nat.Private_Parity.Odd_0	40
Coq.Arith.PeanoNatX.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNatX.Nat.even_spec	40	6.11.1	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: trivial).	2.54564905167	1192
Coq.Arith.PeanoNatX.Nat.odd_spec	40	7.5.0	search with cache (only 1: unfold PeanoNat.Nat.odd; only 1: fix odd_spec 1; only 1: trivial).	0.857480049133	367
Coq.Arith.PeanoNatX.Nat.divmod_spec	40
Coq.Arith.PeanoNatX.Nat.div_mod	40	0.0.0.0.1.0.0.0.0.1	search with cache (only 1: intros Hy; only 1: destruct y; only 1: now elim Hy; only 1: clear Hy; only 1: unfold PeanoNat.Nat.div, PeanoNat.Nat.modulo; only 1: generalize (PeanoNat.Nat.divmod_spec x y 0 y (le_n y)); only 1: destruct divmod as (q, u); only 1: intros (U, V); only 1: simpl in *; only 1: now rewrite PeanoNat.Nat.mul_0_r, PeanoNat.Nat.sub_diag, !PeanoNat.Nat.add_0_r in U).	2.23742103577	442
Coq.Arith.PeanoNatX.Nat.mod_bound_pos	40	0.1.0.2.0.1.0	search with cache (only 1: intros Hx Hy; only 1: split; only 1: apply PeanoNat.Nat.le_0_l; only 1: destruct y; only 1: now elim Hy; only 1: unfold PeanoNat.Nat.modulo; only 1: apply PeanoNat.Nat.lt_succ_r, PeanoNat.Nat.le_sub_l).	0.665480852127	144
Coq.Arith.PeanoNatX.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNatX.Nat.sqrt_specif	40	0.0.0.0.0.0.0	search with cache (only 1: set (s := PeanoNat.Nat.sqrt n); only 1: replace n with (n + 0 * 0 + (0 - 0)); only 1: apply PeanoNat.Nat.sqrt_iter_spec; only 1: auto; only 1: auto; only 1: simpl; only 1: now rewrite !PeanoNat.Nat.add_0_r).	0.0749559402466	7
Coq.Arith.PeanoNatX.Nat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.0291631221771	1
Coq.Arith.PeanoNatX.Nat.log2_iter_spec	40
Coq.Arith.PeanoNatX.Nat.log2_spec	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: set (s := PeanoNat.Nat.log2 n); only 1: replace n with (PeanoNat.Nat.pred n + 1); only 1: apply PeanoNat.Nat.log2_iter_spec; only 1: auto; only 1: auto; only 1: rewrite PeanoNat.Nat.add_1_r; only 1: apply PeanoNat.Nat.succ_pred; only 1: now apply PeanoNat.Nat.neq_sym, PeanoNat.Nat.lt_neq).	0.0749540328979	10
Coq.Arith.PeanoNatX.Nat.log2_nonpos	40	0.0	search with cache (only 1: inversion 1; only 1: now subst).	0.0408818721771	2
Coq.Arith.PeanoNatX.Nat.gcd_divide	40	4.1.3	search with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	0.148482084274	76
Coq.Arith.PeanoNatX.Nat.gcd_divide_l	40	2.0.1.0.0.1	search with cache (only 1: intros [| a] b; only 1: simpl; only 1: now exists 0; only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).	0.140453100204	33
Coq.Arith.PeanoNatX.Nat.gcd_divide_r	40	1.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0243999958038	3
Coq.Arith.PeanoNatX.Nat.gcd_greatest	40	9.3	search with cache (only 1: fix gcd_divide 1; only 1: apply gcd_divide).	37.5338618755	889
Coq.Arith.PeanoNatX.Nat.gcd_nonneg	40	0	search with cache (only 1: apply PeanoNat.Nat.le_0_l).	0.020653963089	1
Coq.Arith.PeanoNatX.Nat.div2_double	40	0.0.0.1.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: simpl PeanoNat.Nat.mul; only 1: rewrite PeanoNat.Nat.add_succ_r; only 1: simpl; only 1: now f_equal).	0.0934438705444	8
Coq.Arith.PeanoNatX.Nat.div2_succ_double	40	0.0.2.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: now rewrite PeanoNat.Nat.add_succ_r).	0.154006004333	23
Coq.Arith.PeanoNatX.Nat.le_div2	40	2.0.2	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.0851860046387	20
Coq.Arith.PeanoNatX.Nat.lt_div2	40	1.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: apply PeanoNat.Nat.lt_succ_r, PeanoNat.Nat.le_div2).	0.0430688858032	5
Coq.Arith.PeanoNatX.Nat.div2_decr	40	7.1.0.0.1.0.1.0.0	search with cache (only 1: destruct a; only 1: intros H; only 1: simpl; only 1: apply PeanoNat.Nat.le_0_l; only 1: intros H; only 1: apply PeanoNat.Nat.succ_le_mono in H; only 1: apply PeanoNat.Nat.le_trans with a; only 1: apply PeanoNat.Nat.le_div2; only 1: trivial).	30.5460860729	9631
Coq.Arith.PeanoNatX.Nat.double_twice	40	0.0.0	search with cache (only 1: simpl; only 1: intros; only 1: now rewrite PeanoNat.Nat.add_0_r).	0.0528938770294	3
Coq.Arith.PeanoNatX.Nat.testbit_0_l	40	8.0	search with cache (only 1: intros n; only 1: now induction n).	0.0424568653107	12
Coq.Arith.PeanoNatX.Nat.testbit_odd_0	40	9.0.2	search with cache (only 1: unfold PeanoNat.Nat.testbit; only 1: rewrite PeanoNat.Nat.odd_spec; only 1: now exists a).	1.37174701691	312
Coq.Arith.PeanoNatX.Nat.testbit_even_0	40	19.0.0.0	search with cache (only 1: unfold PeanoNat.Nat.testbit, PeanoNat.Nat.odd; only 1: rewrite (proj2 (PeanoNat.Nat.even_spec _)); only 1: trivial; only 1: now exists a).	4.98095989227	2490
Coq.Arith.PeanoNatX.Nat.testbit_odd_succ'	40	0.0.0.0.2	search with cache (only 1: unfold PeanoNat.Nat.testbit; only 1: fold PeanoNat.Nat.testbit; only 1: rewrite PeanoNat.Nat.add_1_r; only 1: f_equal; only 1: apply PeanoNat.Nat.div2_succ_double).	0.131546974182	7
Coq.Arith.PeanoNatX.Nat.testbit_even_succ'	40	0.0.0.2	search with cache (only 1: unfold PeanoNat.Nat.testbit; only 1: fold PeanoNat.Nat.testbit; only 1: f_equal; only 1: apply PeanoNat.Nat.div2_double).	0.119113922119	6
Coq.Arith.PeanoNatX.Nat.shiftr_specif	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: intros m; only 1: now rewrite PeanoNat.Nat.add_0_r; only 1: intros m; only 1: now rewrite PeanoNat.Nat.add_succ_r, <- PeanoNat.Nat.add_succ_l, <- IHn).	0.12583899498	5
Coq.Arith.PeanoNatX.Nat.shiftl_specif_high	40	1.1.0.0.0.0.1.0.0.0	search with cache (only 1: induction n; only 1: intros m H; only 1: now rewrite PeanoNat.Nat.sub_0_r; only 1: intros m H; only 1: destruct m; only 1: inversion H; only 1: simpl; only 1: apply PeanoNat.Nat.succ_le_mono in H; only 1: rewrite PeanoNat.Nat.double_twice, PeanoNat.Nat.div2_double; only 1: now apply IHn).	1.98338389397	519
Coq.Arith.PeanoNatX.Nat.shiftl_spec_low	40	0.0.0.0.0.3.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: induction n; only 1: intros m H; only 1: inversion H; only 1: intros m H; only 1: change (PeanoNat.Nat.shiftl a (S n)) with (PeanoNat.Nat.double (PeanoNat.Nat.shiftl a n)); only 1: destruct m; only 1: simpl; only 1: unfold PeanoNat.Nat.odd; only 1: apply negb_false_iff; only 1: apply PeanoNat.Nat.even_spec; only 1: exists (PeanoNat.Nat.shiftl a n); only 1: apply PeanoNat.Nat.double_twice; only 1: simpl; only 1: rewrite PeanoNat.Nat.double_twice, PeanoNat.Nat.div2_double; only 1: apply IHn; only 1: now apply PeanoNat.Nat.succ_le_mono).	13.0931038857	4728
Coq.Arith.PeanoNatX.Nat.div2_bitwise	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold PeanoNat.Nat.bitwise; only 1: fold PeanoNat.Nat.bitwise; only 1: destruct (op (PeanoNat.Nat.odd a) (PeanoNat.Nat.odd b)); only 1: now rewrite PeanoNat.Nat.div2_succ_double; only 1: now rewrite PeanoNat.Nat.add_0_l, PeanoNat.Nat.div2_double).	0.0872189998627	6
Coq.Arith.PeanoNatX.Nat.odd_bitwise	40
Coq.Arith.PeanoNatX.Nat.testbit_bitwise_1	40	0.0.0.0.0.0.0.3.2.0.0.0.0.1.0	search with cache (only 1: intros op Hop; only 1: induction n; only 1: intros m a b Ha; only 1: simpl; only 1: inversion Ha; only 1: subst; only 1: now rewrite PeanoNat.Nat.testbit_0_l; only 1: intros m a b Ha; only 1: destruct m; only 1: apply PeanoNat.Nat.odd_bitwise; only 1: unfold PeanoNat.Nat.testbit; only 1: fold PeanoNat.Nat.testbit; only 1: rewrite PeanoNat.Nat.div2_bitwise; only 1: apply IHn; only 1: now apply PeanoNat.Nat.div2_decr).	28.5367898941	10309
Coq.Arith.PeanoNatX.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNatX.Nat.land_spec	40	2.0.0.0	search with cache (only 1: unfold PeanoNat.Nat.land; only 1: apply PeanoNat.Nat.testbit_bitwise_1; only 1: trivial; only 1: solve_proper).	0.0845828056335	6
Coq.Arith.PeanoNatX.Nat.ldiff_spec	40	2.0.0.0	search with cache (only 1: unfold PeanoNat.Nat.ldiff; only 1: apply PeanoNat.Nat.testbit_bitwise_1; only 1: trivial; only 1: solve_proper).	0.0839219093323	6
Coq.Arith.PeanoNatX.Nat.lor_spec	40
Coq.Arith.PeanoNatX.Nat.lxor_spec	40
Coq.Arith.PeanoNatX.Nat.div2_spec	40	0	search with cache (only 1: reflexivity).	0.0250570774078	1
Coq.Arith.PeanoNatX.Nat.testbit_neg_r	40	2	search with cache (only 1: inversion H).	0.0274720191956	3
Coq.Arith.PeanoNatX.Nat.tail_add_spec	40	0.0.0.3.2.0	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: intros; only 1: now rewrite IH, PeanoNat.Nat.add_succ_r).	1.55854296684	350
Coq.Arith.PeanoNatX.Nat.tail_addmul_spec	40	2.1.0.0.0.0.4.0.2.0	search with cache (only 1: revert m r; only 1: induction n as [| n IH]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IH, PeanoNat.Nat.tail_add_spec; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: f_equal; only 1: apply PeanoNat.Nat.add_comm).	5.23016500473	2468
Coq.Arith.PeanoNatX.Nat.tail_mul_spec	40	0.0	search with cache (only 1: unfold PeanoNat.Nat.tail_mul; only 1: now rewrite PeanoNat.Nat.tail_addmul_spec).	0.0814218521118	2
Coq.Arith.PeanoNatX.test	40	5.0	search with cache (only 1: intros a b Ha Hb; only 1: Nat.order).	0.0463750362396	7
Coq.Arith.EqNatX.eq_nat_refl	40	0.10.0.4.2.14.2.13.3	search with cache (only 1: case n; only 1: now try Nat.order'; only 1: induction n; only 1: red; only 1: intros; only 1: induction n; only 1: tauto; only 1: auto; only 1: now f_equal).	36.2530739307	59466
Coq.Arith.EqNatX.eq_nat_is_eq	40
Coq.Arith.EqNatX.eq_eq_nat	40	1.0.0.0.0.1	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: apply eq_nat_refl).	0.174531936646	54
Coq.Arith.EqNatX.eq_nat_eq	40	3	search with cache (only 1: apply eq_nat_is_eq).	0.305276155472	45
Coq.Arith.EqNatX.eq_nat_elim	40	5.5.10.1	search with cache (only 1: intros; only 1: replace m with n; only 1: auto; only 1: auto with arith).	3.46325802803	4461
Coq.Arith.EqNatX.eq_nat_decide	40
Coq.Arith.EqNatX.beq_nat_refl	40	4.1.2.1.1	search with cache (only 1: induction n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: easy).	0.423868894577	179
Coq.Arith.EqNatX.beq_nat_true	40	1	search with cache (only 1: apply Nat.eqb_eq).	0.556947946548	89
Coq.Arith.EqNatX.beq_nat_false	40	0	search with cache (only 1: apply Nat.eqb_neq).	0.0242938995361	1
Coq.Arith.EqNatX.beq_nat_eq	40	9.1.5	search with cache (only 1: intros; only 1: apply Nat.eqb_eq; only 1: now rewrite H).	17.7790169716	5129
Coq.Arith.LeX.le_n_0_eq	40	0.4	search with cache (only 1: inversion 1; only 1: now subst).	0.110325098038	22
Coq.Arith.LeX.le_elim_rel	40	0.0.0.3.0.0.0	search with cache (only 1: intros P H0 HS; only 1: induction n; only 1: trivial; only 1: intros m Le; only 1: elim Le; only 1: auto with arith; only 1: auto with arith).	0.0688679218292	10
Coq.Arith.GtX.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0178830623627	1
Coq.Arith.GtX.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0169439315796	1
Coq.Arith.GtX.gt_S	40	0.1	search with cache (only 1: intro; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.027251958847	3
Coq.Arith.GtX.gt_pred	40	0	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0141930580139	1
Coq.Arith.GtX.le_not_gt	40	0	search with cache (only 1: apply Nat.nlt_ge).	0.013790845871	1
Coq.Arith.GtX.gt_not_le	40	0	search with cache (only 1: auto with arith).	0.0171480178833	1
Coq.Arith.GtX.le_S_gt	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0179281234741	1
Coq.Arith.GtX.gt_S_le	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.014219045639	1
Coq.Arith.GtX.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0178470611572	1
Coq.Arith.GtX.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0144519805908	1
Coq.Arith.GtX.le_gt_trans	40	1.0	search with cache (only 1: intros; only 1: now apply Nat.lt_le_trans with m).	0.0204319953918	3
Coq.Arith.GtX.gt_le_trans	40	1.0	search with cache (only 1: intros; only 1: now apply Nat.le_lt_trans with m).	0.0189139842987	3
Coq.Arith.GtX.gt_trans	40	0.1	search with cache (only 1: intros; only 1: now apply Nat.lt_trans with m).	0.0187270641327	3
Coq.Arith.GtX.gt_trans_S	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: now apply Nat.succ_le_mono).	0.0309720039368	5
Coq.Arith.GtX.gt_0_eq	40	1.0.2.0	search with cache (only 1: destruct n; only 1: now right; only 1: left; only 1: apply Nat.lt_0_succ).	0.0483129024506	15
Coq.Arith.GtX.plus_gt_reg_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0192539691925	1
Coq.Arith.GtX.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0192399024963	1
Coq.Arith.Compare_decX.zerop	40	0.0.1	search with cache (only 1: destruct n; only 1: auto with arith; only 1: auto with arith).	0.037978887558	4
Coq.Arith.Compare_decX.lt_eq_lt_dec	40
Coq.Arith.Compare_decX.gt_eq_gt_dec	40	0	search with cache (only 1: now apply Compare_dec.lt_eq_lt_dec).	0.011458158493	1
Coq.Arith.Compare_decX.le_lt_dec	40	0.0.0.0.1.0.0.0.2.0	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	2.52327799797	941
Coq.Arith.Compare_decX.le_le_S_dec	40	0	search with cache (only 1: exact (Compare_dec.le_lt_dec n m)).	0.012011051178	1
Coq.Arith.Compare_decX.le_ge_dec	40	0.0.1	search with cache (only 1: elim (Compare_dec.le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0208752155304	4
Coq.Arith.Compare_decX.le_gt_dec	40	0	search with cache (only 1: exact (Compare_dec.le_lt_dec n m)).	0.0104389190674	1
Coq.Arith.Compare_decX.le_lt_eq_dec	40	9.0.3	search with cache (only 1: destruct (Compare_dec.lt_eq_lt_dec n m); only 1: auto with arith; only 1: Nat.Private_Tac.order).	6.33351302147	1948
Coq.Arith.Compare_decX.le_dec	40	0.0.2.1	search with cache (only 1: destruct (Compare_dec.le_gt_dec n m); only 1: now left; only 1: right; only 1: auto with arith).	0.162662029266	93
Coq.Arith.Compare_decX.lt_dec	40	0	search with cache (only 1: apply Compare_dec.le_dec).	0.0115828514099	1
Coq.Arith.Compare_decX.gt_dec	40	0	search with cache (only 1: apply Compare_dec.lt_dec).	0.010801076889	1
Coq.Arith.Compare_decX.ge_dec	40	0	search with cache (only 1: apply Compare_dec.le_dec).	0.0116391181946	1
Coq.Arith.Compare_decX.dec_le	40	0	search with cache (only 1: apply Nat.le_decidable).	0.010143995285	1
Coq.Arith.Compare_decX.dec_lt	40	0	search with cache (only 1: apply Nat.lt_decidable).	0.0107960700989	1
Coq.Arith.Compare_decX.dec_gt	40	0	search with cache (only 1: apply Nat.lt_decidable).	0.0107071399689	1
Coq.Arith.Compare_decX.dec_ge	40	0	search with cache (only 1: apply Nat.le_decidable).	0.0100681781769	1
Coq.Arith.Compare_decX.not_eq	40	2	search with cache (only 1: apply Nat.lt_gt_cases).	0.0230829715729	3
Coq.Arith.Compare_decX.not_le	40	2	search with cache (only 1: apply Nat.lt_nge).	0.016813993454	3
Coq.Arith.Compare_decX.not_gt	40	0	search with cache (only 1: apply Nat.nlt_ge).	0.0106711387634	1
Coq.Arith.Compare_decX.not_ge	40	0	search with cache (only 1: apply Nat.nle_gt).	0.0114068984985	1
Coq.Arith.Compare_decX.not_lt	40	0	search with cache (only 1: apply Nat.nlt_ge).	0.0120561122894	1
Coq.Arith.Compare_decX.nat_compare_lt	40	0.2	search with cache (only 1: symmetry; only 1: apply Nat.compare_lt_iff).	0.190349817276	40
Coq.Arith.Compare_decX.nat_compare_gt	40	0.1	search with cache (only 1: symmetry; only 1: apply Nat.compare_gt_iff).	0.018679857254	3
Coq.Arith.Compare_decX.nat_compare_le	40	0.2.1.1	search with cache (only 1: revert m; only 1: intros; only 1: symmetry; only 1: apply Nat.compare_le_iff).	0.17388510704	46
Coq.Arith.Compare_decX.nat_compare_ge	40	1.0.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Nat.compare_ge_iff).	0.117100954056	12
Coq.Arith.Compare_decX.nat_compare_eq	40	0	search with cache (only 1: apply Nat.compare_eq_iff).	0.0251960754395	1
Coq.Arith.Compare_decX.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.0165100097656	1
Coq.Arith.Compare_decX.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.0231320858002	1
Coq.Arith.Compare_decX.nat_compare_equiv	40
Coq.Arith.Compare_decX.leb_iff_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle; only 1: intuition Nat.order).	0.0278542041779	2
Coq.Arith.Compare_decX.leb_correct	40	0	search with cache (only 1: apply Nat.leb_le).	0.0151131153107	1
Coq.Arith.Compare_decX.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.0150609016418	1
Coq.Arith.Compare_decX.leb_correct_conv	40	0	search with cache (only 1: apply Compare_dec.leb_iff_conv).	0.013708114624	1
Coq.Arith.Compare_decX.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.0144498348236	1
Coq.Arith.Compare_decX.leb_compare	40	0.0	search with cache (only 1: rewrite Nat.compare_le_iff; only 1: apply Nat.leb_le).	0.0284128189087	2
Coq.Arith.EvenX.even_equiv	40
Coq.Arith.EvenX.odd_equiv	40	12.5	search with cache (only 1: fix even_spec 1; only 1: auto with typeclass_instances).	0.935446023941	1555
Coq.Arith.EvenX.even_or_odd	40
Coq.Arith.EvenX.even_odd_dec	40	0.0.1.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0244669914246	6
Coq.Arith.EvenX.not_even_and_odd	40	0.0.0.5	search with cache (only 1: fix even_equiv 1; only 1: induction n; only 1: auto with arith; only 1: auto with arith).	0.0222630500793	18
Coq.Arith.EvenX.even_plus_split	40
Coq.Arith.EvenX.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.107760906219	1
Coq.Arith.EvenX.even_even_plus	40	0.0.0	search with cache (only 1: induction n; only 1: parity_binop; only 1: parity_binop).	0.0807909965515	3
Coq.Arith.EvenX.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0438029766083	1
Coq.Arith.EvenX.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0599150657654	1
Coq.Arith.EvenX.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0431261062622	1
Coq.Arith.EvenX.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.143507003784	1
Coq.Arith.EvenX.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0415060520172	1
Coq.Arith.EvenX.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0405099391937	1
Coq.Arith.EvenX.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0523550510406	1
Coq.Arith.EvenX.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0436630249023	1
Coq.Arith.EvenX.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0416758060455	1
Coq.Arith.EvenX.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0595169067383	1
Coq.Arith.EvenX.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.042503118515	1
Coq.Arith.EvenX.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0424971580505	1
Coq.Arith.EvenX.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.097382068634	1
Coq.Arith.EvenX.even_mult_l	40	0	search with cache (only 1: parity_binop).	0.0448098182678	1
Coq.Arith.EvenX.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0291519165039	1
Coq.Arith.EvenX.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0424029827118	1
Coq.Arith.EvenX.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0408790111542	1
Coq.Arith.EvenX.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0472300052643	1
Coq.Arith.EvenX.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0305991172791	1
Coq.Arith.EvenX.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0303020477295	1
Coq.Arith.Div2X.ind_0_1_SS	40
Coq.Arith.Div2X.lt_div2	40	0.4.6.18.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: right; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	17.9183909893	13955
Coq.Arith.Div2X.even_div2	40
Coq.Arith.Div2X.odd_div2	40
Coq.Arith.Div2X.div2_even	40	0.9.0.0.0.9.14	search with cache (only 1: intros _; only 1: case n; only 1: rewrite even_equiv; only 1: exists 0; only 1: now Nat.nzsimpl; only 1: fix le_div2 1; only 1: auto with arith).	18.7023918629	14237
Coq.Arith.Div2X.div2_odd	40
Coq.Arith.Div2X.even_odd_div2	40
Coq.Arith.Div2X.double_S	40
Coq.Arith.Div2X.double_plus	40
Coq.Arith.Div2X.even_odd_double	40
Coq.Arith.Div2X.even_2n	40	5.0.11	search with cache (only 1: fix even_equiv 1; only 1: intros; only 1: auto using div2_odd, div2_even, odd_div2, even_div2).	0.727199077606	710
Coq.Arith.Div2X.odd_S2n	40	1.3.1	search with cache (only 1: fix even_odd_double 1; only 1: intros n H; only 1: auto with arith).	0.0516691207886	34
Coq.Arith.Div2X.div2_double	40	3.2	search with cache (only 1: simpl Nat.mul; only 1: apply Nat.div2_double).	0.279316902161	57
Coq.Arith.Div2X.div2_double_plus_one	40	1.6	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: tauto).	0.240414142609	76
Coq.Logic.Classical_PropX.NNPP	40
Coq.Logic.Classical_PropX.Peirce	40	3.5	search with cache (only 1: intros; only 1: tauto).	0.0199689865112	10
Coq.Logic.Classical_PropX.not_imply_elim	40	0.22	search with cache (only 1: intros nna a; only 1: tauto).	1.63202786446	766
Coq.Logic.Classical_PropX.not_imply_elim2	40	0	search with cache (only 1: tauto).	0.0153529644012	1
Coq.Logic.Classical_PropX.imply_to_or	40	5.30	search with cache (only 1: intros n m; only 1: tauto).	5.81227588654	5254
Coq.Logic.Classical_PropX.imply_to_and	40	12.14	search with cache (only 1: intros; only 1: tauto).	2.442964077	2749
Coq.Logic.Classical_PropX.or_to_imply	40	0	search with cache (only 1: tauto).	0.0139901638031	1
Coq.Logic.Classical_PropX.not_and_or	40	18.4	search with cache (only 1: intros; only 1: tauto).	0.519880056381	668
Coq.Logic.Classical_PropX.or_not_and	40	0	search with cache (only 1: tauto).	0.0152630805969	1
Coq.Logic.Classical_PropX.not_or_and	40	0	search with cache (only 1: tauto).	0.0150380134583	1
Coq.Logic.Classical_PropX.and_not_or	40	0	search with cache (only 1: tauto).	0.0144078731537	1
Coq.Logic.Classical_PropX.imply_and_or	40	0	search with cache (only 1: tauto).	0.0122539997101	1
Coq.Logic.Classical_PropX.imply_and_or2	40	0	search with cache (only 1: tauto).	0.0150508880615	1
Coq.Logic.Classical_PropX.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.WKLX.is_path_from_characterization	40
Coq.Logic.WKLX.is_path_from_restrict	40
Coq.Logic.WKLX.inductively_barred_at_monotone	40
Coq.Logic.WKLX.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKLX.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKLX.find_left_path	40
Coq.Logic.WKLX.Y_unique	40
Coq.Logic.WKLX.Y_approx	40
Coq.Logic.WKLX.PreWeakKonigsLemma	40
Coq.Logic.WKLX.inductively_barred_at_decidable	40
Coq.Logic.WKLX.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKLX.WeakKonigsLemma	40
Coq.Logic.Eqdep_decX.trans_sym_eq	40	0.0.0	search with cache (only 1: intros; only 1: case u; only 1: trivial).	0.0188040733337	3
Coq.Logic.Eqdep_decX.nu_constant	40	0.0.0.0.1	search with cache (only 1: intros; only 1: unfold nu; only 1: destruct (eq_dec y) as [Heq| Hneq]; only 1: reflexivity; only 1: case Hneq).	0.0583369731903	6
Coq.Logic.Eqdep_decX.nu_left_inv_on	40	0.0.0.0	search with cache (only 1: intros; only 1: case u; only 1: unfold nu_inv; only 1: apply Eqdep_dec.trans_sym_eq).	0.0311958789825	4
Coq.Logic.Eqdep_decX.eq_proofs_unicity_on	40	0.0.0.0.1	search with cache (only 1: intros; only 1: elim Eqdep_dec.nu_left_inv_on with (u := p1); only 1: elim Eqdep_dec.nu_left_inv_on with (u := p2); only 1: elim nu_constant with y p1 p2; only 1: reflexivity).	0.0359771251678	6
Coq.Logic.Eqdep_decX.K_dec_on	40	1.0.0	search with cache (only 1: intros; only 1: elim Eqdep_dec.eq_proofs_unicity_on with x eq_refl p; only 1: trivial).	0.0284960269928	4
Coq.Logic.Eqdep_decX.inj_right_pair_on	40	1.0.2.3.0.0.0.0.4.0	search with cache (only 1: intros; only 1: cut (proj (ex_intro P x y) y = proj (ex_intro P x y') y); only 1: simpl; only 1: destruct (eq_dec x) as [Heq| Hneq]; only 1: elim Heq using Eqdep_dec.K_dec_on; only 1: trivial; only 1: case Hneq; only 1: reflexivity; only 1: case H; only 1: reflexivity).	4.06335091591	1825
Coq.Logic.Eqdep_decX.K_dec_type	40
Coq.Logic.Eqdep_decX.eq_rect_eq_dec	40	4.0.1	search with cache (only 1: intros A eq_dec; only 1: intros; only 1: apply (Streicher_K__eq_rect_eq A (Eqdep_dec.K_dec_type eq_dec))).	0.076112985611	17
Coq.Logic.Eqdep_decX.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_decX.inj_pair2_eq_dec	40	0.0.0.0.0.0.0	search with cache (only 1: intros A eq_dec; only 1: apply eq_dep_eq__inj_pairT2; only 1: apply eq_rect_eq__eq_dep_eq; only 1: unfold Eq_rect_eq, Eq_rect_eq_on; only 1: intros; only 1: apply Eqdep_dec.eq_rect_eq_dec; only 1: apply eq_dec).	0.0412759780884	7
Coq.Logic.Eqdep_decX.UIP_refl_unit	40	2.0.0	search with cache (only 1: change (match tt as b return (tt = b -> Prop) with | tt => fun x => x = eq_refl end x); only 1: destruct x; only 1: reflexivity).	0.0194737911224	5
Coq.Logic.Eqdep_decX.UIP_refl_bool	40	1.0.0.1.0.0.0	search with cache (only 1: destruct b; only 1: change (match true as b return (true = b -> Prop) with | true => fun x => x = eq_refl | _ => fun _ => True end x); only 1: destruct x; only 1: reflexivity; only 1: change (match false as b return (false = b -> Prop) with | false => fun x => x = eq_refl | _ => fun _ => True end x); only 1: destruct x; only 1: reflexivity).	0.0542159080505	9
Coq.Logic.Eqdep_decX.UIP_refl_nat	40	0.1.1.0.0.0.0.1.0.0.0	search with cache (only 1: induction n; only 1: change (match 0 as n return (0 = n -> Prop) with | 0 => fun x => x = eq_refl | _ => fun _ => True end x); only 1: destruct x; only 1: reflexivity; only 1: specialize IHn with (f_equal Nat.pred x); only 1: change eq_refl with (f_equal S eq_refl); only 1: rewrite <- IHn; only 1: clear IHn; only 1: change (match S n as n' return (S n = n' -> Prop) with | 0 => fun _ => True | S n' => fun x => x = f_equal S (f_equal Nat.pred x) end x); only 1: destruct x; only 1: reflexivity).	0.67618393898	364
Coq.Logic.EqdepFactsX.eq_dep_sym	40	1.0	search with cache (only 1: destruct 1; only 1: auto).	0.0123658180237	3
Coq.Logic.EqdepFactsX.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.0114359855652	2
Coq.Logic.EqdepFactsX.eq_dep1_dep	40	0.20.0	search with cache (only 1: destruct 1; only 1: subst; only 1: reflexivity).	0.499339818954	961
Coq.Logic.EqdepFactsX.eq_dep_dep1	40	0.6.1	search with cache (only 1: destruct 1; only 1: apply EqdepFacts.eq_dep1_intro with eq_refl; only 1: reflexivity).	0.0165889263153	10
Coq.Logic.EqdepFactsX.eq_sigT_eq_dep	40	1.2.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply EqdepFacts.eq_dep_intro).	0.0219140052795	6
Coq.Logic.EqdepFactsX.eq_dep_eq_sigT	40	1.2.1	search with cache (only 1: intros A eq_dec; only 1: destruct 1; only 1: auto).	0.0509991645813	22
Coq.Logic.EqdepFactsX.eq_sigT_iff_eq_dep	40	2.2.2	search with cache (only 1: split; only 1: auto using EqdepFacts.eq_sigT_eq_dep, EqdepFacts.eq_dep_eq_sigT; only 1: auto using EqdepFacts.eq_sigT_eq_dep, EqdepFacts.eq_dep_eq_sigT).	0.0376241207123	18
Coq.Logic.EqdepFactsX.eq_sig_eq_dep	40	1.2.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply EqdepFacts.eq_dep_intro).	0.0309519767761	6
Coq.Logic.EqdepFactsX.eq_dep_eq_sig	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0342981815338	12
Coq.Logic.EqdepFactsX.eq_sig_iff_eq_dep	40	2.2.2	search with cache (only 1: split; only 1: auto using EqdepFacts.eq_sig_eq_dep, EqdepFacts.eq_dep_eq_sig; only 1: auto using EqdepFacts.eq_sig_eq_dep, EqdepFacts.eq_dep_eq_sig).	0.0360798835754	18
Coq.Logic.EqdepFactsX.eq_sigT_sig_eq	40	0.1.0.0.0.1.0.0.2.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: change H2 with (projT2 (existT P x2 H2))  at 5; only 1: destruct H; only 1: simpl; only 1: exists eq_refl; only 1: reflexivity; only 1: intro H; only 1: destruct H as (->, <-); only 1: reflexivity).	7.42029500008	2957
Coq.Logic.EqdepFactsX.eq_sigT_fst	40	1.0.2.0	search with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.0215351581573	7
Coq.Logic.EqdepFactsX.eq_sigT_snd	40
Coq.Logic.EqdepFactsX.eq_sig_fst	40	3.0.0.0	search with cache (only 1: intros; only 1: change x2 with (proj1_sig (exist P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.0743911266327	7
Coq.Logic.EqdepFactsX.eq_sig_snd	40
Coq.Logic.EqdepFactsX.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFactsX.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFactsX.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFactsX.UIP_on__UIP_refl_on	40	31	search with cache (only 1: <Coq.Strings.String.t_eqb>).	0.228546857834	943
Coq.Logic.EqdepFactsX.UIP_refl_on__Streicher_K_on	40	2.0.0.13.1	search with cache (only 1: red; only 1: intro UIP_refl; only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	1.45550513268	2530
Coq.Logic.EqdepFactsX.Streicher_K_on__eq_rect_eq_on	40	0.0.0.5	search with cache (only 1: intro Streicher_K; only 1: intro; only 1: apply Streicher_K; only 1: reflexivity).	0.0860321521759	73
Coq.Logic.EqdepFactsX.UIP_shift_on	40
Coq.Logic.EqdepFactsX.eq_dep_eq_on__inj_pair2_on	40	1.5.0	search with cache (only 1: intros; only 1: intro; only 1: auto using EqdepFacts.eq_sigT_eq_dep, EqdepFacts.eq_dep_eq_sigT).	0.0250089168549	9
Coq.Logic.EqdepFactsX.f_eq_dep	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0344941616058	15
Coq.Logic.EqdepFactsX.eq_dep_non_dep	40	0.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0154449939728	2
Coq.Logic.EqdepFactsX.f_eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0310180187225	14
Coq.Logic.StrictPropX.Spr1_inj	40
Coq.Logic.ClassicalUniqueChoiceX.unique_choice	40
Coq.Logic.ClassicalUniqueChoiceX.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoiceX.not_not_classic_set	40
Coq.Logic.ClassicalFactsX.prop_degen_ext	40
Coq.Logic.ClassicalFactsX.prop_degen_em	40
Coq.Logic.ClassicalFactsX.prop_ext_em_degen	40
Coq.Logic.ClassicalFactsX.provable_prop_ext	40	6.1.2	search with cache (only 1: intros EQ; only 1: intros a b; only 1: intuition).	0.143803834915	86
Coq.Logic.ClassicalFactsX.prop_ext_A_eq_A_imp_A	40	18.3	search with cache (only 1: intros x y H; only 1: auto with *).	1.42338895798	1164
Coq.Logic.ClassicalFactsX.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFactsX.ext_prop_fixpoint	40
Coq.Logic.ClassicalFactsX.aux	40
Coq.Logic.ClassicalFactsX.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFactsX.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFactsX.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFactsX.p2p1	40
Coq.Logic.ClassicalFactsX.p2p2	40
Coq.Logic.ClassicalFactsX.proof_irrelevance_cc	40
Coq.Logic.ClassicalFactsX.wp2p1	40
Coq.Logic.ClassicalFactsX.wp2p2	40
Coq.Logic.ClassicalFactsX.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFactsX.proof_irrelevance_cci	40
Coq.Logic.ClassicalFactsX.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFactsX.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFactsX.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFactsX.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFactsX.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFactsX.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFactsX.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFactsX.independence_general_premises_drinker	40
Coq.Logic.ClassicalFactsX.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFactsX.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFactsX.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFactsX.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFactsX.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFactsX.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFactsX.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.SetoidChoiceX.setoid_choice	40
Coq.Logic.SetoidChoiceX.representative_choice	40
Coq.Logic.EpsilonX.constructive_indefinite_description	40
Coq.Logic.EpsilonX.small_drinkers'_paradox	40
Coq.Logic.EpsilonX.iota_statement	40
Coq.Logic.EpsilonX.constructive_definite_description	40	1.1.3.2	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: firstorder; only 1: firstorder).	0.161731958389	43
Coq.Logic.IndefiniteDescriptionX.constructive_definite_description	40
Coq.Logic.IndefiniteDescriptionX.functional_choice	40
Coq.Logic.ExtensionalityFactsX.diagonal_projs_same_behavior	40	4.10.14	search with cache (only 1: intros m s1; only 1: case s1; only 1: trivial).	1.3076839447	1574
Coq.Logic.ExtensionalityFactsX.diagonal_inverse1	40
Coq.Logic.ExtensionalityFactsX.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0198981761932	4
Coq.Logic.ExtensionalityFactsX.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFactsX.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFactsX.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFactsX.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFactsX.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFactsX.BijComp_FunctExt	40
Coq.Logic.DecidableX.dec_not_not	40	9.9.11	search with cache (only 1: destruct 1; only 1: tauto; only 1: tauto).	4.14054298401	1609
Coq.Logic.DecidableX.dec_True	40	0	search with cache (only 1: now left || now right).	0.0149121284485	1
Coq.Logic.DecidableX.dec_False	40	0.6	search with cache (only 1: red; only 1: tauto).	0.0164189338684	8
Coq.Logic.DecidableX.dec_or	40	20.1.4	search with cache (only 1: intro n; only 1: intros; only 1: firstorder).	7.61470580101	4150
Coq.Logic.DecidableX.dec_and	40	0.9.5	search with cache (only 1: intro n; only 1: unfold decidable; only 1: tauto).	0.222982883453	294
Coq.Logic.DecidableX.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0203540325165	2
Coq.Logic.DecidableX.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0256199836731	2
Coq.Logic.DecidableX.dec_iff	40	0.8	search with cache (only 1: compute; only 1: tauto).	0.137809991837	17
Coq.Logic.DecidableX.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0194611549377	2
Coq.Logic.DecidableX.not_or	40	0	search with cache (only 1: tauto).	0.0686619281769	1
Coq.Logic.DecidableX.not_and	40	0.2	search with cache (only 1: unfold decidable; only 1: tauto).	0.0283758640289	4
Coq.Logic.DecidableX.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0272619724274	2
Coq.Logic.DecidableX.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0220329761505	2
Coq.Logic.DecidableX.not_iff	40	0.2	search with cache (only 1: unfold decidable; only 1: tauto).	0.0650119781494	4
Coq.Logic.DecidableX.not_true_iff	40	0	search with cache (only 1: tauto).	0.0150089263916	1
Coq.Logic.DecidableX.not_false_iff	40	0	search with cache (only 1: tauto).	0.0141730308533	1
Coq.Logic.DecidableX.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0203938484192	2
Coq.Logic.DecidableX.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0228190422058	2
Coq.Logic.DecidableX.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0259590148926	2
Coq.Logic.DecidableX.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0814280509949	2
Coq.Logic.DecidableX.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0249121189117	2
Coq.Logic.DecidableX.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0261328220367	2
Coq.Logic.DecidableX.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0267469882965	2
Coq.Logic.DecidableX.not_or_iff	40	0	search with cache (only 1: tauto).	0.0195620059967	1
Coq.Logic.DecidableX.not_and_iff	40	0	search with cache (only 1: tauto).	0.0175490379333	1
Coq.Logic.DecidableX.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0290350914001	2
Coq.Logic.DecidableX.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0299458503723	2
Coq.Logic.DecidableX.dec_functional_relation	40	0.1.0.0.0	search with cache (only 1: intros X Y A Hdec H x y; only 1: destruct (H x) as (y', (Hex, Huniq)); only 1: destruct (Hdec y y') as [->| Hnot]; only 1: firstorder; only 1: firstorder).	0.144664049149	6
Coq.Logic.ProofIrrelevanceFactsX.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFactsX.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFactsX.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.1.3.0	search with cache (only 1: intros; only 1: apply eq_dep_eq; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0531258583069	9
Coq.Logic.FunctionalExtensionalityX.equal_f	40	4.7	search with cache (only 1: intros A eq_dec x P H p; only 1: f_equal).	0.247488021851	248
Coq.Logic.FunctionalExtensionalityX.equal_f_dep	40	0.0.2	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0375618934631	18
Coq.Logic.FunctionalExtensionalityX.functional_extensionality	40
Coq.Logic.FunctionalExtensionalityX.forall_extensionality	40
Coq.Logic.FunctionalExtensionalityX.forall_extensionalityP	40	2.0.1	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0253908634186	6
Coq.Logic.FunctionalExtensionalityX.forall_extensionalityS	40	2.0.1	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0254778862	6
Coq.Logic.FunctionalExtensionalityX.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionalityX.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionalityX.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionalityX.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionalityX.f_equal__functional_extensionality_dep_good__fun	40
Coq.Logic.FunctionalExtensionalityX.eta_expansion_dep	40	6	search with cache (only 1: reflexivity).	0.0129311084747	7
Coq.Logic.FunctionalExtensionalityX.eta_expansion	40	4	search with cache (only 1: reflexivity).	0.0131738185883	5
Coq.Logic.ClassicalDescriptionX.excluded_middle_informative	40
Coq.Logic.ClassicalDescriptionX.classical_definite_description	40
Coq.Logic.ClassicalDescriptionX.dependent_unique_choice	40
Coq.Logic.ClassicalDescriptionX.unique_choice	40	0.0.9.2.1.4.16.9	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: intro x; only 1: destruct (H x) as (y, (HRxy, _)); only 1: trivial; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	3.95406508446	7248
Coq.Logic.ClassicalEpsilonX.constructive_definite_description	40
Coq.Logic.ClassicalEpsilonX.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilonX.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilonX.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilonX.choice	40
Coq.Logic.WeakFanX.Y_unique	40
Coq.Logic.WeakFanX.Y_approx	40
Coq.Logic.WeakFanX.WeakFanTheorem	40
Coq.Logic.PropFactsX.injection_is_involution_in_Prop	40
Coq.Logic.ChoiceFactsX.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFactsX.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFactsX.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFactsX.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFactsX.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFactsX.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFactsX.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFactsX.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFactsX.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFactsX.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFactsX.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFactsX.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFactsX.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFactsX.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFactsX.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFactsX.epsilon_imp_small_drinker	40	0.1.1.3.0.1	search with cache (only 1: intros D_epsilon A P H; only 1: destruct H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: apply H1).	0.103001117706	115
Coq.Logic.ChoiceFactsX.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFactsX.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFactsX.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFactsX.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFactsX.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFactsX.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFactsX.dep_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFactsX.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFactsX.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFactsX.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFactsX.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFactsX.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFactsX.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFactsX.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFactsX.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFactsX.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFactsX.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFactsX.repr_fun_choice_imp_ext_prop_repr	40	23.12.0	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt; only 1: apply H; only 1: intuition).	33.1144909859	2526
Coq.Logic.ChoiceFactsX.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFactsX.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFactsX.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFactsX.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFactsX.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFactsX.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFactsX.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFactsX.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFactsX.setoid_functional_choice_second_characterization	40
Coq.Logic.DiaconescuX.prop_ext	40
Coq.Logic.DiaconescuX.proof_irrel	40
Coq.Logic.DiaconescuX.guarded_rel_choice	40
Coq.Logic.DiaconescuX.AC_bool_subset_to_bool	40
Coq.Logic.DiaconescuX.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.DiaconescuX.a1'	40
Coq.Logic.DiaconescuX.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0173418521881	2
Coq.Logic.DiaconescuX.projT1_injective	40
Coq.Logic.DiaconescuX.decide	40
Coq.Logic.DiaconescuX.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.DiaconescuX.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.DiaconescuX.extensional_epsilon_imp_EM	40
Coq.Logic.HurkensX.Generic.Omega	40
Coq.Logic.HurkensX.Generic.lemma1	40
Coq.Logic.HurkensX.Generic.lemma2	40
Coq.Logic.HurkensX.Generic.paradox	40
Coq.Logic.HurkensX.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.HurkensX.NoRetractToModalProposition.strength	40	16.8	search with cache (only 1: intros; only 1: firstorder).	1.09613800049	1314
Coq.Logic.HurkensX.NoRetractToModalProposition.modal	40
Coq.Logic.HurkensX.NoRetractToModalProposition.Forall	40	0.24	search with cache (only 1: red; only 1: eauto).	0.152288913727	306
Coq.Logic.HurkensX.NoRetractToModalProposition.paradox	40
Coq.Logic.HurkensX.NoRetractToNegativeProp.paradox	40
Coq.Logic.HurkensX.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.HurkensX.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.HurkensX.NoRetractFromTypeToProp.paradox	40
Coq.Logic.HurkensX.TypeNeqSmallType.up_down	40	0.1	search with cache (only 1: subst; only 1: reflexivity).	0.0820770263672	3
Coq.Logic.HurkensX.TypeNeqSmallType.paradox	40
Coq.Logic.HurkensX.PropNeqType.paradox	40
Coq.Logic.JMeqX.JMeq_sym	40	5.0.11.0	search with cache (only 1: intros a b; only 1: intros; only 1: destruct H; only 1: intuition).	0.714447975159	975
Coq.Logic.JMeqX.JMeq_trans	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0162491798401	3
Coq.Logic.JMeqX.JMeq_ind	40
Coq.Logic.JMeqX.JMeq_rec	40	1.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0161027908325	4
Coq.Logic.JMeqX.JMeq_rect	40	1.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0169129371643	4
Coq.Logic.JMeqX.JMeq_ind_r	40
Coq.Logic.JMeqX.JMeq_rec_r	40	2.1.0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0328121185303	13
Coq.Logic.JMeqX.JMeq_rect_r	40	2.1.0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0336940288544	13
Coq.Logic.JMeqX.JMeq_congr	40	15.3	search with cache (only 1: intros; only 1: now rewrite ?H, ?IHp).	0.378788948059	546
Coq.Logic.JMeqX.JMeq_eq_dep_id	40	0.3	search with cache (only 1: destruct 1; only 1: apply eq_dep_intro).	0.0233159065247	14
Coq.Logic.JMeqX.eq_dep_id_JMeq	40	4.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0135819911957	6
Coq.Logic.JMeqX.eq_dep_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0129280090332	2
Coq.Logic.JMeqX.eq_dep_strictly_stronger_JMeq	40	0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: exists bool; only 1: exists (fun _ => True); only 1: exists true; only 1: exists false; only 1: exists I; only 1: exists I; only 1: split; only 1: tauto; only 1: intro H; only 1: assert (true = false) by (destruct H; reflexivity); only 1: discriminate).	0.243559837341	201
Coq.Logic.JMeqX.JMeq_eq_dep	40	2.1.0.7	search with cache (only 1: intros; only 1: destruct H; only 1: apply JMeq.JMeq_eq in H0 as ->; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.343665838242	264
Coq.Logic.Classical_Pred_TypeX.not_all_not_ex	40	12.7.29.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: firstorder).	25.1339352131	17964
Coq.Logic.Classical_Pred_TypeX.not_all_ex_not	40	7.6.9.0.0.4.0	search with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: intro Pdec; only 1: apply NNPP; only 1: firstorder).	7.03048086166	14040
Coq.Logic.Classical_Pred_TypeX.not_ex_all_not	40	9	search with cache (only 1: firstorder).	0.120346069336	40
Coq.Logic.Classical_Pred_TypeX.not_ex_not_all	40	16.1.2.1.4.0	search with cache (only 1: unfold not; only 1: intros f Hf H0; only 1: apply NNPP; only 1: unfold not; only 1: apply NNPP; only 1: firstorder).	7.83774805069	14329
Coq.Logic.Classical_Pred_TypeX.ex_not_not_all	40	3.1	search with cache (only 1: unfold not; only 1: firstorder).	0.0354819297791	32
Coq.Logic.Classical_Pred_TypeX.all_not_not_ex	40	7.0	search with cache (only 1: unfold not; only 1: firstorder).	0.0276410579681	24
Coq.Logic.PropExtensionalityX.proof_irrelevance	40
Coq.Logic.ConstructiveEpsilonX.linear_search_smallest	40	21.8	search with cache (only 1: intros y [H1 H2]; only 1: eauto).	3.23917007446	2192
Coq.Logic.ConstructiveEpsilonX.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilonX.P_implies_acc	40	14.3	search with cache (only 1: split; only 1: abstract now inversion 1).	0.280475854874	385
Coq.Logic.ConstructiveEpsilonX.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilonX.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilonX.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilonX.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilonX.P'_decidable	40	83.22	search with cache (only 1: intro Pdec; only 1: eauto with bool).	36.7160930634	69185
Coq.Logic.ConstructiveEpsilonX.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilonX.constructive_definite_ground_description	40	1.0.0.0.0.3.0.0.0.15.4.1	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: firstorder; only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: assumption; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: unfold P' in Hn; only 1: assumption).	12.5193080902	10810
Coq.Logic.FinFunX.Finite_alt	40
Coq.Logic.FinFunX.Injective_map_NoDup	40
Coq.Logic.FinFunX.Injective_list_carac	40
Coq.Logic.FinFunX.Injective_carac	40
Coq.Logic.FinFunX.Surjective_list_carac	40
Coq.Logic.FinFunX.Surjective_carac	40
Coq.Logic.FinFunX.Endo_Injective_Surjective	40
Coq.Logic.FinFunX.Finite_Empty_or_not	40
Coq.Logic.FinFunX.Surjective_inverse	40
Coq.Logic.FinFunX.Injective_Surjective_Bijective	40
Coq.Logic.FinFunX.Fin_Finite	40
Coq.Logic.FinFunX.Fin2Restrict.extend_ok	40
Coq.Logic.FinFunX.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFunX.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFunX.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFunX.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFunX.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFunX.Fin2Restrict.extend_injective	40
Coq.Logic.FinFunX.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFunX.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFunX.bInjective_bSurjective	40
Coq.Logic.FinFunX.bSurjective_bBijective	40
Coq.Logic.HLevelsX.forall_hprop	40	1.3.1.0.41	search with cache (only 1: intros EQ; only 1: intros x y H; only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: firstorder).	11.3955738544	20589
Coq.Logic.HLevelsX.and_hprop	40
Coq.Logic.HLevelsX.impl_hprop	40	0.0.3.0.0	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0331780910492	8
Coq.Logic.HLevelsX.false_hprop	40	0.3.19	search with cache (only 1: intro; only 1: intros; only 1: destruct p, q).	0.12392783165	290
Coq.Logic.HLevelsX.true_hprop	40
Coq.Logic.HLevelsX.not_hprop	40	1.0.3.0.9	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality; only 1: intro x; only 1: contradiction).	0.671696901321	205
Coq.Logic.HLevelsX.hset_hprop	40
Coq.Logic.HLevelsX.eq_trans_cancel	40
Coq.Logic.HLevelsX.hset_hOneType	40
Coq.Logic.HLevelsX.hprop_hprop	40
Coq.Logic.HLevelsX.hprop_hset	40
Coq.Logic.BerardiX.AC_IF	40
Coq.Logic.BerardiX.AC	40	1.0.49	search with cache (only 1: destruct r; only 1: simpl; only 1: tauto).	4.89228582382	9741
Coq.Logic.BerardiX.L1	40
Coq.Logic.BerardiX.retract_pow_U_U	40
Coq.Logic.BerardiX.not_has_fixpoint	40
Coq.Logic.BerardiX.classical_proof_irrelevance	40
Coq.Logic.PropExtensionalityFactsX.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFactsX.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFactsX.PropExt_and_PropFunExt_imp_PredExt	40	9.0	search with cache (only 1: intros Ext A P Q Eq; only 1: auto with arith).	0.0920679569244	81
Coq.Logic.PropExtensionalityFactsX.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFactsX.PropExt_imp_ProvPropExt	40	4.5	search with cache (only 1: intros; only 1: firstorder).	0.0331659317017	27
Coq.Logic.PropExtensionalityFactsX.PropExt_imp_RefutPropExt	40	3.2.1	search with cache (only 1: intro A; only 1: intros; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.528511047363	9
Coq.Logic.ClassicalChoiceX.singleton_choice	40
Coq.Logic.ClassicalChoiceX.choice	40
Coq.setoid_ring.Rings_RX.Rsth	40	1.0.1.10.0.2	search with cache (only 1: constructor; only 1: constructor; only 1: intro y; only 1: intros n nN2; only 1: auto with relations; only 1: congruence).	2.41613698006	1159
Coq.setoid_ring.Rings_RX.Rri	40
Coq.setoid_ring.Rings_RX.Rcri	40
Coq.setoid_ring.Rings_RX.R_one_zero	40	9	search with cache (only 1: exact R1_neq_R0).	0.0969250202179	11
Coq.setoid_ring.Rings_RX.Rdi	40
Coq.setoid_ring.RealFieldX.RTheory	40
Coq.setoid_ring.RealFieldX.Rfield	40
Coq.setoid_ring.RealFieldX.Rlt_n_Sn	40
Coq.setoid_ring.RealFieldX.Rlt_0_2	40
Coq.setoid_ring.RealFieldX.Rgen_phiPOS	40
Coq.setoid_ring.RealFieldX.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealFieldX.Rdef_pow_add	40
Coq.setoid_ring.RealFieldX.R_power_theory	40
Coq.setoid_ring.Ncring_initialX.Zsth	40	0	search with cache (only 1: exact eq_equivalence).	0.0222539901733	1
Coq.setoid_ring.Ncring_initialX.Zr	40
Coq.setoid_ring.Ncring_initialX.same_gen	40
Coq.setoid_ring.Ncring_initialX.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initialX.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initialX.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initialX.same_genZ	40
Coq.setoid_ring.Ncring_initialX.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initialX.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initialX.match_compOpp	40
Coq.setoid_ring.Ncring_initialX.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initialX.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initialX.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initialX.gen_phiZ_ext	40
Coq.setoid_ring.Ncring_initialX.gen_phiZ_morph	40
Coq.setoid_ring.Ncring_tacX.Zeqb_ok	40	0.7.5	search with cache (only 1: intros; only 1: apply Zeq_bool_eq; only 1: now destruct Zeq_bool).	0.281826972961	111
Coq.setoid_ring.Ncring_tacX.comm	40
Coq.setoid_ring.NcringX.pow_pos_comm	40
Coq.setoid_ring.NcringX.pow_pos_succ	40
Coq.setoid_ring.NcringX.pow_pos_add	40
Coq.setoid_ring.NcringX.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.0210421085358	1
Coq.setoid_ring.NcringX.ring_mul_0_l	40
Coq.setoid_ring.NcringX.ring_mul_0_r	40
Coq.setoid_ring.NcringX.ring_opp_mul_l	40
Coq.setoid_ring.NcringX.ring_opp_mul_r	40
Coq.setoid_ring.NcringX.ring_opp_add	40
Coq.setoid_ring.NcringX.ring_opp_opp	40
Coq.setoid_ring.NcringX.ring_sub_ext	40
Coq.setoid_ring.NcringX.ring_add_0_r	40	1.0.1.33	search with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	1.31561088562	756
Coq.setoid_ring.NcringX.ring_add_assoc1	40	20.6.10.20	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: mrewrite).	35.1756410599	9417
Coq.setoid_ring.NcringX.ring_add_assoc2	40	0.1.2.9.3	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	1.11453080177	301
Coq.setoid_ring.NcringX.ring_opp_zero	40
Coq.setoid_ring.BinListX.jump_tl	40	0.0.0.0.2.0.0.0.0.0	search with cache (only 1: induction j; only 1: simpl; only 1: intros; only 1: now rewrite ?IHj; only 1: simpl; only 1: intros; only 1: now rewrite ?IHj; only 1: simpl; only 1: intros; only 1: now rewrite ?IHj).	0.880352973938	357
Coq.setoid_ring.BinListX.jump_succ	40
Coq.setoid_ring.BinListX.jump_add	40
Coq.setoid_ring.BinListX.jump_pred_double	40	0.2.0.6.0.0.3.0.0.4	search with cache (only 1: induction i; only 1: simpl; only 1: intros; only 1: now rewrite !jump_tl; only 1: simpl; only 1: intros; only 1: now rewrite IHi, <- 2!BinList.jump_tl, IHi; only 1: intros; only 1: simpl; only 1: now rewrite ?IHj).	4.45001912117	3182
Coq.setoid_ring.BinListX.nth_jump	40	0.0.0.0.0.0.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite <- BinList.jump_tl, IHp; only 1: simpl; only 1: intros; only 1: now rewrite <- BinList.jump_tl, IHp; only 1: simpl; only 1: intros; only 1: trivial).	0.673589944839	223
Coq.setoid_ring.BinListX.nth_pred_double	40
Coq.setoid_ring.Rings_ZX.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0232989788055	3
Coq.setoid_ring.Rings_ZX.Z_one_zero	40	11	search with cache (only 1: discriminate).	0.371346950531	74
Coq.setoid_ring.Rings_ZX.Zdi	40
Coq.setoid_ring.Ring_theoryX.pow_pos_swap	40
Coq.setoid_ring.Ring_theoryX.pow_pos_succ	40
Coq.setoid_ring.Ring_theoryX.pow_pos_add	40
Coq.setoid_ring.Ring_theoryX.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.0222890377045	1
Coq.setoid_ring.Ring_theoryX.get_sign_None_th	40
Coq.setoid_ring.Ring_theoryX.IDmorph	40	0	search with cache (only 1: now apply (Ring_theory.mkmorph 0 1 radd rmul rsub ropp reqb (C:=Ring_theory.IDphi))).	0.0278000831604	1
Coq.setoid_ring.Ring_theoryX.Eqsth	40	0	search with cache (only 1: exact eq_equivalence).	0.0155031681061	1
Coq.setoid_ring.Ring_theoryX.Eq_s_ext	40	0.0.11	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	0.385698795319	61
Coq.setoid_ring.Ring_theoryX.Eq_ext	40
Coq.setoid_ring.Ring_theoryX.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theoryX.rmul_ext1_Proper	40	1	search with cache (only 1: exact (Ring_theory.SRmul_ext SReqe)).	0.0151679515839	2
Coq.setoid_ring.Ring_theoryX.SRopp_ext	40	0.0	search with cache (only 1: intros; only 1: exact H).	0.0190050601959	2
Coq.setoid_ring.Ring_theoryX.SReqe_Reqe	40
Coq.setoid_ring.Ring_theoryX.SRopp_mul_l	40
Coq.setoid_ring.Ring_theoryX.SRopp_add	40	1	search with cache (only 1: reflexivity).	0.0168797969818	2
Coq.setoid_ring.Ring_theoryX.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0159118175507	1
Coq.setoid_ring.Ring_theoryX.SRIDmorph	40
Coq.setoid_ring.Ring_theoryX.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theoryX.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theoryX.rmul_ext2_Proper	40	3	search with cache (only 1: exact (Ring_theory.Rmul_ext Reqe)).	0.017893075943	4
Coq.setoid_ring.Ring_theoryX.ropp_ext2_Proper	40	2	search with cache (only 1: exact (Ring_theory.Ropp_ext Reqe)).	0.017019033432	3
Coq.setoid_ring.Ring_theoryX.Rmul_0_l	40
Coq.setoid_ring.Ring_theoryX.Ropp_mul_l	40
Coq.setoid_ring.Ring_theoryX.Ropp_add	40
Coq.setoid_ring.Ring_theoryX.Ropp_opp	40
Coq.setoid_ring.Ring_theoryX.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theoryX.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theoryX.copp_ext_Proper	40
Coq.setoid_ring.Ring_theoryX.phi_ext1_Proper	40
Coq.setoid_ring.Ring_theoryX.Smorph_opp	40
Coq.setoid_ring.Ring_theoryX.Smorph_sub	40
Coq.setoid_ring.Ring_theoryX.ARth_SRth	40
Coq.setoid_ring.Ring_theoryX.ARsub_ext	40
Coq.setoid_ring.Ring_theoryX.ARadd_0_r	40	10.0	search with cache (only 1: elim ARth; only 1: let rec mrewrite := repeat (first [ rewrite (Ring_theory.ARadd_0_l ARth) | rewrite <- (Ring_theory.ARadd_comm ARth 0) | rewrite (Ring_theory.ARmul_1_l ARth) | rewrite <- (Ring_theory.ARmul_comm ARth 1) | rewrite (Ring_theory.ARmul_0_l ARth) | rewrite <- (Ring_theory.ARmul_comm ARth 0) | rewrite (Ring_theory.ARdistr_l ARth) | reflexivity | match goal with | |- context [ ?z * (?x + ?y) ] => rewrite (Ring_theory.ARmul_comm ARth z (x + y)) end ]) in mrewrite).	0.282241821289	106
Coq.setoid_ring.Ring_theoryX.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0305800437927	1
Coq.setoid_ring.Ring_theoryX.ARmul_0_r	40	0	search with cache (only 1: mrewrite).	0.0347530841827	1
Coq.setoid_ring.Ring_theoryX.ARdistr_r	40	13.1	search with cache (only 1: elim ARth; only 1: now rewrite !(Ring_theory.ARmul_comm ARth z)).	3.19146585464	687
Coq.setoid_ring.Ring_theoryX.ARadd_assoc1	40	11.2	search with cache (only 1: elim ARth; only 1: now rewrite <- !(Ring_theory.ARadd_assoc ARth), (Ring_theory.ARadd_comm ARth x)).	0.677057981491	207
Coq.setoid_ring.Ring_theoryX.ARadd_assoc2	40	14	search with cache (only 1: now rewrite <- !(Ring_theory.ARadd_assoc ARth), (Ring_theory.ARadd_comm ARth x)).	0.556620121002	187
Coq.setoid_ring.Ring_theoryX.ARmul_assoc1	40	13.32	search with cache (only 1: elim ARth; only 1: now rewrite <- (Ring_theory.ARmul_assoc ARth x), (Ring_theory.ARmul_comm ARth x)).	1.22915887833	1265
Coq.setoid_ring.Ring_theoryX.ARmul_assoc2	40	15.33	search with cache (only 1: elim ARth; only 1: now rewrite <- !(Ring_theory.ARmul_assoc ARth), (Ring_theory.ARmul_comm ARth x)).	1.40129995346	1471
Coq.setoid_ring.Ring_theoryX.ARopp_mul_r	40	2.6.11	search with cache (only 1: rewrite (Ring_theory.ARmul_comm ARth x y), (Ring_theory.ARopp_mul_l ARth); only 1: elim ARth; only 1: trivial).	0.890104055405	480
Coq.setoid_ring.Ring_theoryX.ARopp_zero	40
Coq.setoid_ring.InitialRingX.Zth	40
Coq.setoid_ring.InitialRingX.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0190238952637	1
Coq.setoid_ring.InitialRingX.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0191791057587	1
Coq.setoid_ring.InitialRingX.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0165379047394	1
Coq.setoid_ring.InitialRingX.get_signZ_th	40	3.0.2.0.0.0.0.0.0.0.0.0	search with cache (only 1: constructor; only 1: destruct c; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: intros; only 1: injection H as [=<-]; only 1: simpl; only 1: unfold Zeq_bool; only 1: rewrite Z.compare_refl; only 1: trivial).	7.35216593742	2926
Coq.setoid_ring.InitialRingX.rsub_ext3_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0226819515228	1
Coq.setoid_ring.InitialRingX.same_gen	40
Coq.setoid_ring.InitialRingX.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRingX.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRingX.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRingX.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0274991989136	1
Coq.setoid_ring.InitialRingX.same_genZ	40	2.0.0.3.0.0.1.3.6	search with cache (only 1: destruct x; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: simpl; only 1: rewrite (InitialRing.same_gen (R:=ARth)); only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: simpl; only 1: rewrite (InitialRing.same_gen (R:=ARth)); only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm).	8.4067800045	2957
Coq.setoid_ring.InitialRingX.gen_Zeqb_ok	40	1.0.1.0	search with cache (only 1: intros x y H; only 1: pose proof (Zeq_bool_eq x y H) as H1; only 1: rewrite H1; only 1: let rec rrefl := gen_reflexivity Rsth in rrefl).	0.0580470561981	6
Coq.setoid_ring.InitialRingX.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRingX.gen_phiZ_add	40
Coq.setoid_ring.InitialRingX.gen_phiZ_mul	40
Coq.setoid_ring.InitialRingX.gen_phiZ_ext	40	0.9.0	search with cache (only 1: intros x y H; only 1: subst; only 1: rrefl).	0.995018959045	191
Coq.setoid_ring.InitialRingX.gen_phiZ_morph	40
Coq.setoid_ring.InitialRingX.Nth	40
Coq.setoid_ring.InitialRingX.Neqb_ok	40	0	search with cache (only 1: exact (fun x y => proj1 (N.eqb_eq x y))).	0.0210518836975	1
Coq.setoid_ring.InitialRingX.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0300779342651	1
Coq.setoid_ring.InitialRingX.rmul_ext4_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0327520370483	1
Coq.setoid_ring.InitialRingX.same_genN	40	3.0.0.1.5	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite (InitialRing.same_gen Rsth Reqe ARth)).	0.52966094017	125
Coq.setoid_ring.InitialRingX.gen_phiN_add	40	1.0.1.0.1.4.0.0.1.3	search with cache (only 1: intros x y; only 1: repeat rewrite InitialRing.same_genN; only 1: destruct x; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite_sr Rsth Reqe ARth in norm; only 1: destruct y; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite_sr Rsth Reqe ARth in norm; only 1: simpl; only 1: apply (InitialRing.ARgen_phiPOS_add Rsth Reqe ARth)).	29.333632946	8415
Coq.setoid_ring.InitialRingX.gen_phiN_mult	40
Coq.setoid_ring.InitialRingX.gen_phiN_sub	40	4	search with cache (only 1: exact InitialRing.gen_phiN_add).	0.577325105667	100
Coq.setoid_ring.InitialRingX.gen_phiN_morph	40
Coq.setoid_ring.InitialRingX.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0198621749878	1
Coq.setoid_ring.InitialRingX.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0195660591125	1
Coq.setoid_ring.InitialRingX.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0163190364838	1
Coq.setoid_ring.InitialRingX.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.023540019989	1
Coq.setoid_ring.InitialRingX.gen_phiNword0_ok	40	0.1.0.2.0.0.8.1.0.0.0.4	search with cache (only 1: induction w; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: destruct a; only 1: simpl; only 1: destruct w; only 1: reflexivity; only 1: rewrite IHw; only 1: apply (ARopp_zero Rsth Reqe ARth); only 1: trivial; only 1: discriminate).	39.9467940331	19557
Coq.setoid_ring.InitialRingX.gen_phiNword_cons	40
Coq.setoid_ring.InitialRingX.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite_sr Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.182801008224	10
Coq.setoid_ring.InitialRingX.gen_phiNword_ok	40
Coq.setoid_ring.InitialRingX.Nwadd_ok	40
Coq.setoid_ring.InitialRingX.Nwopp_ok	40	2.3.16	search with cache (only 1: induction x; only 1: norm; only 1: norm).	0.650427818298	480
Coq.setoid_ring.InitialRingX.Nwscal_ok	40
Coq.setoid_ring.InitialRingX.Nwmul_ok	40
Coq.setoid_ring.InitialRingX.gen_phiNword_morph	40
Coq.setoid_ring.InitialRingX.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.125926971436	1
Coq.setoid_ring.InitialRingX.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.118287086487	1
Coq.setoid_ring.InitialRingX.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.123444080353	1
Coq.setoid_ring.InitialRingX.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.116822957993	1
Coq.setoid_ring.InitialRingX.triv_div_th	40
Coq.setoid_ring.InitialRingX.Ztriv_div_th	40	1.2.0.0.0.1.0.0	search with cache (only 1: constructor; only 1: intros; only 1: generalize (Z.quotrem_eq a b); only 1: case Z.quotrem; only 1: intros; only 1: subst; only 1: rewrite Z.mul_comm; only 1: let rec rsimpl := gen_srewrite Rsth Reqe ARth in rsimpl).	8.07760691643	395
Coq.setoid_ring.InitialRingX.Ntriv_div_th	40	2.0.0.0.0.0.0	search with cache (only 1: constructor; only 1: intros; only 1: generalize (N.div_eucl_spec a b); only 1: case N.div_eucl; only 1: intros; only 1: subst; only 1: let rec rsimpl := gen_srewrite Rsth Reqe ARth in rsimpl).	0.563483953476	11
Coq.setoid_ring.RingX.BoolTheory	40
Coq.setoid_ring.RingX.bool_eq_ok	40	0.2.0.0.3.0	search with cache (only 1: intros m n v1; only 1: destruct n as [| n], m as [| m]; only 1: tauto; only 1: tauto; only 1: auto with arith; only 1: tauto).	0.145778894424	50
Coq.setoid_ring.Ring_polynomX.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.092031955719	1
Coq.setoid_ring.Ring_polynomX.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0858418941498	1
Coq.setoid_ring.Ring_polynomX.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0873658657074	1
Coq.setoid_ring.Ring_polynomX.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0928101539612	1
Coq.setoid_ring.Ring_polynomX.Pequiv_eq	40
Coq.setoid_ring.Ring_polynomX.Pphi_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.0675168037415	1
Coq.setoid_ring.Ring_polynomX.Pinj_ext	40	0.9.4	search with cache (only 1: intros i j <- P P' HP l; only 1: simpl; only 1: now rewrite HP).	5.65709614754	362
Coq.setoid_ring.Ring_polynomX.PX_ext	40	0.0.2	search with cache (only 1: intros P P' HP p p' <- Q Q' HQ l; only 1: simpl; only 1: now rewrite HP, HQ).	0.197467088699	5
Coq.setoid_ring.Ring_polynomX.jump_add'	40	0.1	search with cache (only 1: rewrite Pos.add_comm; only 1: apply jump_add).	0.159507036209	3
Coq.setoid_ring.Ring_polynomX.Peq_ok	40
Coq.setoid_ring.Ring_polynomX.Peq_spec	40
Coq.setoid_ring.Ring_polynomX.Pphi0	40	0.6	search with cache (only 1: simpl; only 1: apply (morph0 CRmorph)).	0.209877967834	8
Coq.setoid_ring.Ring_polynomX.Pphi1	40	0.6	search with cache (only 1: simpl; only 1: now rewrite (morph1 CRmorph)).	0.182684183121	8
Coq.setoid_ring.Ring_polynomX.mkPinj_ok	40	0.1.0.1.0.7	search with cache (only 1: destruct P; only 1: easy; only 1: simpl; only 1: now rewrite Ring_polynom.jump_add'; only 1: simpl; only 1: easy).	2.59995293617	137
Coq.setoid_ring.Ring_polynomX.mkPinj_ext	40
Coq.setoid_ring.Ring_polynomX.pow_pos_add	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	0.627460956573	12
Coq.setoid_ring.Ring_polynomX.ceqb_spec	40	0.0.0.1	search with cache (only 1: generalize (morph_eq CRmorph c c'); only 1: destruct (c ?=! c'); only 1: auto; only 1: auto).	3.43398594856	81
Coq.setoid_ring.Ring_polynomX.mkPX_ok	40
Coq.setoid_ring.Ring_polynomX.mkPX_ext	40
Coq.setoid_ring.Ring_polynomX.PaddC_ok	40
Coq.setoid_ring.Ring_polynomX.PsubC_ok	40
Coq.setoid_ring.Ring_polynomX.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynomX.PmulC_ok	40
Coq.setoid_ring.Ring_polynomX.Popp_ok	40
Coq.setoid_ring.Ring_polynomX.PaddX_ok	40
Coq.setoid_ring.Ring_polynomX.Padd_ok	40
Coq.setoid_ring.Ring_polynomX.Psub_opp	40
Coq.setoid_ring.Ring_polynomX.Psub_ok	40
Coq.setoid_ring.Ring_polynomX.PmulI_ok	40
Coq.setoid_ring.Ring_polynomX.Pmul_ok	40
Coq.setoid_ring.Ring_polynomX.mkZmon_ok	40
Coq.setoid_ring.Ring_polynomX.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynomX.mkVmon_ok	40
Coq.setoid_ring.Ring_polynomX.Mcphi_ok	40
Coq.setoid_ring.Ring_polynomX.Mphi_ok	40
Coq.setoid_ring.Ring_polynomX.POneSubst_ok	40
Coq.setoid_ring.Ring_polynomX.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynomX.PNSubst_ok	40
Coq.setoid_ring.Ring_polynomX.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynomX.PSubstL_ok	40
Coq.setoid_ring.Ring_polynomX.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynomX.mkX_ok	40
Coq.setoid_ring.Ring_polynomX.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynomX.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynomX.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynomX.norm_aux_PEopp	40	13	search with cache (only 1: now destruct pe).	0.914874076843	90
Coq.setoid_ring.Ring_polynomX.norm_aux_spec	40
Coq.setoid_ring.Ring_polynomX.norm_subst_spec	40
Coq.setoid_ring.Ring_polynomX.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynomX.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynomX.norm_subst_ok	40
Coq.setoid_ring.Ring_polynomX.ring_correct	40
Coq.setoid_ring.Ring_polynomX.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynomX.mkmult1_ok	40
Coq.setoid_ring.Ring_polynomX.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynomX.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynomX.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynomX.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynomX.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynomX.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynomX.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynomX.mult_dev_ok	40
Coq.setoid_ring.Ring_polynomX.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynomX.local_mkpow_ok	40	0.0.0.0	search with cache (only 1: destruct p; only 1: now rewrite ?(rpow_pow_N pow_th); only 1: now rewrite ?(rpow_pow_N pow_th); only 1: now rewrite ?(rpow_pow_N pow_th)).	0.388927936554	4
Coq.setoid_ring.Ring_polynomX.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynomX.ring_rw_pow_correct	40	5.8.0.5.15	search with cache (only 1: intros n lH l H1 lmp Heq1 pe npe Heq2; only 1: rewrite Ring_polynom.Pphi_pow_ok, <- Heq2, <- Heq1; only 1: apply norm_subst_spec; only 1: apply interp_PElist_ok; only 1: trivial).	16.8212277889	3513
Coq.setoid_ring.Ring_polynomX.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynomX.mkpow_ok	40
Coq.setoid_ring.Ring_polynomX.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynomX.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynomX.ring_rw_correct	40	1.0.10.7.8.0	search with cache (only 1: intros n lH l H1 lmp Heq1 pe npe Heq2; only 1: rewrite <- Heq2; only 1: rewrite <- Heq1; only 1: rewrite Ring_polynom.Pphi_dev_ok; only 1: apply norm_subst_ok; only 1: trivial).	12.9708828926	2860
Coq.setoid_ring.CringX.cring_eq_ext	40
Coq.setoid_ring.CringX.cring_almost_ring_theory	40
Coq.setoid_ring.CringX.cring_morph	40
Coq.setoid_ring.CringX.cring_power_theory	40
Coq.setoid_ring.CringX.cring_div_theory	40
Coq.setoid_ring.CringX.Zcri	40
Coq.setoid_ring.Field_theoryX.radd_ext_Proper	40
Coq.setoid_ring.Field_theoryX.rmul_ext_Proper	40
Coq.setoid_ring.Field_theoryX.ropp_ext_Proper	40
Coq.setoid_ring.Field_theoryX.rsub_ext_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0157477855682	4
Coq.setoid_ring.Field_theoryX.rinv_ext_Proper	40	7	search with cache (only 1: trivial).	0.0215420722961	8
Coq.setoid_ring.Field_theoryX.ceqb_spec	40	0.0.0.0	search with cache (only 1: generalize (morph_eq CRmorph c c'); only 1: destruct (c =? c')%coef; only 1: auto; only 1: auto).	5.54207611084	4
Coq.setoid_ring.Field_theoryX.NPEequiv_eq	40
Coq.setoid_ring.Field_theoryX.NPEeval_ext	40	1.5	search with cache (only 1: intros l l' <- e e' He; only 1: eauto).	3.66433501244	8
Coq.setoid_ring.Field_theoryX.rsub_0_l	40	4	search with cache (only 1: eauto).	1.9024310112	5
Coq.setoid_ring.Field_theoryX.rsub_0_r	40
Coq.setoid_ring.Field_theoryX.rdiv_simpl	40
Coq.setoid_ring.Field_theoryX.rdiv_ext	40
Coq.setoid_ring.Field_theoryX.rmul_reg_l	40
Coq.setoid_ring.Field_theoryX.field_is_integral_domain	40
Coq.setoid_ring.Field_theoryX.ropp_neq_0	40
Coq.setoid_ring.Field_theoryX.rdiv_r_r	40	15	search with cache (only 1: eauto).	25.2443950176	175
Coq.setoid_ring.Field_theoryX.rdiv1	40
Coq.setoid_ring.Field_theoryX.rdiv2	40
Coq.setoid_ring.Field_theoryX.rdiv2b	40
Coq.setoid_ring.Field_theoryX.rdiv5	40
Coq.setoid_ring.Field_theoryX.rdiv3b	40
Coq.setoid_ring.Field_theoryX.rdiv6	40
Coq.setoid_ring.Field_theoryX.rdiv4	40
Coq.setoid_ring.Field_theoryX.rdiv4b	40
Coq.setoid_ring.Field_theoryX.rdiv7	40
Coq.setoid_ring.Field_theoryX.rdiv7b	40
Coq.setoid_ring.Field_theoryX.rinv_nz	40
Coq.setoid_ring.Field_theoryX.rdiv8	40
Coq.setoid_ring.Field_theoryX.cross_product_eq	40
Coq.setoid_ring.Field_theoryX.pow_ext	40
Coq.setoid_ring.Field_theoryX.pow_N_ext	40
Coq.setoid_ring.Field_theoryX.pow_pos_0	40	3.1.0.0.0.1	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	30.7398869991	67
Coq.setoid_ring.Field_theoryX.pow_pos_1	40
Coq.setoid_ring.Field_theoryX.pow_pos_cst	40
Coq.setoid_ring.Field_theoryX.pow_pos_mul_l	40
Coq.setoid_ring.Field_theoryX.pow_pos_add_r	40	5	search with cache (only 1: exact (pow_pos_add Rsth Field_theory.rmul_ext rmul_assoc x p1 p2)).	1.81970500946	6
Coq.setoid_ring.Field_theoryX.pow_pos_mul_r	40
Coq.setoid_ring.Field_theoryX.pow_pos_nz	40
Coq.setoid_ring.Field_theoryX.pow_pos_div	40
Coq.setoid_ring.Field_theoryX.PEadd_ext	40
Coq.setoid_ring.Field_theoryX.PEsub_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	6.45108294487	4
Coq.setoid_ring.Field_theoryX.PEmul_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	6.42883682251	4
Coq.setoid_ring.Field_theoryX.PEopp_ext	40
Coq.setoid_ring.Field_theoryX.PEpow_ext	40
Coq.setoid_ring.Field_theoryX.PE_1_l	40
Coq.setoid_ring.Field_theoryX.PE_1_r	40	6.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	7.59597015381	10
Coq.setoid_ring.Field_theoryX.PEpow_0_r	40	6.0	search with cache (only 1: intros l; only 1: eauto).	13.7859909534	29
Coq.setoid_ring.Field_theoryX.PEpow_1_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	6.11410403252	3
Coq.setoid_ring.Field_theoryX.PEpow_1_l	40
Coq.setoid_ring.Field_theoryX.PEpow_add_r	40
Coq.setoid_ring.Field_theoryX.PEpow_mul_l	40
Coq.setoid_ring.Field_theoryX.PEpow_mul_r	40
Coq.setoid_ring.Field_theoryX.PEpow_nz	40
Coq.setoid_ring.Field_theoryX.if_true	40
Coq.setoid_ring.Field_theoryX.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theoryX.PExpr_eq_spec	40
Coq.setoid_ring.Field_theoryX.NPEadd_ok	40
Coq.setoid_ring.Field_theoryX.NPEsub_ok	40
Coq.setoid_ring.Field_theoryX.NPEopp_ok	40
Coq.setoid_ring.Field_theoryX.NPEpow_ok	40
Coq.setoid_ring.Field_theoryX.NPEmul_ok	40
Coq.setoid_ring.Field_theoryX.PEsimp_ok	40
Coq.setoid_ring.Field_theoryX.PCond_cons	40
Coq.setoid_ring.Field_theoryX.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theoryX.PCond_cons_inv_r	40
Coq.setoid_ring.Field_theoryX.PCond_app	40
Coq.setoid_ring.Field_theoryX.absurd_PCond_bottom	40	4.5	search with cache (only 1: destruct 1; only 1: trivial).	18.9342529774	28
Coq.setoid_ring.Field_theoryX.Z_pos_sub_gt	40	0.1	search with cache (only 1: intros; only 1: now apply Z.pos_sub_gt, Pos.gt_lt).	5.73154020309	3
Coq.setoid_ring.Field_theoryX.default_isIn_ok	40
Coq.setoid_ring.Field_theoryX.isIn_ok	40
Coq.setoid_ring.Field_theoryX.split_aux_ok1	40
Coq.setoid_ring.Field_theoryX.split_aux_ok	40
Coq.setoid_ring.Field_theoryX.split_ok_l	40
Coq.setoid_ring.Field_theoryX.split_ok_r	40
Coq.setoid_ring.Field_theoryX.split_nz_l	40
Coq.setoid_ring.Field_theoryX.split_nz_r	40
Coq.setoid_ring.Field_theoryX.Pcond_Fnorm	40
Coq.setoid_ring.Field_theoryX.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theoryX.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theoryX.Fnorm_ok	40
Coq.setoid_ring.Field_theoryX.Field_rw_correct	40
Coq.setoid_ring.Field_theoryX.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theoryX.Field_correct	40
Coq.setoid_ring.Field_theoryX.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theoryX.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theoryX.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theoryX.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theoryX.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theoryX.fcons_ok	40
Coq.setoid_ring.Field_theoryX.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theoryX.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theoryX.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theoryX.ceqb_spec'	40
Coq.setoid_ring.Field_theoryX.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theoryX.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theoryX.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0108389854431	1
Coq.setoid_ring.Field_theoryX.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0111491680145	1
Coq.setoid_ring.Field_theoryX.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00943517684937	1
Coq.setoid_ring.Field_theoryX.add_inj_r	40
Coq.setoid_ring.Field_theoryX.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theoryX.gen_phiN_inj	40
Coq.setoid_ring.Field_theoryX.gen_phiN_complete	40
Coq.setoid_ring.Field_theoryX.ring_S_inj	40
Coq.setoid_ring.Field_theoryX.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theoryX.gen_phiZ_inj	40
Coq.setoid_ring.Field_theoryX.gen_phiZ_complete	40
Coq.setoid_ring.Rings_QX.Qri	40
Coq.setoid_ring.Rings_QX.Qcri	40
Coq.setoid_ring.Rings_QX.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0115778446198	1
Coq.setoid_ring.Rings_QX.Qdi	40
Coq.setoid_ring.Integral_domainX.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domainX.pow_not_zero	40
Coq.setoid_ring.Integral_domainX.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynomX.cO	40	23	search with cache (only 1: simpl_relation).	0.143881082535	255
Coq.setoid_ring.Ncring_polynomX.cI	40	0	search with cache (only 1: exact ring0).	0.0134260654449	1
Coq.setoid_ring.Ncring_polynomX.Peq_ok	40
Coq.setoid_ring.Ncring_polynomX.Pphi0	40
Coq.setoid_ring.Ncring_polynomX.Pphi1	40
Coq.setoid_ring.Ncring_polynomX.mkPX_ok	40
Coq.setoid_ring.Ncring_polynomX.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynomX.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynomX.PmulC_ok	40
Coq.setoid_ring.Ncring_polynomX.Popp_ok	40
Coq.setoid_ring.Ncring_polynomX.PaddXPX	40
Coq.setoid_ring.Ncring_polynomX.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynomX.Padd_ok	40
Coq.setoid_ring.Ncring_polynomX.PaddX_ok	40
Coq.setoid_ring.Ncring_polynomX.Psub_ok	40
Coq.setoid_ring.Ncring_polynomX.Pmul_ok	40
Coq.setoid_ring.Ncring_polynomX.Psquare_ok	40
Coq.setoid_ring.Ncring_polynomX.mkX_ok	40	1.5.9	search with cache (only 1: Esimpl2; only 1: intros; only 1: Esimpl2).	4.27629303932	155
Coq.setoid_ring.Ncring_polynomX.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynomX.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynomX.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynomX.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynomX.norm_subst_ok	40	12.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	6.09398508072	306
Coq.setoid_ring.Ncring_polynomX.ring_correct	40
Coq.setoid_ring.ArithRingX.natSRth	40
Coq.setoid_ring.ArithRingX.nat_morph_N	40	0.0.0.1.0.0.0.0	search with cache (only 1: constructor; only 1: trivial; only 1: trivial; only 1: exact N2Nat.inj_add; only 1: exact N2Nat.inj_mul; only 1: intros x y H; only 1: apply N.eqb_eq in H; only 1: now subst).	0.0795660018921	9
Coq.MSets.MSetRBTX.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBTX.MakeRaw.singleton_ok	40	38	search with cache (only 1: intuition).	0.202626228333	735
Coq.MSets.MSetRBTX.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBTX.MakeRaw.makeRed_spec	40
Coq.MSets.MSetRBTX.MakeRaw.makeBlack_ok	40
Coq.MSets.MSetRBTX.MakeRaw.makeRed_ok	40	0.0.1.17	search with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: intuition_in).	20.3392767906	2982
Coq.MSets.MSetRBTX.MakeRaw.rmatch	40
Coq.MSets.MSetRBTX.MakeRaw.rrmatch	40
Coq.MSets.MSetRBTX.MakeRaw.rrmatch'	40
Coq.MSets.MSetRBTX.MakeRaw.lbal_match	40
Coq.MSets.MSetRBTX.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0107269287109	1
Coq.MSets.MSetRBTX.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBTX.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBTX.MakeRaw.rbalS_match	40
Coq.MSets.MSetRBTX.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBTX.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBTX.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBTX.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBTX.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBTX.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBTX.MakeRaw.ins_spec	40
Coq.MSets.MSetRBTX.MakeRaw.ins_ok	40
Coq.MSets.MSetRBTX.MakeRaw.add_spec'	40
Coq.MSets.MSetRBTX.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0299620628357	2
Coq.MSets.MSetRBTX.MakeRaw.add_ok	40	4.1	search with cache (only 1: unfold add; only 1: eauto with *).	0.662718057632	57
Coq.MSets.MSetRBTX.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBTX.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBTX.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBTX.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBTX.MakeRaw.append_rr_match	40
Coq.MSets.MSetRBTX.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0127499103546	1
Coq.MSets.MSetRBTX.MakeRaw.append_spec	40
Coq.MSets.MSetRBTX.MakeRaw.append_ok	40
Coq.MSets.MSetRBTX.MakeRaw.del_spec	40
Coq.MSets.MSetRBTX.MakeRaw.del_ok	40
Coq.MSets.MSetRBTX.MakeRaw.remove_spec	40
Coq.MSets.MSetRBTX.MakeRaw.remove_ok	40	0.0.1	search with cache (only 1: destruct s; only 1: now auto; only 1: ok).	0.615483045578	62
Coq.MSets.MSetRBTX.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBTX.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBTX.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBTX.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBTX.MakeRaw.treeify_zero_spec	40	1.0.1.4	search with cache (only 1: intro H'; only 1: unfold elements; only 1: simpl; only 1: now simpl).	0.0295360088348	10
Coq.MSets.MSetRBTX.MakeRaw.treeify_one_spec	40	0.1.0.2.0.31.1	search with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: Nat.order'; only 1: intuition; only 1: simpl; only 1: auto with arith).	2.71350598335	4328
Coq.MSets.MSetRBTX.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBTX.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBTX.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBTX.MakeRaw.plength_spec	40
Coq.MSets.MSetRBTX.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBTX.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBTX.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBTX.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBTX.MakeRaw.filter_elements	40
Coq.MSets.MSetRBTX.MakeRaw.filter_spec	40
Coq.MSets.MSetRBTX.MakeRaw.filter_ok	40
Coq.MSets.MSetRBTX.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBTX.MakeRaw.partition_spec	40
Coq.MSets.MSetRBTX.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBTX.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0172929763794	1
Coq.MSets.MSetRBTX.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBTX.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.013573884964	2
Coq.MSets.MSetRBTX.MakeRaw.INV_init	40
Coq.MSets.MSetRBTX.MakeRaw.INV_sym	40	26	search with cache (only 1: firstorder).	5.82960104942	2733
Coq.MSets.MSetRBTX.MakeRaw.INV_drop	40
Coq.MSets.MSetRBTX.MakeRaw.INV_eq	40
Coq.MSets.MSetRBTX.MakeRaw.INV_lt	40
Coq.MSets.MSetRBTX.MakeRaw.INV_rev	40
Coq.MSets.MSetRBTX.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBTX.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBTX.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBTX.MakeRaw.union_ok	40
Coq.MSets.MSetRBTX.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBTX.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBTX.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBTX.MakeRaw.union_spec'	40
Coq.MSets.MSetRBTX.MakeRaw.union_spec	40	0.1.0.1.1.0.0.6	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	7.52779197693	613
Coq.MSets.MSetRBTX.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBTX.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBTX.MakeRaw.inter_ok	40
Coq.MSets.MSetRBTX.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBTX.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBTX.MakeRaw.mem_proper	40
Coq.MSets.MSetRBTX.MakeRaw.inter_spec	40
Coq.MSets.MSetRBTX.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBTX.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBTX.MakeRaw.fold_remove_ok	40	0.0.0.5.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.52322602272	210
Coq.MSets.MSetRBTX.MakeRaw.diff_ok	40
Coq.MSets.MSetRBTX.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBTX.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBTX.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBTX.MakeRaw.diff_spec	40
Coq.MSets.MSetRBTX.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBTX.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBTX.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBTX.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBTX.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBTX.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBTX.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0441031455994	9
Coq.MSets.MSetRBTX.BalanceProps.singleton_rb	40	108.32	search with cache (only 1: compute; only 1: eauto).	35.7330601215	39521
Coq.MSets.MSetRBTX.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBTX.BalanceProps.makeRed_rr	40	2.1.3.0.0	search with cache (only 1: destruct t; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	0.426651000977	163
Coq.MSets.MSetRBTX.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBTX.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBTX.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBTX.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBTX.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBTX.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBTX.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBTX.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBTX.BalanceProps.ifred_or	40	1.0.1.0.0.5.3.6	search with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: right; only 1: by [  ]; only 1: descolor; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	14.0005161762	4325
Coq.MSets.MSetRBTX.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBTX.BalanceProps.ins_arb	40
Coq.MSets.MSetRBTX.BalanceProps.add_rb	40
Coq.MSets.MSetRBTX.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBTX.BalanceProps.del_arb	40	1	search with cache (only 1: auto).	0.0144100189209	2
Coq.MSets.MSetRBTX.BalanceProps.remove_rb	40
Coq.MSets.MSetRBTX.BalanceProps.treeify_zero_rb	40	0.0.0	search with cache (only 1: intro; only 1: simpl in *; only 1: auto).	0.0197989940643	3
Coq.MSets.MSetRBTX.BalanceProps.treeify_one_rb	40	0.0.1.0.5.0.3	search with cache (only 1: intro n; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.346961975098	204
Coq.MSets.MSetRBTX.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBTX.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBTX.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBTX.BalanceProps.filter_rb	40	3.1	search with cache (only 1: unfold filter; only 1: auto_tc).	0.0142149925232	6
Coq.MSets.MSetRBTX.BalanceProps.partition_rb1	40	0.4.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).	0.0204558372498	9
Coq.MSets.MSetRBTX.BalanceProps.partition_rb2	40	0.0.6.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0315551757812	26
Coq.MSets.MSetRBTX.BalanceProps.fold_add_rb	40	0.0.0.4.0.1.2	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.81711101532	431
Coq.MSets.MSetRBTX.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.445599079132	97
Coq.MSets.MSetRBTX.BalanceProps.union_rb	40
Coq.MSets.MSetRBTX.BalanceProps.inter_rb	40	0.2.1.0.0.0	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0312027931213	15
Coq.MSets.MSetRBTX.BalanceProps.diff_rb	40
Coq.MSets.MSetRBTX.Make.remove_min_spec1	40
Coq.MSets.MSetRBTX.Make.remove_min_spec2	40
Coq.MSets.MSetDecideX.WDecideOn.MSetLogicalFacts.test_push	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.83979010582	2
Coq.MSets.MSetDecideX.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.116764068604	3
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.0129089355469	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.070611000061	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.180906057358	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0160419940948	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_add_In	40	1	search with cache (only 1: fsetdec).	0.0389878749847	2
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.0366048812866	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0641160011292	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0733449459076	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0883409976959	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0461099147797	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	2	search with cache (only 1: fsetdec).	0.275708913803	12
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.174385070801	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_too_complex	40	8.5.18.5	search with cache (only 1: intros; only 1: apply -> subset_spec; only 1: intuition; only 1: intuition).	39.9445950985	4281
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.function_test_1	40	0	search with cache (only 1: fsetdec).	0.050803899765	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0553679466248	1
Coq.MSets.MSetDecideX.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.040130853653	1
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.In_compat	40	5.2.11.2	search with cache (only 1: intros x x' Hx y y' Hy; only 1: compute; only 1: rewrite <- Hx, <- Hy in *; only 1: intuition PeanoNat.Nat.Private_Tac.order).	6.57129096985	2516
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.eq_equiv	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterfaceX.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterfaceX.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.eq_equiv	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_empty_r	40	9.2.24	search with cache (only 1: red; only 1: intros; only 1: firstorder).	2.64471006393	4666
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterfaceX.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterfaceX.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterfaceX.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterfaceX.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterfaceX.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.In_In	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0169019699097	3
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.Subset_Included	40	0.1	search with cache (only 1: intros; only 1: Dec.fsetdec).	0.0330009460449	3
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.Equal_Same_set	40	15.1	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	5.59042406082	741
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.Empty_Empty_set	40	16.2.1.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: intuition; only 1: Dec.fsetdec).	25.7206790447	4163
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.singleton_Singleton	40	0.7.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.227962970734	17
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSetX.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetGenTreeX.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTreeX.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTreeX.Props.isok_iff	40	11.16	search with cache (only 1: fix odd_spec 1; only 1: now auto).	8.76509213448	3070
Coq.MSets.MSetGenTreeX.Props.isok_Ok	40
Coq.MSets.MSetGenTreeX.Props.In_1	40
Coq.MSets.MSetGenTreeX.Props.In_compat	40
Coq.MSets.MSetGenTreeX.Props.In_node_iff	40	4	search with cache (only 1: intuition_in).	0.543086051941	30
Coq.MSets.MSetGenTreeX.Props.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.159162044525	1
Coq.MSets.MSetGenTreeX.Props.lt_leaf	40	0.1.1	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in).	0.393308162689	5
Coq.MSets.MSetGenTreeX.Props.gt_leaf	40	0	search with cache (only 1: inversion 1).	0.0193619728088	1
Coq.MSets.MSetGenTreeX.Props.lt_tree_node	40	0.0.5	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.715679883957	40
Coq.MSets.MSetGenTreeX.Props.gt_tree_node	40	0.0.1.0	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.616951942444	5
Coq.MSets.MSetGenTreeX.Props.lt_tree_not_in	40	0.9.11	search with cache (only 1: intuition; only 1: eapply OrderTac.lt_irrefl; only 1: order).	23.0791680813	2416
Coq.MSets.MSetGenTreeX.Props.lt_tree_trans	40	0.1.3.2	search with cache (only 1: intros; only 1: intro EQ; only 1: intros; only 1: order).	0.422939062119	34
Coq.MSets.MSetGenTreeX.Props.gt_tree_not_in	40	2.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0255558490753	5
Coq.MSets.MSetGenTreeX.Props.gt_tree_trans	40	6.0	search with cache (only 1: unfold gt_tree; only 1: eauto).	0.216861009598	20
Coq.MSets.MSetGenTreeX.Props.lt_tree_compat	40	0.0.1.0.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0831890106201	8
Coq.MSets.MSetGenTreeX.Props.gt_tree_compat	40	0.0.0.2.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.23100399971	20
Coq.MSets.MSetGenTreeX.Props.empty_spec	40	9	search with cache (only 1: now f_equal).	0.180013179779	30
Coq.MSets.MSetGenTreeX.Props.empty_ok	40	11.49	search with cache (only 1: compute; only 1: now f_equal).	0.706532001495	2470
Coq.MSets.MSetGenTreeX.Props.is_empty_spec	40
Coq.MSets.MSetGenTreeX.Props.mem_spec	40
Coq.MSets.MSetGenTreeX.Props.min_elt_spec1	40
Coq.MSets.MSetGenTreeX.Props.min_elt_spec2	40
Coq.MSets.MSetGenTreeX.Props.min_elt_spec3	40
Coq.MSets.MSetGenTreeX.Props.max_elt_spec1	40
Coq.MSets.MSetGenTreeX.Props.max_elt_spec2	40
Coq.MSets.MSetGenTreeX.Props.max_elt_spec3	40
Coq.MSets.MSetGenTreeX.Props.choose_spec1	40
Coq.MSets.MSetGenTreeX.Props.choose_spec2	40
Coq.MSets.MSetGenTreeX.Props.choose_spec3	40
Coq.MSets.MSetGenTreeX.Props.elements_spec1'	40
Coq.MSets.MSetGenTreeX.Props.elements_spec1	40
Coq.MSets.MSetGenTreeX.Props.elements_spec2'	40
Coq.MSets.MSetGenTreeX.Props.elements_spec2	40
Coq.MSets.MSetGenTreeX.Props.elements_spec2w	40
Coq.MSets.MSetGenTreeX.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTreeX.Props.elements_cardinal	40
Coq.MSets.MSetGenTreeX.Props.elements_app	40
Coq.MSets.MSetGenTreeX.Props.elements_node	40
Coq.MSets.MSetGenTreeX.Props.rev_elements_app	40
Coq.MSets.MSetGenTreeX.Props.rev_elements_node	40
Coq.MSets.MSetGenTreeX.Props.rev_elements_rev	40
Coq.MSets.MSetGenTreeX.Props.sorted_app_inv	40
Coq.MSets.MSetGenTreeX.Props.elements_sort_ok	40
Coq.MSets.MSetGenTreeX.Props.for_all_spec	40
Coq.MSets.MSetGenTreeX.Props.exists_spec	40
Coq.MSets.MSetGenTreeX.Props.fold_spec'	40
Coq.MSets.MSetGenTreeX.Props.fold_spec	40
Coq.MSets.MSetGenTreeX.Props.subsetl_spec	40
Coq.MSets.MSetGenTreeX.Props.subsetr_spec	40
Coq.MSets.MSetGenTreeX.Props.subset_spec	40
Coq.MSets.MSetGenTreeX.Props.eq_equiv	40
Coq.MSets.MSetGenTreeX.Props.eq_Leq	40
Coq.MSets.MSetGenTreeX.Props.lt_strorder	40
Coq.MSets.MSetGenTreeX.Props.lt_compat	40
Coq.MSets.MSetGenTreeX.Props.flatten_e_elements	40
Coq.MSets.MSetGenTreeX.Props.cons_1	40
Coq.MSets.MSetGenTreeX.Props.compare_end_Cmp	40	0.0.56	search with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto).	23.3523819447	6428
Coq.MSets.MSetGenTreeX.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTreeX.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTreeX.Props.compare_Cmp	40
Coq.MSets.MSetGenTreeX.Props.compare_spec	40
Coq.MSets.MSetGenTreeX.Props.equal_spec	40
Coq.MSets.MSetGenTreeX.Props.mindepth_maxdepth	40	12.4.1.0.10	search with cache (only 1: elim s; only 1: auto; only 1: intuition_in; only 1: simpl; only 1: eauto with *).	6.07986402512	1893
Coq.MSets.MSetGenTreeX.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTreeX.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTreeX.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTreeX.Props.mindepth_log_cardinal	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.mem_eq	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.choose_mem_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.choose_mem_2	40	4.2.0	search with cache (only 1: intros; only 1: apply <- is_empty_spec; only 1: auto with set).	0.0734460353851	21
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_mem_1	40	10	search with cache (only 1: intuition).	0.556269884109	186
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_mem_2	40	0.0.0.0.1.1.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	4.7170779705	700
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_mem_1	40	0.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	2.1249101162	230
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_mem_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0146889686584	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.mem_3	40	1.1.1.0.0.0	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: destruct (mem x s); only 1: intuition; only 1: intuition; only 1: intuition).	0.622621059418	89
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.mem_4	40	1.1.0.1.0	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.380238056183	46
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_refl	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0268170833588	4
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_trans	40	1.2.1.6	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	1.05770301819	382
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_equal	40	2.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0265738964081	6
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.equal_cardinal	40	10	search with cache (only 1: auto with set).	0.14427280426	44
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_refl	40	3.1.1.1	search with cache (only 1: apply <- subset_spec; only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: Dec.fsetdec).	0.047600030899	12
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_antisym	40	14	search with cache (only 1: auto with set).	0.269465923309	165
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_equal	40	0	search with cache (only 1: auto with set).	0.0151391029358	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_mem_3	40	5.5	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	1.56557703018	305
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_equal	40	0.1.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set relations).	0.02383685112	4
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_mem_3	40	5.6	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	2.44522190094	568
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_equal	40	0.2.0.2.1	search with cache (only 1: destruct (mem y s); only 1: rewrite <- not_mem_iff; only 1: auto with set relations; only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.276221990585	32
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_remove	40	3.17	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (inter_spec s s' x); only 1: intuition).	11.1569421291	1235
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_add	40	3.14	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	11.6110260487	1617
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.is_empty_cardinal	40	0.0.0.0.4.0.0.0.0.4.0.3	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: discriminate; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: discriminate).	11.2848489285	4101
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.singleton_mem_1	40	4.1	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	1.16770911217	207
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.singleton_mem_2	40	0.0.0.6	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	7.3421421051	603
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.singleton_mem_3	40	0.1.1.5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	1.26270794868	243
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_sym	40	0	search with cache (only 1: intuition).	0.110898017883	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.022579908371	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0167419910431	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0165619850159	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0148341655731	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0824840068817	3
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0162570476532	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0147030353546	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.015949010849	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0232100486755	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_sym	40	0.2	search with cache (only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.057853937149	4
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0154209136963	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0154418945312	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.01518201828	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0150010585785	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0267050266266	2
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0147039890289	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0159599781036	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0144629478455	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.013946056366	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0230967998505	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.diff_subset	40	0.0	search with cache (only 1: apply <- subset_spec; only 1: Dec.fsetdec).	0.051863193512	2
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0166640281677	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0937790870667	4
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0443871021271	2
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0336318016052	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0241708755493	2
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.fold_add	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_fold_1	40	0.2.1.1.1.1.0	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	2.44594597816	700
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_cardinal_1	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.0754268169403	23
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_cardinal_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.subset_cardinal	40	8.0	search with cache (only 1: intros; only 1: auto with set).	0.0301270484924	10
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.Comp'	40	17	search with cache (only 1: solve_proper).	3.17066812515	478
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.partition_filter_1	40	5	search with cache (only 1: intuition).	0.144668102264	15
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0188689231873	1
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.filter_union	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_mem_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.Comp'	40	0.0.0.5	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: intuition).	0.0442039966583	14
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqPropertiesX.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetAVLX.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVLX.MakeRaw.singleton_ok	40	0.20	search with cache (only 1: red; only 1: ok).	0.0868580341339	208
Coq.MSets.MSetAVLX.MakeRaw.create_spec	40
Coq.MSets.MSetAVLX.MakeRaw.create_ok	40	0.0.0.0.14	search with cache (only 1: constructor 2; only 1: now auto; only 1: intuition; only 1: now auto; only 1: now auto).	1.06511902809	155
Coq.MSets.MSetAVLX.MakeRaw.bal_spec	40
Coq.MSets.MSetAVLX.MakeRaw.bal_ok	40
Coq.MSets.MSetAVLX.MakeRaw.add_spec'	40
Coq.MSets.MSetAVLX.MakeRaw.add_spec	40
Coq.MSets.MSetAVLX.MakeRaw.add_ok	40
Coq.MSets.MSetAVLX.MakeRaw.join_spec	40
Coq.MSets.MSetAVLX.MakeRaw.join_ok	40
Coq.MSets.MSetAVLX.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVLX.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVLX.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVLX.MakeRaw.merge_spec	40
Coq.MSets.MSetAVLX.MakeRaw.merge_ok	40
Coq.MSets.MSetAVLX.MakeRaw.remove_spec	40
Coq.MSets.MSetAVLX.MakeRaw.remove_ok	40
Coq.MSets.MSetAVLX.MakeRaw.concat_spec	40
Coq.MSets.MSetAVLX.MakeRaw.concat_ok	40
Coq.MSets.MSetAVLX.MakeRaw.split_spec1	40
Coq.MSets.MSetAVLX.MakeRaw.split_spec2	40
Coq.MSets.MSetAVLX.MakeRaw.split_spec3	40
Coq.MSets.MSetAVLX.MakeRaw.split_ok	40
Coq.MSets.MSetAVLX.MakeRaw.split_ok1	40
Coq.MSets.MSetAVLX.MakeRaw.split_ok2	40	0.5.2	search with cache (only 1: destruct (@split_ok s x); only 1: eauto with *; only 1: auto).	0.0600440502167	12
Coq.MSets.MSetAVLX.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVLX.MakeRaw.inter_spec	40
Coq.MSets.MSetAVLX.MakeRaw.inter_ok	40
Coq.MSets.MSetAVLX.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVLX.MakeRaw.diff_spec	40
Coq.MSets.MSetAVLX.MakeRaw.diff_ok	40
Coq.MSets.MSetAVLX.MakeRaw.union_spec	40
Coq.MSets.MSetAVLX.MakeRaw.union_ok	40
Coq.MSets.MSetAVLX.MakeRaw.filter_spec	40
Coq.MSets.MSetAVLX.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVLX.MakeRaw.filter_ok	40
Coq.MSets.MSetAVLX.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVLX.MakeRaw.partition_spec2'	40
Coq.MSets.MSetAVLX.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVLX.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVLX.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVLX.MakeRaw.partition_ok2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.439782142639	5
Coq.MSets.MSetPropertiesX.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.equal_refl	40	5	search with cache (only 1: fsetdec).	0.103564977646	26
Coq.MSets.MSetPropertiesX.WPropertiesOn.equal_sym	40	0	search with cache (only 1: intuition).	0.014142036438	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.equal_trans	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_refl	40	8	search with cache (only 1: intuition).	0.0609469413757	23
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_trans	40	1	search with cache (only 1: fsetdec).	0.0311920642853	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_antisym	40	7.0	search with cache (only 1: intros; only 1: fsetdec).	0.0916271209717	9
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0252540111542	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_empty	40	3.3.1	search with cache (only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: fsetdec).	0.0374400615692	12
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_remove_3	40	1.0	search with cache (only 1: intuition; only 1: fsetdec).	0.144586086273	3
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_diff	40	1	search with cache (only 1: fsetdec).	0.0423879623413	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_add_3	40	3.0	search with cache (only 1: intuition; only 1: fsetdec).	0.151726961136	5
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0273880958557	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0263669490814	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.double_inclusion	40	1.1.1.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.218324899673	7
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_is_empty_1	40	1	search with cache (only 1: fsetdec).	0.0354130268097	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0290520191193	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_equal	40	0.0.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.0683629512787	3
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_add	40	2	search with cache (only 1: fsetdec).	0.108870029449	3
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_equal	40	3.1	search with cache (only 1: intros; only 1: fsetdec).	0.0677361488342	6
Coq.MSets.MSetPropertiesX.WPropertiesOn.Equal_remove	40	2	search with cache (only 1: fsetdec).	0.0779640674591	3
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.0936620235443	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.0869960784912	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0542330741882	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.183413982391	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_sym	40	4	search with cache (only 1: fsetdec).	0.1085460186	5
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0773248672485	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0645411014557	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0659880638123	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.104454040527	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0553359985352	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.102344036102	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.190940856934	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.175431966782	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0225050449371	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0232620239258	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0357189178467	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0500421524048	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.037122964859	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0616919994354	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0616610050201	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.not_in_union	40	5.0	search with cache (only 1: intuition; only 1: fsetdec).	10.4736249447	69
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_sym	40	1	search with cache (only 1: fsetdec).	0.10342001915	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0579090118408	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0606970787048	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0602121353149	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.092512845993	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.11482000351	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.12647986412	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_add_1	40	3.0	search with cache (only 1: intuition; only 1: fsetdec).	0.387269020081	16
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.0942587852478	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.0334811210632	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0302438735962	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0257260799408	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0224070549011	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0354518890381	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0366101264954	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0655210018158	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.diff_subset	40	1	search with cache (only 1: fsetdec).	0.0254218578339	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0656461715698	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.068549156189	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.109881162643	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0839700698853	1
Coq.MSets.MSetPropertiesX.WPropertiesOn.Add_add	40	2.14	search with cache (only 1: intros E; only 1: fsetdec).	1.45208597183	220
Coq.MSets.MSetPropertiesX.WPropertiesOn.Add_remove	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.112498998642	3
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_Add	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_Add	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.210504055023	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.166348934174	2
Coq.MSets.MSetPropertiesX.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.elements_empty	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.of_list_1	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.of_list_2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.of_list_3	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_rec	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_rec_nodep	40	1.1.1.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: eauto).	0.163103103638	67
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_rel	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.set_induction	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_identity	40	0.2.8.0.0.4.10	search with cache (only 1: intros a b; only 1: red; only 1: apply fold_rec_bis; only 1: intros s s' E; only 1: fsetdec; only 1: auto; only 1: fsetdec).	23.4322378635	1799
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_0	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_1	40	10.0.6.3.0.1	search with cache (only 1: intro x; only 1: intros; only 1: apply fold_rec_bis; only 1: firstorder; only 1: auto with relations; only 1: fsetdec).	39.9610638618	11464
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_1b	40	5.5.0.3.2	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: split; only 1: fsetdec).	7.94789099693	3826
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_init	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_equal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_empty	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_add	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_fold	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_fold_2	40	0.12.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	6.41713905334	2331
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_union	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.fold_plus	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_1	40	3.4.2.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: auto).	0.992761850357	289
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_inv_2b	40	0.0.2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	0.228639125824	46
Coq.MSets.MSetPropertiesX.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.empty_cardinal	40	0.0.0.4	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.0546500682831	15
Coq.MSets.MSetPropertiesX.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetPropertiesX.WPropertiesOn.union_cardinal_le	40	2.1.7.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	1.01859688759	476
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_cardinal_1	40	4.0.1	search with cache (only 1: intro; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	0.649172067642	132
Coq.MSets.MSetPropertiesX.WPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition; only 1: expAdd; only 1: auto with set).	20.2125780582	5122
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_cardinal_1	40	0.0.0.1.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set relations; only 1: auto with set relations; only 1: expAdd; only 1: fsetdec).	0.75289607048	225
Coq.MSets.MSetPropertiesX.WPropertiesOn.remove_cardinal_2	40	2.0	search with cache (only 1: intros; only 1: eauto with set relations).	0.094703912735	26
Coq.MSets.MSetPropertiesX.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetPropertiesX.OrdProperties.gtb_1	40
Coq.MSets.MSetPropertiesX.OrdProperties.leb_1	40
Coq.MSets.MSetPropertiesX.OrdProperties.gtb_compat	40
Coq.MSets.MSetPropertiesX.OrdProperties.leb_compat	40	0.0.0.0.8.1.0.0	search with cache (only 1: intros P; only 1: intros; only 1: unfold leb, gtb; only 1: rewrite H; only 1: destruct E.compare; only 1: intuition; only 1: intuition; only 1: intuition).	8.84492516518	1339
Coq.MSets.MSetPropertiesX.OrdProperties.elements_split	40
Coq.MSets.MSetPropertiesX.OrdProperties.elements_Add	40
Coq.MSets.MSetPropertiesX.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetPropertiesX.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetPropertiesX.OrdProperties.set_induction_max	40
Coq.MSets.MSetPropertiesX.OrdProperties.set_induction_min	40
Coq.MSets.MSetPropertiesX.OrdProperties.fold_3	40
Coq.MSets.MSetPropertiesX.OrdProperties.fold_4	40
Coq.MSets.MSetPropertiesX.OrdProperties.fold_equal	40
Coq.MSets.MSetPropertiesX.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0261719226837	3
Coq.MSets.MSetPropertiesX.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0308420658112	3
Coq.MSets.MSetPropertiesX.OrdProperties.choose_equal	40
Coq.Floats.FloatAxiomsX.Prim2SF_inj	40
Coq.Floats.FloatAxiomsX.SF2Prim_inj	40
Coq.Floats.FloatLemmasX.shift_value	40	1	search with cache (only 1: now Z.nzsimpl).	0.0534160137177	2
Coq.Floats.FloatLemmasX.frexp_spec	40
Coq.Floats.FloatLemmasX.ldexp_spec	40
Coq.Relations.RelationsX.inverse_image_of_equivalence	40	9.0	search with cache (only 1: intros; only 1: firstorder).	1.52652597427	206
Coq.Relations.RelationsX.inverse_image_of_eq	40	6.0.1.1.0.1.0.0.1.0.0	search with cache (only 1: split; only 1: red; only 1: intros; only 1: reflexivity; only 1: red; only 1: intros; only 1: transitivity (f y); only 1: assumption; only 1: assumption; only 1: red; only 1: now rewrite ?H, ?IHp).	21.3711600304	12778
Coq.Relations.Operators_PropertiesX.clos_rt_is_preorder	40	0.0.0	search with cache (only 1: apply Build_preorder; only 1: exact (rt_refl A R); only 1: exact (rt_trans A R)).	0.0160701274872	3
Coq.Relations.Operators_PropertiesX.clos_rt_idempotent	40	2.2.1.5.15.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: constructor 2; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	9.49560809135	12627
Coq.Relations.Operators_PropertiesX.clos_rt_clos_rst	40	1.1.0.8.4.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: constructor 2; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	23.2968997955	21536
Coq.Relations.Operators_PropertiesX.clos_r_clos_rt	40	5.11.0	search with cache (only 1: induction 1 as [? ?| ]; only 1: auto with sets; only 1: constructor 2).	1.52935600281	1754
Coq.Relations.Operators_PropertiesX.clos_rt_t	40	0.3.3.1.2.0	search with cache (only 1: induction 1 as [b d H1| b| a b d H1 H2 IH1 IH2]; only 1: apply t_trans with (y := d); only 1: constructor; only 1: auto; only 1: auto; only 1: auto).	0.712145805359	722
Coq.Relations.Operators_PropertiesX.clos_rst_is_equiv	40	0.0.0.0	search with cache (only 1: apply Build_equivalence; only 1: exact (rst_refl A R); only 1: exact (rst_trans A R); only 1: exact (rst_sym A R)).	0.0173768997192	4
Coq.Relations.Operators_PropertiesX.clos_rst_idempotent	40
Coq.Relations.Operators_PropertiesX.clos_t1n_trans	40	4.4.1.3.5.0	search with cache (only 1: induction 1; only 1: (apply t_step; assumption) || eapply t_trans; only 1: right with y; only 1: left; only 1: auto; only 1: auto).	3.13036203384	2877
Coq.Relations.Operators_PropertiesX.clos_trans_t1n	40
Coq.Relations.Operators_PropertiesX.clos_trans_t1n_iff	40	2.1.0	search with cache (only 1: split; only 1: apply Operators_Properties.clos_trans_t1n; only 1: apply Operators_Properties.clos_t1n_trans).	0.0149219036102	6
Coq.Relations.Operators_PropertiesX.clos_tn1_trans	40	2.0.2.1.6.1	search with cache (only 1: induction 1; only 1: (apply t_step; assumption) || eapply t_trans; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	4.26301002502	3131
Coq.Relations.Operators_PropertiesX.clos_trans_tn1	40	1.1.0.0.1.1.0.0.3.17.0.1	search with cache (only 1: induction 1; only 1: left; only 1: firstorder; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto).	4.97326302528	6422
Coq.Relations.Operators_PropertiesX.clos_trans_tn1_iff	40	1.2.0	search with cache (only 1: split; only 1: apply Operators_Properties.clos_trans_tn1; only 1: apply Operators_Properties.clos_tn1_trans).	0.0166418552399	6
Coq.Relations.Operators_PropertiesX.clos_rt1n_step	40	2.17.0.0	search with cache (only 1: intros x y H; only 1: right with y; only 1: firstorder; only 1: constructor 1).	0.756667852402	829
Coq.Relations.Operators_PropertiesX.clos_rtn1_step	40	0.17.0.0	search with cache (only 1: intros x y H; only 1: right with x; only 1: firstorder; only 1: left).	1.0093331337	908
Coq.Relations.Operators_PropertiesX.clos_rt1n_rt	40	5.5.1.4.5.1	search with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).	1.40252804756	2203
Coq.Relations.Operators_PropertiesX.clos_rt_rt1n	40
Coq.Relations.Operators_PropertiesX.clos_rt_rt1n_iff	40	0.6.0	search with cache (only 1: split; only 1: apply Operators_Properties.clos_rt_rt1n; only 1: apply Operators_Properties.clos_rt1n_rt).	0.0260939598083	15
Coq.Relations.Operators_PropertiesX.clos_rtn1_rt	40	2.0.2.1.3.0.1	search with cache (only 1: induction 1; only 1: apply Operators_Properties.clos_rt1n_rt; only 1: left; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: auto).	1.37780117989	952
Coq.Relations.Operators_PropertiesX.clos_rt_rtn1	40	1.1.0.0.3.0.0.0.19.0.1	search with cache (only 1: induction 1; only 1: right with x; only 1: firstorder; only 1: left; only 1: constructor 1; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto).	5.4823038578	6125
Coq.Relations.Operators_PropertiesX.clos_rt_rtn1_iff	40	5.4.0	search with cache (only 1: split; only 1: apply Operators_Properties.clos_rt_rtn1; only 1: apply Operators_Properties.clos_rtn1_rt).	0.211283922195	124
Coq.Relations.Operators_PropertiesX.clos_refl_trans_ind_left	40
Coq.Relations.Operators_PropertiesX.rt1n_ind_right	40	8.0.3	search with cache (only 1: induction 3; only 1: auto; only 1: eauto).	0.236050128937	266
Coq.Relations.Operators_PropertiesX.clos_refl_trans_ind_right	40	0.0.2.1.2.0.2.8	search with cache (only 1: intros P z Hz IH x Hxz; only 1: apply Operators_Properties.clos_rt_rt1n_iff in Hxz; only 1: elim Hxz using Operators_Properties.rt1n_ind_right; only 1: auto; only 1: clear x Hxz; only 1: intros x y Hxy Hyz Hy; only 1: apply Operators_Properties.clos_rt_rt1n_iff in Hyz; only 1: eauto).	4.55801320076	3585
Coq.Relations.Operators_PropertiesX.clos_rst1n_rst	40
Coq.Relations.Operators_PropertiesX.clos_rst1n_trans	40	1.1.1.3.2	search with cache (only 1: induction 1; only 1: eauto; only 1: right with y; only 1: eauto; only 1: eauto).	0.624433040619	314
Coq.Relations.Operators_PropertiesX.clos_rst1n_sym	40	0.0.2.0.3.0.2.8.0	search with cache (only 1: intros x y H; only 1: elim H; only 1: constructor 1; only 1: intros x0 y0 z D H0 H1; only 1: apply Operators_Properties.clos_rst1n_trans with y0; only 1: tauto; only 1: right with x0; only 1: tauto; only 1: left).	5.19232296944	3645
Coq.Relations.Operators_PropertiesX.clos_rst_rst1n	40	1.0.0.3.0.3.3.0.1.2	search with cache (only 1: induction 1; only 1: constructor 2 with y; only 1: auto; only 1: constructor 1; only 1: constructor 1; only 1: apply Operators_Properties.clos_rst1n_sym; only 1: eauto; only 1: eapply Operators_Properties.clos_rst1n_trans; only 1: eauto; only 1: eauto).	3.00222492218	2435
Coq.Relations.Operators_PropertiesX.clos_rst_rst1n_iff	40	6.1.0	search with cache (only 1: split; only 1: apply Operators_Properties.clos_rst_rst1n; only 1: apply Operators_Properties.clos_rst1n_rst).	0.0203609466553	10
Coq.Relations.Operators_PropertiesX.clos_rstn1_rst	40
Coq.Relations.Operators_PropertiesX.clos_rstn1_trans	40	0.0.0.1.4.18	search with cache (only 1: intros x y z H1 H2; only 1: induction H2; only 1: tauto; only 1: right with y0; only 1: tauto; only 1: tauto).	3.64067697525	5004
Coq.Relations.Operators_PropertiesX.clos_rstn1_sym	40
Coq.Relations.Operators_PropertiesX.clos_rst_rstn1	40	1.0.0.3.4.6.1.0.0.1	search with cache (only 1: induction 1; only 1: constructor 2 with x; only 1: auto; only 1: constructor 1; only 1: constructor 1; only 1: apply Operators_Properties.clos_rstn1_sym; only 1: eauto; only 1: eapply Operators_Properties.clos_rstn1_trans; only 1: eauto; only 1: eauto).	5.30431294441	6524
Coq.Relations.Operators_PropertiesX.clos_rst_rstn1_iff	40	1.2.0	search with cache (only 1: split; only 1: apply Operators_Properties.clos_rst_rstn1; only 1: apply Operators_Properties.clos_rstn1_rst).	0.0160858631134	6
Coq.Relations.Operators_PropertiesX.clos_trans_transp_permute	40	0.0.1.2.0.0.0.1.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: (apply t_step; assumption) || eapply t_trans; only 1: (apply t_step; assumption) || eapply t_trans; only 1: eassumption; only 1: eassumption; only 1: induction 1; only 1: (apply t_step; assumption) || eapply t_trans; only 1: (apply t_step; assumption) || eapply t_trans; only 1: eassumption; only 1: eassumption).	1.05317997932	650
Coq.ssr.ssrsetoidX.compat_Reflexive	40	0	search with cache (only 1: now trivial).	0.0192978382111	1
Coq.ssr.ssreflectX.master_key	40	1	search with cache (only 1: exact tt).	0.0106310844421	2
Coq.ssr.ssreflectX.lock	40
Coq.ssr.ssreflectX.not_locked_false_eq_true	40	1.53.13	search with cache (only 1: compute; only 1: unlock; only 1: easy).	21.983189106	12182
Coq.ssr.ssreflectX.unlock	40	0	search with cache (only 1: by case : C ).	0.0137851238251	1
Coq.ssr.ssreflectX.locked_withE	40
Coq.ssr.ssreflectX.unlock_with	40	0	search with cache (only 1: by case : k ).	0.0134449005127	1
Coq.ssr.ssreflectX.nary_congruence	40
Coq.ssr.ssreflectX.ssr_congr_arrow	40	0	search with cache (only 1: by move ->).	0.01584815979	1
Coq.ssr.ssreflectX.iffLR	40	0	search with cache (only 1: by case : eqPQ ).	0.0135779380798	1
Coq.ssr.ssreflectX.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.0123729705811	1
Coq.ssr.ssreflectX.iffLRn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.015419960022	1
Coq.ssr.ssreflectX.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0150530338287	1
Coq.ssr.ssreflectX.abstract_context	40	0	search with cache (only 1: by move  =>/(_ P); apply).	0.0157189369202	1
Coq.ssr.ssrboolX.prop_congr	40	0	search with cache (only 1: by move  =>b b' ->).	0.011549949646	1
Coq.ssr.ssrboolX.is_true_true	40	0	search with cache (only 1: by [  ]).	0.00836205482483	1
Coq.ssr.ssrboolX.not_false_is_true	40	0	search with cache (only 1: by [  ]).	0.00794410705566	1
Coq.ssr.ssrboolX.is_true_locked_true	40	0	search with cache (only 1: by unlock).	0.00910019874573	1
Coq.ssr.ssrboolX.negbT	40	0	search with cache (only 1: by case : b ).	0.0125961303711	1
Coq.ssr.ssrboolX.negbTE	40	0	search with cache (only 1: by case : b ).	0.0125420093536	1
Coq.ssr.ssrboolX.negbF	40	0	search with cache (only 1: by case : b ).	0.012216091156	1
Coq.ssr.ssrboolX.negbFE	40	0	search with cache (only 1: by case : b ).	0.0115079879761	1
Coq.ssr.ssrboolX.negbK	40	0	search with cache (only 1: by case).	0.00953197479248	1
Coq.ssr.ssrboolX.negbNE	40	0	search with cache (only 1: by case : b ).	0.00937795639038	1
Coq.ssr.ssrboolX.negb_inj	40	0	search with cache (only 1: exact : can_inj negbK ).	0.0093731880188	1
Coq.ssr.ssrboolX.negbLR	40	1	search with cache (only 1: exact : canLR negbK ).	0.0148091316223	2
Coq.ssr.ssrboolX.negbRL	40	0	search with cache (only 1: exact : canRL negbK ).	0.0135760307312	1
Coq.ssr.ssrboolX.contra	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0155019760132	1
Coq.ssr.ssrboolX.contraL	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0140118598938	1
Coq.ssr.ssrboolX.contraR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0141952037811	1
Coq.ssr.ssrboolX.contraLR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0552659034729	1
Coq.ssr.ssrboolX.contraT	40	0	search with cache (only 1: by case : b  =>// ->).	0.0128858089447	1
Coq.ssr.ssrboolX.wlog_neg	40	1	search with cache (only 1: by case : b  =>// ->).	0.0136518478394	2
Coq.ssr.ssrboolX.contraFT	40	1	search with cache (only 1: by move /contraR =>notb_c /negbT).	0.0157899856567	2
Coq.ssr.ssrboolX.contraFN	40	0	search with cache (only 1: by move /contra =>notb_notc /negbT).	0.0126330852509	1
Coq.ssr.ssrboolX.contraTF	40	0	search with cache (only 1: by move /contraL =>b_notc /b_notc/negbTE).	0.012727022171	1
Coq.ssr.ssrboolX.contraNF	40	1	search with cache (only 1: by move /contra =>notb_notc /notb_notc/negbTE).	0.0137279033661	2
Coq.ssr.ssrboolX.contraFF	40	0	search with cache (only 1: by move /contraFN =>bF_notc /bF_notc/negbTE).	0.0133740901947	1
Coq.ssr.ssrboolX.ifP	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.0131530761719	1
Coq.ssr.ssrboolX.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.0124778747559	1
Coq.ssr.ssrboolX.ifT	40	0	search with cache (only 1: by move ->).	0.0109879970551	1
Coq.ssr.ssrboolX.ifF	40	0	search with cache (only 1: by move ->).	0.0131869316101	1
Coq.ssr.ssrboolX.ifN	40	0	search with cache (only 1: by move /negbTE  ->).	0.0124499797821	1
Coq.ssr.ssrboolX.if_same	40	0	search with cache (only 1: by case b).	0.0108909606934	1
Coq.ssr.ssrboolX.if_neg	40	1	search with cache (only 1: by case b).	0.0103318691254	2
Coq.ssr.ssrboolX.fun_if	40	0	search with cache (only 1: by case b).	0.010666847229	1
Coq.ssr.ssrboolX.if_arg	40	0	search with cache (only 1: by case b).	0.0112261772156	1
Coq.ssr.ssrboolX.ifE	40	0	search with cache (only 1: by [  ]).	0.0101919174194	1
Coq.ssr.ssrboolX.introNTF	40	1	search with cache (only 1: by case c; case Hb).	0.0172390937805	2
Coq.ssr.ssrboolX.introTF	40	1	search with cache (only 1: by case c; case Hb).	0.0163629055023	2
Coq.ssr.ssrboolX.elimNTF	40	0	search with cache (only 1: by move <-; case Hb).	0.013592004776	1
Coq.ssr.ssrboolX.elimTF	40	0	search with cache (only 1: by move <-; case Hb).	0.0135381221771	1
Coq.ssr.ssrboolX.equivPif	40	1	search with cache (only 1: by case Hb; auto).	0.0124020576477	2
Coq.ssr.ssrboolX.xorPif	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> case Hb =>[? _ H ?|? H _]; case : H ).	0.0149381160736	1
Coq.ssr.ssrboolX.introTFn	40	0	search with cache (only 1: by move /(introNTF Hb)  <-; case b).	0.0135729312897	1
Coq.ssr.ssrboolX.elimTFn	40	1	search with cache (only 1: by move <-; apply : (elimNTF Hb) ; case b).	0.0157179832458	2
Coq.ssr.ssrboolX.equivPifn	40	1	search with cache (only 1: by rewrite -if_neg; apply : equivPif ).	0.010883808136	2
Coq.ssr.ssrboolX.xorPifn	40	0	search with cache (only 1: by rewrite -if_neg; apply : xorPif ).	0.0116651058197	1
Coq.ssr.ssrboolX.introT	40	1	search with cache (only 1: exact : introTF true _ ).	0.0117568969727	2
Coq.ssr.ssrboolX.introF	40	1	search with cache (only 1: exact : introTF false _ ).	0.0140271186829	2
Coq.ssr.ssrboolX.introN	40	0	search with cache (only 1: exact : introNTF true _ ).	0.0917940139771	1
Coq.ssr.ssrboolX.introNf	40	1	search with cache (only 1: exact : introNTF false _ ).	0.0118968486786	2
Coq.ssr.ssrboolX.introTn	40	1	search with cache (only 1: exact : introTFn true _ ).	0.0111880302429	2
Coq.ssr.ssrboolX.introFn	40	1	search with cache (only 1: exact : introTFn false _ ).	0.0126130580902	2
Coq.ssr.ssrboolX.elimT	40	0	search with cache (only 1: exact : elimTF true _ ).	0.0100181102753	1
Coq.ssr.ssrboolX.elimF	40	0	search with cache (only 1: exact : elimTF false _ ).	0.0126650333405	1
Coq.ssr.ssrboolX.elimN	40	2	search with cache (only 1: exact : elimNTF true _ ).	0.0121359825134	3
Coq.ssr.ssrboolX.elimNf	40	0	search with cache (only 1: exact : elimNTF false _ ).	0.0115637779236	1
Coq.ssr.ssrboolX.elimTn	40	0	search with cache (only 1: exact : elimTFn true _ ).	0.0108470916748	1
Coq.ssr.ssrboolX.elimFn	40	1	search with cache (only 1: exact : elimTFn false _ ).	0.0132880210876	2
Coq.ssr.ssrboolX.introP	40	0	search with cache (only 1: by case b; constructor; auto).	0.010812997818	1
Coq.ssr.ssrboolX.iffP	40	3	search with cache (only 1: by case : Pb ; constructor; auto).	0.0151009559631	4
Coq.ssr.ssrboolX.equivP	40	1	search with cache (only 1: by case; apply : iffP ).	0.0109801292419	2
Coq.ssr.ssrboolX.sumboolP	40	0	search with cache (only 1: by case : decQ ; constructor).	0.0125648975372	1
Coq.ssr.ssrboolX.appP	40	3	search with cache (only 1: by move  =>Qb; move /introT ; case : Qb ).	0.0139029026031	4
Coq.ssr.ssrboolX.sameP	40	0	search with cache (only 1: by case; [ apply : introT  | apply : introF  ]).	0.015930891037	1
Coq.ssr.ssrboolX.decPcases	40	6	search with cache (only 1: by case Pb).	0.0124278068542	7
Coq.ssr.ssrboolX.decP	40	8	search with cache (only 1: by case : Pb ; constructor; auto).	0.0214529037476	9
Coq.ssr.ssrboolX.rwP	40	0	search with cache (only 1: by split; [ apply : introT  | apply : elimT  ]).	0.0105040073395	1
Coq.ssr.ssrboolX.rwP2	40	1	search with cache (only 1: by move  =>Qb; <ssreflect_plugin::ssrtclintros@0> split =>?; [ apply : appP  | apply : elimT ; case : Qb  ]).	0.0138189792633	2
Coq.ssr.ssrboolX.altP	40	32	search with cache (only 1: by case  def_b: b / Pb ; constructor; rewrite ?def_b).	0.390583992004	516
Coq.ssr.ssrboolX.impliesP	40	3.6.18	search with cache (only 1: intro p; only 1: destruct p; only 1: auto with arith).	3.33346986771	1228
Coq.ssr.ssrboolX.impliesPn	40	1	search with cache (only 1: by case  =>iP ? /iP).	0.013142824173	2
Coq.ssr.ssrboolX.unlessL	40	11.3	search with cache (only 1: revert P; only 1: by <ssreflect_plugin::ssrtclintros@0> split =>hC G /(_ hC)).	0.239445924759	222
Coq.ssr.ssrboolX.unlessR	40	23	search with cache (only 1: firstorder  auto with datatypes).	0.290567874908	298
Coq.ssr.ssrboolX.unless_sym	40
Coq.ssr.ssrboolX.unlessP	40
Coq.ssr.ssrboolX.bind_unless	40
Coq.ssr.ssrboolX.unless_contra	40
Coq.ssr.ssrboolX.classicP	40
Coq.ssr.ssrboolX.classicW	40	1.27.26	search with cache (only 1: intros HP HQ; only 1: symmetry; only 1: intuition).	0.451410055161	2755
Coq.ssr.ssrboolX.classic_bind	40
Coq.ssr.ssrboolX.classic_EM	40
Coq.ssr.ssrboolX.classic_pick	40	0.1.2.0	search with cache (only 1: case  =>// undecP; only 1: apply /undecP ; only 1: <ssreflect_plugin::ssrtclintros@0> right =>x Px; only 1: by apply /notF/undecP ; left; exists x).	0.023078918457	7
Coq.ssr.ssrboolX.classic_imply	40
Coq.ssr.ssrboolX.all_and2	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0111110210419	1
Coq.ssr.ssrboolX.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0128319263458	1
Coq.ssr.ssrboolX.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0138499736786	1
Coq.ssr.ssrboolX.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0145080089569	1
Coq.ssr.ssrboolX.pair_andP	40	0	search with cache (only 1: by split; case).	0.011913061142	1
Coq.ssr.ssrboolX.idP	40	0	search with cache (only 1: by case b1; constructor).	0.010537147522	1
Coq.ssr.ssrboolX.boolP	40	0	search with cache (only 1: by case b1; constructor; auto).	0.00936198234558	1
Coq.ssr.ssrboolX.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00885510444641	1
Coq.ssr.ssrboolX.negP	40	0	search with cache (only 1: by case b1; constructor; auto).	0.00891613960266	1
Coq.ssr.ssrboolX.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00920701026917	1
Coq.ssr.ssrboolX.negPf	40	0	search with cache (only 1: by case b1; constructor).	0.0126869678497	1
Coq.ssr.ssrboolX.andP	40	0	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0187120437622	1
Coq.ssr.ssrboolX.and3P	40	0	search with cache (only 1: by case b1; case b2; case b3; case b4; constructor; try by case).	0.103317975998	1
Coq.ssr.ssrboolX.and4P	40
Coq.ssr.ssrboolX.and5P	40	0	search with cache (only 1: by case b1; case b2; case b3; case b4; case b5; constructor; try by case).	0.0709290504456	1
Coq.ssr.ssrboolX.orP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.015289068222	1
Coq.ssr.ssrboolX.or3P	40	0.1.0.0	search with cache (only 1: <ssreflect_plugin::ssrtclseq@0> case b1 ; first  by constructor; constructor 1; only 1: <ssreflect_plugin::ssrtclseq@0> case b2 ; first  by constructor; constructor 2; only 1: <ssreflect_plugin::ssrtclseq@0> case b3 ; first  by constructor; constructor 3; only 1: by constructor; case).	0.0238330364227	5
Coq.ssr.ssrboolX.or4P	40
Coq.ssr.ssrboolX.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0125930309296	1
Coq.ssr.ssrboolX.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0151078701019	1
Coq.ssr.ssrboolX.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto).	0.0101389884949	1
Coq.ssr.ssrboolX.andTb	40	0	search with cache (only 1: by [  ]).	0.00898885726929	1
Coq.ssr.ssrboolX.andFb	40	0	search with cache (only 1: by [  ]).	0.00942015647888	1
Coq.ssr.ssrboolX.andbT	40	0	search with cache (only 1: by case).	0.0106539726257	1
Coq.ssr.ssrboolX.andbF	40	0	search with cache (only 1: by case).	0.00879192352295	1
Coq.ssr.ssrboolX.andbb	40	0	search with cache (only 1: by case).	0.0103619098663	1
Coq.ssr.ssrboolX.andbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0103468894958	1
Coq.ssr.ssrboolX.andbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0128331184387	1
Coq.ssr.ssrboolX.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0117311477661	1
Coq.ssr.ssrboolX.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0124990940094	1
Coq.ssr.ssrboolX.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0163199901581	1
Coq.ssr.ssrboolX.orTb	40	0	search with cache (only 1: by [  ]).	0.00966906547546	1
Coq.ssr.ssrboolX.orFb	40	0	search with cache (only 1: by [  ]).	0.00906896591187	1
Coq.ssr.ssrboolX.orbT	40	1	search with cache (only 1: by case).	0.012079000473	2
Coq.ssr.ssrboolX.orbF	40	0	search with cache (only 1: by case).	0.0092568397522	1
Coq.ssr.ssrboolX.orbb	40	0	search with cache (only 1: by case).	0.0105259418488	1
Coq.ssr.ssrboolX.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.010066986084	1
Coq.ssr.ssrboolX.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0121150016785	1
Coq.ssr.ssrboolX.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0119919776917	1
Coq.ssr.ssrboolX.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.012855052948	1
Coq.ssr.ssrboolX.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0175881385803	1
Coq.ssr.ssrboolX.andbN	40	0	search with cache (only 1: by case : b ).	0.0124280452728	1
Coq.ssr.ssrboolX.andNb	40	0	search with cache (only 1: by case : b ).	0.0117299556732	1
Coq.ssr.ssrboolX.orbN	40	0	search with cache (only 1: by case : b ).	0.0133810043335	1
Coq.ssr.ssrboolX.orNb	40	0	search with cache (only 1: by case : b ).	0.0132730007172	1
Coq.ssr.ssrboolX.andb_orl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0126869678497	1
Coq.ssr.ssrboolX.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0127949714661	1
Coq.ssr.ssrboolX.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0126049518585	1
Coq.ssr.ssrboolX.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0128309726715	1
Coq.ssr.ssrboolX.andb_idl	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0343000888824	1
Coq.ssr.ssrboolX.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0176429748535	1
Coq.ssr.ssrboolX.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0227799415588	1
Coq.ssr.ssrboolX.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0214312076569	1
Coq.ssr.ssrboolX.orb_idl	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0186131000519	1
Coq.ssr.ssrboolX.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0182790756226	1
Coq.ssr.ssrboolX.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0213849544525	1
Coq.ssr.ssrboolX.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0221080780029	1
Coq.ssr.ssrboolX.negb_and	40	0	search with cache (only 1: by case : a ; case : b ).	0.0148990154266	1
Coq.ssr.ssrboolX.negb_or	40	0	search with cache (only 1: by case : a ; case : b ).	0.0136430263519	1
Coq.ssr.ssrboolX.andbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0131950378418	1
Coq.ssr.ssrboolX.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0131680965424	1
Coq.ssr.ssrboolX.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0157551765442	1
Coq.ssr.ssrboolX.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0158150196075	1
Coq.ssr.ssrboolX.implybT	40	0	search with cache (only 1: by case : b ).	0.00900101661682	1
Coq.ssr.ssrboolX.implybF	40	0	search with cache (only 1: by case : b ).	0.010064125061	1
Coq.ssr.ssrboolX.implyFb	40	0	search with cache (only 1: by [  ]).	0.0101571083069	1
Coq.ssr.ssrboolX.implyTb	40	0	search with cache (only 1: by [  ]).	0.0115938186646	1
Coq.ssr.ssrboolX.implybb	40	1	search with cache (only 1: by case : b ).	0.0120170116425	2
Coq.ssr.ssrboolX.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.0130159854889	1
Coq.ssr.ssrboolX.implybE	40	0	search with cache (only 1: by case : a ; case : b ).	0.0134611129761	1
Coq.ssr.ssrboolX.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0142171382904	1
Coq.ssr.ssrboolX.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0123040676117	1
Coq.ssr.ssrboolX.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0125119686127	1
Coq.ssr.ssrboolX.implyb_idl	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0175290107727	1
Coq.ssr.ssrboolX.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0157060623169	1
Coq.ssr.ssrboolX.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0206990242004	1
Coq.ssr.ssrboolX.addFb	40	3	search with cache (only 1: easy).	0.0115389823914	4
Coq.ssr.ssrboolX.addbF	40	0	search with cache (only 1: by case).	0.00989198684692	1
Coq.ssr.ssrboolX.addbb	40	1.1.0.6.50	search with cache (only 1: compute; only 1: intros; only 1: destruct x; only 1: tauto; only 1: tauto).	0.882376909256	2175
Coq.ssr.ssrboolX.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0100870132446	1
Coq.ssr.ssrboolX.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0122201442719	1
Coq.ssr.ssrboolX.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0320949554443	1
Coq.ssr.ssrboolX.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.01220703125	1
Coq.ssr.ssrboolX.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0182650089264	1
Coq.ssr.ssrboolX.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0130190849304	1
Coq.ssr.ssrboolX.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.013473033905	1
Coq.ssr.ssrboolX.addKb	40
Coq.ssr.ssrboolX.addbK	40	1.1	search with cache (only 1: intros a b; only 1: by case : a ; case : b  =>// ->).	0.0337789058685	4
Coq.ssr.ssrboolX.addIb	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0179488658905	3
Coq.ssr.ssrboolX.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0137510299683	1
Coq.ssr.ssrboolX.addTb	40	0	search with cache (only 1: by [  ]).	0.00874018669128	1
Coq.ssr.ssrboolX.addbT	40	1	search with cache (only 1: by case : b ).	0.0108850002289	2
Coq.ssr.ssrboolX.addbN	40	2	search with cache (only 1: by case : a ; case : b ).	0.0152359008789	3
Coq.ssr.ssrboolX.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0120449066162	1
Coq.ssr.ssrboolX.addbP	40	0.0.17.0.0.6.24	search with cache (only 1: destruct b; only 1: Bool.destr_bool; only 1: intuition; only 1: now constructor; only 1: Bool.destr_bool; only 1: now constructor; only 1: intuition).	1.29609704018	3163
Coq.ssr.ssrboolX.subrelUl	40	5.3.1.24	search with cache (only 1: intro n; only 1: intuition; only 1: simpl in *; only 1: intuition).	4.77112293243	1908
Coq.ssr.ssrboolX.subrelUr	40	7.6.3.22	search with cache (only 1: intro n; only 1: intros H1 H2; only 1: simpl; only 1: intuition).	3.57028603554	2386
Coq.ssr.ssrboolX.sub_refl	40	6	search with cache (only 1: firstorder).	0.0292959213257	7
Coq.ssr.ssrboolX.mem_topred	40
Coq.ssr.ssrboolX.topredE	40
Coq.ssr.ssrboolX.app_predE	40
Coq.ssr.ssrboolX.in_applicative	40
Coq.ssr.ssrboolX.in_collective	40
Coq.ssr.ssrboolX.in_simpl	40
Coq.ssr.ssrboolX.unfold_in	40	3	search with cache (only 1: by rewrite -mem_topred).	0.0113089084625	4
Coq.ssr.ssrboolX.simpl_predE	40	9	search with cache (only 1: now destruct Hn || easy).	0.0225241184235	13
Coq.ssr.ssrboolX.mem_simpl	40	11	search with cache (only 1: tauto).	0.0227930545807	33
Coq.ssr.ssrboolX.mem_mem	40	39.1.0.23.4	search with cache (only 1: constructor; only 1: intuition; only 1: by case : mp ; only 1: by case : mp ; only 1: RelationClasses.simpl_relation).	28.9108359814	10540
Coq.ssr.ssrboolX.qualifE	40	1	search with cache (only 1: by [  ]).	0.0104641914368	2
Coq.ssr.ssrboolX.keyed_predE	40
Coq.ssr.ssrboolX.keyed_qualifier_suproof	40	1.27.99	search with cache (only 1: intros H; only 1: f_equal; only 1: by case : k_q  =>/= _ ->).	6.67433595657	8906
Coq.ssr.ssrboolX.all_tag_cond_dep	40	0.1.0	search with cache (only 1: move  =>f0 fP; only 1: apply : all_tag (fun x y => C x -> U x y) _  =>x; only 1: by case  Cx: (C x) ; [ case /fP: Cx  =>y; exists y | exists (f0 x) ]).	0.0214841365814	4
Coq.ssr.ssrboolX.all_tag_cond	40	3	search with cache (only 1: by move  =>y0; apply : all_tag_cond_dep ).	0.0996301174164	20
Coq.ssr.ssrboolX.all_sig_cond_dep	40	0	search with cache (only 1: by move  =>f0 /(all_tag_cond_dep f0) [f]; exists f).	0.015692949295	1
Coq.ssr.ssrboolX.all_sig_cond	40	1	search with cache (only 1: by move  =>y0; apply : all_sig_cond_dep ).	0.0119380950928	2
Coq.ssr.ssrboolX.symmetric_from_pre	40
Coq.ssr.ssrboolX.sym_left_transitive	40
Coq.ssr.ssrboolX.sym_right_transitive	40
Coq.ssr.ssrboolX.equivalence_relP	40	91	search with cache (only 1: firstorder).	23.259912014	22213
Coq.ssr.ssrboolX.rev_trans	40	1	search with cache (only 1: by move  =>trR x y z Ryx Rzy; apply : trR Rzy Ryx ).	0.0388298034668	2
Coq.ssr.ssrboolX.forE	40	5	search with cache (only 1: auto with sets).	0.0116288661957	6
Coq.ssr.ssrboolX.in1W	40	8	search with cache (only 1: now f_equal).	0.0407581329346	19
Coq.ssr.ssrboolX.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.0139989852905	1
Coq.ssr.ssrboolX.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.0118360519409	1
Coq.ssr.ssrboolX.in1T	40	21	search with cache (only 1: RelationClasses.simpl_relation).	0.703799962997	472
Coq.ssr.ssrboolX.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0181798934937	2
Coq.ssr.ssrboolX.in3T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0189218521118	2
Coq.ssr.ssrboolX.sub_in1	40	0	search with cache (only 1: by move  =>? ?; auto).	0.011570930481	1
Coq.ssr.ssrboolX.sub_in11	40
Coq.ssr.ssrboolX.sub_in111	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0142719745636	1
Coq.ssr.ssrboolX.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.0117080211639	1
Coq.ssr.ssrboolX.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.013256072998	1
Coq.ssr.ssrboolX.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.0107879638672	1
Coq.ssr.ssrboolX.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0172419548035	2
Coq.ssr.ssrboolX.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.017657995224	2
Coq.ssr.ssrboolX.on2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.018550157547	2
Coq.ssr.ssrboolX.subon1	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0131390094757	1
Coq.ssr.ssrboolX.subon1l	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0129771232605	1
Coq.ssr.ssrboolX.subon2	40	0	search with cache (only 1: by move  =>? ?; auto).	0.012097120285	1
Coq.ssr.ssrboolX.can_in_inj	40
Coq.ssr.ssrboolX.canLR_in	40	17.17.36	search with cache (only 1: intros; only 1: subst; only 1: auto).	4.58183312416	5432
Coq.ssr.ssrboolX.canRL_in	40
Coq.ssr.ssrboolX.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0208160877228	1
Coq.ssr.ssrboolX.canLR_on	40	0	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.015743970871	1
Coq.ssr.ssrboolX.canRL_on	40	1	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.016998052597	2
Coq.ssr.ssrboolX.inW_bij	40
Coq.ssr.ssrboolX.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0136981010437	1
Coq.ssr.ssrboolX.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0159749984741	1
Coq.ssr.ssrboolX.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0159139633179	1
Coq.ssr.ssrboolX.sub_in_bij	40	49	search with cache (only 1: firstorder).	1.83767104149	2583
Coq.ssr.ssrboolX.subon_bij	40	3	search with cache (only 1: by move  =>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0244359970093	4
Coq.ssr.ssrboolX.sub_in2	40	0.14	search with cache (only 1: intros HP HQ; only 1: by move  =>? ?; auto).	0.0792610645294	91
Coq.ssr.ssrboolX.sub_in3	40	22	search with cache (only 1: firstorder).	0.617343902588	555
Coq.ssr.ssrboolX.sub_in12	40	32	search with cache (only 1: firstorder).	0.488608837128	589
Coq.ssr.ssrboolX.sub_in21	40	14	search with cache (only 1: firstorder  auto with datatypes).	0.106636047363	90
Coq.ssr.ssrboolX.equivalence_relP_in	40
Coq.ssr.ssrboolX.monoW	40	36	search with cache (only 1: congruence).	0.418550014496	842
Coq.ssr.ssrboolX.mono2W	40	1	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0149281024933	2
Coq.ssr.ssrboolX.homoRL	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.016040802002	1
Coq.ssr.ssrboolX.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0165150165558	1
Coq.ssr.ssrboolX.homo_mono	40	0.0.0	search with cache (only 1: move  =>mf mg x y; only 1: case : (boolP (rR _ _))  =>[/mg //|]; only 1: by apply : contraNF  =>/mf; rewrite !fgK).	0.0380661487579	3
Coq.ssr.ssrboolX.monoLR	40	0	search with cache (only 1: by move  =>mf x y; rewrite -{+1}[y]fgK mf).	0.0178430080414	1
Coq.ssr.ssrboolX.monoRL	40	2	search with cache (only 1: by move  =>mf x y; rewrite -{+1}[x]fgK mf).	0.018944978714	3
Coq.ssr.ssrboolX.can_mono	40	26	search with cache (only 1: congruence).	0.296518087387	333
Coq.ssr.ssrboolX.monoW_in	40	2	search with cache (only 1: by move  =>hf x y hx hy axy; rewrite hf).	0.0286061763763	11
Coq.ssr.ssrboolX.mono2W_in	40
Coq.ssr.ssrboolX.homoRL_in	40	2	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0943279266357	3
Coq.ssr.ssrboolX.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0199460983276	1
Coq.ssr.ssrboolX.homo_mono_in	40	2.2	search with cache (only 1: <ssreflect_plugin::ssrtclseq@0> move  =>mf mg x y hx hy; case : (boolP (rR _ _))  =>[/mg //|] ; first  exact; only 1: by apply : contraNF  =>/mf; rewrite !fgK_on //; apply).	0.0530500411987	6
Coq.ssr.ssrboolX.monoLR_in	40	7	search with cache (only 1: by move  =>mf x y hx hy; rewrite -{+1}[y]fgK_on // mf).	0.0269010066986	8
Coq.ssr.ssrboolX.monoRL_in	40	7	search with cache (only 1: by move  =>mf x y hx hy; rewrite -{+1}[x]fgK_on // mf).	0.0249130725861	8
Coq.ssr.ssrboolX.can_mono_in	40	6	search with cache (only 1: by move  =>mf x y hx hy /=; rewrite -mf // !fgK_on).	0.0340449810028	7
Coq.ssr.ssrunderX.Under_rel.Under_rel_from_rel	40	2.1	search with cache (only 1: intros x y H; only 1: auto  4).	0.0475950241089	5
Coq.ssr.ssrunderX.Under_rel.Under_relE	40	4	search with cache (only 1: split).	0.0174391269684	5
Coq.ssr.ssrunderX.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.0177848339081	1
Coq.ssr.ssrunderX.Under_rel.over_rel_done	40	2	search with cache (only 1: tauto).	0.0392980575562	24
Coq.ssr.ssrunderX.Under_rel.under_rel_done	40	0	search with cache (only 1: now trivial).	0.0162069797516	1
Coq.ssr.ssrfunX.unitE	40
Coq.ssr.ssrfunX.frefl	40	1.3.1	search with cache (only 1: red; only 1: intros; only 1: reflexivity).	0.0195639133453	8
Coq.ssr.ssrfunX.fsym	40	0.4	search with cache (only 1: intuition; only 1: by [  ]).	0.139225006104	6
Coq.ssr.ssrfunX.ftrans	40	1.5.10	search with cache (only 1: red; only 1: Tactics.program_simpl; only 1: now rewrite ?H, ?IHp).	1.09018087387	341
Coq.ssr.ssrfunX.rrefl	40	5	search with cache (only 1: by [  ]).	0.0158989429474	6
Coq.ssr.ssrfunX.eq_comp	40
Coq.ssr.ssrfunX.all_tag	40	1	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => ssrfun.tag (fP x)) =>x; case : (fP x) ).	0.0150020122528	2
Coq.ssr.ssrfunX.all_tag2	40	0	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0803689956665	1
Coq.ssr.ssrfunX.svalP	40	0	search with cache (only 1: by case : u ).	0.0133860111237	1
Coq.ssr.ssrfunX.s2valP	40	0.11	search with cache (only 1: destruct u; only 1: now subst).	0.0403118133545	46
Coq.ssr.ssrfunX.s2valP'	40	0	search with cache (only 1: by case : u ).	0.0133218765259	1
Coq.ssr.ssrfunX.all_sig	40	0	search with cache (only 1: by case /all_tag =>f; exists f).	0.0207698345184	1
Coq.ssr.ssrfunX.all_sig2	40	0	search with cache (only 1: by case /all_sig =>f /all_pair []; exists f).	0.0222320556641	1
Coq.ssr.ssrfunX.can_pcan	40	0	search with cache (only 1: by move  =>fK x; congr (Some _) ).	0.0190451145172	1
Coq.ssr.ssrfunX.pcan_inj	40
Coq.ssr.ssrfunX.can_inj	40	4.26.6	search with cache (only 1: intuition; only 1: intros a b; only 1: congruence).	2.59508419037	1386
Coq.ssr.ssrfunX.canLR	40	0	search with cache (only 1: by move  =>fK ->).	0.0163540840149	1
Coq.ssr.ssrfunX.canRL	40	1	search with cache (only 1: by move  =>fK <-).	0.0193381309509	2
Coq.ssr.ssrfunX.Some_inj	40	0	search with cache (only 1: by move  =>x y []).	0.0138139724731	1
Coq.ssr.ssrfunX.of_voidK	40	0	search with cache (only 1: case  =>// undecP).	0.0128729343414	1
Coq.ssr.ssrfunX.esymK	40	5.47	search with cache (only 1: intros H; only 1: now subst).	1.3886179924	1455
Coq.ssr.ssrfunX.etrans_id	40	8	search with cache (only 1: now subst).	0.0183990001678	9
Coq.ssr.ssrfunX.inj_id	40	0	search with cache (only 1: by [  ]).	0.0122859477997	1
Coq.ssr.ssrfunX.inj_can_sym	40	11	search with cache (only 1: firstorder  (subst; auto)).	0.0331521034241	33
Coq.ssr.ssrfunX.inj_comp	40	1	search with cache (only 1: by move  =>injf injh x y /injf; apply : injh ).	0.0190298557281	2
Coq.ssr.ssrfunX.inj_compr	40
Coq.ssr.ssrfunX.can_comp	40
Coq.ssr.ssrfunX.pcan_pcomp	40
Coq.ssr.ssrfunX.eq_inj	40
Coq.ssr.ssrfunX.eq_can	40	25.53	search with cache (only 1: compute; only 1: intuition congruence).	15.5858659744	10460
Coq.ssr.ssrfunX.inj_can_eq	40
Coq.ssr.ssrfunX.bij_inj	40	11	search with cache (only 1: by case : bijf  =>g fK _; apply : can_inj fK ).	0.146376132965	33
Coq.ssr.ssrfunX.bij_can_sym	40	8.10.110	search with cache (only 1: compute; only 1: <ssreflect_plugin::ssrtclseq@0> <ssreflect_plugin::ssrtclintros@0> split =>fK ; first  exact : inj_can_sym fK bij_inj ; only 1: by case : bijf  =>h _ hK x; rewrite -[x]hK fK).	17.1311759949	34235
Coq.ssr.ssrfunX.bij_can_eq	40
Coq.ssr.ssrfunX.eq_bij	40
Coq.ssr.ssrfunX.bij_comp	40
Coq.ssr.ssrfunX.bij_can_bij	40
Coq.ssr.ssrfunX.inv_inj	40
Coq.ssr.ssrfunX.inv_bij	40	14	search with cache (only 1: firstorder  (subst; auto)).	0.0411190986633	75
Coq.Sets.ImageX.Im_def	40
Coq.Sets.ImageX.Im_add	40
Coq.Sets.ImageX.image_empty	40	3.3.13.11.2.0.4.1	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros X H'0; only 1: elim H'0; only 1: intro H'3; only 1: induction 1; only 1: auto with sets).	11.9570279121	10034
Coq.Sets.ImageX.finite_image	40
Coq.Sets.ImageX.Im_inv	40	0.2.4.1.14	search with cache (only 1: intro H'1; only 1: intros x0 H'0; only 1: induction 1; only 1: exists x; only 1: auto using Im_def with sets).	3.11849713326	2562
Coq.Sets.ImageX.not_injective_elim	40
Coq.Sets.ImageX.cardinal_Im_intro	40
Coq.Sets.ImageX.In_Image_elim	40
Coq.Sets.ImageX.injective_preserves_cardinal	40
Coq.Sets.ImageX.cardinal_decreases	40
Coq.Sets.ImageX.Pigeonhole	40
Coq.Sets.ImageX.Pigeonhole_principle	40
Coq.Sets.PermutX.cong_congr	40
Coq.Sets.PermutX.comm_right	40	5	search with cache (only 1: firstorder).	0.103709220886	51
Coq.Sets.PermutX.comm_left	40	2.2.1	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0816719532013	26
Coq.Sets.PermutX.perm_right	40
Coq.Sets.PermutX.perm_left	40
Coq.Sets.PermutX.op_rotate	40
Coq.Sets.PermutX.twist	40
Coq.Sets.Powerset_factsX.Empty_set_zero	40	4	search with cache (only 1: auto  6 with sets).	0.0209250450134	5
Coq.Sets.Powerset_factsX.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0202741622925	1
Coq.Sets.Powerset_factsX.Empty_set_zero'	40
Coq.Sets.Powerset_factsX.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.021066904068	1
Coq.Sets.Powerset_factsX.Union_commutative	40	0	search with cache (only 1: auto  6 with sets).	0.0265090465546	1
Coq.Sets.Powerset_factsX.Union_associative	40	19.8.4	search with cache (only 1: intro H; only 1: intros y H'1; only 1: auto  10 with sets).	8.58551883698	2553
Coq.Sets.Powerset_factsX.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0241799354553	1
Coq.Sets.Powerset_factsX.Union_absorbs	40	3	search with cache (only 1: auto  6 with sets).	0.106729984283	4
Coq.Sets.Powerset_factsX.Couple_as_union	40
Coq.Sets.Powerset_factsX.Triple_as_union	40
Coq.Sets.Powerset_factsX.Triple_as_Couple	40
Coq.Sets.Powerset_factsX.Triple_as_Couple_Singleton	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	22.3247079849	10152
Coq.Sets.Powerset_factsX.Intersection_commutative	40
Coq.Sets.Powerset_factsX.Distributivity	40
Coq.Sets.Powerset_factsX.Distributivity_l	40
Coq.Sets.Powerset_factsX.Distributivity'	40
Coq.Sets.Powerset_factsX.Union_add	40	7.3.1	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	1.3739130497	518
Coq.Sets.Powerset_factsX.Non_disjoint_union	40	0.0.1.0.0.0.2.2.1.1.0.9.3	search with cache (only 1: intros; only 1: unfold Add at 1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	12.9287350178	11142
Coq.Sets.Powerset_factsX.Non_disjoint_union'	40
Coq.Sets.Powerset_factsX.singlx	40	0.2.8.5.2.1	search with cache (only 1: unfold Add at 1; only 1: intros x0 H'0; only 1: intro H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	5.00697994232	4176
Coq.Sets.Powerset_factsX.incl_add	40	2.0	search with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.0760960578918	41
Coq.Sets.Powerset_factsX.incl_add_x	40
Coq.Sets.Powerset_factsX.Add_commutative	40	8.0	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.218137025833	48
Coq.Sets.Powerset_factsX.Add_commutative'	40
Coq.Sets.Powerset_factsX.Add_distributes	40
Coq.Sets.Powerset_factsX.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.0149941444397	1
Coq.Sets.Powerset_factsX.Disjoint_Intersection	40
Coq.Sets.Powerset_factsX.Intersection_Empty_set_l	40	8.0	search with cache (only 1: intros; only 1: auto with sets).	0.134358167648	35
Coq.Sets.Powerset_factsX.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0257549285889	2
Coq.Sets.Powerset_factsX.Seminus_Empty_set_l	40	20.0.4.0.0.5	search with cache (only 1: intro H'4; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: unfold Setminus at 1; only 1: firstorder).	5.68822383881	6255
Coq.Sets.Powerset_factsX.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.245183944702	9
Coq.Sets.Powerset_factsX.Setminus_Union_l	40
Coq.Sets.Powerset_factsX.Setminus_Union_r	40
Coq.Sets.Powerset_factsX.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_factsX.Setminus_Included_empty	40	2.0.1.1.5.0.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: contradict H1; only 1: intuition; only 1: inversion H0; only 1: intuition; only 1: intuition).	20.0124688148	2327
Coq.Sets.Relations_3_factsX.Rstar_imp_coherent	40	1.0.11.3.0	search with cache (only 1: intros U R; only 1: red; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	2.04397702217	1822
Coq.Sets.Relations_3_factsX.coherent_symmetric	40	16.1	search with cache (only 1: compute; only 1: firstorder).	8.97988915443	7228
Coq.Sets.Relations_3_factsX.Strong_confluence	40
Coq.Sets.Relations_3_factsX.Strong_confluence_direct	40
Coq.Sets.Relations_3_factsX.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_factsX.Newman	40
Coq.Sets.Infinite_setsX.make_new_approximant	40
Coq.Sets.Infinite_setsX.approximants_grow	40
Coq.Sets.Infinite_setsX.approximants_grow'	40
Coq.Sets.Infinite_setsX.approximant_can_be_any_size	40
Coq.Sets.Infinite_setsX.Image_set_continuous	40
Coq.Sets.Infinite_setsX.Image_set_continuous'	40
Coq.Sets.Infinite_setsX.Pigeonhole_bis	40
Coq.Sets.Infinite_setsX.Pigeonhole_ter	40
Coq.Sets.Powerset_Classical_factsX.sincl_add_x	40
Coq.Sets.Powerset_Classical_factsX.incl_soustr_in	40	0.0.0.0.2.0	search with cache (only 1: intros X x H'; only 1: red; only 1: unfold Subtract; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0278129577637	8
Coq.Sets.Powerset_Classical_factsX.incl_soustr	40	0.0.0.0.1.2	search with cache (only 1: intros A NI; only 1: intros x H; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.217663049698	106
Coq.Sets.Powerset_Classical_factsX.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_factsX.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_factsX.add_soustr_2	40
Coq.Sets.Powerset_Classical_factsX.add_soustr_1	40
Coq.Sets.Powerset_Classical_factsX.add_soustr_xy	40
Coq.Sets.Powerset_Classical_factsX.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_factsX.Sub_Add_new	40
Coq.Sets.Powerset_Classical_factsX.Simplify_add	40
Coq.Sets.Powerset_Classical_factsX.Included_Add	40
Coq.Sets.Powerset_Classical_factsX.setcover_inv	40
Coq.Sets.Powerset_Classical_factsX.Add_covers	40
Coq.Sets.Powerset_Classical_factsX.covers_Add	40
Coq.Sets.Powerset_Classical_factsX.covers_is_Add	40
Coq.Sets.Powerset_Classical_factsX.Singleton_atomic	40
Coq.Sets.Powerset_Classical_factsX.less_than_singleton	40
Coq.Sets.PowersetX.Empty_set_minimal	40	7.0	search with cache (only 1: red; only 1: now f_equal).	0.0143849849701	9
Coq.Sets.PowersetX.Power_set_Inhabited	40
Coq.Sets.PowersetX.Inclusion_is_an_order	40
Coq.Sets.PowersetX.Inclusion_is_transitive	40	0.0.0.0	search with cache (only 1: intro X; only 1: red; only 1: intros x H'; only 1: firstorder).	0.014967918396	4
Coq.Sets.PowersetX.Power_set_PO	40
Coq.Sets.PowersetX.Strict_Rel_is_Strict_Included	40	0	search with cache (only 1: auto with sets).	0.0111749172211	1
Coq.Sets.PowersetX.Strict_inclusion_is_transitive_with_inclusion	40	5.0.6.1.0.1	search with cache (only 1: red; only 1: intros C R H' H'0; only 1: elim H'0; only 1: intuition try easy; only 1: auto with sets; only 1: RelationClasses.simpl_relation).	8.04418492317	3667
Coq.Sets.PowersetX.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.PowersetX.Strict_inclusion_is_transitive	40	0.2.0.0.1.0.0.1.1	search with cache (only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	3.25576114655	903
Coq.Sets.PowersetX.Empty_set_is_Bottom	40	10	search with cache (only 1: now f_equal).	0.303920030594	62
Coq.Sets.PowersetX.Union_minimal	40
Coq.Sets.PowersetX.Intersection_maximal	40	0.2.0.0	search with cache (only 1: intro X; only 1: red; only 1: intro A; only 1: auto with sets).	0.017655134201	6
Coq.Sets.PowersetX.Union_increases_l	40	3.1.1	search with cache (only 1: intro X; only 1: intros x H'1; only 1: auto with sets).	0.0141048431396	8
Coq.Sets.PowersetX.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.0102260112762	1
Coq.Sets.PowersetX.Intersection_decreases_l	40	0.1.0.2.2.1	search with cache (only 1: intro X; only 1: red; only 1: intro A; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.741500139236	146
Coq.Sets.PowersetX.Intersection_decreases_r	40	0.1.1.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0190179347992	7
Coq.Sets.PowersetX.Union_is_Lub	40
Coq.Sets.PowersetX.Intersection_is_Glb	40
Coq.Sets.Finite_setsX.cardinal_invert	40	15.5.8.2.0.3	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: induction H'; only 1: RelationClasses.simpl_relation; only 1: unfold Add at 1; only 1: firstorder).	18.9961400032	31264
Coq.Sets.Finite_setsX.cardinal_elim	40	0.0.4.6	search with cache (only 1: intros; only 1: destruct H; only 1: auto; only 1: auto with sets).	0.0817351341248	138
Coq.Sets.MultisetX.meq_refl	40	1.1	search with cache (only 1: intuition; only 1: firstorder).	0.107301950455	13
Coq.Sets.MultisetX.meq_trans	40
Coq.Sets.MultisetX.meq_sym	40	0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: auto).	0.0509750843048	7
Coq.Sets.MultisetX.munion_empty_left	40	0.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: auto).	0.0234501361847	5
Coq.Sets.MultisetX.munion_empty_right	40	0.1.2.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: intros; only 1: auto).	0.0560531616211	9
Coq.Sets.MultisetX.munion_comm	40	11.0.0.0.5	search with cache (only 1: intros; only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: intuition).	22.9522089958	13369
Coq.Sets.MultisetX.munion_ass	40	0.1.2.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct y; only 1: simpl; only 1: destruct x; only 1: auto with arith).	0.0459578037262	10
Coq.Sets.MultisetX.meq_left	40	0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.0581350326538	6
Coq.Sets.MultisetX.meq_right	40	0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.0587649345398	6
Coq.Sets.MultisetX.munion_rotate	40
Coq.Sets.MultisetX.meq_congr	40	2.2.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: unfold multiplicity; only 1: auto with arith).	0.206773996353	22
Coq.Sets.MultisetX.munion_perm_left	40
Coq.Sets.MultisetX.multiset_twist1	40
Coq.Sets.MultisetX.multiset_twist2	40
Coq.Sets.MultisetX.treesort_twist1	40
Coq.Sets.MultisetX.treesort_twist2	40
Coq.Sets.MultisetX.meq_singleton	40
Coq.Sets.Constructive_setsX.Extension	40	8.1	search with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).	1.30083107948	159
Coq.Sets.Constructive_setsX.Noone_in_empty	40	1.13	search with cache (only 1: red; only 1: simple destruct 1).	1.05193185806	459
Coq.Sets.Constructive_setsX.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0256729125977	4
Coq.Sets.Constructive_setsX.Add_intro1	40	8.15.2	search with cache (only 1: RelationClasses.simpl_relation; only 1: left; only 1: firstorder).	13.2467398643	5446
Coq.Sets.Constructive_setsX.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0186700820923	2
Coq.Sets.Constructive_setsX.Inhabited_add	40	0.16.42.0	search with cache (only 1: unfold Add at 1; only 1: intros; only 1: exists x; only 1: auto with sets).	15.2029719353	25232
Coq.Sets.Constructive_setsX.Inhabited_not_empty	40	1.0.3.7.6	search with cache (only 1: intros; only 1: firstorder; only 1: RelationClasses.simpl_relation; only 1: elim (Noone_in_empty x); only 1: auto with sets).	3.38622903824	1729
Coq.Sets.Constructive_setsX.Add_not_Empty	40	0.17.0.12.1.0.11	search with cache (only 1: intro n; only 1: unfold Add at 1; only 1: intro; only 1: intro H; only 1: elim (Noone_in_empty x); only 1: rewrite <- H; only 1: auto using Noone_in_empty with sets).	24.4983057976	28402
Coq.Sets.Constructive_setsX.not_Empty_Add	40
Coq.Sets.Constructive_setsX.Singleton_inv	40	4.6.13	search with cache (only 1: intros x y H; only 1: destruct H; only 1: auto).	2.94849896431	1123
Coq.Sets.Constructive_setsX.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.0566921234131	4
Coq.Sets.Constructive_setsX.Union_inv	40	3.2.0.1.1.5.1	search with cache (only 1: intros x H'0; only 1: intros; only 1: destruct H; only 1: left; only 1: auto using Add_intro2 with sets; only 1: right; only 1: RelationClasses.simpl_relation).	3.96256494522	841
Coq.Sets.Constructive_setsX.Add_inv	40
Coq.Sets.Constructive_setsX.Intersection_inv	40	3.0.0	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: auto using Add_intro2 with sets).	0.0266768932343	6
Coq.Sets.Constructive_setsX.Couple_inv	40	1.1.0.3	search with cache (only 1: intros B C x H'; only 1: induction H'; only 1: auto; only 1: auto).	0.615317106247	65
Coq.Sets.Constructive_setsX.Setminus_intro	40	1.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0182528495789	3
Coq.Sets.Constructive_setsX.Strict_Included_intro	40	3.2.4	search with cache (only 1: intros; only 1: destruct H; only 1: auto with sets).	0.0957798957825	55
Coq.Sets.Constructive_setsX.Strict_Included_strict	40	1.3.1	search with cache (only 1: red; only 1: intros A x; only 1: firstorder).	0.0605130195618	13
Coq.Sets.Classical_setsX.not_included_empty_Inhabited	40
Coq.Sets.Classical_setsX.not_empty_Inhabited	40
Coq.Sets.Classical_setsX.Inhabited_Setminus	40
Coq.Sets.Classical_setsX.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_setsX.Subtract_intro	40	7.3.1.3	search with cache (only 1: red; only 1: intros B C x H'; only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).	3.0976998806	1931
Coq.Sets.Classical_setsX.Subtract_inv	40	0.5.3.0.3.9	search with cache (only 1: intros Heq; only 1: intros X H'; only 1: unfold Subtract at 1; only 1: intro H'1; only 1: elim H'1; only 1: auto with sets).	9.99833393097	7105
Coq.Sets.Classical_setsX.Included_Strict_Included	40
Coq.Sets.Classical_setsX.Strict_Included_inv	40
Coq.Sets.Classical_setsX.not_SIncl_empty	40	2.2.0.0.0	search with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: auto with sets).	0.0739710330963	12
Coq.Sets.Classical_setsX.Complement_Complement	40
Coq.Sets.Partial_OrderX.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_OrderX.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_OrderX.Strict_Rel_Transitive	40
Coq.Sets.Relations_2_factsX.Rstar_reflexive	40	4.6	search with cache (only 1: intro y; only 1: intuition).	0.0853831768036	91
Coq.Sets.Relations_2_factsX.Rplus_contains_R	40	3.1	search with cache (only 1: intros U R R' H' H'0; only 1: auto  10 with sets).	0.024514913559	24
Coq.Sets.Relations_2_factsX.Rstar_contains_R	40	1.0.2.0.16	search with cache (only 1: intros x y H; only 1: firstorder; only 1: right with y0; only 1: firstorder; only 1: RelationClasses.simpl_relation).	1.67530417442	1203
Coq.Sets.Relations_2_factsX.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_factsX.Rstar_transitive	40
Coq.Sets.Relations_2_factsX.Rstar_cases	40
Coq.Sets.Relations_2_factsX.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_factsX.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_factsX.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_factsX.star_monotone	40
Coq.Sets.Relations_2_factsX.RstarRplus_RRstar	40
Coq.Sets.Relations_2_factsX.Lemma1	40
Coq.Sets.IntegersX.le_reflexive	40	0	search with cache (only 1: intuition).	0.0883340835571	1
Coq.Sets.IntegersX.le_antisym	40	3.2	search with cache (only 1: intros p H0 H2; only 1: PeanoNat.Nat.Private_Tac.order).	0.0330190658569	7
Coq.Sets.IntegersX.le_trans	40	14.0	search with cache (only 1: intros a b; only 1: PeanoNat.Nat.order).	0.818284988403	409
Coq.Sets.IntegersX.le_Order	40
Coq.Sets.IntegersX.triv_nat	40	3.11.9	search with cache (only 1: red; only 1: intro n; only 1: now f_equal).	0.397600889206	578
Coq.Sets.IntegersX.nat_po	40
Coq.Sets.IntegersX.le_total_order	40
Coq.Sets.IntegersX.Finite_subset_has_lub	40
Coq.Sets.IntegersX.Integers_has_no_ub	40
Coq.Sets.IntegersX.Integers_infinite	40
Coq.Sets.UnisetX.le_refl	40	14.3.48	search with cache (only 1: destruct b; only 1: reflexivity; only 1: reflexivity).	15.2275397778	15161
Coq.Sets.UnisetX.incl_left	40	15.6.8.5	search with cache (only 1: intros; only 1: intros Hk; only 1: rewrite <- H; only 1: trivial).	10.4710519314	5333
Coq.Sets.UnisetX.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0216040611267	5
Coq.Sets.UnisetX.seq_refl	40	3	search with cache (only 1: auto).	0.0146238803864	4
Coq.Sets.UnisetX.seq_trans	40	7.1.5	search with cache (only 1: unfold seq; only 1: intros s1 s2 E a; only 1: eauto with arith).	1.38994121552	845
Coq.Sets.UnisetX.seq_sym	40	0.0.0.1.1.1.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.044636964798	10
Coq.Sets.UnisetX.union_empty_left	40	1.1.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: auto).	0.0233888626099	5
Coq.Sets.UnisetX.union_empty_right	40	2.0.5.0.0.0.0.2	search with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros; only 1: destruct b; only 1: auto; only 1: auto).	5.27705812454	2949
Coq.Sets.UnisetX.union_comm	40	14.0.2.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: destruct y; only 1: simpl; only 1: intuition).	12.4292190075	8758
Coq.Sets.UnisetX.union_ass	40	0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	0.0313808917999	6
Coq.Sets.UnisetX.seq_left	40	0.2.2.0.1.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: rewrite H; only 1: auto).	14.3172738552	5391
Coq.Sets.UnisetX.seq_right	40	1.0.1.1.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct z; only 1: destruct y; only 1: intros; only 1: elim H; only 1: auto).	1.60814189911	435
Coq.Sets.UnisetX.union_rotate	40
Coq.Sets.UnisetX.seq_congr	40
Coq.Sets.UnisetX.union_perm_left	40
Coq.Sets.UnisetX.uniset_twist1	40
Coq.Sets.UnisetX.uniset_twist2	40
Coq.Sets.UnisetX.treesort_twist1	40
Coq.Sets.UnisetX.treesort_twist2	40
Coq.Sets.Finite_sets_factsX.finite_cardinal	40
Coq.Sets.Finite_sets_factsX.cardinal_finite	40	0.0.3.1.1.0.5.1.0.3.1.8	search with cache (only 1: induction n; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets; only 1: intro H'3; only 1: auto with sets; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'11; only 1: intros t H'1 H'2; only 1: auto with sets).	11.918446064	14105
Coq.Sets.Finite_sets_factsX.Add_preserves_Finite	40
Coq.Sets.Finite_sets_factsX.Singleton_is_finite	40	2.16.20	search with cache (only 1: firstorder; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	1.33027887344	2447
Coq.Sets.Finite_sets_factsX.Union_preserves_Finite	40
Coq.Sets.Finite_sets_factsX.Finite_downward_closed	40
Coq.Sets.Finite_sets_factsX.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_factsX.cardinalO_empty	40	0.9.11	search with cache (only 1: intros x H1; only 1: inversion_clear H1; only 1: trivial with sets).	8.01689696312	3159
Coq.Sets.Finite_sets_factsX.inh_card_gt_O	40
Coq.Sets.Finite_sets_factsX.card_soustr_1	40
Coq.Sets.Finite_sets_factsX.cardinal_is_functional	40
Coq.Sets.Finite_sets_factsX.cardinal_Empty	40	1.0.4.32	search with cache (only 1: inversion 1; only 1: auto with sets; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	5.7985200882	5689
Coq.Sets.Finite_sets_factsX.cardinal_unicity	40
Coq.Sets.Finite_sets_factsX.card_Add_gen	40
Coq.Sets.Finite_sets_factsX.incl_st_card_lt	40
Coq.Sets.Finite_sets_factsX.incl_card_le	40
Coq.Sets.Finite_sets_factsX.G_aux	40
Coq.Sets.Finite_sets_factsX.Generalized_induction_on_finite_sets	40
Coq.Sets.Relations_1_factsX.Rsym_imp_notRsym	40	3.3.22	search with cache (only 1: intros A f assoc a0 comma0 l; only 1: intro H1; only 1: intuition).	3.03919482231	2629
Coq.Sets.Relations_1_factsX.Equiv_from_preorder	40	2.6	search with cache (only 1: intros EQ; only 1: firstorder).	0.0865151882172	26
Coq.Sets.Relations_1_factsX.Equiv_from_order	40	0.0.0.1.0.0.11.14	search with cache (only 1: intros A P; only 1: intros HE; only 1: apply Definition_of_equivalence; only 1: firstorder; only 1: red; only 1: firstorder; only 1: unfold Symmetric, Complement; only 1: firstorder).	8.27677416801	8461
Coq.Sets.Relations_1_factsX.contains_is_preorder	40	2.43	search with cache (only 1: intros; only 1: RelationClasses.simpl_relation).	2.93840718269	1789
Coq.Sets.Relations_1_factsX.same_relation_is_equivalence	40
Coq.Sets.Relations_1_factsX.cong_reflexive_same_relation	40	1.6	search with cache (only 1: intros U R H'; only 1: firstorder).	0.0907230377197	42
Coq.Sets.Relations_1_factsX.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation at 1; only 1: intuition).	0.123120069504	2
Coq.Sets.Relations_1_factsX.cong_antisymmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation at 1; only 1: intuition).	0.134281873703	2
Coq.Sets.Relations_1_factsX.cong_transitive_same_relation	40	0.8.0.1	search with cache (only 1: unfold same_relation at 1; only 1: intuition; only 1: intros a b; only 1: eauto).	4.2588698864	400