
Coq.micromega.OrderedRing.rplus_morph_Proper	40	14.23	search with cache (only 1: intros a n H H'; only 1: firstorder).	4.5418381691	4172
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	12.19	search with cache (only 1: intros a b Hb H; only 1: firstorder).	2.38656783104	1779
Coq.micromega.OrderedRing.ropp_morph_Proper	40	30.3	search with cache (only 1: intros x y H; only 1: firstorder).	2.5348610878	2323
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	20.15	search with cache (only 1: intro H; only 1: firstorder).	6.09857702255	2608
Coq.micromega.OrderedRing.Rplus_0_l	40	39	search with cache (only 1: firstorder).	1.99339389801	1766
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0659000873566	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.070915222168	2
Coq.micromega.OrderedRing.Rplus_comm	40	1.1.3	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0870130062103	8
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0671880245209	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.0	search with cache (only 1: intros; only 1: ring).	0.066223859787	2
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	0.1.0.0	search with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.213536024094	5
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.0	search with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.135287046432	3
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	3.0	search with cache (only 1: intros; only 1: now apply Z.ge_le).	0.145887851715	44
Coq.micromega.Ztac.elim_concl_lt	40	4.0	search with cache (only 1: intros; only 1: now apply Z.nle_gt).	0.061999797821	12
Coq.micromega.Ztac.Zlt_le_add_1	40	5.4	search with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.717105150223	113
Coq.micromega.Ztac.add_le	40	0.0	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0723061561584	2
Coq.micromega.Ztac.mul_le	40	0.0.3.1	search with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.179305076599	38
Coq.micromega.ZifyInst.PropAnd	40	3.7.13	search with cache (only 1: constructor; only 1: intros; only 1: intuition).	1.04208087921	378
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.19424200058	2
Coq.micromega.ZifyInst.PropArrow	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.116930007935	2
Coq.micromega.ZifyInst.PropIff	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.128980875015	2
Coq.micromega.ZifyInst.PropNot	40	0.0.0	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0802059173584	3
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.z_max_spec	40	0.2.20	search with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	3.17868614197	1604
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0840811729431	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0761909484863	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0734348297119	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0955989360809	1
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.131837844849	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	0.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.145261764526	5
Coq.micromega.ZCoeff.ring_ops_wd	40	5.1.1.5	search with cache (only 1: constructor; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).	2.11170101166	652
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40	4.0.22	search with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto with arith).	6.11384105682	3341
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.1.0.0.0.0.0	search with cache (only 1: split; only 1: intro EQ; only 1: now rewrite EQ; only 1: destruct x; only 1: reflexivity; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	0.128287792206	8
Coq.micromega.ZMicromega.lt_le_iff	40	3.1	search with cache (only 1: intro n; only 1: apply Z.lt_le_pred).	0.16238284111	15
Coq.micromega.ZMicromega.le_0_iff	40	3.7.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: apply Z.le_0_sub).	1.91623091698	264
Coq.micromega.ZMicromega.le_neg	40	0.0.0.0.3.0.4.3.0.2.3.1	search with cache (only 1: intro; only 1: destruct x; only 1: compute; only 1: intuition congruence; only 1: compute; only 1: intuition congruence; only 1: simpl; only 1: split; only 1: intros; only 1: reflexivity; only 1: intros H; only 1: easy).	30.1919989586	17027
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0	search with cache (only 1: reflexivity).	0.115540027618	1
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.1.0.1.0.0.3.4	search with cache (only 1: intros s2; only 1: case s2; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).	3.12248086929	1119
Coq.micromega.ZMicromega.isZ0_n0	40	1.0.1.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: easy'; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: now split).	0.171768903732	9
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	0.0.4.0.15.0.2.0	search with cache (only 1: induction p; only 1: constructor; only 1: auto with zarith; only 1: constructor; only 1: assumption; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith).	4.8861041069	2962
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	1.0.1.2.0.10.7.9	search with cache (only 1: intros x y H; only 1: destruct x; only 1: destruct z; only 1: reflexivity; only 1: easy; only 1: easy; only 1: now destruct Hn || easy; only 1: now destruct Hn || easy).	18.7054989338	12063
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	1.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.166896104813	6
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	3.0.12.4	search with cache (only 1: intro n; only 1: split; only 1: now destruct n; only 1: now destruct n).	3.60277295113	1422
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40	10.2	search with cache (only 1: rewrite <- !jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.637521028519	466
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	1.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0222139358521	4
Coq.micromega.Env.nth_pred_double	40	2.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0693020820618	11
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.1.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: reflexivity).	0.0296080112457	6
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	5	search with cache (only 1: destr_bool).	0.0738198757172	12
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0	search with cache (only 1: trivial).	0.0397200584412	1
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0280530452728	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	3.33	search with cache (only 1: fix odd_spec 1; only 1: firstorder).	2.66184997559	3594
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	1.0.8	search with cache (only 1: destruct f; only 1: reflexivity; only 1: auto).	0.0781297683716	62
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: simpl; only 1: reflexivity).	0.321052789688	149
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	3.7.6.22.6.0	search with cache (only 1: unfold eval_cnf; only 1: split; only 1: clear; only 1: unfold cnf_ff; only 1: firstorder  discriminate; only 1: tauto).	35.2357759476	54656
Coq.micromega.Tauto.eval_cnf_tt	40	1.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0353710651398	4
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	3.5.1.5	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: intros; only 1: repeat rewrite make_conj_cons in *; only 1: tauto).	5.73341608047	2180
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0726261138916	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40	1.15.11	search with cache (only 1: intros N; only 1: fix odd_spec 1; only 1: auto).	26.3099460602	21838
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	2.0.3.0.1.2.1.5.2	search with cache (only 1: intro n; only 1: split; only 1: induction n; only 1: simpl; only 1: easy; only 1: auto with zarith; only 1: simpl; only 1: auto with zarith; only 1: now destruct n).	3.159044981	1519
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.150387048721	1
Coq.micromega.EnvRing.rmul_ext_Proper	40	2	search with cache (only 1: exact (Rmul_ext Reqe)).	0.043338060379	3
Coq.micromega.EnvRing.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0446119308472	2
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40	0.0.4.0.0	search with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	0.0976920127869	14
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.1.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	25.6418089867	2979
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	6.1050901413	1098
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.1	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0891909599304	5
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.118903875351	8
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.1.0.34	search with cache (only 1: induction M; only 1: Esimpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	17.5975248814	6012
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0932240486145	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.13952088356	1
Coq.micromega.RingMicromega.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.113484859467	1
Coq.micromega.RingMicromega.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.108533143997	1
Coq.micromega.RingMicromega.rlt_morph_Proper	40	1	search with cache (only 1: exact (SORlt_wd sor)).	0.133080005646	2
Coq.micromega.RingMicromega.rminus_morph_Proper	40	0.0.0.0.1	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.203478097916	6
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	13.9.0	search with cache (only 1: intros; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	2.72375202179	642
Coq.micromega.RingMicromega.eval_pol_mul	40	21.16.0.19	search with cache (only 1: unfold eval_pol; only 1: intros; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- ?t == _ => add_permut_rec t end in add_permut).	26.3912689686	14734
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.2.0.5.1.0	search with cache (only 1: firstorder; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.137256145477	187
Coq.micromega.Refl.make_impl_map	40	4.2.0	search with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: firstorder).	0.0755360126495	32
Coq.micromega.Refl.make_conj_cons	40	4.3.8.1	search with cache (only 1: simpl; only 1: induction l; only 1: firstorder; only 1: tauto).	2.34848308563	2761
Coq.micromega.Refl.make_conj_impl	40	3.0.5.0.1.1.0	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: firstorder).	4.3979640007	2944
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.15.0	search with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	7.39991188049	1323
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.170365095139	5
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	2.8	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.482352018356	245
Coq.rtauto.Bintree.map_app	40	0.0.1.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.187021970749	51
Coq.rtauto.Bintree.length_map	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0151839256287	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.0.0.2.3.0.6	search with cache (only 1: induction l; only 1: simpl; only 1: now intros []; only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	1.76323723793	1205
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	3	search with cache (only 1: now intros []).	0.0252730846405	12
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	6	search with cache (only 1: now intros []).	0.0128409862518	11
Coq.rtauto.Bintree.get_Full_Gt	40	4.9.4	search with cache (only 1: intro i; only 1: fix sqrtrem_spec 1; only 1: auto).	7.91366314888	6084
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.2.36.5	search with cache (only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: injection; only 1: auto).	10.5776689053	20352
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40	0.61	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	16.9121670723	39944
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40	0.6.15.2	search with cache (only 1: intros; only 1: case S; only 1: fix sqrtrem_spec 1; only 1: auto).	1.69631195068	2692
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	1.1.8	search with cache (only 1: intros H; only 1: fix sqrtrem_spec 1; only 1: auto).	0.15388584137	150
Coq.rtauto.Rtauto.compose1	40	6.3.1.1.2.0.3.2.0	search with cache (only 1: induction F; only 1: intros A H; only 1: auto; only 1: intros A H; only 1: induction F; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder).	19.3111758232	14353
Coq.rtauto.Rtauto.compose2	40	8.2.0.0.1.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: firstorder).	3.39449000359	2543
Coq.rtauto.Rtauto.compose3	40	10.1.1.0.0.0	search with cache (only 1: induction F; only 1: intros A B C H; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: firstorder).	4.72105908394	3820
Coq.rtauto.Rtauto.weaken	40	1.0.10.2.9	search with cache (only 1: intros [index0 contents0] F; only 1: simpl; only 1: fix sqrtrem_spec 1; only 1: intros A B H; only 1: auto).	35.7312691212	30983
Coq.rtauto.Rtauto.project_In	40	2.7.2	search with cache (only 1: intros A H; only 1: fix sqrtrem_spec 1; only 1: auto).	0.766489028931	712
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	1.2.0	search with cache (only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring).	0.0832300186157	6
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	2.1.0	search with cache (only 1: simpl; only 1: intros; only 1: constructor).	0.0400891304016	6
Coq.nsatz.Nsatz.Rext	40	0.0.0.5	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.187325954437	9
Coq.nsatz.Nsatz.Rset	40	2.0	search with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.109654903412	18
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0365710258484	1
Coq.omega.OmegaLemmas.Zred_factor1	40	4.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: change_no_check 2 with (1 + 1); only 1: now Z.nzsimpl).	0.111861944199	11
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	5	search with cache (only 1: now Z.nzsimpl).	1.3343629837	109
Coq.omega.OmegaLemmas.Zred_factor4	40	8.6	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	0.0960040092468	124
Coq.omega.OmegaLemmas.Zred_factor5	40	1.6	search with cache (only 1: Z.nzsimpl; only 1: trivial).	0.0560250282288	9
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now destruct n).	0.0201690196991	1
Coq.omega.OmegaLemmas.new_var	40	0.18	search with cache (only 1: intros n; only 1: now exists n).	0.329364061356	407
Coq.omega.OmegaLemmas.OMEGA1	40	5.3	search with cache (only 1: intro EQ; only 1: now rewrite EQ).	0.0333261489868	10
Coq.omega.OmegaLemmas.OMEGA2	40	3.3.2.10	search with cache (only 1: intro H; only 1: generalize dependent x; only 1: intros b Hb IH; only 1: Z.order_pos).	3.17463994026	1039
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	2.0.15	search with cache (only 1: intros ->; only 1: symmetry; only 1: now subst).	0.529171943665	273
Coq.omega.OmegaLemmas.OMEGA6	40	2.1.2.3.3.4.17	search with cache (only 1: destruct x; only 1: intros; only 1: now subst; only 1: simpl; only 1: intros x; only 1: now intros ->; only 1: now destruct 1 || trivial).	10.6152360439	2953
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40	2.5.1.2	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	1.01727390289	401
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	1.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0420129299164	4
Coq.omega.OmegaLemmas.OMEGA12	40	1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0246551036835	3
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.121036052704	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.1	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0853130817413	5
Coq.omega.OmegaLemmas.OMEGA16	40	4.5	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: f_equal).	0.218468904495	46
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0463218688965	2
Coq.omega.OmegaLemmas.OMEGA18	40	2.0.2.1	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now intros ->).	0.0395081043243	9
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.160109043121	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	9.0.6.0.3.21	search with cache (only 1: destruct x; only 1: auto; only 1: symmetry; only 1: now subst; only 1: symmetry; only 1: now subst).	28.4712519646	22089
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0388610363007	6
Coq.omega.PreOmega.Z.rem_0_r_ext	40	3.0.1	search with cache (only 1: symmetry; only 1: subst; only 1: now destruct x).	0.0443830490112	33
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0294709205627	6
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.239429950714	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.257990121841	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.300045013428	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	search with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.211046934128	3
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40	1.2	search with cache (only 1: rewrite Pos.eqb_eq; only 1: reflexivity).	0.716593980789	102
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40	0.0.0.33.0	search with cache (only 1: unfold Positive_as_DT.ltb, Positive_as_DT.lt; only 1: case Pos.compare_spec; only 1: now split; only 1: easy'; only 1: now split).	29.3042600155	20219
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40	2.6.17	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: eauto).	19.581884861	5982
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.207330942154	9
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.0.12.4	search with cache (only 1: intros; only 1: induction H; only 1: simpl; only 1: trivial).	2.1170129776	343
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	0	search with cache (only 1: reflexivity).	0.288338899612	1
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	3	search with cache (only 1: auto with arith).	0.00833082199097	4
Coq.funind.Recdef.Splus_lt	40	1.3.9	search with cache (only 1: apply Nat.lt_succ_r; only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.17947101593	199
Coq.funind.Recdef.SSplus_lt	40	4.0.2	search with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: auto with arith).	0.0267848968506	14
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0967631340027	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	1.2.0.0.0	search with cache (only 1: intro EQ; only 1: symmetry in EQ; only 1: revert EQ; only 1: intros H1; only 1: discriminate).	0.118312835693	8
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	1	search with cache (only 1: assumption).	0.0252568721771	2
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0213129520416	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40	29.0.0	search with cache (only 1: intros; only 1: simpl; only 1: firstorder).	5.39203214645	2373
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40	1.0.2.0.0.0.0.0.0	search with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rewrite IHP1; only 1: Esimpl).	22.8404760361	416
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40	0.5.6	search with cache (only 1: intro P; only 1: elim (PaddX_ok2 P); only 1: auto).	28.7142961025	2878
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	8.0.1	search with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	1.89934015274	120
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	1.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.60966682434	58
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.2.1.0.0.2.0.0.0	search with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	1.76608705521	916
Coq.setoid_ring.Ring.bool_eq_ok	40	3	search with cache (only 1: destr_bool).	0.0977690219879	11
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0748529434204	1
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0681908130646	2
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0704100131989	2
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	2	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0947291851044	3
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	4	search with cache (only 1: trivial).	0.0450019836426	5
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.0629470348358	1
Coq.setoid_ring.Field_theory.rsub_0_l	40	2	search with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.105557918549	3
Coq.setoid_ring.Field_theory.rsub_0_r	40	5.0	search with cache (only 1: rewrite rsub_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.247213840485	7
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40	0.0.1.0.1.2.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl; only 1: now rewrite !IHp; only 1: simpl; only 1: now rewrite !IHp; only 1: simpl; only 1: trivial).	18.9862830639	209
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40	3.0.0.0.0.0.0	search with cache (only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	0.305387020111	16
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.135807037354	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.135420084	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	5.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.220484972	9
Coq.setoid_ring.Field_theory.PEpow_0_r	40	1.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: eauto).	0.233775138855	4
Coq.setoid_ring.Field_theory.PEpow_1_r	40	5.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.12291097641	11
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.3.1.0.0.0.0.2.0	search with cache (only 1: destruct l1; only 1: trivial; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	18.8381369114	2133
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	5.5	search with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.680978059769	157
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	8	search with cache (only 1: auto).	0.279648780823	40
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0765690803528	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0937540531158	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0751609802246	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	3	search with cache (only 1: exact eq_equivalence).	0.14518904686	38
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	0.0.0.10	search with cache (only 1: destruct x; only 1: constructor; only 1: auto; only 1: auto).	0.502859830856	194
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	0.2.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.0710380077362	5
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40	10	search with cache (only 1: firstorder).	0.946394205093	67
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	2	search with cache (only 1: f_equiv).	0.0448470115662	3
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	4.29	search with cache (only 1: firstorder; only 1: discriminate).	0.480060100555	595
Coq.setoid_ring.Ring_theory.IDmorph	40	3.1.2.2.3.3.1.1.3	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: auto).	1.2333688736	1318
Coq.setoid_ring.Ring_theory.Eqsth	40	4.8.10.1.4.0.0	search with cache (only 1: constructor; only 1: constructor; only 1: red; only 1: auto with *; only 1: intros EQ; only 1: intros a b H; only 1: congruence).	14.5712471008	15688
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	7.7.5	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	0.817351818085	653
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.117486000061	5
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	1.4	search with cache (only 1: intros a b H; only 1: auto).	0.0305469036102	7
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.1.1.7	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.248059988022	106
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	5	search with cache (only 1: solve_proper).	0.0226612091064	6
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.0210158824921	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0304338932037	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	15	search with cache (only 1: firstorder).	0.320792913437	230
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40	20	search with cache (only 1: simpl_relation).	0.662697076797	348
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	27.0	search with cache (only 1: intros x y H; only 1: simpl_relation).	0.911487102509	1226
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	75.2	search with cache (only 1: intros x y H; only 1: firstorder).	32.7706270218	47778
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	4.4	search with cache (only 1: intros x y H; only 1: auto).	0.0657558441162	10
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0429229736328	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0660569667816	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0116999149323	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0112450122833	1
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0109970569611	1
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.019052028656	4
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0145230293274	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	0.4.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0200910568237	7
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.7.0.0.0.0.0.0.0.6	search with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	27.3524739742	9846
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (SRadd_ext SReqe)).	0.0125639438629	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (SRmul_ext SReqe)).	0.0152268409729	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0207650661469	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.016459941864	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0165269374847	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0193378925323	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.608320951462	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.0.1.0.1	search with cache (only 1: induction x; only 1: simpl; only 1: norm; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm).	0.0882270336151	16
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0134079456329	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0946769714355	1
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0177519321442	1
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.036698102951	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40	0.0.0.2	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.326045036316	6
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	0.0.5	search with cache (only 1: constructor; only 1: intros; only 1: reflexivity).	0.567827224731	8
Coq.setoid_ring.Cring.cring_div_theory	40	1.9.1.0.0.3.0.12	search with cache (only 1: constructor; only 1: intros; only 1: generalize (Z.quotrem_eq a b); only 1: case Z.quotrem; only 1: intros; only 1: subst; only 1: rewrite Z.mul_comm; only 1: reflexivity).	9.66542100906	1817
Coq.setoid_ring.Cring.Zcri	40	5.9.17	search with cache (only 1: intros H1; only 1: repeat red; only 1: auto with zarith).	4.89906787872	1388
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0172288417816	1
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	2	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0190949440002	3
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0115201473236	2
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	2.10.0.1.1.1	search with cache (only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: now etransitivity).	9.89904999733	4150
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	3.8	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	1.16256284714	191
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40	32.6	search with cache (only 1: simpl; only 1: firstorder).	2.21600294113	1370
Coq.setoid_ring.Ring_polynom.Pphi1	40	35	search with cache (only 1: firstorder).	1.74374890327	1264
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	6.64201283455	1193
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40	0.0.3.0.0.2.6	search with cache (only 1: destruct n; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: intros; only 1: simpl; only 1: Esimpl).	7.1650428772	1207
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40	0.42	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	5.07187795639	7950
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	2.0.1	search with cache (only 1: intro x; only 1: intros; only 1: reflexivity).	0.0595939159393	6
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.1.0.0	search with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.105427980423	5
Coq.setoid_ring.Ncring.ring_add_assoc1	40	0.3.31.1	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).	36.3896119595	12434
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.19.1.7.0	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: rewrite <- ring_add_assoc; only 1: reflexivity).	12.9046897888	3971
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	1.8.2	search with cache (only 1: intros; only 1: pose proof (Zeq_bool_eq x y H) as H1; only 1: trivial).	0.409762144089	140
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.8.1.6.9	search with cache (only 1: intros H1; only 1: intros; only 1: apply Qeq_sym; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	8.48357391357	2465
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.13226890564	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.0131330490112	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	search with cache (only 1: by case : {}k {}).	0.0296049118042	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.4	search with cache (only 1: destruct 1; only 1: auto).	0.0114738941193	6
Coq.ssr.ssreflect.iffLR	40	4.2	search with cache (only 1: intros; only 1: tauto).	0.0196568965912	8
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.0109238624573	1
Coq.ssr.ssreflect.iffLRn	40	3.2	search with cache (only 1: intro H; only 1: tauto).	0.0321750640869	7
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.0110909938812	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.0303249359131	1
Coq.ssr.ssrbool.is_true_true	40	6	search with cache (only 1: by [  ]).	0.0288000106812	7
Coq.ssr.ssrbool.not_false_is_true	40	1	search with cache (only 1: by case).	0.0277481079102	2
Coq.ssr.ssrbool.is_true_locked_true	40	0.15	search with cache (only 1: unlock; only 1: by [  ]).	0.193508148193	108
Coq.ssr.ssrbool.negbT	40	0.0.2	search with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.0291919708252	5
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.0384669303894	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.02894115448	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.0232560634613	1
Coq.ssr.ssrbool.negbK	40	1	search with cache (only 1: by case).	0.153501987457	2
Coq.ssr.ssrbool.negbNE	40	1	search with cache (only 1: by case : {}b {}).	0.0103199481964	2
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	8	search with cache (only 1: Bool.destr_bool).	0.0284490585327	14
Coq.ssr.ssrbool.negbRL	40	2	search with cache (only 1: Bool.destr_bool).	0.0181829929352	3
Coq.ssr.ssrbool.contra	40	1.15	search with cache (only 1: Bool.destr_bool; only 1: tauto).	0.250262975693	127
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0270800590515	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0273909568787	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0275499820709	1
Coq.ssr.ssrbool.contraT	40	2.13	search with cache (only 1: Bool.destr_bool; only 1: auto with bool).	0.220943927765	126
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0149691104889	1
Coq.ssr.ssrbool.contraFT	40	4.8	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.231701850891	70
Coq.ssr.ssrbool.contraFN	40	4.10	search with cache (only 1: Bool.destr_bool; only 1: intuition).	6.74526596069	125
Coq.ssr.ssrbool.contraTF	40	2.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	11.7006869316	145
Coq.ssr.ssrbool.contraNF	40	2.9	search with cache (only 1: Bool.destr_bool; only 1: intuition).	14.6506438255	70
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.094477891922	1
Coq.ssr.ssrbool.ifT	40	6	search with cache (only 1: by move {+}->).	0.0163881778717	7
Coq.ssr.ssrbool.ifF	40	0	search with cache (only 1: by move {+}->).	0.00977897644043	1
Coq.ssr.ssrbool.ifN	40
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.23802113533	3
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case b).	0.249294042587	1
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.011470079422	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.0339879989624	1
Coq.ssr.ssrbool.ifE	40	3	search with cache (only 1: by [  ]).	0.121710062027	4
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.301968097687	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0157670974731	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.0601470470428	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	2.2.9	search with cache (only 1: intros [?| ?]; only 1: by case Hb; auto; only 1: by case Hb; auto).	1.45302700996	109
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.5	search with cache (only 1: intros [? ?]; only 1: by case : {}Pb {}; constructor; auto).	0.097934961319	7
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	2	search with cache (only 1: by case Pb).	0.0195229053497	3
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	7	search with cache (only 1: by case).	0.117382049561	8
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40	6.6.5	search with cache (only 1: split; only 1: intros H ?; only 1: tauto).	3.21340608597	271
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0534088611603	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0191609859467	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0218629837036	1
Coq.ssr.ssrbool.pair_andP	40	3	search with cache (only 1: tauto).	0.334649085999	4
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.0227320194244	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.0109970569611	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0215528011322	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.0113959312439	1
Coq.ssr.ssrbool.negPf	40	5	search with cache (only 1: by case b1; constructor).	0.0298969745636	6
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	4	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.027144908905	5
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0269701480865	1
Coq.ssr.ssrbool.implyP	40	1	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0173590183258	2
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by [  ]).	0.0108280181885	1
Coq.ssr.ssrbool.andFb	40	2	search with cache (only 1: by constructor; case).	0.045912027359	3
Coq.ssr.ssrbool.andbT	40
Coq.ssr.ssrbool.andbF	40
Coq.ssr.ssrbool.andbb	40	0	search with cache (only 1: by case).	0.0661671161652	1
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.0225529670715	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0149891376495	1
Coq.ssr.ssrbool.andbAC	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0234489440918	2
Coq.ssr.ssrbool.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0274939537048	1
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: by case).	0.0118010044098	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by case).	0.0119299888611	1
Coq.ssr.ssrbool.orbT	40	3	search with cache (only 1: Bool.destr_bool).	0.0225169658661	4
Coq.ssr.ssrbool.orbF	40	1	search with cache (only 1: by case).	0.0267288684845	2
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.016664981842	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0135939121246	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0640199184418	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0158619880676	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0160911083221	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.024493932724	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: by case : {}b {}).	0.0104758739471	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.0128080844879	1
Coq.ssr.ssrbool.orbN	40	2	search with cache (only 1: by case : {}b {}).	0.0151488780975	3
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.0217378139496	1
Coq.ssr.ssrbool.andb_orl	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0322740077972	3
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0174419879913	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0162100791931	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.016340970993	1
Coq.ssr.ssrbool.andb_idl	40	10.17	search with cache (only 1: Bool.destr_bool; only 1: intuition).	7.66010093689	424
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.30650806427	1
Coq.ssr.ssrbool.andb_id2l	40	3.3.6	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	3.53155708313	154
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.319370031357	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.185554981232	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.12485408783	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.289264917374	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.143970012665	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0321950912476	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0274000167847	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0259718894958	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0189709663391	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0149071216583	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0166220664978	1
Coq.ssr.ssrbool.implybT	40	2	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0276679992676	3
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.0149071216583	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.0155589580536	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.0183098316193	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.0237629413605	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0184872150421	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0183849334717	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0180878639221	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0182490348816	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.104835987091	1
Coq.ssr.ssrbool.implyb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.158054113388	1
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.202167987823	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.10329580307	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00964999198914	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.0195198059082	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.0317029953003	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0314939022064	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0381951332092	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0814499855042	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0373220443726	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0509209632874	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0382461547852	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0394341945648	1
Coq.ssr.ssrbool.addKb	40	7	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0426790714264	8
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0323729515076	1
Coq.ssr.ssrbool.addIb	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0534150600433	4
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.041426897049	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.0296409130096	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.033175945282	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0332479476929	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0336489677429	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.17	search with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	0.639538049698	218
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : {}pT {}pp {}).	0.0879619121552	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.0598411560059	1
Coq.ssr.ssrbool.unfold_in	40	2	search with cache (only 1: by rewrite -mem_topred).	0.03364610672	3
Coq.ssr.ssrbool.simpl_predE	40	1	search with cache (only 1: by [  ]).	0.00978112220764	2
Coq.ssr.ssrbool.mem_simpl	40	1	search with cache (only 1: by [  ]).	0.0103120803833	2
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	2	search with cache (only 1: by rewrite -mem_topred).	0.0165388584137	3
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	1	search with cache (only 1: by [  ]).	0.0334119796753	2
Coq.ssr.ssrbool.in1W	40	2.5	search with cache (only 1: move  {}=>f0 fP; only 1: by [  ]).	0.169540882111	18
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0150530338287	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0150210857391	1
Coq.ssr.ssrbool.in1T	40	16.1	search with cache (only 1: Bool.destr_bool; only 1: auto with bool).	1.61879515648	172
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.022490978241	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0209000110626	2
Coq.ssr.ssrbool.sub_in1	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.0140600204468	1
Coq.ssr.ssrbool.sub_in11	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.616207122803	3
Coq.ssr.ssrbool.sub_in111	40	2	search with cache (only 1: by move  {}=>? ?; auto).	1.09717607498	3
Coq.ssr.ssrbool.on1W	40	3	search with cache (only 1: by move  {}=>? ?).	1.26103997231	4
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.44659614563	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0135371685028	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.30287194252	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0283498764038	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0314819812775	2
Coq.ssr.ssrbool.subon1	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.986314058304	3
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	0.922664165497	1
Coq.ssr.ssrbool.subon2	40	2	search with cache (only 1: by move  {}=>? ?; auto).	1.12930893898	3
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	9.14.9	search with cache (only 1: intuition; only 1: subst; only 1: auto).	25.4445650578	1404
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	0.605365037918	1
Coq.ssr.ssrbool.canLR_on	40	0	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.475872039795	1
Coq.ssr.ssrbool.canRL_on	40	1	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.418625831604	2
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.413125038147	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.221671104431	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0230982303619	1
Coq.ssr.ssrbool.sub_in_bij	40
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.877241134644	1
Coq.ssr.ssrbool.sub_in2	40	34.28.25	search with cache (only 1: intro; only 1: intro; only 1: by move  {}=>? ?; auto).	10.6491990089	5476
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40	0.15	search with cache (only 1: move  {}=>f0 fP; only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	1.59037709236	108
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  {}=>/= sub1 sub; apply : {}sub_in111 {}).	0.0391490459442	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	16	search with cache (only 1: by move  {}=>eq_fg eq_gh x; rewrite eq_fg).	0.601647853851	111
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0468158721924	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.898055791855	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	1	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0748710632324	2
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.599327087402	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: firstorder).	0.00531196594238	1
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40	3	search with cache (only 1: split).	0.0601119995117	4
Coq.ssr.ssrfun.fsym	40	0.3	search with cache (only 1: intros; only 1: by [  ]).	0.0157880783081	5
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	0	search with cache (only 1: by [  ]).	0.0441870689392	1
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.033262014389	1
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : {}u {}).	0.147099971771	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.0300490856171	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.265548944473	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	1.43841814995	1
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.359138965607	2
Coq.ssr.ssrfun.canLR	40
Coq.ssr.ssrfun.canRL	40	6.11	search with cache (only 1: destruct 2; only 1: intuition).	3.05477905273	145
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	10	search with cache (only 1: by [  ]).	0.834396839142	21
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	2	search with cache (only 1: by move  {}=>eq_fg x).	0.0102820396423	3
Coq.ssr.ssrfun.inj_can_sym	40
Coq.ssr.ssrfun.inj_comp	40
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0	search with cache (only 1: auto).	0.00619387626648	1
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: trivial).	0.00492191314697	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.0070469379425	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00688982009888	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00579905509949	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.3.20.5	search with cache (only 1: intros a n H; only 1: intros EQ; only 1: intros <-; only 1: trivial).	3.77153205872	5596
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.0	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.034912109375	3
Coq.Vectors.VectorSpec.const_nth	40	0.0.6.26	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	0.666791915894	664
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.0.2.0	search with cache (only 1: destruct n; only 1: now simpl; only 1: intros; only 1: trivial).	0.0239570140839	6
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	4.1.2.0.2.14	search with cache (only 1: intros; only 1: induction v; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: trivial).	4.09039020538	4176
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0406360626221	9
Coq.Vectors.VectorSpec.uncons_cons	40	0	search with cache (only 1: now simpl).	0.0157420635223	1
Coq.Vectors.VectorSpec.append_comm_cons	40	1	search with cache (only 1: reflexivity).	0.0389370918274	2
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	2.12.5.3.0	search with cache (only 1: induction n; only 1: easy; only 1: generalize eq_refl; only 1: fix odd_spec 1; only 1: trivial).	28.0452439785	27180
Coq.Vectors.Fin.eqb_eq	40	2.9	search with cache (only 1: fix odd_spec 1; only 1: trivial).	0.688923835754	694
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	4.7.9	search with cache (only 1: intros m n p; only 1: intros <-; only 1: trivial).	1.59120798111	3894
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.0095419883728	1
Coq.Setoids.Setoid.Seq_sym	40	0.1	search with cache (only 1: unfold Setoid_Theory in s; only 1: now symmetry).	0.00986814498901	3
Coq.Setoids.Setoid.Seq_trans	40	2.1.0.0.0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: transitivity y; only 1: symmetry; only 1: symmetry; only 1: assumption; only 1: auto).	0.0264699459076	24
Coq.Setoids.Setoid.gen_st	40	0	search with cache (only 1: CRelationClasses.simpl_crelation).	0.0130159854889	1
Coq.Bool.IfProp.Iftrue_inv	40	3.2.0.3	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.161420822144	162
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.3.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: assumption).	0.0101599693298	9
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.00681591033936	3
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.3	search with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.0759999752045	116
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	4.4	search with cache (only 1: intros; only 1: now subst).	0.0549600124359	10
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0563750267029	3
Coq.Bool.Zerob.zerob_false_intro	40	1.3.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0629439353943	16
Coq.Bool.Zerob.zerob_false_elim	40	3.1.0.5	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: discriminate).	1.0313410759	466
Coq.Bool.DecBool.ifdec_left	40	10.2.0.9.9.6	search with cache (only 1: intro A; only 1: intros; only 1: destruct H; only 1: repeat split; only 1: apply False_rec; only 1: auto).	2.75652194023	21918
Coq.Bool.DecBool.ifdec_right	40	0.10.3.9.0.0	search with cache (only 1: intros; only 1: case H; only 1: intros; only 1: apply False_rec; only 1: auto; only 1: auto).	1.10594201088	7959
Coq.Bool.Sumbool.sumbool_of_bool	40
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.1	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00785803794861	4
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00672698020935	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	1.1.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0261240005493	27
Coq.Bool.Sumbool.sumbool_not	40	0.0.0.0.0.0.1	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.00895500183105	8
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40	2.0.1.6.0.1.2.6.11.10	search with cache (only 1: intro H1; only 1: elim H1; only 1: destruct b2; only 1: auto; only 1: right; only 1: discriminate; only 1: destruct b2; only 1: right; only 1: discriminate; only 1: auto).	6.85223913193	63009
Coq.Bool.Bool.diff_true_false	40	0	search with cache (only 1: discriminate).	0.0113520622253	1
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.0101969242096	1
Coq.Bool.Bool.eq_true_false_abs	40	3.4.10.9	search with cache (only 1: intro H; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.470897912979	3242
Coq.Bool.Bool.not_true_is_false	40	2.5.0	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: trivial).	0.0133991241455	10
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0114119052887	3
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.2	search with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.0301840305328	32
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0156290531158	3
Coq.Bool.Bool.leb_implb	40	1.0.1.0.1.5	search with cache (only 1: intro H1; only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.179507017136	216
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.0124108791351	1
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00921988487244	1
Coq.Bool.Bool.eqb_prop	40	3.0	search with cache (only 1: intuition; only 1: destr_bool).	0.0239100456238	14
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0190789699554	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0334770679474	17
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.0111470222473	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.0112180709839	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00923299789429	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00895500183105	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0113520622253	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00987911224365	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00921297073364	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00911593437195	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.025218963623	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0310218334198	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0325498580933	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0740640163422	38
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0466480255127	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0370221138	5
Coq.Bool.Bool.orb_prop	40	1.1.1.1.1	search with cache (only 1: destruct a, b; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0372939109802	10
Coq.Bool.Bool.orb_true_intro	40	1.3.2.0	search with cache (only 1: destruct b1; only 1: auto; only 1: destr_bool; only 1: intuition).	0.174865961075	144
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.0288579463959	1
Coq.Bool.Bool.orb_false_elim	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct b1; only 1: destruct b2; only 1: repeat split; only 1: assumption; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: simpl; only 1: auto).	0.0589578151703	38
Coq.Bool.Bool.orb_diag	40	1	search with cache (only 1: destr_bool).	0.0273690223694	2
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.0160012245178	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00986814498901	1
Coq.Bool.Bool.orb_false_r	40	0	search with cache (only 1: destr_bool).	0.0100049972534	1
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.0263669490814	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0156779289246	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0117511749268	1
Coq.Bool.Bool.orb_assoc	40	1	search with cache (only 1: destr_bool).	0.0157909393311	2
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0332930088043	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0340089797974	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0162799358368	9
Coq.Bool.Bool.andb_false_intro1	40	0	search with cache (only 1: destr_bool).	0.0192761421204	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0149989128113	3
Coq.Bool.Bool.andb_false_r	40	1	search with cache (only 1: destr_bool).	0.0247530937195	2
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.0214159488678	1
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.0158908367157	1
Coq.Bool.Bool.andb_true_r	40	0	search with cache (only 1: destr_bool).	0.00962495803833	1
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.0136618614197	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0143449306488	5
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0126349925995	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.0117259025574	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0163140296936	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0803868770599	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.016774892807	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0165278911591	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0158460140228	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0121629238129	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.011549949646	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.0106699466705	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.010351896286	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.0195069313049	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.0264201164246	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.0167360305786	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.0453670024872	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.0334930419922	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0287759304047	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0351498126984	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0171167850494	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.01735496521	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0204980373383	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.0118298530579	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0141251087189	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.0123679637909	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0318639278412	6
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.5	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.200183153152	161
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0216391086578	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0115449428558	2
Coq.Bool.Bool.absurd_eq_bool	40	2.2	search with cache (only 1: intros; only 1: intuition).	0.0157749652863	16
Coq.Bool.Bool.absurd_eq_true	40	7.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0117778778076	9
Coq.Bool.Bool.trans_eq_bool	40	0.6.0	search with cache (only 1: intuition; only 1: destruct H; only 1: trivial).	0.0151369571686	9
Coq.Bool.Bool.Is_true_eq_true	40	5.1	search with cache (only 1: destr_bool; only 1: contradiction).	0.0111329555511	8
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00980091094971	1
Coq.Bool.Bool.Is_true_eq_right	40	0	search with cache (only 1: destr_bool).	0.0126118659973	1
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00950503349304	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0160329341888	3
Coq.Bool.Bool.orb_prop_elim	40	3.3.1.0.1.1.1	search with cache (only 1: destr_bool; only 1: right; only 1: assumption; only 1: right; only 1: assumption; only 1: tauto; only 1: tauto).	0.761943101883	2131
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.013524055481	2
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.1.0.0.0.0	search with cache (only 1: destruct b1; only 1: destruct b2; only 1: simpl; only 1: tauto; only 1: tauto; only 1: destruct b2; only 1: tauto; only 1: tauto).	0.0197710990906	9
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0175940990448	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0343108177185	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.1.0.0.1.0	search with cache (only 1: destr_bool; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: auto).	0.0328168869019	9
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0283999443054	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0275621414185	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0272121429443	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.027801990509	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.0167071819305	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00960898399353	1
Coq.Bool.Bool.andb_lazy_alt	40	1	search with cache (only 1: destr_bool).	0.0115048885345	2
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.00814008712769	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	5.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0971009731293	23
Coq.Bool.Bool.reflect_dec	40	0.0.2	search with cache (only 1: destruct 1; only 1: tauto; only 1: tauto).	0.100784778595	35
Coq.Bool.Bool.eqb_spec	40	0.1.1.0.6	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0571517944336	70
Coq.Bool.BoolEq.beq_eq_true	40	1.0.0	search with cache (only 1: intuition; only 1: subst; only 1: auto).	0.0137169361115	4
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	0.1.7.0.0.3.1	search with cache (only 1: simple induction x; only 1: easy; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: auto; only 1: auto).	5.4527220726	4045
Coq.Lists.ListSet.set_mem_correct2	40	4.2.0.0.0.0.1.0	search with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intros H; only 1: intuition).	3.70187807083	2190
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	0.1.7.0.0.0.2.1.1.2	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: left; only 1: now subst; only 1: right; only 1: auto with datatypes).	29.9393229485	24306
Coq.Lists.ListSet.set_add_intro	40	0.0.5	search with cache (only 1: inversion 1; only 1: auto; only 1: auto).	0.158854961395	80
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	1.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	2.0914311409	915
Coq.Lists.ListSet.set_add_not_empty	40	2.7.7.0.0.0.3.4	search with cache (only 1: simple induction x; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: intros; only 1: discriminate).	16.0344390869	13757
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.1.4.0.2.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	1.03765201569	640
Coq.Lists.ListSet.set_union_intro	40	0.0.1	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.35769701004	88
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.2.0.0.0.0.3	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: auto with datatypes).	3.34156608582	1680
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0490810871124	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	10.2	search with cache (only 1: intros; only 1: eauto with datatypes).	5.51004910469	1734
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40	2.0.0.0.7.0.0.0.1	search with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: intuition; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).	22.2992100716	13306
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	0.0.0.1.1.17	search with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	20.251718998	724
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40
Coq.Lists.Streams.tl_nth_tl	40	0.0.1.2.10	search with cache (only 1: induction n; only 1: auto; only 1: intro x; only 1: case x; only 1: trivial).	0.865060091019	1964
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	1.4.0.12	search with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: rewrite <- H; only 1: reflexivity).	10.2664721012	1310
Coq.Lists.Streams.trans_EqSt	40	0.0.1.5.3.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: coinduction ltac:(EqSt_reflex); only 1: reflexivity || destruct H; only 1: case H; only 1: assumption; only 1: assumption).	27.1837699413	7860
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	21.2.6	search with cache (only 1: intros m hypind; only 1: coinduction ltac:(Eq_trans); only 1: auto).	7.87355613708	4474
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.0	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00735211372375	5
Coq.Lists.Streams.Str_nth_map	40	0.1.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.00623917579651	5
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	0.2.0.0.0	search with cache (only 1: simple induction n; only 1: intros [? [? ?]]; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0189318656921	16
Coq.Lists.Streams.Str_nth_zipWith	40	0.1.0.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0118918418884	7
Coq.Lists.List.nil_cons	40	7.1	search with cache (only 1: intro H; only 1: now Nat.nzsimpl).	0.0978951454163	23
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40	4.20.7	search with cache (only 1: intros a b; only 1: fix even_spec 1; only 1: auto).	20.2661240101	13947
Coq.Lists.List.hd_error_some_nil	40	0.0.0.0.1	search with cache (only 1: induction l as [| a tail]; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate).	0.0287761688232	15
Coq.Lists.List.length_zero_iff_nil	40	1.0.2.0.0.0.0.0.0.4	search with cache (only 1: destruct l; only 1: split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: split; only 1: symmetry; only 1: discriminate; only 1: firstorder  discriminate).	1.74699997902	2047
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.0132930278778	1
Coq.Lists.List.hd_error_cons	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0310819149017	2
Coq.Lists.List.in_eq	40	0.1	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.0198838710785	3
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0188939571381	2
Coq.Lists.List.not_in_cons	40	8	search with cache (only 1: RelationClasses.simpl_relation).	0.0714900493622	45
Coq.Lists.List.in_nil	40	0.2.0	search with cache (only 1: simpl; only 1: intros; only 1: tauto).	0.0201389789581	5
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.018061876297	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40	0.0.0.0.17.9	search with cache (only 1: intro H; only 1: destruct H; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate).	3.15315294266	7281
Coq.Lists.List.app_nil_l	40	0.1.0	search with cache (only 1: simpl; only 1: intros; only 1: reflexivity).	0.0174930095673	4
Coq.Lists.List.app_nil_r	40	0.3.5.0.2	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.298263072968	385
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0257580280304	7
Coq.Lists.List.app_assoc	40	1.0.3.0.0.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	0.034264087677	10
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.032702922821	7
Coq.Lists.List.app_comm_cons	40	0.0.0.1.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.0434279441833	7
Coq.Lists.List.app_eq_nil	40	0.0.3.0	search with cache (only 1: destruct l as [| x xs]; only 1: intro H; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.029730796814	7
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	5.0.0.1.3.0.0.18	search with cache (only 1: destruct l as [| x l]; only 1: reflexivity; only 1: simpl; only 1: induction l; only 1: symmetry; only 1: easy; only 1: simpl; only 1: auto).	23.2793931961	16094
Coq.Lists.List.in_app_or	40	1.1.0.2.16	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder  discriminate).	6.18732905388	9362
Coq.Lists.List.in_or_app	40	9.0.4.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: firstorder  discriminate; only 1: simpl; only 1: intuition).	3.32874894142	3315
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0192811489105	2
Coq.Lists.List.nth_default_eq	40	0.4.0.0.0.0.1.0.3.3.0.0.0	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: revert n; only 1: auto).	22.2291169167	22526
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.1.1.0.1.5.6.0	search with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: auto; only 1: intros; only 1: simpl; only 1: apply IHl; only 1: auto with arith).	20.0895950794	25122
Coq.Lists.List.app_nth1	40	0.0.5.1.3.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: induction n as [| n hn]; only 1: auto with arith; only 1: auto with arith).	2.3041009903	1946
Coq.Lists.List.app_nth2	40	0.0.4.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: auto; only 1: trivial; only 1: intros l' d [| n]; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: auto with arith).	2.27659702301	1259
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40	1.8.4.0	search with cache (only 1: revert n; only 1: unfold not; only 1: fix even_spec 1; only 1: auto with arith).	11.7984368801	9524
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	0.0.0.2.2.0.0.1	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.24358010292	522
Coq.Lists.List.nth_error_app2	40	0.0.1.0.0.3.0.1.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: solve [ inversion H ]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	1.93319511414	1270
Coq.Lists.List.nth_error_nth	40	0.0.0.1.0.3.5.2.0.1.5	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: inversion H1; only 1: easy; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto).	22.3361358643	24811
Coq.Lists.List.nth_error_nth'	40	1.1.0.0.0.1.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	0.111767053604	45
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	2	search with cache (only 1: auto).	0.0391540527344	3
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	7.0.4.1	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: auto; only 1: now try Nat.order').	1.0463681221	537
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.15330696106	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.5.2.0.1.15	search with cache (only 1: induction l as [| a0 l IHl]; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite (IHl y); only 1: auto).	10.6380159855	13216
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	0.0.5	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.141386032104	53
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0.0	search with cache (only 1: simpl; only 1: f_equal).	0.0371730327606	2
Coq.Lists.List.concat_cons	40	1.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0331370830536	7
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40	9	search with cache (only 1: decide equality).	0.0827150344849	33
Coq.Lists.List.map_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0286321640015	2
Coq.Lists.List.in_map	40	0.1.5.0.0.0.1	search with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto).	1.6407289505	973
Coq.Lists.List.in_map_iff	40	3.2.1	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.172960996628	36
Coq.Lists.List.map_length	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0475671291351	6
Coq.Lists.List.map_nth	40	1.0.0.0.2.0.0.0.0.1	search with cache (only 1: induction l; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.68440103531	1517
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	1.6.2.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite (IHl y); only 1: auto).	2.54673194885	1912
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	2.0.8	search with cache (only 1: induction l; only 1: auto; only 1: easy).	0.168783187866	134
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.2.1.0.0.5	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.331869125366	189
Coq.Lists.List.concat_map	40	0.3.2.0.0.0.6	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: auto).	2.13474798203	1815
Coq.Lists.List.map_id	40	0.0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.051775932312	8
Coq.Lists.List.map_map	40	0.5.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.371464967728	224
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.0.0.1.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.0428020954132	8
Coq.Lists.List.fold_left_app	40	0.0.0.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0313370227814	5
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.6.2.0.1.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	5.38960909843	3809
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.615602016449	285
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	0.0.0.0.15.0.0.0.15	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	15.9289901257	21794
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40
Coq.Lists.List.find_none	40	2.0.8.0.0.0.0.1	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: easy; only 1: intuition; only 1: congruence).	7.0042309761	3364
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0517101287842	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	2.2.2.1.0.1.0.0.1	search with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: now intros ->).	14.5532059669	8579
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40	0.1.2.2.0.0.0.0.1	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	3.16945099831	1717
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0291409492493	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	10.7002289295	5517
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.0.6.0.3.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct a; only 1: simpl; only 1: destruct (split l); only 1: simpl; only 1: auto).	3.62973284721	3092
Coq.Lists.List.split_length_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0500018596649	9
Coq.Lists.List.split_combine	40	0.2.1.2.0.10.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: destruct a; only 1: simpl; only 1: destruct (split l); only 1: simpl; only 1: f_equal; only 1: auto).	12.5725979805	15432
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.520931959152	313
Coq.Lists.List.combine_nth	40	0.0.1.4.1.0.1.0.0.7.0.0	search with cache (only 1: induction l, l'; only 1: simpl; only 1: intros [| ] ? Heq; only 1: now try Nat.order'; only 1: trivial; only 1: inversion 1; only 1: simpl; only 1: discriminate; only 1: intros [| n] d d'; only 1: auto; only 1: simpl; only 1: auto).	31.2792460918	22759
Coq.Lists.List.in_prod_aux	40	0.2.2.0.0.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto).	0.747748851776	257
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	24	search with cache (only 1: left).	0.342172145844	346
Coq.Lists.List.lel_trans	40	13.5.1	search with cache (only 1: unfold lel; only 1: intros; only 1: Nat.order).	0.864352941513	1213
Coq.Lists.List.lel_cons_cons	40	1.1.0.1	search with cache (only 1: unfold lel; only 1: intros; only 1: simpl; only 1: auto with arith).	0.0871748924255	7
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0524039268494	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0524179935455	3
Coq.Lists.List.lel_nil	40	1.0.0.17.3	search with cache (only 1: unfold lel; only 1: destruct l' as [| y l']; only 1: auto; only 1: simpl; only 1: now auto with arith).	4.81407690048	5614
Coq.Lists.List.incl_refl	40	1	search with cache (only 1: auto).	0.0217759609222	2
Coq.Lists.List.incl_tl	40	9	search with cache (only 1: intuition).	0.0620150566101	21
Coq.Lists.List.incl_tran	40	1	search with cache (only 1: auto).	0.0217049121857	2
Coq.Lists.List.incl_appl	40	3	search with cache (only 1: auto with datatypes).	0.0731091499329	18
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.023491859436	1
Coq.Lists.List.incl_cons	40	0.6.2.1.14.4	search with cache (only 1: intros; only 1: intro y; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto).	9.5879650116	8718
Coq.Lists.List.incl_app	40	9.1.3.3.4	search with cache (only 1: unfold incl; only 1: intros l m a; only 1: elim l; only 1: auto with arith; only 1: firstorder).	21.7573781013	11176
Coq.Lists.List.firstn_nil	40	0.0.0.0.10	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.232520103455	86
Coq.Lists.List.firstn_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.023833990097	2
Coq.Lists.List.firstn_all	40	0.3.0.0.0.17	search with cache (only 1: induction l as [| x l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.528232097626	454
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0.0.0	search with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: auto).	0.0342102050781	3
Coq.Lists.List.firstn_le_length	40	0.1.0.1.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.147263050079	10
Coq.Lists.List.firstn_length_le	40	2.0.0.0.2.1.0.2.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: induction n; only 1: auto; only 1: auto with arith; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	7.31929993629	6039
Coq.Lists.List.firstn_app	40	1.2.0.0.2.2.3	search with cache (only 1: induction n; only 1: auto; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	2.89631509781	1207
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40	0.14	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.790768861771	531
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.0205841064453	1
Coq.Lists.List.skipn_nil	40	0.0.0.2	search with cache (only 1: intros n; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.0299520492554	6
Coq.Lists.List.skipn_cons	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0636818408966	2
Coq.Lists.List.skipn_none	40	0.0.0.0.5	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0637698173523	29
Coq.Lists.List.skipn_all2	40	0.0.1.0.0.0.0.2.0	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	2.68752408028	1275
Coq.Lists.List.firstn_skipn	40	1.3.0.0.0.1.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	2.60316205025	1501
Coq.Lists.List.firstn_length	40	0.0.0.0.3.0.3	search with cache (only 1: induction n; only 1: auto; only 1: induction l; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: auto).	1.06904220581	662
Coq.Lists.List.skipn_length	40	1.0.0.0.0.0.0.0.0.0.8	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	20.8759610653	16389
Coq.Lists.List.skipn_all	40	1.0.0.0.0	search with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0717298984528	6
Coq.Lists.List.skipn_app	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.0538330078125	10
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	2	search with cache (only 1: now intros []).	0.0251638889313	3
Coq.Lists.List.combine_firstn_l	40	0.2.0.2.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l'; only 1: auto; only 1: f_equal; only 1: auto).	2.56365013123	1316
Coq.Lists.List.combine_firstn_r	40	0.0.0.0.0.0.1.1.8.0	search with cache (only 1: induction l as [| x l IHl]; only 1: now intros []; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: simpl; only 1: auto; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	8.16568398476	5503
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	4.2.5	search with cache (only 1: induction 1; only 1: now constructor; only 1: firstorder).	1.98853898048	927
Coq.Lists.List.Add_length	40	0.1.1.0.2	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0691778659821	9
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0306379795074	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0494909286499	4
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	1.2.0.3.0.0.2	search with cache (only 1: induction len; only 1: simpl; only 1: auto; only 1: intros l'; only 1: simpl; only 1: f_equal; only 1: auto).	1.37344408035	781
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	1.3	search with cache (only 1: intuition; only 1: inversion_clear H).	0.0769851207733	14
Coq.Lists.List.Exists_cons	40	3.4.1.0.4.1	search with cache (only 1: split; only 1: inversion_clear 1; only 1: firstorder; only 1: auto; only 1: intro H; only 1: firstorder).	1.74187588692	1080
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.1.2.2.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: firstorder  (subst; auto); only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	2.85011506081	1721
Coq.Lists.List.Forall_inv	40	0.14	search with cache (only 1: inversion 1; only 1: auto).	0.347467899323	260
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40	0.3.0.1.5.0.2.0.1.4.1.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: constructor; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now constructor; only 1: right; only 1: abstract now inversion 1; only 1: right; only 1: abstract now inversion 1).	39.1727728844	23840
Coq.Lists.List.Forall_inv_tail	40	0.2.1	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.065013885498	6
Coq.Lists.List.Exists_impl	40	6.0.9.6.4	search with cache (only 1: intros f g H l; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now apply Exists_cons_tl).	11.912197113	15083
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.112221002579	10
Coq.Lists.List.Forall_Exists_dec	40	3.0.1.0.0.0.1.1.0.2.0.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now apply Exists_cons_tl).	38.1345770359	6390
Coq.Lists.List.Forall_impl	40	0.0.0.0.0.2.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.481938123703	30
Coq.Lists.List.Forall2_refl	40	1	search with cache (only 1: auto).	0.045921087265	2
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	0.0.0.7	search with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto).	0.0865662097931	24
Coq.Lists.List.repeat_spec	40	0.0.2.0.3.2.3	search with cache (only 1: induction n; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto).	0.419706106186	328
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: repeat intro; only 1: auto).	0.0523610115051	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	2.0.2.2.4	search with cache (only 1: induction l; only 1: auto; only 1: intro; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).	4.73033690453	1672
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.0.0.2.2	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: simpl; only 1: auto; only 1: do 2 (etransitivity; try eassumption)).	0.564777135849	126
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	0.0.1.3.1.14	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	0.520404100418	374
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0288619995117	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	1.0.0.0.1.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: constructor; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	0.0595800876617	9
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0257339477539	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	1.0.0.6.0.0.3.0	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor; only 1: trivial; only 1: auto).	5.89332914352	5759
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.1.1	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.0247640609741	10
Coq.Lists.SetoidList.InA_nil	40	4.2.0	search with cache (only 1: split; only 1: inversion 1; only 1: inversion 1).	0.0209548473358	9
Coq.Lists.SetoidList.InA_alt	40	0.0.1.0.0.1.1.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.31759095192	257
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	7.6.7	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: abstract now inversion 1).	0.563591003418	1016
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.1.0.0.1.0	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.0267322063446	9
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	2.7.5.2	search with cache (only 1: intros x y z H; only 1: induction 1; only 1: eauto with *; only 1: auto).	3.82895183563	830
Coq.Lists.SetoidList.In_InA	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.137656927109	6
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	1.1.3	search with cache (only 1: intuition; only 1: invlist InA; only 1: trivial).	0.0481770038605	18
Coq.Lists.SetoidList.InA_double_head	40	1.6	search with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).	0.172580003738	22
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0487401485443	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.8.4	search with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: constructor).	1.36513590813	162
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.3	search with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0349340438843	6
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.6	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0500690937042	9
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.0.5	search with cache (only 1: constructor; only 1: rewrite InA_app_iff; only 1: tauto; only 1: rewrite InA_app_iff; only 1: tauto).	0.273008823395	66
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40	19.2.1.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl in *; only 1: firstorder).	32.1522660255	7394
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	0.0.0.0.0.7.0.1.0.5	search with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).	1.96028518677	1722
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	0.3.0.8.0.0.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: f_equal; only 1: auto).	1.64069008827	1696
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40	0.16.7	search with cache (only 1: intro; only 1: rewrite <- H; only 1: auto).	5.79990911484	995
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	0.0.2.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: apply H; only 1: simpl; only 1: auto).	0.13633108139	8
Coq.Lists.SetoidList.InA_InfA	40	0.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.02015209198	8
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.1.0.2.2.4	search with cache (only 1: intros; only 1: generalize H; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.327039957047	299
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	0.0.0.0.2	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0208969116211	7
Coq.Lists.SetoidList.app_eqlistA_compat	40	1.1.3.6.3	search with cache (only 1: repeat red; only 1: induction 1; only 1: intuition; only 1: simpl; only 1: auto).	5.97617793083	968
Coq.Lists.SetoidList.eqlistA_app	40	1.0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.0187149047852	5
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	0.0.6.1.0.3	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: intuition).	0.814420938492	597
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	1.0	search with cache (only 1: decide equality; only 1: decide equality).	0.0240280628204	3
Coq.NArith.BinNat.N.discr	40	14.0.0.1	search with cache (only 1: destruct n; only 1: auto; only 1: revert p; only 1: eauto with *).	0.329447984695	551
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.00764799118042	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0988690853119	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0172371864319	5
Coq.NArith.BinNat.N.bi_induction	40	3.0.0.4.3	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply Pos.peano_ind; only 1: assumption; only 1: intros; only 1: now apply -> AS).	0.586383104324	925
Coq.NArith.BinNat.N.recursion_wd	40	0.3.14.0.0.0.0.0	search with cache (only 1: intros a a' Ha f f' Hf n n' Hn; only 1: subst n'; only 1: induction n; only 1: simpl; only 1: auto; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	9.08537197113	15790
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.00665616989136	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0106980800629	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: trivial).	0.0107748508453	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.0132830142975	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0129170417786	2
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0208740234375	4
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.2.1.0.0.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: trivial).	4.9700050354	4737
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0105090141296	3
Coq.NArith.BinNat.N.pred_sub	40	0.0.0.0.0.2.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).	0.0217070579529	10
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0141019821167	1
Coq.NArith.BinNat.N.add_0_l	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.021625995636	9
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	1	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0102920532227	2
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.00608515739441	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	5.6.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: auto).	0.443365097046	442
Coq.NArith.BinNat.N.ltb_lt	40	3.0.4.2.1.6	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: destruct m; only 1: rewrite even_spec; only 1: now destruct n as [| [p| p| ]]; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.49027109146	1833
Coq.NArith.BinNat.N.leb_le	40	3.0.6.2.1.3	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: destruct m; only 1: rewrite even_spec; only 1: now destruct n as [| [p| p| ]]; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.58941912651	1740
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	3.0	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.0676290988922	35
Coq.NArith.BinNat.N.compare_le_iff	40	1.2.2.1	search with cache (only 1: revert m; only 1: destruct m; only 1: now destruct n; only 1: reflexivity).	0.0406680107117	32
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0954899787903	59
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	3	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0473649501801	4
Coq.NArith.BinNat.N.succ_double_spec	40	11	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.341627836227	42
Coq.NArith.BinNat.N.double_add	40	0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.73531103134	458
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0143389701843	1
Coq.NArith.BinNat.N.double_mul	40	0	search with cache (only 1: now destruct n, m).	0.0136909484863	1
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	1.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.012558221817	5
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.00717496871948	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	2.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: auto).	0.793275117874	318
Coq.NArith.BinNat.N.double_le_mono	40	1.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.629366874695	227
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0344500541687	11
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0333890914917	9
Coq.NArith.BinNat.N.compare_0_r	40	2	search with cache (only 1: now destruct n).	0.0153272151947	3
Coq.NArith.BinNat.N.pow_0_r	40	1	search with cache (only 1: now nzsimpl').	0.0241191387177	2
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	3.3.6.0.1.0.7	search with cache (only 1: destruct n, p; only 1: intro H; only 1: now nzsimpl; only 1: trivial; only 1: easy; only 1: intro H; only 1: easy).	24.4791710377	16255
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	6.0.0.0.0.3	search with cache (only 1: destruct n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro H; only 1: now destruct p).	5.17232584953	2977
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	4	search with cache (only 1: now destruct n).	0.0734069347382	68
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40	0.0.1.1.0.2.0.2.0.4.2.0.0.3.0.0.0	search with cache (only 1: destruct n; only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m; only 1: destruct p; only 1: split; only 1: now exists (pos p); only 1: easy; only 1: split; only 1: easy; only 1: intros (m, H); only 1: now destruct m; only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m).	33.3987538815	32431
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.1	search with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0264530181885	5
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40	0.0.11.4.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	2.41688489914	2837
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.00865387916565	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	0.0263178348541	7
Coq.NArith.BinNat.N.gcd_divide_r	40	0.0.1.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.0544350147247	20
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	0	search with cache (only 1: apply le_0_l).	0.00689888000488	1
Coq.NArith.BinNat.N.testbit_even_0	40	0.0.50	search with cache (only 1: induction a; only 1: easy; only 1: easy).	1.27722811699	2207
Coq.NArith.BinNat.N.testbit_odd_0	40	2	search with cache (only 1: now destruct a).	0.0163660049438	3
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.1.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.371958017349	196
Coq.NArith.BinNat.N.testbit_neg_r	40	15.4	search with cache (only 1: intros H; only 1: false_hyp H nlt_0_r).	6.42215204239	4079
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.0124979019165	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40	0.6.2.8.0	search with cache (only 1: revert p' n; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	5.31234121323	4355
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.2	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0326759815216	16
Coq.NArith.BinNat.N.lt_gt	40	1	search with cache (only 1: apply gt_lt_iff).	0.0190930366516	11
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	0.8	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0920119285583	44
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00777316093445	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.0.0.1.5	search with cache (only 1: destruct p; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.218788862228	106
Coq.NArith.Ndec.Peqb_complete	40	0	search with cache (only 1: apply Pos.eqb_eq).	0.0782718658447	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.12	search with cache (only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.300958156586	133
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.107893943787	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.108771085739	1
Coq.NArith.Ndec.Neqb_complete	40	3	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.108428001404	11
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	1.3.5.4.2.0.8.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: eqb2eq; only 1: split; only 1: intros <-; only 1: inversion H; only 1: apply Ndouble_plus_one_bit0; only 1: now try N.order').	21.5333409309	16249
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	5.1.1.0	search with cache (only 1: intros Ha Hb; only 1: eqb2eq; only 1: intros <-; only 1: congruence).	0.585653066635	154
Coq.NArith.Ndec.Ndiv2_eq	40	0.1.5.0	search with cache (only 1: intros Ha; only 1: eqb2eq; only 1: subst; only 1: trivial).	0.185014009476	10
Coq.NArith.Ndec.Ndiv2_neq	40	1.0.0.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.12309885025	5
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.3.1.1	search with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.406983137131	37
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	3.0.2.6	search with cache (only 1: rewrite !Nleb_Nle; only 1: intro LT; only 1: intro LE; only 1: N.order).	1.39481782913	590
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.2.3.1.0.0	search with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite !N2Nat.inj_double; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	1.89695310593	734
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	1.0.0.5.3.1.0.0	search with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite !N2Nat.inj_succ_double; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	22.243475914	8321
Coq.NArith.Ndec.Nltb_double_mono_conv	40	0.0.0.5.5.0.0.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: intro; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: now apply leb_complete).	10.0781888962	5167
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	0.0.0.5.6.0.0.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply le_n_S, mult_le_compat_l; only 1: now apply leb_complete).	19.8819189072	9779
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	2	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.330374956131	43
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40	8.17	search with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	4.59066104889	2440
Coq.NArith.Ndec.Nmin_le_2	40	5.1	search with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.172499895096	8
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40	22.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	4.04647302628	2374
Coq.NArith.Ndec.Nmin_le_5	40	7.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.132075071335	13
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.1.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.215032100677	5
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: induction a as [| p]; only 1: intro H; only 1: auto; only 1: intro H; only 1: exfalso; only 1: induction p as [| p IHp| ]; only 1: discriminate || simpl; only 1: discriminate || simpl; only 1: discriminate || simpl).	0.0515379905701	10
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.1.2	search with cache (only 1: simpl; only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0425839424133	23
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.2.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0339548587799	8
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: reflexivity).	0.0120708942413	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.1.0.0.1	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0321190357208	8
Coq.NArith.Ndist.ni_le_refl	40	8.0.11.2.7.10.6.6	search with cache (only 1: simple induction d; only 1: easy; only 1: simple induction n; only 1: apply ni_min_O_l; only 1: intros; only 1: vm_compute; only 1: inversion H; only 1: auto).	37.7421340942	41016
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.0.2.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0593709945679	16
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40	0.22.0	search with cache (only 1: intros * H; only 1: inversion H; only 1: Nat.solve_min).	4.45446610451	3219
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.0.2.0.1	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros [| n]; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.248321056366	97
Coq.NArith.Ndigits.Nshiftr_nat_S	40	3	search with cache (only 1: reflexivity).	0.479027032852	100
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0112228393555	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.1	search with cache (only 1: simpl; only 1: reflexivity).	0.0144839286804	3
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0112090110779	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.0.1.4.0.1.2.0.0.0	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: reflexivity; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	14.1722669601	7454
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.2.0.0.0.0.0.1	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	2.59218502045	899
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	9.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.land_spec).	0.619803190231	239
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.1.0.0.0.0.0.3.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.ldiff; trivial; now rewrite <- IH) || now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).	3.34169816971	991
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	1.1.0.0.0.6.0.0.4	search with cache (only 1: intros [| n]; only 1: trivial; only 1: simpl; only 1: destruct n as [| p| p]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: trivial).	3.62131619453	2012
Coq.NArith.Ndigits.Ndouble_bit0	40	0.2.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: trivial).	0.0235049724579	15
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0282897949219	3
Coq.NArith.Ndigits.Ndiv2_double	40	0.2.0.1.5.0.0.6	search with cache (only 1: destruct n; only 1: reflexivity; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: discriminate; only 1: trivial; only 1: discriminate).	7.86120891571	3669
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.0.1.0.3.0.0.7.0	search with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: intro H; only 1: reflexivity; only 1: intros; only 1: vm_compute in H; only 1: discriminate; only 1: reflexivity).	33.741024971	4621
Coq.NArith.Ndigits.Ndiv2_correct	40
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0267870426178	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	5.86960506439	2692
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	2.57587790489	659
Coq.NArith.Ndigits.Nless_def_3	40	0.0.3.3.0.0.1.0.0.2.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	26.8857119083	10252
Coq.NArith.Ndigits.Nless_def_4	40	0.0.2.4.1.0.3.0.0.3.1	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	23.6378231049	13896
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.2.4.1.17	search with cache (only 1: intros n; only 1: destruct n; only 1: discriminate; only 1: exists p; only 1: auto).	1.48283720016	2147
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40	0.25.12	search with cache (only 1: intros s1; only 1: fix odd_spec 1; only 1: auto).	28.1157779694	25971
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	0.0.0.0.2.1.1.4.1.10	search with cache (only 1: apply Vector.rectS; only 1: simpl; only 1: induction a; only 1: trivial; only 1: trivial; only 1: intros n m s1 s2; only 1: simpl; only 1: case n; only 1: apply Ndouble_plus_one_bit0; only 1: apply Ndouble_bit0).	3.43117594719	3003
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.0.2.0.0.3.10.3.3	search with cache (only 1: destruct a; only 1: auto; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	10.1467149258	6302
Coq.NArith.NArith.test	40	1	search with cache (only 1: N.order).	0.185634851456	17
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	4.0.0.0.0.0	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now subst).	0.0287239551544	10
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	0.1.1.1.1.1.1.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: simpl; only 1: unfold Pos.to_nat; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: simpl; only 1: now rewrite Nat.add_0_r).	2.7308049202	2285
Coq.NArith.Nnat.N2Nat.inj_succ	40	1.0.9.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: rewrite Pos2Nat.inj_succ; only 1: unfold Pos.to_nat; only 1: trivial).	1.37867307663	1889
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.4.0.22	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	1.50942206383	1358
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).	0.0210690498352	6
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0317399501801	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	1	search with cache (only 1: nat2N).	0.0266242027283	2
Coq.NArith.Nnat.Nat2N.inj_pred	40	0	search with cache (only 1: nat2N).	0.0263011455536	1
Coq.NArith.Nnat.Nat2N.inj_add	40	4.0.0.0	search with cache (only 1: destruct n as [| n]; only 1: simpl; only 1: nat2N; only 1: nat2N).	0.139830827713	16
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	search with cache (only 1: nat2N).	0.104816913605	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0177800655365	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.015839099884	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.0226531028748	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0191431045532	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	7.10.3.2	search with cache (only 1: revert m; only 1: induction n; only 1: fix even_spec 1; only 1: destr_bool).	8.17945218086	4372
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, N.eqb_eq).	0.0459990501404	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.109174013138	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.3.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	1.38846898079	249
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	6	search with cache (only 1: t_eqb).	0.225666999817	25
Coq.Strings.String.eqb_eq	40	10	search with cache (only 1: t_eqb).	3.13248491287	627
Coq.Strings.String.eqb_neq	40	1	search with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0808749198914	11
Coq.Strings.String.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.0815029144287	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.0.0.4.4.0.4	search with cache (only 1: elim s; only 1: reflexivity; only 1: intro; only 1: intros n'; only 1: simpl; only 1: intros ->; only 1: reflexivity).	1.43914699554	641
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	10.0.0.6	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: simpl; only 1: apply f_equal, IHs).	2.52277898788	940
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	6	search with cache (only 1: now BinInt.Z.nzsimpl).	0.186357021332	22
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	7	search with cache (only 1: auto).	0.0156319141388	8
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	2	search with cache (only 1: now destruct Hn || easy).	0.0712990760803	3
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40	4.0.0.0	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: destruct H; only 1: firstorder).	0.415354967117	14
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.0.1.4.0	search with cache (only 1: intros; only 1: inversion H; only 1: trivial; only 1: simpl; only 1: auto).	0.190171003342	21
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40	1.20	search with cache (only 1: fix even_odd_double 1; only 1: trivial).	19.5261099339	5647
Coq.Reals.RList.RList_P1	40	0.17.9	search with cache (only 1: intros P H0 H1 H2; only 1: fix ind_0_1_SS 1; only 1: auto with arith).	23.5467038155	8837
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40	1.3.0	search with cache (only 1: fix odd_equiv 1; only 1: intro; only 1: auto with arith).	0.108596086502	7
Coq.Reals.RList.RList_P7	40	2.0.13	search with cache (only 1: fix even_odd_double 1; only 1: intros; only 1: auto with arith).	18.6044209003	4232
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40	0.0.3.1.4.0.1.0.1.4	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: auto with arith; only 1: intro; only 1: reflexivity).	27.2362701893	6794
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.1.0.3.10	search with cache (only 1: intro; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: auto).	17.3034119606	4854
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	2.0.0.1.0.1	search with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.147796869278	10
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	1.2.1	search with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.124831914902	14
Coq.Reals.RList.RList_P22	40
Coq.Reals.RList.RList_P23	40	2.0.3.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intro; only 1: simpl; only 1: auto with real).	2.10172104836	270
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros s1; only 1: elim s1; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	2.6747469902	473
Coq.Reals.RList.RList_P27	40	0.4.0.4.0.0.11	search with cache (only 1: simple induction l1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: elim H; only 1: reflexivity).	21.5130050182	5333
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	5.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.165848016739	23
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	4.3.0.0.0	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: now destruct 1; only 1: now destruct 1).	1.37595105171	457
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40	0.0.0.12.1.7	search with cache (only 1: intros xn cau; only 1: unfold Rmin; only 1: edestruct Rle_dec; only 1: auto with real; only 1: red; only 1: auto with real).	6.66274404526	3836
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.2.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with qarith; only 1: intro H1; only 1: auto with real).	0.0622940063477	17
Coq.Reals.Rbasic_fun.Rmin_left	40	2.0.0.3.1	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto with real).	0.565004110336	87
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0309221744537	5
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.055144071579	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.2.0.0.0.1.7.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: intro H; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	2.60203409195	1437
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	0.0.0.0.0.0.0.3.1	search with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: intros; only 1: assumption; only 1: intro H1; only 1: intros; only 1: assumption).	10.2144320011	2500
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.2.2.0.5	search with cache (only 1: intros r1 r2 r; only 1: intros; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: assumption; only 1: assumption).	13.9000780582	1357
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.0455160140991	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0660450458527	6
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.0.0.0.18.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).	6.23135900497	4626
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.0531260967255	9
Coq.Reals.Rbasic_fun.Rmax_left	40
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.3.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0362200737	7
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0371911525726	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0664460659027	7
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.6.0	search with cache (only 1: intros; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).	0.0765368938446	26
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.2.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.394160032272	65
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	1.1.0.1.0.1.0.3.0	search with cache (only 1: split; only 1: compute; only 1: intros x abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: red; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).	1.37714004517	442
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0.0.2.1	search with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: auto).	0.229228019714	7
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	4.1.0.0	search with cache (only 1: intros; only 1: destruct (total_order_T x y); only 1: intuition; only 1: intuition).	0.292222976685	18
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.1	search with cache (only 1: simpl; only 1: auto).	0.172312021255	3
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0	search with cache (only 1: intro; only 1: reflexivity).	0.138285160065	2
Coq.Reals.Rfunctions.pow_1	40	0.0	search with cache (only 1: intro; only 1: ring_Rsqr).	0.168718099594	2
Coq.Reals.Rfunctions.pow_add	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.248948097229	9
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40	0.2.0.4.1.7.1	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: rewrite Hrecn; only 1: ring).	21.7833390236	6618
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.0.2.0.1.1	search with cache (only 1: intros; only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: ring).	0.915439128876	155
Coq.Reals.Rfunctions.tech_pow_Rplus	40	2.1.0.0.0.2	search with cache (only 1: intros x y n; only 1: induction n; only 1: simpl; only 1: ring_Rsqr; only 1: simpl; only 1: ring).	1.89582896233	285
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	2.0.3.0.0.0.0.0.0	search with cache (only 1: intro n; only 1: case n; only 1: intro; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: auto with real).	6.25904798508	1703
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40	2.3.0.0.0.0.0	search with cache (only 1: intro; only 1: simple induction n; only 1: simpl; only 1: easy; only 1: simpl; only 1: fix even_odd_double 1; only 1: trivial).	4.05785703659	684
Coq.Reals.Rfunctions.pow_le	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	0.471982002258	10
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.0.0.1.0.0.0.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 1 with 1 * 1; only 1: auto with real; only 1: auto with real).	1.96011614799	236
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.0.0.2.0.0.3.1.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: field; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring; only 1: ring).	6.10966515541	1314
Coq.Reals.Rfunctions.pow_Rabs	40	1.4.4.1	search with cache (only 1: intro; only 1: fix even_equiv 1; only 1: intro y; only 1: trivial).	16.2144739628	3450
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	3.1.0	search with cache (only 1: simpl; only 1: intro; only 1: ring_Rsqr).	0.245261192322	7
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40	4.0.0.1.0.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: intro; only 1: discriminate; only 1: simpl; only 1: auto with zarith real).	1.93777608871	558
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.152495861053	1
Coq.Reals.Rfunctions.powerRZ_1	40	1.0.1	search with cache (only 1: simpl; only 1: intro; only 1: ring).	0.354826211929	15
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	1.0.2.0.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	3.27756500244	558
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.25225687027	9
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	0.1.2.1.0.0	search with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: symmetry; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).	0.274539232254	10
Coq.Reals.Rfunctions.powerRZ_ind	40	1.0.23.3	search with cache (only 1: intros x m n H; only 1: fix even_equiv 1; only 1: intros a; only 1: trivial).	12.7713301182	6935
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40	1.7.6.0.0	search with cache (only 1: simple induction n; only 1: simpl; only 1: ring; only 1: fix even_odd_double 1; only 1: trivial).	9.80885982513	2963
Coq.Reals.Rfunctions.sum_f_R0_triangle	40	0.0.5.1	search with cache (only 1: intro; only 1: fix even_equiv 1; only 1: intro n; only 1: auto with real).	0.613132953644	85
Coq.Reals.Rfunctions.R_dist_pos	40	8.4.0	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rabs_pos).	2.53824782372	843
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	4.0.0.0.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: destruct H; only 1: trivial).	0.0357909202576	10
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	3.2.2.1.0	search with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: trivial).	0.527397871017	203
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40	0.0.0.1.0.1.6.3	search with cache (only 1: intros n m H; only 1: pattern m, n; only 1: apply le_elim_rel; only 1: intros; only 1: rewrite <- minus_n_O; only 1: trivial; only 1: auto with real; only 1: auto with real).	2.97195887566	1439
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	1.8	search with cache (only 1: fix even_odd_double 1; only 1: auto).	0.153694152832	59
Coq.Reals.ArithProp.le_double	40	2.3	search with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).	0.693673849106	148
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	1.0.0.1.0.1.0	search with cache (only 1: intro n; only 1: induction n as [| k iHk]; only 1: simpl; only 1: intros a; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.0535180568695	10
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.0.0.0.0	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.182971954346	7
Coq.Reals.DiscrR.IZR_eq	40	0.1.0	search with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.254424095154	4
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.9.0	search with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	3.4606449604	431
Coq.Reals.ConstructiveReals.CReq_sym	40	13.0	search with cache (only 1: intros; only 1: firstorder).	7.66085600853	1252
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	1.1.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.115437030792	8
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	16.4	search with cache (only 1: intros; only 1: firstorder).	0.801363945007	426
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	2	search with cache (only 1: auto).	0.170881032944	41
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40	0.0.0.0.2.1.0.0.0.0	search with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).	23.3226819038	914
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	6	search with cache (only 1: apply CReal_isRingExt).	2.14887404442	178
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	0.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CRealEq_sym; only 1: apply CReal_plus_opp_r; only 1: apply CReal_plus_proper_r; only 1: apply CRealEq_sym; only 1: apply H).	25.5076570511	222
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	5	search with cache (only 1: apply CReal_isRingExt).	28.488191843	241
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.2.0	search with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	13.8693509102	68
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0789752006531	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	1.2	search with cache (only 1: intro; only 1: ring).	2.04562807083	105
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	8.5	search with cache (only 1: intros x y; only 1: ring).	15.2195580006	899
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.103888034821	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	0.2.2	search with cache (only 1: intros [xn limx]; only 1: intros k p q H H0; only 1: auto with arith).	0.298032999039	49
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	18.3	search with cache (only 1: pose proof (CRealLt_aboveSig x 0); only 1: easy).	7.64529681206	2026
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	5.0.3	search with cache (only 1: intros x y z; only 1: intros; only 1: now rewrite H).	10.0448360443	299
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.110674858093	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	0.16.6	search with cache (only 1: intros z t; only 1: unfold Rsqr; only 1: ring).	6.55185604095	3744
Coq.Reals.R_sqr.Rsqr_plus	40	11.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring_Rsqr).	1.01683616638	272
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.154409885406	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	4.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.305800914764	6
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.232359886169	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	0.0.1.8.0.0	search with cache (only 1: intros; only 1: destruct (Rabs_pos x) as [| Heq]; only 1: auto with real; only 1: apply Rabs_no_R0 in H; only 1: symmetry in Heq; only 1: contradiction).	2.35758495331	908
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	3.2.3.0	search with cache (only 1: unfold Rsqr; only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with zarith real).	1.48494195938	198
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.5	search with cache (only 1: intros x y; only 1: ring_Rsqr).	0.609431028366	37
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.310521125793	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: ring_Rsqr).	0.254629850388	7
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	7.0.1.3.0	search with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: auto with zarith real).	11.9859120846	2527
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	1.1.0.2	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: field; only 1: trivial).	1.00082206726	77
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.0.0.0.0	search with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.0794689655304	5
Coq.Reals.Rlimit.eps4	40
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0679471492767	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	1.0	search with cache (only 1: intros; only 1: lra).	0.0468480587006	3
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	15.5	search with cache (only 1: intros P H0 H1 H2; only 1: firstorder).	2.44141793251	1153
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	23.1	search with cache (only 1: intro abs; only 1: eauto with arith).	2.57406187057	1890
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	15.1.0.2	search with cache (only 1: intros n; only 1: red; only 1: simpl; only 1: now destruct n).	8.9342341423	3935
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	5.99146795273	2241
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.5	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.103192806244	30
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.2.0.2.5	search with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	4.75752711296	284
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	1.1.1.1.1	search with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.127063035965	25
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	0.6.6.0.3.0	search with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: apply H0; only 1: intro abs; only 1: destruct H as [p H]; only 1: contradiction).	1.61317920685	1026
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	7	search with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.243013143539	67
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	4.54689192772	822
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	4	search with cache (only 1: auto).	0.11955499649	5
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	1.3.0	search with cache (only 1: simpl; only 1: intros (a, b) (c, d); only 1: auto).	0.112255096436	7
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	4	search with cache (only 1: assumption).	0.0700070858002	5
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.0.0.0	search with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.126214981079	4
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	0.18613910675	10
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	4.1.2	search with cache (only 1: apply (CReal_plus_eq_reg_l 0); only 1: apply (CReal_plus_eq_reg_l 0); only 1: reflexivity).	0.155390977859	14
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: intuition_in).	0.0234949588776	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	0.0	search with cache (only 1: unfold empty, Empty; only 1: auto).	0.0238828659058	2
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.0.0	search with cache (only 1: unfold create; only 1: intros; only 1: auto).	0.0616769790649	3
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	1.0	search with cache (only 1: unfold create; only 1: auto).	0.0528202056885	3
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40	1.0.0.0.0.0.0.2.0.0.0.0.0.0.0	search with cache (only 1: intros m1 m2; only 1: functional induction merge m1 m2; only 1: intros; only 1: auto; only 1: intros; only 1: auto; only 1: intros; only 1: generalize (remove_min_avl_1 H0); only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	39.5151679516	6072
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.0.0.2	search with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: auto).	0.144583940506	6
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0686349868774	5
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	0.5.1.6	search with cache (only 1: intros m; only 1: intro; only 1: intro abs; only 1: inversion abs).	0.745148897171	198
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40
Coq.FSets.FMapFullAVL.IntMake.find_2	40	0.10.2.3.0	search with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intuition; only 1: apply find_2; only 1: auto).	1.62604093552	1007
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	1.2.2.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).	0.127785921097	11
Coq.FSets.FMapFullAVL.IntMake.elements_3	40	12.8.0.1.2.1.1.2	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros x e0 y0 H H6; only 1: inversion_clear H).	9.29644703865	5290
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	1.2.2.0	search with cache (only 1: intros m; only 1: unfold elements, MapsTo, eq_key_elt; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0652079582214	9
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0401711463928	1
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.5.3.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	3.82453489304	1265
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0561580657959	2
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.1	search with cache (only 1: intros; only 1: intuition).	0.0551738739014	3
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40	0.0.0.8	search with cache (only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	0.667704820633	194
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40	0.2.4.0.2.4.28.1	search with cache (only 1: induction 1; only 1: eauto with *; only 1: firstorder; only 1: exists x; only 1: auto; only 1: firstorder; only 1: exists x; only 1: auto).	7.1935710907	10884
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.3.2.7.0	search with cache (only 1: induction m; only 1: intros x y H; only 1: inversion 1; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	3.29920387268	1109
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	1.3.1	search with cache (only 1: split; only 1: intuition_in; only 1: intuition).	0.281715154648	14
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	29.5	search with cache (only 1: intros n; only 1: easy).	5.90267491341	4522
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.12.3	search with cache (only 1: intros; only 1: intros sorted belong1; only 1: intuition_in).	0.803112983704	350
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	4.6.15	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: L.MX.order).	11.5632328987	2488
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.0.14.1	search with cache (only 1: intuition_in; only 1: inversion_clear 1; only 1: order; only 1: auto; only 1: auto).	17.5400600433	539
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0	search with cache (only 1: intuition_in).	0.0952689647675	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0806889533997	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0	search with cache (only 1: intuition_in).	0.0669279098511	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0939610004425	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40	1.17.1	search with cache (only 1: intuition; only 1: apply (StrictOrder_Irreflexive x); only 1: auto with ordered_type).	4.74037194252	2210
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	2.0.2.0	search with cache (only 1: intros x y; only 1: induction m; only 1: auto with ordered_type; only 1: eauto with ordered_type).	0.450042963028	15
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.100260019302	4
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.102739095688	1
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	2	search with cache (only 1: now left || now right).	0.111680030823	3
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	3.1.9.0	search with cache (only 1: unfold empty; only 1: intros m x y; only 1: eapply L.PX.MO.OrderTac.lt_irrefl; only 1: intuition_in).	5.07904911041	363
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	2.0.0.0.3.0.1	search with cache (only 1: destruct m as [| r x e l h]; only 1: simpl; only 1: intros; only 1: unfold empty, Empty; only 1: intuition_in; only 1: simpl; only 1: easy).	2.6531829834	709
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	0.0.0.1.1.0.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: intros; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	0.102238893509	9
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40	0.0.4.4.0.0.4.1.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: auto).	25.4664800167	8800
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	1.1.1.2.0.1	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: now destruct 1; only 1: auto; only 1: auto; only 1: auto).	0.587834835052	182
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	0.0.0.0.10.7	search with cache (only 1: intros m x y; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	8.81936192513	4347
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	0.3	search with cache (only 1: unfold create; only 1: intuition_in).	0.685491085052	36
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.0.0.0	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.238286972046	5
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40	0.0.2.2.6.26	search with cache (only 1: red; only 1: intros m; only 1: simpl; only 1: case m; only 1: auto; only 1: auto).	2.52518010139	2339
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	0.3.3.5	search with cache (only 1: simpl; only 1: induction 1; only 1: red; only 1: auto).	4.21693515778	922
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	2.0.1.0.6	search with cache (only 1: intros m x y; only 1: induction m; only 1: inversion 1; only 1: simpl; only 1: intuition_in).	1.4587290287	308
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	0.0.0.2.0.5.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	3.6813750267	1177
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.270090818405	8
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	1.3.1.8	search with cache (only 1: intros m; only 1: intro; only 1: intro abs; only 1: inversion abs).	0.597399950027	159
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40
Coq.FSets.FMapAVL.IntMake.find_2	40	0.4.3.3.1	search with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intuition; only 1: apply find_2; only 1: auto).	1.31905698776	481
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	1.6.2.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).	1.23748517036	245
Coq.FSets.FMapAVL.IntMake.elements_3	40	13.0.1.2.1.20.2	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: inversion 1).	7.72684597969	3904
Coq.FSets.FMapAVL.IntMake.elements_3w	40	1.8.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.253988981247	66
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.147742986679	1
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	0.0.0.0.5.0.1.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	2.42009305954	750
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40	4.5.5.16.2.23	search with cache (only 1: intros x y; only 1: intuition; only 1: destruct x; only 1: LO.cmp_solve; only 1: LO.cmp_solve; only 1: LO.cmp_solve).	38.6843099594	18428
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.3.0.6.0	search with cache (only 1: destruct e2; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	1.03309607506	253
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	3.1	search with cache (only 1: intros; only 1: intuition).	0.193722009659	6
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	3.2	search with cache (only 1: intros; only 1: intuition).	0.208303928375	7
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	2.1	search with cache (only 1: symmetry; only 1: intuition).	0.227667808533	5
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40	5.39	search with cache (only 1: Ndec.eqb2eq; only 1: intuition).	12.6528351307	15531
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	4	search with cache (only 1: intuition).	0.159605979919	19
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	7	search with cache (only 1: intuition).	0.155376911163	17
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	6	search with cache (only 1: intuition).	0.139915943146	16
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	3.3.0	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.213019132614	9
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40	1.1.13.0.4.3	search with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: destruct 1; only 1: auto; only 1: intros n; only 1: intuition; only 1: exact (add_3 E H)).	11.3115019798	7385
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	0.1.2	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.139681100845	23
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	1	search with cache (only 1: intuition).	0.189522027969	24
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	0	search with cache (only 1: intuition).	0.235616207123	1
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	3	search with cache (only 1: intuition).	0.290751934052	16
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	1	search with cache (only 1: intuition).	0.422540903091	11
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40	0.0.0.0.0.0.0.1.1	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.60786485672	139
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	0.4.13.0.1.1	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: red; only 1: intros x y z; only 1: eauto).	1.52845978737	1778
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40	0.2.0.2.2.4.17	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: rewrite (Hll' x); only 1: split; only 1: apply In_1; only 1: auto; only 1: apply In_1; only 1: auto).	33.1213309765	12387
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.0.4.3	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: trivial).	0.168737888336	51
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.1.3.4	search with cache (only 1: intros; only 1: red; only 1: intros y LT; only 1: auto).	0.250117063522	56
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	1.8.0.4.0.0.3	search with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: generalize (mem_iff s x), (mem_iff s' y); only 1: intuition; only 1: red; only 1: intuition).	27.385751009	4751
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	3.6.8.17	search with cache (only 1: intros n1 m1 H; only 1: red; only 1: unfold Empty; only 1: eauto).	21.8681259155	12570
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.0.1.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.321276903152	6
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	4.5.2.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	3.20161795616	670
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.2.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.514172077179	15
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.3.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.231512069702	12
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	7.8.5	search with cache (only 1: intros; only 1: inversion H; only 1: now subst).	20.0224869251	6362
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.0.5.1	search with cache (only 1: intros; only 1: constructor; only 1: trivial; only 1: trivial).	0.183325052261	40
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	6.2	search with cache (only 1: intros y z H1 H2; only 1: now subst).	0.146311044693	30
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	6.0.0.1.20.6	search with cache (only 1: intros x y z; only 1: unfold eq, Equal; only 1: intro H; only 1: symmetry; only 1: symmetry; only 1: now etransitivity).	36.1829609871	23029
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	4.1	search with cache (only 1: intros; only 1: auto).	0.143645048141	7
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.133388996124	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.0	search with cache (only 1: intros n; only 1: now destruct n).	0.130920171738	2
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	16	search with cache (only 1: discriminate).	0.116660118103	108
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	4.28	search with cache (only 1: fix odd_spec 1; only 1: eassumption).	22.6055729389	11900
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.108062028885	3
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	10.0	search with cache (only 1: intros n; only 1: easy).	0.144913911819	57
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.1.2.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).	0.257757902145	8
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	1.0.0.1.1.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.287268877029	10
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	26	search with cache (only 1: destr_bool).	0.941790819168	728
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	2.0.0.1.0.1.10.1.2	search with cache (only 1: intros n m; only 1: split; only 1: case n; only 1: firstorder; only 1: intros; only 1: discriminate; only 1: easy || now destruct 1; only 1: intros (EQ, EQ'); only 1: now subst).	9.49398994446	5616
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.7	search with cache (only 1: destr_bool; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	1.05919885635	299
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40	13.18.10.5	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	9.28348684311	11897
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.106377840042	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	0.0.0.3	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.138931035995	7
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0978529453278	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0858790874481	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.117314815521	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.31	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).	5.08516407013	4819
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	0.0.8.4	search with cache (only 1: intros; only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: trivial).	0.375231027603	236
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	3.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with arith).	0.206699132919	13
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	2.3.0	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.09117603302	8
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.25.6	search with cache (only 1: intros a b c; only 1: rewrite remove_spec; only 1: tauto).	18.1927580833	11299
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.195119857788	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.3.0.1.0.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: right; only 1: assumption).	0.394356012344	27
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.113596916199	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.6	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.156567811966	27
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.1.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.110867023468	4
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.1.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.151834011078	4
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.1.5.10	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	8.94506716728	3603
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.1.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.133846998215	5
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.11857509613	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.2.2.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.113636016846	8
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	1.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0946891307831	4
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40	0.0.6.1.5.1.10.6	search with cache (only 1: vm_compute; only 1: induction x; only 1: intro H; only 1: congruence; only 1: intro H; only 1: congruence; only 1: intros; only 1: f_equal).	25.2786130905	15154
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	0.0.3.0.4.0.22.1	search with cache (only 1: intros; only 1: induction i; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: auto).	2.88453483582	4546
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.1.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	0.137934923172	9
Coq.FSets.FMapPositive.PositiveMap.gempty	40	12	search with cache (only 1: now intros []).	0.288089990616	85
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.142895936966	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.166529893875	7
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: induction m; only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: destruct i; only 1: auto; only 1: auto; only 1: reflexivity).	2.59456205368	507
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	10	search with cache (only 1: congruence).	0.225724935532	31
Coq.FSets.FMapPositive.PositiveMap.find_1	40	0.2	search with cache (only 1: intros; only 1: auto).	0.0919840335846	4
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.201938867569	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	2.1	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.12775683403	5
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.0.9.6.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	4.22589707375	1847
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	1.0.0.0.0.2.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: unfold map; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: discriminate).	8.25813913345	2083
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	22.9107370377	7557
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.210515975952	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	0.0.6	search with cache (only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.17576789856	33
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	1.1.3	search with cache (only 1: intros; only 1: symmetry; only 1: intuition).	0.101881980896	8
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	1.4	search with cache (only 1: intros; only 1: intuition).	0.0992739200592	17
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.27.0.3	search with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	14.1744868755	12070
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	6	search with cache (only 1: intuition).	0.123450994492	29
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.2.0.1	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.151654005051	23
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40	0.0.0.1.1.0.0.2.1.4.0.1	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	9.24414515495	4586
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	0.0.7.1	search with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.972779035568	210
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40	0.0.0.1.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	1.93582510948	520
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40	3.1.5.4.0.0.0.5	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff; only 1: intuition; only 1: rewrite empty_mapsto_iff in H; only 1: intuition; only 1: discriminate).	24.7980890274	11630
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	0.2	search with cache (only 1: intros; only 1: auto with map).	0.156112909317	4
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	0.0.0.0.2.0.9.4.2	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).	14.5260658264	2833
Coq.FSets.FMapFacts.WFacts_fun.add_o	40	0.0.0.0.0.0.15.2	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	22.0402882099	7520
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).	0.129226207733	10
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.0.0.1.0.1	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; only 1: now intuition; only 1: auto).	0.185548067093	16
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40	0.0.0.0.0.1.1.1.5.0.0	search with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: simpl; only 1: auto; only 1: auto; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	9.84642100334	2841
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0	search with cache (only 1: split).	0.115333080292	1
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.0.1.0	search with cache (only 1: intros m1 m2; only 1: dintuition; only 1: intro k; only 1: auto with map).	0.216862916946	25
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	2.7.4.0	search with cache (only 1: unfold Equal; only 1: intuition; only 1: rewrite H; only 1: auto).	11.4110078812	2452
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.6.0.0	search with cache (only 1: split; only 1: split; only 1: congruence; only 1: congruence).	0.250221014023	36
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40	0.0.4.0.0.4.0.6.2	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite Equal_mapsto_iff; only 1: split; only 1: rewrite <- H; only 1: apply MapsTo_1; only 1: auto; only 1: rewrite <- H; only 1: apply MapsTo_1; only 1: auto).	22.991563797	10893
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.2.0.2.0	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	1.14524292946	19
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	1.0.0.0.1.1	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.244405984879	36
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40	0.0.0.0.0.15	search with cache (only 1: intro; only 1: rewrite cardinal_1, elements_Empty; only 1: destruct (elements m); only 1: intuition; only 1: intuition; only 1: discriminate).	1.34365797043	577
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	1.4.14	search with cache (only 1: intro; only 1: rewrite <- cardinal_Empty; only 1: auto with map).	7.0371670723	2767
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	0.0.1.0.0.1.0.8.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	6.1588768959	2873
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40	8	search with cache (only 1: firstorder).	0.388145923615	58
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	8	search with cache (only 1: firstorder).	0.206764936447	29
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40	12	search with cache (only 1: firstorder).	1.23849010468	155
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.129611968994	10
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40	0.0.0.0.0.1.0.1.0.0.1.2	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_mapsto_iff; only 1: induction (elements m); only 1: discriminate; only 1: destruct a; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type).	6.80406117439	1763
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40	1.1.0.0.1.4.0	search with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_Empty; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).	8.14081406593	1628
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	3	search with cache (only 1: inversion_clear 1).	0.0202848911285	4
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	0.4	search with cache (only 1: unfold Empty, empty; only 1: eauto).	0.0466248989105	6
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	0.1.0.0.0.4	search with cache (only 1: unfold Empty, empty; only 1: intros m; only 1: case m; only 1: auto; only 1: intros p l inlist; only 1: intuition).	0.390857934952	145
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	4.07926893234	871
Coq.FSets.FMapWeakList.Raw.remove_3'	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.138190984726	10
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0.1	search with cache (only 1: intros m Hm x y; only 1: auto).	0.0477480888367	3
Coq.FSets.FMapWeakList.Raw.elements_2	40	0.1.0.0.0.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: auto; only 1: auto; only 1: intros e' eqfind; only 1: auto).	0.0838940143585	7
Coq.FSets.FMapWeakList.Raw.elements_3w	40	3.0.0.0.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).	0.0955550670624	12
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	1.2.3	search with cache (only 1: repeat red; only 1: intros a e; only 1: inversion 1).	0.0856609344482	34
Coq.FSets.FMapWeakList.Make.is_empty_1	40	1.1.36	search with cache (only 1: fix odd_spec 1; only 1: intros m; only 1: auto).	9.75499892235	6382
Coq.FSets.FMapWeakList.Make.is_empty_2	40	1.3.16.7.0.0	search with cache (only 1: intros m; only 1: case m; only 1: intros p l abs; only 1: destruct p; only 1: exact (Raw.empty_1 (elt:=elt)); only 1: inversion abs).	3.04868388176	3389
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0596849918365	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0633261203766	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	0.31	search with cache (only 1: induction m; only 1: auto).	0.994290113449	1630
Coq.FSets.FMapWeakList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0570819377899	1
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	4.0.0.0	search with cache (only 1: intros; only 1: split; only 1: Dec.fsetdec; only 1: auto with fset).	0.146484136581	8
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	2.0.1.0	search with cache (only 1: intros; only 1: generalize (union_inter_cardinal s s'); only 1: intros; only 1: intuition).	0.119058132172	7
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	11.3	search with cache (only 1: compute; only 1: firstorder).	8.85642790794	1733
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	9.24	search with cache (only 1: vm_compute; only 1: intuition Dec.fsetdec).	3.48247504234	1196
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.0.6.2.1	search with cache (only 1: red; only 1: intuition; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec).	1.87792801857	411
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	3.3.4	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	1.21744894981	230
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	3.62636590004	476
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	2.0.0.0.1.0.2.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	8.74762606621	1709
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.16227388382	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	3.3	search with cache (only 1: intros; only 1: auto with set).	0.160305976868	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.141054868698	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	0.0	search with cache (only 1: apply mem_1; only 1: Dec.fsetdec).	0.112823963165	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.323930025101	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.243647813797	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.215079069138	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.101561069489	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0993499755859	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.236238956451	24
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	1	search with cache (only 1: auto with set).	0.123147010803	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40	2.6.0.2.6.0.0.0	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	22.64281106	5961
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	0.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.12393283844	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	0.1.3	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.186256170273	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	1	search with cache (only 1: auto with set).	0.112465143204	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	7.0	search with cache (only 1: intros; only 1: auto with set).	0.260272026062	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40	9.0.0.0.2.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros a; only 1: do 2 rewrite mem_iff; only 1: eauto with set).	8.66201090813	1483
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	3.0	search with cache (only 1: intros; only 1: auto with set).	0.109101057053	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.13068985939	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0915248394012	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	0.7	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: apply remove_3).	0.180759906769	22
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	1.2.0.8.0.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: split; only 1: apply subset_2; only 1: auto with set; only 1: Dec.fsetdec).	7.05581617355	738
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.0874218940735	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.109858989716	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	0.0.0.4	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.294585943222	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	2	search with cache (only 1: auto with set).	0.0717439651489	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.12189912796	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.141858100891	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.127017974854	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.144653081894	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.12851190567	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.121516942978	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	1	search with cache (only 1: auto with set).	0.119799852371	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.120452880859	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.459332942963	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0	search with cache (only 1: auto with set).	0.130739927292	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.141084909439	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.138438940048	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0920639038086	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0884919166565	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0920810699463	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0909059047699	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.103623151779	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.130155086517	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.126795053482	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	3.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.264352083206	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0	search with cache (only 1: auto with set).	0.092875957489	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0797710418701	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0814340114594	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.069118976593	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.127612113953	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.102238178253	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40	0.0.0.0.9.7	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	3.20357704163	1135
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.141708135605	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.141630887985	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	4	search with cache (only 1: auto with set fset).	0.0926887989044	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.140532970428	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.22269320488	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.211694955826	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	5.0.3.0.4.2	search with cache (only 1: intros; only 1: generalize (union_inter_cardinal s s'); only 1: intros; only 1: generalize (union_inter_cardinal s s'); only 1: intros; only 1: auto with *).	3.74305891991	1289
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	7	search with cache (only 1: solve_proper).	0.309556007385	18
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto with set).	0.14648103714	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.114628076553	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	2.0.0.1.0.0.2	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).	0.752897977829	141
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40	0.2.4.0.2.0	search with cache (only 1: intros; only 1: apply filter_2 with s; only 1: auto; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	1.60412096977	450
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.0.0.9	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.20720410347	50
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	17.2	search with cache (only 1: simpl; only 1: eauto with set).	0.598771095276	1121
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	35.1	search with cache (only 1: simpl; only 1: eauto with set).	6.46543717384	11426
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.1.0.3.2.0	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	0.194043159485	225
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.5.0.3	search with cache (only 1: unfold subset; only 1: intros s s'; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	2.30042600632	1518
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.8.0.2.7.0	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: easy; only 1: auto).	3.91032409668	4712
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.0.1	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0202209949493	14
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.3.0	search with cache (only 1: unfold elements; only 1: intros; only 1: case (M.elements s); only 1: firstorder).	0.0308229923248	14
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3.0	search with cache (only 1: intros; only 1: firstorder).	0.136066913605	80
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.1.3.5.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	3.43002891541	850
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.2.0	search with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	11.8586530685	1261
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0332951545715	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.7.4	search with cache (only 1: intros s x y; only 1: intro H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	1.2669570446	812
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.2.1	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.059280872345	38
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0170571804047	4
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.1	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.042918920517	21
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0173599720001	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.018030166626	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.1.1.0.1.1	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.union s s'); only 1: firstorder; only 1: case (M.inter s s'); only 1: firstorder).	0.0279622077942	10
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.2.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0183351039886	6
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.2.0.0.1.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder).	0.0413489341736	12
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	21	search with cache (only 1: decide equality).	1.6537899971	849
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	24.4.4.1	search with cache (only 1: intros; only 1: intro s; only 1: intros; only 1: now rewrite H).	6.63631391525	11347
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	1.1.0.0.0.3	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.868335962296	235
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.186453104019	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	1.1.1.4.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case (M.elements s); only 1: case M.for_all; only 1: intuition; only 1: firstorder).	3.86951994896	713
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0387887954712	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	18	search with cache (only 1: solve_proper).	3.40182113647	1652
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40	4.1.1	search with cache (only 1: intuition; only 1: red; only 1: intuition).	0.0469400882721	23
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	7.1.1	search with cache (only 1: intuition; only 1: red; only 1: eauto with set).	0.207365036011	147
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.258373022079	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	1.1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: split; only 1: fsetdec; only 1: fsetdec).	0.279304981232	7
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	0	search with cache (only 1: fsetdec).	0.122054100037	1
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	0	search with cache (only 1: fsetdec).	0.196493864059	1
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	0.1.0	search with cache (only 1: red; only 1: intros y LT; only 1: auto).	0.101858139038	4
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.217276096344	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.263371944427	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.162786960602	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	6.1.0	search with cache (only 1: red; only 1: intros y LT; only 1: fsetdec).	0.175734043121	17
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.163938999176	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.25009894371	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.247674942017	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.152117013931	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.14310503006	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.2.2.1	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.74015712738	79
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.225198030472	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.159302949905	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	0	search with cache (only 1: fsetdec).	0.181086063385	1
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	1.3.0	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.441727876663	7
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	1	search with cache (only 1: fsetdec).	0.338856935501	26
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.286972999573	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.295015096664	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.289835929871	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.252945899963	1
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.506057024002	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	0	search with cache (only 1: fsetdec).	0.255815982819	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.190747022629	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.232502937317	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.294642210007	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.354664087296	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.2796459198	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.422112941742	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.551943063736	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.53965306282	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.158859014511	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.145328044891	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.16426897049	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.239567995071	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.169250965118	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.282675981522	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.176725149155	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	4	search with cache (only 1: fsetdec).	0.480529069901	26
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0	search with cache (only 1: fsetdec).	0.249719142914	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.248486995697	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.315608978271	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.349705219269	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.432582855225	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.408476114273	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.436631917953	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.292532920837	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.255238056183	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.360199928284	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.304126024246	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.218586206436	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.400040864944	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.260811090469	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.211605072021	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.188751935959	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.210263967514	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.357290029526	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.319571971893	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.37639093399	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.405421972275	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	2.4.1	search with cache (only 1: split; only 1: fsetdec; only 1: intuition).	0.311013936996	26
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	0.18	search with cache (only 1: expAdd; only 1: fsetdec).	4.47000193596	564
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.451647043228	4
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.616517782211	3
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.782995939255	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.754827976227	50
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	1.2.0.1.1	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intro x; only 1: auto; only 1: auto).	0.302287101746	33
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40	5.0.3.0.1.1	search with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: reflexivity; only 1: intros; only 1: fsetdec).	1.85416293144	540
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.0.0.6.1	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: exact eq_equivalence; only 1: auto with *).	0.817775011063	134
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	1.3.30.0	search with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: auto with set).	12.7060461044	7609
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	0.0.0.0.0.4.7.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	24.2056798935	5508
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.117037057877	3
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.12.0.3.10.3.1.1	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: intros; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	10.7648949623	11769
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.1.0.1	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.167535066605	6
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	3.7.1	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	1.90729498863	208
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	1.11	search with cache (only 1: intro H2; only 1: intuition).	2.22410297394	728
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.1.0.1.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: expAdd; only 1: fsetdec).	0.286027908325	7
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	1.1.0.0.0.1.0.0.8	search with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: auto with set).	20.3727140427	8371
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	2	search with cache (only 1: auto with set fset).	0.2744140625	44
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.15869808197	3
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.121934890747	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.21157002449	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.447158098221	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto).	0.148640155792	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	5.0	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: fsetdec).	0.537178993225	25
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.277882099152	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.615498065948	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	6.1	search with cache (only 1: intro; only 1: intuition).	0.241708040237	18
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.154285907745	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	5.3	search with cache (only 1: unfold Subset, Empty, impl; only 1: fsetdec).	0.404539823532	61
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.207504987717	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.402750968933	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.401489019394	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.193665981293	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.455513000488	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.610332012177	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.1.1	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.177249908447	5
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	6.2	search with cache (only 1: firstorder; only 1: fsetdec).	0.437816858292	26
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	1	search with cache (only 1: fsetdec).	0.16993689537	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.129613876343	1
Coq.FSets.FMapList.Raw.empty_1	40	4.2	search with cache (only 1: repeat red; only 1: inversion 1).	0.0160977840424	8
Coq.FSets.FMapList.Raw.empty_sorted	40	1	search with cache (only 1: constructor).	0.00931692123413	2
Coq.FSets.FMapList.Raw.is_empty_1	40	1.28	search with cache (only 1: fix odd_spec 1; only 1: solve [ auto ]).	10.9532289505	1646
Coq.FSets.FMapList.Raw.is_empty_2	40	2.1.0.0.0.5	search with cache (only 1: unfold Empty, empty; only 1: intros m; only 1: case m; only 1: auto; only 1: intros (k, e) l inlist; only 1: intuition).	1.23671412468	631
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40	0.2.0.0.2.0.0.1.1.1.0	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: inversion_clear Hm; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: simpl; only 1: case (X.compare x x''); only 1: intuition; only 1: eauto with ordered_type; only 1: intuition).	35.8589808941	9067
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.0.1.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: intuition).	2.80015206337	888
Coq.FSets.FMapList.Raw.elements_1	40	2.1	search with cache (only 1: intros; only 1: auto).	0.0128259658813	5
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00785517692566	1
Coq.FSets.FMapList.Raw.elements_3	40	1.0.0.0.1	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.0268700122833	7
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	4.1.0.1.0.8	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: simpl; only 1: intuition).	18.2035188675	2862
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.2.0.0.2.0.0.0	search with cache (only 1: intros m x e f; only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: simpl; only 1: auto).	0.652414798737	303
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.2.0.0.2.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear H; only 1: simpl; only 1: auto).	2.29227185249	991
Coq.FSets.FMapList.Raw.mapi_sorted	40	0.0.0.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	0.679677009583	138
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	0.2.2.2	search with cache (only 1: intros m; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.0494310855865	20
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.00853705406189	1
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0124878883362	2
Coq.FSets.FMapList.Make.elements_3	40	0.9	search with cache (only 1: induction m; only 1: auto).	0.0303170681	36
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	1	search with cache (only 1: auto).	0.00902199745178	2
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	4.6.0	search with cache (only 1: intros m; only 1: fix odd_spec 1; only 1: auto).	0.330003976822	295
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	1.0.3.2	search with cache (only 1: intro H1; only 1: intro H; only 1: split; only 1: auto with sets).	0.0297429561615	10
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	0.7.0	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.0686240196228	10
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	1.1.6.6	search with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.0617260932922	250
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	3.3	search with cache (only 1: red; only 1: auto with sets).	0.00628399848938	8
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	1.9.0.9	search with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	2.62435913086	2522
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	0	search with cache (only 1: now induction d).	0.0250289440155	1
Coq.Numbers.DecimalFacts.norm_invol	40	1.1.18	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	0.297131061554	277
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.0.0.0.0.0.0.0.0.23	search with cache (only 1: destruct n, p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: auto).	33.1552360058	6084
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	search with cache (only 1: apply of_lu_double_gen).	0.120788097382	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	16	search with cache (only 1: now induction d).	25.6070649624	7650
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0	search with cache (only 1: auto with arith).	0.165601015091	1
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0948920249939	2
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.115901947021	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40	9.4.7.6.8	search with cache (only 1: induction d; only 1: unfold Pos.to_int, Pos.of_int, norm; only 1: now induction d; only 1: unfold Pos.to_int, Pos.of_int, norm; only 1: now destruct nzhead).	15.7956039906	8736
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	3	search with cache (only 1: trivial).	0.0113441944122	4
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	36	search with cache (only 1: now induction d).	4.20620203018	1526
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	0.0.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	3.30517292023	1132
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.0.1.1.3.0	search with cache (only 1: exists (Nat.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: f_equal; only 1: unfold Nat.of_uint; only 1: now induction d).	0.198458909988	57
Coq.Numbers.DecimalNat.Signed.of_int_norm	40	2.5.0.0.2.3.8	search with cache (only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: destruct d; only 1: f_equal; only 1: unfold Nat.of_uint; only 1: now induction d; only 1: unfold Nat.of_uint; only 1: now induction d).	2.66455698013	1343
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	search with cache (only 1: now induction d).	0.0274529457092	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0421209335327	3
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.0.0.0.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.069473028183	7
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	0.0.1.15.0	search with cache (only 1: exists (N.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold N.to_int, N.of_int, norm; only 1: f_equal; only 1: now induction d).	18.7109911442	9308
Coq.Numbers.DecimalN.Signed.of_int_norm	40	2.1.1.5	search with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: now induction d).	0.214299917221	77
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	1	search with cache (only 1: trivial).	0.0776219367981	11
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	5.20.0	search with cache (only 1: intro n; only 1: compute; only 1: now nzsimpl).	2.47432112694	2064
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.244179964066	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.3	search with cache (only 1: compute; only 1: now nzsimpl).	0.123020887375	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.344944953918	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.14216709137	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.206563949585	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.1.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.406131029129	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	5.0.0	search with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl).	0.282011032104	15
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.1.0.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.369662046432	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.1.2.0	search with cache (only 1: intros n m; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.591331005096	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.1.1.1	search with cache (only 1: unfold Z.opp, Z.eq; only 1: intro m; only 1: simpl; only 1: now nzsimpl).	0.563679933548	14
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	2.1.4	search with cache (only 1: intro H; only 1: apply le_ngt; only 1: now nzsimpl).	0.477028131485	56
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	7.1.1	search with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	2.25255298615	178
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0308749675751	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0217270851135	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0267660617828	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0198609828949	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	0.24.0	search with cache (only 1: intros n m p; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	6.80296087265	2142
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	1.0.6.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite even_spec, odd_spec; only 1: now rewrite <- even_spec, even_succ, odd_spec).	2.02031898499	587
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0259990692139	8
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	0.22.0.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: now rewrite <- add_sub_assoc, sub_diag, add_0_r).	10.2688529491	3152
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	2.0.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.184200048447	69
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.040048122406	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	2.2.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0258820056915	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	1.0.0.1.0.0.1.2.12	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: apply lt_1_2; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_refl; only 1: order').	1.70335507393	1476
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.18.2	search with cache (only 1: intros a0; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	6.37251210213	4268
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	10.8.1.1.1.50	search with cache (only 1: split; only 1: intros a0 a; only 1: now nzsimpl; only 1: intros x x' Hx; only 1: now f_equiv; only 1: congruence).	10.4896299839	12861
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	1.1.6.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros Ha; only 1: intros; only 1: now rewrite Ha).	5.04406309128	4040
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	0.0.1.7.12.0	search with cache (only 1: intros x x' Hx; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: now f_equiv; only 1: order'; only 1: order').	4.64406394958	3490
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0766351222992	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.137559890747	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.08127784729	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	1.3.3.3.0.0.0.0.4	search with cache (only 1: split; only 1: intros; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).	16.0276489258	10265
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.177380800247	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	3.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).	0.0328071117401	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0456790924072	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	1.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now try order').	0.0492029190063	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	4.18.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	2.76300501823	3019
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0270709991455	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0282988548279	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	2.6.0.2.6.0.0.3	search with cache (only 1: intros a a' Ha n n' Hn; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: pose proof H as H'; only 1: unfold clearbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: pose proof H as H'; only 1: unfold clearbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	18.6515600681	5758
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	9.27.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: symmetry; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	12.4361901283	11622
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	39.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	21.1072900295	18363
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0380351543427	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0298659801483	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0450048446655	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	3.0.1	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0629479885101	16
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.0.0.1.0.1.2	search with cache (only 1: intro n; only 1: intros; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	0.840668916702	505
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.2.0.0.1.0	search with cache (only 1: intros n m; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.0491590499878	21
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.0.0.0.1.1.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	4.58261418343	2250
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.1.1.1.3.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	1.24799990654	437
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.0.2.1.1.5.0.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: auto with relations; only 1: trivial using divide_1_l, le_0_1).	6.91143608093	5156
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.182493925095	28
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	2.0	search with cache (only 1: intros n m; only 1: apply abs_nonneg).	0.0492269992828	11
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.0.2.0.25.1	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	16.4700469971	11427
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0389468669891	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0177059173584	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.0177328586578	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.1.0.0.7.1	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: trivial; only 1: auto with relations; only 1: trivial).	4.6299200058	1777
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.1.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0288169384003	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.83544421196	276
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.0.0.0.3.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.087418794632	15
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.1.0.0.0.10.1.3.1.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: apply divide_abs_r; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	36.8821249008	30431
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.4.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.113234996796	17
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.4.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono).	4.69506812096	1476
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40	1.0.0.3.3.0.1.0.4.2	search with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now apply add_le_mono; only 1: rewrite 2!max_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now apply add_le_mono).	17.9618368149	6798
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono).	1.50619006157	744
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.4.0.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	10.6966679096	1108
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.2.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	3.40488505363	1164
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	1.0.0.7.1.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	3.85572910309	3162
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.3.0.0.1.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	9.14707398415	5264
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	1.0.0.9.0.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	16.5242710114	10451
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	0.0.0.2.2.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	2.58284687996	1379
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	0.3.2.5.1.2.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: apply min_r; only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l; only 1: apply min_l; only 1: now apply mul_le_mono_nonpos_l; only 1: order).	8.45019102097	3706
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	5.0.0.3.3.0.3.0.0.5.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_l; only 1: rewrite max_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonpos_r).	14.9564521313	10705
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	1.0.0.0.0.3	search with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.0980699062347	67
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.6.2	search with cache (only 1: intro H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.103686094284	75
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	3.2.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.0382280349731	13
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0146307945251	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	0.6.2.3.2	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	5.7189848423	3866
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	8.4.3.1.1	search with cache (only 1: intros n H; only 1: apply (lt_irrefl n); only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_succ_r; only 1: now nzsimpl').	6.74627518654	3828
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.1.4.0	search with cache (only 1: intros n m LE; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.0129110813141	9
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	1.1.3.3.4.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: symmetry; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	4.25808000565	1839
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	1.2.0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: now rewrite lt_le_pred).	0.0359680652618	22
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.3.1.0.1	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.793868780136	306
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.0.0.10.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	6.38226294518	2375
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.0.4.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.0543789863586	32
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.1.1	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.229250907898	65
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: unfold sgn; only 1: intro n; only 1: destruct (compare_spec 0 n); only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order; only 1: order; only 1: order).	0.0650000572205	19
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0204291343689	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.1.0.1.0	search with cache (only 1: intro; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0539729595184	7
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	1.11.8.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: now right).	4.9023630619	3340
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.8.0	search with cache (only 1: intro n; only 1: apply abs_eq; only 1: apply abs_nonneg).	0.476135015488	197
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	5.13.3.5	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	5.61900305748	7875
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0246322154999	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.1.3	search with cache (only 1: rewrite sgn_null; only 1: auto with relations; only 1: auto with relations).	0.026547908783	8
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.0.0.0.1.1.1.1	search with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.711763143539	236
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.3.0	search with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	0.327614068985	74
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.5.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	0.249392032623	190
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0322060585022	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.8.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	3.17479801178	829
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.0.2.0.1.0.0.0.0.0.0.2	search with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: order; only 1: auto).	8.74556493759	4836
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0163052082062	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.1.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	6.80475592613	4756
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.2.7.1.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition; only 1: order; only 1: auto).	11.1648972034	6386
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0387048721313	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0349130630493	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0361759662628	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	1.1.4.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order; only 1: order; only 1: rewrite <- div_opp_opp by trivial; only 1: rewrite opp_0; only 1: apply Private_NZDiv.div_small; only 1: intuition).	5.09688997269	5358
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.487293958664	246
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0361440181732	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0351369380951	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: order; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	5.41893410683	3353
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.1.0.0.1.0.0.0.2	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: split; only 1: order; only 1: apply le_refl; only 1: nzsimpl; only 1: now try split).	1.61363911629	922
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.0906279087067	54
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	5.0.0.1.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using div_pos).	1.18222594261	313
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.4.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: apply div_str_pos; only 1: auto).	0.0879490375519	30
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: trivial).	0.0805361270905	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	4.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0482788085938	14
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.116098880768	14
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.170621156693	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.2.0.0.0	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.026242017746	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0471479892731	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	10.4053108692	5330
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.147522926331	45
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.060760974884	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	3.83155798912	543
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite div_mul_cancel_l by trivial; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: rewrite <- neq_mul_0; only 1: auto).	0.114784002304	10
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.1.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	1.05149507523	95
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.2.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.802078962326	61
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.1.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.474680900574	67
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.1.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.160187005997	26
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.1.1.1.0.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	1.21500086784	181
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0457940101624	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0226249694824	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.0.6.7.1	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	35.6013350487	11715
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	2.0.0.0.0.2.1	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intro H; only 1: now f_equiv).	0.426073074341	328
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0142259597778	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.4.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_assoc).	0.175155878067	33
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.0.0.1.5.3.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: nzinduct n; only 1: now rewrite opp_involutive; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.78169608116	965
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	2.2.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	0.309391021729	55
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0.1.0.0.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now rewrite opp_involutive; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.534132003784	98
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.1.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.0807838439941	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.3.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0203359127045	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	2.4.0	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0246341228485	13
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	1.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0168550014496	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0192458629608	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.0479509830475	48
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	2.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: auto using mod_small).	0.0569729804993	53
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0188019275665	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.134225845337	115
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0109848976135	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0108778476715	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.40665102005	177
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.2.0.1.0.5	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	0.435883998871	302
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.7.0	search with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).	0.404446840286	108
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.1.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0542740821838	31
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.122614145279	19
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0161650180817	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.2.0.2.0	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0502300262451	35
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.027233839035	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	11.9351110458	6484
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.2.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.200876951218	48
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.113718032837	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	0.0.0.0.0.0.0.1.1.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: trivial; only 1: trivial; only 1: auto; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	4.67440104485	1183
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.3.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: intuition; only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.389078140259	63
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.2.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	1.15152597427	160
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.1.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.662333011627	73
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.2.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.345252990723	75
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.2.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.63469004631	65
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.0753359794617	16
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0340709686279	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	8.0	search with cache (only 1: intros x y; only 1: Z.order').	0.101004838943	10
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.2.4.0	search with cache (only 1: intros; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).	0.0566020011902	10
Coq.Numbers.Cyclic.Int31.Ring31.test	40	15.4	search with cache (only 1: intros a b; only 1: ring).	2.36166501045	1094
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	0.4.5	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.229499101639	42
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.252122163773	3
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0	search with cache (only 1: reflexivity).	0.177678823471	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40	3.1.2.0.1.6	search with cache (only 1: induction n; only 1: intro n; only 1: trivial; only 1: simpl in *; only 1: intros; only 1: now f_equal).	9.60784387589	2604
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.2.4	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	1.24020695686	9
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0	search with cache (only 1: reflexivity).	0.214575052261	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.2.0.0.0.0.1	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.182490825653	10
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.214768886566	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.284115076065	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.1	search with cache (only 1: destruct x; only 1: reflexivity).	1.23970103264	3
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.203154087067	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	0.1.0.0.0.1	search with cache (only 1: destruct x; only 1: intro H; only 1: injection H; only 1: intros; only 1: simpl; only 1: auto).	1.30101084709	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	1.9.0.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	1.56507515907	341
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	0.1.1	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.210759878159	5
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40	1.0.27	search with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto with zarith).	10.3787639141	7535
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	1.0	search with cache (only 1: intros; only 1: now symmetry).	0.124439954758	3
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	0	search with cache (only 1: reflexivity).	0.155673980713	1
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	1.1.4	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.227508068085	16
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	0.2.2	search with cache (only 1: intros n; only 1: elim n; only 1: auto).	1.17406702042	7
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.172863006592	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.155828952789	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	1	search with cache (only 1: auto).	0.170037984848	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: auto with zarith).	0.147087097168	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.142539978027	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.185601949692	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0	search with cache (only 1: auto).	0.239403963089	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	2.0	search with cache (only 1: intros x y; only 1: auto).	0.121387004852	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	0.2.1.0	search with cache (only 1: intros n; only 1: unfold add31; only 1: repeat rewrite phi_phi_inv; only 1: auto).	0.197947025299	7
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.172426939011	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.0.2	search with cache (only 1: unfold sub31c, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.310697078705	18
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	5.2	search with cache (only 1: intros; only 1: apply phi_phi_inv).	1.11733794212	27
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	1.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.221662044525	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.275414228439	4
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.170573949814	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	4.1.3.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: intros (H1, H2); only 1: nia).	13.5484690666	1726
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.191596984863	8
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	29	search with cache (only 1: lia).	1.35686779022	1081
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	1.0.0.0.0.0.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.44415307045	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.359883069992	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.199825048447	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40	0.0.2.0.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: apply Z.pow_gt_1; only 1: auto with zarith; only 1: auto with zarith).	0.165906906128	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.3.0.0	search with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.339089155197	26
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.0	search with cache (only 1: intros x y; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.271775007248	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.5.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.146625995636	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	1.5.0.0	search with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.157024860382	15
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	4.0.0	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: auto).	0.132463932037	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40	0.2.0.0.0	search with cache (only 1: intros; only 1: destruct x; only 1: trivial; only 1: apply two_power_pos_equiv; only 1: trivial).	0.140917062759	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	5.3	search with cache (only 1: intros n ih hn; only 1: auto).	0.189799070358	10
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	8.69534397125	1124
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.2	search with cache (only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg).	0.155282974243	13
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	search with cache (only 1: intros h; only 1: Z.order_nz).	0.134304046631	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	3	search with cache (only 1: discriminate).	0.127326011658	4
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.0	search with cache (only 1: red; only 1: reflexivity).	0.149144887924	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: reflexivity).	0.12456202507	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: trivial).	0.130909919739	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	6	search with cache (only 1: congruence).	0.144551992416	7
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.5.0	search with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.146868944168	8
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.1.0	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.173538923264	14
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.2.7.0	search with cache (only 1: intros; only 1: unfold eqo; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	0.847325086594	314
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	14.5.0.2	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intro; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	5.1402361393	1613
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	search with cache (only 1: apply subc_spec).	0.215764045715	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	2	search with cache (only 1: apply sub_spec).	0.177315950394	3
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.117897033691	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0	search with cache (only 1: now intros ->).	0.148036956787	1
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	0.23.9.7	search with cache (only 1: apply to_Z_inj; only 1: rewrite !add_spec; only 1: f_equal; only 1: lia).	2.44849181175	2577
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.247172832489	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	13.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.713222980499	223
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: reflexivity).	0.211157798767	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	5.9.2	search with cache (only 1: intros H; only 1: rewrite H; only 1: apply negb_involutive).	1.00220918655	560
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.152338027954	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.274976015091	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	0.5.1.2.0.1	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: unfold bit; only 1: rewrite lsr0, lsl0, andb_false_r; only 1: auto).	5.45465493202	1271
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	2.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.215118169785	6
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	3.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: apply orb_false_r).	0.271414041519	7
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	0.11.2	search with cache (only 1: intros A f assoc a0 comma0 l; only 1: intros P Hrec p; only 1: firstorder).	2.27281880379	592
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.6	search with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).	0.216260910034	28
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.5.0.0	search with cache (only 1: intros; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.319697141647	10
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	15.13.0.0	search with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: ring).	7.75739407539	4271
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	5.2.21.5	search with cache (only 1: intros t w0; only 1: unfold eqb, eq; only 1: rewrite ZnZ.spec_compare; only 1: apply Zeq_is_eq_bool).	36.6541728973	7869
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	2.4.1.0.2.0	search with cache (only 1: split; only 1: split; only 1: red; only 1: easy; only 1: compute; only 1: intuition congruence).	4.14323401451	1146
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	7.23	search with cache (only 1: unfold base; only 1: auto with zarith).	10.067813158	6059
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	0.0.0.0.0.0.0.8	search with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: constructor; only 1: split; only 1: intros H1; only 1: discriminate; only 1: pose proof gt_wB_1; only 1: lia).	1.45072507858	263
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	2.1.0	search with cache (only 1: zify; only 1: simpl; only 1: now f_equal).	0.13890004158	23
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	0	search with cache (only 1: assumption).	0.0241420269012	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.1.2.0.0	search with cache (only 1: intro n; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.188796043396	8
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	6.0.0	search with cache (only 1: intros; only 1: zify; only 1: trivial).	0.162800073624	9
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	search with cache (only 1: reflexivity).	0.0847871303558	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.0655250549316	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.0656080245972	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.0.0.0.1.0.0.0.0.8.0.0.2.0	search with cache (only 1: induction n; only 1: split; only 1: constructor; only 1: now exists 0; only 1: induction n as [| n IH]; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1; only 1: now inversion_clear H0).	22.7802429199	13816
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.1.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.00818991661072	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	0.0.3.1.0.0.0.9.3	search with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: split; only 1: intro H; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intro H; only 1: apply neq_succ_0).	5.61278581619	11607
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.1.0.13.2	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	1.44161605835	1915
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	4.1.7.10	search with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: apply lt_0_succ).	29.5382869244	21965
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.1.0.0.0	search with cache (only 1: intro; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0287160873413	6
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.2.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.0250849723816	8
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.1.1.1	search with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0314710140228	17
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40	0.3.2.1.1.1.0.5.0.0.0.1.0	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: split; only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: rewrite pred_0; only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro; only 1: rewrite <- le_succ_l; only 1: rewrite <- le_succ_l; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	34.2944700718	30832
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	1.4.4.0.3.0.0.7	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	30.3125650883	29393
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.1.0.0.3.0.3	search with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	1.93779397011	1683
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40	0.0.0.9.2.1.6	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: apply le_0_l; only 1: apply neq_0_lt_0; only 1: intro H1; only 1: now apply H; only 1: auto).	11.2059099674	9621
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.1.0.2	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	0.278371810913	62
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: nzsimpl; only 1: order).	0.0321819782257	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0579738616943	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.0.1.5	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.594305992126	327
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: now nzsimpl).	0.110700845718	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.017804145813	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0238230228424	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.2.5.3.0.11.4.0	search with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: pose proof (pred_succ n) as EQ'; only 1: apply (lt_irrefl n); only 1: order'; only 1: now nzsimpl').	7.29512405396	15388
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.3.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	0.116041898727	104
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0130181312561	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0355141162872	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	2.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	0.0879518985748	44
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.0.0.3.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.317356109619	97
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.6.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.062432050705	27
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: apply div_str_pos; only 1: auto).	0.137923002243	38
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	2.1.2.2.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: auto').	0.313125133514	210
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.1.2.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0636479854584	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0543580055237	14
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.1.0.0.0.0.18.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	16.3186519146	17431
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	0.0.0.15.0	search with cache (only 1: intros; only 1: apply div_le_lower_bound; only 1: auto'; only 1: auto'; only 1: auto').	2.43005299568	2419
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	5.0.0.0.4.0.0.1.0.0.2.0	search with cache (only 1: intros; only 1: intuition; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: auto'; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: auto').	9.55779290199	8302
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.1.0.0.2.4.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	2.36501598358	1299
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.4.0	search with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.116522073746	43
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.1.2.2.1	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.447849035263	201
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.1.9.0	search with cache (only 1: intros; only 1: intuition; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).	1.0271229744	761
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	0.990310192108	429
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.02226114273	305
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.5.2.0.2.0.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: destruct (mod_bound_pos a n); only 1: apply le_0_l; only 1: order; only 1: now rewrite Private_NZDiv.mod_small_iff).	2.71033501625	1983
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.16.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	10.3265748024	5634
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.141425848007	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.1.4.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.372644901276	203
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.0.0.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0492351055145	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.1.4.0.1	search with cache (only 1: intros n m p H; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.800136089325	272
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.119971990585	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0754499435425	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.0.2.0.0.0.0.0.0.0.5.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: intro H1; only 1: now apply H; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: order).	4.57103204727	3208
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0134100914001	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	2.2.1.1.7.2.1	search with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: transitivity 1; only 1: apply lt_0_1; only 1: rewrite one_succ; only 1: apply le_succ_l; only 1: now apply eq_le_incl).	0.728684186935	1268
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.1.0.0.0.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now nzsimpl').	0.0372180938721	18
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40	3.3.1.0.0.2.0.0	search with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: intros; only 1: now apply H3).	4.94232201576	1738
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.2.2.10	search with cache (only 1: unfold if_zero; only 1: destr_bool; only 1: rewrite recursion_0; only 1: auto).	0.527413845062	614
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.18	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.163635015488	165
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.0.1.11.0.10	search with cache (only 1: unfold even; only 1: intro n; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: reflexivity; only 1: f_equiv').	0.786548137665	1808
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.0.19	search with cache (only 1: compute in *; only 1: rewrite recursion_0; only 1: auto with *).	0.263622999191	406
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	1.1.3.6	search with cache (only 1: intros a b Ha Hb; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: trivial).	2.1320681572	1334
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.0.7.6.4	search with cache (only 1: intros n m; only 1: intro; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	13.4321291447	8766
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.2.2.0.0.0.1.1.0.0	search with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: assumption; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	5.4450750351	2506
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	0.2.0.1.1.4.0.7	search with cache (only 1: intro n; only 1: intro H; only 1: intros a b Ha Hb; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: order; only 1: apply le_0_l; only 1: order).	20.3965060711	12444
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	0.4.0	search with cache (only 1: intros x x' EQ; only 1: subst; only 1: easy).	0.0851130485535	28
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0803210735321	12
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	1.1.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0492000579834	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.12.0.0.5.18	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: order').	9.76954007149	5992
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0591881275177	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0279650688171	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	9.0.9.0	search with cache (only 1: repeat red; only 1: intros n m H; only 1: intros; only 1: now f_equiv).	22.3047420979	7668
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.3	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.458256959915	79
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.1.4.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.109185934067	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.9.0	search with cache (only 1: intros a n H; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: order'; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	3.46764802933	1707
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.189777135849	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0872819423676	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0764291286469	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.038850069046	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	3.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).	0.0549690723419	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0530431270599	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	26.0.1	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	14.8405110836	9982
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	3.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: destr_bool).	0.0577158927917	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	10.15.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	1.94030690193	2483
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.125767946243	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0286982059479	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	0.1.0.7.0.0.0.0.0.0.0.4.2	search with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply pow_le_mono_r; only 1: order'; only 1: trivial; only 1: order_nz).	27.8623080254	16651
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0556190013885	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: assumption; only 1: assumption).	2.84680199623	586
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.9.0	search with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	1.02799487114	470
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.0.4.1	search with cache (only 1: unfold natural_isomorphism; only 1: firstorder; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.520664930344	408
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.0.0.1.0.0.0.1	search with cache (only 1: intro n; only 1: apply sqrt_unique' with 0; only 1: split; only 1: now apply eq_le_incl; only 1: apply mul_nonneg_nonneg; only 1: apply le_0_l; only 1: apply le_0_l; only 1: now nzsimpl).	0.037693977356	10
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	4.4.4.4	search with cache (only 1: intros a Ha; only 1: apply sqrt_le_square; only 1: apply le_0_l; only 1: apply le_0_l).	9.91016602516	7069
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.1.0.0.0.1.0.0	search with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.169682025909	10
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	2.1.1.0.0.0.0.0.9	search with cache (only 1: induct ltac:(n); only 1: intro n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro H; only 1: intros n m; only 1: intro H1; only 1: now nzsimpl).	21.0282349586	10826
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	3.4.0.0.1.0	search with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intro H; only 1: now nzsimpl).	5.45760607719	1706
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.2.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0804469585419	9
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	1.0.2.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0578269958496	30
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	7.4.1	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	8.23250412941	2480
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.1.0.0.0.0.0.0.1.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l; only 1: apply le_0_l).	4.70148587227	1034
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0585250854492	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	0.0.1.0	search with cache (only 1: intro n; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).	0.181735992432	5
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	8.65037798882	1373
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	1.6.3.1	search with cache (only 1: intros a b Ha Hb; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order).	0.628621101379	809
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.2.1.6.0	search with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).	6.33334207535	818
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.2.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').	0.089161157608	12
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	0.3.0.12.0	search with cache (only 1: intros; only 1: apply pow_lt_mono_r; only 1: order; only 1: apply le_0_l; only 1: trivial).	16.0375771523	6903
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.3.0.0.0	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: trivial; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).	0.0348079204559	15
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	1.3.0.0.6.1.1	search with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	2.49679303169	2739
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	0.3.0.0.1.3.0.1.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l).	39.1297659874	5376
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.2.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	5.47679209709	809
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.0.0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	8.86110401154	2980
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.3.2.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_l).	8.07737779617	1769
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.2.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	4.77976202965	1744
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	1.0.0.3.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	7.8200070858	1293
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0	search with cache (only 1: constructor 1).	0.0115230083466	1
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	2.0	search with cache (only 1: intros; only 1: apply divide_mul_l, divide_refl).	0.00937390327454	4
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.4	search with cache (only 1: unfold lcm; only 1: intro n; only 1: now nzsimpl).	0.0877430438995	31
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.00972509384155	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.0.4.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	0.407513141632	286
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.017657995224	7
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_refl).	0.0238859653473	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.0.0.0	search with cache (only 1: intro E; only 1: assert (E' : Some n = Some n'); only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E; only 1: now injection E').	0.171745061874	4
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	1.0.3	search with cache (only 1: intros E; only 1: rewrite <- !Unsigned.to_of; only 1: now f_equal).	0.48902797699	74
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.5.1	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.0784928798676	22
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.1.2.3.3.0	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.652719974518	277
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.1.5	search with cache (only 1: rewrite sqrt_up_eqn0; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: now nzsimpl; only 1: order').	0.110119104385	24
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.0.1.0.2.9.0	search with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_up_eqn; only 1: rewrite sqrt_pred_square; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: now nzsimpl'; only 1: apply lt_0_1; only 1: nzsimpl; only 1: apply lt_0_1).	4.93698501587	2249
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	0.1.0.0.0.1.0.0.0.0.0.0.1.1.0	search with cache (only 1: intros a; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: split; only 1: order; only 1: order; only 1: intros H; only 1: split; only 1: order; only 1: intros Ha; only 1: apply lt_succ_r, sqrt_nonneg; only 1: intros Ha; only 1: split; only 1: order; only 1: order).	14.5051012039	10857
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.595777988434	303
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	3.10.0.27.22.3	search with cache (only 1: intuition; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl').	35.2966871262	49268
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	0.0327429771423	8
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.12.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	21.5941081047	13829
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.4.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	0.754726171494	334
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.3.0.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: order'; only 1: order).	0.0401749610901	8
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0321710109711	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.1.0.0.1.0.1.0.0.0.0.0	search with cache (only 1: intros a b Ha Hb; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: symmetry in Hab; only 1: contradict Hab; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	9.00852799416	8265
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	0.0.0.0.0.0.0.0.0.7.1	search with cache (only 1: intros a b Ha Hb; only 1: apply mod_small; only 1: split; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: trivial; only 1: order; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: trivial; only 1: auto).	8.4612569809	3201
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	1.2.1.1.1.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.230946064	263
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	1.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0864090919495	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.1.0.0.1.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0803499221802	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0412440299988	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.2.0.1	search with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.115375995636	10
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.132956027985	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.8.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.5673661232	347
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0916759967804	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0667350292206	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	12.2.1	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: firstorder).	0.570860862732	760
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.10.1.0	search with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor 1; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.953272104263	831
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	8.0.1.0	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: now f_equiv).	1.04734492302	252
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.1.8.0.0.11.2	search with cache (only 1: split; only 1: intro n; only 1: apply lt_eq_cases; only 1: now right; only 1: intro n; only 1: intro m; only 1: intro p; only 1: rewrite 3!lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations).	22.7780451775	23125
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0205419063568	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	2.1.3	search with cache (only 1: intros n1 n2 H; only 1: apply lt_eq_cases; only 1: intuition).	0.189689874649	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.2516310215	83
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0272629261017	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0256099700928	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0283269882202	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	3	search with cache (only 1: order).	0.346805095673	90
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	2	search with cache (only 1: order).	0.252260923386	98
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.5.0	search with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (lt_irrefl x); only 1: now transitivity y).	0.435680150986	46
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.0.4.4.0	search with cache (only 1: intros n m; only 1: intuition; only 1: apply le_succ_l; only 1: apply lt_eq_cases; only 1: now left).	1.13260006905	468
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	3.11.1.1	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).	2.51715612411	2428
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.11.0	search with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	2.13663601875	1333
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	0.0.0.4.12.1	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	32.3987100124	24721
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	1.2.6.2.1.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	4.9843108654	2520
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.0.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0236010551453	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.1.3.1.1	search with cache (only 1: rewrite two_succ; only 1: rewrite one_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0603439807892	37
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.0.0.0.0.1	search with cache (only 1: apply lt_le_incl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	0.0322260856628	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.0.2	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.341518163681	90
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	1.1.0.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0339720249176	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	0.2.3.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	0.434497833252	47
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	0.0.5.0.1	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.288854122162	133
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	1.0.6.0	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.288979053497	128
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	5.2.0	search with cache (only 1: intro n; only 1: intros H; only 1: intuition order).	0.0632770061493	57
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0155229568481	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.0.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0289089679718	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	1.1.0.0.2.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: split; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.0926141738892	59
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0160148143768	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.015930891037	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.1.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0511949062347	21
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.0.0.1.1.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: order).	0.0600311756134	36
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.2.0.0.1.0.0	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intros; only 1: rewrite lt_succ_r; only 1: order).	0.896023988724	602
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	8.5.6	search with cache (only 1: intro; only 1: intros RS' n; only 1: order).	0.354933977127	673
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40	2.10	search with cache (only 1: intros L R n; only 1: firstorder).	0.391891002655	476
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40	0.9.4.3	search with cache (only 1: intros H; only 1: intro n; only 1: compute; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	9.61239790916	1294
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40	1.11.9	search with cache (only 1: intros LS' n; only 1: compute; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	9.33800196648	1321
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	20	search with cache (only 1: solve_proper).	0.49755692482	186
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	3.6	search with cache (only 1: intros a; only 1: solve_proper).	0.0640151500702	52
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	11.0.3.7	search with cache (only 1: PeanoNat.Nat.induct ltac:(n); only 1: apply lt_succ_diag_r; only 1: intros n H; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	2.8582649231	1396
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	1.0.0.0.0.2.1.2.5	search with cache (only 1: induction n; only 1: simpl; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	2.22990298271	2502
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	2.2.23	search with cache (only 1: fix gcd_divide 1; only 1: intros a b H; only 1: auto).	9.76475381851	16511
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0653450489044	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	0.34.14	search with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	29.0748798847	28657
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.1.11.1	search with cache (only 1: intros n m; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	3.4863049984	1317
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.00810194015503	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.1.0.2.1.1	search with cache (only 1: intros n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.452796936035	371
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0159859657288	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.00803995132446	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.0.1.0.14.8	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	4.72696709633	4463
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.388163089752	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	1.1.1.1.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	4.22685098648	724
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.3.0.1.4.0.5.5.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: intros [(y, H)| (y, H)]; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: intros; only 1: now rewrite Even_succ, Odd_succ; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: intros; only 1: now rewrite Even_succ, Odd_succ).	34.3994100094	18915
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.1.1.1.0.0	search with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0955891609192	26
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.2.0.0.6.0	search with cache (only 1: intros; only 1: nzsimpl'; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	1.25877404213	431
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	1.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.134553909302	7
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.115275144577	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	1.0.0.5.0.1.4.6	search with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	24.6105229855	11581
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	1.0.0.4.0.1.6.4	search with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	31.5520131588	9292
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0601871013641	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0539109706879	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	3.0.0.4.2	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now nzsimpl').	0.539577960968	193
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	3.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.0829591751099	9
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.1.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0424499511719	6
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0254831314087	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.6.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.580200910568	211
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.0.1.0.0.9.0	search with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: order_pos; only 1: order).	5.0578660965	1944
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	0.4.0.10.0	search with cache (only 1: intros a Ha; only 1: rewrite log2_up_eqn; only 1: apply lt_succ_r; only 1: order_pos; only 1: trivial).	15.1090800762	6841
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	1.0	search with cache (only 1: intros; only 1: firstorder).	0.0162649154663	3
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	4.0	search with cache (only 1: intros; only 1: firstorder).	0.0199160575867	6
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.4.6.1	search with cache (only 1: intros; only 1: transitivity x; only 1: firstorder; only 1: auto).	0.286767959595	305
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.0.0.0.14.0	search with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: now f_equiv).	2.94954895973	2284
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.7.2.0.0.0	search with cache (only 1: intros n m p H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: generalize (le_gt_cases n m); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	3.21263885498	1104
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.0.12.5.0.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: intros H; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption).	11.9094121456	3792
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0240118503571	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	9.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.823423147202	179
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.3.1.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0134170055389	10
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.3.0	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0155100822449	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	2.0	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	0.0120089054108	4
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	1.0	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	0.0120651721954	3
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.0076310634613	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	4.0	search with cache (only 1: intros x y z; only 1: eauto using eq_trans, eq_sym).	2.02084112167	12
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.3.0.2.0.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.228749036789	237
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.2.0	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition).	0.0943789482117	28
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	0.14.7	search with cache (only 1: intros x; only 1: fix sqrtrem_spec 1; only 1: auto).	8.53895783424	2917
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	3.0.2	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.282816171646	25
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	1.8.19	search with cache (only 1: intros n Hn; only 1: fix sqrtrem_spec 1; only 1: trivial).	11.1934921741	6033
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	9	search with cache (only 1: solve_proper).	1.1930809021	35
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.6.5	search with cache (only 1: intros n m p; only 1: intros; only 1: now transitivity m).	0.916616916656	260
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	10.9.0.4	search with cache (only 1: unfold lt; only 1: intros n m; only 1: intro H; only 1: Nat.order).	8.46297192574	5292
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.0.0	search with cache (only 1: intros n m p; only 1: intros; only 1: now transitivity m).	0.18204498291	3
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.214011192322	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.1.7.1.2	search with cache (only 1: intros n; only 1: induction n; only 1: split; only 1: intuition; only 1: intuition).	0.543568134308	318
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.24.3	search with cache (only 1: induction 1; only 1: red; only 1: auto with ordered_type).	9.03652310371	3636
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	0.5.4	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).	0.713136911392	169
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	3.0.9	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: eauto).	0.456663131714	331
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	search with cache (only 1: decide equality).	0.101572036743	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	4.0.1	search with cache (only 1: split; only 1: tauto; only 1: trivial).	0.0195279121399	8
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	2.2.6.1	search with cache (only 1: intros; only 1: constructor; only 1: eauto; only 1: eauto).	0.364041090012	395
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	0.0.5.0.0.2	search with cache (only 1: induction x; only 1: red; only 1: simpl; only 1: intros y LT; only 1: inversion LT; only 1: auto).	1.04235291481	296
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	0.0.2.10	search with cache (only 1: unfold eq; only 1: intuition; only 1: eauto; only 1: eauto).	10.0562639236	2973
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	2.6	search with cache (only 1: apply eqb_eq; only 1: firstorder).	0.158975124359	30
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	5.11.10.11.3	search with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: repeat red; only 1: apply Logic.eq_trans).	3.2630751133	6668
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	9.0.0.0.0.9.2	search with cache (only 1: split; only 1: repeat red; only 1: intros; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	2.96633601189	2973
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	2.0.0.0.0.2	search with cache (only 1: split; only 1: destruct (compare x y); only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.481443881989	107
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	2	search with cache (only 1: order).	1.02681803703	3
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	search with cache (only 1: order).	0.0427210330963	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.0206229686737	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0358769893646	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0355322360992	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.1.1.0	search with cache (only 1: destruct (compare x y); only 1: intuition; only 1: intuition; only 1: auto).	0.0538849830627	6
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0348529815674	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0237760543823	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.0231289863586	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.0203430652618	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0336091518402	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0217480659485	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0210561752319	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0290310382843	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	6.8.6.25.4	search with cache (only 1: intros; only 1: destruct (compare x y); only 1: order; only 1: eauto; only 1: order).	9.67328000069	20176
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	1.27137494087	365
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	1.63717794418	503
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.1.1	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0793700218201	5
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	2.0.0.0.1.0.0	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).	0.0826270580292	10
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	1.1.7.3.0.0.6	search with cache (only 1: destruct l; only 1: auto with *; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	17.1091799736	5709
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	9.2	search with cache (only 1: intros; only 1: now rewrite H).	0.190543889999	117
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.0.0.0.3	search with cache (only 1: simple induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0667090415955	8
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	7.2.5	search with cache (only 1: simple induction l; only 1: auto; only 1: intuition).	0.352634906769	277
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40	0.0.0.0.0.0.0.0.4.1.0.0.0.0.2.2.1.0.1	search with cache (only 1: split; only 1: intros; only 1: eapply SortA_InfA_InA; only 1: split; only 1: exact eq_refl; only 1: exact eq_sym; only 1: exact eq_trans; only 1: split; only 1: exact lt_antirefl; only 1: exact lt_trans; only 1: intuition; only 1: eauto; only 1: auto; only 1: auto; only 1: apply InA_InfA; only 1: split; only 1: exact eq_refl; only 1: exact eq_sym; only 1: exact eq_trans).	17.2293069363	18509
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.2.1	search with cache (only 1: intros; only 1: induction H; only 1: auto).	0.0564949512482	6
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	1	search with cache (only 1: intuition).	0.0536279678345	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.031347990036	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	1.1	search with cache (only 1: intros; only 1: auto with ordered_type).	0.0414979457855	4
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.0405819416046	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	2.2.0	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: auto with ordered_type).	0.0563321113586	7
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0845639705658	3
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	4.3.1.4	search with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: simpl in *; only 1: order).	0.556179046631	321
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40	0.5.6.4.1.4	search with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto with ordered_type; only 1: simpl in *; only 1: subst; only 1: auto).	6.51748585701	2131
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0224552154541	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0197780132294	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	2.0.2.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).	0.0627319812775	8
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	8.0.0.1	search with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: eauto with ordered_type).	0.714312076569	185
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.1.0.1.0.0	search with cache (only 1: constructor; only 1: constructor; only 1: auto with ordered_type; only 1: auto; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.63464307785	12
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0227339267731	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.0578079223633	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.042417049408	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	0.1.9.1	search with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: auto).	0.80700302124	376
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	25.1	search with cache (only 1: intros; only 1: now rewrite H).	1.32995820045	1628
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	4.5.0.27.2	search with cache (only 1: intros; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	22.4820380211	8312
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	2.10.1	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: auto).	0.968575954437	431
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	1.0.0.0.0.0	search with cache (only 1: unfold eqk, ltk; only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.0949449539185	7
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.130061149597	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	1.0.0.0.0.2.0.0.0.0.1.1.2.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: easy).	38.9682190418	15693
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.1.3.0.0.0.0.0.1.1.3.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	33.1688539982	6715
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.0.0.0.2.2.0.0.0.1.2.2.0.3	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).	14.5394761562	4938
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.5	search with cache (only 1: autorewrite with order; only 1: reflexivity).	0.0178821086884	8
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	3.2.5.2.22	search with cache (only 1: split; only 1: repeat red; only 1: iorder; only 1: repeat red; only 1: iorder).	0.750408172607	931
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	4.0	search with cache (only 1: compute; only 1: iorder).	0.0470600128174	32
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.3	search with cache (only 1: red; only 1: iorder).	0.0554220676422	17
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0190930366516	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.2.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.0750780105591	25
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	1.3.0	search with cache (only 1: intros; only 1: red; only 1: iorder).	0.0474219322205	23
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	1.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.204977989197	30
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0	search with cache (only 1: rewrite compare_lt_iff; only 1: iorder).	0.0326189994812	2
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0123498439789	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.019336938858	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0169668197632	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	3	search with cache (only 1: order).	1.01616501808	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	2	search with cache (only 1: order).	1.01236486435	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	1	search with cache (only 1: order).	1.02566695213	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	2	search with cache (only 1: order).	1.02337479591	3
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	3.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0389151573181	13
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	3.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.040510892868	27
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0112268924713	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	2	search with cache (only 1: order).	0.0455179214478	35
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	search with cache (only 1: order).	0.014575958252	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	search with cache (only 1: order).	0.0102188587189	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0.1	search with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0270988941193	4
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	search with cache (only 1: order).	0.0100910663605	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.00993299484253	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.00968098640442	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	search with cache (only 1: order).	0.00927209854126	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	7.1.6.1.6.2	search with cache (only 1: intuition; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: order).	21.1493940353	26035
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.1	search with cache (only 1: unfold lt; only 1: auto with *).	0.0181980133057	3
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.01176404953	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	1.0	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.0123100280762	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	1	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0154061317444	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0198409557343	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	2.0.14.6.2.22	search with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: intros H; only 1: case leb_spec0; only 1: trivial; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	19.1604268551	32090
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1	search with cache (only 1: induction 1; only 1: auto).	0.0253491401672	3
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	3.0.0.0.1.2	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	0.622648954391	291
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.2.0.11.0.0.5	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: auto).	6.40317702293	5177
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	1.1.9	search with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: eauto).	0.777126073837	325
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.0.0.5	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intuition).	0.106045007706	47
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	1.2.6	search with cache (only 1: simple induction l; only 1: auto; only 1: firstorder).	0.0879280567169	74
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	12	search with cache (only 1: eauto with *).	0.878158092499	236
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	7	search with cache (only 1: solve_proper).	0.575927019119	46
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	3	search with cache (only 1: eauto with *).	0.0396709442139	4
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	1.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.054759979248	4
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	0	search with cache (only 1: now intros <-).	0.0488760471344	1
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	2	search with cache (only 1: firstorder).	0.00905990600586	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: auto).	0.0096390247345	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.00946307182312	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1	search with cache (only 1: firstorder).	0.0120408535004	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	search with cache (only 1: now destruct 1).	0.0133421421051	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	search with cache (only 1: reflexivity).	0.00874400138855	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0129470825195	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	search with cache (only 1: firstorder).	0.0109701156616	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	4.15	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.40834903717	438
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.027890920639	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.0.28.0.16	search with cache (only 1: intro H1; only 1: induction 1; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).	3.97090697289	5184
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	0.0.0.0.0.0.1.37.2.6.0	search with cache (only 1: unfold In, MapsTo; only 1: intuition; only 1: firstorder; only 1: induction H; only 1: firstorder; only 1: firstorder; only 1: apply InA_eqk_eqke in H; only 1: destruct H as ((k', e'), (E, H)); only 1: compute in E; only 1: exists e'; only 1: now rewrite E).	13.1213409901	27407
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	1.6.0	search with cache (only 1: split; only 1: now destruct 1; only 1: inversion 1).	0.102521896362	32
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	9.7	search with cache (only 1: intros H; only 1: now rewrite H).	0.493664979935	275
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0621421337128	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	1.2	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.125978946686	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.1.13.8	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	2.28590679169	1877
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.2.2	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	0.0347218513489	9
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	0.3.2	search with cache (only 1: repeat red; only 1: induction 1; only 1: auto).	0.0304429531097	8
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	0	search with cache (only 1: auto).	0.0305581092834	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.02068400383	1
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0220379829407	3
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.2.0	search with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: intuition).	0.0367479324341	5
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	4.0.5	search with cache (only 1: intros x y z H; only 1: revert z; only 1: eauto).	0.465590953827	118
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	2.0.0.1	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: eauto).	0.0690970420837	7
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0568768978119	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	0.11.8.0	search with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: auto).	3.74960899353	1713
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.6.1.14	search with cache (only 1: intros x y z H; only 1: intuition; only 1: rewrite <- H; only 1: eauto).	1.95699381828	1495
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40	1.4.19.29	search with cache (only 1: induction 2; only 1: destruct H0; only 1: eauto; only 1: auto).	39.1785831451	74183
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.1.6.0	search with cache (only 1: inversion 1; only 1: inversion_clear H0; only 1: intuition; only 1: auto).	0.177811861038	62
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.2.0.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.08615899086	6
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	4.4.9	search with cache (only 1: repeat red; only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.275820016861	345
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	6.0	search with cache (only 1: unfold eq, lt, compare; only 1: decide equality).	0.0240480899811	14
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	0.0.1.0.0.0.0.0.6	search with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).	0.200124025345	354
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.1.0.0.3.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0918271541595	201
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	5.55403900146	2765
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	9.0.3.3.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: intuition; only 1: intuition; only 1: intros R R' EQ a a' Ha WF; only 1: order).	4.18170499802	1444
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.0.3.0.0.7.11	search with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition).	2.50243711472	2724
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0126049518585	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	0	search with cache (only 1: solve_max).	0.0167570114136	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0240559577942	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	1.2.0.0.2.0.0.3.1.1	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max; only 1: solve_max).	14.9620428085	5435
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0361530780792	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0	search with cache (only 1: solve_max).	0.011029958725	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0103840827942	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0	search with cache (only 1: solve_max).	0.0743980407715	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.2.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0723378658295	24
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	search with cache (only 1: solve_max).	0.0117149353027	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.1.0.2.0	search with cache (only 1: destruct (max_spec n m); only 1: solve_max; only 1: intuition; only 1: order; only 1: order; only 1: order).	0.224478006363	58
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0200879573822	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.125242948532	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	4.0.0.0.2.0.0.0.0	search with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).	7.8966550827	4637
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.9	search with cache (only 1: apply min_l; only 1: order).	0.0115549564362	21
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	3.0.1.1.20	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.509727954865	1229
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.0099241733551	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	1	search with cache (only 1: solve_min).	0.0167999267578	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	search with cache (only 1: solve_min).	0.0122261047363	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.0.0.0.1.14	search with cache (only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order).	4.97063803673	3790
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.0.1.0.0.0.2.3	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	4.53143191338	2733
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	1.1.0.0.1.0.0.0.1	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	4.92841601372	866
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	1	search with cache (only 1: solve_min).	0.0117659568787	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	1	search with cache (only 1: solve_min).	0.0107140541077	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	1	search with cache (only 1: solve_min).	0.016862154007	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.2.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.109934091568	35
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	search with cache (only 1: solve_min).	0.0165090560913	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	2.3.1	search with cache (only 1: destruct (min_spec n m); only 1: solve_min; only 1: solve_min).	0.205943107605	36
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0227990150452	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.1.0.0.0	search with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.0670759677887	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.1	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.059956073761	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.1.0.1.1	search with cache (only 1: destruct (min_spec n m) as [(C, E)| (C, E)]; only 1: apply min_r || apply min_l; only 1: solve_max; only 1: apply min_r || apply min_l; only 1: solve_max).	0.0227830410004	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.0.0.1.0.0.0.1.0.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	0.985646009445	733
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	0.1.0.1.0.0.0.2.1.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	1.90076708794	1669
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.0.0.0.0.0.0.1.4	search with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	0.16924905777	391
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.3	search with cache (only 1: apply max_mono; only 1: eauto with *).	0.0924618244171	20
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.1.9.4	search with cache (only 1: intros x y z; only 1: apply min_mono; only 1: congruence; only 1: auto).	0.167762041092	318
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	1.1.0.5.2.3.1	search with cache (only 1: Bool.destr_bool; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: assumption; only 1: auto; only 1: auto).	4.36099219322	5149
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.00765681266785	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.7	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0222570896149	25
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0209341049194	5
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.3	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0275499820709	8
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.0.0.0	search with cache (only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.0376770496368	4
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	2.0	search with cache (only 1: unfold eq; only 1: decide equality).	0.0435681343079	13
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	2.0.7	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.161648988724	146
Coq.ZArith.Znat.N_nat_Z	40	0.0.0.0.0.0.3.1.0.14	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	1.21056818962	1007
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0195109844208	5
Coq.ZArith.Znat.positive_N_Z	40	1.2.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: simpl; only 1: f_equal).	0.0153758525848	6
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: trivial).	0.00881910324097	1
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0235362052917	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0195338726044	4
Coq.ZArith.Znat.Z_nat_N	40	0.0.0.0.0.0.2.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).	0.921439886093	422
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0114569664001	1
Coq.ZArith.Znat.Zabs_nat_N	40	2.0.2.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.266684055328	126
Coq.ZArith.Znat.N2Z.id	40	0	search with cache (only 1: now destruct n).	0.00987911224365	1
Coq.ZArith.Znat.N2Z.inj	40	1.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).	1.42941594124	542
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros; only 1: now Morphisms.f_equiv).	1.18853712082	494
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.4.69	search with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.8512339592	3005
Coq.ZArith.Znat.N2Z.inj_0	40	1	search with cache (only 1: trivial).	0.0115551948547	2
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0104417800903	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0402810573578	9
Coq.ZArith.Znat.N2Z.inj_le	40	1.1	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.13312292099	4
Coq.ZArith.Znat.N2Z.inj_lt	40	1.3	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.137333869934	6
Coq.ZArith.Znat.N2Z.inj_ge	40	4.4	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.114518165588	10
Coq.ZArith.Znat.N2Z.inj_gt	40	0.3	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0150291919708	5
Coq.ZArith.Znat.N2Z.inj_abs_N	40	0.0.0.0.1.42	search with cache (only 1: destruct z; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.91824603081	4344
Coq.ZArith.Znat.N2Z.inj_add	40	3	search with cache (only 1: now destruct n, m).	0.014447927475	4
Coq.ZArith.Znat.N2Z.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.0123090744019	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0246238708496	8
Coq.ZArith.Znat.N2Z.inj_pred_max	40	2.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p).	0.0305469036102	12
Coq.ZArith.Znat.N2Z.inj_pred	40	2.0.1.1.0	search with cache (only 1: intro H; only 1: destruct n; only 1: simpl; only 1: easy; only 1: now destruct p).	0.0446829795837	23
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.4.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: induction p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.135344028473	89
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0187530517578	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0335628986359	10
Coq.ZArith.Znat.Z2N.id	40	1.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0299360752106	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: intros; only 1: now f_equal).	0.128243923187	79
Coq.ZArith.Znat.Z2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0181241035461	1
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0.1.0.0.0.0.0	search with cache (only 1: destruct n; only 1: destruct n; only 1: Nat2N.nat2N; only 1: Nat2N.nat2N; only 1: trivial; only 1: Nat2N.nat2N; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.162177085876	24
Coq.ZArith.Znat.Z2N.inj_neg	40	1	search with cache (only 1: auto).	0.0160520076752	2
Coq.ZArith.Znat.Z2N.inj_add	40	1.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.0333459377289	3
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	1.67070508003	339
Coq.ZArith.Znat.Z2N.inj_succ	40	0.0.2.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).	0.0319299697876	7
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.2.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.0458719730377	14
Coq.ZArith.Znat.Z2N.inj_compare	40	1.5	search with cache (only 1: intros; only 1: now destruct n, m).	0.699469089508	200
Coq.ZArith.Znat.Z2N.inj_le	40	0.12.0	search with cache (only 1: intros; only 1: unfold N.le, N.ge; only 1: now rewrite N2Z.inj_compare).	1.65928602219	727
Coq.ZArith.Znat.Z2N.inj_lt	40	0.0.5	search with cache (only 1: unfold N.lt, N.gt; only 1: intros Hn Hm; only 1: now rewrite N2Z.inj_compare).	0.33252286911	88
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.0.0.5.0.0.0.6	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: trivial).	4.23592686653	1742
Coq.ZArith.Znat.Z2N.inj_quot2	40	2.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0266220569611	11
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.133136034012	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	7.1	search with cache (only 1: intros; only 1: now destruct n).	0.0550701618195	11
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	search with cache (only 1: now destruct n).	0.115230083466	37
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.0128118991852	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0132479667664	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	1	search with cache (only 1: reflexivity).	0.0150701999664	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0112359523773	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0339941978455	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.2.3.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	1.5068590641	488
Coq.ZArith.Znat.Zabs2N.inj_add	40	4.2	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	2.46008515358	312
Coq.ZArith.Znat.Zabs2N.inj_mul	40	6	search with cache (only 1: now destruct n, m).	0.983583927155	266
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	1.3.1.1.0	search with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: easy).	0.872494935989	156
Coq.ZArith.Znat.Zabs2N.inj_compare	40	2.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.398344993591	76
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0163669586182	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0174829959869	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	3.0.3.0.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	2.75653505325	1137
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.8	search with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	4.93034505844	1063
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.013662815094	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	search with cache (only 1: reflexivity).	0.0108108520508	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.1.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0229678153992	7
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0129609107971	1
Coq.ZArith.Znat.Nat2Z.id	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0210270881653	6
Coq.ZArith.Znat.Nat2Z.inj	40	0.10.0	search with cache (only 1: intro H; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	2.25148010254	1007
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now f_equal).	0.0183601379395	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	8.0.2	search with cache (only 1: unfold Z.le; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	0.97443985939	254
Coq.ZArith.Znat.Nat2Z.inj_lt	40	8.2	search with cache (only 1: unfold Z.lt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	0.857378005981	155
Coq.ZArith.Znat.Nat2Z.inj_ge	40	7.2.1	search with cache (only 1: unfold Z.ge; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	0.810035943985	124
Coq.ZArith.Znat.Nat2Z.inj_gt	40	29.1	search with cache (only 1: unfold Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	14.1827249527	8910
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.2.1.2.6.0.0	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: now destruct 1 || trivial).	4.77082204819	2209
Coq.ZArith.Znat.Z2Nat.inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0175287723541	3
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.0187051296234	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.00892996788025	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.00982189178467	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00833487510681	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.00951480865479	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	1.0	search with cache (only 1: intros; only 1: now destruct n).	0.0157499313354	3
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	2.24159288406	1303
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0174469947815	7
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.00789308547974	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00932288169861	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0113022327423	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0187089443207	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.328055858612	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	2.2.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.045037984848	21
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.066428899765	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.0.4.0.1.2.2.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).	11.7766258717	4610
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.4.0.1.3.2.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	11.9412498474	5058
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0544419288635	3
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	33.1187069416	10601
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	11.11.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	9.42996883392	8299
Coq.ZArith.Zcompare.Zle_compare	40	2.2.2.3.2.0.0.23.4	search with cache (only 1: intros a b; only 1: case Z.compare_spec; only 1: intros EQ; only 1: now rewrite EQ; only 1: trivial; only 1: intros Hab; only 1: intros Hb; only 1: apply (Z.lt_irrefl 0); only 1: Z.order).	21.2171568871	19500
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.16.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	2.28002905846	1864
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0223290920258	5
Coq.ZArith.Zcompare.Zgt_compare	40	5.0	search with cache (only 1: intros; only 1: now rewrite H).	0.135193824768	15
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	16	search with cache (only 1: now destruct a).	0.506689071655	370
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0159289836884	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.021852016449	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.0.2.0	search with cache (only 1: intros Ha Hb; only 1: apply Z.rem_bound_pos; only 1: auto; only 1: auto).	0.407160043716	72
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	search with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.0380370616913	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.2.1.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0802690982819	13
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.4.1.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros Hab; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.176281929016	23
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.0586831569672	5
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.076318025589	8
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.2.2	search with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.258584976196	70
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.0.6.1.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.mod_divide; only 1: rewrite Z.rem_divide; only 1: intuition; only 1: trivial; only 1: trivial).	1.30301308632	476
Coq.ZArith.Zdigits.binary_value	40	33	search with cache (only 1: constructor).	1.92835307121	2200
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.0.0.0	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.265372991562	6
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	2.1.0	search with cache (only 1: simpl; only 1: intros; only 1: trivial).	0.316761016846	6
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.175415992737	3
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	0.0.0.0.0.0.1	search with cache (only 1: simple induction n; only 1: destruct z; only 1: auto; only 1: auto; only 1: auto; only 1: intros; only 1: reflexivity).	0.182251930237	8
Coq.ZArith.Zdigits.Z_div2_value	40	1.2.4.0.0.3	search with cache (only 1: destruct z; only 1: simpl; only 1: trivial; only 1: intros; only 1: now destruct p; only 1: now destruct 1 || trivial).	11.1536519527	2059
Coq.ZArith.Zdigits.Pdiv2	40	0.1.0.0.1.1.2.1.10.0.1.7	search with cache (only 1: intro; only 1: Z.swap_greater; only 1: intros; only 1: destruct z; only 1: trivial; only 1: simpl in *; only 1: intros Hx; only 1: induction p as [| p IHp| ]; only 1: discriminate || simpl; only 1: discriminate || simpl; only 1: discriminate; only 1: easy).	11.7075119019	8856
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.0	search with cache (only 1: intros; only 1: auto).	0.242624044418	2
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	4.0.0.0.0.2.1.2.0	search with cache (only 1: destruct z; only 1: simpl; only 1: tauto || (intro H; elim H); only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: now destruct p).	7.35006904602	2936
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	0.210033893585	10
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.8	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.143326044083	22
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.0470728874207	9
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	8	search with cache (only 1: now destruct n).	0.0574269294739	9
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	4	search with cache (only 1: now destruct n).	0.0550379753113	5
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	1	search with cache (only 1: now destruct n).	0.0254838466644	2
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40	0.1.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.30	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	40.0495438576	41899
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.10	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.672466993332	147
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	6	search with cache (only 1: now destruct n, m).	0.29944396019	140
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	search with cache (only 1: reflexivity).	0.0245761871338	1
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.0244178771973	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0253798961639	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0295798778534	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.0.1.0.1.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.599089860916	253
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0291559696198	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.0256731510162	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0260150432587	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	search with cache (only 1: reflexivity).	0.0573310852051	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.0326931476593	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.3.1.0.0.3	search with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: intuition; only 1: trivial).	0.55970287323	235
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.0.1.3	search with cache (only 1: unfold le, min; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: trivial; only 1: intuition; only 1: trivial).	0.195045948029	85
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	8.1	search with cache (only 1: intro H; only 1: now destruct n).	0.135843992233	45
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0945827960968	5
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.1.4.0	search with cache (only 1: intro H; only 1: destruct n; only 1: reflexivity; only 1: destr_eq H; only 1: destr_eq H).	0.0605370998383	10
Coq.ZArith.BinInt.Z.sgn_pos	40	1	search with cache (only 1: now destruct n).	0.13250207901	33
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0374457836151	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.0375518798828	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	1.4.3.10	search with cache (only 1: destruct m as [| m| m]; only 1: now subst; only 1: now nzsimpl; only 1: auto).	4.38686680794	948
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.0623219013214	1
Coq.ZArith.BinInt.Z.square_spec	40	1.0.0.1.0.0.0.1.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	1.72372698784	363
Coq.ZArith.BinInt.Z.sqrtrem_spec	40	0.1.7.3.1.1.0	search with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: now destruct 1).	6.05773186684	2269
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0339319705963	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.3.1.2.10.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: now repeat split; only 1: simpl; only 1: trivial).	11.4764339924	5742
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0304851531982	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: reflexivity).	0.0283551216125	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	1	search with cache (only 1: now destruct n).	0.0301518440247	2
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.0297000408173	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.0.0.2	search with cache (only 1: intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.427127122879	73
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite N.mul_comm).	0.0729007720947	7
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.0.1.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.115628004074	20
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.1.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0622971057892	9
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: trivial).	0.0569908618927	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	3	search with cache (only 1: now destruct n).	0.0357370376587	4
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0435838699341	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40	4.3.0.1.33	search with cache (only 1: destruct a as [| a| a]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: now destruct a).	4.95515012741	2588
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a).	0.0337100028992	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	5	search with cache (only 1: apply N.gt_lt_iff).	0.104381084442	17
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0623190402985	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	3	search with cache (only 1: apply N.ge_le_iff).	0.128973007202	4
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.118702888489	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.0.5.4	search with cache (only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: unfold ltb, lt; only 1: now destruct compare).	2.17781281471	690
Coq.ZArith.BinInt.Z.geb_le	40	1.0.6.9	search with cache (only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: unfold leb, le; only 1: now destruct compare).	22.4420230389	5520
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40	1	search with cache (only 1: apply mul_cancel_l).	0.0655901432037	2
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	15	search with cache (only 1: now nzsimpl').	1.52219486237	278
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.6.0.0.0.0.0.2	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	6.75575304031	1656
Coq.ZArith.BinInt.Pos2Z.id	40	1	search with cache (only 1: trivial).	0.203386068344	2
Coq.ZArith.BinInt.Pos2Z.inj	40	0	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.147680997849	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: now injection 1 || (intros; now f_equal)).	0.161159992218	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	2.2.0	search with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: trivial).	0.17783498764	12
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	3.0.2	search with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: trivial).	0.180980920792	13
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: easy).	0.148178100586	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0	search with cache (only 1: easy).	0.135824918747	1
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0927848815918	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	1.3.3	search with cache (only 1: simpl; only 1: f_equal; only 1: now destruct p).	0.12652182579	10
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.109061002731	3
Coq.ZArith.BinInt.Pos2Z.inj_sub	40	1.3.2.13.14	search with cache (only 1: revert q; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	24.3986968994	13082
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: intros H; only 1: simpl; only 1: trivial; only 1: intros H; only 1: simpl; only 1: trivial; only 1: intros H; only 1: simpl; only 1: easy).	0.230072975159	10
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	search with cache (only 1: reflexivity).	0.087947845459	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0975439548492	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0924649238586	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0985219478607	2
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	3.0	search with cache (only 1: revert q; only 1: trivial).	0.778038978577	133
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	search with cache (only 1: reflexivity).	0.110067129135	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.0726358890533	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0731439590454	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: reflexivity).	0.0743751525879	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	2	search with cache (only 1: reflexivity).	0.0900340080261	3
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.0.0.0.0.0.1.1	search with cache (only 1: simpl; only 1: destruct n as [| n| n]; only 1: now destruct 1 || intros _; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: now destruct 1 || intros _; only 1: now destruct n; only 1: now destruct 1 || intros _).	0.146916151047	26
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	search with cache (only 1: now injection 1).	0.0781381130219	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.155257940292	4
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: now injection 1).	0.377241849899	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.111615180969	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.0835709571838	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1	search with cache (only 1: easy).	0.10095500946	2
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.133783102036	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.170508861542	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	3	search with cache (only 1: now f_equal).	0.173754930496	4
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.24584197998	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	5.0.0.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.150815963745	9
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	4.0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0841348171234	8
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.145571947098	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.0770699977875	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0914371013641	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0853459835052	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.108042955399	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	search with cache (only 1: reflexivity).	0.0993030071259	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0974450111389	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0	search with cache (only 1: reflexivity).	0.0880498886108	1
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.137181043625	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0981140136719	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40	8.0.0.10.0.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct m; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct m).	3.01362490654	1499
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.0.0.0.0.1.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.109375953674	8
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	1	search with cache (only 1: apply Z.testbit_Zpos).	0.143449783325	11
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	32	search with cache (only 1: now destruct x).	2.54615688324	1224
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.0850548744202	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	1	search with cache (only 1: now destruct x).	0.200021028519	43
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.196815013885	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	8.3.2.4.1	search with cache (only 1: destruct x; only 1: now f_equal; only 1: simpl; only 1: now destruct p; only 1: easy).	5.74603199959	2598
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.10.0.6	search with cache (only 1: destruct x; only 1: trivial; only 1: now destruct p; only 1: easy).	2.9951608181	774
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.126914978027	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.212568998337	4
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.127634048462	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.133439064026	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.5.0	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	1.35395216942	17
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.1.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: reflexivity).	0.088917016983	6
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.351665973663	4
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.2	search with cache (only 1: intros; only 1: now f_equal).	0.148063182831	4
Coq.ZArith.BinInt.ZL0	40	0	search with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.242317914963	1
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	1.5.0	search with cache (only 1: change_no_check 2 with (1 + 1); only 1: symmetry; only 1: now Z.nzsimpl).	0.31116604805	9
Coq.ZArith.BinInt.Z_eq_mult	40	0	search with cache (only 1: now destruct m).	0.0778729915619	1
Coq.ZArith.Zcomplements.floor_gt0	40	0	search with cache (only 1: easy).	0.0130529403687	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	4.23.1	search with cache (only 1: Z.swap_greater; only 1: pattern n; only 1: now induction n).	2.67620491982	1587
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0	search with cache (only 1: auto).	0.0116639137268	1
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	38.0758678913	12808
Coq.ZArith.Zeven.Zodd_even_bool	40	0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.44	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	35.6748900414	19600
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	1.1.0.0.0.0.1.0.1.0.0.0.0.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: now left || now right).	28.9873020649	13480
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	28.6538851261	9126
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0836989879608	5
Coq.ZArith.Zeven.Zeven_Sn	40	13.7.0.1	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: intuition; only 1: now destruct n as [| [| | ]| [| | ]]).	26.6623430252	14231
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	13.5.2.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: intuition; only 1: now destruct n as [| [| | ]| [| | ]]).	3.20762610435	2188
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0.7	search with cache (only 1: intros EQ; only 1: now destruct n as [| [| | ]| [| | ]]).	0.908365011215	135
Coq.ZArith.Zeven.Zodd_div2	40	4.3.1.0	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [| | ]| [| | ]]).	2.38887405396	578
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	0.0.0.0.1.0.0.0.0.1.9.2	search with cache (only 1: change_no_check 2 with (1 + 1); only 1: destruct n as [| [| | ]| [| | ]]; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: now Z.nzsimpl'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now Z.nzsimpl').	18.3025140762	3794
Coq.ZArith.Zeven.Zeven_quot2	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.309093952179	18
Coq.ZArith.Zeven.Zodd_quot2	40	1	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.115571022034	29
Coq.ZArith.Zeven.Zodd_quot2_neg	40	6.0.0.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.644870996475	37
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	3.0	search with cache (only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.107368946075	11
Coq.ZArith.Zeven.Zodd_ex	40	0.1.0.0.1	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.545912027359	44
Coq.ZArith.Zeven.Zeven_2p	40	4.2.2.1.10.2	search with cache (only 1: simpl; only 1: destruct p; only 1: simpl; only 1: reflexivity; only 1: easy; only 1: reflexivity).	1.48997020721	890
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	1.1.2.0.13	search with cache (only 1: destruct p; only 1: simpl; only 1: reflexivity; only 1: now destruct p; only 1: now destruct p).	1.31590890884	416
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.1.0.1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.188407897949	15
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.124541044235	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.314692020416	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40	0.1.2.0.9.0.8	search with cache (only 1: induction n; only 1: trivial; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: easy).	5.76648783684	4221
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0119600296021	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	1	search with cache (only 1: apply Z.divide_opp_l).	0.0140311717987	2
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	2	search with cache (only 1: apply Z.divide_abs_l).	0.015191078186	3
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.0.6.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.mod_divide; only 1: generalize (Z_div_mod_full a b Hb); only 1: auto; only 1: trivial).	0.310176849365	159
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.1.0.5.5	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: intros (c, Hc); only 1: subst; only 1: apply Z.mod_mul; only 1: trivial).	1.9579539299	1204
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	2.5.0	search with cache (only 1: intro H; only 1: destruct 1; only 1: Z.order).	0.0379168987274	10
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	10.0	search with cache (only 1: intros; only 1: now apply Z.divide_pos_le).	0.196849107742	112
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	20.1	search with cache (only 1: intros x y H z; only 1: firstorder).	2.45987892151	1412
Coq.ZArith.Znumtheory.Zis_gcd_0	40	22	search with cache (only 1: firstorder).	1.50228285789	1130
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.1.9.4	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.64147400856	454
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.1	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0261480808258	5
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0522198677063	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.137234926224	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0395269393921	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	1.0.3.1.2	search with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: intuition).	0.885604858398	206
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	2.0.0.1.3	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	1.11243987083	85
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.6.0	search with cache (only 1: intros p q H H0; only 1: apply H; only 1: trivial).	0.126752138138	23
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	1.0.0.20	search with cache (only 1: simple induction 1; only 1: intros; only 1: contradict H; only 1: discriminate).	0.976654052734	759
Coq.ZArith.Znumtheory.not_prime_1	40	0.0.31	search with cache (only 1: destruct 1; only 1: contradict H; only 1: discriminate).	7.02246212959	2983
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	0.0.2	search with cache (only 1: simple induction 1; only 1: intros; only 1: now apply (Zlt_le_succ 1)).	0.0279109477997	5
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.1.0.0.0.1.2.0.7	search with cache (only 1: unfold Z.modulo; only 1: Z.swap_greater; only 1: intros Hb; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: unfold Z.modulo; only 1: unfold Z.div, Z.modulo; only 1: destruct Z.div_eucl; only 1: auto).	6.02526521683	2134
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	1.12.0.7.0	search with cache (only 1: intros Hb; only 1: Z.swap_greater; only 1: rewrite Z.mul_comm; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: now apply Z.mod_eq).	30.9081430435	11654
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.0.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.072448015213	3
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0607771873474	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	1.1.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.114845991135	6
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0611650943756	7
Coq.ZArith.Zdiv.Zmod_1_r	40	0.9.2	search with cache (only 1: intros a0; only 1: Z.nzsimpl; only 1: trivial).	1.00599908829	400
Coq.ZArith.Zdiv.Zdiv_1_r	40	3.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl).	0.24573302269	15
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.3.6.2	search with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	2.42288303375	859
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.2.0	search with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0629239082336	6
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40	0.2.6.0.23	search with cache (only 1: inversion 1; only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: apply Z.mod_mul; only 1: trivial).	14.6562020779	11589
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.6	search with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.158887147903	45
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0803210735321	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0619139671326	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.131099939346	3
Coq.ZArith.Zdiv.eqm_refl	40	5.0	search with cache (only 1: intros n; only 1: reflexivity).	0.0892531871796	7
Coq.ZArith.Zdiv.eqm_sym	40	1.1.1	search with cache (only 1: unfold eqm; only 1: intros; only 1: auto).	0.0837731361389	22
Coq.ZArith.Zdiv.eqm_trans	40	2.3.1	search with cache (only 1: unfold eqm; only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0865089893341	15
Coq.ZArith.Zdiv.eqm_setoid	40	4.0.0.12.14	search with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: auto; only 1: congruence).	2.49401378632	1438
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.10.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.987302064896	244
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.1.0	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.149569988251	30
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.1.0.1	search with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: Z.order).	0.119830131531	12
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0941941738129	5
Coq.ZArith.Zdiv.Z_div_exact_2	40	3.0.3.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: Z.order; only 1: now intros ->).	0.325212001801	10
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.1.0.2	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: trivial; only 1: auto).	0.374155044556	37
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0663459300995	5
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0434288978577	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	0.0.0.15.1	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.destruct_max n; only 1: auto; only 1: auto).	2.23308110237	1435
Coq.ZArith.Zabs.Zabs_intro	40	13.1.11	search with cache (only 1: intros a n; only 1: intros EQ; only 1: now destruct n).	2.5876159668	2682
Coq.ZArith.Zabs.Zabs_dec	40	1.1.0.7.1	search with cache (only 1: intro n; only 1: destruct n; only 1: auto; only 1: auto; only 1: auto).	0.928169965744	316
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	3.21.3	search with cache (only 1: unfold Z.le, Z.ge; only 1: unfold Z.lt, Z.gt; only 1: decide equality).	1.47493910789	1012
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	1.5	search with cache (only 1: intro H; only 1: trivial).	0.0144968032837	8
Coq.ZArith.Int.Z_as_Int.i2z_0	40	9	search with cache (only 1: trivial).	0.0109241008759	10
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.0100739002228	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	1	search with cache (only 1: trivial).	0.0190539360046	2
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.026163816452	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.0122830867767	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.14	search with cache (only 1: Z.bitwise; only 1: trivial).	0.163974046707	91
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.0108060836792	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.0105831623077	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0102939605713	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	2	search with cache (only 1: solve [ trivial | destruct (proj1 (Z.le_ngt _ _) Hi _) ]).	0.0100250244141	3
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.00992608070374	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.00941395759583	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0860497951508	2
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	search with cache (only 1: trivial).	0.0499339103699	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	10.1	search with cache (only 1: unfold Z.pow_pos; only 1: apply Pos2Nat.inj_iter).	1.89476799965	426
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	4.1.0.0.1	search with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: now destruct Hn || now destruct Hm || clear).	0.572606086731	118
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: trivial).	0.0529539585114	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0656468868256	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40
Coq.ZArith.Zpower.two_p_equiv	40
Coq.ZArith.Zpower.two_power_nat_S	40	0	search with cache (only 1: reflexivity).	0.0728991031647	1
Coq.ZArith.Zpower.shift_nat_plus	40	1.5.0.1.1.7.7.0	search with cache (only 1: symmetry; only 1: revert m; only 1: induction n as [| n IH]; only 1: now destruct x; only 1: intros m; only 1: simpl; only 1: f_equal; only 1: auto).	25.1100227833	14019
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	0	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0649240016937	1
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	2	search with cache (only 1: now apply Pos.iter_swap_gen).	0.147306919098	37
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.1.1.0.2.1.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto with zarith; only 1: intros Hx; only 1: easy; only 1: intros Hx; only 1: easy).	0.89480805397	266
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40	3.2.0.0.10.3.7.0	search with cache (only 1: rewrite two_p_equiv; only 1: destruct x; only 1: split; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: easy).	35.0359201431	19698
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	3	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.281064033508	26
Coq.ZArith.auxiliary.Zle_left	40	1	search with cache (only 1: apply Z.le_0_sub).	0.180530786514	2
Coq.ZArith.auxiliary.Zle_left_rev	40	3	search with cache (only 1: apply Z.le_0_sub).	0.0991158485413	12
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	search with cache (only 1: apply Z.lt_0_sub).	0.0768711566925	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	7	search with cache (only 1: apply Z.lt_0_sub).	0.0526609420776	8
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	1.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0599811077118	15
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change_no_check (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.17186999321	63
Coq.ZArith.auxiliary.Zgt_left_gt	40	2.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0512549877167	5
Coq.ZArith.auxiliary.Zgt_left_rev	40	1.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0831229686737	19
Coq.ZArith.auxiliary.Zle_mult_approx	40	34.10.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos').	22.5076990128	14991
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	5.3.0	search with cache (only 1: unfold Z.le, Z.max; only 1: intro Hn; only 1: now case Z.compare_spec).	0.138606071472	52
Coq.ZArith.Zmax.Zpos_max_1	40	17.11	search with cache (only 1: symmetry; only 1: now destruct p).	0.846251010895	588
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	7.4.18.65	search with cache (only 1: destruct (Z.le_decidable m n); only 1: Z.solve_min; only 1: left; only 1: Z.solve_min).	34.5349910259	32262
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	4.1.2.18.3.23	search with cache (only 1: induction p using Pos.peano_ind; only 1: reflexivity; only 1: induction p; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	13.5732839108	7568
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	1.1.0.26	search with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.732587099075	515
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.0.0.1.0.0.3	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto with relations; only 1: left; only 1: auto; only 1: right; only 1: auto with relations).	0.993105173111	222
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.5	search with cache (only 1: intro H; only 1: Z.order).	0.11795091629	34
Coq.ZArith.Zorder.Zlt_not_le	40	0.5	search with cache (only 1: intro H; only 1: Z.order).	0.0702700614929	28
Coq.ZArith.Zorder.Zle_not_gt	40	6	search with cache (only 1: auto).	0.177959918976	56
Coq.ZArith.Zorder.Zgt_not_le	40	2.4	search with cache (only 1: intro H; only 1: auto).	0.137734889984	37
Coq.ZArith.Zorder.Znot_ge_lt	40	10.6.3	search with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).	0.706959962845	438
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0307149887085	4
Coq.ZArith.Zorder.Znot_gt_le	40	1	search with cache (only 1: trivial).	0.0175108909607	2
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0565950870514	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	0.2.1	search with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.119489908218	24
Coq.ZArith.Zorder.Zgt_irrefl	40	2.2.15.14	search with cache (only 1: induction n; only 1: easy || now destruct 1; only 1: reflexivity; only 1: reflexivity).	1.6598842144	1739
Coq.ZArith.Zorder.Zle_lt_or_eq	40	1.0.0.1.0.0.8.0	search with cache (only 1: unfold Z.le, Z.max; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: now intuition; only 1: left; only 1: auto; only 1: now intuition).	4.76881098747	1806
Coq.ZArith.Zorder.Zgt_trans	40	0.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.127861022949	26
Coq.ZArith.Zorder.Zle_gt_trans	40	3.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.0364191532135	6
Coq.ZArith.Zorder.Zgt_le_trans	40	1.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0220119953156	3
Coq.ZArith.Zorder.Zge_trans	40	2.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.140799045563	4
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0258991718292	5
Coq.ZArith.Zorder.Zsucc_gt_reg	40	1.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.04048204422	20
Coq.ZArith.Zorder.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0166149139404	2
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0115718841553	1
Coq.ZArith.Zorder.Zgt_succ	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0190529823303	3
Coq.ZArith.Zorder.Znot_le_succ	40	0.0.5.4	search with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.897912979126	99
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0110659599304	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0145990848541	1
Coq.ZArith.Zorder.Zgt_succ_le	40	2.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0215580463409	6
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0115370750427	1
Coq.ZArith.Zorder.Zle_succ_gt	40	6.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0262451171875	8
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0116238594055	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.7	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0305569171906	12
Coq.ZArith.Zorder.Zle_neg_pos	40	0.0	search with cache (only 1: intros a b; only 1: easy).	0.0291891098022	2
Coq.ZArith.Zorder.Zgt_pos_0	40	5.0	search with cache (only 1: intros n; only 1: easy).	0.243280172348	23
Coq.ZArith.Zorder.Zle_0_pos	40	0.0	search with cache (only 1: intros a; only 1: easy).	0.0207149982452	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0178940296173	1
Coq.ZArith.Zorder.Zle_0_nat	40	0.0.3.2.1.2	search with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: Z.order'; only 1: simpl; only 1: easy).	1.14631009102	322
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0178480148315	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_reg_l	40	2	search with cache (only 1: apply Z.add_le_mono_l).	0.0124111175537	3
Coq.ZArith.Zorder.Zplus_le_reg_r	40
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	4	search with cache (only 1: apply Z.add_lt_mono_l).	0.0217838287354	11
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	30.19	search with cache (only 1: unfold Z.lt; only 1: apply Z.add_lt_mono_r).	4.40856289864	5844
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0285398960114	6
Coq.ZArith.Zorder.Zplus_gt_reg_r	40
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.10	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.207653045654	54
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0190188884735	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0106391906738	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0139119625092	2
Coq.ZArith.Zorder.Zmult_gt_compat_l	40
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	5.0.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0393261909485	18
Coq.ZArith.Zorder.Zmult_ge_compat_l	40
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	6.1	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0384120941162	15
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.019788980484	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0103569030762	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.017951965332	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0098249912262	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0299389362335	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0275781154633	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	9.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0571219921112	31
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	1.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0275559425354	4
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.7	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.137012958527	51
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	2	search with cache (only 1: apply Z.le_0_sub).	0.0140628814697	3
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.0.1.0.3.12.4.11	search with cache (only 1: unfold Z.leb, Z.le; only 1: rewrite Z.compare_sub; only 1: unfold Z.sub; only 1: destruct (n + - m) as [| p| p]; only 1: simpl; only 1: easy'; only 1: easy'; only 1: easy').	5.71488308907	5125
Coq.ZArith.Zbool.Zle_imp_le_bool	40	1	search with cache (only 1: apply Z.leb_le).	0.0383780002594	2
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	1.9	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.455412149429	58
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	2	search with cache (only 1: trivial).	0.0830228328705	3
Coq.ZArith.Zbool.Zone_min_pos	40	0.0.6.9.4	search with cache (only 1: intros Hn; only 1: destruct n; only 1: now destruct Hn || easy; only 1: now destruct p; only 1: now destruct p).	1.90074491501	852
Coq.ZArith.Zbool.Zle_is_le_bool	40	3.2	search with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.0564160346985	21
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.0.2	search with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.110175848007	27
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.0997929573059	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	1.1.0.4.1.5	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: congruence; only 1: congruence; only 1: now try Z.order').	1.71474504471	423
Coq.ZArith.Zbool.Zeq_bool_neq	40	3.1.0.1.2.14	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	3.89705920219	1621
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	search with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0321199893951	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	1.1.1.2.2	search with cache (only 1: intros; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	1.47895979881	510
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0289571285248	5
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.2.2	search with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.0775392055511	24
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.2.3	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.928995132446	196
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.2.0.0	search with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.207185029984	35
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	1.2.1	search with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: auto with arith).	0.0469441413879	18
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto; only 1: left; only 1: auto).	1.76257514954	411
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.1	search with cache (only 1: intro n; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0269258022308	5
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.0342600345612	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.0.1.0.1.4	search with cache (only 1: destruct b as [| b| b]; only 1: Z.order; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: now elim Hb).	0.711286067963	174
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.035835981369	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.3	search with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0238230228424	5
Coq.Program.Wf.Fix_F_sub_rect	40
Coq.Program.Wf.eq_Fix_F_sub	40	0.2.3	search with cache (only 1: apply Fix_F_inv; only 1: unfold well_founded; only 1: auto).	0.0430099964142	17
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	3.6.3.4	search with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	0.195227861404	713
Coq.Program.Equality.JMeq_eq_refl	40	1	search with cache (only 1: apply UIP_refl).	0.00371789932251	2
Coq.Program.Equality.UIP_refl_refl	40	0	search with cache (only 1: apply UIP).	0.00676703453064	1
Coq.Program.Equality.inj_pairT2_refl	40	4	search with cache (only 1: apply UIP).	0.00801801681519	5
Coq.Program.Equality.solution_left	40	1.1.8	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0228300094604	67
Coq.Program.Equality.solution_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.00750589370728	3
Coq.Program.Equality.deletion	40	0.0	search with cache (only 1: intros; only 1: assumption).	0.00608015060425	2
Coq.Program.Equality.simplification_heq	40
Coq.Program.Equality.simplification_existT2	40	0.1.0.1.19	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.105050086975	569
Coq.Program.Equality.simplification_existT1	40	0.1.0.0.1.14.9.16	search with cache (only 1: intro UIP_refl; only 1: intro H; only 1: apply UIP_refl; only 1: dependent rewrite H; only 1: trivial; only 1: dependent rewrite H; only 1: red; only 1: reflexivity).	0.870880842209	6197
Coq.Program.Equality.simplification_K	40	0.2.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.00701498985291	5
Coq.Program.Combinators.compose_id_left	40	1	search with cache (only 1: reflexivity).	0.02747797966	2
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0248148441315	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0288751125336	2
Coq.Program.Combinators.flip_flip	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0161120891571	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0161597728729	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0380260944366	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40	0.0.0.0.0.1.0.3.2.4	search with cache (only 1: unfold PermutSetoid.permutation, meq; only 1: simpl; only 1: induction l as [| x l IHl]; only 1: trivial; only 1: intros H; only 1: specialize (H x); only 1: simpl in H; only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate; only 1: now elim NEQ).	3.79635596275	1891
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.0.0.0.0.4.1.3.1.1	search with cache (only 1: induction stack as [| [| ]]; only 1: intros; only 1: constructor; only 1: intros; only 1: destruct H; only 1: simpl; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	3.70956397057	3218
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40	0.0.30	search with cache (only 1: fix gcd_divide 1; only 1: intros n m; only 1: auto with arith).	10.8401582241	7953
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	1.0.1	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0228548049927	5
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	0.0.1.3	search with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.0388231277466	19
Coq.Sorting.Permutation.Permutation_cons	40	1.4.0	search with cache (only 1: intros a a' Ha n; only 1: subst; only 1: auto).	0.0340580940247	8
Coq.Sorting.Permutation.Permutation_in	40	0.3.0.0.0.0.0.3.0	search with cache (only 1: intros l l' Hperm; only 1: induction 1; only 1: auto; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto; only 1: firstorder; only 1: auto).	2.40972900391	1249
Coq.Sorting.Permutation.Permutation_in'	40	0.1.0.0.0.1.3.7.1	search with cache (only 1: intros a a' Ha n; only 1: subst; only 1: induction 1; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	16.5955691338	6531
Coq.Sorting.Permutation.Permutation_app_tail	40	1.23	search with cache (only 1: fix gcd_divide 1; only 1: auto).	14.1196761131	9000
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.1.0.3.0	search with cache (only 1: intros l l' tl Hperm; only 1: induction l as [| a l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.044261932373	10
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	1	search with cache (only 1: auto).	0.0181019306183	2
Coq.Sorting.Permutation.Permutation_rev	40	0.2.1.23.0.0.2	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: induction l; only 1: auto; only 1: rewrite <- IHl; only 1: auto).	13.5073599815	16578
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	1.0.0.0.0.0.0.0.0.2	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.345205068588	280
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40	14.2.0.0.0.0.0.8.0	search with cache (only 1: unfold not; only 1: induction l as [| x l]; only 1: simpl; only 1: intros l x HF; only 1: apply Permutation_nil in HF; only 1: discriminate; only 1: simpl; only 1: intros; only 1: eauto).	34.6765851974	36857
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40	0.0.0.4.0	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: now constructor).	1.04174900055	9
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.0.0.2.0	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_head; only 1: now constructor; only 1: apply Add_app).	1.03708195686	7
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	16	search with cache (only 1: firstorder).	0.642563819885	262
Coq.Sorting.PermutSetoid.permut_sym	40	3.4	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0621910095215	9
Coq.Sorting.PermutSetoid.permut_trans	40	1.0.1.2	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	0.29016494751	31
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	0.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.105374097824	4
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40	0.0.0.0.0.0.0.11.1.1	search with cache (only 1: unfold permutation, meq in *; only 1: simpl; only 1: intro a; only 1: intros; only 1: generalize (H a0); only 1: destruct (eqA_dec a a0); only 1: auto; only 1: clear H; only 1: simpl; only 1: auto with arith).	20.4972250462	10083
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	1.0.18.6.0	search with cache (only 1: intros; only 1: intuition; only 1: destruct (eqA_dec a a'); only 1: auto; only 1: congruence).	5.16588616371	2750
Coq.Sorting.PermutSetoid.permut_app_inv2	40	2.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	4.9315700531	849
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	2.0.0.0.0.0.0.0.0.3.0.0	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: apply plus_reg_l with (if eqA_dec a a0 then 1 else 0); only 1: rewrite H; only 1: clear H; only 1: symmetry; only 1: rewrite Nat.add_comm, <- !Nat.add_assoc; only 1: auto with arith).	24.8275518417	5331
Coq.Sorting.PermutSetoid.if_eqA_else	40	0.2.9.9.0	search with cache (only 1: intros; only 1: intuition; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: congruence; only 1: auto).	2.60178422928	1832
Coq.Sorting.PermutSetoid.if_eqA_refl	40	2.2.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	0.095577955246	9
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.0.1.1	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: inversion 1; only 1: auto with arith).	1.30123615265	78
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40	5.0.0.0.1.5.0.4.3	search with cache (only 1: intros l1 l2; only 1: unfold permutation, meq; only 1: intro a; only 1: rewrite multiplicity_InA; only 1: simpl; only 1: intros H; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: omega).	30.1305549145	14919
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.17.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto; only 1: auto; only 1: auto).	36.8299081326	12660
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.4.3	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.0561048984528	27
Coq.Sorting.Sorted.Sorted_inv	40	1.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.032103061676	4
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.1.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.110049009323	4
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0261240005493	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	6.0	search with cache (only 1: intros n; only 1: reflexivity).	0.111005067825	8
Coq.Sorting.Heap.leA_Tree_Node	40	1.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0918569564819	3
Coq.Sorting.Heap.invert_heap	40	0.12	search with cache (only 1: inversion 1; only 1: auto).	0.688785791397	168
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.2.0.0.0.1.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).	1.6878631115	511
Coq.Sorting.Heap.low_trans	40	6.1.2.0.8	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: eauto with *).	4.04139184952	1567
Coq.Sorting.Heap.Equivalence_instance_0	40	7.1.1.1	search with cache (only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: congruence).	1.39665794373	347
Coq.Sorting.Heap.Proper_instance_0	40	0.0.0	search with cache (only 1: repeat intro; only 1: simpl; only 1: auto).	0.0765738487244	3
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	0.6	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.353528022766	21
Coq.Sorting.Heap.list_to_heap	40	1.1	search with cache (only 1: fix merge 1; only 1: auto).	0.126309871674	4
Coq.Sorting.Heap.heap_to_list	40	1.12.7	search with cache (only 1: intro; only 1: fix merge 1; only 1: auto with datatypes).	1.6317448616	855
Coq.Sorting.Heap.treesort	40	3.5	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.148367881775	20
Coq.Init.Wf.Acc_inv	40
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.016410112381	12
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0134360790253	4
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40
Coq.Init.Tactics.decide_right	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.00975704193115	4
Coq.Init.Peano.pred_Sn	40	1	search with cache (only 1: reflexivity).	0.00734901428223	2
Coq.Init.Peano.not_eq_S	40	4.1	search with cache (only 1: intros; only 1: auto).	0.0234229564667	13
Coq.Init.Peano.O_S	40	0	search with cache (only 1: discriminate).	0.0191872119904	1
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.3.1.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0120539665222	10
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0155279636383	6
Coq.Init.Peano.plus_n_Sm	40	2.2.0.2	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0139021873474	10
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0104219913483	6
Coq.Init.Peano.mult_n_O	40	0.0.0.4	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00991797447205	8
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.2	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00814199447632	5
Coq.Init.Peano.le_n_S	40	0.0.6.0	search with cache (only 1: intros n m; only 1: induction 1; only 1: auto; only 1: auto).	0.0117609500885	15
Coq.Init.Peano.nat_case	40	3.6.1	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.03404712677	103
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.0.0.2.0.0.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.74524307251	1553
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.974091053009	2281
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.17419314384	2453
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	0.0.6.1.2.0	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite <- ?IHn; only 1: trivial).	1.56610703468	2745
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0152380466461	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00936102867126	3
Coq.Init.Datatypes.surjective_pairing	40	1.7	search with cache (only 1: intros A B [H1 H2]; only 1: reflexivity).	0.0121810436249	17
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.5	search with cache (only 1: destruct H; only 1: reflexivity).	0.0258581638336	22
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	1.1.1.1.3	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0200490951538	61
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.1.0.1.0.0.0	search with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	9.57889509201	41534
Coq.Init.Datatypes.CompOpp_iff	40	0.0.1.0.0.3.1.3.0.5.0.0.0.2.1.4.3	search with cache (only 1: split; only 1: intro H; only 1: reflexivity || destruct H; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct c, c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: auto; only 1: discriminate; only 1: auto; only 1: auto).	16.608549118	116292
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0029308795929	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0255060195923	152
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40
Coq.Init.Logic.imp_iff_compat_l	40
Coq.Init.Logic.imp_iff_compat_r	40	2.1.1.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: auto; only 1: intros H ?; only 1: auto).	0.0117299556732	37
Coq.Init.Logic.not_iff_compat	40
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.5.1	search with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.219814062119	967
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40	0.1.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.4.0.0.0.0.0.0.3.0.1.1.0.0.0.0.0	search with cache (only 1: intros ? ? ? Fl Fr; only 1: split; only 1: intros [Hl Hr]; only 1: split; only 1: intros; only 1: destruct Hr; only 1: left; only 1: destruct Hl; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct Fl; only 1: assumption; only 1: assumption; only 1: destruct Hl; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct Fl; only 1: assumption; only 1: assumption; only 1: destruct Fl; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct Hr; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct Fr; only 1: assumption; only 1: assumption; only 1: intros [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	5.49946379662	52610
Coq.Init.Logic.or_comm	40	0.0.0.0.5.0.3.0.1.5.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.461930036545	4413
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0079071521759	2
Coq.Init.Logic.iff_to_and	40	2.2.1.2	search with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.0486569404602	57
Coq.Init.Logic.inst	40	5.0	search with cache (only 1: intros; only 1: trivial).	0.00863790512085	7
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.00874304771423	3
Coq.Init.Logic.absurd	40
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	5.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0177140235901	8
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.016618013382	2
Coq.Init.Logic.f_equal	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00888299942017	2
Coq.Init.Logic.not_eq_sym	40	5.1.3	search with cache (only 1: intros; only 1: destruct 1; only 1: auto).	0.0260438919067	76
Coq.Init.Logic.eq_sind_r	40	5.4	search with cache (only 1: destruct 2; only 1: auto).	0.0143887996674	32
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.013612985611	4
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0129990577698	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.014139175415	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40
Coq.Init.Logic.rew_opp_r	40	0.5	search with cache (only 1: destruct H; only 1: reflexivity).	0.0192608833313	15
Coq.Init.Logic.rew_opp_l	40	0.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0165989398956	4
Coq.Init.Logic.f_equal2	40
Coq.Init.Logic.f_equal3	40	0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0172090530396	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0103991031647	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.012669801712	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0201590061188	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0295379161835	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0191888809204	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00798583030701	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00781583786011	2
Coq.Init.Logic.eq_trans_assoc	40	0.1.6.0.4.0	search with cache (only 1: destruct e; only 1: intro H; only 1: destruct H; only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.239305973053	607
Coq.Init.Logic.rew_map	40	2.2.4	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0257859230042	28
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0196871757507	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0167410373688	2
Coq.Init.Logic.rew_swap	40	0.2.1.2	search with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0171101093292	24
Coq.Init.Logic.rew_compose	40	2.8.0	search with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.0428559780121	88
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	1.0	search with cache (only 1: intros A C h1 h2; only 1: reflexivity).	0.0179779529572	3
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40	0.4	search with cache (only 1: destruct e; only 1: reflexivity).	0.0176720619202	12
Coq.Init.Logic.eq_trans_sym_distr	40
Coq.Init.Logic.eq_trans_rew_distr	40	0.3	search with cache (only 1: destruct e, e'; only 1: reflexivity).	0.011855840683	13
Coq.Init.Logic.rew_const	40	0.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00900387763977	3
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	1.6.3	search with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.0246179103851	80
Coq.Init.Logic.inhabited_covariant	40	3.1.10	search with cache (only 1: intro; only 1: destruct 1; only 1: auto).	0.0532448291779	209
Coq.Init.Logic.eq_stepl	40	0.1.4	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0246818065643	8
Coq.Init.Logic.iff_stepl	40	12.11.2.0	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.919013023376	9043
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.3.12.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: destruct H; only 1: reflexivity).	0.159239053726	530
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0214500427246	2
Coq.Init.Logic_Type.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0222849845886	2
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.022185087204	2
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0221099853516	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0237400531769	5
Coq.Init.Logic_Type.identity_ind_r	40	0.4.0	search with cache (only 1: intros A x P H y H0; only 1: destruct H0 in H; only 1: auto).	0.0237600803375	7
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.0221769809723	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.026242017746	3
Coq.Init.Specif.sigT_eta	40	0.10	search with cache (only 1: destruct p; only 1: reflexivity).	0.0143389701843	33
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00806403160095	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0082049369812	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00821208953857	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.3.13	search with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: trivial).	0.0321700572968	300
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0117220878601	5
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00847411155701	4
Coq.Init.Specif.eq_existT_curried_map	40
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00788283348083	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0080099105835	4
Coq.Init.Specif.eq_sig_uncurried	40	0.1.0.1.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0140130519867	8
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.12.2.0.11.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct 1; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried; only 1: exists x; only 1: trivial).	1.01603794098	3333
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0109701156616	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	0.0.0.0.0.14	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.52064704895	652
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	2.12.0.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried).	7.224807024	7108
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0132050514221	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.00889801979065	4
Coq.Init.Specif.eq_sig2_uncurried	40	0.2.9.0.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.316066980362	259
Coq.Init.Specif.eq_sig2_uncurried_iff	40
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0130200386047	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00479912757874	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.0.0.0.0.3.1.0.0	search with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	1.40987896919	816
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0286448001862	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0606520175934	3
Coq.QArith.Qreduction.Qminus'_correct	40	2.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0661089420319	4
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	2.4.4.0.1.0	search with cache (only 1: split; only 1: intros E; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto; only 1: intros E; only 1: now rewrite !Qred_correct).	1.8569009304	498
Coq.QArith.Qreduction.Qred_lt	40	1.5.5.0.1.1	search with cache (only 1: split; only 1: intros E; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto; only 1: intros E; only 1: now rewrite !Qred_correct).	2.60084986687	599
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	4.0.16	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qle_Qabs).	2.08663415909	1346
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	3.0.0.0.0.0.3.0	search with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: red; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto with *).	1.82102704048	427
Coq.QArith.Qfield.ex1	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.39404797554	5
Coq.QArith.Qfield.ex2	40	0.0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.390060901642	6
Coq.QArith.Qfield.ex3	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.177911996841	5
Coq.QArith.Qfield.ex4	40	0	search with cache (only 1: easy).	0.126134872437	1
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0749559402466	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0629560947418	1
Coq.QArith.Qfield.ex7	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.114073991776	4
Coq.QArith.Qfield.ex8	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.23113489151	4
Coq.QArith.Qfield.ex9	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.055871963501	2
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	3.2.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.527806043625	40
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0801849365234	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.0.7	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	1.11639499664	170
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: reflexivity).	0.0939509868622	3
Coq.QArith.Qcanon.Qcgt_alt	40	0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.141598939896	3
Coq.QArith.Qcanon.Qcle_alt	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0954551696777	2
Coq.QArith.Qcanon.Qcge_alt	40	0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.103714942932	4
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: auto with qarith).	0.0873010158539	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	0.6.4	search with cache (only 1: intros (x, y); only 1: qc; only 1: ring).	0.549090862274	200
Coq.QArith.Qcanon.Qcplus_0_r	40	1.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.123373985291	4
Coq.QArith.Qcanon.Qcplus_comm	40	1.5.2.1	search with cache (only 1: destruct x; only 1: intros (x, y); only 1: qc; only 1: ring).	0.981762886047	352
Coq.QArith.Qcanon.Qcopp_involutive	40	0.4.0	search with cache (only 1: intros a; only 1: qc; only 1: ring).	0.103494882584	7
Coq.QArith.Qcanon.Qcplus_opp_r	40	4.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.142695188522	7
Coq.QArith.Qcanon.Qcmult_assoc	40	1.1.4	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: qc; only 1: ring).	0.134305953979	18
Coq.QArith.Qcanon.Qcmult_0_l	40	0.0.0.0	search with cache (only 1: intros; only 1: qc; only 1: compute; only 1: reflexivity).	0.100409984589	4
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.134129047394	6
Coq.QArith.Qcanon.Qcmult_1_l	40	2.1.2.3	search with cache (only 1: unfold Q2Qc; only 1: intros (x, y); only 1: qc; only 1: ring).	2.02080202103	242
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.116984844208	5
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.219568967819	11
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	2.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.267619848251	5
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	3.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.168389081955	6
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	3.2.0.0	search with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.310250997543	41
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.117970943451	6
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40	0.9.5.0	search with cache (only 1: intros; only 1: qc; only 1: apply Qdiv_mult_l; only 1: auto).	6.92092204094	2593
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.2.4.1	search with cache (only 1: intros n; only 1: red; only 1: red; only 1: auto with zarith).	0.269824028015	55
Coq.QArith.Qcanon.Qcle_antisym	40	8.8.0	search with cache (only 1: intros x y; only 1: intro H; only 1: auto with qarith).	3.38279294968	1250
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	1.0.1.7	search with cache (only 1: intros; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).	2.28031587601	242
Coq.QArith.Qcanon.Qclt_le_weak	40	8.1.1	search with cache (only 1: intros a b H; only 1: red; only 1: intuition).	1.44800281525	177
Coq.QArith.Qcanon.Qcle_lt_trans	40	0.3.0.0.0.0.0	search with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eapply Qle_trans; only 1: eauto; only 1: auto with qarith; only 1: eauto).	0.129383087158	14
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	0.1.1.0.3	search with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.608162164688	108
Coq.QArith.Qcanon.Qcnot_lt_le	40	3.1.2	search with cache (only 1: unfold Qcle, Qclt; only 1: intros (x1, x2) (y1, y2); only 1: apply Z.nlt_ge).	0.389629840851	45
Coq.QArith.Qcanon.Qcnot_le_lt	40	5.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with *).	0.104170799255	13
Coq.QArith.Qcanon.Qclt_not_le	40	8.0	search with cache (only 1: intros n m; only 1: apply Z.lt_nge).	0.307821989059	16
Coq.QArith.Qcanon.Qcle_not_lt	40	5.1	search with cache (only 1: intros n m; only 1: apply Z.le_ngt).	0.174822092056	47
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.0.5	search with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.23478102684	29
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40	5.0.0.3.0.0.0.3	search with cache (only 1: unfold Qclt, Qcle; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r, Z.mul_opp_l, <- Z.lt_sub_lt_add_r, Z.opp_involutive; only 1: reflexivity).	4.79476308823	1477
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	0.0.5.0.2.1.1	search with cache (only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto; only 1: auto with qarith).	4.23189687729	1410
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	6.0.2	search with cache (only 1: intros; only 1: qc; only 1: now induction n).	0.294250011444	74
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.1.2.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.125717878342	10
Coq.QArith.Qreals.IZR_nz	40	0.1	search with cache (only 1: intro abs; only 1: now apply not_0_IZR).	0.335676193237	23
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	1.0	search with cache (only 1: symmetry; only 1: reflexivity).	0.0525851249695	3
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.151791810989	11
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	4	search with cache (only 1: intuition).	0.0453410148621	5
Coq.QArith.QArith_base.Qeq_sym	40	3.1	search with cache (only 1: symmetry; only 1: trivial).	0.0819809436798	6
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	0.0.0.0.0.1.19.3.5.20	search with cache (only 1: constructor; only 1: auto with qarith; only 1: auto with qarith; only 1: red; only 1: intros x y z; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	21.5194158554	17602
Coq.QArith.QArith_base.Qeq_dec	40	0.0.0.7	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.262570858002	25
Coq.QArith.QArith_base.Qeq_bool_iff	40	2.0.6.17	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: split; only 1: apply Zeq_is_eq_bool; only 1: apply Zeq_is_eq_bool).	2.54350399971	1594
Coq.QArith.QArith_base.Qeq_bool_eq	40	1	search with cache (only 1: apply Zeq_is_eq_bool).	0.0636470317841	2
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0492250919342	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40	8.2.12.0	search with cache (only 1: symmetry; only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	5.89413094521	3638
Coq.QArith.QArith_base.Qle_bool_imp_le	40	4	search with cache (only 1: apply Zle_is_le_bool).	0.066162109375	5
Coq.QArith.QArith_base.Qnot_eq_sym	40	0	search with cache (only 1: auto with qarith).	0.0538990497589	1
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.8	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.0696411132812	10
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.7	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.0918328762054	20
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.0.0.6	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.39276099205	116
Coq.QArith.QArith_base.Qmake_Qdiv	40	2.1.4.1.4	search with cache (only 1: Z.bitwise; only 1: f_equal; only 1: simpl; only 1: Z.bitwise; only 1: now Z.nzsimpl).	1.11467504501	280
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	7.2.0.1	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now f_equiv).	2.47037100792	660
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	1	search with cache (only 1: easy).	0.0739769935608	2
Coq.QArith.QArith_base.Qplus_assoc	40	2.1.3.1.2.2	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: trivial).	7.64439606667	671
Coq.QArith.QArith_base.Qplus_0_l	40	2.0.0.3	search with cache (only 1: unfold Qeq; only 1: intros; only 1: simpl; only 1: ring).	1.13258385658	21
Coq.QArith.QArith_base.Qplus_0_r	40	0.4.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.85843706131	9
Coq.QArith.QArith_base.Qplus_comm	40	3.4.0.1.8	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros a b; only 1: simpl_mult; only 1: ring).	7.5736579895	1036
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.128274202347	4
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.141207933426	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.354682922363	5
Coq.QArith.QArith_base.Qmult_0_l	40	4.1	search with cache (only 1: intros; only 1: auto with qarith).	0.0461950302124	7
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.1.3.2	search with cache (only 1: intros n; only 1: induction n; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	1.37582206726	85
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.2.1.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.67243409157	228
Coq.QArith.QArith_base.Qmult_comm	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.126959085464	13
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.2.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.19562792778	7
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.207154035568	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	7.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).	0.117094039917	26
Coq.QArith.QArith_base.inject_Z_opp	40	1	search with cache (only 1: now destruct x).	0.0447709560394	2
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	3.5.2.2.0.5.1	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: Z.bitwise; only 1: f_equiv; only 1: simpl_mult; only 1: ring).	11.957005024	3297
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0996451377869	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	3	search with cache (only 1: intuition).	0.0777549743652	4
Coq.QArith.QArith_base.Qle_antisym	40	5.4	search with cache (only 1: red; only 1: apply Z.le_antisymm).	0.180506944656	28
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40	0.0.14	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: now rewrite !Z.mul_1_r).	0.800663948059	372
Coq.QArith.QArith_base.Qle_lteq	40	11.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_eq_cases).	1.06131505966	243
Coq.QArith.QArith_base.Qlt_le_weak	40	13.6.12	search with cache (only 1: unfold Qlt; only 1: intuition; only 1: Z.order).	2.17979502678	1365
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	8.13	search with cache (only 1: intuition; only 1: now apply Z.ge_le).	2.62379193306	630
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	2	search with cache (only 1: apply Z.nle_gt).	0.0439991950989	3
Coq.QArith.QArith_base.Qle_not_lt	40	3	search with cache (only 1: apply Z.nlt_ge).	0.0508630275726	4
Coq.QArith.QArith_base.Qle_lt_or_eq	40	4.0.2.5	search with cache (only 1: unfold Qle, Qlt; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: apply Z.lt_eq_cases).	2.46539998055	571
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40	0.1.0.1.1.0.0	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: auto with zarith; only 1: intros; only 1: auto with qarith; only 1: intros; only 1: auto with qarith).	0.559140920639	70
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.121516942978	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40	1.3.0.0.1.7.0.0.0.1.0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite <- Hy; only 1: clear y' Hy; only 1: induction y; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Hx; only 1: reflexivity; only 1: simpl; only 1: unfold Qpower_positive; only 1: rewrite Hx; only 1: reflexivity).	30.0020289421	14694
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40	0.0.0.0.1.8.0	search with cache (only 1: intros; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	11.0114750862	1839
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.527954816818	10
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	0.1.5.0	search with cache (only 1: intros a; only 1: simpl; only 1: zero_or_not a; only 1: apply Z.div_1_r).	0.212538003922	26
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.1.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.353590011597	21
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.0.0.0.1.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: symmetry in H; only 1: symmetry in H; only 1: auto with *).	0.415765047073	51
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.1.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.055144071579	10
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.0.2.1	search with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate)).	0.0483729839325	17
Coq.QArith.Qabs.Zabs_Qabs	40	0.0.0.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: auto).	0.032261133194	4
Coq.QArith.Qabs.Qabs_opp	40	0.0.0.0.0.0.1.6	search with cache (only 1: intros [[| n| n] d]; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	8.51806402206	2732
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	2.4.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: ring).	0.649108886719	164
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	2.90249490738	520
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	0.0.0.0.1.1.0.0.0.11	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: auto with zarith; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: red; only 1: simpl; only 1: discriminate).	19.1749820709	7930
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	0.1	search with cache (only 1: red; only 1: trivial).	0.00375485420227	3
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.00406289100647	2
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00318098068237	1
Coq.Classes.CMorphisms.pointwise_pointwise	40
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: auto).	0.00482511520386	1
Coq.Classes.CMorphisms.subrelation_respectful	40	8	search with cache (only 1: simpl_crelation).	0.0186121463776	9
Coq.Classes.CMorphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.0040340423584	1
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00435090065002	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	4.6	search with cache (only 1: intros H ?; only 1: simpl_crelation).	0.235279083252	43
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: firstorder).	0.00543808937073	1
Coq.Classes.CMorphisms.forall_subrelation	40	0.1	search with cache (only 1: reduce; only 1: firstorder).	0.0105791091919	3
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00505399703979	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00444507598877	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00518202781677	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.0053539276123	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.00931692123413	2
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0897839069366	1
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0229449272156	1
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	2.2.2	search with cache (only 1: transitivity x0; only 1: firstorder; only 1: firstorder).	12.2309291363	646
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	3.4.0	search with cache (only 1: transitivity y; only 1: simpl_crelation; only 1: simpl_crelation).	2.09265208244	326
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	4.4.0	search with cache (only 1: transitivity x0; only 1: simpl_crelation; only 1: simpl_crelation).	1.59544992447	1203
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0888609886169	1
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	6.5.0	search with cache (only 1: transitivity y; only 1: assumption; only 1: auto).	1.50938391685	2468
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	3.0.5.0.0	search with cache (only 1: split; only 1: intros; only 1: firstorder; only 1: intros; only 1: firstorder).	24.2133600712	4809
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.00878500938416	1
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.00513410568237	2
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00766801834106	1
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	1	search with cache (only 1: firstorder).	0.00876092910767	2
Coq.Classes.CMorphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.0131070613861	1
Coq.Classes.CMorphisms.flip1	40	0	search with cache (only 1: firstorder).	0.00862407684326	1
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00797510147095	1
Coq.Classes.CMorphisms.eq_subrelation	40	5.2	search with cache (only 1: hnf; only 1: simpl_crelation).	0.0190160274506	17
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00797390937805	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00741100311279	1
Coq.Classes.CMorphisms.proper_proper	40	0.2.0.0.0.2	search with cache (only 1: reduce; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.105314016342	10
Coq.Classes.CMorphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.00860404968262	1
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00476408004761	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	3.3	search with cache (only 1: reduce; only 1: auto).	0.105079889297	8
Coq.Classes.CMorphisms.proper_sym_flip_2	40	1.17.1.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: simpl_crelation; only 1: unfold respectful, relation_equivalence in *; only 1: auto).	11.5222868919	3131
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	8.10	search with cache (only 1: simpl_crelation; only 1: firstorder).	25.6022310257	6751
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0133528709412	6
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0138940811157	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40	1.4.9.2	search with cache (only 1: simpl_relation; only 1: compute; only 1: setoid_rewrite H; only 1: firstorder).	19.6945939064	2753
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	1.1.0.1.3	search with cache (only 1: firstorder; only 1: simpl_crelation; only 1: transitivity y; only 1: auto; only 1: auto).	0.10142493248	148
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40	3.0.0.0.6	search with cache (only 1: compute; only 1: intros A R sa x y z Hxy Hyz; only 1: intros; only 1: symmetry; only 1: firstorder).	8.43284893036	872
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.0111620426178	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0588037967682	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00964593887329	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.299322843552	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.0173630714417	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00876903533936	1
Coq.Classes.CRelationClasses.flip_Reflexive	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.00779509544373	2
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	0.1	search with cache (only 1: hnf; only 1: auto).	0.010636806488	3
Coq.Classes.CRelationClasses.flip_PreOrder	40	2	search with cache (only 1: firstorder).	0.0227661132812	3
Coq.Classes.CRelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.022020816803	2
Coq.Classes.CRelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0361740589142	2
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.128087997437	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00862097740173	1
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00922584533691	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0	search with cache (only 1: firstorder).	0.00789880752563	1
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00825691223145	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00927996635437	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	3	search with cache (only 1: firstorder).	0.0639469623566	25
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0308110713959	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0642821788788	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.4.3	search with cache (only 1: simpl_relation; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.183674097061	168
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.0300440788269	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0270309448242	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0286498069763	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.607622861862	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.026759147644	1
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.025927066803	1
Coq.Classes.RelationClasses.flip_Reflexive	40	2.0	search with cache (only 1: hnf; only 1: auto).	0.0161130428314	20
Coq.Classes.RelationClasses.flip_Antisymmetric	40	3.1	search with cache (only 1: hnf; only 1: auto).	0.0233118534088	31
Coq.Classes.RelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.028352022171	2
Coq.Classes.RelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0278189182281	1
Coq.Classes.RelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0401449203491	1
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0704350471497	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.0252051353455	2
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0264890193939	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0378479957581	3
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0381720066071	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0570111274719	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	0	search with cache (only 1: firstorder).	0.0124080181122	1
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.017942905426	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.053279876709	1
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0343708992004	1
Coq.Classes.Morphisms.eq_proper_proxy	40	1	search with cache (only 1: repeat split).	0.0138320922852	2
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0248129367828	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0133638381958	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.3.0.6.6	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: firstorder).	0.636427164078	915
Coq.Classes.Morphisms.subrelation_id_proper	40	0	search with cache (only 1: auto).	0.014858007431	1
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.052953004837	1
Coq.Classes.Morphisms.subrelation_refl	40	1.1	search with cache (only 1: reduce; only 1: trivial).	0.0166280269623	4
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.0146009922028	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.3.4.1	search with cache (only 1: unfold subrelation; only 1: reduce; only 1: subst; only 1: firstorder).	0.426915884018	68
Coq.Classes.Morphisms.pointwise_subrelation	40	0	search with cache (only 1: firstorder).	0.0262649059296	1
Coq.Classes.Morphisms.forall_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.0286729335785	2
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.0263550281525	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.026447057724	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	0	search with cache (only 1: firstorder).	0.0196678638458	1
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.114232063293	1
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	5.18542909622	173
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	3.21954298019	432
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	3.4.0	search with cache (only 1: transitivity y; only 1: firstorder; only 1: firstorder).	1.76715302467	321
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	5.2	search with cache (only 1: symmetry; only 1: firstorder).	3.27262711525	790
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	2.0.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.0827651023865	13
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	0.354182004929	79
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	3.37159395218	381
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.0113220214844	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	6	search with cache (only 1: firstorder).	0.0119271278381	7
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.1.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0126729011536	6
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.0116009712219	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.016706943512	1
Coq.Classes.Morphisms.flip1	40	0	search with cache (only 1: firstorder).	0.0101580619812	1
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.0103809833527	1
Coq.Classes.Morphisms.eq_subrelation	40	1	search with cache (only 1: simpl_relation).	0.0276901721954	2
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0195119380951	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.0249979496002	1
Coq.Classes.Morphisms.proper_proper	40	0.5.0	search with cache (only 1: reduce; only 1: simpl_relation; only 1: firstorder).	0.164070129395	34
Coq.Classes.Morphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.0117120742798	1
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0113790035248	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.2	search with cache (only 1: intros; only 1: simpl_relation).	0.0582950115204	4
Coq.Classes.Morphisms.proper_sym_flip_2	40	2.0.1.1.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold respectful; only 1: intros H ?; only 1: reduce; only 1: firstorder).	0.115743875504	9
Coq.Classes.Morphisms.proper_sym_impl_iff	40	6.0.2	search with cache (only 1: simpl_relation; only 1: apply (symmetry (x:=_)); only 1: firstorder).	0.531440973282	121
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	7	search with cache (only 1: simpl_relation).	0.0122680664062	8
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00846099853516	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0282261371613	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00731897354126	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	1.2.2	search with cache (only 1: split; only 1: reflexivity; only 1: reflexivity).	0.0260438919067	8
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0173678398132	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.258348941803	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	2	search with cache (only 1: firstorder).	0.0114269256592	3
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.00931215286255	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00837302207947	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.00835800170898	1
Coq.Classes.RelationPairs.pair_compat	40	0.1	search with cache (only 1: repeat red; only 1: auto).	0.0112190246582	3
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.00859212875366	1
Coq.Classes.RelationPairs.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0125041007996	3
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.3.1.0	search with cache (only 1: repeat red; only 1: firstorder; only 1: compute in *; only 1: auto).	0.0768799781799	8
Coq.Classes.DecidableClass.Decidable_sound	40
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	1.1.1.1.10	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: now split).	0.492718935013	230
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.3.2.4.10	search with cache (only 1: split; only 1: apply Nat.eqb_eq; only 1: intro; only 1: subst; only 1: apply Nat.eqb_refl).	4.0195069313	2474
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	9	search with cache (only 1: apply Nat.leb_le).	0.122921943665	19
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	26.41	search with cache (only 1: destruct x; only 1: now destruct y).	2.585739851	7347
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40	0.0.3.123	search with cache (only 1: extensionality y; only 1: destruct y; only 1: auto; only 1: auto).	22.5869591236	14372
Coq.Classes.SetoidClass.setoid_refl	40	8	search with cache (only 1: firstorder).	0.0277960300446	9
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0185358524323	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0354478359222	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	1.13.1.15.8	search with cache (only 1: intros P Hrec p; only 1: red; only 1: intros; only 1: rewrite H0 in H; only 1: auto).	24.5347568989	19972
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	13.0.0.4.12	search with cache (only 1: destruct H; only 1: simpl; only 1: intros; only 1: intro; only 1: firstorder).	9.95027112961	12780
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	0.3.7.0.6	search with cache (only 1: intros P Hrec p; only 1: intros; only 1: red; only 1: intros h; only 1: firstorder).	5.07180309296	1404
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.810806035995	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0397210121155	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0415620803833	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0407040119171	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	3.1.0	search with cache (only 1: intro; only 1: intro; only 1: firstorder).	0.156421899796	7
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.0388569831848	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40	0.11.13	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	7.7461578846	8293
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	search with cache (only 1: trivial).	0.0162079334259	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40	2.0.5	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0358979701996	36
Coq.PArith.Pnat.Pos2Nat.is_pos	40	1.18.19	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	1.34506011009	2198
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.0.1.0.0.2	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros <-; only 1: unfold to_nat; only 1: trivial).	0.051765203476	13
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40	2.13.3	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	19.4306969643	10224
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	3.8.3	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	7.91040205956	3088
Coq.PArith.Pnat.Pos2Nat.inj_ge	40	3.8.5	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	6.89834189415	2905
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	3.2.3.1.7.0.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl Pos.of_nat; only 1: induction n as [| n IH]; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now f_equal).	6.10464286804	5638
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0238518714905	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	1.0.2.0.6.1.0.16	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial).	20.4172158241	28956
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	0.3.0.4.0.14	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	5.76159691811	6289
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intros; only 1: now subst).	0.0584681034088	8
Coq.PArith.Pnat.SuccNat2Pos.inv	40	2.19.3.1.4	search with cache (only 1: rewrite Pos.of_nat_succ; only 1: intros H; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: now apply Nat2Pos.id).	8.98281216621	14250
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	3.2.0.1	search with cache (only 1: apply Pos2Nat.inj; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos.of_nat_succ; only 1: trivial).	0.0371971130371	11
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	6.7.0	search with cache (only 1: intros; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	0.648782014847	485
Coq.PArith.Pnat.le_Pmult_nat	40	0.4.0	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	0.0507869720459	20
Coq.PArith.BinPos.Pos.eq_dec	40	1	search with cache (only 1: decide equality).	0.0265929698944	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	search with cache (only 1: trivial).	0.0125918388367	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.022271156311	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.0.1.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0552899837494	8
Coq.PArith.BinPos.Pos.double_succ	40	1	search with cache (only 1: reflexivity).	0.0272209644318	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0429100990295	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0421838760376	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.2.0.0.0.0.0.0.0.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	5.10296797752	1256
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	2.1.0.0.0.0.1	search with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	0.681480169296	197
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.1.14.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).	19.7935390472	10592
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.0118680000305	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0228250026703	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40	0.12.2	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: now destruct p).	2.05917406082	630
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.1.1.4.6	search with cache (only 1: split; only 1: now apply add_reg_r; only 1: intros H; only 1: f_equal; only 1: auto using add_carry_add).	6.72216415405	2870
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	search with cache (only 1: simpl; only 1: f_equal).	0.0162739753723	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0	search with cache (only 1: trivial).	0.0249421596527	1
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	1.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: trivial).	0.0360760688782	7
Coq.PArith.BinPos.Pos.mul_1_r	40	1.1.0.4.0.0.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: trivial).	0.792350053787	477
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.1.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.0360691547394	4
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.0.1.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.0369389057159	5
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0393631458282	1
Coq.PArith.BinPos.Pos.square_xO	40	18.7.0	search with cache (only 1: simpl; only 1: f_equal; only 1: apply mul_comm).	34.4646890163	19259
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.0.1.0.0.1.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: trivial).	0.0584700107574	10
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0423240661621	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40	9.5.11	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: Bool.destr_bool).	30.2148969173	15822
Coq.PArith.BinPos.Pos.ltb_lt	40	7.2.0	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: now rewrite ?IHp).	7.31537985802	457
Coq.PArith.BinPos.Pos.leb_le	40	7.2.1	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: now rewrite ?IHp).	7.5851290226	498
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	1.11.4	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	1.67115712166	967
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.0.3.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: now split).	0.291038036346	19
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.2.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.1617000103	8
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	3.11.9	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	3.25959181786	2736
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.3.0	search with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.359886169434	41
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.1.1	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.056088924408	8
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.3.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.289426088333	34
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.2.4	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.668089866638	103
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.0.0.0.0.0.0.1	search with cache (only 1: unfold compare; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.323138952255	129
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0129590034485	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.4.4.3.2	search with cache (only 1: change_no_check p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	1.87221598625	1187
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.7.9.5	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	3.66990089417	3772
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40	3.0.19.3	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intros; only 1: trivial).	23.0947909355	19938
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.0.0.0.0.5	search with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0715370178223	50
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1	search with cache (only 1: unfold lt; only 1: now split).	0.0329959392548	3
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.0.0.2	search with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.045459985733	7
Coq.PArith.BinPos.Pos.gt_lt_iff	40	5.0	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.394512891769	57
Coq.PArith.BinPos.Pos.gt_lt	40	9.1	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.629954814911	93
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0132060050964	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	3.4	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.343165874481	62
Coq.PArith.BinPos.Pos.ge_le	40	1.3	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0562801361084	6
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0304050445557	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	0.19	search with cache (only 1: unfold gt, le, compare; only 1: now destruct p).	2.52346110344	1687
Coq.PArith.BinPos.Pos.nlt_1_r	40	2	search with cache (only 1: now destruct p).	0.0529770851135	18
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0482709407806	35
Coq.PArith.BinPos.Pos.le_nlt	40	0.1.0	search with cache (only 1: unfold le, ge; only 1: rewrite compare_gt_iff; only 1: intuition).	0.0229120254517	4
Coq.PArith.BinPos.Pos.lt_nle	40	1.3	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.12953901291	190
Coq.PArith.BinPos.Pos.lt_le_incl	40	1.3	search with cache (only 1: unfold lt, le; only 1: now do 2 destruct compare).	0.136307954788	6
Coq.PArith.BinPos.Pos.lt_lt_succ	40	1.2.13.0	search with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: now left).	0.929581880569	769
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	4.10	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite compare_succ_succ).	0.593894004822	307
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	1.1.1	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.0181679725647	6
Coq.PArith.BinPos.Pos.lt_compat	40	5	search with cache (only 1: solve_proper).	0.189046144485	27
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	search with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0409429073334	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40	0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: rewrite 3!PeanoNat.Nat.lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations).	4.54985404015	2472
Coq.PArith.BinPos.Pos.le_succ_l	40	1.1.3.3.0	search with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.14257502556	416
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	3.3.2	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.0263640880585	31
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.0.1	search with cache (only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0666670799255	4
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.2.0.3.11.0	search with cache (only 1: unfold le; only 1: split; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	3.82277202606	1835
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0236978530884	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.0.0.3.19.4	search with cache (only 1: revert q; only 1: symmetry; only 1: rewrite 2!(mul_comm _ p); only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	22.8212869167	15222
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0368411540985	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40	1.1.19.0	search with cache (only 1: rewrite lt_iff_add; only 1: destruct 1; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H)).	23.592594862	18492
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1.0.0.0.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0331521034241	9
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0160000324249	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0275640487671	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0297930240631	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.4	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.136513948441	32
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0537579059601	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	0.0.1.1.0.0.4.0.0	search with cache (only 1: unfold le, min; only 1: intros x y; only 1: intros H; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	2.60918307304	889
Coq.PArith.BinPos.Pos.max_1_l	40	1.7.1.11	search with cache (only 1: induction n; only 1: now f_equal; only 1: auto; only 1: auto).	0.505223035812	570
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.030412197113	9
Coq.PArith.BinPos.Pos.min_1_l	40	1.0	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.015683889389	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0297019481659	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	0.3.5.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros; only 1: now apply add_le_mono_l).	0.666301965714	262
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.2	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0326328277588	5
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.0	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0597550868988	4
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	0.2.0.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros; only 1: now apply mul_le_mono_l).	0.057941198349	6
Coq.PArith.BinPos.Pos.mul_max_distr_r	40	0.0.0.2	search with cache (only 1: rewrite !(PeanoNat.Nat.mul_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0568761825562	6
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.1	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.04549908638	4
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.0	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0572988986969	4
Coq.PArith.BinPos.Pos.iter_op_succ	40	0.0.0.0.0.0.11.0.0.0	search with cache (only 1: induction p; only 1: intros; only 1: simpl; only 1: congruence; only 1: intros; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	15.8823559284	4556
Coq.PArith.BinPos.Pos.of_nat_succ	40	1.1.0.3.14.29	search with cache (only 1: simpl; only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: auto with *).	1.03408288956	1783
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	5.0.1.0.0.1.1.3.0	search with cache (only 1: intro H; only 1: symmetry; only 1: induction n; only 1: exfalso; only 1: now apply H; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: now rewrite IHn).	8.49627304077	7389
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40	1.0.7.12	search with cache (only 1: intuition; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	6.08873391151	2348
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	2.0.18	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros Hqp Hpr; only 1: intuition).	1.12917780876	802
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40	3.2.12	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	1.94188404083	761
Coq.PArith.BinPos.Pos.divide_mul_l	40	5.0.34	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: now rewrite ?square_xO).	16.9756281376	14293
Coq.PArith.BinPos.Pos.divide_mul_r	40	3.0.4	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: now rewrite ?square_xO).	0.148357868195	80
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	2.5.0	search with cache (only 1: intros x y; only 1: fix sqrtrem_spec 1; only 1: intuition).	0.0357811450958	19
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	1.11	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.138975143433	111
Coq.PArith.BinPos.Pos.gcd_divide_l	40	0.0.3	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0712599754333	15
Coq.PArith.BinPos.Pos.gcd_divide_r	40	1.0.3	search with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	0.542058944702	148
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40	1.0.7	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.84624505043	233
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.1	search with cache (only 1: unfold Pos.gt; only 1: now split).	0.0262050628662	4
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40
Coq.Arith.Le.le_n_0_eq	40	0.1	search with cache (only 1: inversion 1; only 1: now subst).	0.0711719989777	23
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	2.4.14	search with cache (only 1: fix even_spec 1; only 1: intros a; only 1: trivial).	2.99664211273	3210
Coq.Arith.Even.odd_equiv	40	7.2.0	search with cache (only 1: fix even_equiv 1; only 1: intros; only 1: trivial).	0.858366012573	375
Coq.Arith.Even.even_or_odd	40	3.2.27.8	search with cache (only 1: Nat.induct n; only 1: intuition; only 1: intros n IH; only 1: intuition).	1.28812789917	2477
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0229251384735	5
Coq.Arith.Even.not_even_and_odd	40	0.0.1.0.0.2.0.3.0	search with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto with arith).	0.418159008026	421
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.194255113602	1
Coq.Arith.Even.even_even_plus	40	1	search with cache (only 1: parity_binop).	0.144236803055	2
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.114614009857	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.116499185562	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.142566919327	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.235490083694	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.084422826767	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.120522022247	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0741331577301	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0734970569611	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0746550559998	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.071366071701	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.125664949417	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.077495098114	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.169054985046	1
Coq.Arith.Even.even_mult_l	40	1	search with cache (only 1: parity_binop).	0.0829048156738	2
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0871758460999	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.167757987976	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.119349956512	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.11227107048	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.14172911644	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.084844827652	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.030846118927	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.064346075058	1
Coq.Arith.Minus.minus_diag_reverse	40	2.3.11	search with cache (only 1: induction n; only 1: auto; only 1: trivial).	0.386514902115	374
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	4.2.7	search with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: auto with *).	1.38353514671	242
Coq.Arith.Minus.plus_minus	40	6.0.1.0.3.1.6.11.0	search with cache (only 1: Nat.double_induct n m; only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl'; only 1: intros n IH; only 1: now try Nat.order'; only 1: intro n; only 1: now try Nat.order'; only 1: intros n m IH H1; only 1: auto with arith).	21.421902895	32069
Coq.Arith.Minus.minus_plus	40	0.0.0.0.0.0.4	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: intros; only 1: apply Nat.sub_0_r; only 1: simpl; only 1: trivial).	0.0720100402832	62
Coq.Arith.Minus.le_plus_minus_r	40	0.0.1.8.2.0.1.0.2.7	search with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: intros m H; only 1: destruct m; only 1: now Nat.nzsimpl; only 1: simpl; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: now rewrite <- ?Nat.succ_le_mono).	29.6109640598	27229
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40
Coq.Arith.Between.between_le	40	0.0.1.1.1.3.1.10.13	search with cache (only 1: intro n; only 1: revert n; only 1: induction n; only 1: intros a Ha; only 1: PeanoNat.Nat.auto'; only 1: intros m Le; only 1: elim Le; only 1: auto with arith; only 1: auto with arith).	4.81089806557	7971
Coq.Arith.Between.between_Sk_l	40	0.0.0.35	search with cache (only 1: fix gcd_divide 1; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	20.1352109909	25836
Coq.Arith.Between.between_restr	40	0.0.0.9	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.456995010376	238
Coq.Arith.Between.exists_le_S	40	0.0.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.0204880237579	3
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	0.0.3.2	search with cache (only 1: intros a b n H; only 1: split; only 1: trivial; only 1: trivial).	0.0991191864014	31
Coq.Arith.Between.in_int_lt	40	4.2	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order || (right; PeanoNat.Nat.Private_Tac.order) || (left; PeanoNat.Nat.Private_Tac.order)).	0.0183341503143	8
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	0.1.1.3.0	search with cache (only 1: intros * []; only 1: destruct (le_lt_or_eq r q); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0459001064301	10
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0326280593872	2
Coq.Arith.Between.between_in_int	40	0.24.4.4.3.2	search with cache (only 1: induction 1; only 1: intros n; only 1: intros (n', Hn); only 1: PeanoNat.Nat.order; only 1: fix le_div2 1; only 1: auto with arith).	17.2460339069	42809
Coq.Arith.Between.in_int_between	40	3.0.0.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0291709899902	8
Coq.Arith.Between.exists_in_int	40	1.1.2.10	search with cache (only 1: fix gcd_divide 1; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	1.15718889236	1173
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40	4.22.43.14.10	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: destruct H; only 1: auto with arith).	5.59964990616	28520
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	3.0.14.0.3.2	search with cache (only 1: destruct n; only 1: intuition; only 1: intro H; only 1: destruct m; only 1: now right; only 1: now right).	5.54973292351	7589
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	1.1.6.2.0	search with cache (only 1: intros Ev Od; only 1: intros a H; only 1: fix odd_equiv 1; only 1: intros n; only 1: trivial).	0.425203084946	412
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40	0.3.6.12.1.5.2	search with cache (only 1: intro H; only 1: Nat.bitwise; only 1: f_equal; only 1: revert m; only 1: simpl; only 1: fix ind_0_1_SS 1; only 1: trivial).	6.29873585701	6620
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40	1.3.21.0.2	search with cache (only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: rewrite odd_equiv; only 1: fix ind_0_1_SS 1; only 1: trivial; only 1: trivial).	10.330987215	11662
Coq.Arith.Div2.even_odd_div2	40	7	search with cache (only 1: intuition).	0.0394129753113	18
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40	8.5.2.2	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: fix ind_0_1_SS 1; only 1: auto with arith).	34.1777968407	22441
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	5.0.6	search with cache (only 1: fix even_odd_double 1; only 1: intros; only 1: auto).	0.315340042114	286
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0184001922607	3
Coq.Arith.Div2.div2_double	40	2.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: apply Nat.div2_double).	0.0381379127502	16
Coq.Arith.Div2.div2_double_plus_one	40	1.5.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: easy).	0.0374979972839	22
Coq.Arith.Plus.plus_assoc_reverse	40	6.0.8.0.0	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intros x; only 1: Nat.nzsimpl; only 1: intuition).	10.3439970016	3818
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.0188891887665	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.014102935791	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	search with cache (only 1: apply Nat.add_le_mono).	0.0181279182434	2
Coq.Arith.Plus.plus_lt_compat	40	3.10.19	search with cache (only 1: intro H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	1.4374499321	2481
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40	5.7.0.20	search with cache (only 1: induction 1; only 1: apply Nat.le_add_r; only 1: Nat.nzsimpl; only 1: intuition).	18.7136948109	44107
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	2.3.0.1.0.2	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: intro; only 1: now split; only 1: intro n; only 1: discriminate).	1.39231014252	666
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	5.7.0.4.1	search with cache (only 1: nzinduct n; only 1: trivial; only 1: intro n; only 1: Nat.nzsimpl; only 1: intuition).	2.21702408791	1376
Coq.Arith.Lt.lt_le_S	40	2.0	search with cache (only 1: intro H; only 1: trivial).	0.0288059711456	4
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.0212500095367	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.034215927124	3
Coq.Arith.Lt.le_not_lt	40	0.0	search with cache (only 1: intro H; only 1: Nat.order).	0.0302698612213	2
Coq.Arith.Lt.lt_not_le	40	0.3	search with cache (only 1: intro H; only 1: Nat.order).	0.085067987442	39
Coq.Arith.Lt.neq_0_lt	40	0.0	search with cache (only 1: intro H; only 1: Nat.auto').	0.0382108688354	2
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	search with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0358200073242	4
Coq.Arith.Lt.lt_n_S	40	1	search with cache (only 1: apply le_n_S).	0.0267732143402	2
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0336048603058	1
Coq.Arith.Lt.S_pred	40	0.0.41.0	search with cache (only 1: intro H; only 1: inversion H; only 1: trivial; only 1: trivial).	3.92912983894	5613
Coq.Arith.Lt.S_pred_pos	40	1.0.0.0.8	search with cache (only 1: induction n; only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: trivial).	0.37225818634	340
Coq.Arith.Lt.lt_pred	40	5.24.9.14.27	search with cache (only 1: induction 1; only 1: apply Nat.succ_lt_mono; only 1: auto; only 1: apply Nat.lt_succ_r; only 1: auto).	22.0098950863	82388
Coq.Arith.Lt.lt_pred_n_n	40	10.0.0.0.11	search with cache (only 1: Nat.induct n; only 1: inversion 1; only 1: intros n Hn; only 1: intros _; only 1: auto).	26.7678561211	26341
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	6.80902099609	7608
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	17.4428811073	19529
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.285153150558	185
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0132780075073	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0147149562836	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0152280330658	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0.0.0.0	search with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto with arith).	0.030464887619	4
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.1.41.21	search with cache (only 1: intros a Ha; only 1: fix gcd_divide 1; only 1: intros n; only 1: trivial).	29.8824920654	87560
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.124172925949	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40	0.0.0.0.0.14.38	search with cache (only 1: apply Nat.lt_gt_cases; only 1: right; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	10.0855989456	25577
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	2.0.0.0	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	0.022668838501	6
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.1.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	1.32188606262	404
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	1.0.0.0.8.0.0.0.7.15	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: auto with arith).	2.10333490372	1902
Coq.Arith.Compare_dec.le_ge_dec	40	0.1.0.0.0.1.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.604188919067	272
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0432319641113	3
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.4	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0275731086731	7
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	1.2.0	search with cache (only 1: destruct (le_gt_dec n m); only 1: apply le_dec; only 1: now left).	0.0406041145325	13
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.0322289466858	2
Coq.Arith.Compare_dec.dec_le	40	0.0.7.0.0.6.7	search with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: left; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: intro H; only 1: right; only 1: Nat.order).	3.28475403786	4632
Coq.Arith.Compare_dec.dec_lt	40	18	search with cache (only 1: apply Nat.le_decidable).	0.477718114853	552
Coq.Arith.Compare_dec.dec_gt	40	1	search with cache (only 1: apply Nat.le_decidable).	0.0260720252991	2
Coq.Arith.Compare_dec.dec_ge	40	1	search with cache (only 1: apply Nat.le_decidable).	0.0354990959167	2
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0244009494781	1
Coq.Arith.Compare_dec.not_le	40	2	search with cache (only 1: apply Nat.lt_nge).	0.017128944397	3
Coq.Arith.Compare_dec.not_gt	40	1	search with cache (only 1: apply Nat.le_ngt).	0.0154638290405	2
Coq.Arith.Compare_dec.not_ge	40	7	search with cache (only 1: apply Nat.lt_nge).	0.0234599113464	16
Coq.Arith.Compare_dec.not_lt	40	1	search with cache (only 1: apply Nat.nlt_ge).	0.0160109996796	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40	2.12.1.0	search with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	4.82785391808	4458
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	2.1.0.0.1.0.0.0.0.4	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).	1.5889840126	1395
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	4	search with cache (only 1: apply Nat.compare_lt_iff).	0.0401258468628	5
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	1	search with cache (only 1: apply Nat.compare_gt_iff).	0.0175168514252	2
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	2.10.2	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	4.5786011219	2707
Coq.Arith.Compare_dec.leb_correct	40	0.16.1.0.2.3	search with cache (only 1: revert m; only 1: Nat.cases ltac:(m); only 1: intros; only 1: trivial; only 1: fix odd_spec 1; only 1: trivial).	36.2750909328	53688
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.0304539203644	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.3	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0302121639252	5
Coq.Arith.Compare_dec.leb_complete_conv	40	1	search with cache (only 1: apply leb_iff_conv).	0.0188279151917	2
Coq.Arith.Compare_dec.leb_compare	40	4.11.4	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: trivial).	4.99331116676	3785
Coq.Arith.EqNat.eq_nat_refl	40	2.17.5	search with cache (only 1: induction n as [| n IH]; only 1: Morphisms.solve_proper; only 1: trivial).	0.507602930069	710
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.023099899292	6
Coq.Arith.EqNat.eq_nat_eq	40	9	search with cache (only 1: apply eq_nat_is_eq).	0.376016139984	144
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.0.1.0.3.1.1.1.0.0	search with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: auto with arith; only 1: right; only 1: auto with arith).	2.50518512726	2885
Coq.Arith.EqNat.beq_nat_refl	40	10.0.0.0.12	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.360313892365	843
Coq.Arith.EqNat.beq_nat_true	40	0.0.0.0.0.0.0.0.0.1.0.3	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: contradiction || auto).	1.15866708755	1074
Coq.Arith.EqNat.beq_nat_false	40	1.1.0.0.0.0.1.0.3.0.4	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: contradiction || auto; only 1: destruct m; only 1: intro H; only 1: contradiction || auto; only 1: contradiction || auto).	2.49242401123	2715
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	1.1.11	search with cache (only 1: induction n; only 1: auto; only 1: firstorder).	8.98378109932	259
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	3	search with cache (only 1: destr_bool).	0.00957703590393	4
Coq.Arith.PeanoNat.Nat.recursion_succ	40	3.0.0.0.3	search with cache (only 1: induction n; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: firstorder).	0.261192083359	172
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.1.0	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00755715370178	4
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.00516796112061	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.00522303581238	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00514388084412	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00502395629883	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.00727891921997	3
Coq.Arith.PeanoNat.Nat.sub_0_r	40
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.0109739303589	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.00931596755981	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	14.4754910469	12925
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	3.0.0.0.0.0.1.0.0.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.15878605843	1574
Coq.Arith.PeanoNat.Nat.compare_succ	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: simpl; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0117220878601	11
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.0.0.1.0.0.2.10	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.52948498726	4186
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.0.0.0.0.0.1.4	search with cache (only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.78361082077	675
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.3	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.88860297203	1971
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	7.0	search with cache (only 1: intro; only 1: false_hyp ltac:(H) nlt_0_r).	0.0209968090057	9
Coq.Arith.PeanoNat.Nat.pow_0_r	40	1	search with cache (only 1: now nzsimpl).	0.102088928223	2
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0	search with cache (only 1: auto).	0.00527095794678	1
Coq.Arith.PeanoNat.Nat.square_spec	40	2	search with cache (only 1: now nzsimpl').	0.0089099407196	3
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.0	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.010381937027	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	5.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0298738479614	39
Coq.Arith.PeanoNat.Nat.divmod_spec	40	0.5.0.0	search with cache (only 1: intro z; only 1: intro H; only 1: fix even_spec 1; only 1: auto).	0.0112059116364	9
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40	1.20	search with cache (only 1: fix even_spec 1; only 1: auto).	22.0743620396	30267
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40	3.8.5.3	search with cache (only 1: simpl; only 1: intros z n H; only 1: fix odd_spec 1; only 1: now f_equiv).	17.0354440212	9492
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.00927305221558	2
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40	5.10.0	search with cache (only 1: intros p q r Hq Hr; only 1: fix odd_spec 1; only 1: intuition).	9.61390686035	8119
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.4.0.0.0	search with cache (only 1: intro H; only 1: le_elim H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: rewrite H; only 1: now apply pred_0).	0.0126059055328	9
Coq.Arith.PeanoNat.Nat.gcd_divide	40	0.1.25.1	search with cache (only 1: intro n; only 1: fix even_spec 1; only 1: intro H; only 1: auto).	3.18207812309	6338
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	6.0.1	search with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: auto).	0.138546943665	43
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.00853395462036	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	0.1.3.9	search with cache (only 1: intro z; only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	0.560426950455	850
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	8	search with cache (only 1: apply le_0_l).	0.0125451087952	9
Coq.Arith.PeanoNat.Nat.div2_double	40	0.1.2.0.1.8	search with cache (only 1: nzinduct n; only 1: trivial; only 1: intro; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.22728085518	324
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0179371833801	7
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	4.1.13.0.0.0.7	search with cache (only 1: induct n; only 1: intro H; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: repeat red; only 1: fix le_div2 1; only 1: trivial).	36.7713348866	43116
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	1.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0625691413879	47
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.0.4.4	search with cache (only 1: induct ltac:(n); only 1: tauto; only 1: intros n IH; only 1: easy).	0.128348112106	181
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	0.8	search with cache (only 1: fix gcd_greatest 1; only 1: destr_bool).	2.19984412193	141
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	1.2.1	search with cache (only 1: intros x y z; only 1: fix le_div2 1; only 1: trivial).	0.0640199184418	21
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	1.2.11.1	search with cache (only 1: intro H; only 1: intros Eqf Lef x y; only 1: fix le_div2 1; only 1: assumption).	24.9301059246	1241
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0119681358337	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	1.0.0.0.0.0.0.0.0.0.6.0.5	search with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: solve_max; only 1: destruct (compare_spec a b); only 1: rewrite max_l; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l).	14.6411230564	13326
Coq.Arith.PeanoNat.Nat.div2_spec	40	1.1	search with cache (only 1: simpl; only 1: reflexivity).	0.00760006904602	4
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	1	search with cache (only 1: inversion H).	0.0103461742401	2
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	1	search with cache (only 1: Nat.order).	0.0221319198608	16
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0185680389404	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0318369865417	1
Coq.Arith.Gt.gt_S	40	30.3.2	search with cache (only 1: intro H; only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	7.75157022476	7461
Coq.Arith.Gt.gt_pred	40	0	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0338470935822	1
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0434739589691	1
Coq.Arith.Gt.gt_not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0414462089539	1
Coq.Arith.Gt.le_S_gt	40	0.0.1.0.0	search with cache (only 1: Nat.cases n; only 1: intro H; only 1: trivial; only 1: intros n IH; only 1: trivial).	0.150871038437	6
Coq.Arith.Gt.gt_S_le	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0575091838837	1
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.02210688591	1
Coq.Arith.Gt.le_gt_S	40	0.2.2	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0407519340515	7
Coq.Arith.Gt.le_gt_trans	40	0.21.16	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	16.8702459335	21931
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	8.1.6.23	search with cache (only 1: Nat.induct n; only 1: intuition; only 1: intros n IH; only 1: intuition).	6.35031604767	9091
Coq.Arith.Gt.plus_gt_reg_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0139801502228	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0494229793549	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	1.0.7	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: reflexivity).	0.0314950942993	42
Coq.Logic.JMeq.JMeq_trans	40	2.3.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.010617017746	8
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: assumption).	0.0245850086212	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0218040943146	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0256690979004	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0257868766785	4
Coq.Logic.JMeq.JMeq_congr	40	0.2.4	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0290439128876	16
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0258891582489	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0250551700592	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: intros * []; only 1: reflexivity).	0.0253250598907	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.5.2.0	search with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: trivial).	0.035973072052	67
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.15.7	search with cache (only 1: intro A; only 1: intros [? ?]; only 1: trivial).	0.0938839912415	774
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.00868487358093	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	12.9	search with cache (only 1: intros A *; only 1: tauto).	0.84267783165	725
Coq.Logic.Classical_Prop.not_imply_elim	40	10.1.0.0	search with cache (only 1: intros; only 1: destruct (classic P); only 1: auto; only 1: tauto).	1.41389393806	1751
Coq.Logic.Classical_Prop.not_imply_elim2	40	1.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: auto).	0.0320019721985	4
Coq.Logic.Classical_Prop.imply_to_or	40	0.0.0.7	search with cache (only 1: intro; only 1: destruct (classic P); only 1: auto; only 1: auto).	0.889443874359	394
Coq.Logic.Classical_Prop.imply_to_and	40	2.0.0.2.1	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intro; only 1: tauto).	0.0807971954346	14
Coq.Logic.Classical_Prop.or_to_imply	40	2.2.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: tauto).	0.114193916321	83
Coq.Logic.Classical_Prop.not_and_or	40	0.1.1.1	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0458340644836	7
Coq.Logic.Classical_Prop.or_not_and	40	2.4.0	search with cache (only 1: intros; only 1: intro; only 1: tauto).	0.0461418628693	22
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.0356769561768	1
Coq.Logic.Classical_Prop.and_not_or	40	6.1.0	search with cache (only 1: simple induction 1; only 1: red; only 1: tauto).	0.0696880817413	31
Coq.Logic.Classical_Prop.imply_and_or	40	3.0.0.0.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intro; only 1: tauto).	0.052971124649	18
Coq.Logic.Classical_Prop.imply_and_or2	40	7.0	search with cache (only 1: intros; only 1: tauto).	0.037211894989	15
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.4.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).	0.0546090602875	205
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40	27.15	search with cache (only 1: intros n' (HPn', Hn'); only 1: firstorder).	12.5415561199	8695
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40	16.7	search with cache (only 1: constructor; only 1: firstorder).	15.1978549957	964
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	7.11.22	search with cache (only 1: induction n; only 1: firstorder; only 1: firstorder).	18.0201280117	22254
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	4.0.0.0.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: auto).	0.0172419548035	23
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.3.0.3.1	search with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: firstorder).	0.242419958115	95
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.0.0	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0297558307648	4
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.1.1	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.034893989563	15
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	11	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	3.05496692657	93
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	2.0.0.1.0	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: pose (T' := fun x y => forall x', R x x' -> T x' y); only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	0.260001897812	42
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.5.0.0.0.2	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	1.11399793625	409
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	6.0	search with cache (only 1: intros Ext EM A; only 1: now apply Ext).	0.0130789279938	15
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	6.0	search with cache (only 1: intros Ext EM A; only 1: now apply Ext).	0.0127389431	15
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	5.0.0.2.9	search with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: left; only 1: easy).	0.216824054718	1407
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.2.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0232968330383	7
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	0.0.0.1.1.1.0.0.1.2	search with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: apply not_all_not_ex with (P := fun x => ~ P x); only 1: intro all; only 1: apply abs; only 1: intro n; only 1: apply NNPP; only 1: apply all).	1.35697412491	1760
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	0.0.1.6.0	search with cache (only 1: unfold not; only 1: destruct 1 as (eq_qp, H); only 1: intro all; only 1: apply H; only 1: trivial).	0.210218906403	274
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	0.8.7	search with cache (only 1: red; only 1: simple induction 2; only 1: auto).	1.32494497299	2269
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0157170295715	4
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	4.0.19.1	search with cache (only 1: intros (l, F); only 1: induction l as [| a l IH]; only 1: auto; only 1: firstorder).	3.07001113892	2355
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0876469612122	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.7	search with cache (only 1: destruct 1; only 1: trivial).	0.0129292011261	18
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0237610340118	4
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.024934053421	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0236060619354	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.5.14.0.0	search with cache (only 1: unfold forall_eq_rect, forall_sig_eq_rect; only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: clear H g; only 1: reflexivity).	0.573897123337	1706
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.0107009410858	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	search with cache (only 1: trivial).	0.00783705711365	1
Coq.Logic.HLevels.forall_hprop	40	12.3.6.2.5.3.7	search with cache (only 1: intro H'; only 1: intros; only 1: red; only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intros; only 1: apply H).	3.19568896294	21113
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.2.1	search with cache (only 1: intros A C h1 h2; only 1: intros; only 1: eauto using @functional_extensionality_dep).	0.0246481895447	6
Coq.Logic.HLevels.false_hprop	40
Coq.Logic.HLevels.true_hprop	40
Coq.Logic.HLevels.not_hprop	40	2.0.0.1.0	search with cache (only 1: intros p q; only 1: intro H1; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).	0.0121738910675	8
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	5.0.0.0.9.2	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	1.41000008583	1086
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	1.2	search with cache (only 1: destruct 1; only 1: auto).	0.0100350379944	5
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0110511779785	3
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.7	search with cache (only 1: destruct 1; only 1: auto).	0.0179319381714	18
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.3.0.0.12.7.2	search with cache (only 1: intros A P; only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.660601854324	2913
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0110030174255	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0119640827179	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.4.0.0.8.7.3	search with cache (only 1: intros A P; only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.525281906128	1641
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.1.4.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.0407438278198	15
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.0.2.0.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: destruct H; only 1: reflexivity).	0.0209438800812	17
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	1.6.4	search with cache (only 1: intro eq_dep_eq; only 1: intro; only 1: auto).	0.0711281299591	139
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	5.11	search with cache (only 1: red; only 1: auto).	0.368367910385	801
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	12.0.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.698328018188	1508
Coq.Logic.EqdepFacts.f_eq_dep	40	0.2	search with cache (only 1: destruct 1; only 1: auto).	0.0241079330444	4
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	2.0.1.5	search with cache (only 1: intros ? ? ? Fl Fr; only 1: intro A; only 1: destruct 1; only 1: trivial).	0.0357060432434	58
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	search with cache (only 1: intros * []; only 1: trivial).	0.0128569602966	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	2	search with cache (only 1: auto).	0.0174860954285	30
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	14	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	3.9623670578	242
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.0.0.0.0.0	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: auto; only 1: intro H1; only 1: elim H1).	0.0151641368866	6
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	0.10	search with cache (only 1: intros [? ?]; only 1: trivial).	0.0411188602448	60
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	0.1.1.0.4.1.0	search with cache (only 1: intro A; only 1: unfold not; only 1: destruct 1; only 1: auto; only 1: intro H1; only 1: elim H1; only 1: auto).	0.0833830833435	283
Coq.Logic.Decidable.dec_True	40	2.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0217039585114	5
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.020947933197	2
Coq.Logic.Decidable.dec_or	40	2.1.3	search with cache (only 1: unfold decidable, not; only 1: intros; only 1: tauto).	0.0491530895233	25
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0339419841766	2
Coq.Logic.Decidable.dec_not	40	3.1.0	search with cache (only 1: unfold decidable; only 1: intros; only 1: tauto).	0.0221679210663	14
Coq.Logic.Decidable.dec_imp	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0264320373535	3
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0380170345306	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0147669315338	2
Coq.Logic.Decidable.not_or	40	1	search with cache (only 1: tauto).	0.0170259475708	2
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable, not; only 1: tauto).	0.0269029140472	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0928380489349	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0215141773224	2
Coq.Logic.Decidable.not_iff	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0857019424438	3
Coq.Logic.Decidable.not_true_iff	40	1	search with cache (only 1: tauto).	0.0248630046844	2
Coq.Logic.Decidable.not_false_iff	40	1	search with cache (only 1: tauto).	0.0140120983124	2
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0181868076324	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0205438137054	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0340988636017	3
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0363540649414	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0349757671356	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0355331897736	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.026871919632	2
Coq.Logic.Decidable.not_or_iff	40	2.1	search with cache (only 1: intros; only 1: tauto).	0.0193510055542	5
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.0173778533936	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0337698459625	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0313808917999	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	5	search with cache (only 1: intuition).	0.0411009788513	11
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0989248752594	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	9.1.0.6	search with cache (only 1: induction s; only 1: auto; only 1: simpl; only 1: intuition_in).	4.77714204788	1026
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: auto; only 1: simpl; only 1: ok).	0.0828418731689	6
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	1.00464606285	628
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.028265953064	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0239028930664	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0568661689758	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	10	search with cache (only 1: ok).	0.261569023132	43
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	9.4	search with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	0.389510154724	156
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.033497095108	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.0.0.0.0	search with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.181632041931	5
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	10	search with cache (only 1: firstorder).	0.0518591403961	21
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.0.3.0.3.0.0.0.0.4.2.41	search with cache (only 1: intros n; only 1: inversion 1; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: induction n; only 1: simpl; only 1: now simpl; only 1: simpl; only 1: auto).	6.00911402702	10319
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	1.1	search with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0790910720825	4
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0483160018921	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.030189037323	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.0.0.0.0.1.8.3	search with cache (only 1: intros p; only 1: destruct p; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	1.11084699631	452
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0663058757782	8
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.117494821548	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	4.17.0	search with cache (only 1: unfold singleton; only 1: red; only 1: eauto).	0.365556001663	507
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.3.0.0.2.3.2	search with cache (only 1: intros; only 1: destruct t as [| [| ] l x r]; only 1: invrb; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	1.91111207008	1121
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.2.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: descolor; only 1: intuition; only 1: intuition).	0.0919439792633	14
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	2.0	search with cache (only 1: intros H; only 1: intuition).	0.30566906929	19
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	2	search with cache (only 1: now split).	0.0470349788666	3
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	1.1.1.0.0	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.0698690414429	8
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	4.2.0.8.4	search with cache (only 1: destruct s; only 1: red; only 1: exists 0; only 1: auto; only 1: ok).	0.833234071732	586
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.6.2	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.302659034729	136
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0548770427704	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.0.0.0.2.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: destruct (compare_Cmp s1 s2); only 1: auto; only 1: auto; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.21537399292	570
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0892980098724	10
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.4.0.0.0.0	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.777638196945	357
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.1.0.0.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0884280204773	9
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.144376039505	3
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.0.0.4.2	search with cache (only 1: intros a n; only 1: split; only 1: intros H; only 1: trivial; only 1: trivial).	0.258195877075	61
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.0	search with cache (only 1: intros n; only 1: trivial).	0.110052108765	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	2.1.6	search with cache (only 1: repeat red; only 1: intros a H; only 1: inversion_clear H).	0.169103145599	43
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	13.1.3	search with cache (only 1: fix odd_spec 1; only 1: fix even_spec 1; only 1: trivial).	2.35610699654	1074
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	4.5.7	search with cache (only 1: intro; only 1: repeat red; only 1: intuition).	0.84087896347	399
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	9.3.6	search with cache (only 1: intro; only 1: fix even_spec 1; only 1: trivial).	3.9258749485	1663
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40	1.25.19	search with cache (only 1: intro H; only 1: fix sqrtrem_spec 1; only 1: auto).	31.7124350071	14094
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	2.11.5.4.6	search with cache (only 1: intros a; only 1: intros x y z; only 1: compute in *; only 1: intuition subst; only 1: easy || now destruct y).	12.5945990086	6680
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	22	search with cache (only 1: destr_bool).	2.57115006447	993
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	1.1.1.1.9	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	1.99475502968	626
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40	3.0.5	search with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	0.328371047974	109
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.169922828674	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	0.0.0.5	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.208973884583	16
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.223891019821	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.441931962967	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.112043857574	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40	1.22.6	search with cache (only 1: intros a b Ha Hb; only 1: fix sqrtrem_spec 1; only 1: auto).	14.9226169586	5866
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.2.0.0.0.0.2.3.2.2	search with cache (only 1: intros n m p; only 1: revert n m; only 1: induction p; only 1: intros [| ] [| ]; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: intros [| ] [| ]; only 1: ct; only 1: ct; only 1: ct; only 1: ct).	9.51576280594	3283
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	1.0.13	search with cache (only 1: intros [| l' o' r']; only 1: trivial; only 1: trivial).	0.804883956909	306
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.180606842041	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	6.4.6.3	search with cache (only 1: unfold In; only 1: intro f; only 1: fix odd_spec 1; only 1: auto).	18.1840288639	7788
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40	19.4	search with cache (only 1: intros H; only 1: now rewrite H).	1.90002989769	1517
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0287089347839	3
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.2.2	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0309550762177	7
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	3.9	search with cache (only 1: rewrite remove_spec; only 1: intuition).	2.04460811615	498
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	0.1	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0849740505219	12
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.028892993927	3
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0326340198517	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0344908237457	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.3.0	search with cache (only 1: intros E; only 1: rewrite inter_spec; only 1: auto).	0.0453870296478	6
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.1	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0279669761658	3
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.1	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0535910129547	12
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.1.2.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.102910995483	22
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.2.3.0.0	search with cache (only 1: intros P; only 1: intuition; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0513639450073	10
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	1.0.0	search with cache (only 1: intros E; only 1: rewrite E; only 1: auto with relations).	0.0307621955872	4
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	3.0	search with cache (only 1: symmetry; only 1: intuition).	0.0259380340576	5
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40	3.17	search with cache (only 1: Ndec.eqb2eq; only 1: intuition).	0.76991891861	487
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	3.5	search with cache (only 1: symmetry; only 1: intuition).	0.0434901714325	10
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	9	search with cache (only 1: intuition).	0.0421528816223	13
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40	1.2.0.30.7	search with cache (only 1: split; only 1: apply -> is_empty_spec; only 1: apply <- is_empty_spec; only 1: firstorder; only 1: intuition).	19.3675498962	17785
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	12	search with cache (only 1: intuition).	0.140321016312	66
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	0.1	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.029718875885	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	0.6	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.148545026779	18
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	1.1.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.049919128418	8
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.5	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0848281383514	21
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	0.2.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.140705823898	23
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0331091880798	2
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0418870449066	3
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	0	search with cache (only 1: intuition).	0.0190329551697	1
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	0.0.0.1.3.0	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.78669905663	158
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40	1.1.1.0.3.1	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	30.6127300262	3672
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	1.10.5	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: auto).	10.0814700127	822
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	8.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.0317120552063	10
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40	0.3.2.7.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite remove_spec; only 1: rewrite remove_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	10.3633129597	1791
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	5.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.122640132904	36
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	24	search with cache (only 1: firstorder).	1.32904696465	1260
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	1.0.0.10	search with cache (only 1: repeat red; only 1: intros s s' E; only 1: setoid_rewrite E; only 1: intuition).	20.7738420963	653
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	9	search with cache (only 1: firstorder).	0.175793886185	65
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.0900530815125	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0701131820679	4
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.192788124084	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.1.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0825550556183	4
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.3.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.148058891296	6
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	0.0.3.6.0.2.2.1	search with cache (only 1: intros x x' Hx s s' Hs; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: intuition; only 1: firstorder; only 1: firstorder; only 1: intuition; only 1: intuition).	11.3513829708	3123
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0608448982239	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.214310884476	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	0	search with cache (only 1: firstorder).	0.128140926361	1
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	0	search with cache (only 1: intuition).	0.1548640728	1
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	0.0	search with cache (only 1: intuition; only 1: fsetdec).	0.197019100189	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	0	search with cache (only 1: fsetdec).	0.119652986526	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	0	search with cache (only 1: fsetdec).	0.11993598938	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.140183925629	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.124801874161	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	0	search with cache (only 1: fsetdec).	0.117164134979	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.202936887741	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	0	search with cache (only 1: fsetdec).	0.157464027405	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.270174980164	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.150357961655	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.190968990326	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.1.1.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.261847019196	6
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.162954092026	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.127835988998	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	0	search with cache (only 1: fsetdec).	0.164948940277	1
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	1	search with cache (only 1: fsetdec).	0.257048130035	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	3.1.0	search with cache (only 1: intuition; only 1: red; only 1: fsetdec).	0.642284870148	26
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.255742073059	1
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.276432991028	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.407053947449	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.155473947525	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.442080974579	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	0	search with cache (only 1: fsetdec).	0.261095046997	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.292842149734	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.312965154648	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.237092971802	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.416165113449	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.230264186859	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.348984956741	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.612905979156	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.439828872681	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.130278110504	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.209617853165	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.130064964294	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.202826023102	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.22859787941	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.210782051086	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.18533205986	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	0.1	search with cache (only 1: rewrite union_spec; only 1: intuition).	0.314340114594	12
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	0	search with cache (only 1: fsetdec).	0.164912939072	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.151797056198	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.164741039276	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.429007053375	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.403759002686	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.324867010117	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.354660987854	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.439245223999	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.226298093796	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.139575004578	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.152552843094	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.223155975342	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.154851198196	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.165361881256	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.141983985901	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.179692983627	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.139998912811	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.176153182983	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.32069683075	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.31639790535	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.255832195282	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	0.0.0.7	search with cache (only 1: red; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.440007209778	51
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	2.2.1	search with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	0.233805894852	8
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.964598894119	18
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.712871074677	3
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.539736032486	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.693084955215	25
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	1.0.0.0.0.1.1	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	1.54593610764	35
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40	8.4.0.1.2	search with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: reflexivity; only 1: fsetdec).	11.7269630432	2488
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40	0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.9	search with cache (only 1: unfold Empty; only 1: intros; only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: rewrite H3; only 1: clear H3; only 1: generalize H, H2; only 1: clear H H2; only 1: case l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (H e); only 1: elim (H2 e); only 1: intuition).	27.9744369984	10485
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40	1.0.14.11.8.8.0	search with cache (only 1: intros; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: eapply fold_right_eqlistA2; only 1: eauto; only 1: auto; only 1: intuition).	24.8564119339	6572
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	1.11.7.1	search with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: auto with set).	3.30940103531	1507
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40	3.0.0.0.0.11.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set).	27.5997340679	7400
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40	0.2.0.0.0.2.3.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: fsetdec; only 1: auto with set).	7.26669311523	1326
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.110934019089	3
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	0.0.1.0.1.10	search with cache (only 1: intro; only 1: rewrite elements_Empty, cardinal_spec; only 1: intro; only 1: destruct (elements s); only 1: auto; only 1: discriminate).	2.38369607925	595
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	1.1.14.1.7.1.1.1.1	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intros; only 1: generalize (elements_2 (s:=s)); only 1: intuition; only 1: exists e; only 1: auto with relations).	16.8433339596	12802
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.1.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.153964996338	7
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	2.11.1	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	1.8704419136	505
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	3.0	search with cache (only 1: symmetry; only 1: auto with set).	0.191377162933	41
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.2.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto with set).	0.195215940475	23
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.1.0.2.0.0.0.1.1.0.0.2	search with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto with *; only 1: auto).	21.3029129505	7594
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	search with cache (only 1: intros; only 1: auto with *).	0.273343801498	20
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.101676940918	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.187119960785	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	11	search with cache (only 1: eauto with *).	0.13587808609	33
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.4	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.172383069992	9
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.3.1.1.0	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto).	4.68243217468	682
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0647530555725	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	1.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.137544870377	7
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.515244960785	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	3.1.1.0	search with cache (only 1: intros; only 1: apply <- mem_spec; only 1: apply -> elements_spec1; only 1: intuition).	0.396134138107	28
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.180045127869	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	2.0.0	search with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: rewrite InA_alt; only 1: intuition).	0.977261066437	49
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.291908025742	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.298556804657	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.232880115509	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set relations).	0.131522893906	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0.0.0	search with cache (only 1: rewrite <- mem_spec; only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.143805980682	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.1.1	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.330984830856	20
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	5	search with cache (only 1: auto with set).	0.105662107468	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	0.1.1.16	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	15.0112688541	2494
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	0.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.191614866257	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	3.2	search with cache (only 1: intros; only 1: auto with set).	0.331671953201	27
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	1	search with cache (only 1: auto with set).	0.124775886536	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	6.0	search with cache (only 1: intros; only 1: auto with set).	0.171523094177	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40	9.0.0.1.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros a; only 1: eauto with set relations).	8.15704798698	1003
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	4.3.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.119775056839	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	1.0	search with cache (only 1: intros; only 1: auto with set relations).	0.158675909042	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.12689781189	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	3.5.1	search with cache (only 1: intuition; only 1: apply <- mem_spec; only 1: eauto with set).	1.87090611458	84
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	0	search with cache (only 1: auto with set relations).	0.088161945343	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.104861021042	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	0.0.0.5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.18964099884	18
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	1	search with cache (only 1: auto with set).	0.0850942134857	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.152710914612	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.137687921524	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.103522062302	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.116572856903	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0940790176392	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0919549465179	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	1	search with cache (only 1: auto with set relations).	0.0918049812317	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0785989761353	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.17463517189	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	0	search with cache (only 1: auto with set).	0.136775016785	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0969889163971	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.126134872437	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0991551876068	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.136565923691	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0888059139252	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.10114812851	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	3.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: intuition).	0.389142036438	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.144733905792	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.14323091507	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	3.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.327644109726	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0	search with cache (only 1: auto with set).	0.136680841446	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.107596874237	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.094703912735	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.108822822571	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.12140417099	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	0.3.1.1.0.2.1.1.0.2	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: rewrite <- mem_spec; only 1: simpl; only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: auto with set; only 1: congruence; only 1: intuition).	22.8124501705	4111
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.116243124008	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40	0.0.0.0.0.11.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto with set; only 1: apply -> equal_spec; only 1: auto).	3.56060409546	1185
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.1449239254	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	0.245400190353	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.132144927979	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	0.1883289814	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	0.184862136841	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.3.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with *; only 1: congruence; only 1: auto; only 1: auto).	1.43511295319	264
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	0	search with cache (only 1: auto with set).	0.111683130264	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.5.0.3.2	search with cache (only 1: red; only 1: red; only 1: intros; only 1: rewrite H; only 1: auto).	1.23904204369	243
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto with set).	0.194161891937	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.146231889725	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	0.1.0.1.0.0.1	search with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).	0.329298019409	12
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.11092710495	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	search with cache (only 1: intuition).	0.329152107239	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.14844417572	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.0151100158691	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.0705590248108	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0780658721924	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.205604076385	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	1.1	search with cache (only 1: intro; only 1: intuition).	0.0272340774536	13
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0504281520844	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	1.0.5.0.5.0	search with cache (only 1: intros; only 1: intros y LT; only 1: apply <- add_spec; only 1: destruct (E.eq_dec x y); only 1: intuition; only 1: intuition).	10.9285159111	3201
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0844128131866	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.238250017166	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0972352027893	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0712912082672	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.244584798813	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.230314970016	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.10.5.3.1	search with cache (only 1: intros s s' E; only 1: intro H; only 1: intros y LT; only 1: rewrite singleton_spec; only 1: intuition).	4.82565903664	2088
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	3	search with cache (only 1: fsetdec).	0.261218070984	28
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	1	search with cache (only 1: fsetdec).	0.0647630691528	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0.0	search with cache (only 1: intuition; only 1: fsetdec).	0.0680940151215	2
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	1.6.20	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: intuition).	8.40216302872	9432
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	0.4.9	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: intuition_in).	1.95966386795	1346
Coq.MSets.MSetGenTree.Props.isok_iff	40	1.2	search with cache (only 1: fix odd_spec 1; only 1: intuition_in).	0.187961816788	43
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	5.1	search with cache (only 1: intros; only 1: intuition_in).	0.205734014511	53
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	8	search with cache (only 1: intuition_in).	0.0673232078552	37
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.4.1	search with cache (only 1: intuition_in; only 1: repeat red; only 1: intuition_in).	0.0247550010681	8
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0113079547882	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.1.3	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.128098964691	19
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.1.6	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.164848804474	32
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.1.3	search with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).	0.0362811088562	22
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	8	search with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0756688117981	54
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0108761787415	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.00813484191895	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.5.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: rewrite <- H; only 1: auto).	2.85698890686	1391
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0612070560455	20
Coq.MSets.MSetGenTree.Props.empty_spec	40	1.1.1	search with cache (only 1: red; only 1: intros; only 1: auto).	0.0317080020905	13
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	search with cache (only 1: auto).	0.00643396377563	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	5.1	search with cache (only 1: fix even_spec 1; only 1: auto).	0.263615131378	122
Coq.MSets.MSetGenTree.Props.mem_spec	40	2.15	search with cache (only 1: fix even_spec 1; only 1: auto).	4.13827896118	3312
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.6	search with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	7.31405901909	2806
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	21.17.21.7	search with cache (only 1: split; only 1: now auto; only 1: now auto; only 1: firstorder).	24.05428195	26071
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	1.1.21.0.3	search with cache (only 1: intuition_in; only 1: unfold elements; only 1: rewrite elements_node; only 1: simpl; only 1: now rewrite !app_assoc_reverse).	10.0361380577	7644
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	0.4.1.3.2.0.2.9	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder; only 1: auto; only 1: repeat red; only 1: firstorder; only 1: subst; only 1: rewrite <- H; only 1: auto).	15.7549471855	13166
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	2	search with cache (only 1: firstorder).	0.0256731510162	3
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	0.36	search with cache (only 1: fix gcd_divide 1; only 1: auto).	18.9041981697	14394
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40	2.22.3.7.0.26.8.2	search with cache (only 1: split; only 1: repeat red; only 1: fix le_div2 1; only 1: auto; only 1: repeat red; only 1: intros (s, Hs) (s', Hs'); only 1: fix le_div2 1; only 1: auto).	28.0029489994	68732
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	6	search with cache (only 1: firstorder).	0.0373959541321	7
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	9.20	search with cache (only 1: intro H; only 1: firstorder).	5.28555893898	6041
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.215917110443	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	2.1	search with cache (only 1: intros n m; only 1: now Nat_as_OT.nzsimpl).	0.3599588871	5
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	10.4	search with cache (only 1: compute; only 1: firstorder).	18.2969479561	2021
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	9.8.10	search with cache (only 1: red; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition Dec.fsetdec).	3.2688100338	872
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.2.11.1.2	search with cache (only 1: red; only 1: intuition; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec).	14.2856538296	2673
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	5.2.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.221966981888	10
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	4.94368600845	487
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.0.0.0.2.0.1.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	10.1291148663	1301
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40	0.7.2.3	search with cache (only 1: intro; only 1: unfold Same_set, Included, mkEns, In; only 1: fix gcd_divide 1; only 1: auto).	6.00862693787	952
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	0.1.3.4	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: inversion_clear Hll'; only 1: rewrite 2!InA_alt; only 1: firstorder).	2.18283891678	126
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40	4.0.2	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	0.128144025803	45
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.0.1.1.0.0.1.0.0.0.0.4	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	17.8249371052	5131
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	1	search with cache (only 1: intuition).	0.0551221370697	2
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	1.0.1.0.0.1	search with cache (only 1: unfold singleton; only 1: split; only 1: intuition; only 1: inv; only 1: auto; only 1: intuition).	0.507699012756	41
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	1.2	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.054074048996	5
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.3.13.0	search with cache (only 1: unfold empty; only 1: repeat red; only 1: intros a H; only 1: inv).	8.16090893745	341
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40	4.3	search with cache (only 1: fix even_spec 1; only 1: auto).	0.178146123886	58
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	1.0.2.0.2	search with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0581920146942	17
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	0.3	search with cache (only 1: intros; only 1: auto).	0.0201261043549	5
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	0.4.0	search with cache (only 1: unfold elements; only 1: intros; only 1: auto).	0.0253901481628	7
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	1.0.0.1.0.0.3	search with cache (only 1: unfold Empty, empty; only 1: destruct s; only 1: intros; only 1: intro; only 1: inv; only 1: intros; only 1: discriminate).	1.48222088814	514
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: auto).	0.0466840267181	2
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40	0.9.5	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: auto).	5.30497694016	1800
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	2	search with cache (only 1: auto).	0.015743970871	3
Coq.MSets.MSetList.MakeRaw.mem_spec	40	1.12	search with cache (only 1: fix odd_spec 1; only 1: auto).	1.78471803665	873
Coq.MSets.MSetList.MakeRaw.add_inf	40	1.1.33	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	37.6605238914	34750
Coq.MSets.MSetList.MakeRaw.add_ok	40	0.0.0.0.3.2.0.0.1.5.3.3	search with cache (only 1: intuition; only 1: inv; only 1: elim H; only 1: constructor; only 1: constructor; only 1: auto; only 1: intuition; only 1: simpl in *; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	13.3469250202	4485
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.0.0.0.0.0.0.1.0.1.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	25.8881771564	3886
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	1	search with cache (only 1: constructor).	0.0273449420929	2
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	0.4.6.3.11	search with cache (only 1: intro n; only 1: unfold singleton; only 1: intros; only 1: rewrite InA_cons, InA_nil; only 1: tauto).	6.45842194557	6768
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.104395151138	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0	search with cache (only 1: auto).	0.0247881412506	1
Coq.MSets.MSetList.MakeRaw.empty_spec	40	4.3.41.4	search with cache (only 1: intros s s'; only 1: revert s s'; only 1: intros a H; only 1: inversion_clear H).	5.38690686226	5624
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40	9.3	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.302489042282	145
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	0.1.2	search with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0270800590515	6
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intro l; only 1: intro H; only 1: induction l as [| x xs]; only 1: constructor; only 1: change_no_check (inf x xs && isok xs = true) in H; only 1: rewrite andb_true_iff, <- inf_iff in H; only 1: destruct H; only 1: constructor; only 1: tauto; only 1: tauto).	0.961796998978	345
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	1.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.034056186676	4
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40	0.6.2.3.0.0.1.7	search with cache (only 1: induction s; only 1: intros; only 1: discriminate; only 1: simpl; only 1: intros; only 1: constructor; only 1: inversion H; only 1: auto).	13.6427891254	8583
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	1.0.2.4	search with cache (only 1: intros [| x s]; only 1: inversion 2; only 1: simpl; only 1: easy).	0.482658147812	150
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	1.0.0.0.0.6.0.0.3	search with cache (only 1: induction s as [| x s IH]; only 1: simpl; only 1: inversion 1; only 1: destruct s; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: simpl; only 1: auto).	27.3381888866	11611
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0285668373108	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: reflexivity).	0.0249209403992	2
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	1.7.2.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: split; only 1: now rewrite Hxx', Hyy'; only 1: now rewrite Hxx', Hyy').	0.448446989059	213
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	0.2.4.7.8	search with cache (only 1: let rec induction2 := let rec inv := let rec inv_ok := match goal with | H:Sorted X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:Sorted X.lt nil |- _ => clear H; inv_ok | H:Sorted X.lt ?l |- _ => change_no_check (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end in invlist InA; inv_ok; invlist HdRel in simple induction s; [ simpl; auto; try (solve [ intros; inv ]) | intros x l Hrec; simple induction s'; [ simpl; auto; try (solve [ intros; inv ]) | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ] ] in induction2; only 1: intro H; only 1: induction H; only 1: auto with *; only 1: auto).	4.90295791626	4277
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.027636051178	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.2.0.0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0220620632172	10
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	0.2.1.0.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.0337460041046	15
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	1.0.11.3.11	search with cache (only 1: intro H; only 1: intro y0; only 1: right with y0; only 1: auto; only 1: left).	0.180639982224	825
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.5.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0171821117401	15
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	1.1.0.0.0	search with cache (only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto with sets; only 1: auto with sets).	0.0156631469727	13
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40	0.0.0.0.0.6.1.0.0.1.0.0.0.0.0.0.6.0	search with cache (only 1: split; only 1: induction 1; only 1: right with x; only 1: assumption; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	37.0809950829	68857
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.1.0.0.1.2.2.0.0.1.0.3.0	search with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	26.8050251007	59202
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	0.1.3.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto with sets).	0.0176329612732	10
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.1.0.0.2.0.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: assumption; only 1: constructor 3; only 1: auto with sets).	0.432067155838	449
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	0.3.6.3.0.2.5.4	search with cache (only 1: destruct 1; only 1: constructor 1; only 1: intro H1; only 1: trivial; only 1: red; only 1: eauto; only 1: red; only 1: auto).	3.79225802422	12371
Coq.Relations.Relations.inverse_image_of_eq	40	0.9.0.0.9.1.0.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.31553196907	1589
Coq.Sets.Uniset.leb_refl	40	1	search with cache (only 1: destr_bool).	0.0102519989014	2
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0122051239014	5
Coq.Sets.Uniset.seq_refl	40	1	search with cache (only 1: auto).	0.00880479812622	2
Coq.Sets.Uniset.seq_trans	40
Coq.Sets.Uniset.seq_sym	40	0.1.1	search with cache (only 1: unfold seq; only 1: destruct y; only 1: auto).	0.0121939182281	5
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0112299919128	3
Coq.Sets.Uniset.union_empty_right	40	4.1.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destr_bool; only 1: intuition).	0.0351691246033	43
Coq.Sets.Uniset.union_comm	40	6.4.1.0	search with cache (only 1: unfold seq; only 1: simpl; only 1: destruct y; only 1: intuition).	0.537061929703	881
Coq.Sets.Uniset.union_ass	40	0.3.1.2.0.1	search with cache (only 1: intros; only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: unfold charac; only 1: auto with bool).	0.823922872543	1336
Coq.Sets.Uniset.seq_left	40	1.0.3.0.2.1.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: trivial).	1.4277920723	2245
Coq.Sets.Uniset.seq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0217401981354	10
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	0.59544301033	238
Coq.Sets.Multiset.meq_refl	40	10	search with cache (only 1: firstorder).	0.023041009903	57
Coq.Sets.Multiset.meq_trans	40	11	search with cache (only 1: congruence).	0.29594707489	361
Coq.Sets.Multiset.meq_sym	40	1.0.2.1.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: trivial).	0.0135478973389	9
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.00933003425598	3
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0102210044861	4
Coq.Sets.Multiset.munion_comm	40	8.2.3.2.0	search with cache (only 1: unfold meq; only 1: intros a b n; only 1: simpl; only 1: PeanoNat.Nat.bitwise; only 1: intuition).	3.0555229187	4168
Coq.Sets.Multiset.munion_ass	40	5.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto with arith).	0.0233039855957	14
Coq.Sets.Multiset.meq_left	40	3.0.0.8	search with cache (only 1: intros a b c Ha Hb; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto with arith).	2.47788286209	2423
Coq.Sets.Multiset.meq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0358958244324	10
Coq.Sets.Multiset.munion_rotate	40	1.14.5	search with cache (only 1: destruct x; only 1: fix gcd_divide 1; only 1: auto with arith).	35.7944130898	39924
Coq.Sets.Multiset.meq_congr	40	1.3.4.1.1.0	search with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto with arith).	2.54491901398	2550
Coq.Sets.Multiset.munion_perm_left	40	1.15.3	search with cache (only 1: destruct x; only 1: fix gcd_divide 1; only 1: auto with arith).	27.2010560036	27213
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	0.404841899872	240
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: auto with sets).	0.0317120552063	1
Coq.Sets.Integers.le_antisym	40	0.0	search with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.0180680751801	2
Coq.Sets.Integers.le_trans	40	2	search with cache (only 1: exact PeanoNat.Nat.le_trans).	0.139277935028	50
Coq.Sets.Integers.le_Order	40	1.0.1.0.0.2	search with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: exact PeanoNat.Nat.le_trans; only 1: red; only 1: PeanoNat.Nat.order).	0.0747208595276	24
Coq.Sets.Integers.triv_nat	40	6	search with cache (only 1: split).	0.0490539073944	43
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	2.16.2	search with cache (only 1: intros; only 1: intros x' x'' Hx' Hx''; only 1: auto).	0.206938028336	855
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	1.1.1.1.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'0; only 1: auto  10 with sets).	0.0966699123383	79
Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.0.0	search with cache (only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).	0.00976800918579	3
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	7.0.2.0.2.0.2.0.1	search with cache (only 1: split; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [? ?] [? ?]; only 1: red; only 1: auto  10 with sets; only 1: red; only 1: intros A B [H1 H2]; only 1: auto  10 with sets).	8.52797889709	17320
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	2.0.3.3	search with cache (only 1: intros x y h; only 1: destruct 1; only 1: red; only 1: auto  10 with sets).	0.078136920929	179
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.00731301307678	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.00786900520325	2
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	3.0	search with cache (only 1: intros; only 1: auto  10 with sets).	0.00934410095215	5
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto with sets).	0.00850009918213	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	1.1.0.0.1.0.1.1.5	search with cache (only 1: intros H'0 H'1; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	0.577831029892	2388
Coq.Sets.Relations_2_facts.Rstar_transitive	40	1.0.0.8.2.5.7.1.1	search with cache (only 1: intros U R; only 1: red; only 1: intro T; only 1: induction 1; only 1: auto with sets; only 1: intro T; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	11.0002269745	64366
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	0.0.0.0.2.6.0.0.1.0.0.3.0.1	search with cache (only 1: generalize Rstar_contains_R; only 1: intro T; only 1: intros; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: red in T; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	30.2397689819	79108
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.0.0.1.3.2.4	search with cache (only 1: compute; only 1: intro T; only 1: intros x y H'; only 1: induction 1; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	1.87858605385	5904
Coq.Sets.Relations_2_facts.star_monotone	40	0.1.2.2.0.0.1	search with cache (only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	0.552803039551	1083
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	5.0	search with cache (only 1: intros; only 1: auto).	0.0330159664154	13
Coq.Sets.Permut.comm_left	40	1.2.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0123028755188	6
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	2.0.0.1.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: trivial).	0.0236849784851	17
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.0.8.19.2	search with cache (only 1: intuition; only 1: unfold In in *; only 1: exists x; only 1: auto with sets; only 1: auto with sets).	10.2851190567	14637
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	0.5.2.3.1.0.1.6	search with cache (only 1: intro A; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H; only 1: inversion H; only 1: inversion H0; only 1: auto with sets).	5.68668198586	4288
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	16.2.1.2.0	search with cache (only 1: intros X f x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: intros; only 1: firstorder).	4.15330481529	6196
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	8.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0302109718323	78
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40	2.2.2.9	search with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.357847929001	462
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00964188575745	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	1	search with cache (only 1: auto with sets).	0.00794696807861	2
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40	0.6.1.2.0.0.5.1.1.0	search with cache (only 1: intro A; only 1: intro X; only 1: intros x H'; only 1: elim H'; only 1: red; only 1: intros; only 1: split; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	11.8645069599	11435
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.0.3.2.0.0.0.0.0.0.0.2	search with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: intro A; only 1: auto with sets; only 1: auto with sets).	38.1725409031	9683
Coq.Sets.Powerset.Empty_set_is_Bottom	40	1.0.1.6.3.6.1	search with cache (only 1: intro A; only 1: split; only 1: red; only 1: split; only 1: auto with sets; only 1: intros x H'; only 1: destruct 1).	3.18901515007	3355
Coq.Sets.Powerset.Union_minimal	40	2.2.0.0.0.2.5	search with cache (only 1: intros H'1 H'2; only 1: intuition; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	9.58922195435	4483
Coq.Sets.Powerset.Intersection_maximal	40	4.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0100030899048	13
Coq.Sets.Powerset.Union_increases_l	40	0.2.0.0	search with cache (only 1: intro A; only 1: intro X; only 1: elim Inclusion_is_an_order; only 1: auto with sets).	0.0184071063995	55
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00470995903015	1
Coq.Sets.Powerset.Intersection_decreases_l	40	1.1.0.0.0.1	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.012699842453	9
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.00719213485718	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	3.0.3	search with cache (only 1: intros A x y H'; only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).	0.274848937988	44
Coq.Sets.Classical_sets.Subtract_inv	40	6.0.3	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: auto with sets).	0.243986845016	189
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.0.0.1.0.0.1	search with cache (only 1: intro; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: elim H'1; only 1: auto with sets).	0.0359799861908	9
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.5.0.2	search with cache (only 1: intros A B x H' H'0; only 1: red; only 1: elim H'0; only 1: auto with sets).	0.244627952576	118
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.2.1.0.0	search with cache (only 1: intros A B x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.157350063324	22
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40	0.0.0.0.1.1.0.0.0.5.0	search with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	12.4584648609	5139
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.1.3.0.1.2.0.0.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	7.49348115921	6255
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40	0.0.1.0.0.0.0.0.0.1.1.0.3.1	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros t H'1 H'2; only 1: elim H'2; only 1: auto with sets).	38.4564468861	21820
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	19	search with cache (only 1: auto  10 with sets).	0.254426002502	451
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.010840177536	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.14	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.148577928543	147
Coq.Sets.Powerset_facts.less_than_empty	40	0.0	search with cache (only 1: intros X H'; only 1: auto with sets).	0.00927901268005	2
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto with sets).	0.0103950500488	1
Coq.Sets.Powerset_facts.Union_associative	40	19.6	search with cache (only 1: intro X; only 1: auto  10 with sets).	2.51053118706	2059
Coq.Sets.Powerset_facts.Union_idempotent	40	1	search with cache (only 1: auto  6 with sets).	0.0146780014038	2
Coq.Sets.Powerset_facts.Union_absorbs	40	1.1	search with cache (only 1: intros B C H'; only 1: auto  7 with sets).	0.0191268920898	4
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	1.1.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.61729502678	3012
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	13.5371470451	15109
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.2.1.0.0.2.1.0.1.2.9	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	2.05591487885	2337
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.1.3.0.0.0.0.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	7.46156001091	10054
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	5.0.1.10	search with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	1.46638607979	1654
Coq.Sets.Powerset_facts.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.0.1.1.3.1.5	search with cache (only 1: intros X x H'; only 1: apply Singleton_inv; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x1 H'0; only 1: auto with sets).	0.640759944916	1412
Coq.Sets.Powerset_facts.incl_add	40	0.7	search with cache (only 1: unfold Add; only 1: auto with sets).	0.168094873428	46
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	4.2	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.136307954788	8
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40	21.6.1	search with cache (only 1: unfold Add; only 1: intros A B; only 1: auto  10 with sets).	19.5743939877	16921
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: intuition).	0.006667137146	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.012314081192	5
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.014261007309	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	1.1.4.1.2.1.5	search with cache (only 1: intros A B; only 1: apply Extensionality_Ensembles; only 1: red; only 1: intuition; only 1: red; only 1: destruct 1; only 1: assumption).	1.86051106453	1361
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.016942024231	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.2.1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: intuition; only 1: intuition).	0.242120981216	164
Coq.Sets.Constructive_sets.Extension	40	0.7.5.0.7.5.1	search with cache (only 1: split; only 1: destruct H; only 1: intro H; only 1: auto; only 1: destruct H; only 1: intro H; only 1: auto).	0.887852907181	6466
Coq.Sets.Constructive_sets.Noone_in_empty	40	11.14	search with cache (only 1: intro A; only 1: destruct 1).	0.215815067291	1354
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.00498485565186	4
Coq.Sets.Constructive_sets.Add_intro1	40	0.8.5.0	search with cache (only 1: intro; only 1: intro; only 1: left; only 1: trivial).	0.4610850811	2172
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00791597366333	2
Coq.Sets.Constructive_sets.Inhabited_add	40	2.12.7.0	search with cache (only 1: unfold Add at 1; only 1: intros; only 1: exists x; only 1: auto with sets).	0.380560874939	2697
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40	0.2.10.1.1.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.449696063995	2192
Coq.Sets.Constructive_sets.Singleton_inv	40	0.0.0	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0100560188293	3
Coq.Sets.Constructive_sets.Singleton_intro	40	2.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.00611591339111	5
Coq.Sets.Constructive_sets.Union_inv	40	0.0.5	search with cache (only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.0292160511017	60
Coq.Sets.Constructive_sets.Add_inv	40	4.7.3.0.0.7	search with cache (only 1: intro H; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	3.01020693779	11120
Coq.Sets.Constructive_sets.Intersection_inv	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: auto with sets).	0.0272970199585	11
Coq.Sets.Constructive_sets.Couple_inv	40	2.1.0.1	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.0499448776245	65
Coq.Sets.Constructive_sets.Setminus_intro	40	0.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.00783610343933	2
Coq.Sets.Constructive_sets.Strict_Included_intro	40	0.0	search with cache (only 1: red; only 1: auto with sets).	0.00738596916199	2
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.4.6	search with cache (only 1: intros X H'; only 1: elim H'; only 1: auto with sets).	0.148650169373	265
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	0.1.17.3	search with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	1.18669390678	1916
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	1.15.12	search with cache (only 1: intros; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	0.963738918304	1522
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	0.1.3	search with cache (only 1: induction 1; only 1: auto; only 1: apply Inhabited_add).	0.0121421813965	34