
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	23.2.10.7	synth with cache (only 1: intros y; only 1: intros h1 h2; only 1: intros w1; only 1: firstorder  (subst; auto)).	7.03613185883	9150
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	21.16	synth with cache (only 1: intros ? H; only 1: CRelationClasses.simpl_crelation).	2.96304678917	4712
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	26.13	synth with cache (only 1: intros w; only 1: firstorder).	1.85598897934	3821
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	18.4.6	synth with cache (only 1: intros w1; only 1: intros x y H; only 1: intuition).	0.53657579422	953
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	38.16	synth with cache (only 1: intros; only 1: firstorder).	1.03342604637	2926
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0174150466919	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0208961963654	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	4.4.2	synth with cache (only 1: intro; only 1: intro; only 1: ring).	0.167776823044	79
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0214269161224	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0191810131073	3
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	0.3.4.0.0.0.1.0.1.5.0.0	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: right; only 1: now split).	24.3782129288	12274
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	1.0.0.3.0.0	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: now destruct H).	0.0507781505585	11
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.0.4.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.516388893127	156
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.ZifyInt63.to_Z_bounded	40
Coq.micromega.ZifyInt63.ltb_lt	40
Coq.micromega.ZifyInt63.leb_le	40
Coq.micromega.ZifyInt63.eqb_eq	40	2.7.4.3.0.11	synth with cache (only 1: intros n1 n2; only 1: apply Bool.eq_true_iff_eq; only 1: case eqbP; only 1: Lia.lia; only 1: intros; only 1: Lia.lia).	17.117002964	19493
Coq.micromega.ZifyInt63.eq_int_inj	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: now subst; reflexivity; only 1: intro H; only 1: now apply to_Z_inj in H).	0.0291349887848	5
Coq.micromega.ZifyInt63.is_evenE	40
Coq.micromega.Ztac.eq_incl	40	0.2	synth with cache (only 1: intros n m p; only 1: intuition Z.order).	0.018837928772	4
Coq.micromega.Ztac.elim_concl_eq	40	4.5.3.1.1	synth with cache (only 1: intros x y; only 1: case (Z.eq_dec x y); only 1: intuition auto; N.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intuition; only 1: Z.order).	4.38903594017	3019
Coq.micromega.Ztac.elim_concl_le	40	1.1	synth with cache (only 1: intros; only 1: now apply Z.ge_le).	0.0328757762909	13
Coq.micromega.Ztac.elim_concl_lt	40	0.4	synth with cache (only 1: intros a b; only 1: Z.order).	0.223099946976	117
Coq.micromega.Ztac.Zlt_le_add_1	40	1.3	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.16799902916	43
Coq.micromega.Ztac.add_le	40	1.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0146551132202	3
Coq.micromega.Ztac.mul_le	40	0.0.4.0	synth with cache (only 1: intros n m Hn Hm; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.0229089260101	8
Coq.micromega.ZifyInst.eq_pos_inj	40	0.0.0.2	synth with cache (only 1: intros; only 1: split; only 1: congruence; only 1: congruence).	0.0522019863129	6
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.1.0.0.0.0.0.0.0.3.1.3.14	synth with cache (only 1: unfold Z.max, N.max; only 1: intros n; only 1: simpl; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	26.3749339581	19707
Coq.micromega.ZifyInst.pow_pos_strict	40	5.0	synth with cache (only 1: intros a b Ha Hb; only 1: Z.order_pos).	0.158583164215	7
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0128121376038	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0119111537933	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0134110450745	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0121650695801	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.0116770267487	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0638718605042	5
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	4.1.2.1.0.0.1.46	synth with cache (only 1: split; only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite H1; only 1: now rewrite H2; only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite H1; only 1: now rewrite H2; only 1: exact (SORopp_wd sor)).	26.5483601093	3160
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.0.2	synth with cache (only 1: intros a b **; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.538630008698	184
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	1.5.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.0895628929138	21
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	3.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: auto with zarith real).	0.0563230514526	11
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.1.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.0464751720428	5
Coq.micromega.ZifyClasses.mkapp2	40	0.11	synth with cache (only 1: subst; only 1: auto).	0.0595319271088	46
Coq.micromega.ZifyClasses.mkapp	40	10.0	synth with cache (only 1: subst; only 1: trivial).	0.0588879585266	52
Coq.micromega.ZifyClasses.mkrel	40	3.0	synth with cache (only 1: subst; only 1: auto).	0.0271470546722	5
Coq.micromega.ZifyClasses.and_morph	40	4.0.1.2.2.1.1.0.13	synth with cache (only 1: intro n; only 1: intros ? ? ? [? ?] [? ?]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: auto).	14.9324951172	24149
Coq.micromega.ZifyClasses.or_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.103877067566	2
Coq.micromega.ZifyClasses.impl_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0453691482544	2
Coq.micromega.ZifyClasses.iff_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0813999176025	2
Coq.micromega.ZifyClasses.not_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0354359149933	2
Coq.micromega.ZifyClasses.eq_iff	40	0.0.0.1	synth with cache (only 1: intros A B []; only 1: split; only 1: auto; only 1: auto).	0.0318689346313	14
Coq.micromega.ZifyClasses.rew_iff	40	2	synth with cache (only 1: tauto).	0.0230898857117	3
Coq.micromega.ZMicromega.eq_le_iff	40	3.1.0.0.1.9.0	synth with cache (only 1: split; only 1: destruct 1; only 1: split; only 1: apply Z.le_refl; only 1: apply Z.le_refl; only 1: destruct 1; only 1: intuition Z.Private_Tac.order).	5.70670700073	2104
Coq.micromega.ZMicromega.lt_le_iff	40	0.1	synth with cache (only 1: intro; only 1: apply Z.lt_le_pred).	0.439327001572	25
Coq.micromega.ZMicromega.le_0_iff	40	0.0.5.0	synth with cache (only 1: intros n m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	0.0834448337555	9
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.pop2_bop2	40
Coq.micromega.ZMicromega.Zeval_op2_hold	40
Coq.micromega.ZMicromega.Zeval_formula_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.2.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).	0.0974578857422	5
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.0.0.12.0	synth with cache (only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).	6.02019500732	2072
Coq.micromega.ZMicromega.isZ0_n0	40
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.0.4	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: assumption).	0.685426950455	67
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition).	0.12907910347	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.0130369663239	1
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.b2n_b2z	40	0.2	synth with cache (only 1: intros n; only 1: now destruct n).	0.0479021072388	29
Coq.micromega.ZifyBool.b2z_spec	40	14.2.0.44	synth with cache (only 1: intros; only 1: destruct b; only 1: now left; only 1: auto).	10.8794870377	12462
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40	2.2.1.1	synth with cache (only 1: rewrite <- ?jump_add; only 1: unfold jump; only 1: f_equal; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0422260761261	32
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	39	synth with cache (only 1: now destruct p).	0.323923110962	859
Coq.micromega.Env.S.nth_pred_double	40	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0184888839722	3
Coq.micromega.Tauto.S.EVAL.eval_f_rew	40	27.0	synth with cache (only 1: intro n; only 1: now intro l; induction l).	8.91472816467	6608
Coq.micromega.Tauto.S.eiff_refl	40
Coq.micromega.Tauto.S.eiff_sym	40	0.0.3.0.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: induction 1; only 1: simpl; only 1: tauto).	0.067727804184	9
Coq.micromega.Tauto.S.eiff_trans	40	0.0.0.0.5.1.2.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: intros; only 1: transitivity y; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	5.06541013718	2014
Coq.micromega.Tauto.S.hold_eiff	40
Coq.micromega.Tauto.S.eiff_eq	40	2.0.1.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0726010799408	8
Coq.micromega.Tauto.S.eAnd_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: intros; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.286367177963	6
Coq.micromega.Tauto.S.eOR_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.141116857529	6
Coq.micromega.Tauto.S.eIMPL_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.115268945694	6
Coq.micromega.Tauto.S.eIFF_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.182193994522	6
Coq.micromega.Tauto.S.eNOT_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.10321688652	6
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.10	synth with cache (only 1: intros; only 1: destruct l; only 1: reflexivity; only 1: reflexivity).	0.941972970963	250
Coq.micromega.Tauto.S.is_bool_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	5	synth with cache (only 1: destr_bool).	0.0850918292999	28
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.0238888263702	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0	synth with cache (only 1: reflexivity).	0.0235579013824	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	4.0.6.8	synth with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: reflexivity; only 1: now intros [=-> ->]).	1.30542993546	748
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.3.0.2.0.5	synth with cache (only 1: destruct f; only 1: simpl; only 1: unfold cnf_tt; only 1: congruence; only 1: simpl; only 1: congruence).	1.26201796532	401
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	0.2.0.0.0.0.3.5.1	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite orb_comm; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: reflexivity).	6.30311918259	1914
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_ff_r	40	0.1.4.15	synth with cache (only 1: intros f1; only 1: unfold and_cnf_opt; only 1: rewrite orb_comm; only 1: reflexivity).	1.09979009628	543
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_ff	40	0.0.0.0	synth with cache (only 1: intros; only 1: unfold and_cnf_opt; only 1: rewrite is_cnf_ff_cnf_ff; only 1: reflexivity).	0.0664920806885	4
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_tt	40	2.7.0.1.4.4.0.0	synth with cache (only 1: intros; only 1: unfold and_cnf_opt; only 1: simpl; only 1: destruct (is_cnf_ff f) eqn:EQ1; only 1: simpl; only 1: apply is_cnf_ff_inv in EQ1; only 1: auto; only 1: reflexivity).	33.4603190422	12486
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_bool_abst_simpl	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_simpl_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.mk_iff_is_bool	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_iff_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_eq_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_and_xcnf	40
Coq.micromega.Tauto.S.rxcnf_or_xcnf	40
Coq.micromega.Tauto.S.rxcnf_impl_xcnf	40
Coq.micromega.Tauto.S.rxcnf_iff_xcnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	2.1.3.8.13.28.0.0	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: split; only 1: simpl; only 1: clear; only 1: destruct 1; only 1: reflexivity; only 1: tauto).	20.8390369415	21303
Coq.micromega.Tauto.S.eval_cnf_tt	40	0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: tauto).	0.0543060302734	2
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	54.20	synth with cache (only 1: intros H; only 1: eauto).	18.2785499096	16383
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	0.0.1.0.1.6.0.0.2	synth with cache (only 1: unfold eval_cnf; only 1: intros env t; only 1: simpl; only 1: unfold eval_clause in *; only 1: induction f as [| a f IHf]; only 1: unfold make_conj at 2; only 1: tauto; only 1: repeat rewrite make_conj_cons in *; only 1: tauto).	20.6110839844	3286
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.155689001083	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.hold_eTT	40	0.19.1.20.0.19	synth with cache (only 1: intros cl; only 1: induction cl as [| a cl IHcl]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto).	15.440737009	12028
Coq.micromega.Tauto.S.hold_eFF	40	0.0.0.0.0.0	synth with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.133208036423	6
Coq.micromega.Tauto.S.hold_eAND	40
Coq.micromega.Tauto.S.hold_eOR	40
Coq.micromega.Tauto.S.hold_eNOT	40
Coq.micromega.Tauto.S.hold_eIMPL	40	0.2.0.1.1.2.0.0.0.0.0.0	synth with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: intros; only 1: apply iff_refl; only 1: simpl; only 1: intros e; only 1: unfold is_true; only 1: destruct e; only 1: intros; only 1: intuition congruence; only 1: intuition congruence).	39.2795610428	5559
Coq.micromega.Tauto.S.hold_eIFF	40
Coq.micromega.Tauto.S.xcnf_impl	40
Coq.micromega.Tauto.S.hold_eIFF_IMPL	40
Coq.micromega.Tauto.S.hold_eEQ	40	0.0.0.0.0.0.1.0.0	synth with cache (only 1: simpl; only 1: intros e1 e2; only 1: unfold is_true; only 1: rewrite eqb_true_iff; only 1: destruct e1, e2; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	0.370220899582	10
Coq.micromega.Tauto.S.xcnf_iff	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	17.4	synth with cache (only 1: intuition; only 1: firstorder).	1.53215909004	621
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	16.5	synth with cache (only 1: intuition; only 1: firstorder).	1.70716714859	582
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	12.3.6	synth with cache (only 1: elim ARth; only 1: intros A R1 Sym B R2 f Hf; only 1: firstorder).	3.09090685844	821
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	85	synth with cache (only 1: CRelationClasses.simpl_crelation).	7.82660388947	9212
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	27	synth with cache (only 1: firstorder).	1.20736193657	703
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P as [| | ? ? ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	22.674161911	2168
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	1.0.1.0.0.1.0.0.0.0.0.0.1	synth with cache (only 1: revert l; only 1: induction P as [| | ? ? ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	30.6272962093	3368
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.183114051819	5
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.174926042557	6
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	3.3.7.11	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: rsimpl; only 1: now jump_simpl; only 1: now jump_simpl).	4.237169981	942
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0118701457977	1
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	1	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0116150379181	2
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.00985503196716	1
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	synth with cache (only 1: exact (SORle_wd sor)).	0.0129120349884	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	synth with cache (only 1: exact (SORlt_wd sor)).	0.0142390727997	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.122225046158	9
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	1.0.4.0.4	synth with cache (only 1: intros; only 1: induction l; only 1: constructor; only 1: simpl; only 1: auto).	0.600162982941	236
Coq.micromega.Refl.make_impl_map	40	4.2.0.5.0.7	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: intros d n; only 1: reflexivity; only 1: destruct a; only 1: intros HF; only 1: firstorder).	5.44466400146	2425
Coq.micromega.Refl.make_conj_cons	40	3.0.2.2.0.1.0.4.0	synth with cache (only 1: intro x; only 1: intros a b; only 1: intros; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: reflexivity).	15.1355409622	6959
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	2.1.0.3	synth with cache (only 1: intros P Q l; only 1: intros n m; only 1: rewrite make_conj_cons; only 1: firstorder).	0.762853860855	83
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40	13.2	synth with cache (only 1: intros a n; only 1: now destruct n).	1.12404489517	783
Coq.micromega.QMicromega.QNpower	40	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0215640068054	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qlt_bool_iff	40	3.2	synth with cache (only 1: intros n m; only 1: apply Z.ltb_lt).	0.115473031998	36
Coq.micromega.QMicromega.pop2_bop2	40
Coq.micromega.QMicromega.Qeval_op2_hold	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40	14.27.4.1	synth with cache (only 1: intros m'; only 1: intros n; only 1: fix odd_spec 1; only 1: trivial).	37.455229044	56836
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	0	synth with cache (only 1: exact RTheory).	0.0144331455231	1
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	0.9	synth with cache (only 1: rewrite Rinv_1; only 1: auto with real).	0.0957419872284	60
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40	0.6.32	synth with cache (only 1: intros Hbeq; only 1: fix even_spec 1; only 1: auto).	25.9511368275	22673
Coq.micromega.RMicromega.Q2R_0	40
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	1.2.0.0.0.1.1.0.0.0.1.0	synth with cache (only 1: destruct z; only 1: destruct z; only 1: simpl; only 1: now try Z.order'; only 1: simpl; only 1: intros; only 1: auto with zarith; only 1: intros H l; only 1: discriminate || clear H; only 1: simpl; only 1: intros; only 1: auto with zarith).	4.12779283524	2331
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0797970294952	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40	1.0.0.5.0.1.6	synth with cache (only 1: induction p; only 1: reflexivity; only 1: simpl; only 1: rewrite ?IHp; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	17.3416979313	1336
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.pop2_bop2	40	5.9.1	synth with cache (only 1: unfold is_true; only 1: fix odd_spec 1; only 1: trivial).	5.63276600838	2301
Coq.micromega.RMicromega.Reval_op2_hold	40
Coq.micromega.RMicromega.Reval_pop2_eval_op2	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.QReval_formula_compat	40	0.0.3.2.0	synth with cache (only 1: intros; only 1: destruct f as [e o]; only 1: cbn-[ZMicromega.psub]; only 1: rewrite Reval_op2_hold; only 1: apply Reval_pop2_eval_op2).	0.0576679706573	17
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40	8.7.0	synth with cache (only 1: intros ? v2; only 1: fix even_spec 1; only 1: auto).	4.34651303291	1595
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	7	synth with cache (only 1: congruence).	0.114063978195	33
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_hd	40
Coq.Vectors.VectorSpec.nth_order_tl	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.nth_order_ext	40	3.15	synth with cache (only 1: fix gcd_greatest 1; only 1: now simpl).	4.73434185982	3162
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	3.1.1.20	synth with cache (only 1: fix gcd_divide 1; only 1: apply caseS; only 1: intros; only 1: auto).	16.0852799416	10334
Coq.Vectors.VectorSpec.nth_order_replace_eq	40
Coq.Vectors.VectorSpec.nth_order_replace_neq	40
Coq.Vectors.VectorSpec.replace_id	40
Coq.Vectors.VectorSpec.replace_replace_eq	40
Coq.Vectors.VectorSpec.replace_replace_neq	40
Coq.Vectors.VectorSpec.const_nth	40	0.7.0.0	synth with cache (only 1: induction p as [| ? p IHp]; only 1: now split; only 1: simpl; only 1: auto).	0.166848897934	52
Coq.Vectors.VectorSpec.map_id	40
Coq.Vectors.VectorSpec.map_map	40	0.0.10.1.9.0.1.0.6	synth with cache (only 1: intros Az LS; only 1: intros n v; only 1: induction v as [| ? ? v IHv]; only 1: reflexivity; only 1: generalize dependent n; only 1: intros b Hb IH; only 1: compute; only 1: f_equal; only 1: auto).	28.029417038	25085
Coq.Vectors.VectorSpec.map_ext_in	40
Coq.Vectors.VectorSpec.map_ext	40	0.0.2.2.0.0.0.18	synth with cache (only 1: intros; only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: intuition).	9.72119498253	8498
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.2.1	synth with cache (only 1: intros n m H1 H2; only 1: simpl; only 1: auto).	0.0394570827484	6
Coq.Vectors.VectorSpec.take_idem	40	3.18.1	synth with cache (only 1: intro x; only 1: fix gcd_greatest 1; only 1: intuition).	28.5637440681	20033
Coq.Vectors.VectorSpec.take_app	40	3.21.4	synth with cache (only 1: intro k; only 1: fix gcd_greatest 1; only 1: auto).	26.2872860432	21570
Coq.Vectors.VectorSpec.take_prf_irr	40
Coq.Vectors.VectorSpec.uncons_cons	40	0.0	synth with cache (only 1: intros; only 1: now simpl).	0.0304520130157	2
Coq.Vectors.VectorSpec.append_comm_cons	40	0	synth with cache (only 1: now simpl).	0.0201051235199	1
Coq.Vectors.VectorSpec.splitat_append	40	0.6.0.1.1.0.0.15	synth with cache (only 1: intros m n; only 1: induction v as [| ? ? v IHv]; only 1: intros v; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHv; only 1: now simpl).	14.3162600994	9178
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.VectorSpec.Forall_impl	40
Coq.Vectors.VectorSpec.Forall_forall	40
Coq.Vectors.VectorSpec.Forall_nth_order	40
Coq.Vectors.VectorSpec.Forall2_nth_order	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40	4.5.1	synth with cache (only 1: intros ? q; only 1: fix even_spec 1; only 1: easy).	2.06693196297	1184
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	3.1.2.3.2.4	synth with cache (only 1: intros ? q; only 1: induction n as [| n IHn]; only 1: destruct m; only 1: now try PeanoNat.Nat.order'; only 1: easy; only 1: now intros ->).	3.27490782738	2649
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.0.0.0.4.0.0.0.3.3	synth with cache (only 1: induction p as [p| p| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: simpl; only 1: trivial).	5.1847589016	3908
Coq.rtauto.Bintree.map_app	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros A B f l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0538470745087	9
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0.0	synth with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0344281196594	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.4.0.0.1.7.3	synth with cache (only 1: intro; only 1: destruct p; only 1: simpl; only 1: auto; only 1: split; only 1: simpl; only 1: auto).	1.15986013412	1434
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	0.2.1.2	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0343651771545	13
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	0.0.19.1	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: inversion 1; only 1: congruence).	5.26603507996	5590
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40	2.3.9.21.15.0	synth with cache (only 1: destr_bool; only 1: exfalso; only 1: contradict H; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	25.9305391312	39114
Coq.rtauto.Rtauto.form_eq_refl	40	11.14.11	synth with cache (only 1: intro m; only 1: fix even_spec 1; only 1: easy).	3.22034406662	5905
Coq.rtauto.Rtauto.with_env.compose0	40	7.2.1.3.1.13	synth with cache (only 1: intro e; only 1: induction F; only 1: firstorder; only 1: unfold get, push, index; only 1: simpl; only 1: auto).	34.1423771381	35188
Coq.rtauto.Rtauto.with_env.compose1	40
Coq.rtauto.Rtauto.with_env.compose2	40	8.0.7.1.0.2	synth with cache (only 1: induction F; only 1: destr_bool; only 1: auto; only 1: simpl; only 1: intros i e; only 1: firstorder  (subst; auto)).	7.09232401848	5694
Coq.rtauto.Rtauto.with_env.compose3	40
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40	5.11.0.1	synth with cache (only 1: intros A H; only 1: intro n; only 1: fix even_spec 1; only 1: apply PeanoNat.Nat.even_spec).	5.40206408501	5832
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.0176131725311	1
Coq.Setoids.Setoid.Seq_sym	40	4.2.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: apply (symmetry (x:=_)); only 1: assumption).	0.0354800224304	12
Coq.Setoids.Setoid.Seq_trans	40	2.1.1.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0435581207275	11
Coq.Setoids.Setoid.gen_st	40	2	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.112700939178	59
Coq.Bool.IfProp.Iftrue_inv	40	0.1.0.4	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.027037858963	33
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.1.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0179159641266	7
Coq.Bool.IfProp.IfProp_true	40	0.42.0.8	synth with cache (only 1: intro m; only 1: intros; only 1: inversion_clear H; only 1: auto).	25.5624787807	108850
Coq.Bool.IfProp.IfProp_false	40	0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0121510028839	4
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).	0.0154900550842	12
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.BoolOrder.le_refl	40	2.0.3.0	synth with cache (only 1: intros; only 1: destruct b; only 1: destr_bool; only 1: intuition).	0.0119700431824	9
Coq.Bool.BoolOrder.le_trans	40	8	synth with cache (only 1: destr_bool).	0.0221421718597	20
Coq.Bool.BoolOrder.le_true	40	0	synth with cache (only 1: destr_bool).	0.00644493103027	1
Coq.Bool.BoolOrder.false_le	40	0	synth with cache (only 1: destr_bool).	0.00653409957886	1
Coq.Bool.BoolOrder.le_compat	40	4.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: congruence; only 1: congruence; only 1: intros R R' EQ a a' Ha WF; only 1: simpl_relation).	0.0500631332397	16
Coq.Bool.BoolOrder.lt_irrefl	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.00956702232361	2
Coq.Bool.BoolOrder.lt_trans	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.037437915802	2
Coq.Bool.BoolOrder.lt_compat	40	0	synth with cache (only 1: intuition).	0.00987911224365	1
Coq.Bool.BoolOrder.lt_trichotomy	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition; only 1: intuition).	0.0346369743347	6
Coq.Bool.BoolOrder.lt_total	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.0250568389893	5
Coq.Bool.BoolOrder.lt_le_incl	40	0.0	synth with cache (only 1: destr_bool; only 1: auto).	0.0111200809479	2
Coq.Bool.BoolOrder.le_lteq_dec	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition).	0.0222010612488	4
Coq.Bool.BoolOrder.le_lteq	40	1.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0379440784454	9
Coq.Bool.BoolOrder.le_preorder	40	1.6.5.3.2	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: destr_bool; only 1: compute; only 1: destr_bool).	0.391713142395	723
Coq.Bool.BoolOrder.lt_strorder	40	0.0.2.11.3.2.2	synth with cache (only 1: split; only 1: intros b; only 1: destr_bool; only 1: destruct 1; only 1: intros b; only 1: destr_bool; only 1: auto).	0.618583202362	1057
Coq.Bool.Zerob.zerob_true_intro	40	0.0.7.2	synth with cache (only 1: intro m; only 1: destruct m; only 1: now try Nat.order'; only 1: easy).	0.50691485405	252
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0.0	synth with cache (only 1: intro m; only 1: destruct m; only 1: trivial with bool; only 1: easy).	0.0456099510193	4
Coq.Bool.Zerob.zerob_false_intro	40	1.1.0.0.1.0	synth with cache (only 1: destruct n; only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: trivial).	0.0518560409546	9
Coq.Bool.Zerob.zerob_false_elim	40	2.1.15	synth with cache (only 1: induction n as [| n IHn]; only 1: intuition; only 1: easy).	3.13066196442	2408
Coq.Bool.DecBool.ifdec_left	40	0.2.5.1.0.2	synth with cache (only 1: intro A; only 1: intro H; only 1: intro n; only 1: intros [?| ?]; only 1: auto; only 1: contradiction).	1.1946849823	1398
Coq.Bool.DecBool.ifdec_right	40	0.10.1.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).	3.60081195831	2871
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.10.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.0945320129395	113
Coq.Bool.Sumbool.bool_eq_rec	40	0.3.0.4	synth with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.103968858719	78
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0.0	synth with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0310451984406	4
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0408310890198	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0352239608765	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	3	synth with cache (only 1: discriminate).	0.010715007782	16
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.00723600387573	1
Coq.Bool.Bool.eq_true_false_abs	40	2.1.5.4.0	synth with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.261959075928	443
Coq.Bool.Bool.not_true_is_false	40	2.8.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.0698750019073	118
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0116069316864	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.8.2	synth with cache (only 1: intro H; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.478269100189	593
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0141069889069	3
Coq.Bool.Bool.le_implb	40	0.0.0.1.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.151822805405	94
Coq.Bool.Bool.compare_spec	40	0.1.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0181019306183	6
Coq.Bool.Bool.eqb_subst	40	0	synth with cache (only 1: destr_bool).	0.00860500335693	1
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.00724101066589	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.00781393051147	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0909750461578	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.019877910614	6
Coq.Bool.Bool.negb_orb	40	0	synth with cache (only 1: destr_bool).	0.00965404510498	1
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.00768494606018	1
Coq.Bool.Bool.negb_involutive	40	1	synth with cache (only 1: destr_bool).	0.00699186325073	2
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.00710201263428	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.00779414176941	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.00821995735168	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.00649309158325	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.00640511512756	1
Coq.Bool.Bool.if_negb	40	2	synth with cache (only 1: destr_bool).	0.0109679698944	12
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0126428604126	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0137739181519	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0471880435944	41
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0236570835114	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).	0.0154311656952	4
Coq.Bool.Bool.orb_prop	40	0.0.0.0.0.0	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0207500457764	6
Coq.Bool.Bool.orb_true_intro	40	1.0.0.0.0.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destr_bool; only 1: intuition).	0.0815250873566	55
Coq.Bool.Bool.orb_false_intro	40	7.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0119590759277	9
Coq.Bool.Bool.orb_false_elim	40	0.0.3.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: auto).	0.0568730831146	40
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.0063807964325	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00642085075378	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00626111030579	1
Coq.Bool.Bool.orb_false_r	40	1	synth with cache (only 1: destr_bool).	0.00661683082581	2
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00645017623901	1
Coq.Bool.Bool.orb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00747990608215	1
Coq.Bool.Bool.orb_negb_l	40	0	synth with cache (only 1: destr_bool).	0.00731682777405	1
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.00755000114441	1
Coq.Bool.Bool.orb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0107500553131	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.021292924881	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0446949005127	5
Coq.Bool.Bool.andb_true_eq	40	0.4.1	synth with cache (only 1: intro b1; only 1: destr_bool; only 1: intuition).	0.08793592453	60
Coq.Bool.Bool.andb_false_intro1	40	0	synth with cache (only 1: destr_bool).	0.00771713256836	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0117108821869	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.00669097900391	2
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00671911239624	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.00662183761597	1
Coq.Bool.Bool.andb_true_r	40	1	synth with cache (only 1: destr_bool).	0.00656795501709	2
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00742602348328	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.028795003891	15
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00781202316284	1
Coq.Bool.Bool.andb_negb_l	40	0	synth with cache (only 1: destr_bool).	0.00766181945801	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.00772905349731	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.00932097434998	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0107700824738	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0109310150146	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0112400054932	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.011106967926	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.00864601135254	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.00779104232788	1
Coq.Bool.Bool.implb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0197179317474	5
Coq.Bool.Bool.implb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.025416135788	5
Coq.Bool.Bool.implb_orb	40	0	synth with cache (only 1: destr_bool).	0.00802898406982	1
Coq.Bool.Bool.implb_negb_orb	40	0	synth with cache (only 1: destr_bool).	0.00911998748779	1
Coq.Bool.Bool.implb_true_r	40	1	synth with cache (only 1: destr_bool).	0.00815200805664	2
Coq.Bool.Bool.implb_false_r	40	0	synth with cache (only 1: destr_bool).	0.00732803344727	1
Coq.Bool.Bool.implb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00769186019897	1
Coq.Bool.Bool.implb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00654792785645	1
Coq.Bool.Bool.implb_same	40	0	synth with cache (only 1: destr_bool).	0.00662112236023	1
Coq.Bool.Bool.implb_contrapositive	40	0	synth with cache (only 1: destr_bool).	0.00786209106445	1
Coq.Bool.Bool.implb_negb	40	0	synth with cache (only 1: destr_bool).	0.00787115097046	1
Coq.Bool.Bool.implb_curry	40	0	synth with cache (only 1: destr_bool).	0.00975298881531	1
Coq.Bool.Bool.implb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0100538730621	1
Coq.Bool.Bool.implb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0845069885254	1
Coq.Bool.Bool.implb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0103349685669	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.00758600234985	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00687193870544	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0075740814209	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.00632786750793	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.00704383850098	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.00788497924805	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.0106840133667	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.00917887687683	1
Coq.Bool.Bool.xorb_move_l_r_1	40	5.0	synth with cache (only 1: intros; only 1: destr_bool).	0.018168926239	7
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0118200778961	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0118048191071	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0118479728699	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.00981211662292	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0.0	synth with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0189762115479	6
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.00875401496887	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0272917747498	5
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0153179168701	5
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0105159282684	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0113410949707	2
Coq.Bool.Bool.absurd_eq_bool	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0117099285126	3
Coq.Bool.Bool.absurd_eq_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00958895683289	2
Coq.Bool.Bool.trans_eq_bool	40	0	synth with cache (only 1: destr_bool).	0.00986194610596	1
Coq.Bool.Bool.Is_true_eq_true	40	0.1	synth with cache (only 1: destr_bool; only 1: intuition).	0.00952816009521	3
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.00664210319519	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0100150108337	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.00704193115234	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0120551586151	3
Coq.Bool.Bool.orb_prop_elim	40	1.0.1.0.0.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	0.0348279476166	20
Coq.Bool.Bool.orb_prop_intro	40	1.4.2.0.0.0.2	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intro A; only 1: tauto).	0.850296974182	1256
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0221199989319	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.01673412323	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0143709182739	3
Coq.Bool.Bool.eq_bool_prop_elim	40	1.0.0.4.1	synth with cache (only 1: intros; only 1: subst; only 1: destruct b2; only 1: intuition; only 1: intuition).	0.131827831268	119
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0112731456757	3
Coq.Bool.Bool.negb_prop_intro	40	2.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.00937485694885	4
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0085768699646	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0104179382324	3
Coq.Bool.Bool.andb_if	40	0	synth with cache (only 1: destr_bool).	0.00811004638672	1
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.0078649520874	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.00838685035706	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.00630307197571	1
Coq.Bool.Bool.reflect_iff	40	9.0.5.0.6.5	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: intuition; only 1: split; only 1: intuition; only 1: destr_bool).	12.5264880657	20543
Coq.Bool.Bool.iff_reflect	40	8.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0932009220123	120
Coq.Bool.Bool.reflect_dec	40	0.3.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0130269527435	6
Coq.Bool.Bool.eqb_spec	40	1.1.1.1.0	synth with cache (only 1: destruct b, b'; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0178439617157	9
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	1.3.1	synth with cache (only 1: intros; only 1: destruct H; only 1: intuition).	0.016578912735	8
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	4.0.0.0.0.3.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	5.14019179344	1824
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	2.0.1.2	synth with cache (only 1: intro l; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: auto with datatypes).	0.760554075241	121
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	5.70238399506	1464
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	1.0.0.1.0.4.5.2	synth with cache (only 1: simple induction x; only 1: discriminate; only 1: unfold not; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: intros _ _ [=]).	2.99775195122	1423
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.1.0.6.3.0	synth with cache (only 1: simple induction y; only 1: now simpl; only 1: intros Hnin; only 1: simpl; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: auto with datatypes).	6.78091883659	2257
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.0.1.2.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.278249979019	21
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0626111030579	4
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	0.685661792755	70
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	0.2.0.0.2.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).	6.75818896294	1232
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	0.2.0.0.0.0	synth with cache (only 1: induction l as [| y l IHl]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	0.0593829154968	8
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.4	synth with cache (only 1: intros [x y]; only 1: reflexivity).	0.0366051197052	15
Coq.Lists.Streams.Streams.tl_nth_tl	40	0.0.0.0.6	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: intro x; only 1: trivial).	0.579405069351	188
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	2.2.6.0.4	synth with cache (only 1: intro x; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto; only 1: assumption).	1.27587914467	892
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	4.10.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.433211088181	258
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0566999912262	5
Coq.Lists.Streams.Map.Str_nth_map	40	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0540990829468	5
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.0.4.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: intro m; only 1: intros s; only 1: apply IHn).	0.482774019241	147
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0569069385529	7
Coq.Lists.List.Facts.nil_cons	40	16	synth with cache (only 1: discriminate).	0.242270946503	194
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.0.0.31	synth with cache (only 1: induction l as [| T l IHl]; only 1: discriminate; only 1: intros; only 1: discriminate).	2.9403591156	2774
Coq.Lists.List.Facts.length_zero_iff_nil	40	2.0.5.0.1.1.0	synth with cache (only 1: destruct l; only 1: split; only 1: auto; only 1: easy; only 1: split; only 1: discriminate; only 1: easy).	1.69979095459	1046
Coq.Lists.List.Facts.hd_error_nil	40	0	synth with cache (only 1: reflexivity).	0.0178430080414	1
Coq.Lists.List.Facts.hd_error_cons	40	0.1	synth with cache (only 1: unfold hd_error; only 1: firstorder  discriminate).	0.0261828899384	3
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	1.1	synth with cache (only 1: simpl; only 1: firstorder  discriminate).	0.0247409343719	4
Coq.Lists.List.Facts.app_nil_r	40
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0514731407166	7
Coq.Lists.List.Facts.app_assoc	40	1.0.24.2.4	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	28.7461810112	29147
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0535709857941	6
Coq.Lists.List.Facts.app_comm_cons	40	1	synth with cache (only 1: split).	0.0205528736115	2
Coq.Lists.List.Facts.app_eq_nil	40	0.1.0.0.4.2	synth with cache (only 1: destruct l; only 1: split; only 1: f_equal; only 1: auto; only 1: simpl; only 1: firstorder  discriminate).	0.520372867584	195
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.elt_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail_iff	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	1.0.1.8	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.499574899673	267
Coq.Lists.List.Facts.last_length	40	2.3.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: auto).	0.363130092621	147
Coq.Lists.List.Facts.app_inv_head_iff	40	4.9.8	synth with cache (only 1: intros a b; only 1: fix even_spec 1; only 1: auto).	6.30113387108	7583
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Facts.app_inv_tail_iff	40	0.12.9	synth with cache (only 1: intros a b; only 1: fix even_spec 1; only 1: auto).	20.1497468948	21662
Coq.Lists.List.Facts.in_eq	40	1.2.0.0	synth with cache (only 1: simpl; only 1: intro l2; only 1: intros H; only 1: firstorder  discriminate).	0.0326209068298	7
Coq.Lists.List.Facts.in_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0174701213837	2
Coq.Lists.List.Facts.not_in_cons	40
Coq.Lists.List.Facts.in_nil	40	2.1.0	synth with cache (only 1: simpl; only 1: intro H; only 1: firstorder).	0.0223829746246	6
Coq.Lists.List.Facts.in_app_or	40
Coq.Lists.List.Facts.in_or_app	40	1.1.0.1.5.7.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: intro y; only 1: simpl; only 1: induction l as [| ? l IHl]; only 1: intuition; only 1: auto).	18.9003899097	16177
Coq.Lists.List.Facts.in_app_iff	40
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_elt	40	0.0.0.0.1.8.7.8	synth with cache (only 1: intro l2; only 1: intros l H; only 1: generalize H; only 1: elim l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.04932689667	5668
Coq.Lists.List.Facts.in_elt_inv	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0134479999542	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0.2.0.1	synth with cache (only 1: simpl; only 1: intro x; only 1: intro y; only 1: intros n l d; only 1: auto).	0.0569100379944	14
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40	0.0.6.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: auto with arith).	4.21762704849	1596
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.app_nth2_plus	40	0.0.0.2.3	synth with cache (only 1: intros l m a; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto with arith).	0.531848907471	106
Coq.Lists.List.Elts.nth_middle	40	0.0.0.0.2.5	synth with cache (only 1: intros l m a; only 1: induction l; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto).	0.790837049484	315
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_ext	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40	5.0.2.0.0.0.2.0.0.0.0	synth with cache (only 1: revert l; only 1: induction n as [| n IHn]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: apply IHn; only 1: auto with arith).	26.9521260262	9198
Coq.Lists.List.Elts.nth_error_nth	40	0.0.0.0.0.4.0.1.1.0.3	synth with cache (only 1: induction l as [| a l IH]; only 1: intros [| n]; only 1: easy; only 1: simpl; only 1: now discriminate; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto with arith; only 1: simpl; only 1: eauto).	20.8727681637	7416
Coq.Lists.List.Elts.nth_error_nth'	40
Coq.Lists.List.Elts.last_last	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.removelast_last	40
Coq.Lists.List.Elts.remove_cons	40
Coq.Lists.List.Elts.remove_app	40
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.notin_remove	40
Coq.Lists.List.Elts.in_remove	40
Coq.Lists.List.Elts.in_in_remove	40
Coq.Lists.List.Elts.remove_remove_comm	40
Coq.Lists.List.Elts.remove_remove_eq	40
Coq.Lists.List.Elts.remove_length_le	40
Coq.Lists.List.Elts.remove_length_lt	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	4.0	synth with cache (only 1: simpl; only 1: trivial).	0.0310199260712	6
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	7.0.0.3	synth with cache (only 1: simpl; only 1: destruct (eq_dec x y); only 1: intuition; only 1: intuition).	0.550874948502	236
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0486600399017	3
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	0.10.3.0.0.1	synth with cache (only 1: induction l as [| ? l IHl]; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite IHl; only 1: auto).	2.74469590187	1784
Coq.Lists.List.ListOps.rev_involutive	40
Coq.Lists.List.ListOps.rev_eq_app	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40	1.4.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: rewrite <- plus_n_Sm, plus_n_O; only 1: simpl; only 1: auto).	2.69238901138	1169
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	1.4.5.1	synth with cache (only 1: intros a H; only 1: induction l as [| ? l IHl]; only 1: auto; only 1: auto).	1.37715697289	901
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0225391387939	2
Coq.Lists.List.ListOps.concat_cons	40	1.0	synth with cache (only 1: intros l a; only 1: auto).	0.0264408588409	3
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.in_concat	40
Coq.Lists.List.ListOps.list_eq_dec	40
Coq.Lists.List.Map.map_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0272290706635	2
Coq.Lists.List.Map.in_map	40	0.1.0.0.1.1.0.4.1	synth with cache (only 1: intros l x; only 1: induction l as [| ? ? IHl]; only 1: easy; only 1: simpl; only 1: intro H; only 1: destruct H; only 1: subst; only 1: auto; only 1: firstorder).	18.0347101688	9186
Coq.Lists.List.Map.in_map_iff	40	0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.105490922928	4
Coq.Lists.List.Map.map_length	40	1.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: firstorder  (subst; auto)).	0.0511898994446	7
Coq.Lists.List.Map.map_nth	40	0.0.0.2.2.0.0.4.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: induction n as [| n IHn]; only 1: simpl; only 1: trivial; only 1: split; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	6.41356801987	4052
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	0.0.2.1.0.0.0.0.0	synth with cache (only 1: intro x; only 1: induction x as [| a l IHl]; only 1: intro y; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: trivial).	1.67945504189	548
Coq.Lists.List.Map.map_last	40	0.0.4.0.0.1.0.7	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite IHl; only 1: auto).	3.15999698639	1317
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	2.0.0.4.0	synth with cache (only 1: intro l; only 1: destruct l as [| x l]; only 1: simpl; only 1: auto; only 1: firstorder  discriminate).	0.164104938507	73
Coq.Lists.List.Map.map_eq_cons	40
Coq.Lists.List.Map.map_eq_app	40
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.flat_map_app	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	4.7.0.0.7	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	8.0514421463	6787
Coq.Lists.List.concat_map	40
Coq.Lists.List.remove_concat	40
Coq.Lists.List.map_id	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0880041122437	30
Coq.Lists.List.map_map	40	0.0.0.0.1.5	synth with cache (only 1: intros a b n ? ? ?; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: rewrite IH; only 1: reflexivity).	0.484136104584	166
Coq.Lists.List.map_ext_in	40	0.0.5.1.2.0.0.7.4	synth with cache (only 1: intros Hnin; only 1: induction l; only 1: auto; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: f_equal; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	13.1563129425	7199
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	36.5139541626	15062
Coq.Lists.List.map_ext	40	0.0.0.0.0.7.16	synth with cache (only 1: firstorder; only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	5.87322711945	5425
Coq.Lists.List.flat_map_ext	40	0.0.0.0.0.4.0	synth with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IH; only 1: auto).	0.279390096664	74
Coq.Lists.List.nth_nth_nth_map	40
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.3.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	0.0462219715118	8
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40
Coq.Lists.List.Bool.find_none	40	2.0.1.0.2.0.3.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: intros [=] ? []; only 1: simpl; only 1: case_eq (f a); only 1: now auto with arith; only 1: intros Ha Eq; only 1: intros a' [?| ?]; only 1: congruence; only 1: auto).	20.9518330097	3162
Coq.Lists.List.Bool.partition_cons1	40	2.5.7.0.2.3.0.1	synth with cache (only 1: simpl; only 1: intros H; only 1: case (f a); only 1: intros; only 1: inversion H; only 1: rewrite H; only 1: repeat split; only 1: easy).	22.3989260197	14701
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0331749916077	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40	0.0.0.0.0.0.4.6	synth with cache (only 1: intros a b; only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: intros H; only 1: apply map_ext_in; only 1: auto).	19.2227299213	5736
Coq.Lists.List.Filtering.filter_ext	40	0.0.0.1.0	synth with cache (only 1: intros f g l; only 1: intro y; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.047080039978	6
Coq.Lists.List.Filtering.remove_alt	40	2.0.0.8.0.0.0.9	synth with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: destruct (eq_dec x z); only 1: reflexivity; only 1: f_equal).	9.98505997658	8343
Coq.Lists.List.Filtering.count_occ_alt	40
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	3.1.0.2.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros p H; only 1: auto; only 1: destruct a; only 1: simpl; only 1: destruct (split l); only 1: firstorder  (subst; auto)).	6.480479002	2287
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40	0.0.0.3.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	1.04494214058	273
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0915789604187	10
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40	1.0.0.8.0.0.1.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: trivial; only 1: simpl; only 1: auto).	21.1085600853	8024
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.5.0.0.2	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder  (subst; auto)).	0.633099079132	231
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	1.31	synth with cache (only 1: compute; only 1: auto with arith).	0.61493897438	876
Coq.Lists.List.length_order.lel_trans	40	9.0	synth with cache (only 1: unfold lel; only 1: now intros ->).	0.266152858734	78
Coq.Lists.List.length_order.lel_cons_cons	40	26	synth with cache (only 1: apply Nat.lt_succ_r).	3.17098402977	2532
Coq.Lists.List.length_order.lel_cons	40	4.0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto).	0.041846036911	8
Coq.Lists.List.length_order.lel_tail	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0301268100739	3
Coq.Lists.List.length_order.lel_nil	40	0.2.0.0.0.0.0.7.2.20.1	synth with cache (only 1: intros l2; only 1: revert l; only 1: unfold lel; only 1: simpl; only 1: destruct l2 as [| x2 l2]; only 1: simpl; only 1: intros x y; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	23.437967062	24066
Coq.Lists.List.SetIncl.incl_nil_l	40	3.4.6.0	synth with cache (only 1: intros; only 1: induction l as [| a l IHl]; only 1: auto; only 1: firstorder).	0.641283988953	444
Coq.Lists.List.SetIncl.incl_l_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: auto).	0.0204498767853	2
Coq.Lists.List.SetIncl.incl_tl	40	3.0.2	synth with cache (only 1: intros x l1; only 1: intros H; only 1: intuition).	0.047159910202	16
Coq.Lists.List.SetIncl.incl_tran	40	2.1	synth with cache (only 1: intros l l1 l2; only 1: auto using app_assoc).	0.0652570724487	5
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.0237848758698	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0224130153656	1
Coq.Lists.List.SetIncl.incl_cons	40	0.3.3.15	synth with cache (only 1: intros f g l; only 1: induction l as [| ? ? IHl]; only 1: auto; only 1: firstorder  (subst; auto)).	16.3514370918	9945
Coq.Lists.List.SetIncl.incl_cons_inv	40	0	synth with cache (only 1: auto with datatypes).	0.0255169868469	1
Coq.Lists.List.SetIncl.incl_app	40	0.8	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.31935095787	72
Coq.Lists.List.SetIncl.incl_app_app	40	4.0.1.0	synth with cache (only 1: intro x; only 1: intro l; only 1: intro H; only 1: solve [ auto ]).	0.0991361141205	23
Coq.Lists.List.SetIncl.incl_app_inv	40	3.0.11.0	synth with cache (only 1: unfold incl; only 1: intros [| a l] H; only 1: now simpl; only 1: auto using in_app_or, in_or_app).	6.20145511627	2694
Coq.Lists.List.SetIncl.incl_filter	40	1.2.0.1.0.2.0.0.0.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: intros l2; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: case_eq (f a); only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros d ie; only 1: firstorder).	27.5201940536	10501
Coq.Lists.List.SetIncl.remove_incl	40
Coq.Lists.List.incl_map	40
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.14	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.261309146881	155
Coq.Lists.List.Cutting.firstn_cons	40	0	synth with cache (only 1: now simpl).	0.0224840641022	1
Coq.Lists.List.Cutting.firstn_all	40	0.0.2.0.7	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: assumption).	0.35809803009	100
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	1	synth with cache (only 1: now simpl).	0.0213260650635	2
Coq.Lists.List.Cutting.firstn_le_length	40	2.0.10.2.1	synth with cache (only 1: intro l; only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: auto with arith).	36.9941608906	17631
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40	3.0.0.1.0.0.2.1	synth with cache (only 1: intro l; only 1: induction l; only 1: auto; only 1: intro y; only 1: unfold firstn at 2, length; only 1: simpl; only 1: f_equal; only 1: firstorder).	2.94921207428	891
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0.0.1.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0491700172424	6
Coq.Lists.List.Cutting.skipn_nil	40	0.0.0.10	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.250303030014	120
Coq.Lists.List.Cutting.skipn_cons	40	0.0.3	synth with cache (only 1: symmetry; only 1: simpl; only 1: reflexivity).	0.0460021495819	6
Coq.Lists.List.Cutting.skipn_all	40	0.0.0.1.2	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0978889465332	8
Coq.Lists.List.Cutting.skipn_all2	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro l; only 1: now destruct l; only 1: intro l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	1.57132196426	400
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40	0.0.2.0.0.0.1.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: now simpl; only 1: intro l'; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.94275593758	1251
Coq.Lists.List.Cutting.skipn_length	40	1.0.0.0.0.0.2.1.0.0	synth with cache (only 1: induction n; only 1: intro l; only 1: simpl; only 1: auto with arith; only 1: intro l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	17.6360549927	4543
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	2.38040113449	605
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.removelast_firstn_len	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	0.0.0.0.5	synth with cache (only 1: destruct l as [| a l]; only 1: simpl in *; only 1: auto; only 1: simpl; only 1: auto).	0.211037874222	55
Coq.Lists.List.Combining.combine_firstn_l	40
Coq.Lists.List.Combining.combine_firstn_r	40	0.0.0.3.0.1.0.0.1.2.0.0	synth with cache (only 1: intro l; only 1: induction l as [| x l IHl]; only 1: intro l; only 1: induction l as [| x l IHl]; only 1: reflexivity; only 1: reflexivity; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: specialize IHl with l'; only 1: simpl; only 1: rewrite <- IHl; only 1: reflexivity).	16.8797068596	7055
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	2.2.1.0.0.0.0	synth with cache (only 1: induction 1 as [l| x ? ? ? IHAdd]; only 1: induction l; only 1: simpl; only 1: tauto; only 1: firstorder; only 1: simpl; only 1: firstorder).	1.43613815308	457
Coq.Lists.List.Add.Add_length	40	2.1.0.1.0	synth with cache (only 1: induction 1 as [| ? ? ? ? IHAdd]; only 1: auto; only 1: simpl in *; only 1: rewrite ?IHAdd; only 1: trivial).	0.0573210716248	9
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	0.1.10	synth with cache (only 1: unfold not; only 1: apply NoDup_Add; only 1: apply Add_app).	0.440726995468	211
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0621809959412	4
Coq.Lists.List.ReDun.NoDup_rev	40
Coq.Lists.List.ReDun.NoDup_filter	40
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.nodup_incl	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.ReDun.NoDup_incl_NoDup	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.cons_seq	40	3.0	synth with cache (only 1: intros; only 1: intuition).	0.0315229892731	5
Coq.Lists.List.NatSeq.seq_length	40	0.0.2.1.10.4	synth with cache (only 1: intro l; only 1: induction l; only 1: intros a0; only 1: split; only 1: simpl; only 1: auto).	14.1653449535	7376
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.NatSeq.seq_S	40	0.5.0.2.2.2.0.0.1	synth with cache (only 1: intro len; only 1: simpl; only 1: induction len as [| len IHlen]; only 1: simpl in *; only 1: intros H; only 1: now rewrite Nat.add_0_r; only 1: simpl; only 1: intro y; only 1: now rewrite Nat.add_succ_r, IHlen).	7.82797503471	4896
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nth	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.5.9	synth with cache (only 1: split; only 1: now simpl; only 1: destruct 1).	0.499809026718	344
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	0.0.3.0.0.0.42	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	6.49556303024	8601
Coq.Lists.List.Exists_Forall.One_predicate.Exists_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_rev	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_fold_right	40	0.0.0.0.0.3.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: inversion 1; only 1: induction l; only 1: simpl; only 1: firstorder; only 1: firstorder).	2.52424788475	1010
Coq.Lists.List.Exists_Forall.One_predicate.incl_Exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	2.0.3.12.4.0.5	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: firstorder; only 1: split; only 1: inversion_clear 1; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: intuition).	31.5766260624	20267
Coq.Lists.List.Exists_Forall.One_predicate.Forall_nth	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.1.6	synth with cache (only 1: intro l; only 1: inversion 1; only 1: auto).	0.0996539592743	29
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv_tail	40	0.0.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: trivial).	0.0325241088867	3
Coq.Lists.List.Exists_Forall.One_predicate.Forall_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_elt	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rev	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_fold_right	40	0.0.0.0.0.0.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	1.15819501877	408
Coq.Lists.List.Exists_Forall.One_predicate.incl_Forall	40
Coq.Lists.List.Exists_Forall.map_ext_Forall	40
Coq.Lists.List.Exists_Forall.Exists_impl	40
Coq.Lists.List.Exists_Forall.Exists_or	40
Coq.Lists.List.Exists_Forall.Exists_or_inv	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	4.5.8.9.0.0	synth with cache (only 1: intros P Q H l H0; only 1: induction H0 as [x l H0| x l H0 IHExists]; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto).	10.3414039612	14258
Coq.Lists.List.Exists_Forall.Forall_and	40	0.2.1.13	synth with cache (only 1: intros HF; only 1: intros f l; only 1: rewrite !Forall_forall; only 1: firstorder).	3.90958595276	2401
Coq.Lists.List.Exists_Forall.Forall_and_inv	40
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.112522125244	10
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.incl_Forall_in_iff	40
Coq.Lists.List.exists_Forall	40
Coq.Lists.List.Forall_image	40
Coq.Lists.List.concat_nil_Forall	40
Coq.Lists.List.in_flat_map_Exists	40
Coq.Lists.List.notin_flat_map_Forall	40
Coq.Lists.List.Forall2.Forall2_refl	40	1	synth with cache (only 1: constructor).	0.0192141532898	2
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	1.1.0.2.10	synth with cache (only 1: revert n; only 1: induction n; only 1: easy; only 1: simpl; only 1: eauto with arith).	0.645214796066	213
Coq.Lists.List.Repeat.repeat_spec	40	0.0.0.0.0.3.3.33.0	synth with cache (only 1: revert n; only 1: intro l; only 1: induction l as [| a l IHl]; only 1: induction 1; only 1: simpl; only 1: destruct 1; only 1: subst; only 1: auto with arith; only 1: intuition).	7.19989895821	8892
Coq.Lists.List.Repeat.repeat_cons	40	0.4.6.0.32	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl in *; only 1: rewrite IHn; only 1: f_equal).	1.90607404709	1718
Coq.Lists.List.Repeat.repeat_app	40	3.0.1.2.0.0.1.30	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: f_equal; only 1: firstorder).	3.71605610847	2357
Coq.Lists.List.Repeat.repeat_eq_app	40
Coq.Lists.List.Repeat.repeat_eq_cons	40	0.0.0.0.3.0.6	synth with cache (only 1: destruct n; only 1: firstorder  discriminate; only 1: simpl; only 1: inversion 1; only 1: split; only 1: auto; only 1: f_equal).	1.37550806999	534
Coq.Lists.List.Repeat.repeat_eq_elt	40
Coq.Lists.List.Repeat.Forall_eq_repeat	40
Coq.Lists.List.repeat_to_concat	40	5.0.3.0.0.9	synth with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: intuition).	2.65207219124	1129
Coq.Lists.List.list_sum_app	40
Coq.Lists.List.list_max_app	40
Coq.Lists.List.list_max_le	40
Coq.Lists.List.list_max_lt	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	1.0.1	synth with cache (only 1: repeat red; only 1: intros l m l' m' Hpermll' Hpermmm'; only 1: auto).	0.0367729663849	5
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.0.2.9	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: intuition).	2.36444687843	433
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	0.2.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: now constructor; only 1: do 2 (etransitivity; try eassumption)).	0.38770699501	63
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	0.0.1.0.7.24	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	1.85353207588	1503
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0334620475769	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	1.0.0.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').	0.060210943222	6
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: now constructor).	0.0404829978943	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	0.0.1.1.2.0.1.1.0.0	synth with cache (only 1: intro n; only 1: intro l; only 1: split; only 1: induction 1; only 1: left; only 1: apply H; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	5.12941908836	2000
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.0.0.0.1.2.3.0	synth with cache (only 1: intros; only 1: constructor; only 1: firstorder using Sorted_inv; only 1: inversion H; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	2.25986099243	763
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	1.3	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion_clear H).	0.163531064987	30
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	1.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	1.241314888	333
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	6.2	synth with cache (only 1: rewrite <- (firstn_all (A:=l))  at 1; only 1: now simpl).	0.170321941376	17
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.5.0.0.0.1.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: apply Forall2_nil; only 1: auto; only 1: revert l'; only 1: induction 1; only 1: left; only 1: auto).	2.94326591492	779
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	11.7.3.0.2	synth with cache (only 1: constructor; only 1: intros x; only 1: firstorder; only 1: now simpl; only 1: firstorder).	39.0691151619	12788
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.2.0.15	synth with cache (only 1: intros l' Hnd Hlen Hincl; only 1: rewrite 2!InA_alt; only 1: intros H; only 1: firstorder).	3.63002896309	1282
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	1.0.3	synth with cache (only 1: intros x x' H; only 1: rewrite InA_alt; only 1: firstorder).	0.0530188083649	7
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.3	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.178763866425	26
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.137402057648	2
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.0.0.1.0.1.0	synth with cache (only 1: rewrite !InA_cons; only 1: split; only 1: intuition; only 1: intros [?| [?| ?]]; only 1: tauto; only 1: tauto; only 1: tauto).	0.159576892853	9
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.0.0.4.1	synth with cache (only 1: constructor; only 1: red; only 1: intros; only 1: inv; only 1: auto).	0.0669569969177	10
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	0.0.4.0.0.0	synth with cache (only 1: destruct l as [| a l]; only 1: intros Hincl; only 1: reflexivity; only 1: intros E; only 1: exfalso; only 1: now eapply InA_nil, E, InA_cons_hd).	0.263899803162	30
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.0.3	synth with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: tauto).	0.247324943542	7
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.4.8	synth with cache (only 1: red; only 1: intros; only 1: rewrite InA_app_iff; only 1: tauto).	2.50347208977	353
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	0.0.1.0.0.0.0.32	synth with cache (only 1: intros l' d d' Hlen Hnth; only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	6.15411806107	4426
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	55.1	synth with cache (only 1: intuition; only 1: now rewrite H).	33.1842479706	14203
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	2.7.0.0.0.0	synth with cache (only 1: simple induction l; only 1: intros H; only 1: intros; only 1: constructor; only 1: simpl; only 1: intuition).	10.0218689442	2112
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.105195045471	8
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	0.1.0.1.1.1.1.26	synth with cache (only 1: induction l1; only 1: intros; only 1: inv; only 1: eauto; only 1: intros; only 1: inv; only 1: constructor; only 1: auto).	21.4697020054	10392
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.1.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0857307910919	6
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.0.5.1.1.3	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	1.88625097275	586
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	3.7.13	synth with cache (only 1: intros H; only 1: fix odd_spec 1; only 1: auto).	17.6518759727	19126
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0.0.0	synth with cache (only 1: simpl; only 1: revert P a f; only 1: trivial).	0.0144338607788	3
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.00797700881958	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0257349014282	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00955390930176	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00881600379944	2
Coq.NArith.BinNat.N.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00971817970276	2
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.00659990310669	1
Coq.NArith.BinNat.N.pos_pred_spec	40	4.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0228819847107	10
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.43	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.601338863373	1412
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	15.442330122	8122
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: reflexivity).	2.23561000824	989
Coq.NArith.BinNat.N.pred_succ	40	0.0.18	synth with cache (only 1: destruct n as [| n]; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.179738998413	194
Coq.NArith.BinNat.N.pred_sub	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0145900249481	3
Coq.NArith.BinNat.N.succ_0_discr	40	0	synth with cache (only 1: now destruct n).	0.0168428421021	1
Coq.NArith.BinNat.N.add_0_l	40	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.101039886475	4
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.00896620750427	1
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: reflexivity).	0.00757503509521	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40	6.1.1.6	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro q; only 1: easy).	1.94621109962	1326
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.0.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: now split; only 1: now split; only 1: easy').	0.0219521522522	5
Coq.NArith.BinNat.N.compare_le_iff	40	2.3.0	synth with cache (only 1: revert m; only 1: intro m; only 1: easy').	0.3592710495	107
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: auto; only 1: now destruct 2; only 1: auto).	0.0291440486908	8
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	1	synth with cache (only 1: now nzsimpl).	0.113838911057	2
Coq.NArith.BinNat.N.succ_double_spec	40	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.12656879425	11
Coq.NArith.BinNat.N.double_add	40	2.0.0.0.0.2.4	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	2.42896389961	603
Coq.NArith.BinNat.N.succ_double_add	40	1.0.0.1.0.1.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: trivial).	0.642112016678	165
Coq.NArith.BinNat.N.double_mul	40	2	synth with cache (only 1: now destruct n, m).	0.408535957336	88
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.1.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0982518196106	12
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.00828504562378	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: now destr_eq H).	0.540554046631	120
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.8.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: intros H; only 1: apply le_0_l; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	2.16411089897	977
Coq.NArith.BinNat.N.succ_double_lt_mono	40	9	synth with cache (only 1: now destruct n, m).	0.451951026917	88
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0345089435577	9
Coq.NArith.BinNat.N.compare_0_r	40	4.17.19	synth with cache (only 1: intro H; only 1: apply (neq_succ_0 0); only 1: false_hyp ltac:(H) nlt_0_r).	8.31271100044	9596
Coq.NArith.BinNat.N.pow_0_r	40	2	synth with cache (only 1: reflexivity).	0.00802397727966	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	2.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0708320140839	29
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40	5.2.9.0.3	synth with cache (only 1: cases ltac:(n); only 1: order'; only 1: fix odd_spec 1; only 1: intro m; only 1: now nzsimpl').	13.8627429008	7663
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.0.1.0.0.6	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now apply pred_0; only 1: intro m; only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	1.16872286797	532
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.0	synth with cache (only 1: unfold div, modulo; only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: now destruct div_eucl).	0.0272319316864	4
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0131418704987	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.144923210144	22
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	3.0.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: apply le_0_l).	0.0294330120087	9
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	0.7	synth with cache (only 1: rewrite two_succ; only 1: now destruct a).	0.0202629566193	14
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40
Coq.NArith.BinNat.N.testbit_neg_r	40	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: easy; only 1: easy; only 1: now destruct a; only 1: easy; only 1: now destruct a; only 1: easy; only 1: easy'; only 1: easy).	0.584327936172	194
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.092041015625	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00774598121643	1
Coq.NArith.BinNat.N.ge_le_iff	40	2.3.7	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_gt_iff; only 1: reflexivity).	4.85142612457	2210
Coq.NArith.BinNat.N.ge_le	40	4.1.1	synth with cache (only 1: unfold le, ge; only 1: rewrite compare_antisym; only 1: now rewrite Pos.compare_antisym, CompOpp_iff).	0.324880123138	51
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00795984268188	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	2.0.0.0.1.1.0.1.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: destruct (Pos.sub_mask p q) as [| [r| r| ]| ] || destruct p; only 1: trivial; only 1: auto; only 1: simpl; only 1: auto; only 1: trivial).	5.95744395256	2769
Coq.NArith.BinNat.N.iter_swap_gen	40
Coq.NArith.BinNat.N.iter_swap	40	0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).	0.0148251056671	4
Coq.NArith.BinNat.N.iter_succ	40
Coq.NArith.BinNat.N.iter_succ_r	40	1.0.0.3.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now rewrite Pos.iter_succ, Pos.iter_swap).	0.029018163681	11
Coq.NArith.BinNat.N.iter_add	40
Coq.NArith.BinNat.N.iter_ind	40
Coq.NArith.BinNat.N.iter_invariant	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Pos.iter_ind; only 1: auto; only 1: auto).	0.0173568725586	4
Coq.NArith.Ndec.Peqb_complete	40	0	synth with cache (only 1: apply Pos.eqb_eq).	0.00953793525696	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.51	synth with cache (only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	10.6502900124	18242
Coq.NArith.Ndec.Pcompare_Peqb	40	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0170769691467	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0174260139465	1
Coq.NArith.Ndec.Neqb_complete	40	0	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0178029537201	1
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	16.0.8	synth with cache (only 1: intro H; only 1: eqb2eq; only 1: congruence).	8.48788309097	9477
Coq.NArith.Ndec.Ndiv2_eq	40	1.0.17	synth with cache (only 1: intros EQ; only 1: eqb2eq; only 1: now subst).	0.533853054047	390
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).	0.0256459712982	3
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.5.0.1	synth with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.0994420051575	33
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	9.38	synth with cache (only 1: apply Nat.leb_le; only 1: trivial).	20.0737128258	21293
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.15.7.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite !N2Nat.inj_double; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	13.3879518509	9050
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0.3.0	synth with cache (only 1: intro H0; only 1: eqb2eq; only 1: now rewrite Nleb_alt, N.leb_le).	0.0662608146667	26
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40	1.12.32.6	synth with cache (only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	4.08801412582	6486
Coq.NArith.Ndec.Nmin_le_2	40	2.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.0207178592682	4
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.0	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0367939472198	3
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	1.3	synth with cache (only 1: intro n; only 1: now destruct n).	0.0369508266449	34
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	10.0.0.2.4.15.2	synth with cache (only 1: intro n; only 1: symmetry; only 1: induction n as [| n IHn]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: Nat.solve_min).	5.75541186333	10699
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.2.20.4	synth with cache (only 1: intros x; only 1: destruct x; only 1: trivial; only 1: unfold ni_min; only 1: trivial).	3.69430494308	4463
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.4.9.7.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: intros; only 1: symmetry; only 1: Nat.cases ltac:(n); only 1: unfold ni_min; only 1: trivial; only 1: trivial).	4.16929221153	4799
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: intros; only 1: trivial).	0.0191090106964	4
Coq.NArith.Ndist.ni_min_inf_r	40	0.1.0.1	synth with cache (only 1: simple induction d; only 1: trivial; only 1: intros; only 1: trivial).	0.0193309783936	6
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.0.1.2.0	synth with cache (only 1: unfold ni_le; only 1: intros n m; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: trivial).	0.119156122208	64
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40	7.3.9.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: inversion 1; only 1: Nat.solve_min).	4.94154310226	4932
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40
Coq.NArith.Ndigits.Nshiftr_nat_S	40	2.0.0.2.0	synth with cache (only 1: intros a ?; only 1: induction n as [| n IHn]; only 1: simpl; only 1: trivial; only 1: auto).	0.115120887756	12
Coq.NArith.Ndigits.Nshiftl_nat_S	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: destruct n as [| p], m as [| q]; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.116775989532	11
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40	0.11.2	synth with cache (only 1: intro q; only 1: fix even_spec 1; only 1: easy || now destruct Hm).	4.06689095497	1445
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	3.20.4	synth with cache (only 1: intro q; only 1: fix even_spec 1; only 1: trivial).	38.1500458717	20853
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	1.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0504679679871	3
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.1.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto).	0.0618989467621	4
Coq.NArith.Ndigits.Pshiftl_nat_N	40	0.0.15.0.0.0.1.0	synth with cache (only 1: intros a n; only 1: induction n as [| n IHn]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: simpl; only 1: trivial).	34.0192341805	14299
Coq.NArith.Ndigits.Pshiftl_nat_plus	40	0.2.1.3.6.0	synth with cache (only 1: intros a n; only 1: intros; only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	4.05109095573	1223
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	1.32175707817	353
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now rewrite N.ldiff_spec; only 1: simpl; only 1: apply N.pos_ldiff_spec).	0.137750864029	13
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	8.1	synth with cache (only 1: intros; only 1: now destruct n as [| [p| p| ]]).	0.981258869171	202
Coq.NArith.Ndigits.Ndouble_bit0	40	2	synth with cache (only 1: now destruct n).	0.0994818210602	21
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.7.0.0	synth with cache (only 1: intros n; only 1: destruct n; only 1: easy; only 1: trivial).	0.402545928955	91
Coq.NArith.Ndigits.Ndiv2_double	40	2.1.4.0.3.1	synth with cache (only 1: intros; only 1: destruct n; only 1: now try rewrite H; only 1: vm_compute in H; only 1: unfold N.div2, N.to_nat; only 1: now destruct p).	7.52495598793	1913
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	15.0	synth with cache (only 1: intros n H; only 1: now destruct n as [| [p| p| ]]).	2.39346313477	912
Coq.NArith.Ndigits.Ndiv2_correct	40	2.2.1.2	synth with cache (only 1: intros m Hm; only 1: destruct m; only 1: trivial; only 1: now destruct p).	0.405311107635	116
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.7	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.744239091873	186
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a a' H H0; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	9.74048709869	2702
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: reflexivity; only 1: trivial; only 1: destruct a' as [| p0]; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	4.35245394707	949
Coq.NArith.Ndigits.Nless_def_3	40	2.6	synth with cache (only 1: fix odd_spec 1; only 1: congruence).	0.280790090561	75
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.19.4.0.4.0.3	synth with cache (only 1: unfold Nless; only 1: intro m; only 1: destruct m; only 1: discriminate; only 1: intros; only 1: vm_compute in H; only 1: now exists p).	25.594673872	20688
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40	0.24.5	synth with cache (only 1: intros n m p; only 1: fix odd_spec 1; only 1: auto with arith).	29.9167909622	14575
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: destruct a as [| p]; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	2.57544612885	701
Coq.NArith.NArith.TestOrder.test	40	0	synth with cache (only 1: N.order).	0.0399479866028	1
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	11.0.0.0.4	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: congruence).	1.38459086418	873
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.3.2.1.3	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.527065038681	226
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	2.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: subst n'; only 1: now N.nzsimpl').	0.0351300239563	9
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0167570114136	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0.1.0.1	synth with cache (only 1: induction n; only 1: nat2N; only 1: Nat.nzsimpl; only 1: nat2N).	0.100635051727	6
Coq.NArith.Nnat.Nat2N.inj_add	40	0	synth with cache (only 1: nat2N).	0.0190329551697	1
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	synth with cache (only 1: nat2N).	0.0176658630371	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0620620250702	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0157451629639	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.0178310871124	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0176618099213	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	10.3.13.3.5.9	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intuition; only 1: induction x; only 1: simpl; only 1: destr_bool).	10.8246188164	14180
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Nat.eqb_eq).	0.0221638679504	1
Coq.Strings.Ascii.eqb_compat	40	5.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha, Hb).	0.109297037125	7
Coq.Strings.Ascii.ascii_N_embedding	40	0.5.7	synth with cache (only 1: fix even_spec 1; only 1: intro m; only 1: auto).	1.43104815483	743
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0.0.3	synth with cache (only 1: destruct y; only 1: t_eqb; only 1: t_eqb).	0.0755751132965	58
Coq.Strings.String.eqb_eq	40	3.2.2.7	synth with cache (only 1: destruct m; only 1: t_eqb; only 1: revert m; only 1: t_eqb).	30.5031068325	12025
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinPos.Pos.eqb_eq).	0.0229949951172	1
Coq.Strings.String.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinNat.N.eqb_eq, Exx', Eyy').	0.0291111469269	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	10	synth with cache (only 1: trivial).	0.0948510169983	32
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.0420298576355	1
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	5	synth with cache (only 1: trivial).	0.0132620334625	6
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.nsatz.NsatzTactic.nsatz1.psos_r1b	40
Coq.nsatz.NsatzTactic.nsatz1.psos_r1	40	1.0.0	synth with cache (only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring).	0.0756039619446	4
Coq.nsatz.NsatzTactic.nsatz1.nsatzR_diff	40
Coq.nsatz.NsatzTactic.nsatz1.P0Z_correct	40	3.0	synth with cache (only 1: intro; only 1: trivial).	0.2169880867	36
Coq.nsatz.NsatzTactic.nsatz1.Rext	40
Coq.nsatz.NsatzTactic.nsatz1.Rset	40	6.6	synth with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.699903011322	231
Coq.nsatz.NsatzTactic.nsatz1.Rtheory	40
Coq.nsatz.NsatzTactic.nsatz1.PolZadd_correct	40
Coq.nsatz.NsatzTactic.nsatz1.PolZmul_correct	40
Coq.nsatz.NsatzTactic.nsatz1.R_power_theory	40
Coq.nsatz.NsatzTactic.nsatz1.norm_correct	40
Coq.nsatz.NsatzTactic.nsatz1.PolZeq_correct	40
Coq.nsatz.NsatzTactic.nsatz1.mult_l_correct	40
Coq.nsatz.NsatzTactic.nsatz1.compute_list_correct	40
Coq.nsatz.NsatzTactic.nsatz1.check_correct	40
Coq.nsatz.NsatzTactic.Qri	40
Coq.nsatz.NsatzTactic.Q_one_zero	40	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0193059444427	2
Coq.nsatz.NsatzTactic.Qcri	40
Coq.nsatz.NsatzTactic.Qdi	40
Coq.nsatz.NsatzTactic.Z_one_zero	40	0	synth with cache (only 1: lia).	0.0131328105927	1
Coq.nsatz.NsatzTactic.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0175130367279	2
Coq.nsatz.NsatzTactic.Zdi	40
Coq.nsatz.Nsatz.Rsth	40	0.0.0.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.0749278068542	10
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	synth with cache (only 1: auto with real).	0.0943911075592	1
Coq.nsatz.Nsatz.Rcri	40	0.7.27	synth with cache (only 1: intros x Hx; only 1: rewrite Rmult_comm; only 1: apply Rsth).	6.82808303833	3648
Coq.nsatz.Nsatz.Rdi	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	16	synth with cache (only 1: constructor).	0.0274629592896	108
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40	1.2.0.0.0.7.0	synth with cache (only 1: intro; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: intros; only 1: field; only 1: intros H1; only 1: field).	4.32165908813	862
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40
Coq.Reals.Ratan.pos_opp_lt	40	2.0.3.0.4	synth with cache (only 1: intro; only 1: intros; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_reg_l with (- exp 0); only 1: lra).	2.48386311531	310
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.tan_atan	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_eq0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.atan_tan	40
Coq.Reals.Ratan.atan_inv	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	3.10.0	synth with cache (only 1: intros x n; only 1: unfold Datan_seq; only 1: auto with real).	10.4823729992	1959
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.Ratan.sin_atan	40
Coq.Reals.Ratan.cos_atan	40
Coq.Reals.Ratan.asin_atan	40
Coq.Reals.Ratan.asin_0	40
Coq.Reals.Ratan.asin_1	40
Coq.Reals.Ratan.asin_inv_sqrt2	40
Coq.Reals.Ratan.asin_opp	40
Coq.Reals.Ratan.asin_bound	40
Coq.Reals.Ratan.asin_bound_lt	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof PI_RGT_0; only 1: unfold asin; only 1: repeat case Rle_dec; only 1: lra; only 1: lra; only 1: intros Hx1 Hx2; only 1: pose proof (atan_bound (x / sqrt (1 - x²))); only 1: lra).	0.300333976746	9
Coq.Reals.Ratan.sin_asin	40
Coq.Reals.Ratan.asin_sin	40
Coq.Reals.Ratan.cos_asin	40
Coq.Reals.Ratan.tan_asin	40
Coq.Reals.Ratan.derivable_pt_asin	40
Coq.Reals.Ratan.derive_pt_asin	40	5.0.3	synth with cache (only 1: intros x H; only 1: pose proof (tan_atan x) as Hatan; only 1: shelve).	1.84375	274
Coq.Reals.Ratan.acos_atan	40
Coq.Reals.Ratan.acos_asin	40
Coq.Reals.Ratan.asin_acos	40	0.0.2.0.0.0	synth with cache (only 1: intros x; only 1: unfold acos, asin; only 1: repeat case Rle_dec; only 1: lra; only 1: lra; only 1: lra).	0.187465190887	8
Coq.Reals.Ratan.acos_0	40
Coq.Reals.Ratan.acos_1	40
Coq.Reals.Ratan.acos_opp	40
Coq.Reals.Ratan.acos_inv_sqrt2	40
Coq.Reals.Ratan.acos_bound	40
Coq.Reals.Ratan.acos_bound_lt	40	7.2.9	synth with cache (only 1: intros x1 H16; only 1: pose proof PI_RGT_0 as HPi; only 1: shelve).	4.03003311157	1640
Coq.Reals.Ratan.cos_acos	40	11.0.0.2.0	synth with cache (only 1: intros x; only 1: intros [a1 a2]; only 1: pose proof (sin_asin x _) as Hasin; only 1: rewrite <- Hasin; only 1: shelve).	39.1626119614	5835
Coq.Reals.Ratan.acos_cos	40
Coq.Reals.Ratan.sin_acos	40
Coq.Reals.Ratan.tan_acos	40
Coq.Reals.Ratan.derivable_pt_acos	40
Coq.Reals.Ratan.derive_pt_acos	40	10.0	synth with cache (only 1: intros x Hxrange; only 1: shelve).	4.1733880043	491
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.2.3.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: intro l; only 1: inversion 1; only 1: simpl; only 1: reflexivity).	0.99694108963	177
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40	3.0.0.0.0.3.1.2.1	synth with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: auto; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: intro; only 1: auto with arith; only 1: auto with arith).	2.64017796516	690
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40	5.5.1.5.0.4	synth with cache (only 1: induction l as [| r l Hrecl]; only 1: inversion 1; only 1: intros [| ] ? Heq; only 1: reflexivity; only 1: simpl; only 1: auto with arith).	28.9123630524	9061
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.0.0.0.12	synth with cache (only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: auto).	3.58615112305	1224
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	0.0.0.0.1.1	synth with cache (only 1: induction l; only 1: simpl map; only 1: intro l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.280133008957	41
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0	synth with cache (only 1: congruence).	0.0825049877167	1
Coq.Reals.RList.RList_P22	40	0.3.4.0	synth with cache (only 1: intros; only 1: induction l1; only 1: intuition; only 1: reflexivity).	1.2218580246	113
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.252408981323	13
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	2.1.1.0.0.1.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition; only 1: generalize (Rtotal_order r1 r2); only 1: elim (base_fp r2); only 1: auto with real).	1.91590595245	830
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	1.0.0.9.3.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: destruct H; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	2.78213810921	1584
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.3.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intros; only 1: auto with real).	0.122893095016	14
Coq.Reals.Rbasic_fun.Rmin_left	40	0.1.0.0.1	synth with cache (only 1: intros x y H; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	0.14630484581	18
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0749659538269	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0852420330048	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.11.1.0.0.4.1.9	synth with cache (only 1: intros a n; only 1: apply Rmin_case_strong; only 1: intro; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).	18.2464470863	9671
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40
Coq.Reals.Rbasic_fun.Rmin_glb	40
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros Eq0; only 1: auto; only 1: intro; only 1: auto).	0.151137113571	16
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0989360809326	7
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0892210006714	6
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0778019428253	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0852282047272	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.0.0.17	synth with cache (only 1: unfold Rmax; only 1: intros; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	34.5194149017	10387
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.23518204689	50
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.7	synth with cache (only 1: intros x y z; only 1: apply Rmax_lub_lt; only 1: assumption).	0.464820861816	114
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	1.0.2.0.0.0.0.2	synth with cache (only 1: unfold Rabs; only 1: intros; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	3.13466978073	731
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	0.7.1.0.1.1.1.0.0.0	synth with cache (only 1: intros a H; only 1: case H; only 1: intros H1; only 1: rewrite Rabs_right; only 1: auto using Rplus_lt_compat_l with real; only 1: auto with real; only 1: intros H1; only 1: rewrite Rabs_right; only 1: field; only 1: auto with real).	17.364192009	8297
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.3.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.09142780304	164
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	1.1.20.1.0.0.9.9.38	synth with cache (only 1: constructor; only 1: intros H0; only 1: intro; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto with real; only 1: red; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).	12.3277871609	17186
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	7	synth with cache (only 1: solve_proper).	0.170929908752	34
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0	synth with cache (only 1: intuition).	0.0237028598785	1
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	0.1.0.1.2.23.0.0.0	synth with cache (only 1: intro; only 1: red; only 1: intro; only 1: destruct H as [Hl Hr]; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	37.3657240868	28899
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	0.0.4.0.1	synth with cache (only 1: simple induction 1; only 1: simpl; only 1: auto with real; only 1: intros; only 1: apply Rmult_0_l).	0.0514440536499	10
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.2.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.0452599525452	8
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	1	synth with cache (only 1: auto with real).	0.130466938019	11
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40	1.4.9	synth with cache (only 1: intros b; only 1: intros f X x; only 1: shelve).	6.67863583565	931
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40	1.11.1	synth with cache (only 1: intro f; only 1: intro; only 1: shelve).	5.42062282562	1180
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	7.5.14	synth with cache (only 1: intros n m; only 1: intros n1 n2 H; only 1: now destr_eq H).	3.78932380676	2950
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	2.44.7	synth with cache (only 1: intro; only 1: fix ind_0_1_SS 1; only 1: eauto).	8.28262591362	18084
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	3.3	synth with cache (only 1: intros a n H; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.0365571975708	8
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	1.0	synth with cache (only 1: intro n; only 1: trivial).	0.236810207367	3
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.1	synth with cache (only 1: intros; only 1: auto with real).	0.0970740318298	3
Coq.Reals.Rfunctions.pow_1	40	0.1.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.103952884674	5
Coq.Reals.Rfunctions.pow_add	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.203006982803	9
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0	synth with cache (only 1: auto with real).	0.0646369457245	1
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.1.0.2.0.0.6	synth with cache (only 1: intro t; only 1: simple induction n; only 1: simpl; only 1: ring; only 1: simpl; only 1: intros; only 1: ring).	10.8161480427	1889
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	3.0.0.0.2.0.1	synth with cache (only 1: simple induction n; only 1: intro; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: unfold pow; only 1: auto with real).	3.09598398209	485
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.22426700592	10
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.1.0.0.2.0	synth with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Hrecn; only 1: auto with real).	0.359477996826	37
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	0.3.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite <- Rmult_assoc; only 1: ring_Rsqr).	0.138375043869	7
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0	synth with cache (only 1: reflexivity).	0.0590219497681	1
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.1.3	synth with cache (only 1: Bool.destr_bool; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.271443843842	33
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.174667835236	8
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	2.0.23	synth with cache (only 1: intros a b; only 1: apply Rle_ge; only 1: apply Rabs_pos).	12.6544930935	5469
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	3.0.5	synth with cache (only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	3.11673212051	365
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.2.0.0.3.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.04006409645	136
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	1.0	synth with cache (only 1: intros; only 1: apply Nat.div2_double).	0.0736148357391	3
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).	0.074373960495	3
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.ClassicalConstructiveReals.RisLinearOrder	40
Coq.Reals.ClassicalConstructiveReals.RdisjunctEpsilon	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_refl	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_leibniz	40
Coq.Reals.ClassicalConstructiveReals.IQR_zero_quot	40
Coq.Reals.ClassicalConstructiveReals.Rring	40
Coq.Reals.ClassicalConstructiveReals.RringExt	40
Coq.Reals.ClassicalConstructiveReals.Rleft_inverse	40
Coq.Reals.ClassicalConstructiveReals.Rinv_pos	40
Coq.Reals.ClassicalConstructiveReals.Rmult_pos	40
Coq.Reals.ClassicalConstructiveReals.Rplus_reg_l	40
Coq.Reals.ClassicalConstructiveReals.Rzero_lt_one	40
Coq.Reals.ClassicalConstructiveReals.plus_IQR	40
Coq.Reals.ClassicalConstructiveReals.mult_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_lt	40
Coq.Reals.ClassicalConstructiveReals.lt_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_plus_quot	40
Coq.Reals.ClassicalConstructiveReals.IQR_mult_quot	40
Coq.Reals.ClassicalConstructiveReals.Rabove_pos	40
Coq.Reals.ClassicalConstructiveReals.Rarchimedean	40
Coq.Reals.ClassicalConstructiveReals.RabsLUB	40
Coq.Reals.ClassicalConstructiveReals.Rcomplete	40
Coq.Reals.ClassicalConstructiveReals.Rrepr_morphism	40
Coq.Reals.ClassicalConstructiveReals.Rabst_morphism	40
Coq.Reals.Rpower.P_Rmin	40	1.0.0.1.0.0.2	synth with cache (only 1: intro y0; only 1: intros; only 1: apply Rmin_case_strong; only 1: intro H6; only 1: assumption; only 1: intro; only 1: assumption).	0.552316904068	211
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_neq_0	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40	0.0.5.3.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (exp_ln x); only 1: rewrite <- (exp_ln y); only 1: generalize (Rle_le_eq x² y²); only 1: auto with real; only 1: assumption; only 1: assumption).	8.28749394417	2066
Coq.Reals.Rpower.ln_neq_0	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_pow	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_nonzero	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_Rlog	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_Rpower	40	17.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply exp_inv; only 1: repeat rewrite exp_ln || rewrite exp_Ropp; only 1: unfold Rpower; only 1: reflexivity; only 1: apply exp_pos).	13.1110489368	6420
Coq.Reals.Rpower.Rlog_pow	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	0.1.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros f g D l x H; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	5.46689391136	1145
Coq.Reals.Rpower.Rinv_Rdiv	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	0.146493196487	4
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	8.0.1	synth with cache (only 1: intros f g D l x H; only 1: unfold D_in; only 1: firstorder).	0.775389909744	250
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.RIneq.Rle_refl	40	1.0.2	synth with cache (only 1: right; only 1: apply Rquot1; only 1: reflexivity).	0.0346910953522	15
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0167717933655	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0	synth with cache (only 1: intros n H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0209250450134	4
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.1.3.11	synth with cache (only 1: intros r Hrnz Hrpos; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	2.33122706413	1508
Coq.Reals.RIneq.Rgt_not_eq	40	3.4.0.0.4	synth with cache (only 1: intros; only 1: intros abs; only 1: apply (Rlt_irrefl r1); only 1: destruct abs; only 1: N.auto').	2.90760183334	2265
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40
Coq.Reals.RIneq.Rlt_le	40	1.5.1	synth with cache (only 1: intros; only 1: left; only 1: trivial).	0.035343170166	17
Coq.Reals.RIneq.Rgt_ge	40	0.1.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.032506942749	4
Coq.Reals.RIneq.Rle_ge	40	6.0.0.0.3	synth with cache (only 1: induction 1; only 1: red; only 1: tauto; only 1: red; only 1: intuition eauto  3).	1.30258917809	885
Coq.Reals.RIneq.Rge_le	40	1.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0291240215302	6
Coq.Reals.RIneq.Rlt_gt	40	1.0.0	synth with cache (only 1: intros; only 1: red; only 1: trivial).	0.0189530849457	4
Coq.Reals.RIneq.Rgt_lt	40	0	synth with cache (only 1: trivial).	0.0105011463165	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.100874900818	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0210509300232	3
Coq.Reals.RIneq.Rnot_lt_le	40	1.1.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (Rtotal_order r1 r2); only 1: intuition eauto  3).	0.105581998825	7
Coq.Reals.RIneq.Rnot_gt_le	40	0.0.0.2	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.163200855255	47
Coq.Reals.RIneq.Rnot_gt_ge	40
Coq.Reals.RIneq.Rnot_lt_ge	40	1.0.0.0.0.0	synth with cache (only 1: intros r1 r2 H; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.0974349975586	7
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.033332824707	4
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	1.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.0462760925293	11
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0372591018677	4
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.138278007507	51
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.0345270633698	5
Coq.Reals.RIneq.Rge_not_gt	40	0.0.0.0.1.0	synth with cache (only 1: do 2 intro; only 1: red; only 1: intros H H'; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0405459403992	7
Coq.Reals.RIneq.Req_le	40	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0190570354462	3
Coq.Reals.RIneq.Req_ge	40	0.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0207571983337	4
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0215220451355	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.0180249214172	3
Coq.Reals.RIneq.Rgt_asym	40	0.0.3.3	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.0457439422607	19
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	3.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: auto with real).	0.0236599445343	6
Coq.Reals.RIneq.Rle_le_eq	40	9.1	synth with cache (only 1: intros a b; only 1: intuition).	0.383803129196	239
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0200212001801	1
Coq.Reals.RIneq.Rlt_eq_compat	40	1.0.0	synth with cache (only 1: intros; only 1: subst; only 1: trivial).	0.017746925354	4
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0268831253052	5
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.073431968689	3
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0581040382385	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0464909076691	3
Coq.Reals.RIneq.Rge_dec	40	1.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.188153028488	17
Coq.Reals.RIneq.Rlt_le_dec	40	6.0.4.0.5	synth with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intro m; only 1: intuition).	13.6252140999	5296
Coq.Reals.RIneq.Rgt_ge_dec	40	1.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0432910919189	6
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.10030579567	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.2.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.152370929718	64
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0413799285889	3
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.2.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.129978895187	58
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.174147844315	31
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.192626953125	56
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	1.6.0.5.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: auto with real).	4.58452892303	2237
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	0.270871162415	7
Coq.Reals.RIneq.Rplus_ne	40	0.0.0.0.0	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	0.0524849891663	5
Coq.Reals.RIneq.Rplus_opp_l	40	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.19123911858	35
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	2.1.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: auto with real).	0.0522711277008	6
Coq.Reals.RIneq.Rplus_eq_compat_r	40	4.8	synth with cache (only 1: intros n m p; only 1: congruence).	1.01958703995	618
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40	2.6.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_inv_r; only 1: reflexivity).	9.54106998444	964
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.03746509552	3
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.037918806076	3
Coq.Reals.RIneq.Rmult_0_r	40	3.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).	0.0899589061737	19
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0213451385498	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.0834770202637	8
Coq.Reals.RIneq.Rmult_1_r	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.0634520053864	5
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0219640731812	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	2.3.2	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto with real).	0.103736162186	20
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40	0.4.0.8.0.1	synth with cache (only 1: intros n m; only 1: intros [H| H]; only 1: subst; only 1: ring; only 1: subst; only 1: ring).	1.28237390518	952
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	1.6.0	synth with cache (only 1: intros r b; only 1: intros n; only 1: auto with real).	0.0254628658295	10
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0135881900787	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	1.8	synth with cache (only 1: intro b1; only 1: intuition).	0.438296079636	213
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	6.5	synth with cache (only 1: intros n m; only 1: auto with real).	1.06679296494	445
Coq.Reals.RIneq.Rmult_plus_distr_r	40	3.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_plus, Rrepr_plus, Rrepr_mult, Rrepr_mult; only 1: ring).	0.337424039841	7
Coq.Reals.RIneq.Rsqr_0	40	4.60.1	synth with cache (only 1: unfold IZR; only 1: compute; only 1: auto with real).	9.94886493683	8258
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	synth with cache (only 1: congruence).	0.0124838352203	1
Coq.Reals.RIneq.Ropp_0	40	1	synth with cache (only 1: ring).	0.0164189338684	2
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.0.5	synth with cache (only 1: intros m H; only 1: rewrite H; only 1: auto with real).	0.035758972168	16
Coq.Reals.RIneq.Ropp_involutive	40	1.1	synth with cache (only 1: Bool.destr_bool; only 1: ring).	0.0284359455109	13
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	0.2	synth with cache (only 1: intros n m; only 1: ring).	0.036721944809	4
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0231609344482	3
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0226678848267	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0229640007019	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0300650596619	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0242700576782	2
Coq.Reals.RIneq.Rminus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.02219581604	2
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0210328102112	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0225598812103	2
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0227818489075	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.8.0.0	synth with cache (only 1: intros r b; only 1: pattern r at 2; only 1: intros ->; only 1: ring).	1.9756231308	378
Coq.Reals.RIneq.Rminus_eq_0	40	0	synth with cache (only 1: ring).	0.0161919593811	1
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	0.2.10	synth with cache (only 1: intros x y; only 1: symmetry; only 1: auto with real).	3.98885393143	1638
Coq.Reals.RIneq.Rplus_minus	40	0.1.1	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: ring).	0.0386362075806	5
Coq.Reals.RIneq.Rminus_eq_contra	40	4.1	synth with cache (only 1: intros; only 1: eauto with real).	0.0569331645966	23
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0270419120789	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0315918922424	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	7.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: ring).	0.214944124222	39
Coq.Reals.RIneq.Rmult_minus_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.023542881012	2
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0375471115112	3
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0356440544128	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.0.3.1	synth with cache (only 1: intros; only 1: field; only 1: red; only 1: auto with real).	0.0678141117096	12
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.2.3	synth with cache (only 1: intros a b Hb; only 1: field; only 1: auto with real).	0.155412912369	26
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.4.3	synth with cache (only 1: intros a b Hb; only 1: field; only 1: auto with real).	0.491487979889	88
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	6	synth with cache (only 1: intuition).	0.0366089344025	22
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0265400409698	8
Coq.Reals.RIneq.Rplus_le_compat_l	40	1.0.0.10	synth with cache (only 1: intro n; only 1: red; only 1: unfold Rle; only 1: intuition).	0.968937158585	439
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	0.727298974991	160
Coq.Reals.RIneq.Rplus_ge_compat_r	40	0.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0279779434204	8
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0261809825897	4
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.2.0.1.5.10.4.13	synth with cache (only 1: intros g c0; only 1: intros r r1 r2 H; only 1: destruct H; only 1: red; only 1: auto with real; only 1: rewrite H; only 1: red; only 1: auto with real).	26.5305600166	33489
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.0.3	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0287499427795	7
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.1	synth with cache (only 1: intros q1 q2 r1 r2 EQ LT Hr1 Hr2; only 1: auto with real).	0.0173001289368	3
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	2.2.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.193072795868	39
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0544259548187	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	3.1.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.478870153427	50
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.1.0.4.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.051794052124	15
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.1.0.2.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: rewrite H; only 1: auto with real).	0.0797390937805	22
Coq.Reals.RIneq.Ropp_le_contravar	40	3.3.0	synth with cache (only 1: unfold Rle; only 1: intros n m ?; only 1: intuition).	0.0923669338226	28
Coq.Reals.RIneq.Ropp_ge_contravar	40	1	synth with cache (only 1: auto with real).	0.147804021835	41
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0259518623352	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0257270336151	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0254890918732	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0246839523315	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0275659561157	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	2.0.2	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.134793043137	50
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40	5.4.0	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).	11.7004189491	730
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1	synth with cache (only 1: eauto using Rlt_trans with rorders).	0.0503051280975	32
Coq.Reals.RIneq.Rmult_gt_compat_l	40	15	synth with cache (only 1: intuition).	0.605623006821	362
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40	3.5.4.0	synth with cache (only 1: intros r r1 r2 H H0; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: auto with real).	38.48269701	8776
Coq.Reals.RIneq.Rmult_ge_compat_l	40	18	synth with cache (only 1: intuition).	3.50181078911	2020
Coq.Reals.RIneq.Rmult_ge_compat_r	40	19	synth with cache (only 1: intuition).	8.31006622314	4581
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	7.4	synth with cache (only 1: intros a b n ? ? ?; only 1: intuition).	0.86102104187	358
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	2.5.7.12	synth with cache (only 1: intros k e2; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intro; only 1: eauto using Rmult_lt_compat_l with rorders).	34.816218853	12773
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.0.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.0461211204529	7
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.2.1.8.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.79150390625	386
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	1.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0328550338745	5
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.0.7	synth with cache (only 1: red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.60991191864	193
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: apply (Rplus_lt_reg_l r2); only 1: auto with real; only 1: auto with real; only 1: ring).	0.0651588439941	10
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.1.0.1	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.568138837814	123
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0205409526825	4
Coq.Reals.RIneq.Rle_0_1	40	0.1.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0313858985901	6
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	3.00747299194	847
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	1.0.0.3.8.8	synth with cache (only 1: intros; only 1: unfold IZR; only 1: destruct n as [| n]; only 1: auto with real; only 1: simpl; only 1: reflexivity).	2.73024106026	1360
Coq.Reals.RIneq.S_O_plus_INR	40	0.0.20.1.0	synth with cache (only 1: intro; only 1: simpl; only 1: Nat.cases ltac:(n); only 1: auto with real; only 1: auto with real).	8.69361710548	3874
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40
Coq.Reals.RIneq.INR_not_0	40	0.0.0.1.2	synth with cache (only 1: intro m; only 1: destruct m; only 1: auto with real; only 1: intro H; only 1: auto with real).	0.160864114761	23
Coq.Reals.RIneq.not_0_INR	40	0.0.4.1.1.1.0.2	synth with cache (only 1: intro n; only 1: Nat.cases n; only 1: intros Hn Hm; only 1: auto with real; only 1: simpl; only 1: destruct n; only 1: auto with real; only 1: auto with real).	9.779722929	1268
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40	1.0.16	synth with cache (only 1: fix odd_spec 1; only 1: intros; only 1: trivial).	6.49874281883	3428
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.IZR_NEG	40	4.1	synth with cache (only 1: intros; only 1: reflexivity).	0.0171549320221	7
Coq.Reals.RIneq.IZR_POS_xO	40	0.2.3.11	synth with cache (only 1: induction p; only 1: trivial; only 1: trivial; only 1: auto with real).	3.10636210442	1467
Coq.Reals.RIneq.IZR_POS_xI	40	3.1.0.0	synth with cache (only 1: induction p as [p| p| ]; only 1: auto with real; only 1: auto with real; only 1: ring).	0.0472300052643	8
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40	3.0.4.4	synth with cache (only 1: intros l; only 1: fix odd_spec 1; only 1: intro q; only 1: auto with real).	2.69807910919	1100
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	1.2.5.0.0.10.15	synth with cache (only 1: intros a; only 1: destruct a; only 1: auto with real; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: ring).	19.1081929207	9810
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.0.0.1.13.0	synth with cache (only 1: red; only 1: intros a b; only 1: intros; only 1: apply H; only 1: apply eq_IZR; only 1: auto with zarith real).	7.56202793121	3023
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8	synth with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with (r - (r + 1)); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with (r + 1 - r); only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	21.5353870392	9931
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.407220125198	108
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.Ropp_div_den	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto with real).	0.125389099121	3
Coq.Reals.RIneq.double	40	4.2	synth with cache (only 1: intros n; only 1: ring).	0.0531458854675	24
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.0720870494843	25
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	5.8.2.4	synth with cache (only 1: intros n m p; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: ring).	9.17042899132	3419
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0374710559845	4
Coq.Reals.RIneq.pos_half_prf	40	0.0.0.0.0.0.0.0	synth with cache (only 1: apply Rinv_0_lt_compat; only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.040647983551	8
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_eq_natpow_inv	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_invneg_le_pow	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_le_one	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40	3.0.27.7	synth with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: intros; only 1: eauto).	3.61349105835	8498
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40	5.15.4.13.0.41	synth with cache (only 1: destruct x; only 1: exfalso; only 1: eapply Pos.Private_Tac.lt_irrefl; only 1: induction n; only 1: auto with arith; only 1: Nat.order').	21.8831641674	10621
Coq.Reals.ClassicalDedekindReals.DRealQlimExp2	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_cauchy	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_max_prec_1	40	3.0.1.0.4.16	synth with cache (only 1: intros ? q; only 1: destruct q as [q| q| ]; only 1: congruence; only 1: intros; only 1: now destruct Hn || easy; only 1: now destruct 1).	4.72440695763	4991
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_bound	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_bound	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse'	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse''	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	6.5.0.0.1.2.0.8	synth with cache (only 1: Nat.induct ltac:(n); only 1: intro n; only 1: destruct n as [| n]; only 1: Nat.order; only 1: simpl; only 1: inversion 1; only 1: intros n m Hn Hm; only 1: intuition).	26.9617221355	18301
Coq.Reals.ArithProp.le_minusni_n	40	13.2.0.2.20	synth with cache (only 1: intros a b; only 1: destruct a as [| a]; only 1: intro; only 1: intuition; only 1: intuition).	9.5257461071	11153
Coq.Reals.ArithProp.lt_minus_O_lt	40	21.2.12	synth with cache (only 1: intro l; only 1: intros m H; only 1: intuition).	27.7974321842	20427
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40	9.3.0.26	synth with cache (only 1: induction n as [| n hn]; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ; only 1: simpl; only 1: Lia.lia).	18.0730850697	13876
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	1.1	synth with cache (only 1: intros m IH; only 1: auto with arith).	0.324445962906	50
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40	6.7.2.2.3	synth with cache (only 1: unfold Rdiv; only 1: intros xP yP Hsin; only 1: unfold Rminus; only 1: intro H0; only 1: shelve).	36.285984993	9385
Coq.Reals.Machin.tech	40	4.2.1.0	synth with cache (only 1: intros; only 1: rewrite Ropp_div; only 1: pattern PI at 1; only 1: shelve).	0.814284086227	139
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	7.0	synth with cache (only 1: intros n; only 1: auto with real).	0.214677095413	39
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	4.0	synth with cache (only 1: intros x y H H0; only 1: auto).	0.0256869792938	6
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40	1.6.1.1.0.0.14.6	synth with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: intros l1 l2; only 1: now try Nat.order'; only 1: simpl; only 1: intro cv; only 1: intro; only 1: auto).	25.5248329639	15878
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	1.0	synth with cache (only 1: intro; only 1: ring).	0.0270349979401	3
Coq.Reals.Ranalysis2.quadruple_var	40	8.5	synth with cache (only 1: intros; only 1: field).	0.318799972534	123
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	7.0	synth with cache (only 1: intros; only 1: assumption).	0.0981428623199	24
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	15.9	synth with cache (only 1: intros x y z Hxley Hylez contra; only 1: auto).	1.9297940731	1662
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	5.5.2.0.1.4.0.8.0	synth with cache (only 1: intros; only 1: intro; only 1: elim H; only 1: intros; only 1: elim H; only 1: intro H5; only 1: intro; only 1: apply H1; only 1: apply H1).	4.6597468853	4158
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	2.4.7.3	synth with cache (only 1: intro; only 1: intros n m; only 1: unfold included; only 1: firstorder).	2.23206686974	1481
Coq.Reals.Rtopology.open_set_P2	40	0.0.20.22	synth with cache (only 1: intro; only 1: intro Rew; only 1: unfold open_set, complementary; only 1: firstorder).	24.6460909843	31149
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	10.5	synth with cache (only 1: intro; only 1: intuition).	0.273010015488	194
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	3.0.0.3.0.0.1.3.0.0	synth with cache (only 1: unfold open_set; only 1: unfold included, neighbourhood; only 1: intro n; only 1: intro; only 1: intros; only 1: elim H0; only 1: intro; only 1: elim H0; only 1: unfold included; only 1: firstorder).	16.1546537876	6540
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40
Coq.Reals.Rseries.sequence.Un_bound_imp	40	14.2.6	synth with cache (only 1: intros a Ha; only 1: unfold EUn; only 1: firstorder  (subst; auto)).	12.8407959938	10331
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.0.5.0.0	synth with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: apply Pn; only 1: auto with arith).	0.556799888611	175
Coq.Reals.Rseries.Un_growing_shift	40	2.4.2.0.1	synth with cache (only 1: intro n; only 1: intros x H; only 1: intros eps; only 1: simpl; only 1: auto with arith).	1.17998886108	527
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.Cauchy.ConstructiveExtra.Pos_pred_double_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_id	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.constructive_indefinite_ground_description_Z	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_proper	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_morph	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rfloor	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Rabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qlt_trans_swap_hyp	40	0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.101999998093	6
Coq.Reals.Cauchy.ConstructiveRcomplete.Qle_trans_swap_hyp	40	2.0.1.10	synth with cache (only 1: intros n m p H H0; only 1: eapply Qle_trans; only 1: eauto; only 1: intuition subst; auto with qarith).	8.70885491371	2440
Coq.Reals.Cauchy.ConstructiveRcomplete.Qpower_2powneg_le_inv	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pospow_lin_le_2pow	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self'	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_limit	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cm_mono	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cauchy	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rup_pos	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_upper_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_seq	40	0.4	synth with cache (only 1: intros H; only 1: reflexivity).	0.16973400116	42
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_diff	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_RQ_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos2Z_pos_is_pos	40	2.1	synth with cache (only 1: intros H; only 1: auto with zarith).	0.098149061203	14
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos_log2floor_plus1_spec_Qpower	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Qgt_condition	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_seq_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtIsLinear	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealAbsLUB	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealComplete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.connectives.sumbool_or_not_or	40	5	synth with cache (only 1: intuition).	0.138560056686	23
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_le_iff_lt	40	1.0.1	synth with cache (only 1: unfold Qlt, Qle; only 1: intros; only 1: intuition Z.order).	0.0973780155182	5
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_lt_iff_le	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: split; only 1: apply Z.nlt_ge; only 1: apply Z.le_ngt).	0.102129936218	4
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtDisjunctEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerAddExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerRemSubExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerFac	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_red_scale	40	0	synth with cache (only 1: reflexivity).	0.0138540267944	1
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_scale_sep0_limit	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	0.3.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: rewrite H; only 1: apply CReal_plus_opp_r).	8.92116093636	351
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	5.1	synth with cache (only 1: intros r; only 1: ring).	0.582234144211	68
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40	0.0.0.0.0.0.0.0.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite CReal_mult_comm, (CReal_mult_comm z); only 1: apply (CReal_plus_lt_reg_l (- (x * y))); only 1: rewrite CReal_plus_comm; only 1: pose proof CReal_plus_opp_r; only 1: rewrite H1; only 1: rewrite CReal_mult_comm, CReal_opp_mult_distr_l, CReal_mult_comm; only 1: rewrite <- CReal_mult_plus_distr_l; only 1: apply CReal_mult_lt_0_compat; only 1: exact H; only 1: apply (CReal_plus_lt_reg_l y); only 1: rewrite CReal_plus_comm, CReal_plus_0_l; only 1: rewrite <- CReal_plus_assoc, H1, CReal_plus_0_l; only 1: exact H0).	34.229282856	2196
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBoundSpec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBound_lt_scale	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_neg_lt_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_1	40	14.25	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	35.5480799675	6643
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0198040008545	3
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_nat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_0_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_r	40	3.0.2.3.8.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: rewrite <- (CReal_mult_comm x), <- (CReal_mult_comm x); only 1: apply (CReal_mult_lt_compat_l x); only 1: exact H; only 1: assumption).	39.31945014	1853
Coq.Reals.Cauchy.PosExtra.Pos_pow_1_r	40
Coq.Reals.Cauchy.PosExtra.Pos_le_multiple	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_le_mono_r	40
Coq.Reals.Cauchy.QExtra.Q_factorDenom	40	2.3.2.0.0.0.0.0.1.4	synth with cache (only 1: intros n p; only 1: destruct n; only 1: red; only 1: simpl; only 1: intros E1; only 1: auto; only 1: reflexivity; only 1: intros; only 1: compute; only 1: ring).	9.06520915031	3749
Coq.Reals.Cauchy.QExtra.Q_factorNum_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: f_equal).	0.0292630195618	4
Coq.Reals.Cauchy.QExtra.Q_factorNum	40	0.1.0.1	synth with cache (only 1: unfold Qeq; only 1: simpl in *; only 1: intros a Ha; only 1: ring).	0.0470719337463	12
Coq.Reals.Cauchy.QExtra.Q_reduce_fl	40	0.0.0.3	synth with cache (only 1: intros a ?; only 1: unfold Qeq; only 1: cbn; only 1: reflexivity).	0.221190929413	28
Coq.Reals.Cauchy.QExtra.Qle_neq	40	3.2	synth with cache (only 1: intros a b; only 1: apply Z.le_neq).	0.199380159378	45
Coq.Reals.Cauchy.QExtra.Qplus_lt_compat	40	0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: unfold Qplus, Qle, Qlt; only 1: intros (x1, x2) (y1, y2) (z1, z2) (t1, t2); only 1: simpl; only 1: simpl_mult; only 1: intros; only 1: match goal with | |- (?a < ?b)%Z => ring_simplify a b end; only 1: rewrite Z.add_comm; only 1: apply Z.add_le_lt_mono; only 1: match goal with | |- (?a <= ?b)%Z => ring_simplify z1 t1 (Z.pos z2) (Z.pos t2) a b end; only 1: auto with zarith; only 1: match goal with | |- (?a < ?b)%Z => ring_simplify x1 y1 (Z.pos x2) (Z.pos y2) a b end; only 1: do 2 (apply Z.mul_lt_mono_pos_r; try easy)).	3.90301680565	702
Coq.Reals.Cauchy.QExtra.Qgt_lt	40	1	synth with cache (only 1: eauto with qarith).	0.0182929039001	11
Coq.Reals.Cauchy.QExtra.Qlt_gt	40	0.0	synth with cache (only 1: intros p q H; only 1: assumption).	0.0142159461975	2
Coq.Reals.Cauchy.QExtra.Qmult_lt_0_compat	40	8.0.0.2.2	synth with cache (only 1: unfold Qeq, Qmult; only 1: intros p q; only 1: unfold Qle, Qlt; only 1: simpl in *; only 1: now auto with zarith).	2.07104897499	951
Coq.Reals.Cauchy.QExtra.Qmult_lt_1_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_le_1_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_le_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qmult_le_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qinv_swap_pos	40	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: lia).	0.0313429832458	4
Coq.Reals.Cauchy.QExtra.Qinv_swap_neg	40	0.0	synth with cache (only 1: intros a b; only 1: reflexivity).	0.0162398815155	2
Coq.Reals.Cauchy.QExtra.Qabs_Qlt_condition	40
Coq.Reals.Cauchy.QExtra.Qabs_gt	40
Coq.Reals.Cauchy.QExtra.Qpower_0_r	40	1	synth with cache (only 1: reflexivity).	0.0115067958832	2
Coq.Reals.Cauchy.QExtra.Qpower_1_r	40	0.2.0	synth with cache (only 1: intros q; only 1: simpl; only 1: now reflexivity).	0.018059015274	5
Coq.Reals.Cauchy.QExtra.Qpower_not_0	40
Coq.Reals.Cauchy.QExtra.Qpower_pos_lt	40
Coq.Reals.Cauchy.QExtra.Qpower_minus	40
Coq.Reals.Cauchy.QExtra.Qpower_minus_pos	40
Coq.Reals.Cauchy.QExtra.Qpower_minus_neg	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_1_increasing	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_1_increasing'	40
Coq.Reals.Cauchy.QExtra.Qzero_eq	40	1	synth with cache (only 1: reflexivity).	0.0122129917145	2
Coq.Reals.Cauchy.QExtra.Qpower_le_1_increasing	40
Coq.Reals.Cauchy.QExtra.Qpower_le_1_increasing'	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_compat	40
Coq.Reals.Cauchy.QExtra.Qpower_le_compat	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_compat_inv	40
Coq.Reals.Cauchy.QExtra.Qpower_le_compat_inv	40
Coq.Reals.Cauchy.QExtra.Qpower_decomp'	40
Coq.Reals.Cauchy.QExtra.QarchimedeanExp2_Pos	40
Coq.Reals.Cauchy.QExtra.Pos_log2floor_plus1_spec	40	0.3.4.4.3.4	synth with cache (only 1: intros Hn; only 1: simpl; only 1: split; only 1: unfold Pos.pow; only 1: apply Pos.size_le; only 1: apply Pos.size_gt).	22.9748249054	5363
Coq.Reals.Cauchy.QExtra.Pos_log2ceil_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_le_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_leabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_1	40	6	synth with cache (only 1: reflexivity).	0.0181038379669	7
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_2	40	0	synth with cache (only 1: reflexivity).	0.0117008686066	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_3	40	0	synth with cache (only 1: reflexivity).	0.0119438171387	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_4	40	0	synth with cache (only 1: reflexivity).	0.0125079154968	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_inv	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_opp	40
Coq.Reals.Cauchy.QExtra.Qlowbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qopp_mult_mone	40	1.0	synth with cache (only 1: intros q; only 1: ring).	0.123860836029	23
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qabs_involutive	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLt_RQ_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLe_0R_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_le_abs	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_opp	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_appart_0	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_le	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_minus_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_gt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Rabs_def1	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_def2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_double	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_glb	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.posPartAbsMax	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.negPartAbsMin	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt	40	4.2	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.156358003616	42
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_max_mult_neg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub_lt	40	4.0.1	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x y z Hle Hlt; only 1: auto with *).	1.74925994873	33
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig'	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_refl	40	0.0.0.0.33	synth with cache (only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	33.3322789669	5525
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_sym	40	4.0.4.0.0.0	synth with cache (only 1: intros x y H; only 1: split; only 1: destruct H; only 1: trivial; only 1: destruct H; only 1: trivial).	8.00845503807	458
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_trans	40	0.28	synth with cache (only 1: fix gcd_divide 1; only 1: eauto with qarith).	21.3830640316	5511
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_r	40	4.0.8.3.14.1	synth with cache (only 1: intros x y z Hxeqy Hzltx; only 1: intros Hapart; only 1: apply Hzltx; only 1: apply (CRealLt_morph x y Hxeqy z z); only 1: apply CRealEq_refl; only 1: assumption).	26.8263700008	18991
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_T	40	0.1.0.0.0.1.0.0.1	synth with cache (only 1: constructor; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra).	3.64416193962	144
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_red_seq	40	0.2	synth with cache (only 1: intros n m p Hp; only 1: split).	0.0782198905945	4
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_assoc	40	2.2.30	synth with cache (only 1: intros EQ; only 1: fix gcd_divide 1; only 1: trivial).	21.0085749626	15123
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.235801935196	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z Hlt; only 1: apply CRealLt_above in Hlt; only 1: destruct Hlt as [n Hapart]; only 1: exists n; only 1: unfold CReal_plus, CReal_plus_seq in Hapart |- *; only 1: do 2 rewrite CReal_red_seq; only 1: do 2 rewrite Qred_correct; only 1: specialize (Hapart (n - 1)%Z _); only 1: lra).	0.255863904953	9
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	5.4.1	synth with cache (only 1: intros x y z Hle Hlt; only 1: apply CReal_plus_lt_reg_l in Hlt; only 1: contradiction).	2.28596997261	243
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_l	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q; only 1: do 3 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.237810850143	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	4.85074090958	1024
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x + t)); only 1: destruct H0; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: apply CReal_plus_proper_r; only 1: apply H).	11.4093101025	1252
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_0	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_involutive	40	0.0.0.1.2.0.0.0.2	synth with cache (only 1: intros; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	2.01788878441	382
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_one	40	0	synth with cache (only 1: reflexivity).	0.0574541091919	1
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_le	40	0.1.0.0.1	synth with cache (only 1: intros x y Heq; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra).	0.250600814819	34
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	2.7.0.1	synth with cache (only 1: unfold continuity_pt, opp_fct; only 1: intros f x H; only 1: intros Ha Eq; only 1: auto with real).	1.35695695877	391
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	1.0.8.1	synth with cache (only 1: unfold increasing, decreasing, opp_fct; only 1: intros f Hf H0; only 1: intro; only 1: auto with real).	1.49855709076	358
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	6.0.0.0.0.0.0.0.4.7.0	synth with cache (only 1: unfold continuity_pt, plus_fct; only 1: intros delta2 H3; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: simpl; only 1: intros; only 1: auto).	24.3095479012	16434
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	1.1.1	synth with cache (only 1: intro p; only 1: intros l'; only 1: easy).	0.024777173996	6
Coq.Reals.Ranalysis1.continuity_pt_div	40	1.0.2.3.3.0.1.0.0.1	synth with cache (only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intuition eauto  2; only 1: apply limit_mul; only 1: assumption; only 1: unfold limit1_in in H; only 1: unfold limit1_in in H0; only 1: apply limit_inv; only 1: assumption; only 1: auto with real).	9.09419703484	4283
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40	2.2.0.2.0.6.0.0	synth with cache (only 1: intros; only 1: rewrite (div_eq_inv f1 f2); only 1: intro; only 1: apply continuity_pt_mult; only 1: trivial; only 1: apply continuity_pt_inv; only 1: trivial; only 1: auto).	3.76920485497	2246
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.055615901947	8
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0335488319397	5
Coq.Reals.Ranalysis1.derive_pt_D_in	40	0.12.4.11	synth with cache (only 1: intros f x l; only 1: fix odd_spec 1; only 1: intros; only 1: firstorder).	18.8482270241	17938
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	5.0	synth with cache (only 1: intros; only 1: eauto).	0.0313699245453	14
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_fwd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros f x l H; only 1: apply uniqueness_step3; only 1: unfold opp_fct, limit1_in, limit_in, dist; only 1: simpl; only 1: unfold R_dist; only 1: apply uniqueness_step2 in H; only 1: unfold limit1_in, limit_in, dist in H; only 1: simpl in H; only 1: unfold R_dist in H; only 1: intros eps Heps; only 1: specialize (H eps Heps); only 1: destruct H as [alp [Halp H]]; only 1: exists alp; only 1: split; only 1: assumption; only 1: intros x0 Hx0; only 1: specialize (H x0 Hx0); only 1: rewrite <- Rabs_Ropp in H; only 1: match goal with | H:Rabs ?a < eps |- Rabs ?b < eps => replace b with a by (field; tauto) end; only 1: assumption).	26.7644269466	8130
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_xeq	40	0.9.5	synth with cache (only 1: intros n m p; only 1: intros <-; only 1: now Z.swap_greater).	1.1754488945	626
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_mirr	40
Coq.Reals.Ranalysis1.derivable_pt_mirr_rev	40	0.1.0.0.0.0.0.1.0.0.0.3	synth with cache (only 1: intros; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: exact H).	2.23901414871	1070
Coq.Reals.Ranalysis1.derivable_pt_mirr_prem	40	0.0.0.0.0.0.0.0.2.2.0.0.0.0.0	synth with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_opp_rev; only 1: apply derivable_pt_lim_opp; only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive; only 1: assumption).	4.06450486183	2131
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_id	40
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derivable_opp	40	0.0.0.0.0.29.1.5.10	synth with cache (only 1: intros p H; only 1: unfold derivable; only 1: intro; only 1: specialize (H x); only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_opp; only 1: assumption).	34.1409418583	47703
Coq.Reals.Ranalysis1.derivable_mirr	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.7.1	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.157663106918	170
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_opp_rev	40
Coq.Reals.Ranalysis1.derive_pt_mirr	40
Coq.Reals.Ranalysis1.derive_pt_mirr_rev	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	0.0.0.0.0.0.0.0.0.0.0.11.4	synth with cache (only 1: intros r1 r2; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	11.1856770515	3937
Coq.Reals.Ranalysis1.derive_pt_scal	40	0.4.2.1.0.0.10	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_scal; only 1: unfold derive_pt; only 1: pose proof (proj2_sig pr) as H1; only 1: assumption).	30.6325428486	15974
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.3.9	synth with cache (only 1: intros a; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.591705083847	258
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.41	synth with cache (only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	11.5064618587	16781
Coq.Reals.Ranalysis1.derive_pt_pow	40	1.0.4	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow).	0.167892932892	21
Coq.Reals.Ranalysis1.pr_nu	40	0.0.1.26.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply derive_pt_eq_0; only 1: apply (derive_pt_eq_1 _ _ _ pr1); only 1: reflexivity).	32.6906809807	20567
Coq.Reals.Ranalysis1.pr_nu_xeq	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40	13.4.0.20	synth with cache (only 1: intros h n t; only 1: case n; only 1: now f_equal; only 1: firstorder).	18.1985948086	15125
Coq.Reals.SeqProp.min_ss	40	24.8	synth with cache (only 1: intros H1 n H2; only 1: firstorder).	38.1222081184	23032
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40	0.11.8.3.2	synth with cache (only 1: intros m H; only 1: right; only 1: revert n; only 1: fix even_spec 1; only 1: auto with real).	6.4958460331	5782
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0161941051483	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40	1.0.2.0.1.3.1.1.0	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite Rmult_comm; only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: ring; only 1: field).	16.9056839943	2252
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.2.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.197355031967	7
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.107413053513	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.174874067307	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40	0.1.6.11.1.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite sin_PI6_cos_PI3; only 1: rewrite cos_PI6; only 1: rewrite sin_PI6; only 1: field).	8.59640312195	2056
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.0.0	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	0.203209877014	6
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: elim (Rplus_ne 1); only 1: intros a b; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.184771060944	5
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	3.11	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	1.93693590164	280
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40	0.0.0.2.8.0.5	synth with cache (only 1: intros a0; only 1: unfold toRad, toDeg; only 1: field; only 1: split; only 1: apply PI_neq0; only 1: unfold plat; only 1: discrR).	22.5430240631	5654
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40	0.0.0	synth with cache (only 1: intros f x1 x2 H1 H2 Heq; only 1: subst; only 1: apply pr_nu).	0.031219959259	3
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.0.3.5.2	synth with cache (only 1: intro; only 1: unfold derivable; only 1: intro; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	4.58588814735	2642
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0333781242371	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0323359966278	5
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0318658351898	5
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.0.1	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.180188894272	26
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.528791189194	65
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.495803833008	66
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.0.0.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0374350547791	7
Coq.Reals.DiscrR.IZR_eq	40	0.0.0	synth with cache (only 1: intros x y H; only 1: apply f_equal; only 1: auto).	0.0237891674042	3
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	3.9.9.3	synth with cache (only 1: intros p0; only 1: generalize (Rlt_irrefl 0); only 1: unfold Rsqr; only 1: auto with real).	16.1297578812	12882
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0311682224274	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	5.0.6	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).	0.661051034927	269
Coq.Reals.R_sqr.Rsqr_1	40	0.1	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.028639793396	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	1.2	synth with cache (only 1: intro n; only 1: eauto with real).	0.0604329109192	21
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	2.2.0.22.0	synth with cache (only 1: unfold Rsqr; only 1: intro l; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: trivial).	21.1879730225	15345
Coq.Reals.R_sqr.Rsqr_minus_plus	40
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0263550281525	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.12.0.3	synth with cache (only 1: intros v w; only 1: intros; only 1: unfold Rsqr; only 1: auto with real).	2.66590809822	1776
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.neg_pos_Rsqr_lt	40
Coq.Reals.R_sqr.Rsqr_bounds_le	40
Coq.Reals.R_sqr.Rsqr_bounds_lt	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.2.5.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: auto with real).	0.651284217834	227
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	12.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).	3.30704092979	1464
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.1.0.14	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: field; only 1: trivial).	5.99649906158	2638
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	0.0.0.43	synth with cache (only 1: intros x n; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	20.763297081	21101
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.3.0	synth with cache (only 1: intros; only 1: clear H; only 1: apply derivable_pt_id).	0.140824794769	6
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	4.0.5	synth with cache (only 1: intros f D l x0 H H0; only 1: intros; only 1: intuition).	1.08386683464	112
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1_decr	40	0.0.0.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad g_wf f_deriv; only 1: apply f_deriv; only 1: apply g_wf; only 1: lra; only 1: lra).	0.198624849319	5
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	1.0.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: intuition).	2.69431805611	113
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1_decr	40	2.2.3.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: lra; only 1: lra).	1.42882919312	139
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	0.6.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_Rminus; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	1.71194291115	217
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.150449991226	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.115000963211	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.126214981079	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.121188163757	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.0.2.0.0.0.4.1	synth with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros r1 r2 [H| H]; only 1: left; only 1: auto with real; only 1: auto with real).	8.48865199089	1067
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.298947095871	5
Coq.Reals.Rminmax.R.plus_min_distr_r	40
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.129923820496	4
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.136706829071	4
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.2.2.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: apply Rnot_le_lt; only 1: auto with real; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.134113073349	44
Coq.Reals.Rlimit.eps2	40	13.1	synth with cache (only 1: intros H; only 1: field).	0.486369132996	340
Coq.Reals.Rlimit.eps4	40	0.0.0	synth with cache (only 1: intro; only 1: rewrite Rmult_comm; only 1: lra).	0.0261268615723	3
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0.12	synth with cache (only 1: intro; only 1: intros; only 1: lra).	0.524598121643	329
Coq.Reals.Rlimit.Rlt_eps4_eps	40	3.1.2.6.17	synth with cache (only 1: rewrite <- Ropp_0; only 1: intros H; only 1: rewrite <- Ropp_0; only 1: intros; only 1: lra).	6.36827993393	7259
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	23.0.3	synth with cache (only 1: intros a b; only 1: intro; only 1: firstorder).	20.6914629936	23141
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	0.3.5	synth with cache (only 1: intros a b; only 1: intros A eval l; only 1: firstorder).	0.248345136642	80
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.2.1.0.1.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: case (Rcase_abs x); only 1: intros; only 1: apply Rle_refl; only 1: intro; only 1: apply Rsqrt_positivity).	0.947617053986	131
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.119318008423	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0940279960632	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.1.2.13.17	synth with cache (only 1: intros A l; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).	21.9322149754	13588
Coq.Reals.R_sqrt.pow2_sqrt	40	0.4.0.0	synth with cache (only 1: intro; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply (sqrt_sqrt x H)).	0.259556770325	23
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0835380554199	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.0.0.0.2	synth with cache (only 1: intros a b **; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.882545948029	169
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.1.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.117811918259	5
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.0.0.3.0.0.2.2	synth with cache (only 1: intros x y Hx _; only 1: intro; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: auto with real; only 1: apply Rlt_le; only 1: now apply Rle_lt_trans with x; only 1: exact Hx; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	18.475112915	5153
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_neg_0	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.inv_sqrt	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	7.0.1.1	synth with cache (only 1: intros ? n H; only 1: induction n as [| n Hrecn]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	1.57169294357	471
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.137736082077	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0879261493683	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite Rmult_assoc; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	1.20194506645	142
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.137844085693	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.103879213333	5
Coq.Reals.Rtrigo1.tan_0	40	0.11.1.2.0.9	synth with cache (only 1: unfold tan; only 1: unfold Rdiv; only 1: generalize cos_pi2; only 1: intros; only 1: rewrite sin_0; only 1: auto with real).	22.243076086	5546
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	1.1.3.0.0.2.0.0.0.2.0	synth with cache (only 1: intro x; only 1: rewrite sin_cos; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite sin_plus; only 1: rewrite neg_cos; only 1: rewrite cos_PI; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite sin_PI; only 1: ring).	36.9632320404	11273
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.9.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.934465885162	208
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.0.0.8.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: now apply Rinv_0_lt_compat, Rlt_0_2).	6.56651711464	906
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.235864162445	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	12.7081310749	1510
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.sin_inj	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.cos_inj	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0	synth with cache (only 1: reflexivity).	0.0127410888672	1
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.0196659564972	3
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0643298625946	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.652909994125	171
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.Rtrigo_facts.sin2_bound	40
Coq.Reals.Rtrigo_facts.cos2_bound	40	0.0.3.2.2	synth with cache (only 1: rewrite <- Rsqr_1; only 1: intro H1; only 1: rewrite <- sin_shift; only 1: apply Rsqr_bounds_le; only 1: apply SIN_bound).	6.28440117836	950
Coq.Reals.Rtrigo_facts.cos_sin	40
Coq.Reals.Rtrigo_facts.cos_sin_opp	40
Coq.Reals.Rtrigo_facts.cos_sin_Rabs	40
Coq.Reals.Rtrigo_facts.sin_cos	40
Coq.Reals.Rtrigo_facts.sin_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_cos_Rabs	40
Coq.Reals.Rtrigo_facts.tan_sin	40
Coq.Reals.Rtrigo_facts.tan_sin_opp	40
Coq.Reals.Rtrigo_facts.tan_cos	40
Coq.Reals.Rtrigo_facts.tan_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_tan	40
Coq.Reals.Rtrigo_facts.cos_tan	40
Coq.Reals.Rtrigo_facts.sin_pi_minus	40	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.132855892181	5
Coq.Reals.Rtrigo_facts.sin_pi_plus	40	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.133698940277	5
Coq.Reals.Rtrigo_facts.cos_pi_minus	40	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite cos_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.128463983536	8
Coq.Reals.Rtrigo_facts.cos_pi_plus	40	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.130843162537	5
Coq.Reals.Rtrigo_facts.tan_pi_minus	40
Coq.Reals.Rtrigo_facts.tan_pi_plus	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.16534280777	5
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.159239053726	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	2.1.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: pose proof derivable_pt_lim_sin_0 as H0; only 1: apply derivable_pt_lim_sin).	0.506067991257	36
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.419438123703	32
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Abstract.ConstructiveSum.CRsum_eq	40
Coq.Reals.Abstract.ConstructiveSum.sum_eq_R0	40
Coq.Reals.Abstract.ConstructiveSum.sum_const	40
Coq.Reals.Abstract.ConstructiveSum.multiTriangleIneg	40
Coq.Reals.Abstract.ConstructiveSum.sum_assoc	40
Coq.Reals.Abstract.ConstructiveSum.sum_Rle	40
Coq.Reals.Abstract.ConstructiveSum.Abs_sum_maj	40
Coq.Reals.Abstract.ConstructiveSum.cond_pos_sum	40
Coq.Reals.Abstract.ConstructiveSum.pos_sum_more	40
Coq.Reals.Abstract.ConstructiveSum.sum_opp	40
Coq.Reals.Abstract.ConstructiveSum.sum_scale	40
Coq.Reals.Abstract.ConstructiveSum.sum_plus	40
Coq.Reals.Abstract.ConstructiveSum.decomp_sum	40
Coq.Reals.Abstract.ConstructiveSum.reverse_sum	40
Coq.Reals.Abstract.ConstructiveSum.Rplus_le_pos	40
Coq.Reals.Abstract.ConstructiveSum.selectOneInSum	40
Coq.Reals.Abstract.ConstructiveSum.splitSum	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_lt	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_unique	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_cv	40	20.0.0	synth with cache (only 1: intros; only 1: destruct (series_cv_abs u cau); only 1: assumption).	1.5992910862	1017
Coq.Reals.Abstract.ConstructiveSum.series_cv_opp	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_scale	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_plus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_minus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_remainder_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_remainder	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_triangle	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift'	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_sum	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_INR	40	0.12	synth with cache (only 1: intros a b Ha Hb; only 1: apply CRmorph_rat).	0.335304021835	148
Coq.Reals.Abstract.ConstructiveSum.CRmorph_series_cv	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_extens	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_opp	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_plus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_unique	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cauchy_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_proper	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_morph	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_nat_real	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_real_nat	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_minus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_scale	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_const	40
Coq.Reals.Abstract.ConstructiveLimits.Rcv_cauchy_mod	40
Coq.Reals.Abstract.ConstructiveLimits.CR_growing_transit	40
Coq.Reals.Abstract.ConstructiveLimits.growing_ineq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_below	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_above	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_down	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_up	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_le	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_abs_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_dist_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift'	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morphT	40	0.0.0.0.0.0.2	synth with cache (only 1: intros R x y H x0 y0 H0; only 1: unfold CRmin; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	0.364711046219	72
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRnegPartAbsMin	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_mult	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_glb	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_min	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morph_Proper	40	0.0.0.0.6.0	synth with cache (only 1: intros; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	1.48682904243	368
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morphT	40	0.0.3.0.0.0.0	synth with cache (only 1: intros R x y exy z t ezt; only 1: unfold CRmax; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite exy, ezt; only 1: reflexivity; only 1: reflexivity).	0.0670280456543	10
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRposPartAbsMax	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_min_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_max	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_mult	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros R p q r H; only 1: unfold CRmin, CRmax; only 1: setoid_replace (r * q - r * p) with (r * (q - p)); only 1: rewrite CRabs_mult; only 1: rewrite (CRabs_right r); only 1: rewrite <- CRmult_assoc; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: do 2 rewrite <- CRmult_plus_distr_l; only 1: reflexivity; only 1: reflexivity; only 1: exact H; only 1: unfold CRminus; only 1: rewrite CRopp_mult_distr_r; only 1: rewrite <- CRmult_plus_distr_l; only 1: reflexivity).	29.7054610252	5990
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_max_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmorph_min	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le	40	1.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0248999595642	11
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le_inv	40	6.0.3.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: assumption).	0.655548095703	585
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_one	40	0.2	synth with cache (only 1: intros; only 1: apply CRmorph_rat).	0.0126278400421	4
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_rat_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Qr	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Ql	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_abs	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cauchy_reverse	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_gt_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_mult	40
Coq.Reals.Abstract.ConstructivePower.CRpow_one	40	0.0.13.6.1.20.2	synth with cache (only 1: induction n; only 1: apply CR_of_Q_morph; only 1: auto with *; only 1: simpl; only 1: rewrite IHn; only 1: rewrite CRmult_1_r; only 1: reflexivity).	30.1038439274	14263
Coq.Reals.Abstract.ConstructivePower.CRpow_proper	40
Coq.Reals.Abstract.ConstructivePower.CRpow_inv	40
Coq.Reals.Abstract.ConstructivePower.CRpow_plus_distr	40
Coq.Reals.Abstract.ConstructivePower.CR_double	40
Coq.Reals.Abstract.ConstructivePower.GeoCvZero	40
Coq.Reals.Abstract.ConstructivePower.GeoFiniteSum	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfBelowTwo	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfTwo	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_asym	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_proper	40
Coq.Reals.Abstract.ConstructiveReals.CRle_refl	40
Coq.Reals.Abstract.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRle_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.Abstract.ConstructiveReals.CReq_refl	40	0.0.0.0.0.0.13.0	synth with cache (only 1: intros; only 1: split; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	8.29919219017	1524
Coq.Reals.Abstract.ConstructiveReals.CReq_sym	40	2.4.9	synth with cache (only 1: intros a n Hn; only 1: red; only 1: now destruct 1 || intros _).	3.92008709908	1585
Coq.Reals.Abstract.ConstructiveReals.CReq_trans	40
Coq.Reals.Abstract.ConstructiveReals.CReq_relT	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRle_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_r	40	0.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Ropp_def).	0.0186650753021	3
Coq.Reals.Abstract.ConstructiveReals.CRopp_0	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRle_minus	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_lt_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_assoc	40	32.5.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: now rewrite ?(rpow_pow_N pow_th)).	14.7893500328	15513
Coq.Reals.Abstract.ConstructiveReals.CRplus_comm	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_Proper	40	0	synth with cache (only 1: apply (CRisRingExt R)).	0.0218598842621	1
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_Proper	40	0	synth with cache (only 1: apply (CRisRingExt R)).	0.0117559432983	1
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_T	40	9.13	synth with cache (only 1: intro H; only 1: apply H).	20.2963140011	5191
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_T	40	3.7	synth with cache (only 1: intros; only 1: apply (CRisRingExt R)).	0.598212957382	223
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_T	40	0.3.0	synth with cache (only 1: intros; only 1: intro; only 1: apply (CRisRingExt R)).	0.0344548225403	13
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_T	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_involutive	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_ge_le_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_l	40	0.18	synth with cache (only 1: intros n; only 1: apply CRisRing).	0.483880996704	386
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_assoc	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_comm	40	0.4.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: destruct (CRisRing R); only 1: apply Rmul_comm).	0.149976015091	18
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_r	40	1.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: transitivity (r2 * r1 + r3 * r1); only 1: apply Rdistr_l; only 1: destruct (CRisRingExt R); only 1: apply CReq_refl).	0.574279069901	65
Coq.Reals.Abstract.ConstructiveReals.CRzero_double	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_1	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_mult_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_minus	40	3.11.3.6.0.0	synth with cache (only 1: intros; only 1: rewrite <- (CRplus_opp_r x); only 1: destruct (CRltLinear R); only 1: destruct (CRisRingExt R); only 1: apply CRplus_lt_compat_r; only 1: assumption).	11.7981030941	4935
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.eq_inject_Q	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_T	40	0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).	0.0444679260254	8
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_pos	40	25.1.45	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: simpl; only 1: auto).	33.3673079014	22410
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_inv	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_0_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_pos	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_appart_zero	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRup_nat	40
Coq.Reals.Abstract.ConstructiveReals.CRfloor	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRapart_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph_prop_Proper	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_right	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_opp	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_minus_sym	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_left	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_le	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv2	40
Coq.Reals.Abstract.ConstructiveAbs.CR_of_Q_abs	40
Coq.Reals.Abstract.ConstructiveAbs.CRle_abs	40	0.0.0	synth with cache (only 1: intros; only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]; only 1: apply H1, CRle_refl).	0.0168030261993	3
Coq.Reals.Abstract.ConstructiveAbs.CRabs_pos	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_appart_0	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_mult	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_lt	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def1	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def2	40
Coq.Reals.Abstract.ConstructiveLUB.CRlt_lpo_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_not_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.DDlow_below_up	40
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit_fix	40	18.0.18	synth with cache (only 1: intro abs; only 1: intros; only 1: eauto).	1.56032109261	1924
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit	40
Coq.Reals.Abstract.ConstructiveLUB.glb_dec_Q	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_glb	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_closed	40
Coq.Reals.Abstract.ConstructiveLUB.sig_lub	40
Coq.Reals.Abstract.ConstructiveLUB.CR_sig_lub	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	4.4	synth with cache (only 1: intro; only 1: auto with real).	0.548676967621	64
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.1.0.1.2.9.0	synth with cache (only 1: intro; only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	9.88371801376	3194
Coq.Reals.Rsqrt_def.pow_2_n_growing	40	2.0.1.0.1.2.0.3.14.23	synth with cache (only 1: intro n; only 1: cut ((2 * S n)%nat = S (S (2 * n))); only 1: simpl; only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial; only 1: ring).	15.1984770298	9337
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.0.0.0.0.0.3.0.1	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	3.28750014305	335
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.Array.PArray.default_copy	40
Coq.Array.PArray.default_make	40
Coq.Array.PArray.get_set_same_default	40
Coq.Array.PArray.get_not_default_lt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	2	synth with cache (only 1: intuition).	0.0437498092651	3
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	4.0	synth with cache (only 1: unfold empty, Empty; only 1: intuition_in).	0.0474960803986	6
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.2.1	synth with cache (only 1: intros m x; only 1: unfold create; only 1: eauto with ordered_type).	0.0835680961609	15
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0.0	synth with cache (only 1: unfold create; only 1: auto).	0.0614929199219	2
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.1.7	synth with cache (only 1: induction m; only 1: intuition; only 1: constructor).	0.157173871994	49
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0845770835876	5
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	12.2.10	synth with cache (only 1: intros l; only 1: intuition; only 1: now simpl in H).	4.70528697968	2384
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	0.8.17.0	synth with cache (only 1: intros; only 1: inversion H; only 1: red; only 1: auto using Proofs.find_1, find_2).	2.34520506859	2303
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	2.0.1.12.1	synth with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intro l; only 1: intros sorted hyp; only 1: rewrite elements_mapsto; only 1: auto).	2.0460050106	1276
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	0.0.0.11.15.12	synth with cache (only 1: intros m Hm x y e; only 1: intros l a; only 1: induction m; only 1: LO.cmp_solve; only 1: LO.cmp_solve; only 1: LO.cmp_solve).	21.1745889187	14557
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0861690044403	3
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	6.0	synth with cache (only 1: intros; only 1: intuition).	0.052628993988	8
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40	1.12	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.874567985535	267
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.0.0.1.3.7	synth with cache (only 1: intros x l; only 1: intro abs; only 1: induction 1; only 1: eauto; only 1: auto; only 1: auto).	0.934926986694	993
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	0.0.0.11.0.0.2.24	synth with cache (only 1: intros l; only 1: intros f Hf; only 1: intros H'; only 1: induction 1; only 1: constructor; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	6.62984395027	8830
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	1.10	synth with cache (only 1: intros n m; only 1: intuition_in).	0.358968019485	187
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	7.0.19	synth with cache (only 1: intro n; only 1: intro; only 1: inversion_clear 1).	0.701380968094	537
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	3	synth with cache (only 1: inversion 1).	0.0134711265564	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	1.0.2.8.0	synth with cache (only 1: intros n k2 H v a H1 H2; only 1: red; only 1: intros m x f; only 1: intuition_in; only 1: MX.order).	1.30519008636	462
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	2	synth with cache (only 1: auto).	0.0129051208496	3
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0142319202423	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0.0	synth with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.0192379951477	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0140950679779	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.0186860561371	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0207660198212	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.0188899040222	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	8	synth with cache (only 1: now left || now right).	0.0154838562012	9
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	17.12	synth with cache (only 1: intros n Hlen; only 1: now subst).	3.04424405098	1291
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	2.13	synth with cache (only 1: fix even_spec 1; only 1: auto with arith).	0.445395946503	448
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	4.0.0.2.7.0	synth with cache (only 1: destruct m as [| r x e l h]; only 1: intros Hn; only 1: intro H; only 1: intuition_in; only 1: simpl; only 1: easy).	1.48104310036	1116
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	0.0.5.0.1.4.0.17.7	synth with cache (only 1: intuition_in; only 1: revert H; only 1: functional induction find x m; only 1: intuition_in; only 1: discriminate; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	8.2084171772	6927
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.0.0.0.3.3.5	synth with cache (only 1: intros l p o v; only 1: intros; only 1: constructor 2; only 1: auto; only 1: auto; only 1: intuition_in; only 1: auto).	5.47200298309	1558
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.069304227829	7
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	22.1.5	synth with cache (only 1: simpl; only 1: inversion_clear 1; only 1: split).	6.63564515114	3258
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	2.2.9.17	synth with cache (only 1: intros H l; only 1: intros Bs; only 1: fix odd_spec 1; only 1: auto).	20.070805788	10494
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	0.0.0.1.4.0.0.0.2.2.0	synth with cache (only 1: intros m x; only 1: induction m; only 1: intros; only 1: inv MapsTo; only 1: simpl; only 1: intros Bs; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	6.90661787987	2135
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	6.1.8.5.2.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: intuition_in).	8.86269497871	7255
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0768880844116	8
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	6	synth with cache (only 1: now intuition).	0.0395231246948	13
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	0.1.4.0	synth with cache (only 1: intros m x e; only 1: intros; only 1: apply find_2; only 1: auto).	0.0374438762665	9
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40	0.0.0.9.8	synth with cache (only 1: intros n m; only 1: fix even_spec 1; only 1: intros; only 1: destruct m; only 1: auto using map_option_bst).	4.89426708221	2475
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	4.5.0.3.20.0.27	synth with cache (only 1: intros pol; only 1: red; only 1: destruct pol; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.05066895485	9243
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	4.4.0.4.4.5.0.4.4	synth with cache (only 1: intros; only 1: simpl; only 1: LO.MapS.Raw.MX.elim_comp; only 1: LO.cmp_solve; only 1: LO.MD.elim_comp; only 1: LO.cmp_solve; only 1: auto; only 1: LO.cmp_solve; only 1: LO.cmp_solve).	24.2801158428	16219
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	1.1	synth with cache (only 1: intros n m; only 1: intuition Nat.order).	0.0160830020905	4
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1.0.1.0	synth with cache (only 1: intros n m; only 1: split; only 1: now Z.swap_greater; only 1: now Z.swap_greater).	0.0271961688995	6
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	12	synth with cache (only 1: intuition).	0.0990710258484	87
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	1	synth with cache (only 1: intuition).	0.0796689987183	32
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	0	synth with cache (only 1: intuition).	0.0198431015015	1
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0	synth with cache (only 1: intuition).	0.0179929733276	1
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	9.3	synth with cache (only 1: compute; only 1: intuition).	0.074047088623	123
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.5	synth with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.087473154068	54
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	5	synth with cache (only 1: intuition).	0.0678629875183	47
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	6	synth with cache (only 1: intuition).	0.0407137870789	24
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	0	synth with cache (only 1: intuition).	0.0130200386047	1
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.2.2	synth with cache (only 1: intro; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.0188639164	253
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	7.1.1.1	synth with cache (only 1: split; only 1: auto; only 1: auto with relations; only 1: eauto).	0.205264091492	184
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.1.3.2.2.6	synth with cache (only 1: intros x x' EQ; only 1: split; only 1: unfold Empty; only 1: firstorder; only 1: unfold Empty; only 1: firstorder).	0.95446395874	824
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	10	synth with cache (only 1: firstorder).	0.325455188751	81
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.0.3	synth with cache (only 1: unfold Equal, Subset; only 1: intros x y H; only 1: auto).	0.034793138504	37
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.14.11	synth with cache (only 1: intro n; only 1: repeat red; only 1: eauto using BinNat.N.Private_Tac.eq_trans, BinNat.N.Private_Tac.eq_sym).	3.10728597641	3764
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	3.9.0.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: red; only 1: auto).	17.9301939011	2148
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	3.16	synth with cache (only 1: intros z n H; only 1: firstorder).	1.23413395882	1521
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.2.1	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.0814220905304	14
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.3.1	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.0578858852386	12
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.0.13.1	synth with cache (only 1: intros; only 1: intro l; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).	0.729559898376	646
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.3.2	synth with cache (only 1: intro p; only 1: inversion 1; only 1: auto).	0.0385160446167	31
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	7.3	synth with cache (only 1: intros l'; only 1: easy).	0.12223482132	129
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	1.2	synth with cache (only 1: intros n m H; only 1: now rewrite <- ?BinInt.Z.pred_le_mono).	0.0354220867157	13
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	2.9.2.3.5	synth with cache (only 1: intro l; only 1: intros LM1 P2 H; only 1: unfold eq, Equal; only 1: intros le_mn2; only 1: firstorder).	5.50204706192	5857
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.0	synth with cache (only 1: intros a n; only 1: trivial).	0.0124158859253	2
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	1	synth with cache (only 1: destr_bool).	0.00870203971863	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	1	synth with cache (only 1: destr_bool).	0.0177509784698	11
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	14.6	synth with cache (only 1: intros a b; only 1: discriminate).	0.293426036835	580
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	8.1	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.3314909935	193
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	6.3.2.13	synth with cache (only 1: fix even_spec 1; only 1: intros m Hm; only 1: apply PeanoNat.Nat.even_spec; only 1: trivial).	3.13531684875	2543
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.0	synth with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.0195889472961	3
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	0.25.1	synth with cache (only 1: intros l a Hin; only 1: elim (StrictOrder_Irreflexive a); only 1: now subst).	0.950968027115	1925
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40	3.1.13.20	synth with cache (only 1: intros H0; only 1: fix odd_spec 1; only 1: intros m Hm; only 1: auto with arith).	13.3553318977	25126
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	3.0.0.3.3.2.12	synth with cache (only 1: intros [| l' o' r']; only 1: fix odd_spec 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: fix even_spec 1; only 1: eassumption).	22.2859239578	16189
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	3.0.23.5.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix even_spec 1; only 1: intros m Hm; only 1: auto with arith).	7.65541195869	10843
Coq.FSets.FSetPositive.PositiveSet.equal_2	40
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	0.1.0.2.0.0.11.2.1	synth with cache (only 1: intros a b n H Ha Hb; only 1: subst; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	6.11540412903	6514
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	1.0.0.0.0.4	synth with cache (only 1: intros; only 1: destruct b, b'; only 1: auto; only 1: trivial; only 1: trivial; only 1: now rewrite <- ?Pos.compare_antisym).	0.107525110245	45
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.7	synth with cache (only 1: destr_bool; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	0.272322893143	140
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40	1.6.3.0.3.4	synth with cache (only 1: intros l'; only 1: intro p; only 1: unfold eq, Equal; only 1: apply EQ; only 1: fix odd_spec 1; only 1: trivial).	3.99771404266	5706
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	5.14	synth with cache (only 1: fix odd_spec 1; only 1: auto).	0.278797864914	409
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0191628932953	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0159161090851	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0134479999542	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).	0.0325758457184	10
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.10.10	synth with cache (only 1: intros H; only 1: reflexivity || destruct H; only 1: trivial; only 1: reflexivity).	0.52636384964	826
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40	1.17.2	synth with cache (only 1: intros n m; only 1: fix even_spec 1; only 1: tauto).	2.51395511627	2327
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	9.0.2	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition).	2.14222311974	554
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	3.0.0.28	synth with cache (only 1: intros x0 y; only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	19.5571498871	17378
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.1.22.1.0	synth with cache (only 1: intros a H1; only 1: intros H; only 1: pose proof H as H'; only 1: apply <- add_spec; only 1: auto).	3.16921496391	4610
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	2.1.0.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: tauto).	0.110601186752	15
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0333349704742	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	5.2.0.10	synth with cache (only 1: intros A A_wd A0 AS; only 1: rewrite inter_spec; only 1: intros HE; only 1: now split).	2.41309499741	2699
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	5.1.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: intros H; only 1: intuition).	0.0264298915863	10
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	8.0.1	synth with cache (only 1: intros a n m Hn H; only 1: rewrite diff_spec; only 1: intuition BinInt.Z.order).	0.103969812393	110
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	8.5.22	synth with cache (only 1: intros z n H; only 1: fix odd_spec 1; only 1: trivial).	13.5248301029	8837
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0302798748016	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	7.2.5	synth with cache (only 1: intros a Ha; only 1: fix even_spec 1; only 1: destr_bool).	0.79731297493	569
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	4.4.12	synth with cache (only 1: intros H p; only 1: fix even_spec 1; only 1: intuition congruence).	3.63173699379	3383
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40	1.36	synth with cache (only 1: fix odd_spec 1; only 1: auto).	33.5575489998	38994
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40	10.5.0.0	synth with cache (only 1: unfold Empty, In; only 1: intros s H; only 1: fix odd_spec 1; only 1: auto).	29.3027188778	11741
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40	0.0.3.0.0.0.1.17.22	synth with cache (only 1: intros p IH; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: auto with zarith; only 1: simpl; only 1: f_equal).	20.6747338772	22808
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	0.0.1.0.0.1.4.1.33	synth with cache (only 1: induction i; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: auto).	38.4077479839	51519
Coq.FSets.FMapPositive.append_neutral_l	40	1	synth with cache (only 1: reflexivity).	0.101042032242	26
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.0.0.4.2.0.3.10	synth with cache (only 1: intros n; only 1: case n; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	1.25037813187	1032
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0953059196472	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.0.0.0.19.9	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto; only 1: simpl; only 1: auto).	2.27534389496	2446
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	21.5887038708	6304
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.2.1.2.2.8	synth with cache (only 1: intros H; only 1: destruct i; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).	2.070125103	869
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	1.4	synth with cache (only 1: symmetry; only 1: congruence).	0.0594170093536	15
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0	synth with cache (only 1: auto).	0.0385940074921	1
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.0465910434723	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: auto).	16.758877039	5165
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.104295969009	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	0.1.0.2.3	synth with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.151441812515	42
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	10.1.0	synth with cache (only 1: intros n m; only 1: revert m; only 1: intuition).	0.745451927185	338
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	1.0	synth with cache (only 1: intros n m Hn; only 1: intuition).	0.0522699356079	3
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.7	synth with cache (only 1: firstorder  (subst; auto); only 1: apply (empty_1 H)).	0.255294084549	74
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.0	synth with cache (only 1: intro q; only 1: intuition).	0.105877876282	2
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.1.4.2	synth with cache (only 1: intro m; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.586853027344	297
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).	0.0807290077209	9
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.2.0.0.0.3.0.0.15	synth with cache (only 1: unfold not; only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	20.0335299969	25530
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0	synth with cache (only 1: auto with map).	0.0363869667053	1
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	2.4.0.0.2.0.4.16	synth with cache (only 1: intros EQ EQ'; only 1: intros a b Hb; only 1: rewrite eq_option_alt; only 1: split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: auto; only 1: intuition).	33.9461290836	7882
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.181261062622	26
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).	0.180384159088	11
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	2.3	synth with cache (only 1: intro n; only 1: now BinInt.Z.nzsimpl).	0.0912010669708	15
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	11.4	synth with cache (only 1: intros; only 1: now subst).	2.27772188187	549
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.0	synth with cache (only 1: intro n; only 1: auto).	0.0406949520111	2
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.13.2.1.0.1.2.1	synth with cache (only 1: unfold Equal; only 1: intros a b n **; only 1: rewrite <- H0; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: f_equiv; only 1: intuition).	32.968968153	19429
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	5.6.13.0.25	synth with cache (only 1: intro n; only 1: rewrite cardinal_1, elements_Empty; only 1: inversion 1; only 1: rewrite H1; only 1: auto).	11.6545891762	13612
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40	4.55.0	synth with cache (only 1: intros k Hnodup; only 1: fix le_div2 1; only 1: auto).	19.8748288155	31551
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	3	synth with cache (only 1: firstorder).	0.182585954666	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	13.12	synth with cache (only 1: intro n; only 1: firstorder).	4.5183069706	2172
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	11.5	synth with cache (only 1: intro n; only 1: firstorder).	2.23368191719	1221
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.504107952118	133
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	0.1.21	synth with cache (only 1: fix even_spec 1; only 1: intros m' Hm'; only 1: auto).	8.6938688755	4937
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	10.12	synth with cache (only 1: intro n; only 1: easy).	0.438668966293	442
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	7	synth with cache (only 1: constructor).	0.0123419761658	8
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	0.11	synth with cache (only 1: fix even_spec 1; only 1: intuition).	1.89198184013	115
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	10.1.1.21	synth with cache (only 1: destruct m; only 1: intuition; only 1: intuition; only 1: discriminate).	4.68646597862	4320
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	0.0.0.0.0.0.0.5.0.1	synth with cache (only 1: intros m Hm x; only 1: clear Hm; only 1: intros e' eqfind; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	29.9899511337	9900
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.135592937469	9
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	6	synth with cache (only 1: auto using eqke_equiv).	0.0117230415344	7
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	2	synth with cache (only 1: auto).	0.00834083557129	3
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	3.1.0.0.0	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).	0.078097820282	24
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	2.0.0.1.0.0.0.8.13	synth with cache (only 1: intros l l1 l2; only 1: revert l1 l2; only 1: intro n; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: intuition).	16.6413030624	10134
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40	1.14.2.0.0.10	synth with cache (only 1: induction 1; only 1: intros; only 1: auto; only 1: intros; only 1: apply add_NoDup; only 1: auto).	30.5797259808	16350
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40	2.3.13	synth with cache (only 1: fix odd_spec 1; only 1: intros NoDup hyp; only 1: auto).	1.58660793304	1941
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	0.0.1.41	synth with cache (only 1: intros m; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.624330043793	1601
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40	5.2.45	synth with cache (only 1: fix gcd_divide 1; only 1: intros e' eqfind; only 1: auto).	10.5335009098	20472
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	2.0	synth with cache (only 1: intros m; only 1: auto).	0.0128359794617	4
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0138368606567	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	42	synth with cache (only 1: now intro n; induction n).	0.927061796188	3693
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	6.0	synth with cache (only 1: intros m; only 1: auto).	0.0152409076691	8
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40	5.4.16.7.0	synth with cache (only 1: intros m; only 1: intros s; only 1: fix gcd_greatest 1; only 1: intros l1 l2 Heq; only 1: auto).	19.0433390141	23960
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.4.0	synth with cache (only 1: intros n m; only 1: split; only 1: auto with fset; only 1: auto with typeclass_instances).	0.0230991840363	8
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).	0.0272178649902	2
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	3.0	synth with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	0.182296991348	14
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.7.0.18.2	synth with cache (only 1: compute; only 1: constructor; only 1: intro a; only 1: Dec.fsetdec; only 1: intuition).	0.415230035782	978
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	4.10.0.1	synth with cache (only 1: intros X H'; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	3.16412186623	2863
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	4.7.0.11	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	1.05953407288	1970
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0833170413971	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.2.3	synth with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.182152032852	19
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0119519233704	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	0.0.0.2	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.146320104599	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.175008058548	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.168272018433	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0.0.1.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto with set).	0.0272979736328	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.6.4	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with fset).	0.893002986908	448
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.3.2	synth with cache (only 1: rewrite mem_iff; only 1: intuition; only 1: congruence).	0.0511150360107	22
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	1.0.0.0.2.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto with set).	0.0304191112518	11
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	2.0.0.1.0.0.0.2	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	3.20803999901	578
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0198221206665	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0189580917358	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	3.4.0	synth with cache (only 1: apply subset_1; only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: auto with set).	0.0401208400726	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	6.0	synth with cache (only 1: intros; only 1: auto with set).	0.019495010376	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	2.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0222079753876	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	0	synth with cache (only 1: auto with set).	0.0112409591675	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0146999359131	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	3.5	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.121576070786	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	0.3.7.0.1	synth with cache (only 1: intros; only 1: apply equal_1; only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intros; only 1: intuition).	0.861124992371	410
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	1.1.1.0.0.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition; only 1: intuition).	0.654309988022	90
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	2.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	1.67915201187	401
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	0.0.1.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0465090274811	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.010262966156	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0308358669281	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.011950969696	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0112879276276	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0110371112823	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0526611804962	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0116069316864	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0108981132507	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.00973010063171	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0607450008392	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0106389522552	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0124051570892	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0107800960541	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0109248161316	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0107750892639	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0108909606934	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0110099315643	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.0111930370331	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.1.6	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with set).	0.149015903473	32
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0105879306793	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0107989311218	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0272469520569	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.00950288772583	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.011684179306	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.0108489990234	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0100028514862	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.0105459690094	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0209848880768	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	1.0.0.0.1.4	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.95145702362	694
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	3.2.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.60860204697	800
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	2.17.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intuition).	1.9643471241	2189
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0442230701447	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0423541069031	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	1.0.0.1.41.2.2	synth with cache (only 1: intros n m ?; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	31.6924760342	45542
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	5.0	synth with cache (only 1: intros; only 1: intuition).	0.0792610645294	31
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0	synth with cache (only 1: solve_proper).	0.017077922821	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	17.0	synth with cache (only 1: intros; only 1: auto with set).	2.52015686035	1591
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.014456987381	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.1.0	synth with cache (only 1: unfold Add, MP.Add; only 1: split; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: auto; only 1: auto; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	29.1063640118	11745
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	0.0.13.0.0.0.1.0	synth with cache (only 1: unfold Add, MP.Add, Equal; only 1: intros; only 1: set_iff; only 1: do 2 (rewrite filter_iff; auto); only 1: set_iff; only 1: rewrite filter_iff; only 1: intuition; only 1: auto).	34.156662941	8977
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	6.3.1.0.0.11	synth with cache (only 1: intros m Hm; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intro H; only 1: auto with set).	2.17529702187	1859
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.1.6.0.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	0.133442163467	77
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	2.10.6.12	synth with cache (only 1: intro x; only 1: intros m Hm; only 1: f_equal; only 1: auto).	31.7662160397	2846
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	1.0.1.19	synth with cache (only 1: intros x y; only 1: simpl; only 1: intros; only 1: eauto).	1.56287503242	2178
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	16.25.2	synth with cache (only 1: simpl; only 1: intros l2; only 1: eauto with set).	7.43772697449	17680
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	0.0.0.0.0.6.0.7.0.1	synth with cache (only 1: unfold choose; only 1: split; only 1: destruct (choose_aux s) as [(x, Hx)| H]; only 1: congruence; only 1: eauto with set; only 1: intros; only 1: destruct H; only 1: destruct (choose_aux s) as [(y, Hy)| H']; only 1: congruence; only 1: congruence).	12.0384340286	9263
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40	0.16.27	synth with cache (only 1: intros EQ; only 1: fix odd_spec 1; only 1: eauto with bool).	33.3366248608	59961
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.2.0.0.0.0.36	synth with cache (only 1: intro; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: easy; only 1: auto).	8.01150512695	16516
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	10.0.1.0	synth with cache (only 1: unfold elements; only 1: firstorder; only 1: case (M.elements s); only 1: intuition).	0.487632036209	605
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	5.0	synth with cache (only 1: intros; only 1: intuition).	0.112586975098	53
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.4.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	1.13413691521	333
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.1.1.2.0	synth with cache (only 1: intros s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.480503082275	162
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0237629413605	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.2.0	synth with cache (only 1: intros s x y; only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0266880989075	7
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.2.1.0.0	synth with cache (only 1: intros x y; only 1: unfold singleton; only 1: firstorder; only 1: case (M.singleton x); only 1: firstorder).	0.0236918926239	8
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0214560031891	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0209889411926	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.2.0.7	synth with cache (only 1: intros; only 1: unfold inter; only 1: case (M.elements s); only 1: firstorder; only 1: case (M.inter s s'); only 1: firstorder).	1.58236789703	858
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0197229385376	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder).	0.0266280174255	6
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0111808776855	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.1.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.161771059036	7
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.1.0.1.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: case (M.remove x s); only 1: destruct M.filter as (x0, Hiff); only 1: firstorder; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.21245098114	13
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0403230190277	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	5	synth with cache (only 1: solve_proper).	0.120301008224	48
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	23.7	synth with cache (only 1: compute; only 1: intuition).	3.56562304497	6451
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.8	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.322105169296	141
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	3.0.0	synth with cache (only 1: red; only 1: intros; only 1: intuition).	0.265382051468	50
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0	synth with cache (only 1: now BinInt.Z.swap_greater).	0.0164330005646	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.0456619262695	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0156948566437	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0273611545563	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	1.5.0	synth with cache (only 1: unfold Subset; only 1: repeat red; only 1: auto with arith).	0.11790895462	21
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.02920794487	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0174000263214	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.03200507164	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.4	synth with cache (only 1: intros; only 1: fsetdec).	0.0336201190948	6
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0584409236908	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0263679027557	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0250401496887	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.4.3	synth with cache (only 1: split; only 1: repeat split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.399379968643	87
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0569200515747	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0313980579376	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0441830158234	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.0865521430969	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	4.0.0	synth with cache (only 1: split; only 1: apply remove_3; only 1: fsetdec).	0.0600488185883	14
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.0899450778961	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.0704560279846	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.0875101089478	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.0638439655304	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.148432016373	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0462579727173	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0661699771881	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.062420129776	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0599899291992	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.0983200073242	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.0466310977936	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.0900321006775	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	1.12	synth with cache (only 1: intros l; only 1: fsetdec).	0.428415060043	126
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.139504909515	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0203561782837	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.019679069519	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0409920215607	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0397009849548	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.03671002388	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0401978492737	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0385110378265	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	1	synth with cache (only 1: fsetdec).	0.0550098419189	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0422258377075	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0410511493683	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.055379152298	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.052120923996	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.0862619876862	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0987179279327	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.112488985062	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.090824842453	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.0883729457855	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0349187850952	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0272438526154	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0203750133514	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0213279724121	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0359809398651	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0343289375305	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.040647983551	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0232298374176	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0820081233978	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.0527319908142	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.0891389846802	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.0873899459839	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	1.0.2	synth with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.116569042206	28
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.0.6	synth with cache (only 1: intros l2; only 1: expAdd; only 1: fsetdec).	0.095990896225	9
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0.11	synth with cache (only 1: intro; only 1: expAdd; only 1: fsetdec).	1.09020709991	208
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	1.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.194625854492	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	1.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.163194894791	3
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40	1.4.7.6	synth with cache (only 1: intros n m; only 1: revert n; only 1: fix even_spec 1; only 1: eauto).	24.6376709938	14573
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40	0.2.0.0.3.1.0	synth with cache (only 1: intro n; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: red; only 1: intuition; only 1: fsetdec).	1.01822900772	558
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	0.0.2.0	synth with cache (only 1: intuition; only 1: apply fold_rec; only 1: intuition; only 1: fsetdec).	0.0800909996033	19
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	12.9.0.1	synth with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: intuition).	29.879887104	19891
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.3185839653	1171
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.019189119339	3
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	0.0.0.0.20	synth with cache (only 1: intro; only 1: rewrite elements_Empty, M.cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: now destruct l).	2.13748788834	2170
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	5.0	synth with cache (only 1: intros n m Hn; only 1: intuition).	0.0185668468475	7
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.0.0.13	synth with cache (only 1: intro H2; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.717550039291	679
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	9.0	synth with cache (only 1: intros n m ?; only 1: intuition).	0.166559934616	50
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0221571922302	3
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0211319923401	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	synth with cache (only 1: eauto).	0.0433068275452	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.3.0	synth with cache (only 1: unfold decidable; only 1: intros a b c Hb; only 1: firstorder).	1.05678987503	6
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0.6.3	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: destruct 1; only 1: auto).	0.159253120422	94
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.5	synth with cache (only 1: intros a; only 1: intuition).	0.0882439613342	37
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	synth with cache (only 1: fsetdec).	0.0835900306702	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.23.3	synth with cache (only 1: unfold Equal, Subset; only 1: intros EQ; only 1: fsetdec).	6.59381604195	6307
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.112902164459	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	synth with cache (only 1: fsetdec).	0.150019884109	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.162981033325	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	synth with cache (only 1: fsetdec).	0.264441013336	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.319995164871	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	2.0.0	synth with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: intuition).	0.0531620979309	5
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	1.1.37	synth with cache (only 1: intros a b Ha Hb; only 1: intros s s' H; only 1: fsetdec).	11.6303699017	11965
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.107160806656	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0853230953217	1
Coq.FSets.FMapList.Raw.Elt.empty_1	40	0	synth with cache (only 1: now intuition).	0.0132219791412	1
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	7.5	synth with cache (only 1: unfold PX.eqk, PX.ltk; only 1: constructor).	0.151994943619	82
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	2.6	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.662379980087	22
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).	5.40069007874	1979
Coq.FSets.FMapList.Raw.Elt.elements_1	40	1	synth with cache (only 1: auto).	0.00888991355896	2
Coq.FSets.FMapList.Raw.Elt.elements_2	40	4.1	synth with cache (only 1: intros e' eqfind; only 1: auto).	0.0136051177979	7
Coq.FSets.FMapList.Raw.Elt.elements_3	40	2.0.0.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.0532381534576	12
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40	3.0.4.0.14.1	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: intuition).	9.14417695999	5881
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.2.0.2.3.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intuition; only 1: inversion_clear H; only 1: simpl; only 1: intuition).	3.75349497795	1435
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	4.0.1.3.1.3.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: inversion_clear Hm; only 1: intuition; only 1: destruct a as (x'', e''); only 1: simpl; only 1: constructor; only 1: auto; only 1: eauto with ordered_type).	22.2877049446	10196
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.1.2.1.0.0.2	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e); only 1: inversion_clear 1; only 1: simpl; only 1: auto).	1.27157902718	498
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	0.69893693924	199
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	0.0.52	synth with cache (only 1: intros LS' n; only 1: intro abs; only 1: inversion abs).	1.85471820831	1714
Coq.FSets.FMapList.Make.Elt.is_empty_1	40	0.5.7	synth with cache (only 1: fix even_spec 1; only 1: intro H; only 1: apply PeanoNat.Nat.even_spec).	1.11743283272	776
Coq.FSets.FMapList.Make.Elt.is_empty_2	40	0.1.4.4.1.0.0.1.5	synth with cache (only 1: intros (m', Hm); only 1: generalize Hm; only 1: clear Hm; only 1: intros sorted hyp; only 1: red; only 1: red; only 1: destruct m'; only 1: inversion 1; only 1: intuition).	7.02652001381	5179
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0.0	synth with cache (only 1: intros m; only 1: auto).	0.0129411220551	2
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0128881931305	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	3.63	synth with cache (only 1: intros [? ?]; only 1: auto).	2.00428390503	8424
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	6	synth with cache (only 1: auto).	0.0245630741119	18
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40	0.43.2.5.0	synth with cache (only 1: unfold eq, lt; only 1: intro n; only 1: induction n; only 1: fix le_div2 1; only 1: auto).	28.968941927	61249
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	2.6.0.6.22.9.0	synth with cache (only 1: intro x; only 1: intro z; only 1: apply Acc_rect; only 1: intro H; only 1: intro; only 1: split; only 1: auto).	13.8683829308	47455
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.5.5.2	synth with cache (only 1: intro H; only 1: intro z; only 1: split; only 1: auto with sets).	0.0745830535889	170
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	1.0.0.8	synth with cache (only 1: destruct 1; only 1: intros E; only 1: intro; only 1: auto with sets).	0.79661989212	401
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.0.16.0	synth with cache (only 1: intros; only 1: intro x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.291733980179	464
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	2.19	synth with cache (only 1: left; only 1: trivial).	0.0952839851379	275
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.2.1.1.8	synth with cache (only 1: intro x; only 1: intros y H2; only 1: induction H2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.513962984085	483
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.1.0	synth with cache (only 1: red; only 1: intros y H2; only 1: auto with sets).	0.0132510662079	4
Coq.Numbers.DecimalR.of_IQmake_to_decimal	40
Coq.Numbers.DecimalR.of_to	40
Coq.Numbers.DecimalR.to_of	40
Coq.Numbers.DecimalR.to_decimal_inj	40
Coq.Numbers.DecimalR.to_decimal_surj	40
Coq.Numbers.DecimalR.of_decimal_dnorm	40	0	synth with cache (only 1: now apply DecimalQ.to_decimal_inj; rewrite !DecimalQ.to_of; [  | rewrite dnorm_involutive ]).	0.0178170204163	1
Coq.Numbers.DecimalR.of_inj	40	0.0.17	synth with cache (only 1: intros; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !DecimalQ.to_of, H).	1.15711402893	695
Coq.Numbers.DecimalR.of_iff	40	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !to_of, H; only 1: intros E; only 1: rewrite <- DecimalQ.of_decimal_dnorm, E; only 1: apply DecimalQ.of_decimal_dnorm).	0.0530059337616	13
Coq.Numbers.DecimalFacts.of_list_to_list	40
Coq.Numbers.DecimalFacts.to_list_of_list	40
Coq.Numbers.DecimalFacts.to_list_inj	40
Coq.Numbers.DecimalFacts.of_list_inj	40
Coq.Numbers.DecimalFacts.nb_digits_spec	40	0.144	synth with cache (only 1: compute; only 1: now induction u; [ idtac | simpl; rewrite IHu.. ]).	16.3026249409	30109
Coq.Numbers.DecimalFacts.nzhead_spec	40
Coq.Numbers.DecimalFacts.unorm_spec	40
Coq.Numbers.DecimalFacts.revapp_spec	40
Coq.Numbers.DecimalFacts.rev_spec	40
Coq.Numbers.DecimalFacts.app_spec	40
Coq.Numbers.DecimalFacts.nztail_spec	40
Coq.Numbers.DecimalFacts.del_head_spec_0	40	0.0	synth with cache (only 1: simpl; only 1: firstorder).	0.0159511566162	2
Coq.Numbers.DecimalFacts.del_head_spec_small	40
Coq.Numbers.DecimalFacts.del_head_spec_large	40
Coq.Numbers.DecimalFacts.nb_digits_0	40
Coq.Numbers.DecimalFacts.nb_digits_n0	40	4.14.18.10	synth with cache (only 1: intros Hb; only 1: intuition; only 1: subst; only 1: tauto).	14.6708550453	7379
Coq.Numbers.DecimalFacts.nb_digits_iter_D0	40	7.0.0.0.0.19	synth with cache (only 1: induction n as [| n IH]; only 1: revert d; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	16.8490891457	8167
Coq.Numbers.DecimalFacts.length_lnzhead	40
Coq.Numbers.DecimalFacts.nb_digits_nzhead	40
Coq.Numbers.DecimalFacts.unorm_nzhead	40
Coq.Numbers.DecimalFacts.nb_digits_unorm	40
Coq.Numbers.DecimalFacts.nb_digits_rev	40
Coq.Numbers.DecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.DecimalFacts.unorm_D0	40	0	synth with cache (only 1: now simpl).	0.0108721256256	1
Coq.Numbers.DecimalFacts.app_nil_l	40	0	synth with cache (only 1: now unfold unorm; case nzhead).	0.013347864151	1
Coq.Numbers.DecimalFacts.app_nil_r	40
Coq.Numbers.DecimalFacts.abs_app_int	40
Coq.Numbers.DecimalFacts.abs_norm	40
Coq.Numbers.DecimalFacts.iter_D0_nzhead	40
Coq.Numbers.DecimalFacts.iter_D0_unorm	40
Coq.Numbers.DecimalFacts.nzhead_app_l	40
Coq.Numbers.DecimalFacts.nzhead_app_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.DecimalFacts.unorm_app_zero	40
Coq.Numbers.DecimalFacts.app_int_nil_r	40
Coq.Numbers.DecimalFacts.unorm_app_l	40
Coq.Numbers.DecimalFacts.unorm_app_r	40
Coq.Numbers.DecimalFacts.norm_app_int	40
Coq.Numbers.DecimalFacts.del_head_nb_digits	40
Coq.Numbers.DecimalFacts.del_tail_nb_digits	40
Coq.Numbers.DecimalFacts.del_head_app	40
Coq.Numbers.DecimalFacts.del_tail_app	40
Coq.Numbers.DecimalFacts.del_tail_app_int	40
Coq.Numbers.DecimalFacts.app_del_tail_head	40
Coq.Numbers.DecimalFacts.app_int_del_tail_head	40
Coq.Numbers.DecimalFacts.del_head_app_int_exact	40
Coq.Numbers.DecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.nzhead_D0	40	0	synth with cache (only 1: reflexivity).	0.0113170146942	1
Coq.Numbers.DecimalFacts.nzhead_iter_D0	40	0	synth with cache (only 1: now induction n; simpl; [  | rewrite IHn ]).	0.0128538608551	1
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	1.25.0.3	synth with cache (only 1: intros EQ; only 1: rewrite <- (rev_rev d); only 1: rewrite EQ; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	16.5909619331	17129
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.unorm_iter_D0	40	0	synth with cache (only 1: now induction n).	0.0118088722229	1
Coq.Numbers.DecimalFacts.del_head_nonnil	40
Coq.Numbers.DecimalFacts.del_tail_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_involutive	40
Coq.Numbers.DecimalFacts.nztail_involutive	40
Coq.Numbers.DecimalFacts.unorm_involutive	40	0.0.1.0.0.0.0.0.1.0.0.0.6	synth with cache (only 1: unfold unorm; only 1: induction d; only 1: now simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: trivial; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	5.54552102089	1594
Coq.Numbers.DecimalFacts.norm_involutive	40
Coq.Numbers.DecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.DecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.DecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.DecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.DecimalFacts.nzhead_app_nzhead	40
Coq.Numbers.DecimalFacts.unorm_app_unorm	40
Coq.Numbers.DecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalFacts.unorm_app_l_nil	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	3.0.12	synth with cache (only 1: induction n as [| n IHn]; only 1: now N.nzsimpl; only 1: auto).	13.7983767986	1819
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	synth with cache (only 1: apply of_lu_double_gen).	0.0569350719452	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	1	synth with cache (only 1: trivial).	0.0698461532593	2
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	2	synth with cache (only 1: auto with arith).	0.0729959011078	3
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40	1.11.10	synth with cache (only 1: revert d; only 1: fix even_spec 1; only 1: trivial).	5.58573913574	2611
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	4.8.1.2.1.2.6.0.5	synth with cache (only 1: intros H; only 1: generalize (of_to p); only 1: rewrite of_uint_alt; only 1: unfold rev; only 1: generalize (of_to p); only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite H; only 1: discriminate).	22.3614699841	10090
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	4	synth with cache (only 1: now induction d).	1.43918395042	186
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Unsigned.nztail_to_uint	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0	synth with cache (only 1: reflexivity).	0.0588390827179	1
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	2.1.0.2.0.3.2.0	synth with cache (only 1: revert d; only 1: Nat.induct n; only 1: intros a; only 1: trivial; only 1: intros a b; only 1: simpl; only 1: intro H; only 1: now simpl).	21.0856819153	4676
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	0.1.0.1.2.17	synth with cache (only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	11.2864749432	4389
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40	0.1.0.1.2.18	synth with cache (only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	35.2317230701	11852
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	6.9.0.10	synth with cache (only 1: revert d; only 1: intros n; only 1: bitwise as m; only 1: now induction n).	9.15586495399	3850
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40	0.1.0.1.2.2	synth with cache (only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.485646009445	72
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.0.0.0.1.0	synth with cache (only 1: exists (Nat.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: f_equal; only 1: unfold Nat.of_uint; only 1: now induction d).	0.127326011658	7
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.184204101562	3
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_succ	40	4	synth with cache (only 1: reflexivity).	0.0992438793182	11
Coq.Numbers.HexadecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalNat.Unsigned.of_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNat.Signed.of_to	40
Coq.Numbers.HexadecimalNat.Signed.to_of	40
Coq.Numbers.HexadecimalNat.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalNat.Signed.of_int_norm	40
Coq.Numbers.HexadecimalNat.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.0	synth with cache (only 1: intros n m; only 1: reflexivity).	0.0126488208771	2
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	7.0.1.4	synth with cache (only 1: repeat red; only 1: simpl; only 1: intros n m p q H1 H2; only 1: now f_equiv).	1.03020501137	404
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	1.0.0.19.3.0	synth with cache (only 1: unfold Z.succ, Z.eq; only 1: repeat red; only 1: intros m IH; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	12.857008934	6767
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	6.0.23	synth with cache (only 1: compute; only 1: intro; only 1: now nzsimpl).	8.90614008904	15433
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.3.0.0.0.0	synth with cache (only 1: intro n; only 1: revert n; only 1: intro n; only 1: revert n; only 1: CRelationClasses.simpl_crelation; only 1: now nzsimpl).	0.200781106949	42
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.19.1.212	synth with cache (only 1: red; only 1: simpl in *; only 1: nzsimpl'; only 1: now f_equiv).	9.43012213707	28439
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.198	synth with cache (only 1: red; only 1: simpl; only 1: now nzsimpl').	4.66707205772	20257
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	6	synth with cache (only 1: easy).	0.0219478607178	12
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	1.0	synth with cache (only 1: intros a; only 1: now repeat constructor).	0.0115668773651	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.4.2.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: intro n; only 1: now nzsimpl).	0.152236223221	19
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	3.5.0.2.1	synth with cache (only 1: intros n m; only 1: rewrite <- (BinInt.Z.succ_pred n)  at 2; only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl).	1.14667320251	573
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.11	synth with cache (only 1: intro m; only 1: unfold Z.add, Z.eq; only 1: simpl in *; only 1: now nzsimpl).	0.809648990631	451
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.5.0	synth with cache (only 1: unfold Z.sub, Z.eq; only 1: simpl; only 1: intros n m; only 1: now nzsimpl).	0.289999961853	28
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.0.0	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.087366104126	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	2.1.10.22	synth with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: intro m; only 1: trivial).	35.9868860245	25162
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.1.2.6	synth with cache (only 1: intros n H; only 1: apply BinInt.Z.lt_nge in H; only 1: apply H; only 1: now apply add_le_mono_r).	0.280388832092	175
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	6.2.25	synth with cache (only 1: intro len; only 1: fix even_spec 1; only 1: tauto).	16.2648019791	18043
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	0.0.11	synth with cache (only 1: intros a m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	1.07153177261	335
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0436060428619	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0428738594055	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0418338775635	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0426008701324	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	0.3.12	synth with cache (only 1: intro p; only 1: intro n; only 1: now rewrite (add_lt_mono_r _ _ n), add_0_l, sub_simpl_r).	7.47378897667	2768
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.56	synth with cache (only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	8.31227302551	7318
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.2.5.13	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	7.15031003952	4122
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	0.24.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	36.9029231071	14447
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	0.22.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	19.6087441444	7947
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.0.0.0	synth with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.120388031006	24
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0519518852234	3
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	0.0.10.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: order; only 1: order).	38.8244509697	4256
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	16.18019104	3192
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	5.05934906006	1213
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.5	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.190921068192	18
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.8.0	synth with cache (only 1: intros a; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	1.14717793465	321
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	7.0.2.4.5.0	synth with cache (only 1: split; only 1: congruence; only 1: intros m Hm; only 1: intros LE EQ; only 1: CRelationClasses.simpl_crelation; only 1: congruence).	4.82545590401	3212
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	11.11	synth with cache (only 1: intros n m p q; only 1: now f_equiv).	12.2919919491	1792
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.10344004631	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.109487056732	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	0.0.8.2.0.0.0.0.3	synth with cache (only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros H; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).	17.5083799362	6241
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0553758144379	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	10.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).	1.90955591202	588
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0578050613403	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	22.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: intuition).	6.61080408096	2924
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	6.8.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	2.2268679142	890
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	3.5.0.5	synth with cache (only 1: intros x; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	3.41669511795	1365
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.2	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.260490894318	49
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0579280853271	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.12	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	2.7868719101	467
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	11.0.1	synth with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.4890370369	418
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	17.0.1	synth with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	2.8037109375	1512
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.3.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.0718259811401	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.1.0	synth with cache (only 1: intros a; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0715458393097	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0633261203766	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.3.0	synth with cache (only 1: intro n; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.130625009537	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.0.0.0.0.0.11	synth with cache (only 1: intro n; only 1: intro; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	7.52009105682	2708
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	0.0.0.0.0.0.0.0.9.0	synth with cache (only 1: intros n m; only 1: destruct_max m; only 1: easy; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_l, <- Hp, opp_involutive; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite Hp, mul_opp_l).	6.01120591164	4046
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0521891117096	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.1.1.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	3.94408988953	2027
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	3.0.0.0.5.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	1.68846797943	825
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.0.0.5.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	1.05409216881	562
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.2.0.0	synth with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0287141799927	6
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	7.6.0	synth with cache (only 1: unfold lcm; only 1: intros n m; only 1: apply abs_nonneg).	6.36437416077	2852
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.6.8.3	synth with cache (only 1: intros x; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	1.35518598557	1293
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0221590995789	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0361390113831	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0231068134308	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_refl).	0.0240850448608	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.0.0.1.1.3.0	synth with cache (only 1: intros n m Hn; only 1: intros EQ; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: order; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	1.89776206017	686
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	0.2.0.0.0.1.0.0.0.0.0.4.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	35.0165531635	13719
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0300970077515	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.1.2.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	3.98919296265	1966
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	2.0.0.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.798097848892	321
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.2.0.0	synth with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0656349658966	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	0.120203018188	46
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	1.80632281303	831
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.3.0.0.0.4.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	3.963586092	1840
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	1.43385410309	551
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	1.0.1.4.1.0.1.5.2	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	4.26717710495	2509
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	1.0.0.7.1.0.0.8.2	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	12.5537440777	8484
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	3.1.0.0.0.3.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	31.7907168865	16826
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	4.0.0.3.4.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	33.4150509834	19088
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	2.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	7.48282289505	3204
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.2.23.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: intuition order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	19.7991540432	9518
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.0.0	synth with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0736281871796	3
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	1.2.43.0	synth with cache (only 1: intro n; only 1: apply le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite succ_pred).	8.48649096489	9202
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	22.0.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now apply le_le_succ_r).	4.22370195389	2705
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.10.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.68193817139	1012
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	3.12.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).	35.2065711021	9179
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.5.0	synth with cache (only 1: intros n m LE; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.234231948853	56
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.1.2.7.2	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros H; only 1: rewrite lt_succ_r; only 1: order).	12.139398098	2242
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	2.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0453760623932	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.086236000061	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.4.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	0.696755886078	132
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	0.161810159683	22
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	2.3.1	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.218199014664	53
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0258958339691	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0268430709839	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	0.0.0.0.1.4	synth with cache (only 1: intros m; only 1: rewrite opp_nonneg_nonpos; only 1: intros n; only 1: rewrite abs_neq; only 1: auto with relations; only 1: auto).	0.164602994919	114
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0257999897003	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.4.1	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.0152161121368	8
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	9.10.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	4.3259100914	2708
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	26.8.0.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: now rewrite opp_involutive).	15.7082121372	19995
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.0.0.0.0.5.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: now rewrite opp_nonneg_nonpos).	0.710890054703	433
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	synth with cache (only 1: intros P n **; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0279018878937	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	4.1.1.2	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.808701992035	352
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	7.7.0	synth with cache (only 1: rewrite sgn_null; only 1: now nzsimpl; only 1: now nzsimpl).	1.1749560833	1134
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.154138088226	82
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.1.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	0.256400108337	30
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.8.0.0.0	synth with cache (only 1: intros a b q ? ? ?; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	3.51217007637	1425
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0751860141754	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.5.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	2.72248506546	382
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.3.0.1.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	6.93508696556	3193
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0228610038757	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.0.0.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	8.05788207054	2969
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.5.1.1.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	18.6775801182	9196
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0238959789276	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.1.0.0.0	synth with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0639050006866	22
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0682229995728	22
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.1.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	0.522222995758	347
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0178182125092	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0159800052643	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros a b **; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	8.65304398537	3134
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.2.0.1.0.0.1.2.9	synth with cache (only 1: intros NEQ; only 1: intros Hab; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).	3.70878386497	2234
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	synth with cache (only 1: intros a b ? ?; only 1: apply mod_le; only 1: auto; only 1: auto).	0.263608932495	94
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	1.0.1.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.414191961288	76
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.1.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.200870037079	51
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.0.0.0.1	synth with cache (only 1: intros a b **; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: order).	0.0447809696198	13
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	4.0.0.0.1	synth with cache (only 1: intros a b **; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0738530158997	14
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0254950523376	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.0.0.1.9	synth with cache (only 1: intros a b ? ?; only 1: intros Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	3.35908389091	2236
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.1.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0270798206329	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0306828022003	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	27.9894750118	9509
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.1.5.0.0.0	synth with cache (only 1: intros a b **; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	2.43926501274	1003
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.0.0	synth with cache (only 1: intros a b c **; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0594201087952	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.0.0.1.6	synth with cache (only 1: intros a b ?; only 1: rewrite (add_comm _ c), (add_comm a); only 1: intros; only 1: apply Private_NZDiv.div_add; only 1: order).	0.558377027512	347
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.3.2.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	1.02240204811	168
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.1.0.0.0.1.2.0.0.1.0	synth with cache (only 1: intros a b c **; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).	9.39028501511	2624
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.1.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.329858064651	58
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.1.1.0.0.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.111225128174	32
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.1.3.0.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.132883071899	38
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	1.2.1.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.0884609222412	33
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.1.2.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0678689479828	27
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.1.0.0.0.1	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.149198055267	15
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.0.1.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.120211839676	10
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0198848247528	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	1.0.5.0.1.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro m; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).	1.94348406792	575
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.0.2	synth with cache (only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.410965919495	88
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.0.3.6	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	12.3158700466	3262
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	5.0.0.0.0.8	synth with cache (only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros H; only 1: now f_equiv).	1.36512517929	574
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0	synth with cache (only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0111219882965	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.2.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0242440700531	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.1.2.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	0.0967409610748	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.0.6	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.0880649089813	18
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.1	synth with cache (only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.286595106125	67
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	1.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.020231962204	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40	0.0.1.0.0.1.0.2.10.8	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: nzsimpl; only 1: split; only 1: apply opp_inj; only 1: intros; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	25.9878149033	15687
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	13.0.0.1.5	synth with cache (only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	7.53490114212	4633
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	3.18	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	0.52126789093	384
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.4.3	synth with cache (only 1: symmetry; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.23777794838	53
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.3	synth with cache (only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.303490877151	81
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.1.0.4.0.4.11	synth with cache (only 1: nzinduct n; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro p; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r; only 1: intro n; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	23.9509398937	8350
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0138499736786	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	2.10	synth with cache (only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	0.598407030106	227
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.11	synth with cache (only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.43407702446	143
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.127305030823	27
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.3.0	synth with cache (only 1: intros a b ?; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.455471992493	100
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	2.2.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: auto using mod_small).	0.321205854416	59
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0605630874634	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.0.4	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	1.18403291702	483
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.036346912384	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0372240543365	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.0798301696777	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.1.1.0.1.3.9	synth with cache (only 1: intros NEQ; only 1: intros Hab; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	2.58715605736	1283
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.0.1.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.705461978912	77
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.538664102554	106
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	6.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	1.77978992462	707
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0458810329437	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.1.1.0.0.5	synth with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: order).	0.631422996521	215
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0732078552246	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.054032087326	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	22.068475008	6678
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0565049648285	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0820059776306	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: symmetry; only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).	9.89036202431	2550
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.576514959335	68
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.0.0.17	synth with cache (only 1: intuition; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	36.7931599617	11623
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	1.1.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.101196050644	14
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.2.1.0.0.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.150011777878	27
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	1.1.4.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	1.56746387482	426
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.174650907516	18
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.1.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0843470096588	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	1	synth with cache (only 1: BinInt.Z.order).	0.0548160076141	15
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	5.5.0	synth with cache (only 1: intros A op H p; only 1: intros l2; only 1: firstorder).	0.997123003006	338
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	4.4.8	synth with cache (only 1: intros a; only 1: fix even_spec 1; only 1: easy).	3.32671809196	1565
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	2.8.1	synth with cache (only 1: intros a; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: easy).	10.2116801739	368
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.2.4	synth with cache (only 1: intro n; only 1: destruct n; only 1: repeat split).	0.0710859298706	39
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0249309539795	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	5.2	synth with cache (only 1: intros n m; only 1: now destruct n, m).	0.154420137405	43
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	2.4.13	synth with cache (only 1: fix odd_spec 1; only 1: intro q; only 1: trivial).	4.74483704567	1705
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	1	synth with cache (only 1: now intro n; induction n).	0.0139179229736	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0	synth with cache (only 1: reflexivity).	0.0123040676117	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	4.1.1.0.0.1.5	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- ?IHn; only 1: auto).	7.42790603638	3580
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.1.3.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0384478569031	10
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0249009132385	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.023185968399	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	6.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: now rewrite H).	0.584672927856	148
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	1.2.2.1	synth with cache (only 1: intros e1 e2; only 1: split; only 1: trivial; only 1: auto).	0.0776739120483	41
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	2.0.4.7.7	synth with cache (only 1: intro; only 1: intros s1; only 1: fix le_div2 1; only 1: intro n; only 1: auto).	21.417347908	10120
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.0232257843018	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	2.6.3	synth with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.138516902924	107
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.1.1.1	synth with cache (only 1: intro l; only 1: induction l; only 1: intros H; only 1: auto).	2.05922794342	16
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40	2.10	synth with cache (only 1: fix even_spec 1; only 1: easy || now destruct Hm).	0.793709039688	525
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0	synth with cache (only 1: auto with zarith).	0.0125160217285	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	17	synth with cache (only 1: trivial).	0.0787551403046	126
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.2	synth with cache (only 1: red; only 1: auto).	0.0141680240631	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	2.5	synth with cache (only 1: rewrite <- phibis_aux_equiv; only 1: auto).	0.0168700218201	9
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	synth with cache (only 1: reflexivity).	0.012344121933	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	9	synth with cache (only 1: auto).	0.179723978043	11
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.2.2	synth with cache (only 1: intros H; only 1: intros; only 1: reflexivity).	0.0196161270142	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	2.1.0.1.0	synth with cache (only 1: intros; only 1: unfold add31; only 1: repeat rewrite phi_phi_inv; only 1: Z.nzsimpl; only 1: trivial).	0.175287008286	9
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0176317691803	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.0.2.1.7	synth with cache (only 1: simpl in *; only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	2.97693276405	912
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0184669494629	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.0181488990784	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0885140895844	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0182628631592	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.108241081238	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	1.0.2.6.0	synth with cache (only 1: intros; only 1: apply Zeq_bool_eq; only 1: generalize (phi_bounded x); only 1: intros; only 1: auto with zarith).	0.429220914841	182
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	8	synth with cache (only 1: auto with zarith).	0.0644128322601	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.098555803299	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.0	synth with cache (only 1: intros; only 1: unfold wB, base; only 1: auto with zarith).	0.0856940746307	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.0.0.3.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: split; only 1: auto with zarith; only 1: unfold wB, base; only 1: auto with zarith).	0.145048856735	16
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.2.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.285374879837	37
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	5.1	synth with cache (only 1: unfold to_Z, zero; only 1: auto).	0.0819418430328	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	0.4.1.0	synth with cache (only 1: intros; only 1: unfold add_carry_c, to_Z, interp_carry; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.13065290451	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40	0.5.12.0.0	synth with cache (only 1: intros; only 1: unfold add_c, to_Z, interp_carry; only 1: apply Z.add_mod; only 1: generalize (Z_mod_lt x wB wB_pos), (Z_mod_lt y wB wB_pos); only 1: lia).	7.85435199738	2254
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	1.2.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.165386915207	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	4.2	synth with cache (only 1: unfold wB, base; only 1: auto).	0.75140786171	92
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	3.5.1.1.0	synth with cache (only 1: intros; only 1: destruct x; only 1: trivial; only 1: apply two_power_pos_equiv; only 1: auto).	1.64456701279	295
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	11	synth with cache (only 1: auto).	0.103703022003	33
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.0.0.0.0.0.0.0.0.0.10	synth with cache (only 1: intros; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	16.1923191547	6487
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.0.9.2.2	synth with cache (only 1: destruct n as [| n| n]; only 1: lia; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: now destruct 1 || intros _).	1.31162500381	810
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.2	synth with cache (only 1: intro Hn; only 1: Z.order_nz).	0.0574769973755	13
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	1	synth with cache (only 1: easy).	0.0236110687256	2
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	6	synth with cache (only 1: split).	0.0164132118225	7
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	1	synth with cache (only 1: reflexivity).	0.0115211009979	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: reflexivity).	0.012167930603	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	218	synth with cache (only 1: congruence).	24.0331718922	47475
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.1.6	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.175785064697	41
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0368850231171	13
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.1.1.9	synth with cache (only 1: intros; only 1: unfold eqo; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	1.03387308121	810
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	16.8.0.0	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros; only 1: now rewrite H).	2.90289592743	2309
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	synth with cache (only 1: apply subc_spec).	0.0115580558777	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	synth with cache (only 1: apply sub_spec).	0.016891002655	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0119121074677	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	2.12	synth with cache (only 1: unfold eqm; only 1: now intros ->).	0.102087020874	104
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0456562042236	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	1.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.0561158657074	4
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	synth with cache (only 1: trivial).	0.011950969696	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.4.5	synth with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: apply negb_involutive).	0.164746999741	43
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0177748203278	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0198628902435	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	1.0.1.0	synth with cache (only 1: apply bit_ext; only 1: intros b; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.0602781772614	28
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	1.0.2.0	synth with cache (only 1: apply bit_ext; only 1: intros b; only 1: rewrite lor_spec, bit_0; only 1: apply orb_false_r).	0.0599439144135	26
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	5.5.0	synth with cache (only 1: intros A op H p; only 1: intros l2; only 1: firstorder).	0.752358913422	367
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.0	synth with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).	0.0155730247498	2
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	13.4	synth with cache (only 1: intros a b; only 1: ring).	2.3718059063	1567
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	10.4.0.0	synth with cache (only 1: intros; only 1: zify; only 1: Morphisms.f_equiv; only 1: ring).	0.775424003601	524
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	13.4.6	synth with cache (only 1: zify; only 1: intros ? v2; only 1: apply N.eqb_eq).	3.27684593201	4421
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	7.0	synth with cache (only 1: zify; only 1: trivial).	0.121315002441	15
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0	synth with cache (only 1: assumption).	0.0631401538849	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.0.1.0.0	synth with cache (only 1: intros a; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.158226013184	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	0.0.0.15.0.3	synth with cache (only 1: intros a; only 1: zify; only 1: Z.nzsimpl; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	16.8441329002	4472
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	2.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: trivial).	0.722436904907	26
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.0137400627136	3
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0119700431824	2
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.00834202766418	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal'	40
Coq.Numbers.HexadecimalQ.of_to	40
Coq.Numbers.HexadecimalQ.dnorm_spec_i	40
Coq.Numbers.HexadecimalQ.dnorm_spec_f	40
Coq.Numbers.HexadecimalQ.dnorm_spec_e	40
Coq.Numbers.HexadecimalQ.dnorm_involutive	40
Coq.Numbers.HexadecimalQ.IZ_to_Z_IZ_of_Z	40	0.0.0.0.8	synth with cache (only 1: destruct z; only 1: now simpl; only 1: simpl; only 1: reflexivity; only 1: trivial).	0.199290037155	56
Coq.Numbers.HexadecimalQ.dnorm_i_exact	40
Coq.Numbers.HexadecimalQ.dnorm_i_exact'	40
Coq.Numbers.HexadecimalQ.to_of	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalQ.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalQ.of_inj	40
Coq.Numbers.HexadecimalQ.of_iff	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| [| n]]; only 1: split; only 1: constructor; only 1: now exists 0; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1 as [| ? H0]; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1 as [| ? H0]; only 1: now inversion_clear H0).	0.975078821182	484
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	1.5.0	synth with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.066831111908	12
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	1.1.10.2	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	2.97402906418	2105
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	1.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.180438995361	42
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.0.0.0.1.0.10.4.0	synth with cache (only 1: intros n; only 1: cases ltac:(n); only 1: auto with relations; only 1: intro n; only 1: right; only 1: induct ltac:(n); only 1: apply lt_succ_diag_r; only 1: intros n H; only 1: now apply lt_lt_succ_r).	4.6094019413	3487
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.3.0.0.0.0.0.6.0.0.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_0_succ).	28.4488549232	15268
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0574090480804	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	0.0.4.1.0.0.5.0	synth with cache (only 1: intro; only 1: cases n; only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: nzsimpl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	5.010668993	1998
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.0.3.0.0.0.2	synth with cache (only 1: intro n; only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	1.75515389442	341
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.4.0.2.3.1.0.2	synth with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intros n IH H; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	13.6242690086	4070
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.0.2.1	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.180990934372	34
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.0.0.1.0.0.8.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	4.68937110901	2172
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	10.0.1.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).	11.7965672016	5274
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	0.0.0.0.0.0.0.0.0.7.0	synth with cache (only 1: intros n m H; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply eq_le_incl; only 1: clear m H; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_trans with (P m); only 1: assumption; only 1: apply le_pred_l).	8.8300011158	3886
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.2.0.0.1.1.0.2	synth with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	3.2124209404	1270
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.3.0.8	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	2.25677013397	1572
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	4.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: nzsimpl; only 1: order).	0.54175901413	254
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.1.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0337469577789	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.0.0.0.0	synth with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.0473539829254	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.0483918190002	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.017303943634	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0186319351196	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.0.0.1.1.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_succ_0; only 1: nzsimpl; only 1: order).	0.595793008804	364
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.1.0.2	synth with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.102988958359	48
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.012971162796	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0120658874512	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.1.0.5.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: intuition; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: apply mul_comm).	2.41570520401	1366
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.0.0.7.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: intuition; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	1.40168595314	904
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.2.5.0.0.13.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: apply mod_le; only 1: auto'; only 1: order).	27.5919470787	25341
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.385231971741	101
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	0.0.0.1.1.0.0.0.1.6.0.0.1	synth with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: rewrite <- div_small_iff; only 1: auto; only 1: auto'; only 1: auto'; only 1: intros Hab; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	13.6818649769	10378
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	0.0.0.1.1.1.0.1.1.0.1.0.1.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: rewrite <- Private_NZDiv.div_small_iff; only 1: rewrite <- (mul_cancel_l _ _ b) by order; only 1: rewrite <- (add_cancel_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: symmetry; only 1: now nzsimpl; only 1: order; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	25.6441380978	14041
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.6.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.0746238231659	31
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0329439640045	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.1.0.1.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.940505981445	425
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0500078201294	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.1.0.7.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: apply neq_0_lt_0; only 1: auto').	0.660468101501	269
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.2.1.0.3	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.569242954254	249
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.0294699668884	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.2.1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	1.40874004364	570
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.1.2.1.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: intuition).	2.0948381424	947
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.4.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0265610218048	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.2.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0636229515076	21
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.4.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: rewrite H1 in H; only 1: now apply H).	0.0371899604797	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.1.0.1.2.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.402537107468	157
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0337958335876	22
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').	0.0383939743042	12
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.1.0.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.278604030609	107
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	2.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: auto').	0.132390975952	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.1.0.0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: apply neq_0_lt_0; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: apply neq_0_lt_0; only 1: auto').	1.83275103569	811
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: auto; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	0.733777046204	238
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0341508388519	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	5.0	synth with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.00963187217712	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.11.0.37.0	synth with cache (only 1: cases n; only 1: auto with relations; only 1: intro n; only 1: right; only 1: now exists n).	2.90971183777	6099
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	2.7.0.0.0.0.3	synth with cache (only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: pose proof (pred_succ n) as EQ'; only 1: now f_equiv).	0.890576124191	905
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	2.11.0.0.0.6.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: intro n; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: intro m; only 1: induct ltac:(m); only 1: apply H2; only 1: auto).	13.0555980206	14824
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	0.5.13.2	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: compute; only 1: intros n1 n2 H; only 1: now f_equiv).	15.27977705	3937
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	11.0.1.7.0.11	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros a Ha; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: trivial).	19.4760370255	17026
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	2.1.4.3.2.5.11	synth with cache (only 1: compute; only 1: intros a b c d ? ?; only 1: f_equiv; only 1: auto with *; only 1: intros x1 x2 H1 x3 x4 H2; only 1: now rewrite H2; only 1: assumption).	28.2548449039	7673
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	1.1.4.0	synth with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.0607130527496	10
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.48.2.27	synth with cache (only 1: apply PeanoNat.Nat.eqb_eq; only 1: unfold even; only 1: compute; only 1: now rewrite recursion_0).	28.5787398815	10189
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	0.0.81	synth with cache (only 1: compute; only 1: rewrite recursion_0; only 1: auto).	2.50876998901	3701
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.157.18	synth with cache (only 1: symmetry; only 1: compute; only 1: now rewrite recursion_0).	12.6689999104	28548
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.3.3.1	synth with cache (only 1: intros a b Ha Hb; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: order).	0.949006080627	154
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.083370923996	15
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	2.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).	0.0431020259857	12
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	2.82567691803	970
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.0.0.0.0.0.2	synth with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.072821855545	28
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.10	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.357917070389	173
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.5.2.0.0.4.2	synth with cache (only 1: destr_bool; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	1.8833220005	1306
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0563399791718	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	0.11.0.0.8	synth with cache (only 1: intros a b Hb; only 1: apply eq_true_iff_eq; only 1: rewrite 2!testbit_true; only 1: rewrite Private_NZPow.pow_add_r, mul_comm; only 1: now rewrite div_div by order_nz).	36.7408399582	16390
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0176918506622	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	0.1.1.5.2.2.36.94	synth with cache (only 1: compute; only 1: split; only 1: auto; only 1: auto; only 1: red; only 1: intros; only 1: setoid_rewrite H; only 1: trivial).	7.68374013901	13883
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	12.1.4	synth with cache (only 1: repeat red; only 1: intros n m p Hm; only 1: now f_equiv).	6.75901198387	1674
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.1.0.14.9	synth with cache (only 1: intro m; only 1: symmetry; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	15.3807878494	9066
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0475261211395	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.2.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).	0.0591979026794	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.9	synth with cache (only 1: intros a Ha; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	3.23610901833	932
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0734560489655	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.118914842606	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0402991771698	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).	0.130079984665	28
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0386319160461	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.0.6.2	synth with cache (only 1: intro H; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.482489824295	184
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	2.1.0.3	synth with cache (only 1: intro H; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.247683048248	60
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.2.1	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0833878517151	27
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0401978492737	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	0.1.0.1.0.0.0.0.0.0.1.1.2	synth with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: auto; only 1: order_nz).	7.56387901306	2998
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.0.1.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_r).	0.185057878494	23
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0464680194855	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	1.0.5.0	synth with cache (only 1: intros a n; only 1: unfold lnot; only 1: bitwise as m; only 1: now destruct a.[m]).	0.595260858536	120
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.7.0	synth with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	1.38514399529	384
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.0.0.0.0.13.1.0	synth with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: intuition; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.433500051498	759
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	4.2.1	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.139468193054	45
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	1.6.3.5.5	synth with cache (only 1: intros a Ha; only 1: rewrite <- sqrt_lt_square; only 1: now nzsimpl; only 1: apply le_0_l; only 1: apply le_0_l).	33.3957769871	15826
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	2.1.0.0.1.1.0.6	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	8.31976604462	2857
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	3.2.0.0.0.0.1	synth with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: now nzsimpl).	2.59165287018	625
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	0.0.0.2.4.1.0.0.1.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	7.61928892136	2736
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0	synth with cache (only 1: cases n; only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0409188270569	8
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.3.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	1.0652680397	443
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.4.0	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.252043962479	69
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	2.1.1.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.521199941635	92
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	2.1.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.272024869919	64
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	0.484607934952	23
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0672459602356	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	3.0.12.0	synth with cache (only 1: intros; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	3.64248490334	752
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	5.9346549511	826
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.0.0.0.0.0.0.0.0.6.0.3.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: now rewrite <- H).	18.5411250591	6855
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.2.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: order; only 1: trivial).	0.0653622150421	8
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	2.0.0.2.0.0.0	synth with cache (only 1: intros a b c d ? ?; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.555840015411	131
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.0.0.0.1.0.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.0844869613647	9
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	3.21279215813	713
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.4.0.0.0.3.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	6.33283805847	1445
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.2	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	6.89470386505	1373
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: order; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: order).	7.21251702309	1807
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	2.0.0.1.2.0.0.0.2	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_l).	7.09652400017	1759
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_r).	2.14754605293	413
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	1.0.0.8.1.0.0.7.2	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	33.7044110298	8998
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	7.1	synth with cache (only 1: symmetry; only 1: split).	1.04438018799	14
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.180473089218	15
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	0.2.0.1.23.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: easy).	16.3934738636	4088
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).	0.0179049968719	12
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.0.15.0.3.0.0	synth with cache (only 1: intro n; only 1: nzinduct n; only 1: unfold lcm; only 1: now nzsimpl; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).	17.8999009132	15729
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0306940078735	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.6.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	1.45771694183	730
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.127880096436	50
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_refl).	0.564647912979	225
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.3.4.0	synth with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: trivial using divide_lcm_r).	0.304650783539	146
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.HexadecimalZ.of_to	40
Coq.Numbers.HexadecimalZ.to_of	40
Coq.Numbers.HexadecimalZ.to_int_inj	40
Coq.Numbers.HexadecimalZ.to_int_surj	40
Coq.Numbers.HexadecimalZ.of_int_norm	40
Coq.Numbers.HexadecimalZ.of_inj	40
Coq.Numbers.HexadecimalZ.of_iff	40
Coq.Numbers.HexadecimalZ.of_hex_uint_iter_D0	40
Coq.Numbers.HexadecimalZ.of_hex_int_iter_D0	40
Coq.Numbers.HexadecimalZ.double_norm	40
Coq.Numbers.HexadecimalZ.of_hex_int_double	40
Coq.Numbers.HexadecimalZ.double_to_hex_int	40
Coq.Numbers.HexadecimalZ.nztail_to_hex_uint_pow16	40
Coq.Numbers.HexadecimalN.Unsigned.of_to	40
Coq.Numbers.HexadecimalN.Unsigned.to_of	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalN.Unsigned.of_uint_norm	40	0	synth with cache (only 1: now induction d).	0.0694010257721	1
Coq.Numbers.HexadecimalN.Unsigned.of_inj	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- !HexadecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0850698947906	3
Coq.Numbers.HexadecimalN.Unsigned.of_iff	40	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- HexadecimalPos.Unsigned.of_uint_norm, E; only 1: apply HexadecimalPos.Unsigned.of_uint_norm).	0.165268182755	13
Coq.Numbers.HexadecimalN.Signed.of_to	40
Coq.Numbers.HexadecimalN.Signed.to_of	40
Coq.Numbers.HexadecimalN.Signed.to_int_inj	40
Coq.Numbers.HexadecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalN.Signed.of_int_norm	40	4.4.1	synth with cache (only 1: destruct d; only 1: now induction d; only 1: now induction d).	0.643296003342	132
Coq.Numbers.HexadecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalFacts.of_list_to_list	40
Coq.Numbers.HexadecimalFacts.to_list_of_list	40
Coq.Numbers.HexadecimalFacts.to_list_inj	40
Coq.Numbers.HexadecimalFacts.of_list_inj	40
Coq.Numbers.HexadecimalFacts.nb_digits_spec	40
Coq.Numbers.HexadecimalFacts.nzhead_spec	40
Coq.Numbers.HexadecimalFacts.unorm_spec	40
Coq.Numbers.HexadecimalFacts.revapp_spec	40
Coq.Numbers.HexadecimalFacts.rev_spec	40
Coq.Numbers.HexadecimalFacts.app_spec	40
Coq.Numbers.HexadecimalFacts.nztail_spec	40
Coq.Numbers.HexadecimalFacts.del_head_spec_0	40	5	synth with cache (only 1: auto with zarith).	0.0142140388489	6
Coq.Numbers.HexadecimalFacts.del_head_spec_small	40
Coq.Numbers.HexadecimalFacts.del_head_spec_large	40
Coq.Numbers.HexadecimalFacts.nb_digits_0	40
Coq.Numbers.HexadecimalFacts.nb_digits_n0	40	7.0.21.0.4.0.1	synth with cache (only 1: revert d; only 1: intro n; only 1: intro H; only 1: intro H1; only 1: intuition; only 1: rewrite H1 in H; only 1: auto).	12.3264651299	17539
Coq.Numbers.HexadecimalFacts.nb_digits_iter_D0	40	2.4.1.12	synth with cache (only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: simpl; only 1: auto with arith).	0.593894958496	452
Coq.Numbers.HexadecimalFacts.length_lnzhead	40
Coq.Numbers.HexadecimalFacts.nb_digits_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_nzhead	40
Coq.Numbers.HexadecimalFacts.nb_digits_unorm	40
Coq.Numbers.HexadecimalFacts.nb_digits_rev	40
Coq.Numbers.HexadecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.HexadecimalFacts.unorm_D0	40	5	synth with cache (only 1: auto).	0.0114140510559	6
Coq.Numbers.HexadecimalFacts.app_nil_l	40	0	synth with cache (only 1: now simpl).	0.0112600326538	1
Coq.Numbers.HexadecimalFacts.app_nil_r	40
Coq.Numbers.HexadecimalFacts.abs_app_int	40
Coq.Numbers.HexadecimalFacts.abs_norm	40
Coq.Numbers.HexadecimalFacts.iter_D0_nzhead	40
Coq.Numbers.HexadecimalFacts.iter_D0_unorm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_l	40
Coq.Numbers.HexadecimalFacts.nzhead_app_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_zero	40
Coq.Numbers.HexadecimalFacts.app_int_nil_r	40
Coq.Numbers.HexadecimalFacts.unorm_app_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_r	40
Coq.Numbers.HexadecimalFacts.norm_app_int	40
Coq.Numbers.HexadecimalFacts.del_head_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_tail_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_head_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int	40
Coq.Numbers.HexadecimalFacts.app_del_tail_head	40
Coq.Numbers.HexadecimalFacts.app_int_del_tail_head	40
Coq.Numbers.HexadecimalFacts.del_head_app_int_exact	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp_0	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp	40
Coq.Numbers.HexadecimalFacts.nzhead_rev	40
Coq.Numbers.HexadecimalFacts.rev_rev	40
Coq.Numbers.HexadecimalFacts.rev_nztail_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_D0	40	0	synth with cache (only 1: reflexivity).	0.0101079940796	1
Coq.Numbers.HexadecimalFacts.nzhead_iter_D0	40	5.0.5.17	synth with cache (only 1: revert n; only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: trivial).	1.13432407379	1106
Coq.Numbers.HexadecimalFacts.revapp_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_lnorm_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_nonzero	40
Coq.Numbers.HexadecimalFacts.unorm_0	40
Coq.Numbers.HexadecimalFacts.unorm_nonnil	40
Coq.Numbers.HexadecimalFacts.unorm_iter_D0	40	0	synth with cache (only 1: now induction n).	0.0120031833649	1
Coq.Numbers.HexadecimalFacts.del_head_nonnil	40
Coq.Numbers.HexadecimalFacts.del_tail_nonnil	40
Coq.Numbers.HexadecimalFacts.nzhead_involutive	40
Coq.Numbers.HexadecimalFacts.nztail_involutive	40
Coq.Numbers.HexadecimalFacts.unorm_involutive	40
Coq.Numbers.HexadecimalFacts.norm_involutive	40
Coq.Numbers.HexadecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.HexadecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.HexadecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_app_unorm	40
Coq.Numbers.HexadecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.DecimalZ.of_uint_iter_D0	40
Coq.Numbers.DecimalZ.of_int_iter_D0	40
Coq.Numbers.DecimalZ.nztail_to_uint_pow10	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.3.6	synth with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.148802042007	64
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.0.0.5	synth with cache (only 1: unfold sqrt_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: rewrite <- le_succ_l; only 1: order; only 1: order).	0.263746023178	181
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.3.1.0.0.0.0	synth with cache (only 1: intros a; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.349730968475	219
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0175268650055	5
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	1.43126893044	684
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.1.0.3.2.18.0.16.8	synth with cache (only 1: intro n; only 1: rewrite one_succ; only 1: intro H; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	16.4852440357	17192
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: order).	0.129009962082	42
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.3.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.273408174515	93
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.5.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	0.635772943497	404
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	5.0.1.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.1000020504	62
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.2.0	synth with cache (only 1: intros a ?; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0502820014954	30
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.1.0.0.9.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: split; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	32.9340360165	17739
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.0.0.0.1.2.4	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.532656908035	230
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0486319065094	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0506198406219	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0204360485077	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.1.0.1	synth with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.118315935135	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0647120475769	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.172420978546	24
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.0.0.0.4.0.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct n; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	14.7710340023	3722
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.0.0.4.6.0	synth with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.7292470932	1376
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0709290504456	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.2	synth with cache (only 1: Bool.destr_bool; only 1: now nzsimpl').	0.0285320281982	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.9.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.632495880127	585
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	9.0.0.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).	0.74974322319	228
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0199580192566	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	4.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.0169699192047	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.0.4.0	synth with cache (only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now rewrite H2 in H1).	0.0679030418396	55
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0	synth with cache (only 1: order).	0.00736594200134	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.4	synth with cache (only 1: intros x y z H0 H1; only 1: now rewrite <- H1).	0.106214046478	52
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0	synth with cache (only 1: order).	0.00753712654114	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0	synth with cache (only 1: order).	0.00690889358521	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0	synth with cache (only 1: order).	0.00890111923218	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.0.0.2.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: transitivity y; only 1: auto; only 1: auto).	0.0675699710846	38
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	0.0.7.3.2.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: rewrite lt_eq_cases; only 1: intuition).	11.8794751167	4733
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.4.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0151989459991	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	2.2.3.1.0	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).	0.324896812439	274
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.3.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0178971290588	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6.0	synth with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: nzinduct m n; only 1: split; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro H; only 1: false_hyp H nle_succ_diag_l; only 1: intro m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).	36.8572518826	23237
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.4.8.0.41	synth with cache (only 1: pose proof (@partial_order_equivalence _ _ _ _ _) as poe; only 1: do 3 red in poe; only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	1.48562002182	1947
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.2.1.1.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite one_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0249168872833	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.2.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0197560787201	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.2.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.13441491127	38
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.5.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: rewrite lt_eq_cases; only 1: intuition order; only 1: intuition order).	0.430222034454	315
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	7.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.222800016403	32
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.5.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0499410629272	19
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0	synth with cache (only 1: intuition order).	0.0102770328522	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.00964403152466	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0213479995728	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.1.4.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.186351060867	81
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0100681781769	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0099561214447	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	1.0.1.4.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.30220413208	176
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.2.0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intro H; only 1: intuition order).	0.223733901978	51
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	0.0673229694366	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	1.1.18.1	synth with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).	6.80296707153	8154
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	0.2.0.20	synth with cache (only 1: compute; only 1: intros IH m H1 H2; only 1: intro n; only 1: intuition order).	6.93586397171	7060
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	3.3.1.23	synth with cache (only 1: compute; only 1: intros IH m H1 H2; only 1: intro n; only 1: intuition order).	10.5265889168	8771
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	1.0.0.12.13	synth with cache (only 1: compute; only 1: PeanoNat.Nat.induct n; only 1: firstorder; only 1: intros x y z H0 H1; only 1: auto).	11.7058990002	9335
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	14	synth with cache (only 1: easy).	0.085088968277	153
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	1.2.0.0.0.0	synth with cache (only 1: intro n; only 1: revert n; only 1: intro n; only 1: revert n; only 1: fix le_div2 1; only 1: solve_proper).	0.0710129737854	39
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	0.0.11.2.0.0.0.0.0	synth with cache (only 1: intro n; only 1: PeanoNat.Nat.cases ltac:(n); only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: simpl; only 1: intro H; only 1: now rewrite PeanoNat.Nat.pred_succ).	3.8334980011	5128
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.0.9.3.1	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: apply lt_succ_diag_r; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	0.803510189056	700
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	10.19	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	17.3888258934	12931
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	1.0.0.0.3.9.0.2.1.6	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: intro m; only 1: PeanoNat.Nat.nzsimpl; only 1: now rewrite PeanoNat.Nat.add_0_l; only 1: intro m; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: rewrite <- IHn; only 1: reflexivity).	25.3797168732	18230
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	5.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0407028198242	12
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	0.2.0.2.2.1.0.1.2	synth with cache (only 1: intros a b Ha Hb; only 1: apply le_ind with (4 := Hb); only 1: solve_proper; only 1: nzsimpl; only 1: order'; only 1: intros; only 1: nzsimpl; only 1: now apply mul_pos_pos; only 1: trivial).	19.1781699657	5763
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	0.7.22	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: exists n; only 1: now nzsimpl').	6.91105508804	4525
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	1.3.8	synth with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	6.12733006477	1072
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.0.17.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	5.31621599197	1930
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.8.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	11.2065830231	4579
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.0.22.0	synth with cache (only 1: intros n m; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	20.6889739037	4431
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.11.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.22786283493	141
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	1.0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	0.540651082993	103
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0587909221649	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.128395080566	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0749759674072	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0597319602966	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	1.6.0.5.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	31.4305288792	10141
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.0.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.0723230838776	10
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.122287988663	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.36308789253	715
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0236489772797	13
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.5.0.0	synth with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0456521511078	17
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.0729329586029	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0724899768829	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	4.3.2.2.1.0.7.3	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro m; only 1: rewrite <- le_succ_l; only 1: nzsimpl; only 1: now rewrite lt_succ_r).	30.3423650265	12867
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0698421001434	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0235769748688	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.124653100967	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	2.0.0.0.4.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: split; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	5.88991904259	1199
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.3.0.0	synth with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0883128643036	9
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0458340644836	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.1.0.9.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	13.9733760357	3539
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.2.7.2.0.2	synth with cache (only 1: apply log2_unique; only 1: order; only 1: split; only 1: now nzsimpl; only 1: nzsimpl; only 1: order'; only 1: order).	3.19075584412	1154
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	2.1.3.0.1.0.0.2.0	synth with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order; only 1: nzsimpl; only 1: order'; only 1: now nzsimpl).	2.52431201935	1166
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.2.5.7	synth with cache (only 1: intro n; only 1: intros H; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	6.83027100563	1090
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.7.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.90209197998	245
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.2.4.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	2.41320896149	1000
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0215139389038	2
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	1.0.0.1.0.1.22.0.0.3	synth with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order'; only 1: rewrite <- (pow_1_r 2); only 1: intros; only 1: rewrite log2_pred_pow2; only 1: apply lt_succ_pred with 0; only 1: order_pos; only 1: order_pos; only 1: order').	30.0627541542	15930
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	8	synth with cache (only 1: now symmetry).	0.101454973221	70
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	6.0	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).	0.0159020423889	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.3.13.0.2	synth with cache (only 1: intro y0; only 1: intros; only 1: transitivity y0; only 1: symmetry; only 1: auto; only 1: auto).	1.43969798088	2700
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: symmetry; only 1: now f_equiv).	0.021488904953	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	5.23110890388	1574
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.4.0.4	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	2.42962694168	1159
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.1.0.0.5.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	3.39590597153	1462
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0712261199951	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0222899913788	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	3.0.10.0.0.0	synth with cache (only 1: intros n m Hn; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply mul_le_mono_pos_l; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).	13.7855041027	5570
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	3.7.3	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: intuition order).	4.43868207932	2915
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0206570625305	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	13.18	synth with cache (only 1: intros Az RS LS n; only 1: now apply mul_lt_mono_nonneg).	7.76722478867	8229
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	1.0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0201590061188	8
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Numbers.HexadecimalR.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalR.of_to	40
Coq.Numbers.HexadecimalR.to_of	40
Coq.Numbers.HexadecimalR.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalR.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalR.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalR.of_inj	40	0.0.1	synth with cache (only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !HexadecimalQ.to_of, H).	0.0276439189911	4
Coq.Numbers.HexadecimalR.of_iff	40	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !to_of, H; only 1: intros E; only 1: rewrite <- HexadecimalQ.of_hexadecimal_dnorm, E; only 1: apply HexadecimalQ.of_hexadecimal_dnorm).	0.0531339645386	13
Coq.Numbers.HexadecimalString.uint_of_char_spec	40
Coq.Numbers.HexadecimalString.NilEmpty.usu	40
Coq.Numbers.HexadecimalString.NilEmpty.sus	40
Coq.Numbers.HexadecimalString.NilEmpty.isi	40
Coq.Numbers.HexadecimalString.NilEmpty.sis	40
Coq.Numbers.HexadecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.HexadecimalString.NilZero.sus	40
Coq.Numbers.HexadecimalString.NilZero.usu	40
Coq.Numbers.HexadecimalString.NilZero.usu_nil	40	3	synth with cache (only 1: reflexivity).	0.046905040741	4
Coq.Numbers.HexadecimalString.NilZero.usu_gen	40
Coq.Numbers.HexadecimalString.NilZero.isi	40
Coq.Numbers.HexadecimalString.NilZero.isi_posnil	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0574789047241	2
Coq.Numbers.HexadecimalString.NilZero.isi_negnil	40	2.0	synth with cache (only 1: simpl; only 1: auto).	0.0571069717407	4
Coq.Numbers.HexadecimalString.NilZero.sis	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal	40
Coq.Numbers.DecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal'	40
Coq.Numbers.DecimalQ.of_to	40
Coq.Numbers.DecimalQ.dnorm_spec_i	40
Coq.Numbers.DecimalQ.dnorm_spec_f	40
Coq.Numbers.DecimalQ.dnorm_spec_e	40
Coq.Numbers.DecimalQ.dnorm_involutive	40
Coq.Numbers.DecimalQ.IZ_to_Z_IZ_of_Z	40	0.0.0.0.5	synth with cache (only 1: destruct z; only 1: now simpl; only 1: simpl; only 1: reflexivity; only 1: trivial).	0.150422811508	10
Coq.Numbers.DecimalQ.dnorm_i_exact	40
Coq.Numbers.DecimalQ.dnorm_i_exact'	40
Coq.Numbers.DecimalQ.to_of	40
Coq.Numbers.DecimalQ.to_decimal_inj	40
Coq.Numbers.DecimalQ.to_decimal_surj	40
Coq.Numbers.DecimalQ.of_decimal_dnorm	40
Coq.Numbers.DecimalQ.of_inj	40
Coq.Numbers.DecimalQ.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_eqn	40	25	synth with cache (only 1: now induction d).	1.79053401947	503
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_simpl	40	2.6.0	synth with cache (only 1: simpl; only 1: unfold N.succ, N.add; only 1: now destruct n).	1.97228288651	148
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_succ_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_to	40
Coq.Numbers.HexadecimalPos.Unsigned.succ_double_alt	40	0	synth with cache (only 1: now induction d).	0.0731179714203	1
Coq.Numbers.HexadecimalPos.Unsigned.double_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_S	40	1	synth with cache (only 1: trivial).	0.054566860199	2
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_0	40	1	synth with cache (only 1: auto with arith).	0.0562150478363	2
Coq.Numbers.HexadecimalPos.Unsigned.to_lhex_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.107855081558	3
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_norm	40	1	synth with cache (only 1: now induction d).	0.0794928073883	2
Coq.Numbers.HexadecimalPos.Unsigned.of_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.nztail_to_hex_uint	40
Coq.Numbers.HexadecimalPos.Unsigned.double_unorm	40
Coq.Numbers.HexadecimalPos.Unsigned.double_nzhead	40
Coq.Numbers.HexadecimalPos.Unsigned.of_hex_uint_double	40
Coq.Numbers.HexadecimalPos.Signed.of_to	40
Coq.Numbers.HexadecimalPos.Signed.to_of	40
Coq.Numbers.HexadecimalPos.Signed.to_int_inj	40
Coq.Numbers.HexadecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalPos.Signed.of_int_norm	40
Coq.Numbers.HexadecimalPos.Signed.of_inj_pos	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.011638879776	2
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.1.0	synth with cache (only 1: intros; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: auto).	0.0142428874969	4
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0105621814728	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.0100810527802	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.0.3.0.0	synth with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: intuition; only 1: intuition).	0.0557498931885	28
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.2.1.0	synth with cache (only 1: intros x y; only 1: generalize (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition).	0.0548250675201	16
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	3	synth with cache (only 1: solve_proper).	0.304576873779	23
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	3.0.6.19	synth with cache (only 1: intro p; only 1: fix sqrtrem_spec 1; only 1: intro q; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	9.61875200272	8431
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.0.1	synth with cache (only 1: intros n m p; only 1: intros; only 1: now apply Pos.lt_trans with m).	0.0629999637604	4
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	0.6	synth with cache (only 1: intros n m LE; only 1: Nat.order).	0.0857300758362	29
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.1.0	synth with cache (only 1: intros n m p; only 1: intros; only 1: now transitivity m).	0.556331157684	52
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.0410490036011	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	13.22.1.2	synth with cache (only 1: intros; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: Pos.Private_Tac.order || (right; Pos.Private_Tac.order) || (left; Pos.Private_Tac.order)).	11.7661919594	12695
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	3.10	synth with cache (only 1: compute; only 1: now split).	0.204082012177	154
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	17.2.1.1.9	synth with cache (only 1: intro n; only 1: simple destruct 1; only 1: constructor; only 1: auto with ordered_type; only 1: intuition).	17.171544075	13301
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	2.3.24	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: trivial).	24.5672380924	29873
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0514788627625	1
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_lt_nat	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_gt	40	10.8.35	synth with cache (only 1: symmetry; only 1: symmetry; only 1: now apply N.gt_lt).	1.28526091576	1802
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	10.1.1.13.1	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H0; only 1: auto; only 1: Nat.order').	2.94290113449	2323
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_eq	40	2	synth with cache (only 1: now apply Ascii_as_OT.cmp_eq).	0.0400800704956	3
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	2.2	synth with cache (only 1: intros A P; only 1: reflexivity).	0.072163105011	41
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	9.0	synth with cache (only 1: intros n; only 1: easy).	0.0697989463806	48
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	4.6.15	synth with cache (only 1: intros x y; only 1: compute; only 1: intuition auto; BinPos.Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	4.52244901657	2438
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	3.23.0.2.19	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with relations; only 1: intros x' x'' Hx' Hx''; only 1: eauto).	6.15918707848	16951
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.0.0.0.0.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).	0.0633590221405	12
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	2.3.2	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.0871849060059	25
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.0321600437164	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	synth with cache (only 1: order).	0.0386061668396	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.0345740318298	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	synth with cache (only 1: order).	0.0344250202179	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	synth with cache (only 1: order).	0.0369830131531	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.0310530662537	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0286681652069	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	synth with cache (only 1: order).	0.0333158969879	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.030385017395	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	synth with cache (only 1: order).	0.0292508602142	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.0284950733185	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0295779705048	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.194586992264	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: order).	0.776564836502	156
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	1.85809397697	405
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0965650081635	3
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	5.0.0.0.0.3.1	synth with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intuition; only 1: firstorder; only 1: subst; only 1: eauto with *).	3.99966192245	1022
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	1.8	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	1.50966501236	96
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	1.0.1.5.2.0.7	synth with cache (only 1: intros [| a] b; only 1: auto; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: auto with ordered_type; only 1: constructor; only 1: order).	8.1363799572	2933
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	2.0.0.2.0.5	synth with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: constructor; only 1: intuition).	2.72779607773	484
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	9.7.0.11	synth with cache (only 1: induction l as [| a l IHl]; only 1: intuition; only 1: intros HP HQ; only 1: intuition).	16.2494859695	9008
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.0.7	synth with cache (only 1: intros; only 1: induction H; only 1: assumption).	0.0818469524384	28
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.2	synth with cache (only 1: intro l'; only 1: auto).	0.0359511375427	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.025416135788	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	1.0	synth with cache (only 1: intros [H1 H2]; only 1: auto with ordered_type).	0.0360851287842	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.0247061252594	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	3.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto using OrderTac.eq_sym).	0.0528531074524	11
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	4.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros x y H; only 1: intuition).	0.0601918697357	8
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	2.8.3.21.9	synth with cache (only 1: intro l; only 1: destruct l; only 1: unfold eqk, eqke; only 1: destruct e'; only 1: order).	35.3766579628	30952
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.0350301265717	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0369839668274	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	1.5.5.2.0.0	synth with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intro l; only 1: intros n IH; only 1: intros (H, _); only 1: order).	6.34807610512	2534
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	0.0.0.23.0.0.6.0.113	synth with cache (only 1: constructor; only 1: auto with ordered_type; only 1: repeat red; only 1: unfold eqk, eqke; only 1: intuition; only 1: intros l l' x y; only 1: intros; only 1: red; only 1: eauto with *).	16.974255085	18527
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0791430473328	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.2.2.3.1	synth with cache (only 1: split; only 1: compute; only 1: intros a H; only 1: order; only 1: eauto with ordered_type).	0.234718084335	97
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0425050258636	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0359702110291	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0358140468597	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.4.5.0.2.1	synth with cache (only 1: intro l; only 1: intros H; only 1: unfold eqk, ltk; only 1: do 2 rewrite InA_alt; only 1: intuition; only 1: firstorder).	3.54573512077	1077
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	0.2.4.7.2	synth with cache (only 1: intuition; only 1: induction l; only 1: eauto with *; only 1: rewrite H; only 1: intuition).	2.78885507584	889
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	0.0.4.0.8.4	synth with cache (only 1: unfold eqk, ltk; only 1: simple induction l; only 1: constructor; only 1: intros A R1 Sym B R2 f Hf; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	5.31646299362	1598
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.4.0	synth with cache (only 1: inversion_clear 1; only 1: intuition; only 1: eauto with *).	0.0658931732178	7
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.4.0	synth with cache (only 1: inversion 1; only 1: firstorder; only 1: eauto).	0.15616607666	26
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0286378860474	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	21.9847090244	11683
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	1.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	22.7909009457	9510
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.2.0.0.1.0.0.1.2.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	17.6021261215	6411
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	1.0.0.0.2.1.0.0.0.2.3.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: rewrite H; only 1: intro LT; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).	19.4985580444	11996
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	3.0.0.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).	0.0537390708923	23
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	8.4.108.19.53.25	synth with cache (only 1: split; only 1: hnf; only 1: intro p; only 1: iorder; only 1: repeat red; only 1: iorder).	36.5645768642	282787
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.0.0.0.1	synth with cache (only 1: red; only 1: unfold relation_equivalence in *; only 1: unfold predicate_equivalence in *; only 1: compute; only 1: iorder).	0.0254421234131	6
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	2.0	synth with cache (only 1: compute; only 1: order).	0.0405311584473	19
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	14	synth with cache (only 1: iorder).	0.547368049622	412
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.00950217247009	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.1.0.0	synth with cache (only 1: intros x y; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.0607199668884	21
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	1.1.1.0.0	synth with cache (only 1: intros x y; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.0404298305511	8
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	1.1.1.0.0.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.0465950965881	9
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0192339420319	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	2.0	synth with cache (only 1: intro H; only 1: order).	0.0122120380402	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0180568695068	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0171601772308	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0	synth with cache (only 1: order).	0.0093789100647	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.00778007507324	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2.0.4.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply H; only 1: elim (StrictOrder_Irreflexive x); only 1: order).	0.873212099075	12
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.00865793228149	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2	synth with cache (only 1: order).	0.112306833267	36
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	8.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.188993930817	72
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.00989603996277	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1	synth with cache (only 1: order).	0.155954122543	74
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.00928807258606	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	synth with cache (only 1: order).	0.00768804550171	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0	synth with cache (only 1: intro H; only 1: order).	0.0110039710999	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.00763893127441	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.00734496116638	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.00740313529968	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.00736498832703	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	1.1.0.1.0.0.8.1	synth with cache (only 1: split; only 1: split; only 1: order; only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).	5.05618715286	3792
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0104780197144	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	2.0.0.0.0.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).	0.039008140564	13
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0116560459137	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0143239498138	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	1.1.0.2.2.4	synth with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1; only 1: constructor; only 1: trivial; only 1: trivial).	4.27003979683	1463
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.0.0.0.1.5	synth with cache (only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.468571901321	135
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	1.7.0.5.1	synth with cache (only 1: symmetry; only 1: case ltb_spec0; only 1: destr_bool; only 1: intuition; only 1: intuition).	2.70336580276	1634
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.9	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.304305791855	101
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	0.2.8.0.8	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: destr_bool; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	1.85548901558	1533
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	4.1.20	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: reflexivity).	1.35798311234	1265
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.0.0.1.1.0.0.15.0.3	synth with cache (only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now destruct compare; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	7.62117600441	5563
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1.0.5	synth with cache (only 1: intros l l1 l2; only 1: intros Hincl HE; only 1: subst; only 1: auto).	0.0420331954956	29
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	5.0.2.0.0.3.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intuition; only 1: firstorder; only 1: subst; only 1: eauto with *).	2.33056092262	1488
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.7	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.297325849533	36
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	2.0.2	synth with cache (only 1: intros x y z H; only 1: rewrite <- H; only 1: auto).	0.0369329452515	16
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	2.0.0.2.0.4	synth with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: constructor; only 1: intuition).	1.38141894341	405
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	9.7.0.11	synth with cache (only 1: induction l as [| a l IHl]; only 1: intuition; only 1: intros HP HQ; only 1: intuition).	7.73028492928	7722
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	5	synth with cache (only 1: solve_proper).	0.0753769874573	44
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	5.0	synth with cache (only 1: unfold eqk, ltk; only 1: solve_proper).	0.823520183563	13
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.0	synth with cache (only 1: intros x x' Hx l l' Hl; only 1: now compute).	0.0186879634857	2
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0277359485626	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0240859985352	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	0.8.0.1.7.4.3	synth with cache (only 1: intros; only 1: inversion H; only 1: destruct p as [a0 b]; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: auto; only 1: eauto).	10.0704660416	5853
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	synth with cache (only 1: firstorder).	0.00985717773438	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	2	synth with cache (only 1: auto).	0.0120007991791	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	synth with cache (only 1: reflexivity).	0.00823998451233	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	25.3	synth with cache (only 1: intros H; only 1: firstorder).	0.426091909409	960
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	synth with cache (only 1: now destruct 1).	0.0102028846741	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	9	synth with cache (only 1: reflexivity).	0.0117721557617	10
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	1	synth with cache (only 1: reflexivity).	0.00758790969849	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	5.6	synth with cache (only 1: intros; only 1: auto with arith).	0.0408308506012	58
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.12.3.19	synth with cache (only 1: revert m; only 1: intro l'; only 1: do 2 rewrite InA_alt; only 1: firstorder).	5.47647118568	7855
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.2.6.0.8.1.0	synth with cache (only 1: induction 1; only 1: exists y; only 1: split; only 1: auto; only 1: constructor; only 1: destruct p as [a0 b]; only 1: reflexivity; only 1: firstorder).	2.28827095032	2009
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.1.0.4.4.6.9.0.4	synth with cache (only 1: intros x; only 1: induction 1; only 1: constructor; only 1: destruct (split (A:=l)); only 1: induction l as [| a l IHl]; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder  auto with crelations; only 1: firstorder).	2.77391695976	4220
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	1.3.4.0	synth with cache (only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: inversion 1).	0.190741062164	108
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	5.4.1	synth with cache (only 1: firstorder  auto with crelations; only 1: rewrite <- H; only 1: eauto).	0.256261110306	135
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	synth with cache (only 1: now intros <-).	0.0167238712311	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	5.5.13.4.1	synth with cache (only 1: unfold In, MapsTo; only 1: firstorder  auto with crelations; only 1: invlist InA; only 1: eauto; only 1: eauto).	21.5751891136	16406
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.7.14.4	synth with cache (only 1: intros H; only 1: invlist InA; only 1: now compute; only 1: auto).	4.46053290367	3345
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.0.11.1	synth with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder  auto with crelations; only 1: eauto).	0.846217870712	646
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40	2.23.7.12	synth with cache (only 1: intro l; only 1: induction l; only 1: fix odd_spec 1; only 1: auto).	28.3675689697	39495
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	7	synth with cache (only 1: firstorder).	0.0538499355316	45
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	4.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: auto).	0.0136749744415	8
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.00869798660278	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: auto).	0.0141088962555	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	3.0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros n m H; only 1: intuition).	0.0315330028534	6
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	6.9	synth with cache (only 1: intros; only 1: eauto).	0.975176095963	817
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.4.0.0.3	synth with cache (only 1: split; only 1: auto; only 1: auto; only 1: intro l; only 1: eauto).	0.0685560703278	69
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0284597873688	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	0.0.1.4.18	synth with cache (only 1: intro l1; only 1: intro l; only 1: do 2 rewrite InA_alt; only 1: destruct 1 as (y, (H1, H2)); only 1: firstorder).	2.01126098633	1707
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.0.0.1.0.0.2.2.3.2	synth with cache (only 1: intro y0; only 1: intros l1 l2; only 1: destruct l2 as [| x2 l2]; only 1: intros n d; only 1: invlist InA; only 1: intros; only 1: rewrite <- H; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: intuition).	2.18958711624	1482
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	10.0.15	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: eauto).	4.85472989082	5264
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	0.4.11.2	synth with cache (only 1: intuition; only 1: invlist InA; only 1: firstorder; only 1: auto using eqke_equiv).	0.798562049866	507
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.2.0.1.11	synth with cache (only 1: intros x y z H; only 1: invlist InA; only 1: compute in H0; only 1: intuition; only 1: intuition).	6.44975280762	2660
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.2.9.1.0	synth with cache (only 1: red; only 1: intros x y z H0 H1; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.910890102386	371
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	1.2	synth with cache (only 1: unfold eq; only 1: decide equality).	0.185558080673	46
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.0.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	26.5866260529	6386
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	0.0.1.0.0.0.0.0.18	synth with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).	1.20404601097	1546
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0330159664154	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.0.2	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	3.56623315811	2457
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	17.1.0.2.0.2.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: red; only 1: auto with *; only 1: red; only 1: auto with *; only 1: intros R R' EQ a a' Ha WF; only 1: order).	32.6371040344	18255
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	201.6	synth with cache (only 1: apply max_r; only 1: order).	6.45497202873	67687
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	2.2.3.11	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.538867950439	527
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.0145859718323	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	3	synth with cache (only 1: solve_max).	0.138805866241	44
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	synth with cache (only 1: solve_max).	0.0199599266052	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	0.12.0.7.1.1	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: right; only 1: order; only 1: left; only 1: order).	28.7748420238	13650
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	3.0.0.0.0.0.0.2.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	14.0582208633	5829
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.2.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.481935024261	188
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.1.0.1.3	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0274679660797	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0140640735626	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.1.0.1.2	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order).	0.028489112854	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0568628311157	15
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	synth with cache (only 1: solve_max).	0.0145418643951	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0530061721802	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0252220630646	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.3	synth with cache (only 1: intuition; only 1: apply max_lub_iff; only 1: solve_max).	0.0440270900726	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.0.0.0.2.0.0.0.3	synth with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).	6.6952381134	3425
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	0.0.0.0.0.1.11	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	11.939357996	5886
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.3	synth with cache (only 1: apply min_l; only 1: order).	0.00987005233765	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	1.2.6.13	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.401714086533	517
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0121998786926	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	7	synth with cache (only 1: solve_min).	0.0782399177551	36
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	synth with cache (only 1: solve_min).	0.0151920318604	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.1.5	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.181689977646	67
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.2.1.0.0.2.1.4	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	18.451540947	8786
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.1.4	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	2.36883997917	844
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	5	synth with cache (only 1: solve_min).	0.0417408943176	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.0141589641571	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	6	synth with cache (only 1: solve_min).	0.0486629009247	23
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.6.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0617549419403	20
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	synth with cache (only 1: solve_min).	0.0132970809937	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0567870140076	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0224478244781	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.3.0.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.0631010532379	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.7	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0573399066925	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.9	synth with cache (only 1: apply min_l; only 1: solve_max).	0.0812041759491	51
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.1.0.1.0.0.0.1.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	3.79408597946	1537
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	0.0.1.0.0.0.0.1.1.1.0.0.1.0.0.1.0	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply max_l; only 1: auto).	18.930795908	15323
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.0.1.1.0.0.0.1.0.1.0.0.1.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	22.5747008324	16923
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	1.1.0.0.0.0.0.0.0.12	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	6.58263587952	6558
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.18	synth with cache (only 1: apply max_mono; only 1: eauto with *).	0.396150112152	468
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.1.17.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	5.91485500336	657
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	2.0.1.2.10	synth with cache (only 1: intros x y z; only 1: apply max_case_strong; only 1: intros; only 1: subst; only 1: auto with sets).	8.18931603432	5171
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.014631986618	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.7	synth with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0615949630737	43
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	1.9.2	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).	1.24283313751	882
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0143690109253	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.9	synth with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.204970121384	130
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	5.1.18.0.4.13.1	synth with cache (only 1: intro x; only 1: intro n; only 1: red; only 1: unfold eq; only 1: inversion 1; only 1: rewrite H; only 1: discriminate).	36.2645061016	54055
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	7.0.2.8.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: unfold eq, lt; only 1: intro m; only 1: decide equality).	5.76350498199	5198
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	1.3.0	synth with cache (only 1: destruct n; only 1: split; only 1: split).	0.0344159603119	7
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0569808483124	5
Coq.ZArith.Znat.positive_N_Z	40	0	synth with cache (only 1: trivial).	0.0253369808197	1
Coq.ZArith.Znat.positive_N_nat	40	0	synth with cache (only 1: reflexivity).	0.0257389545441	1
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0572848320007	5
Coq.ZArith.Znat.Z_N_nat	40	1.0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0714540481567	9
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	0.0.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0616409778595	8
Coq.ZArith.Znat.Zabs_nat_N	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0637328624725	7
Coq.ZArith.Znat.N2Z.id	40	0.1.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0470070838928	6
Coq.ZArith.Znat.N2Z.inj	40	0.2.0.0.0.2.0.0.10	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro; only 1: reflexivity; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: intro H; only 1: f_equal; only 1: now destr_eq H).	3.67840790749	1235
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.2.0.2.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: easy'; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: easy'; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence).	11.9921319485	4839
Coq.ZArith.Znat.N2Z.is_nonneg	40	32	synth with cache (only 1: now destruct n).	0.484606027603	516
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0230760574341	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0201961994171	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.0.0.2.0.0.0.4	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now rewrite <- ?Pos.compare_antisym).	1.98725199699	467
Coq.ZArith.Znat.N2Z.inj_le	40	0	synth with cache (only 1: now destruct n, m).	0.028559923172	1
Coq.ZArith.Znat.N2Z.inj_lt	40	2	synth with cache (only 1: now destruct n, m).	0.776162147522	93
Coq.ZArith.Znat.N2Z.inj_ge	40	4	synth with cache (only 1: now destruct n, m).	0.161818027496	31
Coq.ZArith.Znat.N2Z.inj_gt	40	1	synth with cache (only 1: now destruct n, m).	0.0283789634705	2
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	1.8	synth with cache (only 1: symmetry; only 1: now destruct n, m).	0.0919380187988	22
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.0292479991913	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0465669631958	5
Coq.ZArith.Znat.N2Z.inj_pred_max	40	6.3.14.10	synth with cache (only 1: unfold Z.max, Pos.max; only 1: destruct n; only 1: trivial; only 1: now destruct p).	11.047232151	9622
Coq.ZArith.Znat.N2Z.inj_pred	40
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	22.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	2.51374411583	3532
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0288121700287	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0535659790039	9
Coq.ZArith.Znat.Z2N.id	40	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0379600524902	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	1.0.0.2.2.0	synth with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: now intros ->).	0.954841852188	237
Coq.ZArith.Znat.Z2N.inj_0	40	4	synth with cache (only 1: reflexivity).	0.015762090683	5
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0221848487854	2
Coq.ZArith.Znat.Z2N.inj_neg	40	0	synth with cache (only 1: now destruct 1 || trivial).	0.0162651538849	1
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	0.785488843918	176
Coq.ZArith.Znat.Z2N.inj_succ	40	0.0.3.5.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: intros H; only 1: rewrite <- Pos.add_1_r; only 1: trivial; only 1: now destruct 1 || trivial).	1.48969006538	722
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.3.1.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.239205121994	122
Coq.ZArith.Znat.Z2N.inj_compare	40	0.0	synth with cache (only 1: intros; only 1: now destruct n, m).	0.0335471630096	2
Coq.ZArith.Znat.Z2N.inj_le	40	0.23.1.0	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: unfold N.leb, N.le; only 1: now rewrite <- N2Z.inj_compare, !id).	36.0219039917	21130
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	1	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0271089076996	2
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.048063993454	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	4.0.0.0.1.0.0.0.3.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: easy).	11.0891180038	6769
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.6	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.327472925186	95
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	3.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0308299064636	5
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	synth with cache (only 1: now destruct n).	0.0249979496002	2
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.0202879905701	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.025908946991	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0268559455872	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0216150283813	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	1	synth with cache (only 1: now destruct n).	0.0246140956879	2
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.0.0.0.3	synth with cache (only 1: destruct n as [| n| n]; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || intros _).	0.452997207642	93
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	0.13923406601	10
Coq.ZArith.Znat.Zabs2N.inj_mul	40	9	synth with cache (only 1: now destruct n, m).	0.106117010117	10
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.2.1.3.0	synth with cache (only 1: destruct n; only 1: now N.nzsimpl'; only 1: intros; only 1: now destruct p; only 1: intros; only 1: easy).	0.941483020782	188
Coq.ZArith.Znat.Zabs2N.inj_compare	40	2.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.043301820755	4
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.042172908783	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.038566827774	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0257799625397	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	1	synth with cache (only 1: reflexivity).	0.0178558826447	2
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.0.3.2	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl'; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0938241481781	25
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	synth with cache (only 1: now destruct n).	0.0303289890289	1
Coq.ZArith.Znat.Nat2Z.id	40	0.5.4.13	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	1.948595047	764
Coq.ZArith.Znat.Nat2Z.inj	40	1.4	synth with cache (only 1: intros H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).	0.255768060684	50
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: auto).	0.0385830402374	4
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	6.3.5	synth with cache (only 1: unfold Z.le; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	11.2076051235	3384
Coq.ZArith.Znat.Nat2Z.inj_lt	40	3.7	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	0.894917011261	191
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.0.1.2.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros Hb'; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	2.0561029911	649
Coq.ZArith.Znat.Z2Nat.inj	40	7.1.6	synth with cache (only 1: intros Ha Hb; only 1: intros H; only 1: now rewrite <- (Nat2Z.id n), <- (Nat2Z.id m), H).	4.61948108673	2037
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now f_equal).	0.0477259159088	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0192420482635	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: now destruct n).	0.0231499671936	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	4	synth with cache (only 1: split).	0.0242910385132	5
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0241620540619	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0.0.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0538759231567	15
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	7.03687214851	5155
Coq.ZArith.Znat.Zabs2Nat.id	40	0.3.1.4	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.256922006607	55
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0185339450836	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0220029354095	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0225670337677	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	0.2.10.4.1.0.1	synth with cache (only 1: destruct n as [| n| n]; only 1: contradiction || auto; only 1: now destruct 1 || intros _; only 1: simpl; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: apply Pos2Nat.inj_succ; only 1: now destruct 1 || intros _).	28.8805780411	17481
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.121156930923	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0356550216675	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	0.2.1.0.0.0.0.0.30	synth with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: simpl; only 1: trivial; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	13.8312990665	8437
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0522570610046	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	2.0.1.0.0.2.1.0.0	synth with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).	4.91100907326	1867
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0434758663177	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	20.5813791752	5883
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	2.0.0.0.15	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	31.0874638557	5612
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.5.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.174338817596	68
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0943970680237	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.0886249542236	2
Coq.ZArith.Zquot.Zquot_0_r	40	0.0.0.8	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.15124297142	85
Coq.ZArith.Zquot.Zrem_0_r	40	9	synth with cache (only 1: now destruct a).	0.0346519947052	19
Coq.ZArith.Zquot.Zrem_0_l	40	2	synth with cache (only 1: now destruct a).	0.0110251903534	3
Coq.ZArith.Zquot.Zquot_0_l	40	1	synth with cache (only 1: now destruct a).	0.0112438201904	2
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.2.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	1.82744193077	122
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.1.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.140604972839	13
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.7.0.1	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: intros H; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	4.25675296783	965
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.0956208705902	26
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.0340030193329	5
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	0.2.3.7.0.0	synth with cache (only 1: intros a; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: destruct a; only 1: trivial; only 1: now destruct Z.even; only 1: now destruct Z.even).	2.66388297081	1592
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.1.0.0.1.3.0.0.4.0	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.rem_divide; only 1: split; only 1: intros (c, Hc); only 1: subst; only 1: apply Z.mod_mul; only 1: auto; only 1: intros Hab; only 1: now apply Z.mod_divide; only 1: auto).	4.35261297226	2225
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	24.8	synth with cache (only 1: intros a Ha; only 1: constructor).	2.59020113945	3559
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	1.4.12	synth with cache (only 1: intros a0; only 1: intros _; only 1: exact 0%Z).	1.07093310356	627
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	1.0	synth with cache (only 1: intros; only 1: trivial).	0.176250934601	16
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0.1	synth with cache (only 1: intros a b Ha; only 1: trivial).	0.0834748744965	3
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: auto).	0.0567281246185	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	4.0.0.0.0.0.0.0.0.0.0.9.6	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: now rewrite Z.mul_comm).	39.5133869648	10088
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	0.7.3.11.4.1.1.12	synth with cache (only 1: intros n Hn; only 1: destruct n; only 1: auto; only 1: set (y := Z.pred (Z.pos p)); only 1: red; only 1: simpl; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: auto).	27.858520031	18361
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto).	0.0838899612427	3
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	1.1.3.8	synth with cache (only 1: intros n; only 1: boolify_even_odd; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	2.27122497559	779
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.1.0.0.1.0.6.6	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: trivial).	1.89191889763	870
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.1.2.76	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	8.80095791817	12322
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	synth with cache (only 1: now destruct n).	0.0364029407501	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0.2	synth with cache (only 1: simpl; only 1: now destruct n).	0.0433878898621	4
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.2.0.0.0.0.6.0.39	synth with cache (only 1: revert n; only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	6.61944198608	10071
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0.1	synth with cache (only 1: simpl; only 1: trivial using pos_sub_opp).	0.0231599807739	3
Coq.ZArith.BinInt.Z.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0192589759827	2
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0147747993469	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial using pos_sub_opp).	0.0226368904114	2
Coq.ZArith.BinInt.Z.opp_succ	40
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0249359607697	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	synth with cache (only 1: now destruct n).	0.0175030231476	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0200338363647	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40	2.4.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.167949914932	38
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40	3.3.3.1.4.14	synth with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: rewrite even_spec; only 1: now split).	21.5585041046	14390
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.2.1.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: now split; only 1: apply iff_refl; only 1: now split).	0.0772891044617	8
Coq.ZArith.BinInt.Z.compare_le_iff	40	1	synth with cache (only 1: reflexivity).	0.243788957596	36
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	2.0.0.4.0	synth with cache (only 1: unfold le, max; only 1: case N.compare_spec; only 1: trivial; only 1: auto; only 1: now destruct 2).	1.65365505219	273
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.2.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: auto; only 1: now destruct 2; only 1: intuition).	0.32803606987	47
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	2.15	synth with cache (only 1: intros q; only 1: now destruct n).	4.28640508652	1348
Coq.ZArith.BinInt.Z.abs_neq	40	1.1.1.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0671908855438	7
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.8.0	synth with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: destr_eq H; only 1: destr_eq H).	0.661934137344	132
Coq.ZArith.BinInt.Z.sgn_pos	40	3.0	synth with cache (only 1: intros; only 1: now destruct n).	0.122627019882	5
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.0393149852753	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: reflexivity).	0.0267419815063	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.2.2.1.2.0	synth with cache (only 1: destruct m as [| m| m]; only 1: intros; only 1: now nzsimpl; only 1: intros H; only 1: destr_eq H; only 1: now destruct 1 || intros _).	2.31748390198	485
Coq.ZArith.BinInt.Z.pow_pos_fold	40	1	synth with cache (only 1: trivial).	0.0282549858093	2
Coq.ZArith.BinInt.Z.square_spec	40	0.0.6.0.0.0.0.0.71	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	6.43475604057	5904
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	1	synth with cache (only 1: now destruct n).	0.0909719467163	11
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.0.0.1.0.1	synth with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).	0.133131980896	10
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	synth with cache (only 1: now destruct n).	0.0315780639648	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0437359809875	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.0.1.0.0.4.1	synth with cache (only 1: simpl; only 1: destruct n as [| p| p]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial using pos_sub_opp).	31.5536570549	2949
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.0306880474091	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.0851199626923	5
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.1.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.197788000107	22
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.1.1.0.0.1.0.0.0.0.0.0.3	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	11.6263830662	3325
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.0.1.0.0.1.5	synth with cache (only 1: destruct n; only 1: intros _; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: simpl; only 1: now destruct 1).	4.3172109127	1489
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	synth with cache (only 1: trivial).	0.0297839641571	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	7.109	synth with cache (only 1: compute; only 1: now destruct n).	6.06465697289	7715
Coq.ZArith.BinInt.Z.testbit_neg_r	40	1.0.0.1.5.1.3.0.13.11	synth with cache (only 1: rewrite <- (add_0_l 0); only 1: destruct n as [| p| p]; only 1: intro Hn; only 1: simpl; only 1: easy; only 1: intros Hb; only 1: now discriminate Hb || clear Hb; only 1: intro Hn; only 1: unfold testbit; only 1: trivial).	9.52664995193	6340
Coq.ZArith.BinInt.Z.testbit_odd_0	40	5.0.3.2.0.0.1.16.2	synth with cache (only 1: simpl; only 1: induction a as [a IHa| a IHa| ]; only 1: now nzsimpl; only 1: now destruct a; only 1: simpl; only 1: apply eq_true_iff_eq; only 1: split; only 1: congruence; only 1: now destruct p).	10.3229148388	5668
Coq.ZArith.BinInt.Z.testbit_even_0	40	2.4	synth with cache (only 1: simpl; only 1: now destruct a as [| [| | ]| ]).	0.0491840839386	8
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40	13.3	synth with cache (only 1: unfold lt, le; only 1: now rewrite N.compare_antisym, CompOpp_iff).	7.998691082	2302
Coq.ZArith.BinInt.Z.gt_lt	40	1	synth with cache (only 1: apply N.gt_lt_iff).	0.0328950881958	2
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0314831733704	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	4.0.0	synth with cache (only 1: unfold le, ge; only 1: rewrite (compare_antisym n m); only 1: now destruct compare).	0.219507932663	14
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0351328849792	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	1	synth with cache (only 1: apply add_cancel_l).	0.0506191253662	2
Coq.ZArith.BinInt.Z.mul_reg_l	40	1	synth with cache (only 1: apply mul_cancel_l).	0.0378940105438	2
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.1	synth with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0501379966736	3
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	3	synth with cache (only 1: now nzsimpl').	0.228511095047	4
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.0.0.2.9.11	synth with cache (only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: destruct (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: intuition; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: intuition).	3.27465295792	1793
Coq.ZArith.BinInt.Pos2Z.id	40	3	synth with cache (only 1: split).	0.326792955399	78
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: congruence).	0.0402290821075	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0688090324402	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1.4.1	synth with cache (only 1: induction p as [| p IHp] using Pos.peano_ind; only 1: Z.order'; only 1: intuition Z.order).	0.105513095856	11
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	9	synth with cache (only 1: now Z.nzsimpl').	0.097244977951	11
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: easy).	0.0325109958649	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0508060455322	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0423638820648	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	1.0.7	synth with cache (only 1: simpl; only 1: f_equal; only 1: now destruct p).	0.589322090149	68
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0	synth with cache (only 1: reflexivity).	0.0326790809631	1
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	2.0.1	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct p).	0.227809906006	48
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	synth with cache (only 1: reflexivity).	0.0352029800415	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0390372276306	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.1	synth with cache (only 1: simpl; only 1: easy).	0.0435349941254	3
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	2.5.0	synth with cache (only 1: revert q; only 1: intros H; only 1: trivial).	0.735012054443	100
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: reflexivity).	0.0339269638062	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	6.0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: apply eq_true_iff_eq; only 1: reflexivity).	0.0571391582489	9
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.0.0	synth with cache (only 1: revert q; only 1: intros a; only 1: reflexivity).	0.0513308048248	3
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	2	synth with cache (only 1: reflexivity).	0.0343480110168	3
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	3	synth with cache (only 1: reflexivity).	0.0344760417938	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.0.0.0.0.1.0.1.1	synth with cache (only 1: simpl; only 1: destruct n as [| n| n]; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now destruct a; only 1: now destruct 1 || intros _; only 1: unfold Z.testbit; only 1: f_equal; only 1: now destruct 1 || intros _).	0.775260925293	225
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: congruence).	0.0374009609222	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0722801685333	4
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1).	0.0312571525574	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0681641101837	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	2	synth with cache (only 1: now split).	0.0338540077209	3
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	4	synth with cache (only 1: easy).	0.0470860004425	5
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.0400609970093	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0409781932831	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	2	synth with cache (only 1: now f_equal).	0.0454068183899	3
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.036591053009	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	3.0	synth with cache (only 1: intros; only 1: now auto).	0.042720079422	5
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0662450790405	4
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.0385241508484	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.0483040809631	3
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.0346801280975	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.0347151756287	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	2	synth with cache (only 1: split).	0.0354840755463	3
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.0360770225525	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.0378680229187	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1	synth with cache (only 1: trivial).	0.036180973053	2
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.0326781272888	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.0297250747681	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.1.0.2.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.270641088486	20
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.0411760807037	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	synth with cache (only 1: reflexivity).	0.0325479507446	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	2.3.0.3.0	synth with cache (only 1: destruct x; only 1: easy; only 1: now destruct 1; only 1: intros H; only 1: easy).	1.09719085693	232
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.0528399944305	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.3.7.3.7.1	synth with cache (only 1: destruct x; only 1: intros H; only 1: easy; only 1: now destruct p; only 1: intros H; only 1: easy).	9.86798405647	4103
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.203827857971	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.2	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.134735107422	14
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.114478826523	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.115760087967	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.14013504982	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	1.0.0.3.1	synth with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).	0.159775972366	25
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.78592300415	74
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.6	synth with cache (only 1: intros x y; only 1: congruence).	0.252302885056	46
Coq.ZArith.BinInt.ZL0	40	6	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.148596048355	7
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	5.2.0	synth with cache (only 1: change 2 with (1 + 1); only 1: simpl; only 1: now Z.nzsimpl').	0.250216960907	18
Coq.ZArith.BinInt.Z_eq_mult	40	6.6.5	synth with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: reflexivity).	5.60333395004	1180
Coq.ZArith.Zcomplements.floor_gt0	40	0	synth with cache (only 1: easy).	0.0266301631927	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	1.2.1.0.0.1	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.528364181519	73
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0	synth with cache (only 1: firstorder).	0.0216779708862	1
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	58	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	6.05676603317	5184
Coq.ZArith.Zeven.Zodd_bool_iff	40	61	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	4.4435749054	6442
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.34	synth with cache (only 1: destruct n; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	9.22537398338	4123
Coq.ZArith.Zeven.Zeven_not_Zodd	40	8.5.4.7.0.5	synth with cache (only 1: intros NEQ; only 1: destruct n as [| p| p]; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: now destruct p).	8.90597891808	6541
Coq.ZArith.Zeven.Zodd_not_Zeven	40
Coq.ZArith.Zeven.Zeven_Sn	40	5.5.0	synth with cache (only 1: boolify_even_odd; only 1: intros EQ; only 1: now destruct n as [| [| | ]| [| | ]]).	1.2569000721	359
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	6.5.0	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: now destruct n as [| [| | ]| [| | ]]).	0.678431034088	176
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0498430728912	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	24.7028331757	3567
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	2.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.142290115356	7
Coq.ZArith.Zeven.Zodd_quot2	40	0.4	synth with cache (only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.58424091339	179
Coq.ZArith.Zeven.Zodd_quot2_neg	40	1.0.0.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite Hn'; only 1: now destruct n as [| [| | ]| [| | ]]).	0.478841781616	29
Coq.ZArith.Zeven.Zquot2_opp	40	2.2.3.0.1.18	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	9.07015514374	2762
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.0	synth with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.0480329990387	3
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.0973949432373	5
Coq.ZArith.Zeven.Zeven_2p	40	2.3.0.0.10.12	synth with cache (only 1: Z.nzsimpl'; only 1: induction p as [p IHp| p IHp| ]; only 1: now Z.nzsimpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	13.4988801479	4987
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	1.0.0.0.0.0.1.0.1.1.1.3.1.17	synth with cache (only 1: simpl; only 1: boolify_even_odd; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	9.41780114174	2607
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.115141153336	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.123485088348	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.0355968475342	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	synth with cache (only 1: apply Z.divide_opp_l).	0.0399107933044	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	synth with cache (only 1: apply Z.divide_abs_l).	0.0336048603058	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.3.0.3.2	synth with cache (only 1: intros a b; only 1: zero_or_not b; only 1: intros (c, Hc); only 1: subst; only 1: apply Z.mod_mul; only 1: auto).	2.81339097023	1174
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	13.6	synth with cache (only 1: intros H; only 1: Z.Private_Tac.order).	17.7274489403	5809
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.1.14.16	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	4.02749800682	1838
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	1.12	synth with cache (only 1: intros q; only 1: now Z.nzsimpl').	0.216001987457	86
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.125286102295	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.1.0.0.4.19.0	synth with cache (only 1: induction 1; only 1: inversion H; only 1: subst; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	34.4305169582	10056
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.109492063522	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0	synth with cache (only 1: firstorder).	0.227727890015	1
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.2.1.18	synth with cache (only 1: split; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	4.51858687401	1756
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.4.0.2.4.17	synth with cache (only 1: destruct a as [| a| a]; only 1: now split; only 1: intros x (xa, H5) (xb, H6); only 1: auto; only 1: intros n m (Hm, H); only 1: easy).	36.1265490055	13057
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	59	synth with cache (only 1: now destruct 1).	2.83627700806	2420
Coq.ZArith.Znumtheory.not_prime_1	40	95	synth with cache (only 1: now destruct 1).	24.8964140415	20803
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.4.7	synth with cache (only 1: intros a b Ha H; only 1: apply Z.gcd_greatest; only 1: auto with zarith).	2.13929486275	462
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	5.0	synth with cache (only 1: intro n; only 1: reflexivity).	0.0703530311584	18
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0201480388641	5
Coq.ZArith.Zdiv.Zdiv_0_l	40	2.0	synth with cache (only 1: intro n; only 1: trivial).	0.0112981796265	4
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.1.0	synth with cache (only 1: intros a; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0205860137939	6
Coq.ZArith.Zdiv.Zmod_1_r	40	0.5.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: Z.nzsimpl; only 1: Z.order).	0.0720899105072	25
Coq.ZArith.Zdiv.Zdiv_1_r	40	0.6.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: Z.nzsimpl; only 1: Z.order').	0.0658128261566	20
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.1.0.1	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	0.060329914093	24
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	synth with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0223071575165	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.2	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.0853910446167	24
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0156981945038	4
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	4.3.0.1	synth with cache (only 1: intros n m p; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: unfold Z.sub; only 1: reflexivity).	0.243450164795	160
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0181949138641	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	15	synth with cache (only 1: auto with relations).	0.0555171966553	169
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	6	synth with cache (only 1: auto with relations).	0.0362210273743	31
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	0.0.15	synth with cache (only 1: unfold eqm; only 1: intros a b **; only 1: Z.order).	3.69983315468	1922
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	0.0.18	synth with cache (only 1: fix le_div2 1; only 1: intro q; only 1: trivial).	0.838447809219	842
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.3.4.1	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.169351816177	114
Coq.ZArith.Zdiv.Zeven_mod	40	0.1.0.0	synth with cache (only 1: intros a; only 1: rewrite Zmod_odd; only 1: rewrite <- Z.negb_odd; only 1: now destruct Z.odd).	0.0204439163208	5
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.2.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: auto).	0.065484046936	22
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.2.1	synth with cache (only 1: intros a b c **; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: auto).	0.0769469738007	28
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.1.1	synth with cache (only 1: intros a b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).	0.0425310134888	23
Coq.ZArith.Zdiv.Z_div_exact_2	40	2.0.2.13	synth with cache (only 1: intros i j Hi E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).	7.809705019	4318
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.2	synth with cache (only 1: intros a b Hb; only 1: apply Z.mod_opp_l_z; only 1: now intros ->).	0.149990081787	34
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0426321029663	3
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	synth with cache (only 1: congruence).	0.0333380699158	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	0.0.0.1.0.12.4.0	synth with cache (only 1: intros a b; only 1: intros Hb; only 1: destruct b as [| b| b]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros H; only 1: easy).	1.71516895294	2484
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40	0.0.0.4.1.0.2.3	synth with cache (only 1: destruct x; only 1: left; only 1: now split; only 1: now left; only 1: right; only 1: split; only 1: easy; only 1: auto).	1.19640111923	993
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	4.3	synth with cache (only 1: intros H; only 1: auto).	0.0130169391632	9
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.5	synth with cache (only 1: bitwise as m ?; only 1: trivial).	0.0193109512329	7
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.00883388519287	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	synth with cache (only 1: reflexivity).	0.0090160369873	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.00843000411987	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	8	synth with cache (only 1: now Z.nzsimpl).	1.30464696884	126
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.1.0.2	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: now Z.nzsimpl).	0.212370872498	15
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	5	synth with cache (only 1: trivial).	0.00873804092407	6
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.00958299636841	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.00899004936218	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	3	synth with cache (only 1: trivial).	0.00951504707336	4
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0100131034851	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0097758769989	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	7.0	synth with cache (only 1: symmetry; only 1: trivial).	0.0208721160889	18
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0126008987427	2
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.0.2.2.1.2	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1 || intros _).	0.552258968353	235
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0	synth with cache (only 1: trivial).	0.00922989845276	1
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	3	synth with cache (only 1: auto).	0.00905895233154	4
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	0.1.0.1.1.14.27	synth with cache (only 1: Z.nzsimpl'; only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	9.41793608665	4365
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	5.64	synth with cache (only 1: Z.nzsimpl'; only 1: now apply Pos.iter_swap_gen).	2.77064108849	5512
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	1	synth with cache (only 1: reflexivity).	0.00958490371704	2
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	2.0.0.0.0.2.4.2	synth with cache (only 1: symmetry; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: now Nat.nzsimpl; only 1: intro m; only 1: simpl; only 1: now rewrite IHn).	13.2692940235	5324
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	0.0.0.52	synth with cache (only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: auto; only 1: auto; only 1: apply Pos2Nat.inj_iter).	5.409938097	11170
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0106730461121	1
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	1.1.3.6.13.0	synth with cache (only 1: Z.swap_greater; only 1: destruct x; only 1: split; only 1: now destruct 1 || intros _; only 1: reflexivity; only 1: now destruct 1).	2.71918511391	2749
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0147819519043	2
Coq.ZArith.auxiliary.Zle_left	40
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.00981402397156	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0118789672852	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.00962495803833	2
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0199279785156	5
Coq.ZArith.auxiliary.Zgt_left	40	0.1.1.2.1	synth with cache (only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: Z.swap_greater; only 1: intuition; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.496387958527	181
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0350360870361	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0229370594025	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	13.5.0.0.0.5.5.1	synth with cache (only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: case Pos.compare_spec; only 1: congruence; only 1: intros; only 1: auto; only 1: intros H; only 1: now destruct p).	30.0687510967	17144
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	16	synth with cache (only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	7.77489686012	3987
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.2.0.0.66	synth with cache (only 1: destruct a as [| a| a]; only 1: now Z.nzsimpl; only 1: simpl Zgcd_bound in *; only 1: now Nat.nzsimpl'; only 1: trivial).	5.79847693443	6980
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.0.0.3.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: intro r; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.619644880295	244
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40	7.0.4.1.15.1.2	synth with cache (only 1: left; only 1: Z.swap_greater; only 1: nzinduct n m; only 1: Z.order; only 1: fix even_spec 1; only 1: intros; only 1: auto).	4.69590187073	4690
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.4	synth with cache (only 1: intros; only 1: Z.order).	0.170620918274	54
Coq.ZArith.Zorder.Zlt_not_le	40	3	synth with cache (only 1: intuition Z.order).	0.101986169815	32
Coq.ZArith.Zorder.Zle_not_gt	40	0.5	synth with cache (only 1: unfold Z.le, Z.min; only 1: trivial).	0.0886399745941	35
Coq.ZArith.Zorder.Zgt_not_le	40	1.7	synth with cache (only 1: intro H; only 1: auto).	0.0766680240631	33
Coq.ZArith.Zorder.Znot_ge_lt	40	4.6	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.289410829544	126
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0209059715271	4
Coq.ZArith.Zorder.Znot_gt_le	40	0	synth with cache (only 1: trivial).	0.00729489326477	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0199270248413	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	2.2.1	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.167531013489	44
Coq.ZArith.Zorder.Zgt_irrefl	40	0	synth with cache (only 1: now Z.nzsimpl').	0.0241661071777	1
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.294191837311	40
Coq.ZArith.Zorder.Zle_gt_trans	40	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.185742855072	29
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0253958702087	2
Coq.ZArith.Zorder.Zge_trans	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0426261425018	4
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40	0.0.4.3.4	synth with cache (only 1: unfold Z.lt; only 1: intro H; only 1: reflexivity || destruct H; only 1: rewrite <- 2!Z.add_1_l; only 1: apply Z.add_compare_mono_l).	1.19079685211	584
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0210418701172	4
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0204780101776	2
Coq.ZArith.Zorder.Zsucc_le_reg	40
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.00896620750427	1
Coq.ZArith.Zorder.Zgt_succ	40	0.8	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0530030727386	14
Coq.ZArith.Zorder.Znot_le_succ	40	0.30	synth with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.369378089905	519
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.00935697555542	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.00971698760986	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0174090862274	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.00962686538696	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.018501996994	2
Coq.ZArith.Zorder.Zle_succ_le	40	6.0.4.1.16.45	synth with cache (only 1: now destruct 1 || intros _; only 1: nzinduct n m; only 1: Z.order; only 1: fix even_spec 1; only 1: intros; only 1: auto).	19.7861661911	22743
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0104689598083	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0169060230255	3
Coq.ZArith.Zorder.Zle_neg_pos	40	0.1	synth with cache (only 1: intros a ?; only 1: easy).	0.0209369659424	3
Coq.ZArith.Zorder.Zgt_pos_0	40	1.0	synth with cache (only 1: intros; only 1: easy).	0.0154149532318	3
Coq.ZArith.Zorder.Zle_0_pos	40	0.0	synth with cache (only 1: intros n; only 1: easy).	0.0156469345093	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0113129615784	2
Coq.ZArith.Zorder.Zle_0_nat	40	32.0	synth with cache (only 1: intros n; only 1: now destruct n).	2.17936587334	4267
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.00975608825684	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0101280212402	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	synth with cache (only 1: apply Z.add_le_mono_l).	0.0103290081024	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	synth with cache (only 1: apply Z.add_le_mono_r).	0.0104908943176	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	1	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0296070575714	11
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	2	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0306260585785	11
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0225389003754	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0235049724579	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.5.0.0.1.0.1.22	synth with cache (only 1: destruct p as [| p| p]; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r; only 1: Z.swap_greater; only 1: symmetry; only 1: discriminate).	4.4331870079	2605
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0197720527649	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0106060504913	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0106120109558	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0448820590973	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0896520614624	13
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	3.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0342440605164	6
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	5.0	synth with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.101005077362	15
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0187981128693	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.00988483428955	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.020889043808	4
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.010360956192	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0694050788879	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0710489749908	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	8.3.4	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	0.447822093964	371
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.2.1.2.0.7	synth with cache (only 1: destruct m as [| m| m]; only 1: Z.swap_greater; only 1: now repeat split; only 1: simpl; only 1: now destruct n; only 1: easy || now destruct y).	1.06427621841	747
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	9.0.8.0.0.1.4	synth with cache (only 1: destruct m as [| m| m]; only 1: intros; only 1: Z.order_pos; only 1: Z.swap_greater; only 1: now destruct 1 || intros _; only 1: Z.swap_greater; only 1: now destruct n).	30.1366422176	25296
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.017706155777	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	1.5.0.1.17	synth with cache (only 1: destruct n as [| n| n]; only 1: easy || now destruct y; only 1: now destruct 1 || intros _; only 1: now destruct m; only 1: easy || now destruct y).	3.64390897751	3013
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0264439582825	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.00868105888367	1
Coq.ZArith.Zbool.Zle_cases	40	0.0.1.4.1.1.1.5	synth with cache (only 1: unfold Z.le, Z.min; only 1: intuition; only 1: unfold Z.lt, Z.gt; only 1: unfold Z.leb, Z.le; only 1: destruct (PeanoNat.Nat.compare n m); only 1: congruence; only 1: easy; only 1: trivial).	2.33839893341	1151
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	3.0.0.2	synth with cache (only 1: case Z.leb_spec; only 1: intro H; only 1: now try Z.order'; only 1: now destruct n).	0.286108970642	28
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.0.0.14.1.1	synth with cache (only 1: unfold Z.geb, Z.leb; only 1: unfold Z.le, Z.max; only 1: case Z.compare; only 1: trivial; only 1: trivial; only 1: easy').	4.45500802994	1722
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	2	synth with cache (only 1: now split).	0.0261559486389	3
Coq.ZArith.Zbool.Zone_min_pos	40	7.0	synth with cache (only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.161474943161	20
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.0.8.0	synth with cache (only 1: unfold Z.leb, Z.le; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.867119789124	116
Coq.ZArith.Zbool.Zge_is_le_bool	40	2.0.10.0	synth with cache (only 1: symmetry; only 1: case Z.leb_spec; only 1: now Z.swap_greater; only 1: now destruct n).	4.3768658638	1157
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	3.2.10.10	synth with cache (only 1: unfold Z.gtb, Z.ltb; only 1: revert m; only 1: fix odd_spec 1; only 1: auto).	19.8778989315	8053
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0629291534424	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	5.59	synth with cache (only 1: fix even_spec 1; only 1: auto).	7.87657499313	10235
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0.0.2	synth with cache (only 1: intro r; only 1: destruct r; only 1: auto with arith; only 1: auto; only 1: right; only 1: trivial).	0.0694661140442	16
Coq.ZArith.ZArith_dec.Zcompare_rect	40	7.0.2.0	synth with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: intuition).	6.35275101662	1831
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.052973985672	5
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	19.46	synth with cache (only 1: unfold Z.lt, Z.le; only 1: decide equality).	7.58342504501	13167
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.0.2.0.1	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.328613996506	42
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	3.1.0.0.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: constructor; only 1: trivial).	0.0643119812012	15
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	1.2.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: auto).	5.59538316727	1740
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.6.6	synth with cache (only 1: intro H; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.826280117035	272
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.0257110595703	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.1.1.2.1.0.4.0	synth with cache (only 1: intros Hab; only 1: symmetry; only 1: destruct b as [| p| p]; only 1: simpl; only 1: easy; only 1: unfold Zpower_alt, Z.pow, Z.pow_pos; only 1: easy; only 1: easy).	1.1920440197	447
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0365569591522	1
Coq.omega.OmegaLemmas.Zred_factor1	40	0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0150170326233	2
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	6	synth with cache (only 1: now Z.nzsimpl).	0.525371074677	65
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0366580486298	1
Coq.omega.OmegaLemmas.Zred_factor6	40	1.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	0.132986783981	6
Coq.omega.OmegaLemmas.new_var	40	15.33	synth with cache (only 1: intro n; only 1: now exists n).	3.88541388512	6994
Coq.omega.OmegaLemmas.OMEGA1	40	2.9	synth with cache (only 1: intros Hn Hm; only 1: Z.order).	0.038507938385	49
Coq.omega.OmegaLemmas.OMEGA2	40	2.0	synth with cache (only 1: intros Hn Hm; only 1: Z.order_pos).	0.0191769599915	4
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	2.4.11	synth with cache (only 1: intro EQ; only 1: intros ->; only 1: now Z.nzsimpl).	0.494968175888	310
Coq.omega.OmegaLemmas.OMEGA6	40	0.2.1.12	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	1.66345596313	399
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40	2.4.0.2	synth with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).	0.373380899429	181
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40
Coq.omega.OmegaLemmas.OMEGA12	40	0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0153579711914	2
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0521771907806	3
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0235378742218	4
Coq.omega.OmegaLemmas.OMEGA16	40	6.9	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: Morphisms.f_equiv).	0.25736284256	129
Coq.omega.OmegaLemmas.OMEGA17	40	1.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0405931472778	3
Coq.omega.OmegaLemmas.OMEGA18	40	7.5.1.0	synth with cache (only 1: unfold Zne, not; only 1: intros; only 1: rewrite H1 in H; only 1: now try split).	0.67361998558	545
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.05180311203	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	8.9.4.0.30	synth with cache (only 1: destruct x; only 1: intros EQ; only 1: auto; only 1: easy || now destruct y; only 1: easy || now destruct y).	8.36811900139	12695
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.1.2.4.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.395988941193	307
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.2.14.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.859159946442	1207
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	2.4.11	synth with cache (only 1: intro p; only 1: destruct r using Acc_inv_dep; only 1: auto).	0.384932994843	481
Coq.Program.Wf.Well_founded.Fix_F_inv	40	0.6.6.30.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: intro m; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	35.2910699844	48538
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0913989543915	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	3.1	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0144469738007	6
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	2.4.1.3.3.4	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).	1.19912290573	1199
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	3.0.0	synth with cache (only 1: induction (Rwf x); only 1: rewrite <- 2!Fix_F_eq; only 1: auto).	0.0305290222168	6
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	1.14.0.18	synth with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	2.56922483444	6755
Coq.Program.Equality.JMeq_eq_refl	40	2	synth with cache (only 1: apply UIP).	0.0074200630188	3
Coq.Program.Equality.UIP_refl_refl	40	22	synth with cache (only 1: apply UIP).	1.14936089516	2879
Coq.Program.Equality.inj_pairT2_refl	40	18	synth with cache (only 1: apply UIP).	0.111142158508	145
Coq.Program.Equality.solution_left	40	1.2.3.0	synth with cache (only 1: intro eq_rect_eq; only 1: intros y H; only 1: destruct H; only 1: auto).	0.019562959671	16
Coq.Program.Equality.solution_right	40	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0112400054932	5
Coq.Program.Equality.deletion	40	5	synth with cache (only 1: trivial).	0.00583410263062	6
Coq.Program.Equality.simplification_heq	40	1.21.9.1	synth with cache (only 1: intros h1 h2; only 1: apply h1; only 1: subst; only 1: trivial).	0.638667106628	2624
Coq.Program.Equality.simplification_existT2	40	0.0.0.4.0	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.0940821170807	9
Coq.Program.Equality.simplification_existT1	40	0.13.2.4.12.31	synth with cache (only 1: intro eq_dep_eq; only 1: intro H; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: trivial; only 1: assumption).	6.35060381889	21549
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0106461048126	3
Coq.Program.Combinators.compose_id_left	40	0.0	synth with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.0102100372314	2
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0079140663147	2
Coq.Program.Combinators.compose_assoc	40	0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: intros n m; only 1: reflexivity).	0.0119061470032	3
Coq.Program.Combinators.flip_flip	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00875806808472	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00902104377747	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40	0.0.0.1.0.10.0.4	synth with cache (only 1: intros l x; only 1: induction l as [| y l IHl]; only 1: easy; only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: auto with *; only 1: rewrite IHl; only 1: intuition).	21.5069429874	13415
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.050430059433	6
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40	23.36.13	synth with cache (only 1: intros H; only 1: apply permut_length_1; only 1: intuition).	24.7741479874	52499
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40	2.27	synth with cache (only 1: fix odd_spec 1; only 1: auto).	1.30335903168	2442
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.1.0.4	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: auto; only 1: auto).	0.0208191871643	9
Coq.Sorting.Permutation.Permutation.Permutation_refl'	40
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	3.7	synth with cache (only 1: intros a' y H H0; only 1: eauto).	0.304383039474	201
Coq.Sorting.Permutation.Permutation_morph_transp	40
Coq.Sorting.Permutation.Permutation_cons	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: subst; only 1: auto).	0.0924880504608	5
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	1.0.0.3.0.0.3.1.2	synth with cache (only 1: intros l l1 l2; only 1: revert l1 l2 l; only 1: intro l1; only 1: induction l as [| a l IHl]; only 1: intros H; only 1: auto; only 1: intros H; only 1: simpl; only 1: auto).	11.2835860252	4336
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	0.3	synth with cache (only 1: intros x y l1 l2 Hin; only 1: now intros -> ->).	0.386428117752	60
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_rot	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_swap_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_middle	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.1	synth with cache (only 1: intro l; only 1: intuition).	0.0150020122528	3
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_elt	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	0.0.3.0.14.1.8.1	synth with cache (only 1: intros; only 1: induction l as [| a l IH]; only 1: now simpl; only 1: induction l as [| a0 l IHl]; only 1: auto; only 1: apply Permutation_cons_app; only 1: rewrite <- app_assoc; only 1: auto).	20.0321729183	10898
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	1.0.0.0.0.0.0.2.8.14	synth with cache (only 1: intro l; only 1: intro n; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	28.082100153	14717
Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall	40	4.5.0.20	synth with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: rewrite !Forall_forall; only 1: eauto using Permutation_in).	5.75916600227	4356
Coq.Sorting.Permutation.Permutation_properties.Permutation_Exists	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40	1.0.1.2.3.7.3	synth with cache (only 1: revert l1 l2 l; only 1: intro l1'; only 1: intros l l' Hperm; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: eauto using Add_head; only 1: apply Add_app).	36.5140211582	4749
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_m	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_elt_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_repeat	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map_inv	40
Coq.Sorting.Permutation.Permutation_map.Permutation_image	40
Coq.Sorting.Permutation.Permutation_map.Permutation_elt_map_inv	40
Coq.Sorting.Permutation.Permutation_map.Permutation_flat_map	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.Permutation.Permutation_list_sum	40
Coq.Sorting.Permutation.Permutation_list_max	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_sym	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_equiv	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_cons	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_Permutation_transp	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_ind_transp	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	17.2	synth with cache (only 1: intros; only 1: split).	0.725456953049	447
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.1.2	synth with cache (only 1: unfold permutation; only 1: intros; only 1: auto with datatypes).	0.091639995575	6
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	0.3.0.13.0	synth with cache (only 1: unfold permutation, meq; only 1: intros x y Hin; only 1: intros; only 1: rewrite H; only 1: trivial).	4.94418501854	1807
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.101634025574	4
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).	0.299503087997	8
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	1.1.0.0.0.3.1	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: revert H; only 1: lia).	6.6586420536	824
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.142105102539	5
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	0.0.0.7.1.3.0.0	synth with cache (only 1: induction 1; only 1: apply permut_refl; only 1: red; only 1: intro P; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive).	6.36049795151	1734
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	2.0	synth with cache (only 1: inversion 1; only 1: auto).	0.0379519462585	4
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.0.8	synth with cache (only 1: intros x Hin; only 1: inversion 1; only 1: auto).	0.0754289627075	22
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.0.5.1	synth with cache (only 1: intro l; only 1: intros H; only 1: inversion_clear 1; only 1: eauto).	0.353248119354	67
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0496380329132	3
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	1.1	synth with cache (only 1: simpl; only 1: trivial).	0.0727410316467	4
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.0747399330139	2
Coq.Sorting.Heap.defs.invert_heap	40	0.26.19.14	synth with cache (only 1: intros H a; only 1: intros y; only 1: inversion_clear 1; only 1: auto with datatypes).	20.5010349751	18064
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.2.0.0.0.0.1.0.0.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	3.20459318161	647
Coq.Sorting.Heap.defs.low_trans	40	7.3.1.0.2	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: simpl; only 1: intros a G PG D PD PN; only 1: eauto with *).	2.25048804283	767
Coq.Sorting.Heap.defs.Equivalence_instance_0	40
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.5.1.0.12	synth with cache (only 1: intros l1 l2 e; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	1.25701498985	378
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40
Coq.Sorting.Heap.defs.list_to_heap	40
Coq.Sorting.Heap.defs.heap_to_list	40
Coq.Sorting.Heap.defs.treesort	40	0.2.23	synth with cache (only 1: unfold permutation, meq; only 1: fix merge0 1; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	1.26341700554	650
Coq.Sorting.CPermutation.CPermutation.CPermutation_Permutation	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_cons	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_split	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_refl	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_refl'	40	3.17.3.2	synth with cache (only 1: intros l1; only 1: intros l H; only 1: subst; only 1: now rewrite <- (app_nil_l l)  at 1; rewrite <- (app_nil_r l)  at 2).	2.38932394981	3463
Coq.Sorting.CPermutation.CPermutation.CPermutation_sym	40	2.0.0	synth with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: split).	0.0162088871002	5
Coq.Sorting.CPermutation.CPermutation.CPermutation_trans	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app	40	4.0	synth with cache (only 1: intros l l' tl Hperm; only 1: eauto using Add_head, Add_app).	0.0243330001831	6
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_comm	40	2	synth with cache (only 1: auto).	0.0092499256134	3
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_rot	40	1.0	synth with cache (only 1: intros; only 1: now rewrite (app_assoc l2)).	0.0273740291595	11
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_cons_append	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_morph_cons	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_swap	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutation.CPermutation_rev	40
Coq.Sorting.CPermutation.CPermutation_in	40
Coq.Sorting.CPermutation.CPermutation_in'	40
Coq.Sorting.CPermutation.CPermutation_map	40
Coq.Sorting.CPermutation.CPermutation_map_inv	40
Coq.Sorting.CPermutation.CPermutation_image	40
Coq.Sorting.CPermutation.CPermutation_Forall	40
Coq.Sorting.CPermutation.CPermutation_Exists	40
Coq.Sorting.CPermutation.CPermutation_Forall2	40
Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40	2	synth with cache (only 1: now intros ->).	0.078173160553	22
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0222239494324	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0228559970856	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0383701324463	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0250129699707	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.0.1.5	synth with cache (only 1: rewrite Pos.eqb_eq; only 1: split; only 1: auto; only 1: auto).	0.902515888214	289
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	0.0.0.14.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: case Pos.compare_spec; only 1: easy'; only 1: easy'; only 1: easy').	0.703989982605	543
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	5.1.5	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto).	1.48804998398	533
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	1.0.0.0.15.0.0.0	synth with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: right; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	2.35176801682	2981
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.5.2	synth with cache (only 1: intros n m ?; only 1: inversion H; only 1: trivial).	0.127116918564	10
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40	3.23.0	synth with cache (only 1: intro p; only 1: fix odd_spec 1; only 1: auto).	6.26096391678	7051
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	1.1	synth with cache (only 1: intros n m Hn; only 1: intuition).	0.0179169178009	4
Coq.btauto.Reflect.Completeness.list_nth_succ	40
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.Init.Wf.Well_founded.Acc_inv	40	4.1.23	synth with cache (only 1: intro H; only 1: destruct 1; only 1: assumption).	0.413927078247	1128
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0176661014557	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0174181461334	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	9.0.6.0.3.4.2.0	synth with cache (only 1: intro z; only 1: intro p; only 1: destruct p; only 1: intros A P H; only 1: auto; only 1: intro H; only 1: apply False_rec; only 1: auto).	5.16570186615	8991
Coq.Init.Tactics.decide_right	40	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0400440692902	6
Coq.Init.Peano.pred_Sn	40	2.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: split; only 1: simpl; only 1: split).	0.0632708072662	12
Coq.Init.Peano.not_eq_S	40	3.3.0	synth with cache (only 1: red; only 1: intro A; only 1: auto).	0.094850063324	44
Coq.Init.Peano.O_S	40	4.1	synth with cache (only 1: intro n; only 1: discriminate).	0.0562851428986	22
Coq.Init.Peano.n_Sn	40	5.1.0.2	synth with cache (only 1: intro n; only 1: induction n; only 1: discriminate; only 1: auto).	0.161629915237	92
Coq.Init.Peano.plus_n_O	40	0.2.0.0.1	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0699868202209	15
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0447280406952	6
Coq.Init.Peano.plus_n_Sm	40	0.0.1.4.2	synth with cache (only 1: intro n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.314289093018	74
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0524718761444	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0485050678253	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.2.1	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.0323958396912	7
Coq.Init.Peano.le_n_S	40	0.0.0	synth with cache (only 1: induction 1 as [| m _]; only 1: auto; only 1: auto).	0.0298068523407	3
Coq.Init.Peano.nat_case	40	1.0.7.6	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).	0.597517967224	536
Coq.Init.Peano.nat_double_ind	40	0.2.11.2.0.11	synth with cache (only 1: induction n; only 1: intro n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	11.9606389999	15067
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40	0.0.0.0.0.0.0.0.3.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	17.9414999485	7218
Coq.Init.Peano.min_r	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	27.4341719151	11303
Coq.Init.Peano.nat_rect_succ_r	40	4.4.0.0.0.8	synth with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: trivial).	3.70644593239	3932
Coq.Init.Peano.nat_rect_plus	40	0.1.1.3.0.4	synth with cache (only 1: intros; only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	4.93156099319	2485
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	0.6.25.7	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).	0.766400098801	2230
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.01740193367	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0227649211884	3
Coq.Init.Datatypes.surjective_pairing	40	0.14	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0607738494873	91
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0.0	synth with cache (only 1: destruct H; only 1: simpl in *; only 1: reflexivity).	0.035856962204	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	0.1.1.1.0.1.1.1.0.5.2	synth with cache (only 1: intro H; only 1: destruct c, c'; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H).	14.5310659409	22094
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00243210792542	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	0.0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00504016876221	6
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0043351650238	6
Coq.Init.Logic.and_iff_compat_l	40	1.0.2.0.1.0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.13307094574	776
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0908408164978	298
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.676764965057	2337
Coq.Init.Logic.imp_iff_compat_l	40	9.9.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.17161989212	778
Coq.Init.Logic.imp_iff_compat_r	40	2.0.3.0.2.1.2.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.462456941605	1288
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00961685180664	4
Coq.Init.Logic.neg_false	40	1.1.11.0.0.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.340399026871	1144
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.20020699501	91
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.644335985184	634
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.0	synth with cache (only 1: intros; only 1: assumption).	0.0118799209595	2
Coq.Init.Logic.iff_to_and	40	1.0.0.0.0.1.3	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intro H; only 1: assumption).	0.333914995193	223
Coq.Init.Logic.universal_quantification.inst	40	1.3	synth with cache (only 1: intro H1; only 1: auto).	0.0151948928833	6
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.0140669345856	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).	0.171195030212	283
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.2	synth with cache (only 1: destruct 1; only 1: trivial).	0.0145311355591	5
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0182900428772	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.0154490470886	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0154421329498	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	26.1	synth with cache (only 1: destruct 2; only 1: auto).	0.620114088058	1346
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.1.1	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: auto).	0.0184609889984	5
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0191240310669	3
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0201258659363	3
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0203838348389	3
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.1.0	synth with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0274088382721	4
Coq.Init.Logic.rew_opp_r	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.020103931427	2
Coq.Init.Logic.rew_opp_l	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0193960666656	2
Coq.Init.Logic.f_equal2	40	0.2.0	synth with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.0227179527283	5
Coq.Init.Logic.f_equal3	40	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0253260135651	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0341999530792	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0407328605652	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0205371379852	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0213599205017	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0211300849915	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0208559036255	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0221228599548	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0252990722656	3
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0233299732208	2
Coq.Init.Logic.map_subst_map	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0259740352631	2
Coq.Init.Logic.rew_swap	40	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).	0.0232419967651	2
Coq.Init.Logic.rew_compose	40	2.0	synth with cache (only 1: destruct H2; only 1: reflexivity).	0.0260579586029	4
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0	synth with cache (only 1: reflexivity).	0.0185759067535	1
Coq.Init.Logic.eq_trans_map_distr	40	1.5.5.1	synth with cache (only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.409818887711	319
Coq.Init.Logic.eq_sym_map_distr	40	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0293610095978	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.1.0	synth with cache (only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.0352830886841	4
Coq.Init.Logic.eq_trans_rew_distr	40	0.2	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.0296270847321	4
Coq.Init.Logic.rew_const	40	0.4	synth with cache (only 1: destruct e; only 1: reflexivity).	0.030415058136	6
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	3.11	synth with cache (only 1: intros A B []; only 1: auto).	0.492259979248	519
Coq.Init.Logic.inhabited_covariant	40	0.2	synth with cache (only 1: destruct 2; only 1: auto).	0.0400230884552	21
Coq.Init.Logic.eq_stepl	40	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0537729263306	18
Coq.Init.Logic.iff_stepl	40	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0413808822632	4
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.0.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0683209896088	20
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0364000797272	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0130078792572	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.0132908821106	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0140051841736	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0249919891357	5
Coq.Init.Logic_Type.identity_ind_r	40	1.8.1	synth with cache (only 1: intros A x y z H1 H2; only 1: destruct H2; only 1: auto).	0.128727912903	159
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0171201229095	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0181999206543	3
Coq.Init.Specif.sigT_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0170369148254	2
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0178339481354	2
Coq.Init.Specif.sigT2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0196249485016	3
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0201070308685	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.7.6	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.298456907272	431
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.0.67.49	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	4.25957083702	36173
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0310919284821	4
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0303649902344	3
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).	0.0303790569305	2
Coq.Init.Specif.sigT.eq_existT_curried_trans	40
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.9.22	synth with cache (only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).	3.82243609428	4706
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0296611785889	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0336029529572	3
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0588309764862	6
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	12.3.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	6.07109618187	4791
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0339078903198	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.2.2.1	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.388871908188	129
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	4.2.0.1.2.2.1.0.0.7	synth with cache (only 1: simpl; only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl; only 1: apply eq_existT2_uncurried).	10.3774588108	7937
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0391590595245	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.042228937149	4
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.1.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0850389003754	7
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	9.6.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	17.4301409721	7943
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0406301021576	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0229840278625	3
Coq.funind.Recdef.le_lt_SS	40	5	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0135009288788	6
Coq.funind.Recdef.Splus_lt	40	118	synth with cache (only 1: intuition).	1.69271302223	7800
Coq.funind.Recdef.SSplus_lt	40
Coq.funind.Recdef.max	40
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.0.0.1.0.25.7.0.75.0	synth with cache (only 1: split; only 1: intros a; only 1: red; only 1: intuition; only 1: contradict H; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	8.31212806702	19790
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0443558692932	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40	0.2.10	synth with cache (only 1: intro n; only 1: intros; only 1: apply Qred_correct).	1.41131091118	1118
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	2.1.3.0.27.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: assumption; only 1: intros; only 1: now rewrite !Qred_correct).	2.40564894676	2762
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	4.0.2	synth with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qle_Qabs).	0.185773134232	32
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.0608868598938	10
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	6.0.47	synth with cache (only 1: split; only 1: intros; only 1: now destruct n).	1.87099599838	1659
Coq.QArith.Qfield.Examples.ex1	40	0	synth with cache (only 1: exact Qmult_plus_distr_l).	0.00690293312073	1
Coq.QArith.Qfield.Examples.ex2	40	0	synth with cache (only 1: exact Qplus_comm).	0.00901508331299	1
Coq.QArith.Qfield.Examples.ex3	40	0.0.0.0.6.0.4	synth with cache (only 1: red; only 1: simpl; only 1: intros Hz; only 1: intros (a1, a2) (b1, b2); only 1: simpl; only 1: simpl_mult; only 1: ring).	1.4737238884	885
Coq.QArith.Qfield.Examples.ex4	40	0	synth with cache (only 1: ring).	0.0132579803467	1
Coq.QArith.Qfield.Examples.ex5	40	4	synth with cache (only 1: trivial).	0.0127911567688	5
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0155839920044	1
Coq.QArith.Qfield.Examples.ex7	40	1.2	synth with cache (only 1: intro z_ne_0; only 1: ring).	0.0230801105499	5
Coq.QArith.Qfield.Examples.ex8	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0208230018616	2
Coq.QArith.Qfield.Examples.ex9	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0185739994049	2
Coq.QArith.Qfield.Examples.ex10	40	4.1.0.1.0.11	synth with cache (only 1: intros a b Hb; only 1: setoid_replace (a / b * b) with (b * (a / b)) by apply Qmult_comm; only 1: rewrite Qmult_div_r; only 1: ring; only 1: intro; only 1: now Z.nzsimpl').	5.72034406662	2757
Coq.QArith.Qfield.Qopp_plus	40	2.6.0	synth with cache (only 1: intros; only 1: symmetry; only 1: ring).	0.16765499115	66
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0283250808716	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40	3.4.5.24	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: intros a; only 1: auto).	6.67150807381	5003
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	5.0.0	synth with cache (only 1: unfold Qccompare; only 1: intros; only 1: reflexivity).	0.0273160934448	8
Coq.QArith.Qcanon.Qcgt_alt	40	0.1	synth with cache (only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0125589370728	3
Coq.QArith.Qcanon.Qcle_alt	40	1.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0120580196381	3
Coq.QArith.Qcanon.Qcge_alt	40	0.2.1	synth with cache (only 1: destr_bool; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0266680717468	15
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	7	synth with cache (only 1: easy).	0.0174100399017	8
Coq.QArith.Qcanon.Qcplus_assoc	40	0.14.1.10	synth with cache (only 1: intros c; only 1: intro i; only 1: fix even_spec 1; only 1: auto).	14.3763461113	12058
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40	26.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	34.0531430244	5465
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40	2.1.2.2.2	synth with cache (only 1: intros; only 1: symmetry; only 1: destruct q; only 1: qc; only 1: ring).	0.524432897568	363
Coq.QArith.Qcanon.Qcplus_opp_r	40
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.4.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.078134059906	13
Coq.QArith.Qcanon.Qcmult_1_l	40	21.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	7.30343198776	6040
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0314719676971	5
Coq.QArith.Qcanon.Qcmult_comm	40	5.4.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	0.442617177963	276
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	4.0.0.9.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: simpl_mult; only 1: ring).	2.74730205536	1364
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	3.0.1.8.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: simpl_mult; only 1: ring).	1.81623482704	999
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40	0.9.0.0	synth with cache (only 1: intros a n **; only 1: qc; only 1: apply Qdiv_mult_l; only 1: auto).	0.837790966034	416
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.5.35.16	synth with cache (only 1: intros; only 1: red; only 1: unfold Qle; only 1: auto with zarith).	18.0018119812	30981
Coq.QArith.Qcanon.Qcle_antisym	40	8.4.0	synth with cache (only 1: intros x y; only 1: intros; only 1: intuition).	0.49703001976	258
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	6.15.0.7	synth with cache (only 1: intros; only 1: contradict H; only 1: destruct H; only 1: apply Z.lt_irrefl).	14.2962210178	12330
Coq.QArith.Qcanon.Qclt_le_weak	40	8.5.13	synth with cache (only 1: intro p; only 1: intro m; only 1: congruence).	17.2647099495	14046
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.2.0.17	synth with cache (only 1: intros H1; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: assumption; only 1: eauto).	5.08423900604	4843
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	3.2.1.2.3	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	3.71991181374	2060
Coq.QArith.Qcanon.Qcnot_lt_le	40	7.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.183609008789	17
Coq.QArith.Qcanon.Qcnot_le_lt	40	3.2	synth with cache (only 1: intros a b H; only 1: Z.order).	0.17499089241	59
Coq.QArith.Qcanon.Qclt_not_le	40	1.1	synth with cache (only 1: intros n m; only 1: apply Z.lt_nge).	0.172580957413	36
Coq.QArith.Qcanon.Qcle_not_lt	40	5.0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qle, Qlt, Qeq; only 1: intros; only 1: Z.order').	0.038537979126	20
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40	0.6.9.7	synth with cache (only 1: intro; only 1: induction p; only 1: fix even_spec 1; only 1: assumption).	3.85635495186	2785
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.2.0.5	synth with cache (only 1: induction n; only 1: intros; only 1: tauto; only 1: auto with qarith).	1.11543703079	284
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.643390893936	283
Coq.QArith.Qreals.IZR_nz	40	2	synth with cache (only 1: auto with real).	0.0528411865234	13
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40	1.7.6.0.10.0.16	synth with cache (only 1: destruct q; only 1: unfold Qeq; only 1: destruct p; only 1: simpl; only 1: symmetry; only 1: rewrite <- Z.compare_eq_iff; only 1: now split).	14.1725530624	14983
Coq.QArith.QArith_base.Qlt_alt	40	5.0.1.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now split).	0.0333690643311	18
Coq.QArith.QArith_base.Qgt_alt	40	1.1.2.14.11.14	synth with cache (only 1: revert q; only 1: symmetry; only 1: revert q; only 1: fix even_spec 1; only 1: intro q; only 1: trivial).	23.8323309422	22126
Coq.QArith.QArith_base.Qle_alt	40	10	synth with cache (only 1: now split).	0.0363540649414	34
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	1.6	synth with cache (only 1: red; only 1: now Z.nzsimpl).	0.0285820960999	9
Coq.QArith.QArith_base.Qeq_sym	40	0.0	synth with cache (only 1: symmetry; only 1: now Z.nzsimpl').	0.0328888893127	2
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	0	synth with cache (only 1: apply Zeq_is_eq_bool).	0.0107378959656	1
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	synth with cache (only 1: apply Qeq_bool_iff).	0.00932502746582	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40	20	synth with cache (only 1: apply Z.leb_le).	0.800921916962	1134
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.26	synth with cache (only 1: red; only 1: apply Zle_is_le_bool).	0.265810966492	471
Coq.QArith.QArith_base.Qnot_eq_sym	40	3.8	synth with cache (only 1: intros Hn Hm; only 1: intuition).	0.199282169342	124
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	synth with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.0131099224091	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.0223000049591	2
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40	8.0.8	synth with cache (only 1: Z.bitwise; only 1: simpl; only 1: now Z.nzsimpl).	0.682421922684	332
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0.12	synth with cache (only 1: intros H; only 1: destr_eq H).	0.133769035339	60
Coq.QArith.QArith_base.Qplus_assoc	40	0.3.10.3	synth with cache (only 1: intro l; only 1: fix gcd_divide 1; only 1: intros a b; only 1: auto).	3.53048110008	2117
Coq.QArith.QArith_base.Qplus_0_l	40	1.1.0.12.19	synth with cache (only 1: intros H; only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl in *; only 1: Z.nzsimpl; only 1: f_equiv).	6.46851706505	4797
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: f_equal; only 1: now Z.nzsimpl).	0.0683660507202	6
Coq.QArith.QArith_base.Qplus_comm	40
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.24	synth with cache (only 1: fix odd_spec 1; only 1: intro m; only 1: trivial).	30.925424099	12988
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0325310230255	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	10.4.1.0.11	synth with cache (only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: intros n m p; only 1: simpl_mult; only 1: ring).	15.7685408592	9381
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: simpl in *; only 1: trivial).	0.0216290950775	4
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: simpl in *; only 1: now Z.nzsimpl).	0.127912998199	22
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	1.7.2.4.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros x; only 1: Z.nzsimpl; only 1: simpl_mult; only 1: ring).	19.798459053	5688
Coq.QArith.QArith_base.Qmult_comm	40	1.0.2.2.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.231943845749	94
Coq.QArith.QArith_base.Qmult_plus_distr_r	40
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.07546210289	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	2.6	synth with cache (only 1: compute; only 1: auto).	0.239048957825	48
Coq.QArith.QArith_base.inject_Z_opp	40	10	synth with cache (only 1: reflexivity).	0.018944978714	24
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	2.3.9.0.4.0	synth with cache (only 1: red; only 1: intros a b; only 1: simpl; only 1: symmetry; only 1: simpl_mult; only 1: ring).	16.7505469322	6755
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0411441326141	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	52	synth with cache (only 1: intuition).	0.655995845795	2137
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	0.57	synth with cache (only 1: apply Z.ge_le_iff; only 1: auto with zarith).	3.59714102745	9873
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	14.22	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	3.77392292023	2094
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	1.2.6	synth with cache (only 1: intuition; only 1: apply Z.ge_le_iff; only 1: auto).	0.180871009827	121
Coq.QArith.QArith_base.Qnot_le_lt	40	25.4	synth with cache (only 1: intro H; only 1: Z.order).	1.12835788727	1430
Coq.QArith.QArith_base.Qlt_not_le	40
Coq.QArith.QArith_base.Qle_not_lt	40	2.5	synth with cache (only 1: red; only 1: apply Z.nlt_ge).	0.0180630683899	9
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	12.2611918449	1435
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	10.8306121826	2022
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0271089076996	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40	1.18.3	synth with cache (only 1: intros x x'; only 1: fix even_spec 1; only 1: auto).	3.61261200905	2610
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40	0.0.0.0.1.2.2	synth with cache (only 1: intros a b n; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	1.7216591835	271
Coq.QArith.Qminmax.Q.plus_min_distr_r	40
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	2.0.8	synth with cache (only 1: simpl; only 1: intros; only 1: apply Z.div_1_r).	1.4771399498	303
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.1.0.1.8	synth with cache (only 1: intros; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	2.25555515289	732
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.655957937241	48
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	1.0.1.0.0.0.1.0.1.1.9.21	synth with cache (only 1: unfold Qeq, Qplus; only 1: intros (x1, x2); only 1: unfold Qle, Qlt; only 1: intros; only 1: simpl; only 1: destruct x1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: auto with zarith; only 1: simpl; only 1: now destruct Hn || easy).	39.2640581131	20357
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0847017765045	9
Coq.QArith.Qabs.Qabs_nonneg	40
Coq.QArith.Qabs.Zabs_Qabs	40	0.0.1	synth with cache (only 1: intros n m; only 1: compute; only 1: trivial).	0.221889019012	38
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: reflexivity).	0.00662398338318	1
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.00718212127686	2
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00573396682739	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	5.3.2.3.2	synth with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: intros X; only 1: firstorder).	0.485852956772	590
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	3	synth with cache (only 1: firstorder).	0.00832009315491	4
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0106861591339	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.0137498378754	4
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.00722599029541	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	5	synth with cache (only 1: simpl_crelation).	0.0986919403076	6
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.0880711078644	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	2.0.1	synth with cache (only 1: intro; only 1: reduce; only 1: firstorder).	0.0139479637146	6
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.00917816162109	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00708603858948	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.00629901885986	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.00735092163086	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	6.6.0	synth with cache (only 1: intros A R H B R' H0 x y z X X0 x0 y0 X1; only 1: unfold flip; only 1: firstorder).	0.522558927536	328
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	8.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0611400604248	16
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	3	synth with cache (only 1: firstorder).	0.0213830471039	4
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	5.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	0.887553930283	385
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	2	synth with cache (only 1: firstorder).	1.03592085838	441
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	2.3	synth with cache (only 1: intros x y H'; only 1: firstorder).	1.21895098686	472
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	5.3	synth with cache (only 1: destruct 1; only 1: firstorder).	0.0906929969788	15
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	1.6	synth with cache (only 1: intros; only 1: firstorder).	1.13501501083	276
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	4.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0117919445038	6
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	2.5	synth with cache (only 1: intros P b H H0; only 1: firstorder).	0.0396089553833	31
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	2	synth with cache (only 1: simpl_crelation).	0.0120289325714	3
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	8	synth with cache (only 1: firstorder).	0.00980806350708	9
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.0.1	synth with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).	0.0211780071259	4
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.0	synth with cache (only 1: reduce; only 1: auto).	0.0104389190674	2
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.00634980201721	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.2.2	synth with cache (only 1: hnf; only 1: destruct 1; only 1: firstorder).	0.0185639858246	13
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0070219039917	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.00671291351318	1
Coq.Classes.CMorphisms.proper_proper	40	2.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0159168243408	5
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	3.0	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.020388841629	5
Coq.Classes.CMorphisms.Normalize.flip_atom	40	1	synth with cache (only 1: firstorder).	0.00991201400757	2
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.1.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder; only 1: simpl_crelation).	0.0504069328308	5
Coq.Classes.CMorphisms.proper_sym_flip_2	40	2.0.2.3.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros; only 1: intros x x' Hxx'; only 1: auto).	1.52380800247	287
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	18.16	synth with cache (only 1: simpl_crelation; only 1: firstorder).	31.534662962	24087
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0218510627747	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	0.0.1.0.0.1.8.0	synth with cache (only 1: intros A B C RA RB RC f mor x y X x0 y0 X0; only 1: split; only 1: apply mor; only 1: auto; only 1: auto; only 1: apply mor; only 1: auto; only 1: auto).	6.21520900726	1503
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0258882045746	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	5.4.0.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: transitivity x0; only 1: auto; only 1: auto).	9.51554989815	3774
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_crelation).	0.0207569599152	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0152790546417	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0170459747314	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.441005945206	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: reflexivity).	0.0220210552216	3
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.11	synth with cache (only 1: intro p; only 1: firstorder).	0.0512819290161	46
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0272681713104	4
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	7.1	synth with cache (only 1: hnf; only 1: auto).	0.0481300354004	15
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0417969226837	3
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.043338060379	2
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.119366168976	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0827729701996	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0222728252411	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0267288684845	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.0.14.1	synth with cache (only 1: intro n; only 1: constructor; only 1: auto; only 1: auto).	0.228166103363	258
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0214929580688	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.0272560119629	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	2.0.1.0.2	synth with cache (only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder).	0.0663139820099	11
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0546281337738	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.105230093002	4
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	2.2.3.3	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	0.415165901184	322
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_relation).	0.0175859928131	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0147759914398	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0164141654968	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.423705101013	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	1.53.16.48	synth with cache (only 1: destruct y; only 1: red; only 1: destruct x; only 1: auto).	4.30232691765	16902
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: reflexivity).	0.00814199447632	3
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.00636291503906	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.00874209403992	4
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	6.1	synth with cache (only 1: hnf; only 1: auto).	0.0205979347229	22
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0217080116272	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0187079906464	2
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.095428943634	2
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0259850025177	2
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.00707006454468	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00805306434631	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	11.8.4.0.1.1.2	synth with cache (only 1: intro n; only 1: induction n; only 1: intro n; only 1: reflexivity || destruct H; only 1: simpl; only 1: intro m; only 1: firstorder).	4.26498889923	10514
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0182120800018	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.01731300354	4
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.340571880341	7
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	1	synth with cache (only 1: firstorder).	0.00943493843079	2
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0162320137024	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.0637540817261	4
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0134479999542	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	2	synth with cache (only 1: repeat split).	0.0233118534088	3
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0205991268158	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0228209495544	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	2.0.7.1.9	synth with cache (only 1: repeat split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	0.85135102272	559
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	3	synth with cache (only 1: firstorder).	0.0350270271301	11
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0316610336304	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	1.2	synth with cache (only 1: reduce; only 1: assumption).	0.0319261550903	5
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0299680233002	1
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	3.5.3	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.795967102051	142
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0354518890381	2
Coq.Classes.Morphisms.Relations.forall_subrelation	40	1	synth with cache (only 1: firstorder).	0.0330541133881	2
Coq.Classes.Morphisms.iff_impl_subrelation	40	1.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0267980098724	3
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: auto).	0.0372009277344	3
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	2.2.17.2	synth with cache (only 1: reduce; only 1: apply mor; only 1: intuition; only 1: intuition).	4.73362803459	3580
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.202685832977	43
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.0822370052338	17
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	1.47015404701	409
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	5	synth with cache (only 1: firstorder).	1.63320183754	413
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	7	synth with cache (only 1: firstorder).	1.90517687798	451
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	5.3	synth with cache (only 1: intros; only 1: firstorder).	0.101788043976	13
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	8.2	synth with cache (only 1: intros R H x x0 y H0; only 1: firstorder).	15.0179979801	1978
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0341410636902	4
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	3.1	synth with cache (only 1: intros R H x x0 y H0 H1; only 1: firstorder).	0.062922000885	17
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0385241508484	5
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	5	synth with cache (only 1: firstorder).	0.0242791175842	6
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	2.1.0.0.0.1	synth with cache (only 1: split; only 1: reduce; only 1: simpl_relation; only 1: reduce; only 1: apply H; only 1: simpl_relation).	0.100782155991	10
Coq.Classes.Morphisms.GenericInstances.flip1	40	2	synth with cache (only 1: apply H).	0.0239779949188	3
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0247581005096	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_relation).	0.0322229862213	2
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0179219245911	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0190048217773	1
Coq.Classes.Morphisms.proper_proper	40	1.0.6.0	synth with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).	0.702377080917	177
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	7	synth with cache (only 1: firstorder).	0.04518699646	8
Coq.Classes.Morphisms.Normalize.flip_atom	40	1	synth with cache (only 1: firstorder).	0.0214991569519	2
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.1	synth with cache (only 1: intros R H x y H0 y0 y1 e H2; only 1: simpl_relation).	0.0422949790955	3
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.2.12	synth with cache (only 1: compute; only 1: intros C decide H P H0; only 1: auto).	5.60055088997	1369
Coq.Classes.Morphisms.proper_sym_impl_iff	40	1.0.8.4.3.5	synth with cache (only 1: intro n; only 1: intros R H x x0 y H0; only 1: firstorder; only 1: setoid_rewrite  <- H; only 1: simpl_relation; only 1: assumption).	20.0420880318	8586
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	0.0.4.0.0.4.9.3	synth with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: split; only 1: apply H; only 1: auto; only 1: auto; only 1: apply H; only 1: auto; only 1: auto).	28.0447490215	10956
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	1	synth with cache (only 1: firstorder).	0.00941610336304	2
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0096640586853	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0281870365143	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.00904107093811	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0241260528564	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0207898616791	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.29814696312	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.0129699707031	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.0153560638428	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.00996685028076	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.0095419883728	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.0	synth with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: firstorder).	0.0129199028015	2
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.0100440979004	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.0.0	synth with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0187790393829	3
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	2.15.0.1.0	synth with cache (only 1: repeat red; only 1: intro l; only 1: intros; only 1: compute in *; only 1: intuition).	1.43783712387	1342
Coq.Classes.DecidableClass.Decidable_sound	40	0.10.6.10	synth with cache (only 1: intro x; only 1: intros; only 1: apply H; only 1: assumption).	1.99714517593	3481
Coq.Classes.DecidableClass.Decidable_complete	40	4.0.0.1.3.0.12.3.12	synth with cache (only 1: intro p; only 1: intros n m; only 1: case n; only 1: simpl; only 1: intro H; only 1: destruct H; only 1: auto; only 1: intros [? ?]; only 1: auto).	13.3519530296	25879
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_not_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.5.12	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool).	0.887465000153	501
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	1.0.19	synth with cache (only 1: <Coq.Strings.Ascii.t_eqb>; only 1: now apply beq_nat_true; only 1: apply Nat.eqb_refl).	2.13154196739	1575
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	5.0.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply Nat.leb_le).	0.119677066803	21
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	9	synth with cache (only 1: simpl_relation).	0.0534338951111	35
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0171339511871	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0166430473328	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	4.0	synth with cache (only 1: intros x y H x0 y0 H0 x1 x2; only 1: firstorder).	0.585014104843	24
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.0746660232544	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	1.5	synth with cache (only 1: intros x x' Hxx'; only 1: firstorder).	0.0388882160187	8
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	synth with cache (only 1: do 2 red; only 1: auto).	0.0324690341949	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.2	synth with cache (only 1: do 2 red; only 1: now symmetry).	0.295491933823	4
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	3.0	synth with cache (only 1: intro; only 1: auto).	0.032674074173	5
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	2	synth with cache (only 1: firstorder).	0.0326318740845	3
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	3.0.1.0	synth with cache (only 1: unfold to_nat; only 1: rewrite <- (Nat.mul_1_l 1)  at 1; only 1: rewrite <- (Nat.mul_1_l 1)  at 1; only 1: now Nat.nzsimpl).	0.0575938224792	8
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	2.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros <-; only 1: now destruct p).	0.0230770111084	9
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	0.0.18.1	synth with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_gt_iff; only 1: unfold lt; only 1: now rewrite inj_compare, Nat.compare_lt_iff).	18.0958881378	10771
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	2.0.0.0.0.8.1.3	synth with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	3.04438304901	1988
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40	2.0.0.5.3.6	synth with cache (only 1: intros Hy; only 1: intro H2; only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: now intros ->).	2.10897088051	1379
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0171339511871	3
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	2.0.0.0.0.2.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: induction n; only 1: f_equal; only 1: f_equal; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	0.930480003357	609
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	0.0.7.0.8.0.2.9	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	10.7008721828	10400
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	6.0.1.1	synth with cache (only 1: split; only 1: now apply Nat2Pos.inj; only 1: intros; only 1: now Morphisms.f_equiv).	4.25170397758	1820
Coq.PArith.Pnat.SuccNat2Pos.inv	40	4.6.13.1.1	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: intro H; only 1: symmetry in H; only 1: rewrite H; only 1: apply Pos2Nat.id).	10.6527209282	12087
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	9	synth with cache (only 1: auto).	0.0613529682159	33
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	1.0.1.1	synth with cache (only 1: intros; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	0.137845993042	26
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	8.2.4	synth with cache (only 1: intro m; only 1: fix le_div2 1; only 1: trivial).	2.03345894814	1904
Coq.PArith.BinPos.Pos.eq_dec	40	8.0	synth with cache (only 1: intro n; only 1: decide equality).	0.205404043198	44
Coq.PArith.BinPos.Pos.xI_succ_xO	40	2	synth with cache (only 1: reflexivity).	0.0139560699463	3
Coq.PArith.BinPos.Pos.succ_discr	40	28.11.15.7.37	synth with cache (only 1: destruct p; only 1: intro H1; only 1: discriminate; only 1: easy; only 1: Bool.destr_bool).	13.9713351727	37786
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: now destruct p).	0.0176110267639	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.1.0.1.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.262386798859	43
Coq.PArith.BinPos.Pos.double_succ	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0503489971161	7
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	1	synth with cache (only 1: now destruct p).	0.043778181076	2
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.0418791770935	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.0.18.6	synth with cache (only 1: symmetry; only 1: destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: now f_equal).	3.06658697128	3101
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	1.0.0.1.0.5.1.0	synth with cache (only 1: destruct p; only 1: now destruct p; only 1: intro H; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: intros; only 1: now f_equal).	36.4090340137	11328
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.10.0.3	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: now destruct p; only 1: simpl; only 1: now f_equal).	5.5623691082	2250
Coq.PArith.BinPos.Pos.add_1_r	40	0	synth with cache (only 1: now destruct p).	0.0201711654663	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0194380283356	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	2.12.0	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto using add_no_neutral).	6.18829607964	3161
Coq.PArith.BinPos.Pos.add_cancel_l	40	3.12.1	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto using add_no_neutral).	19.8939678669	12046
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct q; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.0426430702209	7
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0	synth with cache (only 1: split).	0.0167701244354	1
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	synth with cache (only 1: now destruct p).	0.0226249694824	1
Coq.PArith.BinPos.Pos.mul_1_r	40	2.1.0.3.1.1.5	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto using add_1_r; only 1: simpl; only 1: now f_equal; only 1: now rewrite ?add_carry_spec, ?IHp).	2.09049892426	1196
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.6.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).	0.509567975998	119
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.458755970001	107
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.109678030014	1
Coq.PArith.BinPos.Pos.square_xO	40	0.0.9	synth with cache (only 1: rewrite mul_xO_r; only 1: simpl; only 1: f_equal).	0.670732975006	197
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	2.0.0.0.3.0.6.1.2	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: intros A B f; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: split).	5.04678702354	3580
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_succ_r	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_ind	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0530450344086	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	10.1.8	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: now f_equal).	27.9925091267	14416
Coq.PArith.BinPos.Pos.leb_le	40	11.0.3.0	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro m; only 1: easy).	5.77990698814	3054
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	3.7.6	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	1.93902111053	565
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.1.0.0.0.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	0.210527896881	42
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.2.1.1.7.7	synth with cache (only 1: revert q; only 1: intros a; only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct compare; only 1: now split; only 1: now split; only 1: now split).	37.7361528873	12338
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	1.7.7	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	7.7744550705	2346
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0740690231323	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0657150745392	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: now split).	0.0716309547424	8
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0793361663818	8
Coq.PArith.BinPos.Pos.compare_xO_xO	40	2.8	synth with cache (only 1: unfold gt, le, compare; only 1: split).	0.149878025055	41
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.016478061676	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.0.0.1.2.0	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: reflexivity).	0.143952131271	37
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.0.0.5.3.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: reflexivity).	1.05778717995	434
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	5.0.0.0.0.17	synth with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: auto).	2.42978811264	2290
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0.0.0.2	synth with cache (only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0411920547485	7
Coq.PArith.BinPos.Pos.compare_le_iff	40	9	synth with cache (only 1: reflexivity).	0.265920162201	38
Coq.PArith.BinPos.Pos.gt_lt_iff	40	2.3	synth with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.336393117905	57
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0348010063171	2
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0180168151855	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	6.3	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.181433916092	56
Coq.PArith.BinPos.Pos.ge_le	40	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0299108028412	2
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0169379711151	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	0.0.26	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	28.049161911	17680
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	1.14	synth with cache (only 1: unfold le; only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	1.12412810326	695
Coq.PArith.BinPos.Pos.nlt_1_r	40	2	synth with cache (only 1: now destruct p).	0.0603680610657	13
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	synth with cache (only 1: now destruct p).	0.201056957245	36
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0294389724731	2
Coq.PArith.BinPos.Pos.lt_nle	40
Coq.PArith.BinPos.Pos.lt_le_incl	40	9	synth with cache (only 1: congruence).	0.462558984756	55
Coq.PArith.BinPos.Pos.lt_lt_succ	40	0.0.2.2	synth with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: auto).	0.155550956726	20
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	0.0.0.0.8.1.3.0.0	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: intro l; only 1: intro n; only 1: intros H; only 1: rewrite 3!lt_iff_add; only 1: intros (r, Hr) (s, Hs); only 1: exists (r + s); only 1: now rewrite add_assoc, Hr, Hs).	0.948426961899	1096
Coq.PArith.BinPos.Pos.lt_compat	40	3	synth with cache (only 1: solve_proper).	0.2286901474	20
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0280220508575	2
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.3.13	synth with cache (only 1: intro H2; only 1: intros H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	6.27454900742	2581
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.3.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.168717861176	34
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.0.0.3	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.230309963226	54
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.6.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0477080345154	13
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0367619991302	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.3.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0361309051514	6
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0273668766022	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40	0.0.0.1.0.1.0.2.1.6	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_sub_mask; only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: discriminate; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H)).	9.54451394081	6155
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	2	synth with cache (only 1: now destruct p).	0.0239470005035	3
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0236601829529	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0401680469513	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0405478477478	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.3	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.116966962814	19
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40	3.0.1.0.1.5.3	synth with cache (only 1: unfold le, sub; only 1: case sub_mask_spec; only 1: congruence; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).	9.834856987	1235
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0611329078674	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: intros H'; only 1: apply le_nlt in H; only 1: apply le_nlt in H; only 1: now elim H; only 1: constructor).	2.8577029705	1017
Coq.PArith.BinPos.Pos.max_1_l	40	0.1.6.2.32	synth with cache (only 1: induction n; only 1: intuition; only 1: reflexivity || apply f_equal || exfalso; only 1: apply max_l; only 1: easy).	1.18702912331	1293
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0568561553955	9
Coq.PArith.BinPos.Pos.min_1_l	40	0.0.0.1.0.0.0.4	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l).	0.736704826355	281
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0593938827515	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.0.0.2.0.1.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply succ_le_mono).	0.0806918144226	18
Coq.PArith.BinPos.Pos.add_max_distr_l	40	2.0.1.0.0.0.0	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros q r; only 1: unfold le, sub; only 1: rewrite add_compare_mono_l; only 1: easy').	0.0937240123749	17
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.3	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0573379993439	7
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.1	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0399639606476	5
Coq.PArith.BinPos.Pos.mul_max_distr_l	40
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.2	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0326490402222	5
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0399758815765	5
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.6.6.10.0.1.5	synth with cache (only 1: PeanoNat.Nat.induct ltac:(n); only 1: simpl; only 1: auto; only 1: Bool.destr_bool; only 1: reflexivity || apply f_equal || exfalso; only 1: elim H; only 1: trivial).	20.1814131737	21813
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	8.0.7.0.13	synth with cache (only 1: nzinduct n; only 1: trivial; only 1: fix even_spec 1; only 1: intro n; only 1: auto).	18.9249868393	10679
Coq.PArith.BinPos.Pos.succ_of_nat	40	1.1.5.0.0.0.2.2.4	synth with cache (only 1: induction n as [| n IHn]; only 1: easy'; only 1: simpl; only 1: intro H; only 1: destruct n; only 1: now f_equal; only 1: f_equal; only 1: simpl; only 1: auto).	37.4989080429	22610
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40	3.3.9	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: easy).	3.72877907753	2591
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	0.2.43	synth with cache (only 1: fix even_spec 1; only 1: intro q; only 1: auto).	2.37657499313	4516
Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.0.0.1.0	synth with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0442569255829	6
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.0.3.6.4	synth with cache (only 1: intro m; only 1: destruct m; only 1: now intuition; only 1: now intuition; only 1: intuition).	0.89951300621	397
Coq.Arith.Le.le_n_0_eq	40	0.1	synth with cache (only 1: inversion 1; only 1: now subst).	0.0300371646881	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	10.0.0	synth with cache (only 1: fix even_equiv 1; only 1: intro n; only 1: trivial).	0.959270000458	709
Coq.Arith.Even.even_or_odd	40	4.4.50.19	synth with cache (only 1: Nat.induct n; only 1: now intuition; only 1: intro p; only 1: intuition).	16.4588618279	61722
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0229859352112	5
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.0946600437164	1
Coq.Arith.Even.even_even_plus	40	1	synth with cache (only 1: parity_binop).	0.0421171188354	2
Coq.Arith.Even.odd_plus_l	40	0	synth with cache (only 1: parity_binop).	0.0569970607758	1
Coq.Arith.Even.odd_plus_r	40	0	synth with cache (only 1: parity_binop).	0.0392298698425	1
Coq.Arith.Even.odd_even_plus	40	0	synth with cache (only 1: parity_binop).	0.0393779277802	1
Coq.Arith.Even.even_plus_aux	40
Coq.Arith.Even.even_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.040923833847	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0407400131226	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0815351009369	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0437860488892	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0409579277039	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0623121261597	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.041531085968	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0417230129242	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.102232933044	1
Coq.Arith.Even.even_mult_l	40	6	synth with cache (only 1: parity_binop).	0.0453870296478	19
Coq.Arith.Even.even_mult_r	40	0	synth with cache (only 1: parity_binop).	0.0274269580841	1
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0431230068207	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0423429012299	1
Coq.Arith.Even.odd_mult	40	0	synth with cache (only 1: parity_binop).	0.0650269985199	1
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0288779735565	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0278701782227	1
Coq.Arith.Minus.minus_n_O	40	0	synth with cache (only 1: now destruct n).	0.0111999511719	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	synth with cache (only 1: now Nat.nzsimpl').	0.0210011005402	1
Coq.Arith.Minus.minus_diag_reverse	40	1.0.1.0	synth with cache (only 1: Nat.induct ltac:(n); only 1: split; only 1: intros n IH; only 1: now rewrite IH).	0.0296821594238	6
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	2.1.5	synth with cache (only 1: Nat.induct p; only 1: now Nat.nzsimpl; only 1: auto).	0.686064958572	134
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	2.2.1.20	synth with cache (only 1: induction n; only 1: simpl; only 1: apply Nat.sub_0_r; only 1: auto).	0.499639034271	488
Coq.Arith.Minus.le_plus_minus_r	40	0.0.0.0.1.0.6.1.0.0.0.1	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intros a ?; only 1: now Nat.nzsimpl; only 1: simpl; only 1: intro m; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	35.4746670723	17685
Coq.Arith.Minus.le_plus_minus	40	0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intros a ?; only 1: now Nat.nzsimpl; only 1: intros m H; only 1: destruct m; only 1: inversion H; only 1: simpl; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	2.25263690948	917
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	7.14.15	synth with cache (only 1: intros n m; only 1: induction 1; only 1: left).	24.5619459152	17987
Coq.Arith.Between.Between.between_le	40	1.1.16.2	synth with cache (only 1: intros x y H; only 1: elim H; only 1: left; only 1: auto).	7.74474406242	2581
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40
Coq.Arith.Between.Between.exists_le_S	40	0.0.2	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.171378850937	31
Coq.Arith.Between.Between.exists_S_le	40	0.0.1.5.7.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix le_div2 1; only 1: destruct n; only 1: trivial; only 1: trivial).	7.94871807098	4105
Coq.Arith.Between.Between.in_int_intro	40	0.0.0.8	synth with cache (only 1: fix gcd_greatest 1; only 1: intros [| a] b; only 1: auto; only 1: auto).	0.546201944351	161
Coq.Arith.Between.Between.in_int_lt	40	12.4.4	synth with cache (only 1: intros n m p; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order).	7.27296996117	2294
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).	0.0320520401001	2
Coq.Arith.Between.Between.in_int_Sp_q	40	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).	0.0298278331757	2
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	0.1.14	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	2.01642513275	1264
Coq.Arith.Between.Between.exists_in_int	40	0.0.0.29	synth with cache (only 1: fix gcd_divide 1; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	4.99726104736	4154
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40	0.9.0.18.74.1	synth with cache (only 1: inversion 1; only 1: revert H H0; only 1: intro m; only 1: inversion 1; only 1: subst; only 1: auto with arith).	25.138641119	80057
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	0.0.3.1.0.3.2.1.12	synth with cache (only 1: Nat.induct n; only 1: intro H; only 1: now left; only 1: intro; only 1: Nat.cases m; only 1: intro m; only 1: now right; only 1: intros; only 1: now right).	22.6055340767	22679
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	0.0.1.10.0.0	synth with cache (only 1: intros A A_wd A0 AS; only 1: assert (D : forall n, A n /\ A (S n)); only 1: fix le_div2 1; only 1: assumption; only 1: intro n; only 1: exact (proj1 (D n))).	3.31552600861	1975
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	3.0.9	synth with cache (only 1: fix even_equiv 1; only 1: intro m; only 1: auto using div2_odd, div2_even, odd_div2, even_div2).	0.284331083298	285
Coq.Arith.Div2.odd_S2n	40	0.0.1	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0301468372345	21
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.152527093887	64
Coq.Arith.Div2.div2_double_plus_one	40	1.11	synth with cache (only 1: rewrite Nat.div2_succ_double; only 1: Nat.Private_Tac.order).	0.938602924347	663
Coq.Arith.Plus.plus_assoc_reverse	40	10.1.0.3.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: intro; only 1: auto; only 1: intuition).	29.0106620789	8434
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	1	synth with cache (only 1: apply Nat.add_le_mono_l).	0.0081729888916	2
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	0	synth with cache (only 1: apply Nat.add_le_mono).	0.0105180740356	1
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40	14.5.1.14	synth with cache (only 1: induction 1; only 1: apply Nat.le_add_r; only 1: Nat.nzsimpl; only 1: auto).	7.96035885811	13222
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	2.4.0.0.0.2.0.1.4	synth with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: split; only 1: now Nat.nzsimpl; only 1: assumption; only 1: intros n IH; only 1: Nat.nzsimpl; only 1: intro H; only 1: now split).	6.78903198242	3589
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	0.15.5.2	synth with cache (only 1: induction n; only 1: auto; only 1: Nat.nzsimpl; only 1: auto).	31.1535100937	17115
Coq.Arith.Lt.lt_le_S	40	0.0.2.0.1	synth with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order; only 1: intros n IH; only 1: Nat.order).	0.088641166687	8
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.0292611122131	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.1.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0482380390167	4
Coq.Arith.Lt.le_not_lt	40	0.1.5	synth with cache (only 1: revert m; only 1: intros m IH; only 1: Nat.order).	0.699079990387	108
Coq.Arith.Lt.lt_not_le	40	1.0.0.0.4	synth with cache (only 1: Nat.cases m; only 1: intro H; only 1: Nat.order; only 1: intros m IH; only 1: Nat.order).	0.298214912415	54
Coq.Arith.Lt.neq_0_lt	40	0.1	synth with cache (only 1: intro H; only 1: Nat.auto').	0.602598905563	124
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0550889968872	4
Coq.Arith.Lt.lt_n_S	40	0	synth with cache (only 1: apply le_n_S).	0.0247390270233	1
Coq.Arith.Lt.lt_S_n	40	0	synth with cache (only 1: apply le_S_n).	0.0255470275879	1
Coq.Arith.Lt.S_pred	40	1.0.2.0	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros; only 1: auto).	0.101567983627	20
Coq.Arith.Lt.S_pred_pos	40	0.4.2.1	synth with cache (only 1: Nat.cases n; only 1: Nat.order; only 1: intro m; only 1: trivial).	0.565136909485	201
Coq.Arith.Lt.lt_pred	40	0.4.19	synth with cache (only 1: destruct m; only 1: easy; only 1: apply Nat.succ_lt_mono).	1.98407006264	1405
Coq.Arith.Lt.lt_pred_n_n	40	1.0.1.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: simpl; only 1: intros _; only 1: auto).	0.0742700099945	14
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	22.1774001122	9902
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.708256959915	182
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0209939479828	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rect1	40
Coq.Arith.Wf_nat.lt_wf_rect	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0176560878754	1
Coq.Arith.Wf_nat.lt_wf_rec1	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.0166220664978	1
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.0173709392548	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.0169239044189	1
Coq.Arith.Wf_nat.gt_wf_rect	40	0.0.0.0	synth with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto with arith).	0.0332639217377	4
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact lt_wf_rect).	0.0177750587463	1
Coq.Arith.Wf_nat.lt_wf_double_rect	40
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.0612461566925	7
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.0578689575195	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	12.1.6.4.0	synth with cache (only 1: Nat.induct ltac:(n); only 1: Nat.order'; only 1: intro m; only 1: simpl; only 1: intuition).	6.71128892899	7164
Coq.Arith.Factorial.fact_neq_0	40	2.9.7.35	synth with cache (only 1: nzinduct n; only 1: easy; only 1: fix odd_spec 1; only 1: intuition).	32.0311040878	42059
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	26.0.0.38	synth with cache (only 1: induction n; only 1: now left; only 1: right; only 1: intuition).	9.5265519619	15666
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.0.12.3.0.0.3.0	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	30.8865890503	15267
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.2.0.0	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m as [| m]; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.868885993958	264
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.158066034317	34
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40
Coq.Arith.Compare_dec.lt_dec	40	6.0.0.7.2.1.3.3	synth with cache (only 1: destruct m as [| m]; only 1: auto with arith; only 1: destruct (le_gt_dec n m); only 1: destruct (le_gt_dec n m); only 1: auto with arith; only 1: right; only 1: auto with arith; only 1: auto with arith).	30.4954841137	18586
Coq.Arith.Compare_dec.gt_dec	40	2	synth with cache (only 1: apply le_dec).	0.0469121932983	23
Coq.Arith.Compare_dec.ge_dec	40	1	synth with cache (only 1: apply le_dec).	0.0178718566895	2
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	4	synth with cache (only 1: apply Nat.le_decidable).	0.0956001281738	23
Coq.Arith.Compare_dec.dec_gt	40	1	synth with cache (only 1: apply Nat.lt_decidable).	0.0932650566101	19
Coq.Arith.Compare_dec.dec_ge	40	2	synth with cache (only 1: apply Nat.le_decidable).	0.0297870635986	12
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0192420482635	1
Coq.Arith.Compare_dec.not_le	40	2	synth with cache (only 1: apply Nat.lt_nge).	0.0209629535675	3
Coq.Arith.Compare_dec.not_gt	40	2	synth with cache (only 1: apply Nat.le_ngt).	0.0210208892822	3
Coq.Arith.Compare_dec.not_ge	40	1	synth with cache (only 1: apply Nat.nle_gt).	0.0212798118591	2
Coq.Arith.Compare_dec.not_lt	40	1	synth with cache (only 1: apply Nat.nlt_ge).	0.0204679965973	2
Coq.Arith.Compare_dec.nat_compare_lt	40	4.8.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	10.2694449425	4145
Coq.Arith.Compare_dec.nat_compare_gt	40	5.4.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	6.8529651165	2527
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	2.0.1.0.0.3.1.1.3.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: destruct m; only 1: auto; only 1: easy; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	29.6964280605	14370
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	synth with cache (only 1: apply Nat.compare_lt_iff).	0.018846988678	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	2.5.6	synth with cache (only 1: revert m; only 1: intros H; only 1: apply Nat.compare_gt_iff).	0.412508964539	159
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	3.3.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.968149900436	200
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	5.0.0.0.0.0.2	synth with cache (only 1: induction n as [| n IHn]; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: apply Nat.leb_le).	9.02948307991	3528
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0356328487396	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.0302631855011	3
Coq.Arith.Compare_dec.leb_compare	40	12.4.1	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	29.2328548431	12761
Coq.Arith.EqNat.eq_nat_refl	40	3.1.6	synth with cache (only 1: induction n; only 1: constructor; only 1: trivial).	0.0953829288483	64
Coq.Arith.EqNat.eq_nat_is_eq	40	4.0.6.7	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: auto).	14.7120640278	6805
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.1.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0418739318848	7
Coq.Arith.EqNat.eq_nat_eq	40	2.1.0.1.0	synth with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: apply eq_nat_is_eq).	0.796211957932	142
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.2.0.1.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: intro m; only 1: simpl; only 1: destruct m as [| m]; only 1: auto; only 1: auto; only 1: intro m; only 1: destruct m as [| m]; only 1: auto; only 1: destruct (IHn m); only 1: auto; only 1: now right).	10.4102759361	4557
Coq.Arith.EqNat.beq_nat_refl	40	0.0.0.1.0.50.6	synth with cache (only 1: symmetry; only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite ?IHn; only 1: easy).	2.56134104729	7427
Coq.Arith.EqNat.beq_nat_true	40	0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: Nat.double_induct n m; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: Bool.destr_bool; only 1: intros n m IH H1; only 1: auto).	1.07460021973	292
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	synth with cache (only 1: destr_bool).	0.00726103782654	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	0.2.2.3.2.6	synth with cache (only 1: intros A B f r H; only 1: unfold respectful; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	3.31159996986	2944
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0136229991913	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.00701308250427	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.00737118721008	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.00731897354126	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0188000202179	5
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0212869644165	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0216128826141	6
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0190579891205	5
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0133337974548	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.0.1.0.1	synth with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: split).	0.028657913208	12
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	19.9043309689	12329
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.0.0.0.0.0.0.1.1.0.4	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	16.609869957	7851
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.0.0.0.0.0.0.0.1.0.0.0.8	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	27.3696222305	18132
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	3	synth with cache (only 1: inversion 1).	0.199043035507	21
Coq.Arith.PeanoNat.Nat.pow_0_r	40	2	synth with cache (only 1: now nzsimpl').	0.0123889446259	3
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	2.2.0.0	synth with cache (only 1: simpl; only 1: inversion 1; only 1: now f_equiv; only 1: trivial).	0.0289480686188	8
Coq.Arith.PeanoNat.Nat.square_spec	40	3	synth with cache (only 1: now nzsimpl).	0.0120279788971	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.18.35.15	synth with cache (only 1: intro n; only 1: case n; only 1: intros H; only 1: now nzsimpl).	12.7288899422	23763
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	5.1.0.0	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: now split).	0.139457941055	38
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0137248039246	3
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	7.1	synth with cache (only 1: inversion 1; only 1: trivial).	0.0474491119385	43
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.00965094566345	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	10	synth with cache (only 1: apply le_0_l).	0.043937921524	30
Coq.Arith.PeanoNat.Nat.div2_double	40	0.1.6.0.0.0.6.5	synth with cache (only 1: simpl; only 1: nzinduct n; only 1: simpl; only 1: auto; only 1: intro; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	12.3073940277	5629
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.0.1.3	synth with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.0411248207092	10
Coq.Arith.PeanoNat.Nat.le_div2	40	0.10.0.15	synth with cache (only 1: cases ltac:(n); only 1: trivial; only 1: fix odd_spec 1; only 1: trivial).	11.5443651676	13755
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	1.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0229320526123	3
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.1.4.1	synth with cache (only 1: destr_bool; only 1: nzinduct n; only 1: reflexivity; only 1: intros; only 1: now nzsimpl).	0.163552999496	53
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	0.13.6.0.3.3.1.2	synth with cache (only 1: simpl; only 1: unfold odd; only 1: apply eq_true_iff_eq; only 1: nzsimpl; only 1: simpl; only 1: repeat split; only 1: fix even_spec 1; only 1: assumption).	7.67991399765	5846
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	4.14	synth with cache (only 1: fix gcd_greatest 1; only 1: assumption).	3.31178307533	2724
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.0	synth with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0136749744415	3
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	7.9.0.2	synth with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: solve_max; only 1: solve_max).	24.4630491734	16542
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	synth with cache (only 1: trivial).	0.00800895690918	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.00909686088562	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	6.0	synth with cache (only 1: intros x y; only 1: Nat.order).	0.0165498256683	8
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0239369869232	1
Coq.Arith.Gt.gt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0247910022736	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	0.1.3	synth with cache (only 1: destruct m; only 1: apply Nat.lt_succ_lt_pred; only 1: apply Nat.succ_lt_mono).	0.0884749889374	20
Coq.Arith.Gt.le_not_gt	40	0	synth with cache (only 1: apply Nat.le_ngt).	0.0343549251556	1
Coq.Arith.Gt.gt_not_le	40	1	synth with cache (only 1: apply Nat.lt_nge).	0.0325920581818	2
Coq.Arith.Gt.le_S_gt	40	7.7	synth with cache (only 1: intros; only 1: auto).	1.86021590233	560
Coq.Arith.Gt.gt_S_le	40	1	synth with cache (only 1: apply Peano.le_S_n).	0.0309138298035	2
Coq.Arith.Gt.gt_le_S	40	0	synth with cache (only 1: apply Nat.le_succ_l).	0.0312190055847	1
Coq.Arith.Gt.le_gt_S	40	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.0289628505707	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	1.0.1.11	synth with cache (only 1: induction n; only 1: right; only 1: auto; only 1: intuition).	12.1381270885	3619
Coq.Arith.Gt.plus_gt_reg_l	40	11.2.5.3.4	synth with cache (only 1: nzinduct p; only 1: apply Nat.le_succ_l; only 1: simpl; only 1: intro; only 1: intuition).	27.2172470093	8058
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0235538482666	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.15.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.220870018005	387
Coq.Logic.JMeq.JMeq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0129549503326	3
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0109069347382	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0111920833588	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0119390487671	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0125091075897	4
Coq.Logic.JMeq.JMeq_congr	40	2.1.0.1.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0300350189209	12
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0172669887543	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00932383537292	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.00966811180115	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.2.14.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	1.907310009	1941
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	2.7.4.1	synth with cache (only 1: intro m; only 1: intro n; only 1: induction n; only 1: trivial).	0.742072105408	952
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0326931476593	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	6.11	synth with cache (only 1: intuition; only 1: tauto).	0.262656927109	252
Coq.Logic.Classical_Prop.not_imply_elim	40	8.3.5.1	synth with cache (only 1: intro not_eq_b1_b2; only 1: intro H; only 1: intros Hy; only 1: tauto).	1.68295693398	2639
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: apply H; only 1: intro; only 1: absurd P; only 1: auto; only 1: trivial).	0.0237040519714	8
Coq.Logic.Classical_Prop.imply_to_or	40	0.10.3	synth with cache (only 1: Bool.destr_bool; only 1: apply NNPP; only 1: tauto).	0.901130914688	904
Coq.Logic.Classical_Prop.imply_to_and	40	4.7	synth with cache (only 1: intros A P H; only 1: tauto).	1.43743491173	911
Coq.Logic.Classical_Prop.or_to_imply	40	0	synth with cache (only 1: tauto).	0.0102260112762	1
Coq.Logic.Classical_Prop.not_and_or	40	0.12	synth with cache (only 1: intros n m; only 1: tauto).	0.465620040894	308
Coq.Logic.Classical_Prop.or_not_and	40	2.1.3.0	synth with cache (only 1: intros; only 1: red; only 1: intro; only 1: tauto).	0.116893053055	30
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0876619815826	1
Coq.Logic.Classical_Prop.and_not_or	40	2.0	synth with cache (only 1: simple induction 1; only 1: tauto).	0.055037021637	31
Coq.Logic.Classical_Prop.imply_and_or	40	0	synth with cache (only 1: tauto).	0.00774598121643	1
Coq.Logic.Classical_Prop.imply_and_or2	40	6	synth with cache (only 1: tauto).	0.0421600341797	39
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.6.10	synth with cache (only 1: intro m; only 1: destruct m; only 1: eauto).	0.156624078751	379
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	3.31	synth with cache (only 1: red; only 1: eauto).	0.150125026703	627
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	0.0.0.0.0.1.0.2.0.1.0.0	synth with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: apply p2b; only 1: exact b2p; only 1: exact B; only 1: exact h; only 1: cbn; only 1: auto; only 1: auto; only 1: auto).	1.27326893806	1039
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	5.3	synth with cache (only 1: intros n' Hn'; only 1: firstorder).	0.0222318172455	10
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	2.5.10	synth with cache (only 1: intro m; only 1: split; only 1: abstract now inversion 1).	0.250287055969	291
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	0.0.0.0.0.0.0.0.1.1.0.0.1.0.0.1.1.0.4.0	synth with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).	21.1438829899	12537
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	40.1	synth with cache (only 1: intro m; only 1: firstorder).	10.5740318298	23156
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0607039928436	11
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.5.0.6.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.599519014359	463
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	0.11.6.5	synth with cache (only 1: intros; only 1: intros x HPx; only 1: apply H; only 1: firstorder).	5.59894895554	3874
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	31.7834391594	13280
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	0.0.0.0.6.0.3.0.0	synth with cache (only 1: intros A B SetoidFunChoice R T Hequiv Hexists; only 1: firstorder; only 1: destruct SetoidFunChoice with (R := R) (T := T) as (f, Hf); only 1: easy; only 1: firstorder; only 1: exists f; only 1: intros x; only 1: specialize Hf with x as (Hf, Huniq); only 1: intuition).	27.2708740234	1431
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.6.0.9.0.0	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: exact eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	4.73084211349	2366
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	3.14.8.20	synth with cache (only 1: destruct a, b; only 1: simpl in *; only 1: destruct e; only 1: reflexivity).	0.69567489624	2474
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	8.0.0.3.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: auto).	0.247560977936	514
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	9.8.0.14.0	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: auto; only 1: auto).	2.85635399818	10876
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	0.0.1.0.0	synth with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.051637172699	6
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	4.0.14	synth with cache (only 1: intros x y H'; only 1: apply NNPP; only 1: firstorder).	5.48134803772	4470
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	1.0.2.1	synth with cache (only 1: intro abs; only 1: intros (c, Hc); only 1: intro all; only 1: auto).	0.337954998016	121
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	15.14.0	synth with cache (only 1: unfold not; only 1: intros a H; only 1: firstorder).	26.9746198654	25068
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.1	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0602850914001	14
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	17.660602808	7122
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	33.11.6.7.0.4	synth with cache (only 1: pose (A0 := {A : Type & {P : A -> Prop & exists x, P x}}); only 1: pose (H0 := fun x : A0 => projT2 (projT2 x)); only 1: simpl in *; only 1: pose (B0 := fun x : A0 => projT1 x); only 1: red; only 1: eauto).	31.6313788891	14694
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.013699054718	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0	synth with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: apply decide; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).	25.263767004	12198
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.011754989624	3
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0109639167786	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0129449367523	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0136070251465	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	5.10.0.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.364075899124	516
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	synth with cache (only 1: reflexivity).	0.00803112983704	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	synth with cache (only 1: eauto using @functional_extensionality_dep).	0.00822615623474	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.012176990509	4
Coq.Logic.HLevels.false_hprop	40	0.0	synth with cache (only 1: intros p q; only 1: destruct p, q).	0.00692105293274	2
Coq.Logic.HLevels.true_hprop	40	0.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).	0.00961589813232	4
Coq.Logic.HLevels.not_hprop	40	0.1.0.4	synth with cache (only 1: intros h1 h2; only 1: intro n; only 1: apply functional_extensionality; only 1: contradiction).	0.0277869701385	29
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.3.20.0.0.8.0	synth with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: firstorder; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: firstorder; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	21.94968009	22128
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.5.1.0.10	synth with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.434684038162	326
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.0252208709717	2
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	2.35.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	1.11344695091	2150
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	2.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0383539199829	14
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.11.0.0.8.10	synth with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	3.00644493103	3828
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	synth with cache (only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0419719219208	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0291910171509	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.11.0.0.12.0	synth with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	3.28952407837	3164
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.1.0	synth with cache (only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.113746881485	12
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.2.5	synth with cache (only 1: dependent rewrite H; only 1: destruct H; only 1: split).	0.23983502388	85
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	26.1.5.7	synth with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto).	2.77970504761	4070
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	0.4.0.15.15.23.25.6	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: destruct p1; only 1: intro H; only 1: rewrite <- eq_rect_eq; only 1: reflexivity; only 1: destruct H; only 1: apply eq_dep_intro).	29.7810759544	91687
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	11.0.0.0	synth with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros p2; only 1: auto).	0.7275390625	415
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	1.6.1.3.4.2	synth with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros p2; only 1: rewrite H; only 1: apply UIP).	2.83449196815	4164
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	2.11.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.475982904434	337
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0876009464264	27
Coq.Logic.EqdepFacts.f_eq_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0578989982605	18
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.2	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.100218772888	46
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.027193069458	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	5.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: intros x; only 1: auto).	0.0228040218353	28
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0239980220795	31
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	1.50	synth with cache (only 1: intros [HypL HypR]; only 1: assumption).	10.3365950584	26597
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	4.4.0.0.0.8.0	synth with cache (only 1: intro A; only 1: intro H1; only 1: unfold not; only 1: intro H; only 1: elim H1; only 1: auto; only 1: contradiction).	3.45985007286	8945
Coq.Logic.Decidable.dec_True	40	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: auto).	0.00895023345947	3
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.00684404373169	2
Coq.Logic.Decidable.dec_or	40	1.1.7.10	synth with cache (only 1: intro H; only 1: intro p; only 1: unfold decidable; only 1: tauto).	2.7036421299	5533
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0183470249176	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0114150047302	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.014533996582	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0817179679871	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00997304916382	2
Coq.Logic.Decidable.not_or	40	0	synth with cache (only 1: tauto).	0.00872683525085	1
Coq.Logic.Decidable.not_and	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0167660713196	3
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0161240100861	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.011078119278	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.03382396698	2
Coq.Logic.Decidable.not_true_iff	40	0.1.2.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: apply H; only 1: split; only 1: intros h1 h2; only 1: apply h1).	0.0119171142578	9
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.00644612312317	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0112969875336	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0135281085968	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.016706943512	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0350961685181	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0167801380157	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.017256975174	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0175669193268	2
Coq.Logic.Decidable.not_or_iff	40	8.0	synth with cache (only 1: intros; only 1: tauto).	0.0245471000671	22
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.00913500785828	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0191338062286	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0195341110229	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0172429084778	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	2.0.0.0	synth with cache (only 1: intro EQ; only 1: symmetry in EQ; only 1: revert EQ; only 1: now try Z.order').	0.0261240005493	6
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	1	synth with cache (only 1: assumption).	0.0292830467224	2
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0284531116486	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	53.3.0	synth with cache (only 1: intros; only 1: simpl; only 1: firstorder).	8.10094714165	7541
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	46.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: firstorder).	13.3292632103	7263
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	13.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	2.00197982788	500
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.54267406464	43
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.0540790557861	10
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.0142269134521	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0163779258728	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	11	synth with cache (only 1: auto).	0.0779438018799	55
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	7	synth with cache (only 1: eauto).	0.0512928962708	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	15.0	synth with cache (only 1: rewrite rsub_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	15.5352098942	258
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	27	synth with cache (only 1: eauto).	4.47024083138	1107
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	4.2.3.2.2.0	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	27.1489419937	810
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.709466934204	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.686986923218	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	5.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.864838838577	9
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	4.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	0.906795024872	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.730597019196	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	6.85670208931	20
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	0.0	synth with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	1.77884697914	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	3.0	synth with cache (only 1: intros; only 1: now destruct 1).	3.78564310074	11
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0109021663666	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0121920108795	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00906610488892	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	3.7.1.0	synth with cache (only 1: repeat split; only 1: congruence; only 1: intros n Hn; only 1: congruence).	1.76560211182	614
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	2.0.3.0.4.1	synth with cache (only 1: induction x; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros x y H7; only 1: reflexivity).	3.33509302139	947
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	0.6.0	synth with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.0797920227051	9
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.0.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.16310095787	10
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40
Coq.setoid_ring.Rings_R.R_one_zero	40	0	synth with cache (only 1: auto with real).	0.0460939407349	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	3	synth with cache (only 1: reflexivity).	0.00985097885132	4
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0	synth with cache (only 1: now rewrite ?H, ?IHp).	0.0147631168365	1
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	38	synth with cache (only 1: firstorder).	0.621903896332	1202
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	2.2.2.11.1.1.1.8	synth with cache (only 1: split; only 1: red; only 1: reflexivity; only 1: congruence; only 1: intro n; only 1: intros x y; only 1: simple destruct 1; only 1: CRelationClasses.simpl_crelation).	3.23808193207	5428
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	6.6.5	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	0.73765707016	638
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.50	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.54683804512	1444
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	1	synth with cache (only 1: firstorder).	0.0344939231873	11
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	3	synth with cache (only 1: firstorder).	0.0354762077332	12
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	3	synth with cache (only 1: firstorder).	0.0108370780945	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	6	synth with cache (only 1: firstorder).	0.0403039455414	20
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	3	synth with cache (only 1: reflexivity).	0.0104289054871	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.7	synth with cache (only 1: intros a b; only 1: reflexivity).	0.0130739212036	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.00879406929016	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	14	synth with cache (only 1: now split).	0.407209873199	288
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	4	synth with cache (only 1: firstorder).	0.0238192081451	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	6.3.8	synth with cache (only 1: intros x y EQ WF; only 1: intro; only 1: firstorder).	0.576519966125	327
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	14.6	synth with cache (only 1: intuition; only 1: firstorder).	0.899811029434	542
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	11.2.9	synth with cache (only 1: intro y0; only 1: intro Hxz; only 1: firstorder).	1.2328441143	1872
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	6.5.15	synth with cache (only 1: intro H; only 1: intros; only 1: firstorder).	1.52788305283	541
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	11.11	synth with cache (only 1: intro H; only 1: firstorder).	0.423333883286	336
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	27	synth with cache (only 1: firstorder).	1.80023002625	1483
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	8	synth with cache (only 1: auto).	0.0143530368805	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	50	synth with cache (only 1: firstorder).	0.623553991318	1813
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	17.0.2	synth with cache (only 1: elim ARth; only 1: intros; only 1: firstorder).	0.580504894257	643
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.0149850845337	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.0997779369354	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	0.0.12.0.0.7.1.0	synth with cache (only 1: mrewrite; only 1: elim ARth; only 1: intros H1 H2 H3 n; only 1: elim ARth; only 1: intros; only 1: f_equiv; only 1: trivial; only 1: trivial).	22.4879200459	3950
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0284259319305	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.02792096138	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0236961841583	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.2	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0575640201569	4
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0261340141296	1
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.4.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0494689941406	7
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.0.0.0.0.0.0.0.10.1.0	synth with cache (only 1: intro n; only 1: intro m; only 1: destruct n, m; only 1: now try N.order'; only 1: simpl; only 1: now try N.order'; only 1: simpl; only 1: congruence; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	5.33906888962	4102
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	58.3	synth with cache (only 1: intros x y H; only 1: firstorder).	28.9644730091	20128
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0280239582062	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0286531448364	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0234868526459	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0256958007812	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).	4.81266903877	790
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	1.0.0.1	synth with cache (only 1: induction x as [| n x IHx]; only 1: norm; only 1: simpl; only 1: reflexivity).	0.0823559761047	15
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0370018482208	1
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0395159721375	2
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0368659496307	3
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0415170192719	4
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	0.0.57	synth with cache (only 1: constructor; only 1: intros; only 1: reflexivity).	8.09334897995	1786
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	22.0.20.17	synth with cache (only 1: red; only 1: intros n m; only 1: apply Ncring_initial.Zsth; only 1: auto with zarith).	13.3444640636	6151
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	14.12	synth with cache (only 1: intros; only 1: firstorder).	1.78575706482	1314
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	14.12.3.12	synth with cache (only 1: intros n1 m1 H; only 1: elim ARth; only 1: intro n; only 1: firstorder).	4.84556818008	4794
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	12.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	3.07743096352	1354
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	13.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	2.85559105873	1021
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	94.5	synth with cache (only 1: simpl; only 1: firstorder).	13.0653319359	20358
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	97.0	synth with cache (only 1: simpl; only 1: firstorder).	18.8667411804	30333
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P as [| | P2 IHP1 p P3 IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	19.7490780354	2981
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	0.0.1.0.0.1.0.0.3.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P as [| | P2 IHP1 p P3 IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	24.3640589714	4675
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	3.1.1.0.5.1	synth with cache (only 1: intros c lm; only 1: induction lm as [| a lm IHlm]; only 1: intros lm; only 1: Esimpl; only 1: intros lm; only 1: Esimpl).	39.5002009869	3687
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).	25.5789439678	1566
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0	synth with cache (only 1: reflexivity).	0.0117089748383	1
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	45	synth with cache (only 1: firstorder).	14.1809492111	11508
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.0.0.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0436210632324	4
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	0.5.12.9.5.14	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_comm; only 1: rewrite ring_add_assoc; only 1: rewrite (ring_add_comm y); only 1: reflexivity).	32.7095069885	13689
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.0.0.8.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.303566217422	80
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.1.2.3	synth with cache (only 1: intros w1; only 1: intros Hn Hn'; only 1: apply Zeq_bool_eq; only 1: auto).	0.0512030124664	27
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0166208744049	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	11	synth with cache (only 1: intuition).	0.0233240127563	33
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0514121055603	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0	synth with cache (only 1: destruct s; only 1: now auto; only 1: simpl; only 1: ok).	0.0260491371155	4
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.97835111618	686
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.0108938217163	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.012069940567	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.0430200099945	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.1.1.2.6.0	synth with cache (only 1: induct s x; only 1: inv; only 1: intuition_in; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.702881097794	263
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0112819671631	1
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	1.1.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.092099905014	7
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	2.71	synth with cache (only 1: intros a H; only 1: now simpl).	0.620921850204	3410
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	4.11.0	synth with cache (only 1: intros Hf; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	1.32020497322	596
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	synth with cache (only 1: now rewrite partition_spec).	0.0162498950958	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.014543056488	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	7.2.1	synth with cache (only 1: revert l1 l2; only 1: induction 1; only 1: now constructor).	0.198343038559	163
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.1.0.1.0.0.0.2	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	0.90905714035	249
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.1.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.050281047821	9
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.0.0.0.0.0.3.0.13	synth with cache (only 1: inversion 1; only 1: invrb; only 1: trivial; only 1: invrb; only 1: destruct t as [| [| ] l x r]; only 1: invrb; only 1: invrb; only 1: auto; only 1: ok).	2.86352491379	2944
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0422639846802	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	94.19.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: ok).	17.701597929	56157
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.7.0.26.0.6	synth with cache (only 1: invrb; only 1: destruct t; only 1: now f_equal; only 1: simpl; only 1: invrb; only 1: auto).	18.9582700729	23577
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	3.0.5.4.12	synth with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: reflexivity; only 1: descolor; only 1: destruct 1; only 1: firstorder  (subst; auto)).	30.2777998447	19062
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.3.3.1.0.2.1.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: right; only 1: assumption; only 1: intros; only 1: descolor; only 1: auto; only 1: ok).	1.97716808319	1667
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	4.0	synth with cache (only 1: invrb; only 1: auto).	0.0140020847321	6
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0	synth with cache (only 1: now Nat.nzsimpl).	0.0231001377106	1
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	1.0.1.1.0	synth with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.0338931083679	8
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	3.3	synth with cache (only 1: unfold partition, filter; only 1: auto_tc).	0.0179870128632	8
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.2.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0235638618469	7
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.5.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0602688789368	24
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.1.0.0.0.0.5	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.835481882095	451
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0429890155792	10
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.7.0.0.12.1	synth with cache (only 1: unfold union; only 1: intuition; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	15.5413160324	12316
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.4.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.259747028351	130
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	0.0.0.10.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	2.10135889053	1512
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	2.2.1	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).	0.175929069519	25
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	44	synth with cache (only 1: firstorder).	0.77251791954	990
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	5.2.4	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: easy).	1.13917613029	295
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	synth with cache (only 1: now intro n; induction n).	0.0405621528625	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	12.38	synth with cache (only 1: intros EQ; only 1: now discriminate).	0.93573307991	1537
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	8.2	synth with cache (only 1: fix odd_spec 1; only 1: destr_bool).	1.03973007202	292
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.3	synth with cache (only 1: intros; only 1: now rewrite ?Pos.square_xO).	0.0909190177917	20
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	1.4.0.1.0.7	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: fix even_spec 1; only 1: now split; only 1: fix odd_spec 1; only 1: destr_bool).	3.96887397766	1708
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	7	synth with cache (only 1: destr_bool).	0.100386142731	35
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.118574142456	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0664241313934	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	13.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	1.04809403419	525
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0620241165161	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0717971324921	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.1.17	synth with cache (only 1: intro l; only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	2.50127410889	1949
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	1.3.1.5.2	synth with cache (only 1: unfold compare, equal; only 1: intro n; only 1: induction n; only 1: reflexivity || destruct H; only 1: ct).	1.68169999123	522
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	7.3.7.3	synth with cache (only 1: intro l; only 1: intro; only 1: fix odd_spec 1; only 1: intuition discriminate).	9.39840984344	3986
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	7.2.2.12	synth with cache (only 1: intro H; only 1: intro l; only 1: fix even_spec 1; only 1: auto).	13.5963490009	5630
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0557818412781	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	6.48.1	synth with cache (only 1: intros H; only 1: rewrite H  at 1; only 1: auto with *).	1.9151558876	7029
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0160040855408	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	1.1.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0226829051971	5
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0170080661774	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0172860622406	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0171678066254	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.0.9	synth with cache (only 1: intro Hxy; only 1: rewrite inter_spec; only 1: auto).	0.155315876007	61
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0176801681519	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.10619187355	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0327939987183	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.0.0.0.1.0	synth with cache (only 1: intros E; only 1: split; only 1: rewrite E; only 1: auto; only 1: rewrite E; only 1: auto).	0.0435500144958	15
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	13	synth with cache (only 1: intuition).	0.104479074478	101
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	1	synth with cache (only 1: intuition).	0.0206699371338	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0	synth with cache (only 1: intuition).	0.0188710689545	1
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0	synth with cache (only 1: intuition).	0.027909040451	1
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	6.1	synth with cache (only 1: compute; only 1: intuition).	0.0255479812622	9
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	0.0.9.0.0.9.2.0	synth with cache (only 1: rewrite add_spec; only 1: split; only 1: intros [H| H]; only 1: auto with relations; only 1: auto; only 1: intros [H| H]; only 1: auto with relations; only 1: auto).	29.6733169556	19290
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	6.4.9.1.0	synth with cache (only 1: rewrite add_spec; only 1: intros; only 1: reduce in H; only 1: rewrite <- mem_spec; only 1: intuition).	8.44785118103	5722
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	0.0.0.0.9	synth with cache (only 1: split; only 1: rewrite remove_spec; only 1: intros [? ?]; only 1: auto with relations; only 1: intuition).	0.302743196487	105
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	2.1.7	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.291099071503	150
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	6	synth with cache (only 1: intuition).	0.0267219543457	7
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	2	synth with cache (only 1: intuition).	0.0579469203949	16
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	1	synth with cache (only 1: intuition).	0.011815071106	2
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.78412103653	238
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: intuition; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.44192886353	205
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	14.6.10.10	synth with cache (only 1: intro n; only 1: unfold Equal; only 1: intros; only 1: firstorder).	9.08843302727	12718
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	7.2.0	synth with cache (only 1: unfold Equal; only 1: unfold flip, respectful; only 1: firstorder).	0.371476173401	119
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	43	synth with cache (only 1: firstorder).	15.3371708393	19380
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	3.5.0.4.2	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: eauto; only 1: now rewrite <- Hx).	17.0033328533	1911
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	5.9	synth with cache (only 1: intros EQ; only 1: firstorder).	0.567543029785	483
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0.0.6.1.3.2.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite remove_spec; only 1: intros; only 1: elim H; only 1: elim H; only 1: rewrite !remove_iff, Hx, Hs; only 1: constructor; only 1: auto; only 1: intuition).	22.3520019054	5101
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.0603950023651	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.1.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0414881706238	4
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.103261947632	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.8	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.578473091125	186
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	25	synth with cache (only 1: reflexivity).	0.274100065231	306
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0	synth with cache (only 1: intuition).	0.0132570266724	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	0.9	synth with cache (only 1: intros H1; only 1: fsetdec).	0.117130041122	21
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0162980556488	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0852179527283	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.0.5.2	synth with cache (only 1: intuition; only 1: intros n'; only 1: repeat red; only 1: intuition).	0.0575430393219	29
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0244779586792	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0180170536041	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0343639850616	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.4	synth with cache (only 1: intros; only 1: fsetdec).	0.0370090007782	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0617599487305	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0283510684967	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0259160995483	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.0.0.1.2.4	synth with cache (only 1: split; only 1: intros; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.428827047348	81
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0352461338043	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.02792096138	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	1.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0493822097778	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.0865569114685	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	1	synth with cache (only 1: fsetdec).	0.0768909454346	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.0699789524078	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.0744140148163	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.092132806778	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.0447120666504	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	1	synth with cache (only 1: fsetdec).	0.153805971146	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0744659900665	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0445921421051	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0590450763702	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0582809448242	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.0978538990021	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.0483129024506	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.0917980670929	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	4.11	synth with cache (only 1: intros H; only 1: fsetdec).	1.92988300323	169
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.145131826401	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0212919712067	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0213160514832	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0437090396881	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0359511375427	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0341980457306	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0415301322937	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0640439987183	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	1.0	synth with cache (only 1: rewrite union_spec; only 1: intuition).	0.0262248516083	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0436999797821	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0444431304932	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0585038661957	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0734939575195	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.0703518390656	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0983579158783	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.117932081223	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.0931169986725	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.0873441696167	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0336639881134	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.029247045517	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0225710868835	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0228250026703	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0450019836426	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0344679355621	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0418269634247	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0243520736694	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0804741382599	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.0543501377106	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.0917060375214	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.0897481441498	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	0.0.0.1	synth with cache (only 1: unfold Add; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.0414578914642	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.0.5	synth with cache (only 1: intuition; only 1: expAdd; only 1: fsetdec).	0.0985839366913	8
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.214107990265	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	1.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.153398036957	3
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	0.7.7.2	synth with cache (only 1: intros n m; only 1: revert n; only 1: fix even_spec 1; only 1: auto).	8.43297815323	5177
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	2.2.3	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0422809123993	27
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	0.2.0.6.2.1.0	synth with cache (only 1: intro n; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: red; only 1: intuition; only 1: fsetdec).	6.40737605095	3300
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	2.0.2.1	synth with cache (only 1: intros; only 1: apply fold_rec; only 1: intuition; only 1: fsetdec).	0.136745929718	37
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	2.0.0.0.8	synth with cache (only 1: intros l' d d' Hlen Hnth; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: fsetdec).	0.682835817337	542
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40	9.8.0.1	synth with cache (only 1: intros; only 1: apply fold_1; only 1: eauto with *; only 1: eauto with *).	6.84188199043	4165
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.0247008800507	3
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	0.0.0.0.20	synth with cache (only 1: intro; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: now destruct l).	2.50799489021	1293
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	5.0	synth with cache (only 1: intros n m Hn; only 1: intuition).	0.0165910720825	7
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.1.0.11	synth with cache (only 1: intro H2; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.829534053802	771
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	synth with cache (only 1: intros n m ?; only 1: auto with set).	0.0144500732422	3
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0251059532166	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0233380794525	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	8	synth with cache (only 1: intuition).	0.0604529380798	16
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.1.0.1.22	synth with cache (only 1: constructor 2; only 1: ok; only 1: intuition_in; only 1: ok; only 1: auto).	5.02602505684	672
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0172410011292	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	0.0.0.0	synth with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto with *).	0.0197410583496	4
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	0.0.0.2	synth with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto with *).	0.178354024887	70
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0829060077667	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0977170467377	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	1.2.1.1	synth with cache (only 1: intros; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: do 2 rewrite <- mem_iff; only 1: intuition).	0.197433948517	31
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.016047000885	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.0.0.2	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0996549129486	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.11873292923	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.0179579257965	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.117924928665	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.0.1.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto with set).	0.0624380111694	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	1.1.2.2	synth with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	1.09583497047	299
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.2.1	synth with cache (only 1: rewrite <- mem_spec; only 1: intuition; only 1: congruence).	0.111994028091	25
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	5.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).	0.0762670040131	26
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	2.1.0.2.1.0.0.2	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	12.8135240078	2156
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0261261463165	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0221388339996	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1	synth with cache (only 1: auto with set).	0.0124959945679	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.0217351913452	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	2.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0263018608093	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	0.0	synth with cache (only 1: intros; only 1: auto with set relations).	0.0167801380157	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0163838863373	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	2.0.4	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with set).	0.192041873932	20
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	2.2.0.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.480166912079	83
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	1.66037893295	354
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.0111031532288	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0184760093689	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0961139202118	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0928480625153	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0121870040894	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0534069538116	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0125799179077	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0125451087952	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0109398365021	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0564720630646	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.011598110199	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0146400928497	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0117118358612	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0119650363922	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0118639469147	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0127291679382	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0127689838409	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.0134909152985	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40	0.1.6	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with set).	0.328499078751	38
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0116770267487	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0114769935608	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.032527923584	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0107719898224	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0125639438629	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.012501001358	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0109910964966	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.0113060474396	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0216670036316	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	2.0.0.0.1.6	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	15.8789138794	3974
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	0.9.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: eauto with *; only 1: auto with set).	15.4036049843	5913
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	1.2.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	2.9664721489	833
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0886559486389	37
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0548391342163	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0526881217957	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: intuition; only 1: congruence; only 1: auto; only 1: auto).	0.880550146103	344
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	5.0	synth with cache (only 1: intros; only 1: auto with set).	0.0966370105743	31
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	7	synth with cache (only 1: solve_proper).	0.0722839832306	15
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	17.0	synth with cache (only 1: intros; only 1: auto with set).	1.65411901474	1019
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0159041881561	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.3.0	synth with cache (only 1: unfold Add, MP.Add; only 1: split; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: auto; only 1: auto; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	37.092343092	11457
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	6.1.1.0.0.7	synth with cache (only 1: intros m Hm; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intro H; only 1: auto with set).	1.47056603432	929
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.1.6.3.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	0.210727930069	173
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.0	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0289289951324	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	synth with cache (only 1: eauto).	0.0123720169067	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.3.0	synth with cache (only 1: unfold decidable; only 1: intros a b c Hb; only 1: firstorder).	1.02471208572	6
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	4.0.3.2	synth with cache (only 1: split; only 1: intros; only 1: auto with relations; only 1: intuition).	0.0869719982147	99
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	3.0.1	synth with cache (only 1: intro; only 1: rewrite singleton_spec; only 1: intuition).	0.0192630290985	16
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	synth with cache (only 1: fsetdec).	0.0377950668335	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0.24.5	synth with cache (only 1: unfold Equal, Subset; only 1: intros EQ; only 1: fsetdec).	6.35978913307	6100
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.0499601364136	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	synth with cache (only 1: fsetdec).	0.0673711299896	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.0917980670929	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	7.1.1.20	synth with cache (only 1: intro x; only 1: intros n m IH H1; only 1: rewrite add_spec; only 1: intuition).	18.9423341751	9369
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	synth with cache (only 1: fsetdec).	0.119888782501	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.151875972748	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.0.8.0.3	synth with cache (only 1: intros a b c d ? ?; only 1: intros; only 1: apply H0; only 1: intuition; only 1: eauto with set).	1.00371789932	761
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	3.3.27	synth with cache (only 1: intros x y H; only 1: intros n' m; only 1: fsetdec).	4.03948187828	4620
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.0454778671265	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0355110168457	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	10.3.8	synth with cache (only 1: intro m; only 1: fix odd_spec 1; only 1: intuition_in).	12.8097150326	6961
Coq.MSets.MSetGenTree.Props.isok_iff	40	5.0.3	synth with cache (only 1: fix odd_spec 1; only 1: intro n; only 1: auto).	0.418319940567	91
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.1	synth with cache (only 1: intros a b c Hb H; only 1: intuition_in).	0.0817329883575	3
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0	synth with cache (only 1: intuition_in).	0.0386888980865	1
Coq.MSets.MSetGenTree.Props.lt_leaf	40	1.10	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: easy).	0.489228963852	350
Coq.MSets.MSetGenTree.Props.gt_leaf	40	1	synth with cache (only 1: inversion 1).	0.0324838161469	11
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.3.3.0	synth with cache (only 1: intros; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0817959308624	13
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.4.9.1	synth with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	1.57405400276	652
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.6.2.8.6	synth with cache (only 1: intros; only 1: red; only 1: intros H0; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	4.09972691536	3589
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	12	synth with cache (only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).	0.464147090912	188
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.0327520370483	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	synth with cache (only 1: eauto).	0.0222218036652	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0976421833038	19
Coq.MSets.MSetGenTree.Props.empty_spec	40	23	synth with cache (only 1: firstorder).	0.124241113663	255
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	synth with cache (only 1: auto).	0.0180749893188	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	7.1.5	synth with cache (only 1: fix odd_spec 1; only 1: intro m; only 1: auto).	4.62312507629	1698
Coq.MSets.MSetGenTree.Props.mem_spec	40	7.8	synth with cache (only 1: fix even_spec 1; only 1: trivial).	2.03672909737	883
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.363783121109	76
Coq.MSets.MSetGenTree.Props.choose_spec1	40	1.0.0.0.0.4.0.4.26	synth with cache (only 1: intro; only 1: functional induction min_elt s; only 1: intros; only 1: discriminate; only 1: inversion 1; only 1: auto; only 1: rename _x0 into r; only 1: intros; only 1: auto).	36.980880022	35237
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	51	synth with cache (only 1: firstorder).	8.91659116745	11386
Coq.MSets.MSetGenTree.Props.eq_Leq	40	2.6.3.0	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix odd_spec 1; only 1: auto).	3.31481409073	1410
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40	2.1.6	synth with cache (only 1: fix odd_spec 1; only 1: intro n; only 1: auto).	1.58261799812	502
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	0.2.3.2.3.3.45.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: auto; only 1: intro l; only 1: firstorder; only 1: intro l; only 1: firstorder).	5.66750097275	6280
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	5.14.5.10.0	synth with cache (only 1: intro n; only 1: intros; only 1: revert n; only 1: fix le_div2 1; only 1: destr_bool).	25.7492461205	23615
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	6.3.1.2.1.0.28	synth with cache (only 1: split; only 1: intro l; only 1: intros Hincl; only 1: reflexivity; only 1: intro l; only 1: firstorder; only 1: firstorder).	4.28001499176	2351
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	28	synth with cache (only 1: firstorder).	9.30774998665	8968
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0	synth with cache (only 1: intros; only 1: auto with *).	0.0150730609894	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	3.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).	0.0246570110321	5
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.5.0.16.83	synth with cache (only 1: compute; only 1: constructor; only 1: intro a; only 1: Dec.fsetdec; only 1: intuition).	38.6685950756	12189
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	2.12.0.7.5.3	synth with cache (only 1: intro m; only 1: split; only 1: red; only 1: unfold Same_set, Included, mkEns, In; only 1: firstorder; only 1: inversion 1).	12.5985770226	10205
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	1.5.0	synth with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intros; only 1: intuition).	0.0767071247101	14
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	8	synth with cache (only 1: solve_proper).	0.97943520546	46
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	2.12	synth with cache (only 1: fix even_spec 1; only 1: intuition).	1.33297014236	543
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0320761203766	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.1	synth with cache (only 1: apply <- isok_iff; only 1: auto).	0.0338320732117	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.1.5.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.046128988266	10
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	3.1	synth with cache (only 1: intros; only 1: intuition).	0.162575960159	53
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	2.2.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).	0.0735831260681	11
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	2.0	synth with cache (only 1: unfold elements; only 1: constructors).	0.0306360721588	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	2.0.1.4.0.0.1	synth with cache (only 1: intros; only 1: inversion H; only 1: induction s; only 1: intro; only 1: intro; only 1: inv; only 1: inversion H).	3.30508708954	1158
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	0.0	synth with cache (only 1: unfold elements; only 1: auto).	0.0366008281708	2
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	3.1.2.0.0.1.2.3	synth with cache (only 1: intros n m; only 1: destruct m; only 1: simpl; only 1: intuition; only 1: revert m; only 1: simpl; only 1: fix even_spec 1; only 1: easy).	32.2657279968	4759
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	8	synth with cache (only 1: intuition).	0.00880694389343	9
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	0.0.2.6	synth with cache (only 1: intros x l; only 1: fix odd_spec 1; only 1: intro n; only 1: auto).	0.724211931229	243
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.0.0.0.2.0.1.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	5.79578614235	1986
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0	synth with cache (only 1: intuition).	0.0100231170654	1
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.4.5.3	synth with cache (only 1: intros; only 1: unfold singleton; only 1: rewrite InA_cons, InA_nil; only 1: intuition).	0.80086684227	438
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	0.3.0.10.0.1.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2; only 1: constructors; only 1: auto; only 1: apply Inf_eq with x'; only 1: auto; only 1: destruct H1; only 1: auto; only 1: inv; only 1: auto).	39.5949468613	15813
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	1.0.2.10.0	synth with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	4.88998699188	1665
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0571618080139	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	1.5.11	synth with cache (only 1: intro m; only 1: fix even_spec 1; only 1: intuition).	6.03452897072	3302
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	5.11	synth with cache (only 1: fix odd_spec 1; only 1: intuition).	15.6312150955	6541
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	36	synth with cache (only 1: auto).	0.199779987335	658
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	10.27	synth with cache (only 1: intro n; only 1: inversion 1).	0.65073800087	981
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	8.1.1	synth with cache (only 1: fix odd_spec 1; only 1: intro m; only 1: trivial).	0.809995889664	486
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	4.2.0	synth with cache (only 1: induction s; only 1: intuition; only 1: intuition).	0.0517990589142	14
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	2.8.0	synth with cache (only 1: intro H; only 1: repeat rewrite <- isok_iff; only 1: intuition).	0.155467033386	89
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.020810842514	3
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	0.6.0.1.23	synth with cache (only 1: intros [| a l] H; only 1: discriminate; only 1: simpl; only 1: inversion_clear 1; only 1: auto).	3.86140680313	3348
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.0.1.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: discriminate).	0.0237159729004	6
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	1.0	synth with cache (only 1: intro l; only 1: intuition).	0.0140309333801	3
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: intros n H; only 1: intuition).	0.0127031803131	3
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	4	synth with cache (only 1: solve_proper).	0.0711421966553	33
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	1	synth with cache (only 1: now Z.nzsimpl).	0.0273089408875	2
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40	4.22.1	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	34.6632189751	12372
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.5.12.0	synth with cache (only 1: red; only 1: intros; only 1: destruct H; only 1: auto with sets; only 1: auto with sets).	0.428864002228	451
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	3.0.0.1.6.6.1.1.10	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	29.8011360168	18706
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.2.0.1.0.0.8.39	synth with cache (only 1: intro H1; only 1: induction 1 as [? ?| ]; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	8.30411911011	13356
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.0.0.14.5	synth with cache (only 1: intro y0; only 1: intro; only 1: right with y; only 1: auto; only 1: left).	0.411157846451	406
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	1.0.5.5.26.6	synth with cache (only 1: intro y0; only 1: intro p; only 1: intro H; only 1: right with y0; only 1: auto; only 1: left).	5.39882183075	9334
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.1.0.2	synth with cache (only 1: induction 1 as [x y H| x y z H IHclos_trans1 H0 IHclos_trans2]; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.100733995438	46
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.2.0.0.0.3	synth with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.235942840576	65
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.4.1.0.24	synth with cache (only 1: induction 1 as [? ?| ]; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	15.2024409771	19578
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.0.0.0.1.2.0.0.0.5	synth with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	8.56840586662	3145
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.0.2.0.3.2.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: red; only 1: destruct 2; only 1: assumption; only 1: red; only 1: destruct 1; only 1: trivial).	0.655349969864	867
Coq.ssr.ssreflect.master_key	40	4	synth with cache (only 1: reflexivity).	0.0266370773315	12
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	synth with cache (only 1: unlock; only 1: discriminate).	0.0687201023102	14
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.0257949829102	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.1	synth with cache (only 1: destruct 1; only 1: auto).	0.0341949462891	12
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: intuition).	0.0252540111542	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.0210239887238	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	2	synth with cache (only 1: intuition).	0.0458498001099	3
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0254590511322	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.0165770053864	1
Coq.ssr.ssrbool.is_true_true	40	14	synth with cache (only 1: reflexivity).	0.0240228176117	75
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: intuition).	0.0119400024414	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.0142800807953	2
Coq.ssr.ssrbool.negbT	40	4	synth with cache (only 1: Bool.destr_bool).	0.019180059433	12
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.0137169361115	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.0145890712738	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.0135650634766	1
Coq.ssr.ssrbool.negbK	40	4.23	synth with cache (only 1: intro n; only 1: Bool.destr_bool).	0.207713842392	400
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.0780169963837	1
Coq.ssr.ssrbool.negb_inj	40	0.23	synth with cache (only 1: intro n; only 1: Bool.destr_bool).	0.149814128876	280
Coq.ssr.ssrbool.negbLR	40	0.0.3	synth with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).	0.0290100574493	13
Coq.ssr.ssrbool.negbRL	40	10	synth with cache (only 1: Bool.destr_bool).	0.0606520175934	33
Coq.ssr.ssrbool.contra	40	3.10	synth with cache (only 1: Bool.destr_bool; only 1: auto).	0.267627000809	96
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  =>//; case : c ).	0.0182368755341	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  =>//; case : c ).	0.0182719230652	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  =>//; case : c ).	0.0187699794769	1
Coq.ssr.ssrbool.contraT	40	1.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.307379961014	137
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  =>// ->).	0.0205030441284	1
Coq.ssr.ssrbool.contraFT	40	1.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.517157077789	146
Coq.ssr.ssrbool.contraFN	40	1.18	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.66090297699	187
Coq.ssr.ssrbool.contraTF	40	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.494150876999	129
Coq.ssr.ssrbool.contraNF	40	2.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.590450048447	148
Coq.ssr.ssrbool.contraFF	40	1.4.23	synth with cache (only 1: destruct c; only 1: by case : b  =>// ->; only 1: by move /contra =>notb_notc /negbT).	1.22841501236	994
Coq.ssr.ssrbool.contra_not	40	0.5	synth with cache (only 1: Bool.destr_bool; only 1: auto).	0.0189480781555	7
Coq.ssr.ssrbool.contraPnot	40	0	synth with cache (only 1: by auto).	0.0148479938507	1
Coq.ssr.ssrbool.contraTnot	40	0.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.357717037201	108
Coq.ssr.ssrbool.contraNnot	40	0	synth with cache (only 1: by case : b ; auto).	0.0148329734802	1
Coq.ssr.ssrbool.contraPT	40	0.10.23.1	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: Bool.destr_bool; only 1: red; only 1: intuition).	2.79522609711	2696
Coq.ssr.ssrbool.contra_notT	40	0.12.13.2	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: Bool.destr_bool; only 1: red; only 1: intuition).	3.41765379906	2216
Coq.ssr.ssrbool.contra_notN	40	0	synth with cache (only 1: by case : b  =>//= /(_ isT) HP /(_ HP)).	0.0205750465393	1
Coq.ssr.ssrbool.contraPN	40	0	synth with cache (only 1: by case : b  =>//= /(_ isT) nP /nP).	0.0207829475403	1
Coq.ssr.ssrbool.contraFnot	40	0	synth with cache (only 1: by case : b ; auto).	0.0180480480194	1
Coq.ssr.ssrbool.contraPF	40	0	synth with cache (only 1: by case : b  =>//=; move /(_ isT) =>HP /HP).	0.0190680027008	1
Coq.ssr.ssrbool.contra_notF	40	0	synth with cache (only 1: by case : b  =>// /(_ isT)).	0.0195000171661	1
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.0190439224243	1
Coq.ssr.ssrbool.BoolIf.ifT	40	1	synth with cache (only 1: by case : b ).	0.0210208892822	2
Coq.ssr.ssrbool.BoolIf.ifF	40	0	synth with cache (only 1: by move ->).	0.0181829929352	1
Coq.ssr.ssrbool.BoolIf.ifN	40	2	synth with cache (only 1: by case : b ).	0.0249829292297	3
Coq.ssr.ssrbool.BoolIf.if_same	40	0	synth with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.0182640552521	1
Coq.ssr.ssrbool.BoolIf.if_neg	40	1	synth with cache (only 1: by case b).	0.0219578742981	2
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.019593000412	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.0180220603943	1
Coq.ssr.ssrbool.BoolIf.ifE	40	12	synth with cache (only 1: trivial).	0.0576820373535	46
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0242319107056	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0239861011505	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.019119977951	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	0.0.29	synth with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	7.03655600548	529
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.27	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).	1.00473117828	536
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	0.21	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by <ssreflect_plugin::ssrtclintros@0> case Hb =>[? _ H ?|? H _]; case : H ).	0.322234153748	231
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.21	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.242028951645	231
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40	16	synth with cache (only 1: by case : Pb ; constructor; auto).	0.0888519287109	108
Coq.ssr.ssrbool.Reflect.rwP	40	13	synth with cache (only 1: by case : Pb ; constructor; auto).	0.0638091564178	60
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	6.53	synth with cache (only 1: destruct 1; only 1: auto).	1.42513608932	4978
Coq.ssr.ssrbool.impliesPn	40	2.16.8.32	synth with cache (only 1: red; only 1: Bool.destr_bool; only 1: destruct H; only 1: tauto).	2.61700201035	4241
Coq.ssr.ssrbool.unlessL	40	7.3.35.2	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: auto).	0.905015945435	2673
Coq.ssr.ssrbool.unlessR	40	11.24.3	synth with cache (only 1: repeat split; only 1: red; only 1: by auto).	1.00401711464	2734
Coq.ssr.ssrbool.unless_sym	40	2.0.9.19.35.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	1.68774008751	6349
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.9	synth with cache (only 1: red; only 1: by move  =>b b' ->).	0.0325591564178	21
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	0.1.2.0.1.1.0	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.217089176178	113
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0208079814911	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0229880809784	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.123593091965	1
Coq.ssr.ssrbool.pair_andP	40	7	synth with cache (only 1: intuition).	0.0336699485779	25
Coq.ssr.ssrbool.ReflectConnectives.idP	40	5.0.8	synth with cache (only 1: destruct b1; only 1: intuition; only 1: now constructor).	0.11164188385	130
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.0148630142212	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.015772819519	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.0168650150299	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0145530700684	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.0158979892731	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0248169898987	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0230801105499	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0184931755066	1
Coq.ssr.ssrbool.andTb	40	7	synth with cache (only 1: constructor).	0.0165569782257	8
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.0149259567261	1
Coq.ssr.ssrbool.andbT	40	5.13	synth with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.154191970825	180
Coq.ssr.ssrbool.andbF	40	1	synth with cache (only 1: by case).	0.0183470249176	2
Coq.ssr.ssrbool.andbb	40	2.4	synth with cache (only 1: intro b1; only 1: by case b1; constructor).	0.0285089015961	12
Coq.ssr.ssrbool.andbC	40	0.8	synth with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.0302400588989	10
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.017275094986	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0184299945831	1
Coq.ssr.ssrbool.andbAC	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.084703207016	1
Coq.ssr.ssrbool.andbACA	40	0.33	synth with cache (only 1: intro n; only 1: Bool.destr_bool).	0.48449420929	585
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: reflexivity).	0.0175659656525	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.0169389247894	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: Bool.destr_bool).	0.0191900730133	3
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.0179169178009	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.0173380374908	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0193128585815	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0231099128723	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0228798389435	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0202131271362	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0303640365601	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	0.0158290863037	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.0165600776672	1
Coq.ssr.ssrbool.orbN	40	0	synth with cache (only 1: by case : b ).	0.0165848731995	1
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.0169048309326	1
Coq.ssr.ssrbool.andb_orl	40	3	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0268030166626	4
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0221679210663	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0223209857941	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0220010280609	1
Coq.ssr.ssrbool.andb_idl	40	3.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.418542146683	171
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  =>// ->).	0.0255517959595	1
Coq.ssr.ssrbool.andb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  =>// ->).	0.0280511379242	1
Coq.ssr.ssrbool.andb_id2r	40	1.0.15	synth with cache (only 1: destruct c; only 1: by case : a ; case : b  =>// ->; only 1: by case : a ; case : b  =>// ->).	0.722990036011	456
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  =>// ->).	0.0244510173798	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  =>// ->).	0.0231268405914	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0306639671326	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0290081501007	1
Coq.ssr.ssrbool.negb_and	40	1	synth with cache (only 1: by case : a ; case : b  =>// ->).	0.0230300426483	2
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0205371379852	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0201668739319	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0208230018616	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.020437002182	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0221920013428	1
Coq.ssr.ssrbool.implybT	40	0	synth with cache (only 1: by case : b ).	0.0154128074646	1
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	0.0175409317017	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.0164711475372	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.0169279575348	1
Coq.ssr.ssrbool.implybb	40	0	synth with cache (only 1: by case : b ).	0.0159940719604	1
Coq.ssr.ssrbool.negb_imply	40	0	synth with cache (only 1: by case : a ; case : b ).	0.019944190979	1
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0208919048309	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0209329128265	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0212481021881	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0211207866669	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  =>// ->).	0.0245270729065	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  =>// ->).	0.0234391689301	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0328860282898	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.0152719020844	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.0170500278473	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.0194261074066	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0192718505859	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0229980945587	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0219469070435	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0227270126343	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.032576084137	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0248789787292	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0242578983307	1
Coq.ssr.ssrbool.addKb	40	2	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0228881835938	3
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0192890167236	1
Coq.ssr.ssrbool.addIb	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0258719921112	1
Coq.ssr.ssrbool.addbI	40	0	synth with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0244719982147	1
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.0175230503082	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.0199308395386	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0206809043884	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0203578472137	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.50	synth with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	2.13514208794	1505
Coq.ssr.ssrbool.subrelUl	40	8.5.6.4.36	synth with cache (only 1: red; only 1: red; only 1: intro b1; only 1: simpl; only 1: intuition).	3.17153406143	6727
Coq.ssr.ssrbool.subrelUr	40	13.30.13.30	synth with cache (only 1: intro n; only 1: simpl; only 1: red; only 1: intuition).	14.2552051544	34921
Coq.ssr.ssrbool.sub_refl	40	2.14	synth with cache (only 1: red; only 1: Bool.destr_bool).	0.0799648761749	129
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	synth with cache (only 1: by case : pT pp ).	0.0186471939087	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  =>_ /= ->).	0.0188419818878	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	8	synth with cache (only 1: reflexivity).	0.0191028118134	9
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	2	synth with cache (only 1: by [  ]).	0.0165131092072	3
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	2	synth with cache (only 1: by [  ]).	0.0186679363251	3
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	synth with cache (only 1: by [  ]).	0.0182440280914	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	1	synth with cache (only 1: reflexivity).	0.0155868530273	2
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.8	synth with cache (only 1: intro m; only 1: by [  ]).	0.0345969200134	10
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0206460952759	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.02161693573	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	7	synth with cache (only 1: auto).	0.0304460525513	8
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0268459320068	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0216310024261	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0250318050385	2
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	2	synth with cache (only 1: by move  =>? ?; auto).	0.0308299064636	3
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	3	synth with cache (only 1: by move  =>? ?; auto).	0.149475097656	4
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.025181055069	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.0248358249664	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0240530967712	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0273220539093	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0276749134064	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0256521701813	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0278449058533	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0249028205872	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	2	synth with cache (only 1: by move  =>? ?; auto).	0.0325219631195	3
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	27.31.33	synth with cache (only 1: Bool.destr_bool; only 1: subst; only 1: auto).	12.3013799191	20681
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0277729034424	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.025680065155	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0253429412842	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0257248878479	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0279259681702	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0300340652466	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.23	synth with cache (only 1: intro n; only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.460248947144	280
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0310740470886	1
Coq.ssr.ssrbool.sub_in2	40	2.6.24	synth with cache (only 1: intros; only 1: intro; only 1: auto).	0.654115915298	853
Coq.ssr.ssrbool.sub_in3	40	14.4.19	synth with cache (only 1: red; only 1: intros; only 1: auto).	1.19231510162	1600
Coq.ssr.ssrbool.sub_in12	40	0.16	synth with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.208351135254	126
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0252270698547	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	5	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0239470005035	6
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0188360214233	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0194470882416	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	1	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0205709934235	2
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).	0.0403978824615	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym	40	0	synth with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.017874956131	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym	40	1	synth with cache (only 1: by move  =>fR y x; apply : fR ).	0.018159866333	2
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym_in	40	17	synth with cache (only 1: by move  =>? ?; auto).	0.395141124725	126
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym_in	40	1	synth with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.101207017899	2
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym_in11	40	0	synth with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0228698253632	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym_in11	40	0	synth with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0265319347382	1
Coq.ssr.ssrbool.CancelOn.onW_can	40	5	synth with cache (only 1: by move  =>? ?).	0.0240240097046	6
Coq.ssr.ssrbool.CancelOn.onW_can_in	40	14	synth with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.0962641239166	75
Coq.ssr.ssrbool.CancelOn.in_onW_can	40	0	synth with cache (only 1: by move  =>fgK x xrD xaD; apply : fgK ).	0.0225479602814	1
Coq.ssr.ssrbool.CancelOn.onS_can	40	8.21	synth with cache (only 1: intro m; only 1: by move  =>? ?; auto).	0.669555187225	552
Coq.ssr.ssrbool.CancelOn.onS_can_in	40	11.51	synth with cache (only 1: intuition; only 1: by move  =>? ?; auto).	2.44177794456	3072
Coq.ssr.ssrbool.CancelOn.in_onS_can	40	1	synth with cache (only 1: by move  =>mem_g fgK x; apply : fgK ).	0.0244209766388	2
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_in_on	40
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_on	40
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	4	synth with cache (only 1: auto).	0.0151610374451	5
Coq.ssr.ssrfun.unitE	40	0.3.8	synth with cache (only 1: intro n; only 1: induction n; only 1: reflexivity).	0.146728992462	70
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0	synth with cache (only 1: split).	0.0188050270081	1
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.5	synth with cache (only 1: intros; only 1: by [  ]).	0.0334069728851	7
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	0.39.66.15	synth with cache (only 1: intros; only 1: intro p; only 1: rewrite H; only 1: trivial).	13.2585170269	51592
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	1	synth with cache (only 1: repeat split).	0.0197989940643	2
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.0.0.0.0	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0464630126953	5
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.0333790779114	1
Coq.ssr.ssrfun.Sig.svalP	40	20	synth with cache (only 1: apply proj2_sig).	0.118731021881	186
Coq.ssr.ssrfun.Sig.s2valP	40	1	synth with cache (only 1: by case : u ).	0.0258390903473	2
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.0228691101074	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.02601313591	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0314249992371	1
Coq.ssr.ssrfun.Injections.can_pcan	40
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.024276971817	2
Coq.ssr.ssrfun.Injections.canLR	40	3.5.9	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.377766132355	346
Coq.ssr.ssrfun.Injections.canRL	40	8.3	synth with cache (only 1: destruct 2; only 1: auto).	0.0772700309753	79
Coq.ssr.ssrfun.Some_inj	40	0.5.6.13	synth with cache (only 1: red; only 1: intros n m; only 1: inversion 1; only 1: constructor).	1.26574516296	911
Coq.ssr.ssrfun.of_voidK	40	0.2.3	synth with cache (only 1: intro n; only 1: simpl; only 1: contradiction).	0.0354909896851	8
Coq.ssr.ssrfun.esymK	40	0.1.51	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.869661092758	1539
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.13	synth with cache (only 1: red; only 1: Bool.destr_bool).	0.0799288749695	75
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	7.3.50	synth with cache (only 1: red; only 1: intros; only 1: auto).	2.21533894539	4340
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	25.15.11	synth with cache (only 1: intros Hfst Hsnd; only 1: intros H ?; only 1: auto).	1.88309502602	3063
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	4.0	synth with cache (only 1: intros C decide H P H0; only 1: auto).	0.00925898551941	6
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	synth with cache (only 1: auto).	0.00592994689941	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	synth with cache (only 1: now trivial).	0.00579786300659	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: now trivial).	0.00750684738159	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: now unfold Over_rel).	0.00579285621643	1
Coq.Sets.Uniset.defs.le_refl	40	0	synth with cache (only 1: destr_bool).	0.021614074707	1
Coq.Sets.Uniset.defs.incl_left	40	2.3.4.4.50	synth with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: intros Hfst Hsnd; only 1: rewrite Hfst; only 1: auto).	20.1120939255	36920
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0357661247253	4
Coq.Sets.Uniset.defs.seq_refl	40	3	synth with cache (only 1: auto).	0.0188119411469	4
Coq.Sets.Uniset.defs.seq_trans	40	0.0.3.8.3	synth with cache (only 1: destruct x; only 1: intro x; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.53737711906	1023
Coq.Sets.Uniset.defs.seq_sym	40	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0877089500427	4
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0342409610748	3
Coq.Sets.Uniset.defs.union_empty_right	40	13.1.1.0.2	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	8.58343315125	7339
Coq.Sets.Uniset.defs.union_comm	40	14.0.0.0.2	synth with cache (only 1: unfold seq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: intuition).	7.46700596809	5333
Coq.Sets.Uniset.defs.union_ass	40	3.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: auto with bool).	0.873665094376	208
Coq.Sets.Uniset.defs.seq_left	40	0.0.1.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.0479509830475	8
Coq.Sets.Uniset.defs.seq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0814709663391	9
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	1.1.1.1.0.0.0.0.0.0.2	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	21.9866769314	7735
Coq.Sets.Multiset.multiset_defs.meq_refl	40	4	synth with cache (only 1: split).	0.0176658630371	11
Coq.Sets.Multiset.multiset_defs.meq_trans	40
Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: intros; only 1: rewrite H; only 1: auto).	0.0287702083588	6
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0191378593445	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	1.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0204479694366	5
Coq.Sets.Multiset.multiset_defs.munion_comm	40	14.1.6.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: destruct y; only 1: intuition).	31.6124849319	13603
Coq.Sets.Multiset.multiset_defs.munion_ass	40	0.0.3.2.1	synth with cache (only 1: unfold meq; only 1: destruct z; only 1: simpl; only 1: destruct y; only 1: auto with arith).	0.909343957901	266
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.3.4	synth with cache (only 1: destruct z; only 1: compute; only 1: auto).	0.644674062729	245
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0463840961456	9
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	0.2.1.2.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: intros; only 1: auto).	0.341931819916	108
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	0	synth with cache (only 1: auto  10 with sets).	0.0091609954834	1
Coq.Sets.Integers.Integers_sect.le_antisym	40	22	synth with cache (only 1: intuition).	0.125128984451	231
Coq.Sets.Integers.Integers_sect.le_trans	40	0.1.0.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).	0.0196340084076	5
Coq.Sets.Integers.Integers_sect.le_Order	40	2.0.2.0.1.2	synth with cache (only 1: split; only 1: auto  10 with sets; only 1: red; only 1: PeanoNat.Nat.order; only 1: red; only 1: PeanoNat.Nat.order).	0.841819047928	438
Coq.Sets.Integers.Integers_sect.triv_nat	40	12	synth with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.149144172668	190
Coq.Sets.Integers.Integers_sect.nat_po	40	0.1.0.0.4.527	synth with cache (only 1: eexists; only 1: auto with sets; only 1: split; only 1: exact le_reflexive; only 1: exact le_trans; only 1: exact le_antisym).	10.4872641563	145078
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.1.0.4.7	synth with cache (only 1: intros A P H; only 1: red; only 1: red; only 1: intros; only 1: auto).	0.250658035278	257
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).	0.249622106552	66
Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.0.0.21	synth with cache (only 1: split; only 1: auto  10 with sets; only 1: red; only 1: auto  10 with sets).	0.187407016754	555
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	10.1.1.0.1.1.2.1.3.3	synth with cache (only 1: intro A; only 1: apply Definition_of_equivalence; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [? ?] [? ?]; only 1: auto  10 with sets; only 1: red; only 1: intros U R H'; only 1: destruct H'; only 1: auto  10 with sets).	9.09486579895	14983
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.9	synth with cache (only 1: destruct 1; only 1: auto  10 with sets).	0.127442836761	67
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0112960338593	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	3.0.0.1.0.0	synth with cache (only 1: compute; only 1: intros; only 1: elim H; only 1: intros; only 1: clear H; only 1: auto with sets).	0.0272369384766	10
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	2	synth with cache (only 1: auto  10 with sets).	0.0186319351196	3
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: auto with sets).	0.0178310871124	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.2.1.0.2.2.5.0	synth with cache (only 1: compute; only 1: intros U R H' x y H'0; only 1: intros; only 1: elim H; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	12.8932960033	10611
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.6.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	25.3274509907	10036
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	4.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0300569534302	18
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0141739845276	5
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40	8.0.0.2.0	synth with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: apply op_comm).	5.54817986488	2005
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	1.0.3.2.0.0.0.1.0.2	synth with cache (only 1: intro A; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x H'; only 1: unfold In in *; only 1: elim H'; only 1: destruct 1; only 1: destruct 1).	1.42088389397	1127
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	0.7.0.6.10	synth with cache (only 1: intros x0 H'; only 1: intro K; only 1: destruct 1; only 1: exists x; only 1: auto using Im_def with sets).	27.4760708809	26836
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	3.5.5	synth with cache (only 1: red; only 1: red; only 1: destruct 1).	0.374142885208	628
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	5.4.2.23.91	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: intro X; only 1: auto  10 with sets).	4.14945101738	49352
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.0.0.8	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.12557387352	37
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.0088369846344	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.2	synth with cache (only 1: red; only 1: auto  10 with sets).	0.0105111598969	4
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	0.3.0.0.0.0.0.0.0.6	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	21.3517539501	4997
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	3.1.1.0.1.7.17.0	synth with cache (only 1: intro X; only 1: split; only 1: split; only 1: auto with sets; only 1: intros x H'; only 1: red; only 1: red; only 1: auto with sets).	17.9549372196	20729
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	1.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: auto with sets).	0.029865026474	19
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	synth with cache (only 1: auto with sets).	0.00824093818665	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.0084068775177	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.0346338748932	23
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.017529964447	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	1.8.1	synth with cache (only 1: intros A x y H'; only 1: RelationClasses.reduce; only 1: auto with sets).	1.47489094734	395
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	12.0.1	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: intuition).	2.19536089897	1185
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	3.0.1.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: red in H'; only 1: elim H'; only 1: auto with sets).	0.0847611427307	11
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.0.0.9.4	synth with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	9.23626112938	6880
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.0.1.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0619759559631	6
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.2.3.0.0	synth with cache (only 1: intros A B x H'; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.106155872345	16
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	0.0.0.0.1.1.0.0.2.1.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	26.7895171642	6026
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.0.0.0.0.2.0.1.4.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: unfold Subtract; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	20.1820528507	8265
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	18.0	synth with cache (only 1: intro A; only 1: auto  6 with sets).	0.502083063126	581
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.0835559368134	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.11	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0981028079987	104
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	2.1	synth with cache (only 1: intros X H'; only 1: auto with sets).	0.011528968811	5
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.00989818572998	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	8	synth with cache (only 1: auto  10 with sets).	0.0573961734772	20
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0090491771698	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	3	synth with cache (only 1: auto  9 with sets).	0.0159289836884	4
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	2.24195384979	1581
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	26.7590169907	14344
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	1.52091407776	1197
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.3.3.0.0.0.0.0.0	synth with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	37.1365990639	24886
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	1.0.1.6	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.521849870682	304
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	1.0.0.1.1.0.0.4.1.1.1.3	synth with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	4.79994297028	4341
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	1.0.2.0.0.1	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.100695848465	57
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.172237873077	72
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	0.0	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.0309970378876	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	1.0	synth with cache (only 1: intros x y z H' H'0; only 1: auto with sets).	0.0109529495239	3
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	2.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0932879447937	11
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0134310722351	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.440527915955	321
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0326089859009	11
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	0.0.0.1.1.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: inversion_clear H1; only 1: exfalso; only 1: contradict H; only 1: intuition; only 1: intuition).	0.606457948685	359
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	1.11.1.11.0.7.3.3	synth with cache (only 1: red; only 1: intros; only 1: destruct H; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).	17.7560389042	40434
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	1.5.0	synth with cache (only 1: intro n; only 1: unfold not; only 1: contradiction).	0.0301418304443	9
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0.0.1	synth with cache (only 1: intro n; only 1: red; only 1: destruct 1).	0.0423560142517	20
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	1.8.0.8	synth with cache (only 1: intros n m; only 1: intros x H; only 1: constructor; only 1: auto with sets).	1.19059896469	1055
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0307910442352	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.7.3.3.0	synth with cache (only 1: unfold Add at 1; only 1: intro m; only 1: intro; only 1: exists x; only 1: auto with sets).	0.586895942688	650
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.3.1.2.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	1.03590989113	567
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0310020446777	6
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.0.2	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0476889610291	14
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.2.4	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto using Noone_in_empty with sets; only 1: auto using Noone_in_empty with sets).	0.0933759212494	41
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	1.8.0.0.1.0	synth with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	3.94072198868	1705
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0382239818573	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.2.0.0.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.0628790855408	16
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0338459014893	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0304548740387	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	3.7.5	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.987784862518	929
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	1.4.0.1.4.11	synth with cache (only 1: intro A; only 1: intros y H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros X x H'; only 1: auto using incl_soustr_add_l with sets).	3.21575903893	4679
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	0.0.2.1.29	synth with cache (only 1: intro H'3; only 1: inversion 1; only 1: auto with sets; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	28.2524750233	23024
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto with sets).	0.0191659927368	11