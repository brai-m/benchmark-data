
Coq.micromega.OrderedRing.rplus_morph_Proper	40	5.17	search with cache (only 1: intros x y H z; only 1: firstorder).	0.46829199791	384
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	5.18	search with cache (only 1: intros x y H z; only 1: firstorder).	0.614150047302	501
Coq.micromega.OrderedRing.ropp_morph_Proper	40	24.3	search with cache (only 1: intros x y H; only 1: firstorder).	0.872081041336	1209
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	23	search with cache (only 1: firstorder).	0.740947008133	607
Coq.micromega.OrderedRing.Rplus_0_l	40	20	search with cache (only 1: firstorder).	0.193500995636	264
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0407018661499	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.042188167572	2
Coq.micromega.OrderedRing.Rplus_comm	40	0.6.2	search with cache (only 1: intro; only 1: intros a; only 1: ring).	0.0862867832184	45
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0416569709778	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0461280345917	2
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	0.1.0.0	search with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.0715720653534	5
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.0	search with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.0213079452515	3
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	2.0	search with cache (only 1: intros; only 1: now apply Z.ge_le).	0.0612831115723	41
Coq.micromega.Ztac.elim_concl_lt	40	4.0	search with cache (only 1: intros; only 1: Z.order).	0.0273048877716	12
Coq.micromega.Ztac.Zlt_le_add_1	40	1.4	search with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.182348966599	45
Coq.micromega.Ztac.add_le	40	1.0	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0131649971008	3
Coq.micromega.Ztac.mul_le	40	0.0.6.1	search with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.190227985382	132
Coq.micromega.ZifyInst.PropAnd	40	6.1.9	search with cache (only 1: constructor; only 1: intros; only 1: intuition).	0.275118112564	203
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.076817035675	2
Coq.micromega.ZifyInst.PropArrow	40	0.1	search with cache (only 1: constructor; only 1: tauto).	0.0661430358887	3
Coq.micromega.ZifyInst.PropIff	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0896909236908	2
Coq.micromega.ZifyInst.PropNot	40	0.0.0	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.059238910675	3
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40	1.0.11	search with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	34.3784358501	7057
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.015545129776	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0154728889465	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0150389671326	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0159120559692	1
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.01597905159	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	0.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0601589679718	5
Coq.micromega.ZCoeff.ring_ops_wd	40	4.2.2.1	search with cache (only 1: constructor; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).	1.6513261795	297
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.0.5	search with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.664960861206	197
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	3.2.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: apply (Rle_lt_0_plus_1 x (Rlt_le 0 x H))).	0.411890029907	83
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.0.0.3.0.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: left; only 1: apply Rle_lt_0_plus_1; only 1: red; only 1: auto with real).	0.150093078613	20
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.0.0.2.1.0.0	search with cache (only 1: split; only 1: intro EQ; only 1: now rewrite EQ; only 1: destruct x; only 1: reflexivity; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	0.154074907303	30
Coq.micromega.ZMicromega.lt_le_iff	40	1.1	search with cache (only 1: intro n; only 1: apply Z.lt_le_pred).	0.0883479118347	13
Coq.micromega.ZMicromega.le_0_iff	40	1.4.0.3	search with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	0.948404073715	267
Coq.micromega.ZMicromega.le_neg	40	0.0.0.0.1.0.3.1.6.8.0.2	search with cache (only 1: split; only 1: intros; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order'; only 1: destruct x; only 1: compute; only 1: intuition congruence; only 1: intros; only 1: discriminate || simpl; only 1: simpl; only 1: intros H; only 1: easy).	36.1404130459	26871
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0	search with cache (only 1: reflexivity).	0.0732200145721	1
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.0.0.13	search with cache (only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).	3.17982506752	2274
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.1.1	search with cache (only 1: destruct x; only 1: simpl; only 1: easy'; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.18946313858	52
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	0.0.3.0.0.2.0.23.0.5.1	search with cache (only 1: induction p; only 1: constructor; only 1: auto with zarith; only 1: constructor; only 1: assumption; only 1: case_eq (Zgcd_pol p1); only 1: case_eq (Zgcd_pol p3); only 1: intros; only 1: constructor; only 1: easy; only 1: easy).	5.62950110435	8569
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.132086992264	9
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	3.0.9.3	search with cache (only 1: intro n; only 1: split; only 1: now destruct n; only 1: now destruct n).	1.21711182594	858
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	20.1.1	search with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: now rewrite Pos.add_comm).	2.39447402954	3474
Coq.micromega.Env.jump_succ	40	11.0	search with cache (only 1: rewrite <- !jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.627441883087	310
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	2.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.018012046814	5
Coq.micromega.Env.nth_pred_double	40	2.0.1	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0379419326782	20
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0163598060608	4
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	5	search with cache (only 1: destr_bool).	0.0144858360291	6
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	1	search with cache (only 1: auto).	0.00893521308899	2
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00704789161682	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	3.2.0.13.13	search with cache (only 1: intros n IH; only 1: induction n as [| k Hrec]; only 1: reflexivity; only 1: simpl in *; only 1: discriminate).	3.12654995918	5884
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.1.11	search with cache (only 1: destruct f; only 1: reflexivity; only 1: simpl; only 1: auto).	0.125710964203	209
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	0.2.1.11.8.1.9	search with cache (only 1: destruct f; only 1: reflexivity; only 1: destruct c; only 1: destruct f; only 1: reflexivity; only 1: auto; only 1: auto).	11.3636789322	24656
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.1.0.1.1.6.0.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: simpl; only 1: reflexivity).	2.58481097221	2651
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	22	search with cache (only 1: firstorder  (subst; auto)).	2.83065986633	3156
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0161559581757	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	1.4.6.0.2.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold make_conj at 2; only 1: repeat rewrite make_conj_cons in *; only 1: unfold eval_clause at 2; only 1: tauto).	5.60865783691	3141
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0371930599213	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	3.3	search with cache (only 1: intro n; only 1: now destruct n).	0.0658791065216	15
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.011736869812	1
Coq.micromega.EnvRing.rmul_ext_Proper	40	2	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0129208564758	3
Coq.micromega.EnvRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0110960006714	1
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40	31.14	search with cache (only 1: simpl; only 1: firstorder).	1.58246612549	1579
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40	0.0.9.0.0	search with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	0.417298078537	193
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	10.2680590153	1628
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	1.2.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	11.6545519829	2397
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0254321098328	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.047520160675	8
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.2.1.7	search with cache (only 1: induction M; only 1: rsimpl; only 1: Esimpl; only 1: simpl; only 1: rsimpl).	1.2387239933	347
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0537889003754	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.0546438694	2
Coq.micromega.RingMicromega.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0523591041565	1
Coq.micromega.RingMicromega.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0524430274963	1
Coq.micromega.RingMicromega.rlt_morph_Proper	40	1	search with cache (only 1: exact (SORlt_wd sor)).	0.0550689697266	2
Coq.micromega.RingMicromega.rminus_morph_Proper	40	0.0.0.0.2	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.214166164398	7
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.0.0.2.3	search with cache (only 1: intro Pdec; only 1: induction l; only 1: constructor; only 1: simpl; only 1: auto).	0.0270099639893	27
Coq.micromega.Refl.make_impl_map	40	5.3.0	search with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: firstorder).	0.100248098373	84
Coq.micromega.Refl.make_conj_cons	40	0.0.2.2.0.0.0.1.2.0.4	search with cache (only 1: simpl; only 1: split; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	6.64772295952	8502
Coq.micromega.Refl.make_conj_impl	40	0.1.5.0.2.0.0.1	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: tauto).	7.99501609802	5814
Coq.micromega.Refl.make_conj_in	40	0.0.2.0.0.0.1.5.1.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: destruct l; only 1: firstorder; only 1: subst; only 1: auto; only 1: simpl; only 1: firstorder; only 1: subst; only 1: auto).	12.5035018921	14758
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	search with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.126832962036	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	3.11	search with cache (only 1: fix le_div2 1; only 1: trivial).	1.38594508171	956
Coq.rtauto.Bintree.map_app	40	0.0.1.0.0.0.2.0	search with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.164784908295	81
Coq.rtauto.Bintree.length_map	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0297999382019	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.0.0.4.5.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: now intros []; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	12.1559209824	7825
Coq.rtauto.Bintree.Lget_app_Some	40	0.0.1.0.4.3.3.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: intros l' n; only 1: induction n as [| n IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.64570903778	2109
Coq.rtauto.Bintree.Tget_Tempty	40	0	search with cache (only 1: now intros []).	0.0201020240784	1
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	1	search with cache (only 1: now intros []).	0.0203011035919	2
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	2.11.1.2.5	search with cache (only 1: intros; only 1: intro H; only 1: destr_eq H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: auto).	1.3318669796	2300
Coq.rtauto.Bintree.get_In	40	8.23.1.2	search with cache (only 1: unfold push, index, get; only 1: intros i j; only 1: fix sqrtrem_spec 1; only 1: auto).	38.8199989796	74275
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40	0.25.5.1	search with cache (only 1: intros; only 1: case S; only 1: fix sqrtrem_spec 1; only 1: auto).	8.03246188164	13340
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	2.2.0.0.3.13	search with cache (only 1: intros [index0 contents0] F; only 1: induction F; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.51864504814	3082
Coq.rtauto.Rtauto.compose1	40	1.4.3.0.1.9.7	search with cache (only 1: intros [index0 contents0] F; only 1: case F; only 1: auto; only 1: intros A H; only 1: simpl; only 1: fix sqrtrem_spec 1; only 1: auto).	22.2882039547	31001
Coq.rtauto.Rtauto.compose2	40	5.2.0.0.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: firstorder).	0.800036907196	686
Coq.rtauto.Rtauto.compose3	40	9.0.0.0.0.1.0	search with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: auto; only 1: intros A B C H; only 1: simpl; only 1: firstorder).	2.52412700653	2458
Coq.rtauto.Rtauto.weaken	40	0.0.8.4.7	search with cache (only 1: intros n Hn; only 1: simpl; only 1: fix sqrtrem_spec 1; only 1: intros A B H; only 1: auto).	11.9995269775	11150
Coq.rtauto.Rtauto.project_In	40	2.6.6	search with cache (only 1: intros S F; only 1: fix sqrtrem_spec 1; only 1: auto).	0.871123075485	1185
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40	3.11.35.0.11	search with cache (only 1: intro i; only 1: intros; only 1: generalize i; only 1: fix sqrtrem_spec 1; only 1: auto).	28.5403428078	62782
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0760881900787	1
Coq.omega.OmegaLemmas.Zred_factor1	40	5.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: change_no_check 2 with (1 + 1); only 1: now Z.nzsimpl).	0.102952957153	23
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	1	search with cache (only 1: now Z.nzsimpl).	0.367444038391	30
Coq.omega.OmegaLemmas.Zred_factor4	40	13.11	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	0.972718000412	444
Coq.omega.OmegaLemmas.Zred_factor5	40	7	search with cache (only 1: now Z.nzsimpl).	0.0388200283051	8
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now destruct n).	0.0112299919128	1
Coq.omega.OmegaLemmas.new_var	40	0.39	search with cache (only 1: intros n; only 1: now exists n).	1.28340005875	3284
Coq.omega.OmegaLemmas.OMEGA1	40	6.2	search with cache (only 1: intro EQ; only 1: now rewrite EQ).	0.0158350467682	10
Coq.omega.OmegaLemmas.OMEGA2	40	2.9.0.0.6	search with cache (only 1: destruct x; only 1: auto; only 1: simpl; only 1: easy || now destruct y; only 1: easy).	3.75067996979	1509
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	0.6.11.16	search with cache (only 1: intros H; only 1: intros ->; only 1: rewrite H; only 1: auto).	1.29122495651	1477
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	0.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0251688957214	3
Coq.omega.OmegaLemmas.OMEGA12	40	2.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0223989486694	4
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0915269851685	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.1.2.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.109022140503	18
Coq.omega.OmegaLemmas.OMEGA16	40	3.5	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.0367398262024	10
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0373361110687	2
Coq.omega.OmegaLemmas.OMEGA18	40	4.2.2.1	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now intros ->).	0.22008395195	121
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.109929084778	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.027529001236	6
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.0.0.4.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.0390491485596	18
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0271770954132	6
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.086669921875	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0832810401917	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0979900360107	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	search with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0867729187012	3
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40	0.1.3.0	search with cache (only 1: revert q; only 1: intros; only 1: rewrite Pos.eqb_eq; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).	0.383917093277	88
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40	11.0	search with cache (only 1: unfold Positive_as_DT.ltb, Positive_as_DT.lt; only 1: now case Pos.compare).	0.65847992897	224
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40	7.0	search with cache (only 1: unfold Positive_as_OT.leb, Positive_as_OT.le; only 1: now case Pos.compare).	0.145574808121	9
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.122110843658	9
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.0.8.31	search with cache (only 1: intros a Ha; only 1: inversion 1; only 1: simpl; only 1: trivial).	10.8350009918	4055
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	0	search with cache (only 1: reflexivity).	0.0182428359985	1
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	0.3.4	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto).	0.0121898651123	10
Coq.funind.Recdef.Splus_lt	40	0.1.3	search with cache (only 1: apply Nat.lt_succ_r; only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.0110549926758	7
Coq.funind.Recdef.SSplus_lt	40	11	search with cache (only 1: auto with arith).	0.36164689064	303
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0183479785919	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	1.1.0.0.0	search with cache (only 1: intro EQ; only 1: symmetry in EQ; only 1: revert EQ; only 1: intros H1; only 1: discriminate).	0.025584936142	7
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	1	search with cache (only 1: assumption).	0.0133819580078	2
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0124359130859	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40	1.3.0.0.0.0.0.0.0	search with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: Esimpl).	19.6171951294	618
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	2.0.0.0.1	search with cache (only 1: intros; only 1: simpl; only 1: rewrite ring_morphism0; only 1: rewrite ring_morphism1; only 1: rsimpl).	0.124001979828	8
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	1.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.62444210052	64
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.1.0.0.0.1.0.0.3	search with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.816817045212	485
Coq.setoid_ring.Ring.bool_eq_ok	40	3	search with cache (only 1: destr_bool).	0.0351829528809	11
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0134570598602	1
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0139288902283	2
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0127160549164	1
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	2	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0166010856628	3
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	2.4	search with cache (only 1: intros x y H; only 1: auto).	0.0235769748688	8
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.0834379196167	1
Coq.setoid_ring.Field_theory.rsub_0_l	40	2	search with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.039500951767	3
Coq.setoid_ring.Field_theory.rsub_0_r	40	3.0	search with cache (only 1: rewrite rsub_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.0501530170441	5
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	11	search with cache (only 1: eauto).	0.754367113113	66
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40	17.25.6.22	search with cache (only 1: rewrite rdiv_def; only 1: symmetry; only 1: rewrite rdiv_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	17.3372910023	14428
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40	0.1.4.16	search with cache (only 1: intros Hb H; only 1: rewrite rdiv_def, rmul_comm; only 1: rewrite H; only 1: apply rmul_0_r).	31.8798899651	7179
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40	0.0.1.0.1.1.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl; only 1: now rewrite !IHp; only 1: simpl; only 1: now rewrite !IHp; only 1: simpl; only 1: trivial).	14.2151679993	169
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	0.111760139465	11
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0649869441986	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0605890750885	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	4.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.0887629985809	8
Coq.setoid_ring.Field_theory.PEpow_0_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: eauto).	0.122949838638	3
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.1.4.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite !rpow_pow; only 1: simpl; only 1: reflexivity).	0.0934619903564	10
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.1.2.0.0.0.0.0.1.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	6.89743804932	1484
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	1.5.0	search with cache (only 1: red; only 1: rewrite PCond_cons; only 1: now destruct 1).	0.06804895401	14
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	9	search with cache (only 1: auto).	0.118245840073	32
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0134031772614	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0135209560394	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0137538909912	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	1	search with cache (only 1: exact eq_equivalence).	0.00999402999878	2
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	0.0.0.9	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.213905096054	136
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	0.2.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.0234410762787	5
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	4	search with cache (only 1: reflexivity).	0.023463010788	5
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	22	search with cache (only 1: now rewrite ?H, ?IHp).	0.159014940262	231
Coq.setoid_ring.Ring_theory.IDmorph	40	1.2.1.2.2.2.2.17	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.906871080399	1186
Coq.setoid_ring.Ring_theory.Eqsth	40	3.0.0.3.1.23	search with cache (only 1: split; only 1: congruence; only 1: red; only 1: intros; only 1: auto; only 1: congruence).	0.436187982559	801
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	8.8.51	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	1.21950697899	2949
Coq.setoid_ring.Ring_theory.Eq_ext	40	1.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0947058200836	6
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	79	search with cache (only 1: firstorder).	34.2987229824	80865
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	4.4	search with cache (only 1: intros a b H; only 1: trivial).	0.0292029380798	10
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.1.0.7	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.241088867188	72
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	7	search with cache (only 1: solve_proper).	0.0242609977722	8
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.0229740142822	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0233190059662	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	4.1.1.1.1.2.2.4	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.711997032166	777
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40	7	search with cache (only 1: firstorder).	0.0769469738007	16
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	23.0	search with cache (only 1: intros x y H; only 1: simpl_relation).	0.454800844193	867
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	23	search with cache (only 1: firstorder).	2.75550198555	1337
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	14	search with cache (only 1: firstorder).	0.313347101212	203
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	26.9.7	search with cache (only 1: intro n; only 1: intros; only 1: firstorder).	5.25782799721	8396
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	2.3	search with cache (only 1: intros x y H; only 1: auto).	0.0306470394135	7
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0361151695251	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0395319461823	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0244560241699	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0251450538635	1
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.023992061615	1
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	2	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0266568660736	3
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.025542974472	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	0.3.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0336439609528	6
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.6.0.0.0.0.0.0.0.6	search with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	12.1530840397	6226
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (SRadd_ext SReqe)).	0.0247678756714	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0253429412842	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0236940383911	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0231649875641	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0224559307098	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0252521038055	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.153991222382	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.0.1.2.0	search with cache (only 1: induction x; only 1: simpl; only 1: norm; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm).	0.0504961013794	8
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0247700214386	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0251750946045	1
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0250899791718	1
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	1	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0289590358734	2
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40	0.0.0.5	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.117350101471	9
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	0.0.11	search with cache (only 1: constructor; only 1: intros; only 1: reflexivity).	0.527998924255	61
Coq.setoid_ring.Cring.cring_div_theory	40	1.5.0.1.7.0.9.0.0.0.0.7	search with cache (only 1: constructor; only 1: intros; only 1: generalize (Z.quotrem_eq a b); only 1: case Z.quotrem; only 1: intros; only 1: destruct (Z_le_gt_dec 0 b) as [Hb'| Hb']; only 1: subst; only 1: rewrite Z.mul_comm; only 1: reflexivity; only 1: subst; only 1: rewrite Z.mul_comm; only 1: reflexivity).	30.081715107	12549
Coq.setoid_ring.Cring.Zcri	40	7.1.10.24	search with cache (only 1: intros H1; only 1: repeat red; only 1: intros; only 1: auto with zarith).	4.69766783714	2920
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	1	search with cache (only 1: exact (Radd_ext Reqe)).	0.010715007782	2
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	2	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0124080181122	3
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0120930671692	2
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	7.1	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.211493968964	41
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	2.18	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	6.8681139946	1461
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	0.1.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	20.9817991257	3296
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	1.1.0.0.0.0.0.0.0.1.0.0.0.1	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: rsimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	14.5686969757	3199
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40	5.25	search with cache (only 1: fix even_spec 1; only 1: auto).	17.1015470028	11745
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40	0.1.1.0.2.1.4	search with cache (only 1: destruct n; only 1: Esimpl; only 1: intros; only 1: Esimpl; only 1: intros; only 1: simpl; only 1: Esimpl).	4.78516602516	949
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40	1.0.1.0.2.0.0.0.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: change_no_check x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: now rewrite ?(rpow_pow_N pow_th)).	15.4819278717	1234
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	3.0.1	search with cache (only 1: intro x; only 1: intros; only 1: reflexivity).	0.0553917884827	7
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.1.0.0	search with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0831241607666	5
Coq.setoid_ring.Ncring.ring_add_assoc1	40	4.3.18.1	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).	11.1519930363	5012
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.0.4.0.14.5.0	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm y); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	14.1648230553	5478
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	1.5	search with cache (only 1: intros a b; only 1: apply Zeq_is_eq_bool).	0.072319984436	16
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.0.22	search with cache (only 1: repeat red; only 1: intros a b; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	4.18558502197	1991
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0194540023804	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.00805902481079	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	search with cache (only 1: by case : {}k {}).	0.00982594490051	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.4	search with cache (only 1: destruct 1; only 1: auto).	0.0331997871399	6
Coq.ssr.ssreflect.iffLR	40	2.2	search with cache (only 1: intro H1; only 1: tauto).	0.0118198394775	6
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.00969982147217	1
Coq.ssr.ssreflect.iffLRn	40	1	search with cache (only 1: intuition).	0.0176548957825	2
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.010931968689	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.0093879699707	1
Coq.ssr.ssrbool.is_true_true	40
Coq.ssr.ssrbool.not_false_is_true	40	0	search with cache (only 1: by [  ]).	0.0484540462494	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.15	search with cache (only 1: unlock; only 1: by [  ]).	0.0292110443115	108
Coq.ssr.ssrbool.negbT	40	0.0.1	search with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.00660705566406	4
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.00642681121826	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.00649285316467	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.00637698173523	1
Coq.ssr.ssrbool.negbK	40	0	search with cache (only 1: by case).	0.0247931480408	1
Coq.ssr.ssrbool.negbNE	40	3	search with cache (only 1: by case : {}b {}).	0.00797319412231	4
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	2	search with cache (only 1: Bool.destr_bool).	0.0125858783722	11
Coq.ssr.ssrbool.negbRL	40	2	search with cache (only 1: Bool.destr_bool).	0.0121219158173	11
Coq.ssr.ssrbool.contra	40
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0101161003113	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0101208686829	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0101780891418	1
Coq.ssr.ssrbool.contraT	40	3.17	search with cache (only 1: Bool.destr_bool; only 1: auto with bool).	0.270677089691	234
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : {}b {} =>// {+}->).	0.00790905952454	1
Coq.ssr.ssrbool.contraFT	40	2.17	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.347492218018	203
Coq.ssr.ssrbool.contraFN	40	2.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	7.95761990547	162
Coq.ssr.ssrbool.contraTF	40
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0486779212952	1
Coq.ssr.ssrbool.ifT	40	7	search with cache (only 1: by case : {}b {}).	0.14541387558	11
Coq.ssr.ssrbool.ifF	40	0	search with cache (only 1: by move {+}->).	0.00507783889771	1
Coq.ssr.ssrbool.ifN	40	3	search with cache (only 1: by case : {}b {}).	0.00945997238159	4
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.114330053329	3
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case b).	0.0922589302063	1
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0288021564484	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.0265700817108	1
Coq.ssr.ssrbool.ifE	40	3	search with cache (only 1: trivial).	0.0739898681641	4
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0528190135956	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.00881099700928	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.00904297828674	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	4	search with cache (only 1: by case Pb).	0.0548779964447	5
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.186718940735	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.276792049408	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.145193099976	1
Coq.ssr.ssrbool.pair_andP	40	2	search with cache (only 1: tauto).	0.273650169373	3
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.0287640094757	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00572609901428	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.00793695449829	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00612497329712	1
Coq.ssr.ssrbool.negPf	40
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0102529525757	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0150721073151	1
Coq.ssr.ssrbool.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.00801277160645	1
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by [  ]).	0.00541400909424	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by constructor; case).	0.0928390026093	1
Coq.ssr.ssrbool.andbT	40
Coq.ssr.ssrbool.andbF	40	1	search with cache (only 1: by case).	0.0515270233154	2
Coq.ssr.ssrbool.andbb	40	0	search with cache (only 1: by case).	0.0252180099487	1
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.00565600395203	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00715899467468	1
Coq.ssr.ssrbool.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00897598266602	1
Coq.ssr.ssrbool.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00972700119019	1
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: by [  ]).	0.00507497787476	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.0271320343018	1
Coq.ssr.ssrbool.orbT	40	1	search with cache (only 1: by case).	0.00723600387573	2
Coq.ssr.ssrbool.orbF	40	1	search with cache (only 1: by case).	0.030336856842	2
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00583600997925	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00706505775452	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00866198539734	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00880885124207	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00907301902771	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0923390388489	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: by case : {}b {}).	0.00583600997925	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.00574016571045	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : {}b {}).	0.00593614578247	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.00599193572998	1
Coq.ssr.ssrbool.andb_orl	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.013689994812	3
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00926303863525	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00916600227356	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00925087928772	1
Coq.ssr.ssrbool.andb_idl	40	4.10	search with cache (only 1: Bool.destr_bool; only 1: intuition).	2.036413908	101
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.289682865143	1
Coq.ssr.ssrbool.andb_id2l	40	2.2.19	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	9.17407512665	438
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.467190027237	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0966789722443	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0101678371429	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.208914995193	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0151290893555	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.00795292854309	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00758290290833	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0075831413269	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00766801834106	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0074770450592	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00737404823303	1
Coq.ssr.ssrbool.implybT	40	0	search with cache (only 1: by case : {}b {} =>// {+}->).	0.00581908226013	1
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.00587582588196	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.00582408905029	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.00596690177917	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.007493019104	2
Coq.ssr.ssrbool.negb_imply	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00765800476074	2
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00755882263184	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00769400596619	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00762915611267	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00756287574768	1
Coq.ssr.ssrbool.implyb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.226560115814	1
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0539319515228	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.144906997681	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.0053870677948	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00589990615845	1
Coq.ssr.ssrbool.addbb	40	0	search with cache (only 1: by case).	0.00582003593445	1
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00711798667908	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00918006896973	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00946021080017	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00904488563538	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0138311386108	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00937795639038	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00935912132263	1
Coq.ssr.ssrbool.addKb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00820589065552	2
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00658917427063	1
Coq.ssr.ssrbool.addIb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0122969150543	2
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0107569694519	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.00611400604248	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.00753688812256	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00779604911804	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00744199752808	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.23	search with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	0.932842969894	371
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : {}pT {}pp {}).	0.00782108306885	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	1	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.0279150009155	2
Coq.ssr.ssrbool.unfold_in	40	1	search with cache (only 1: by rewrite -mem_topred).	0.0957140922546	2
Coq.ssr.ssrbool.simpl_predE	40	1	search with cache (only 1: by [  ]).	0.0050368309021	2
Coq.ssr.ssrbool.mem_simpl	40	1	search with cache (only 1: by [  ]).	0.00626492500305	2
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	4	search with cache (only 1: by [  ]).	0.00651097297668	5
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	1	search with cache (only 1: reflexivity).	0.1085729599	2
Coq.ssr.ssrbool.in1W	40	3.15	search with cache (only 1: move  {}=>f0 fP; only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.45863199234	171
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00930905342102	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0081160068512	1
Coq.ssr.ssrbool.in1T	40	10	search with cache (only 1: auto).	0.0265328884125	24
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0137460231781	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0150620937347	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0151340961456	2
Coq.ssr.ssrbool.sub_in11	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.427172899246	3
Coq.ssr.ssrbool.sub_in111	40	3	search with cache (only 1: by move  {}=>? ?; auto).	1.37033700943	4
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.632673025131	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.274780035019	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.104950904846	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.233203887939	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.160614013672	2
Coq.ssr.ssrbool.on2T	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.00829911231995	1
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.756147861481	2
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	1.00316977501	1
Coq.ssr.ssrbool.subon2	40	2	search with cache (only 1: by move  {}=>? ?; auto).	1.18984699249	3
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	0.686753034592	1
Coq.ssr.ssrbool.canLR_on	40	0	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.392374038696	1
Coq.ssr.ssrbool.canRL_on	40	1	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.250447034836	2
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.200525999069	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.349254846573	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.107840061188	1
Coq.ssr.ssrbool.sub_in_bij	40
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.537441968918	1
Coq.ssr.ssrbool.sub_in2	40	8.10	search with cache (only 1: Bool.destr_bool; only 1: by move  {}=>? ?; auto).	2.70328092575	211
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  {}=>/= sub1 sub; apply : {}sub_in111 {}).	0.0311000347137	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	0	search with cache (only 1: by move  {}=>eq_fg eq_gh x; rewrite eq_fg).	0.0283741950989	1
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0701158046722	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.838741064072	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	19	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	2.10070705414	330
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.627930879593	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	1	search with cache (only 1: firstorder).	0.00811409950256	2
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40	0.3	search with cache (only 1: intro H1; only 1: trivial).	0.0329270362854	5
Coq.ssr.ssrfun.fsym	40	1.13	search with cache (only 1: intros; only 1: by [  ]).	0.309075117111	113
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	0	search with cache (only 1: by [  ]).	0.00901103019714	1
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0167608261108	1
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : {}u {}).	0.0546610355377	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.0548839569092	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0352489948273	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	0.888649940491	1
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.293169021606	2
Coq.ssr.ssrfun.canLR	40
Coq.ssr.ssrfun.canRL	40	9.13.7	search with cache (only 1: intros Hfst Hsnd; only 1: subst; only 1: auto).	6.93054890633	909
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	6	search with cache (only 1: by [  ]).	0.228581905365	7
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	1	search with cache (only 1: by move  {}=>eq_fg x).	0.00961709022522	2
Coq.ssr.ssrfun.inj_can_sym	40	5.9.10	search with cache (only 1: intros; only 1: intro H1; only 1: auto).	0.495820045471	781
Coq.ssr.ssrfun.inj_comp	40	21.1.6.7	search with cache (only 1: intros Hfst Hsnd; only 1: red; only 1: Bool.destr_bool; only 1: auto).	2.04634094238	4361
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.00421595573425	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: now trivial).	0.00385308265686	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.00394988059998	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00331592559814	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00340294837952	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.3.3.8	search with cache (only 1: intros m n v1; only 1: intro H; only 1: intros <-; only 1: trivial).	0.335487127304	692
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.1	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0120859146118	4
Coq.Vectors.VectorSpec.const_nth	40	0.0.9.6	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	0.422415018082	317
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: auto with arith).	0.0113298892975	5
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	1.2.3.2.0.3.5.22	search with cache (only 1: intros h; only 1: intros m n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intro eq_dep_eq; only 1: intros; only 1: now f_equal).	9.61714196205	14987
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0244669914246	9
Coq.Vectors.VectorSpec.uncons_cons	40	0.0.0.1	search with cache (only 1: intros; only 1: induction v; only 1: now simpl; only 1: now simpl).	0.0142800807953	5
Coq.Vectors.VectorSpec.append_comm_cons	40	0	search with cache (only 1: reflexivity).	0.00636696815491	1
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	50.0.51	search with cache (only 1: destruct n; only 1: trivial; only 1: left).	21.9365918636	70380
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	25.1	search with cache (only 1: intros h; only 1: congruence).	3.44375300407	8908
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.00574994087219	1
Coq.Setoids.Setoid.Seq_sym	40	0	search with cache (only 1: firstorder).	0.00694513320923	1
Coq.Setoids.Setoid.Seq_trans	40	1.1.0.0.0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: transitivity y; only 1: symmetry; only 1: symmetry; only 1: assumption; only 1: auto).	0.0181679725647	24
Coq.Setoids.Setoid.gen_st	40	1	search with cache (only 1: CRelationClasses.simpl_crelation).	0.00712299346924	2
Coq.Bool.IfProp.Iftrue_inv	40	3.1.0.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.00671696662903	8
Coq.Bool.IfProp.Iffalse_inv	40	0.0.5.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: discriminate; only 1: intros; only 1: assumption).	0.00623393058777	10
Coq.Bool.IfProp.IfProp_true	40	0.11.1	search with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: assumption).	0.186568021774	603
Coq.Bool.IfProp.IfProp_false	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.00474286079407	3
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.1	search with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.117991924286	98
Coq.Bool.IfProp.IfProp_sum	40	0.0.5.0.0.4.1	search with cache (only 1: destr_bool; only 1: left; only 1: inversion H; only 1: assumption; only 1: right; only 1: inversion H; only 1: assumption).	0.419472932816	948
Coq.Bool.Zerob.zerob_true_intro	40	1.3	search with cache (only 1: intros; only 1: now subst).	0.0445399284363	6
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0472378730774	3
Coq.Bool.Zerob.zerob_false_intro	40	0.1.5.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: intro H; only 1: trivial).	0.0797739028931	25
Coq.Bool.Zerob.zerob_false_elim	40	4.1.5.0	search with cache (only 1: destruct n; only 1: intuition; only 1: inversion 1; only 1: now simpl).	0.833515167236	544
Coq.Bool.DecBool.ifdec_left	40	0.16.1.5.10	search with cache (only 1: intro H; only 1: intros A B []; only 1: reflexivity; only 1: destruct 1; only 1: assumption).	1.96492791176	14746
Coq.Bool.DecBool.ifdec_right	40	0.0.5.1.4.11	search with cache (only 1: intros A C h1 h2; only 1: intros; only 1: destruct h2; only 1: case H; only 1: assumption; only 1: trivial).	4.95033288002	24546
Coq.Bool.Sumbool.sumbool_of_bool	40
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.1	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0062141418457	4
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0050630569458	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.00808215141296	7
Coq.Bool.Sumbool.sumbool_not	40	0.0.0.1.4	search with cache (only 1: case H1; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0258779525757	53
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	0	search with cache (only 1: discriminate).	0.00371098518372	1
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00319218635559	1
Coq.Bool.Bool.eq_true_false_abs	40	3.2.11.9	search with cache (only 1: intro H1; only 1: elim H1; only 1: discriminate; only 1: discriminate).	0.204705953598	1756
Coq.Bool.Bool.not_true_is_false	40	2.3.1	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: trivial).	0.00604510307312	9
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00514507293701	3
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.1	search with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.0171658992767	39
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0077600479126	3
Coq.Bool.Bool.leb_implb	40	2.0.2.0.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0582041740417	176
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.00585889816284	1
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00426006317139	1
Coq.Bool.Bool.eqb_prop	40	0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: intuition; only 1: intuition; only 1: intuition; only 1: destr_bool).	0.00721192359924	5
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.00970792770386	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.022519826889	19
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.00562810897827	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00558590888977	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00449991226196	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00427484512329	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0793471336365	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00521087646484	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.0041618347168	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00416612625122	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00466799736023	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00699496269226	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00728917121887	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0130069255829	5
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.012316942215	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.00929713249207	5
Coq.Bool.Bool.orb_prop	40	0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0334451198578	60
Coq.Bool.Bool.orb_true_intro	40	1.0.2.0.0.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: intuition; only 1: destruct b2; only 1: intuition; only 1: simpl; only 1: intuition).	0.0120930671692	17
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.00557804107666	1
Coq.Bool.Bool.orb_false_elim	40	0.0.0.0.2.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: destruct b2; only 1: intuition; only 1: intuition; only 1: simpl; only 1: auto).	0.0117387771606	15
Coq.Bool.Bool.orb_diag	40	1	search with cache (only 1: destr_bool).	0.0045862197876	2
Coq.Bool.Bool.orb_true_r	40	1	search with cache (only 1: destr_bool).	0.00445294380188	2
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00436997413635	1
Coq.Bool.Bool.orb_false_r	40	0	search with cache (only 1: destr_bool).	0.00430607795715	1
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00420212745667	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00438809394836	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.00545001029968	1
Coq.Bool.Bool.orb_assoc	40	1	search with cache (only 1: destr_bool).	0.00786399841309	2
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0122909545898	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0145478248596	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.00921988487244	9
Coq.Bool.Bool.andb_false_intro1	40	0.1.1	search with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.00544905662537	5
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.005215883255	3
Coq.Bool.Bool.andb_false_r	40	0	search with cache (only 1: destr_bool).	0.00451588630676	1
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00430798530579	1
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.00444793701172	1
Coq.Bool.Bool.andb_true_r	40	0	search with cache (only 1: destr_bool).	0.00440120697021	1
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00432991981506	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00626993179321	5
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00488686561584	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.0055468082428	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0069727897644	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00769090652466	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00730800628662	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00743508338928	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00767493247986	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00538492202759	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00544285774231	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00439596176147	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00438284873962	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00445294380188	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.0037670135498	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00426483154297	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.00543284416199	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.00759387016296	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00591897964478	1
Coq.Bool.Bool.xorb_move_l_r_1	40	4.0	search with cache (only 1: intros; only 1: destr_bool).	0.00925612449646	6
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.00853109359741	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.00748300552368	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.00778794288635	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.00586295127869	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00699996948242	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.00555896759033	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0314059257507	28
Coq.Bool.Bool.eq_true_iff_eq	40	2.0.1.0.0	search with cache (only 1: destruct b1; only 1: destr_bool; only 1: intuition; only 1: destr_bool; only 1: intuition).	0.0108211040497	8
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00545120239258	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00541996955872	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00652694702148	5
Coq.Bool.Bool.absurd_eq_true	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.00515794754028	4
Coq.Bool.Bool.trans_eq_bool	40	0.3.0	search with cache (only 1: intuition; only 1: subst; only 1: trivial).	0.0075089931488	6
Coq.Bool.Bool.Is_true_eq_true	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.00528192520142	4
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.0045120716095	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00467085838318	3
Coq.Bool.Bool.eqb_refl	40	1	search with cache (only 1: destr_bool).	0.00549101829529	2
Coq.Bool.Bool.eqb_eq	40	0.0.3	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00739812850952	6
Coq.Bool.Bool.orb_prop_elim	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.00887703895569	7
Coq.Bool.Bool.orb_prop_intro	40	4.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00670099258423	6
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.00721192359924	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.00892519950867	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0090959072113	3
Coq.Bool.Bool.eq_bool_prop_elim	40	2.0.0.2.0	search with cache (only 1: destr_bool; only 1: split; only 1: auto; only 1: auto; only 1: tauto).	0.00890707969666	9
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00616812705994	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00631809234619	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00581884384155	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00611591339111	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.00589299201965	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00527691841125	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.00503897666931	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.00345301628113	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	3.6.8.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: destruct H; only 1: intuition).	0.40712594986	1231
Coq.Bool.Bool.reflect_dec	40	0.0.1	search with cache (only 1: destruct 1; only 1: tauto; only 1: intuition).	0.00881791114807	4
Coq.Bool.Bool.eqb_spec	40	0.1.1.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0094850063324	9
Coq.Bool.BoolEq.beq_eq_true	40	0.3	search with cache (only 1: destruct 1; only 1: intuition).	0.0115718841553	14
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	1.0.0.1.0.0.3.1	search with cache (only 1: simple induction x; only 1: easy; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: auto; only 1: intros H; only 1: auto).	0.793241977692	611
Coq.Lists.ListSet.set_mem_correct2	40	3.5.0.0.0.0.2.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intros; only 1: firstorder).	10.5748550892	7987
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40	0.5.4.0.2.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: destruct 1; only 1: intuition; only 1: auto with datatypes).	16.2796928883	17928
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	0.1.0.0.0.3.0.2.1.1.1.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: subst; only 1: elim (Aeq_dec b a0); only 1: left; only 1: auto; only 1: right; only 1: auto with datatypes).	7.0401802063	7523
Coq.Lists.ListSet.set_add_intro	40	0.0.2	search with cache (only 1: inversion 1; only 1: auto; only 1: auto).	0.0554959774017	37
Coq.Lists.ListSet.set_add_elim	40	2.1.0.0.1.0.3.0.0.0.2.0.1.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec b a0); only 1: intros H H0 []; only 1: auto; only 1: auto; only 1: simpl; only 1: tauto).	26.0765669346	21535
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	3.95738387108	3270
Coq.Lists.ListSet.set_add_not_empty	40	1.7.4.0.0.0.2.1	search with cache (only 1: simple induction x; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: intros; only 1: discriminate).	8.58678388596	9450
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40	0.0.1.0.0.0.0.0.13	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: intros H0 [| ]; only 1: auto; only 1: auto).	2.30688691139	2423
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40	0.1.0.3.0.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: induction l as [| x l IH]; only 1: intro ND; only 1: simpl; only 1: tauto; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: left; only 1: assumption; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: simpl; only 1: auto).	31.6540942192	31171
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.3.0.1.1.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	0.404515981674	227
Coq.Lists.ListSet.set_union_intro	40	0.0.1	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.240042924881	72
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.1.0.0.0.0.2	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: auto with datatypes).	0.747353076935	403
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0209259986877	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	3.1.0.1.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	0.651349067688	231
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40	2.0.0.0.1.0.0.0.1	search with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: firstorder; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).	1.20574903488	828
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	0.7	search with cache (only 1: intros (x, (Hx, Huni)); only 1: trivial).	0.00548791885376	9
Coq.Lists.Streams.tl_nth_tl	40	0.3.0.1.3	search with cache (only 1: induction n; only 1: split; only 1: intro x; only 1: case x; only 1: trivial).	0.0792181491852	272
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	1.9.0.6	search with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: rewrite <- H; only 1: reflexivity).	0.328270196915	1601
Coq.Lists.Streams.trans_EqSt	40	0.1.2.9.1.6	search with cache (only 1: destruct 2; only 1: case H; only 1: destruct 1; only 1: coinduction ltac:(Eq_sym); only 1: assumption; only 1: assumption).	36.915776968	79243
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40
Coq.Lists.Streams.Str_nth_tl_map	40	0.1.0.0	search with cache (only 1: simple induction n; only 1: auto; only 1: simpl; only 1: auto).	0.00815391540527	5
Coq.Lists.Streams.Str_nth_map	40	0.2.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.00658202171326	6
Coq.Lists.Streams.ForAll_map	40	2.14.0.0.12.0.6	search with cache (only 1: split; only 1: destruct 1; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: auto; only 1: destruct 1; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: auto).	1.90096902847	15531
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	4.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.00785183906555	8
Coq.Lists.Streams.Str_nth_zipWith	40	0.1.1.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.00938391685486	8
Coq.Lists.List.nil_cons	40	6	search with cache (only 1: RelationClasses.simpl_relation).	0.164323806763	50
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	0.0.0.2	search with cache (only 1: destruct l as [| x xs]; only 1: intros; only 1: discriminate; only 1: discriminate).	0.0197811126709	15
Coq.Lists.List.length_zero_iff_nil	40	0.0.11.0	search with cache (only 1: red; only 1: destruct l; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.141354084015	218
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.00976896286011	1
Coq.Lists.List.hd_error_cons	40	0	search with cache (only 1: reflexivity).	0.010064125061	1
Coq.Lists.List.in_eq	40	0.0	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.01038813591	2
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00968790054321	2
Coq.Lists.List.not_in_cons	40	10.2	search with cache (only 1: simpl; only 1: intuition).	0.125561952591	140
Coq.Lists.List.in_nil	40	0.2.1	search with cache (only 1: simpl; only 1: intros; only 1: tauto).	0.00955986976624	6
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0068781375885	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	0.2.0	search with cache (only 1: simpl; only 1: intros; only 1: reflexivity).	0.0112788677216	5
Coq.Lists.List.app_nil_r	40	0.6.4.0.6	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.404891014099	862
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0160880088806	7
Coq.Lists.List.app_assoc	40	1.0.7.1.2.1	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	0.786885976791	1246
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0185389518738	7
Coq.Lists.List.app_comm_cons	40	0.1.0	search with cache (only 1: intros l m n; only 1: simpl; only 1: f_equal).	0.0125198364258	4
Coq.Lists.List.app_eq_nil	40	0.0.4.0	search with cache (only 1: induction l as [| a tail]; only 1: intros a r; only 1: auto; only 1: firstorder  discriminate).	0.0217480659485	8
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40	1.11.7	search with cache (only 1: intro H; only 1: fix gcd_divide 1; only 1: auto).	0.804553031921	1276
Coq.Lists.List.app_length	40	0.0.1.2	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0606019496918	71
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	0.0.0.2.2.1.0.3.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a0 y H H0; only 1: elim H0; only 1: destruct 1; only 1: auto; only 1: auto; only 1: auto).	2.97356009483	3872
Coq.Lists.List.in_app_iff	40	0.3.0.0.6.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intro H; only 1: intros; only 1: intuition).	3.3104929924	3743
Coq.Lists.List.app_inv_head	40	0.10.1.4.0.0.12.0	search with cache (only 1: intros l m n; only 1: elim l; only 1: simpl; only 1: auto; only 1: intro H; only 1: simpl; only 1: intros a b [=]; only 1: auto).	21.4465510845	42780
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40	0.28	search with cache (only 1: fix odd_spec 1; only 1: auto).	35.1764030457	39150
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0100131034851	2
Coq.Lists.List.nth_default_eq	40	1.2.0.0.0.1.0.3.1.0.0.0	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: destruct (IHl n); only 1: auto).	15.6402578354	17707
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40	5.0.0.6.1.0.1.4.2.0	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l as [| a l IH]; only 1: intros [| ] ?; only 1: trivial; only 1: inversion_clear H; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto with arith).	29.8115119934	55072
Coq.Lists.List.nth_indep	40	0.2.0.1.1.0.3.4.0	search with cache (only 1: induction l; only 1: intros a b l H; only 1: now Nat.nzsimpl; only 1: destruct n; only 1: auto; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).	8.10494089127	12871
Coq.Lists.List.app_nth1	40	0.0.0.0.4.2.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.730862855911	792
Coq.Lists.List.app_nth2	40	0.0.1.3.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: auto; only 1: simpl; only 1: auto; only 1: intros l' d [| n]; only 1: simpl; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto with arith).	4.36159205437	3615
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	0.0.0.3.3.0.0.0.0.2.4.0	search with cache (only 1: revert l; only 1: induction n as [| n IH]; only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: now auto with arith; only 1: intros [| ] ?; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: auto with arith).	9.86480998993	7952
Coq.Lists.List.nth_error_app2	40	0.0.1.0.0.3.0.0.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: solve [ inversion H ]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	1.77191495895	1220
Coq.Lists.List.nth_error_nth	40	1.0.2.0.2.1.2.4.1.1.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: induction n; only 1: easy; only 1: now f_equal; only 1: simpl; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto; only 1: eauto).	17.4256870747	19840
Coq.Lists.List.nth_error_nth'	40	0.1.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: auto; only 1: simpl; only 1: auto with arith).	0.0223619937897	7
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40	1.0.0.2.2.1.0.1.4.0.0	search with cache (only 1: induction l as [| y l]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: split; only 1: intuition; only 1: intuition; only 1: discriminate H; only 1: discriminate H; only 1: intuition).	24.715734005	12065
Coq.Lists.List.count_occ_nil	40	3	search with cache (only 1: trivial).	0.0103471279144	4
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	3.2.4.0	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: reflexivity; only 1: intuition).	0.354652881622	246
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0145621299744	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.4.2.0.1.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite (IHl y); only 1: auto).	1.04381990433	1203
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	0.0.4	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0532379150391	54
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0112462043762	2
Coq.Lists.List.concat_cons	40	0.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0175430774689	6
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40	13	search with cache (only 1: decide equality).	0.177417993546	294
Coq.Lists.List.map_cons	40	0	search with cache (only 1: auto).	0.00952196121216	1
Coq.Lists.List.in_map	40	0.0.0.2.1.0.0.2	search with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: intros; only 1: firstorder; only 1: subst; only 1: simpl; only 1: auto).	0.645004034042	563
Coq.Lists.List.in_map_iff	40	3.3.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.269906044006	158
Coq.Lists.List.map_length	40	0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0161378383636	7
Coq.Lists.List.map_nth	40	0.0.0.0.3.0.0.3.1.1	search with cache (only 1: induction l; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.90119314194	2893
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	1.8.0.2.0.0.3.4	search with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite IH; only 1: auto).	23.2203221321	26683
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	2.0.7	search with cache (only 1: destruct l; only 1: auto; only 1: firstorder  discriminate).	0.134922027588	170
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.2.0.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0753970146179	63
Coq.Lists.List.concat_map	40	0.2.14.1.0.0.3.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: auto).	8.16608810425	13963
Coq.Lists.List.map_id	40	0.0.0.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0186569690704	9
Coq.Lists.List.map_map	40	0.3.0.0.0.4	search with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IH; only 1: auto).	0.411553859711	582
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.0216970443726	7
Coq.Lists.List.fold_left_app	40	0.0.0.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0163359642029	5
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.5.2.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	1.89490413666	1966
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40	2.20.0	search with cache (only 1: unfold lt; only 1: fix le_div2 1; only 1: auto with arith).	32.597974062	36436
Coq.Lists.List.existsb_app	40	1.19.3.0.0.0.24	search with cache (only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IH; only 1: firstorder).	33.3291580677	62867
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.329991102219	252
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	0.0.0.1.4.0.0.0.6	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	0.966410160065	929
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40
Coq.Lists.List.find_none	40	1.0.3.1.0.0.0.1	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: easy; only 1: intuition; only 1: congruence).	1.63147687912	763
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0135018825531	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	1.2.2.5.0.2.0.3.0	search with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: reflexivity || discriminate; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: now intros ->).	10.6867570877	12042
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40	0.0.7.5.1.0.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	26.1066970825	24656
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40
Coq.Lists.List.filter_ext	40	0.0.0.1	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0179688930511	5
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.0.0.1.0.0.0.0.1.0.0.1.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	8.79883885384	6696
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.1.14.0.3.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct a; only 1: simpl; only 1: destruct (split l); only 1: simpl; only 1: auto).	25.0186290741	31341
Coq.Lists.List.split_length_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0259969234467	9
Coq.Lists.List.split_combine	40	0.2.6.1.2.10.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: destruct (split l); only 1: f_equal; only 1: auto).	18.2734789848	26182
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40	1.17	search with cache (only 1: fix gcd_divide 1; only 1: auto).	6.43335103989	6267
Coq.Lists.List.combine_length	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.749619960785	626
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	0.0.3.0.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto).	0.549046039581	347
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	0.4.0.2.15	search with cache (only 1: induction l; only 1: red; only 1: auto; only 1: red; only 1: auto).	0.278525114059	410
Coq.Lists.List.lel_trans	40	21.13.0	search with cache (only 1: unfold lel; only 1: firstorder; only 1: Nat.Private_Tac.order).	16.5239329338	20846
Coq.Lists.List.lel_cons_cons	40	0.2.0.0	search with cache (only 1: unfold lel; only 1: intros; only 1: simpl; only 1: auto with arith).	0.0203459262848	6
Coq.Lists.List.lel_cons	40	1.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0119340419769	4
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0121409893036	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	1	search with cache (only 1: auto).	0.00796318054199	2
Coq.Lists.List.incl_tl	40	2.4	search with cache (only 1: intros; only 1: intuition).	0.0209348201752	8
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto).	0.00934600830078	1
Coq.Lists.List.incl_appl	40	2	search with cache (only 1: auto with datatypes).	0.0184481143951	3
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0168008804321	1
Coq.Lists.List.incl_cons	40	15	search with cache (only 1: firstorder  (subst; auto)).	0.296109199524	268
Coq.Lists.List.incl_app	40	6.4.0.0.10	search with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: intros; only 1: firstorder).	17.0884771347	10881
Coq.Lists.List.firstn_nil	40	0.0.0.0.22	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.22071313858	386
Coq.Lists.List.firstn_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00980496406555	2
Coq.Lists.List.firstn_all	40	0.0.0.0.0.20	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.25318312645	331
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.00839185714722	1
Coq.Lists.List.firstn_le_length	40	0.0.0.0.2.0.0.1	search with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.136720895767	123
Coq.Lists.List.firstn_length_le	40	1.0.0.0.3.0.0.9.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: destruct n; only 1: auto; only 1: auto with arith; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	33.8246359825	39552
Coq.Lists.List.firstn_app	40	0.1.0.0.0.11.1.3	search with cache (only 1: induction n; only 1: auto; only 1: intros [| a l] H; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	8.42941403389	6783
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.00926685333252	1
Coq.Lists.List.skipn_nil	40	0.0.0.3	search with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.0151360034943	7
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.00914001464844	1
Coq.Lists.List.skipn_none	40	0.0.0.0.1.2	search with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0189080238342	9
Coq.Lists.List.skipn_all2	40	0.0.1.0.0.0.0.0.1.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: simpl; only 1: now destruct l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	2.1729619503	1607
Coq.Lists.List.firstn_skipn	40	0.3.0.0.0.3.0.3	search with cache (only 1: induction n; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	5.19260883331	4172
Coq.Lists.List.firstn_length	40	0.0.0.0.2.0.4	search with cache (only 1: induction n; only 1: auto; only 1: destruct l; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: auto).	1.1264591217	911
Coq.Lists.List.skipn_length	40	1.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	5.13698983192	4579
Coq.Lists.List.skipn_all	40	0.0.0.0.1	search with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0170931816101	6
Coq.Lists.List.skipn_app	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.0334501266479	10
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	2	search with cache (only 1: now intros []).	0.0108058452606	3
Coq.Lists.List.combine_firstn_l	40	0.0.0.0.3.1.4	search with cache (only 1: induction l; only 1: auto; only 1: destruct l'; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.01856684685	697
Coq.Lists.List.combine_firstn_r	40	0.0.0.0.0.0.0.0.6.0	search with cache (only 1: induction l as [| x l IHl]; only 1: now intros []; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: simpl; only 1: auto; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	1.31122398376	1375
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	3.0.3.1	search with cache (only 1: induction 1; only 1: intuition; only 1: simpl; only 1: firstorder).	0.803151130676	289
Coq.Lists.List.Add_length	40	0.0.0.0.5	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0379161834717	16
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0124561786652	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0287389755249	4
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	1.4.0.2.0.0.4	search with cache (only 1: induction len; only 1: simpl; only 1: now intros []; only 1: intro; only 1: simpl; only 1: f_equal; only 1: auto).	1.74587893486	1825
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40	1.2.3.1.1.3.0.2.0.3.1	search with cache (only 1: split; only 1: induction l; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	28.4591081142	30431
Coq.Lists.List.Exists_nil	40	1.4	search with cache (only 1: intuition; only 1: inversion_clear H).	0.03533411026	28
Coq.Lists.List.Exists_cons	40	4.0.0.7.3	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: firstorder).	0.82980799675	679
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.1.2.0.0.0.0.0.1.1	search with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	3.12866616249	2502
Coq.Lists.List.Forall_inv	40	0.7.1	search with cache (only 1: firstorder; only 1: inversion_clear H; only 1: auto).	0.0296158790588	33
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	0.4.0	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0172090530396	7
Coq.Lists.List.Exists_impl	40	3.0.7.7.3	search with cache (only 1: intros f g H l; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now constructor).	4.27920293808	6990
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.0283319950104	10
Coq.Lists.List.Forall_Exists_dec	40	2.0.3.0.0.0.0.1.0.1.0.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now constructor; only 1: right; only 1: now apply Exists_cons_tl).	18.8335490227	5342
Coq.Lists.List.Forall_impl	40	0.0.0.0.0.3.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.0448808670044	31
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: auto).	0.00832200050354	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	0.1.3.1.4.0.1	search with cache (only 1: induction l1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: inversion_clear 1; only 1: simpl; only 1: auto).	3.83370804787	3621
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	0.0.0.0.31	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.846847057343	1412
Coq.Lists.List.repeat_spec	40	0.0.4.2.4.15	search with cache (only 1: induction n; only 1: induction 1; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto).	1.35211896896	2604
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: repeat intro; only 1: auto).	0.00982999801636	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	8.0.2.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intuition).	8.0437707901	5461
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: induction 1; only 1: simpl; only 1: induction l; only 1: intuition; only 1: intuition; only 1: now apply permA_skip; only 1: simpl; only 1: auto; only 1: do 2 (etransitivity; try eassumption)).	0.326324939728	116
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	0.0.1.2.11	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	0.239337921143	189
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40	2.9.7.1	search with cache (only 1: intros; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	3.95097589493	2075
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0167670249939	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	1.0.2.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	0.0589787960052	8
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0140080451965	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	1.0.0.6.0.0.2.0	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor; only 1: trivial; only 1: auto).	3.56378006935	4021
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.6.1	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.299837827682	319
Coq.Lists.SetoidList.InA_nil	40	2.1.0	search with cache (only 1: split; only 1: inversion 1; only 1: inversion 1).	0.0150511264801	6
Coq.Lists.SetoidList.InA_alt	40	0.0.1.1.0.0.1.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.477943897247	387
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	2.0.5	search with cache (only 1: red; only 1: firstorder; only 1: invlist InA).	0.0257520675659	20
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.3.1.0.3.1	search with cache (only 1: split; only 1: induction 1; only 1: constructor; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.609417915344	614
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.0.2.6.0.6.1	search with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity ltac:(y); only 1: auto; only 1: trivial; only 1: auto).	3.28262901306	1130
Coq.Lists.SetoidList.In_InA	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.112912893295	6
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.5.3	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.129627943039	69
Coq.Lists.SetoidList.InA_double_head	40	1.6	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.163234949112	28
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0383110046387	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.6.1	search with cache (only 1: constructor; only 1: rewrite InA_alt; only 1: firstorder; only 1: constructor).	0.175441980362	46
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.3	search with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0308208465576	6
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.10	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0805418491364	47
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.1.4	search with cache (only 1: red; only 1: intros; only 1: rewrite InA_app_iff; only 1: tauto).	0.169492006302	55
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	1.0.0.0.0.4.0.0.3.1.5	search with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).	9.75181007385	2752
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	0.4.0.3.0.0.2	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: f_equal; only 1: auto).	1.12428116798	835
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40	4.0.4.6.18	search with cache (only 1: intros Base Step; only 1: intros b Hb; only 1: induction 1; only 1: auto; only 1: firstorder).	9.51031208038	2603
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40	0.7.6	search with cache (only 1: intros H; only 1: rewrite <- H; only 1: auto).	0.927888870239	453
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	0.0.3.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: apply H; only 1: simpl; only 1: auto).	0.0452978610992	9
Coq.Lists.SetoidList.InA_InfA	40	0.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0198209285736	8
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.1.3.0.0.2.1	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: auto; only 1: constructor; only 1: inv; only 1: auto).	1.22521495819	630
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	0.0.0.0.2	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.017961025238	7
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.4.1.0.0.3.1.3	search with cache (only 1: induction 1; only 1: simpl; only 1: induction 1; only 1: auto; only 1: auto; only 1: simpl; only 1: intro; only 1: auto).	2.12297701836	1084
Coq.Lists.SetoidList.eqlistA_app	40	0.0.1.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0198359489441	6
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	0.0.5.0.2	search with cache (only 1: induction 1; only 1: auto; only 1: apply eqlistA_rev_app; only 1: auto; only 1: intuition).	0.185458898544	159
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	1.0	search with cache (only 1: decide equality; only 1: decide equality).	0.0275838375092	3
Coq.NArith.BinNat.N.discr	40	5.1.15.4	search with cache (only 1: destruct n; only 1: auto using Pos.Private_Tac.eq_sym; only 1: revert p; only 1: eauto with *).	0.302131891251	741
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.00739693641663	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0066819190979	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0171589851379	5
Coq.NArith.BinNat.N.bi_induction	40	1.0.1.0.0.6.0	search with cache (only 1: intros A A_wd A0 AS; only 1: destruct n; only 1: assumption; only 1: apply Pos.peano_ind; only 1: assumption; only 1: intros; only 1: now apply -> AS).	3.08758687973	1429
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.00638008117676	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.00742793083191	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: trivial).	0.00751686096191	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.00689506530762	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?IHp).	0.0175249576569	7
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial).	0.0123388767242	3
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.1.1.1.0.0.7	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	2.84410595894	3297
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.0.4.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	4.13836598396	3767
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.011677980423	3
Coq.NArith.BinNat.N.pred_sub	40	2.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0156469345093	6
Coq.NArith.BinNat.N.succ_0_discr	40	1	search with cache (only 1: now destruct n).	0.0150301456451	2
Coq.NArith.BinNat.N.add_0_l	40	0.0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0216829776764	8
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	1	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0077919960022	2
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.00662302970886	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40	8.10.7	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: now destruct n as [| [p| p| ]]).	4.93033003807	6083
Coq.NArith.BinNat.N.leb_le	40	8.9.9	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: now destruct n as [| [p| p| ]]).	3.45566606522	4637
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	1.0	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.00854206085205	3
Coq.NArith.BinNat.N.compare_le_iff	40	2.1.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.103815078735	9
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0867249965668	64
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	1	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0478219985962	2
Coq.NArith.BinNat.N.succ_double_spec	40	9	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0610558986664	11
Coq.NArith.BinNat.N.double_add	40	0.1.0.0.0.0.0.4	search with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.8108830452	767
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0118670463562	1
Coq.NArith.BinNat.N.double_mul	40	0	search with cache (only 1: now destruct n, m).	0.0116879940033	1
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0138828754425	3
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.00853300094604	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0306379795074	11
Coq.NArith.BinNat.N.double_le_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0447750091553	10
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.033616065979	11
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0298011302948	9
Coq.NArith.BinNat.N.compare_0_r	40	1	search with cache (only 1: now destruct n).	0.0176570415497	2
Coq.NArith.BinNat.N.pow_0_r	40	3	search with cache (only 1: now nzsimpl').	0.0270910263062	4
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	5.4.2.2	search with cache (only 1: intro; only 1: induction p using Pos.peano_ind; only 1: false_hyp ltac:(H) nlt_0_r; only 1: false_hyp ltac:(H) nlt_0_r).	1.12012004852	568
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	6.0.0.0.0.3	search with cache (only 1: destruct n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro H; only 1: now destruct p).	4.30900502205	2216
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	2.0.6.0	search with cache (only 1: intro H; only 1: destruct n; only 1: reflexivity; only 1: easy).	0.21847987175	259
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40	0.0.0.1.0.2.0.1.1.5.2.0.0.4.0.0.0	search with cache (only 1: destruct n; only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m; only 1: destruct p; only 1: split; only 1: now exists (pos p); only 1: easy; only 1: split; only 1: easy; only 1: intros (m, H); only 1: now destruct m; only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m).	23.1564688683	25562
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.0	search with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0180060863495	4
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40	1.20.1.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	8.77508687973	12969
Coq.NArith.BinNat.N.sqrtrem_spec	40	0.5.6.3.0.0.9.2	search with cache (only 1: destruct n; only 1: split; only 1: trivial; only 1: discriminate; only 1: unfold sqrtrem, sqrt, Pos.sqrt; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	10.55114007	9960
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0108449459076	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	0.027724981308	7
Coq.NArith.BinNat.N.gcd_divide_r	40	0.0.1.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.0505900382996	20
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	0	search with cache (only 1: apply le_0_l).	0.00851488113403	1
Coq.NArith.BinNat.N.testbit_even_0	40	1.1.69	search with cache (only 1: destruct a as [| a]; only 1: easy; only 1: easy).	1.10135102272	2756
Coq.NArith.BinNat.N.testbit_odd_0	40	1	search with cache (only 1: now destruct a).	0.012079000473	2
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.215310811996	137
Coq.NArith.BinNat.N.testbit_neg_r	40	0.2.3.0.4.0.0.0.1.4	search with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct a; only 1: easy; only 1: now destruct a; only 1: easy; only 1: easy; only 1: trivial).	34.5282969475	29469
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.00862789154053	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	5.4	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.388160943985	95
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0120351314545	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.5	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.121758937836	64
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0119009017944	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.0.1.1.6	search with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.521126031876	142
Coq.NArith.Ndec.Peqb_complete	40	0	search with cache (only 1: apply Pos.eqb_eq).	0.0686662197113	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.24	search with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	3.64170503616	2674
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0795960426331	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0811548233032	1
Coq.NArith.Ndec.Neqb_complete	40	1	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0813689231873	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	2.7.1.17.0.0.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: intros <-; only 1: absurd (false = true); only 1: intuition; only 1: inversion H; only 1: apply Ndouble_plus_one_bit0).	19.5529749393	23089
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	5.1.2.0	search with cache (only 1: intros Ha Hb; only 1: eqb2eq; only 1: intros <-; only 1: congruence).	0.882767915726	279
Coq.NArith.Ndec.Ndiv2_eq	40	0.1.5.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: subst; only 1: trivial).	0.107109069824	19
Coq.NArith.Ndec.Ndiv2_neq	40	1.0.0.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0985889434814	5
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.0.1.1	search with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.288613080978	35
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	24	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.898224830627	728
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	2.0.6.7	search with cache (only 1: rewrite !Nleb_Nle; only 1: intro LT; only 1: intro LE; only 1: N.order').	1.12405920029	668
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40	3.2.10.13.11	search with cache (only 1: rewrite !Nleb_Nle; only 1: eqb2eq; only 1: rewrite Nleb_Nle; only 1: intros; only 1: N.order).	16.4114351273	25601
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.3.3.1.0.0	search with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite !N2Nat.inj_double; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	1.44616699219	829
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	1.0.0.5.2.1.0.0	search with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite !N2Nat.inj_succ_double; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	11.4213650227	5309
Coq.NArith.Ndec.Nltb_double_mono_conv	40	0.0.0.7.5.0.0.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: intro; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: now apply leb_complete).	18.1048941612	11260
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	0.0.0.7.4.0.0.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply le_n_S, mult_le_compat_l; only 1: now apply leb_complete).	15.4916801453	9557
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	10	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.638870000839	220
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40	13.20	search with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	9.84412908554	7533
Coq.NArith.Ndec.Nmin_le_2	40	27.1	search with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	18.8625311852	12911
Coq.NArith.Ndec.Nmin_le_3	40	3.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.36128616333	56
Coq.NArith.Ndec.Nmin_le_4	40	12.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.557137966156	285
Coq.NArith.Ndec.Nmin_le_5	40	7.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.14156794548	17
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.123692989349	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	1.0.0.1.0.1	search with cache (only 1: induction a as [| p]; only 1: intro H; only 1: auto; only 1: intro H; only 1: exfalso; only 1: discriminate || simpl).	0.124305963516	12
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	0.0.6.7.0.0.1.17	search with cache (only 1: vm_compute; only 1: intros; only 1: destruct x; only 1: easy; only 1: f_equal; only 1: induction n; only 1: trivial; only 1: auto).	4.16280198097	4940
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.1.2	search with cache (only 1: simpl; only 1: simple induction d; only 1: trivial; only 1: trivial).	0.110923051834	22
Coq.NArith.Ndist.ni_min_O_r	40	0.0.1.2.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: simpl; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.106159925461	9
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: reflexivity).	0.0770649909973	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.2	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0884649753571	5
Coq.NArith.Ndist.ni_le_refl	40	0.0.7.6.0.4.3	search with cache (only 1: vm_compute; only 1: destruct x; only 1: easy; only 1: f_equal; only 1: induction n; only 1: trivial; only 1: auto).	3.17708492279	3564
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.0.2.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.13098692894	17
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40	0.33.0	search with cache (only 1: intros * H; only 1: inversion H; only 1: Nat.solve_min).	22.0621140003	20060
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.0.2.0.1	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros [| n]; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.24564909935	91
Coq.NArith.Ndigits.Nshiftr_nat_S	40	4.3.0	search with cache (only 1: destruct a; only 1: trivial; only 1: trivial).	0.143820047379	50
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0109508037567	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0139639377594	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0109529495239	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.0.1.6.0.1.7.0.0.0	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: reflexivity; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	13.3782551289	13145
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.3.0.0.0.0.0.1	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	2.46848702431	1447
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.0.1.0.0.0.0.0.1	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).	1.24499201775	550
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	9.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.ldiff_spec).	0.508322000504	205
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	5.0.6	search with cache (only 1: intros [| n]; only 1: trivial; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.526173830032	323
Coq.NArith.Ndigits.Ndouble_bit0	40	8.0	search with cache (only 1: intros n; only 1: now destruct n).	0.0155599117279	10
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0188171863556	3
Coq.NArith.Ndigits.Ndiv2_double	40	0.3.0.3.1.0.0.6	search with cache (only 1: destruct n; only 1: reflexivity; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: discriminate; only 1: trivial; only 1: discriminate).	3.95591402054	2604
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	0.0.1.1.0.0.1.5.0	search with cache (only 1: destruct n; only 1: discriminate; only 1: intro H; only 1: simpl; only 1: destruct p; only 1: vm_compute in H; only 1: easy; only 1: discriminate H; only 1: reflexivity).	5.70070815086	1528
Coq.NArith.Ndigits.Ndiv2_correct	40	2.2.3.6.0.0	search with cache (only 1: destruct a; only 1: trivial; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	15.7670879364	8932
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0244550704956	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	4.28905200958	2566
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	2.35624694824	765
Coq.NArith.Ndigits.Nless_def_3	40	0.0.2.3.0.0.2.0.0.7.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	16.4302289486	10035
Coq.NArith.Ndigits.Nless_def_4	40	0.0.5.4.1.0.3.0.0.4.2	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	37.3968918324	28727
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.0.0.8.2	search with cache (only 1: intros a H; only 1: destruct a as [| p]; only 1: now elim H; only 1: exists p; only 1: auto).	0.342561006546	245
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	0.0.0.2.0.0.4.0.0.0.0.13.0	search with cache (only 1: intros; only 1: destruct a; only 1: simpl; only 1: trivial; only 1: induction p; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: reflexivity).	24.7883310318	9727
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.test	40	1	search with cache (only 1: N.order).	0.0919458866119	12
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	1.1.0.0.0.0.0	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: now subst).	0.0241129398346	9
Coq.NArith.Nnat.N2Nat.inj_double	40	1.0.4.6.1.0.1.4	search with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	3.87487912178	3810
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	1.0.1.2.1.2.0.1.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: f_equal; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	2.78542113304	1932
Coq.NArith.Nnat.N2Nat.inj_succ	40	23.0.1.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	4.3232049942	9846
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.5.0.21	search with cache (only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.322693109512	543
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).	0.0206408500671	6
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0189139842987	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	1	search with cache (only 1: nat2N).	0.0160918235779	2
Coq.NArith.Nnat.Nat2N.inj_pred	40	0	search with cache (only 1: nat2N).	0.0161228179932	1
Coq.NArith.Nnat.Nat2N.inj_add	40	2.0.0.1	search with cache (only 1: destruct n as [| n]; only 1: simpl; only 1: trivial; only 1: nat2N).	0.0269660949707	7
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	search with cache (only 1: nat2N).	0.0177910327911	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0171239376068	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.0829648971558	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.0180270671844	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0178530216217	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	0.6.0.2	search with cache (only 1: destruct n, m; only 1: simpl; only 1: do 8 (case Bool.eqb_spec; [ intros -> | constructor; now intros [=] ]); only 1: easy').	0.471244096756	189
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, N.eqb_eq).	0.0424749851227	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.0490479469299	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.2.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	0.796177864075	148
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	14	search with cache (only 1: t_eqb).	0.460840940475	424
Coq.Strings.String.eqb_eq	40	13	search with cache (only 1: t_eqb).	10.8868050575	3908
Coq.Strings.String.eqb_neq	40	1	search with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0230460166931	11
Coq.Strings.String.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.0244998931885	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.0.11.0.0.5	search with cache (only 1: elim s; only 1: reflexivity; only 1: simpl; only 1: intros m s1; only 1: intros ->; only 1: reflexivity).	0.862056016922	745
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	9.0.0.2	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: simpl; only 1: apply f_equal, IHs).	1.29975700378	465
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.0129570960999	2
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	0	search with cache (only 1: auto).	0.084764957428	1
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	3	search with cache (only 1: trivial).	0.0134370326996	4
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	114.24	search with cache (only 1: destruct (QCauchySeq_bounded (fun _ : nat => 1%Q) Pos.to_nat (ConstCauchy 1)); only 1: constructor).	2.4214258194	15204
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40	10.0.6.0.0	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: destruct H; only 1: simpl; only 1: firstorder).	3.95637202263	3420
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.0.2.0.2.0	search with cache (only 1: intros; only 1: inversion H; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).	0.0582499504089	17
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40	1.1.13	search with cache (only 1: fix even_odd_double 1; only 1: intros; only 1: auto).	0.643306016922	388
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40	1.5.0	search with cache (only 1: fix even_equiv 1; only 1: intro n; only 1: auto with arith).	0.124878168106	37
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40	0.0.1.0.1.0.1.0.2.8	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	5.34826111794	2128
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.0.0.6.14	search with cache (only 1: intro; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: auto).	28.9018349648	15684
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	2.0.0.1.0.1	search with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.0529508590698	10
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	1.1.1	search with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.0392580032349	6
Coq.Reals.RList.RList_P22	40
Coq.Reals.RList.RList_P23	40	4.2.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: simpl; only 1: auto with *).	0.690192937851	236
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros s1; only 1: elim s1; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	1.03238892555	234
Coq.Reals.RList.RList_P27	40	0.6.0.3.0.0.5.4	search with cache (only 1: intros s1; only 1: elim s1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: elim H; only 1: reflexivity).	26.1512129307	7798
Coq.Reals.RList.RList_P28	40	13.8.0.4.1	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: congruence).	18.4661149979	11053
Coq.Reals.RList.RList_P29	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.0.1	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.612010955811	145
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	2.1.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (Rtotal_order r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	1.09395503998	208
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	2.0.0.5.0.0	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: intros (H, H'); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: assumption; only 1: assumption).	1.80483579636	852
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.3.0.1.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with qarith; only 1: intro H1; only 1: auto with real).	0.0582768917084	17
Coq.Reals.Rbasic_fun.Rmin_left	40
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0356450080872	6
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0470631122589	6
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40
Coq.Reals.Rbasic_fun.Rmin_glb	40
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.0562472343445	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0604259967804	6
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.0.0.0.8.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).	0.829764842987	499
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.0678009986877	9
Coq.Reals.Rbasic_fun.Rmax_left	40
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.4.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0496380329132	8
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0633540153503	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.1.0.0.3	search with cache (only 1: intros r1 r2 r; only 1: intros; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: assumption; only 1: assumption).	0.437877893448	87
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.064915895462	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0.0.5.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	1.27259802818	436
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.3.0.1.0.0.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	1.0019390583	251
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40	8.22	search with cache (only 1: fix even_odd_double 1; only 1: trivial).	1.54411292076	2334
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.8.0	search with cache (only 1: intros; only 1: injection H; only 1: auto).	0.537034988403	88
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	8.19	search with cache (only 1: fix even_equiv 1; only 1: auto).	3.13260388374	3831
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	0.2	search with cache (only 1: intros; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.0943338871002	4
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0	search with cache (only 1: auto).	0.0146119594574	1
Coq.Reals.Rfunctions.simpl_fact	40	2.32	search with cache (only 1: fix even_equiv 1; only 1: auto).	16.6584229469	9536
Coq.Reals.Rfunctions.pow_O	40	0.0	search with cache (only 1: intro; only 1: reflexivity).	0.0199961662292	2
Coq.Reals.Rfunctions.pow_1	40	0.1.0.5	search with cache (only 1: simpl; only 1: intro; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.12780380249	42
Coq.Reals.Rfunctions.pow_add	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.0636730194092	9
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0.0.2.0.0.0	search with cache (only 1: intros z [| n]; only 1: auto with real; only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: ring).	0.0628750324249	10
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.0.0.0.0.1	search with cache (only 1: intros x y n; only 1: induction n; only 1: simpl; only 1: ring_Rsqr; only 1: simpl; only 1: ring).	0.61380314827	127
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40	0.1.11.0.0.0.2	search with cache (only 1: intro; only 1: simple induction n; only 1: trivial; only 1: simpl; only 1: fix even_odd_double 1; only 1: intros; only 1: auto with real).	31.628264904	13768
Coq.Reals.Rfunctions.pow_le	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	0.0808417797089	10
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.0.0.1.0.0.0.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: replace 1 with 1 * 1; only 1: auto with real; only 1: auto with real).	0.776172876358	215
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.0.0.1.0.0.0.3.1.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: easy; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring; only 1: ring).	2.92196106911	1065
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	2.1	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0709600448608	37
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40	4.0.0.1.0.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: intro; only 1: discriminate; only 1: simpl; only 1: auto with zarith real).	1.039894104	450
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.015398979187	1
Coq.Reals.Rfunctions.powerRZ_1	40	0.1.0.1	search with cache (only 1: simpl; only 1: intro; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.0500800609589	18
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	1.1.2.0.0.1.1	search with cache (only 1: destruct z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	11.3955888748	2791
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0625231266022	9
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	0.2.1.2.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).	0.622483968735	177
Coq.Reals.Rfunctions.powerRZ_ind	40	2.8.1	search with cache (only 1: intros x m n H; only 1: fix even_equiv 1; only 1: auto).	0.938237905502	482
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	2.0.0.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0335209369659	12
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	7.3.2.1.0	search with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: auto).	1.31286096573	520
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	2.2.2	search with cache (only 1: fix even_odd_double 1; only 1: intro; only 1: auto with arith).	0.165067911148	66
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	1.0.0.1.0.1.0	search with cache (only 1: intro n; only 1: induction n as [| k iHk]; only 1: simpl; only 1: intros a; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.0460238456726	10
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40	10.5.0	search with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: eauto).	1.6920440197	1207
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	1.1.10.1.1.10.1.2.0	search with cache (only 1: intros; only 1: destruct (CRltLinear R); only 1: split; only 1: intro; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	33.571338892	25750
Coq.Reals.ConstructiveReals.CReq_sym	40	7.0	search with cache (only 1: intros; only 1: firstorder).	0.41698384285	47
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	1.1.0.0.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.0531370639801	8
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	7	search with cache (only 1: firstorder).	0.104574918747	12
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	5	search with cache (only 1: auto).	0.113255977631	48
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	0.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CRealEq_sym; only 1: apply CReal_plus_opp_r; only 1: apply CReal_plus_proper_r; only 1: apply CRealEq_sym; only 1: apply H).	22.8629589081	231
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	8	search with cache (only 1: apply CReal_isRingExt).	23.2848269939	239
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.2.0	search with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	14.1794388294	65
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0224289894104	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	1.1	search with cache (only 1: intro; only 1: ring).	2.12046909332	104
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	6.6	search with cache (only 1: intros x y; only 1: ring).	12.2714340687	680
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.025465965271	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	0.2.6	search with cache (only 1: intros [xn limx]; only 1: intros k p q H H0; only 1: auto with arith).	0.314749002457	123
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	19.2	search with cache (only 1: pose proof (CRealLt_aboveSig x 0); only 1: now subst).	5.06439304352	2284
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0234050750732	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40
Coq.Reals.R_sqr.Rsqr_minus	40
Coq.Reals.R_sqr.Rsqr_neg_minus	40	4.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0328471660614	6
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0830960273743	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	1.2.3.0	search with cache (only 1: unfold Rsqr; only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with zarith real).	0.0609400272369	24
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.5	search with cache (only 1: intros x y; only 1: ring_Rsqr).	0.114707946777	40
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.034215927124	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	1.0.1.2.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: ring_Rsqr).	0.0909559726715	9
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.0.0.0.0	search with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.0442709922791	5
Coq.Reals.Rlimit.eps4	40
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0265238285065	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	4.0	search with cache (only 1: intros; only 1: lra).	0.0288331508636	6
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	0.120926141739	4
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.167337179184	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	2.0.0.5.16	search with cache (only 1: intros a b; only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	23.0104720592	12027
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	3.7755510807	1911
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.5	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0810730457306	28
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.6.0.6.3	search with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	1.47712111473	1096
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	1.2.1.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: auto; only 1: apply H).	0.0745191574097	10
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	5.3.2.2.3.0.0.2.2	search with cache (only 1: split; only 1: split; only 1: apply CRealLe_refl; only 1: apply CRealLe_refl; only 1: split; only 1: apply H; only 1: apply H; only 1: red; only 1: now unfold Zdiv.eqm; intros a b c ->).	28.9496569633	7471
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40	1.1.2.1.0.1.1.0.0.0	search with cache (only 1: intros x y H x0 y0 H0; only 1: split; only 1: intros H1 H2; only 1: rewrite <- H0 in H2; only 1: rewrite <- H in H2; only 1: contradiction; only 1: intros H1 H2; only 1: rewrite H0 in H2; only 1: rewrite H in H2; only 1: contradiction).	24.3572480679	4206
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	1.1.2.14.0	search with cache (only 1: intros; only 1: destruct H; only 1: apply (CReal_lt_le_trans _ x); only 1: assumption; only 1: assumption).	6.09923291206	1805
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	8	search with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.161769151688	62
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	5	search with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.134893894196	49
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	17.1.0	search with cache (only 1: intro q; only 1: intros; only 1: now rewrite H).	9.077947855	4279
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	7	search with cache (only 1: trivial).	0.0537300109863	8
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	0.6	search with cache (only 1: intros (a, b) (c, d); only 1: auto).	0.0947370529175	18
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	3	search with cache (only 1: assumption).	0.0535519123077	4
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.0.0.0	search with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.0681540966034	4
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	0.0.6.15.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	2.63918495178	2864
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	2.85871100426	367
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	2.4	search with cache (only 1: apply (CReal_plus_eq_reg_l 0); only 1: reflexivity).	0.080188035965	11
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: intuition_in).	0.0210220813751	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	0.0	search with cache (only 1: unfold empty, Empty; only 1: auto).	0.0194280147552	2
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.7.0	search with cache (only 1: intros; only 1: unfold create; only 1: auto).	0.0361890792847	10
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	1.0	search with cache (only 1: unfold create; only 1: auto).	0.0275659561157	3
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40	1.0.0.0.0.0.0.2.0.0.0.0.0.2.3	search with cache (only 1: intros m1 m2; only 1: functional induction merge m1 m2; only 1: intros; only 1: auto; only 1: intros; only 1: auto; only 1: intros; only 1: generalize (remove_min_avl_1 H0); only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	35.7418310642	8136
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.0.0.2	search with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: auto).	0.0395438671112	6
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0413479804993	5
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	1.3.1.6	search with cache (only 1: intros m; only 1: intro; only 1: intro abs; only 1: inversion abs).	0.240166902542	152
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40	1.3.7.6.0.0	search with cache (only 1: intros m x y e e'; only 1: induction m; only 1: red; only 1: intro; only 1: simpl; only 1: eauto using add_2, add_3).	9.09193992615	5865
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40
Coq.FSets.FMapFullAVL.IntMake.find_2	40	14.4.1	search with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: firstorder).	1.77738499641	1434
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	0.6.5.7.1.3	search with cache (only 1: intros m; only 1: intros x y H; only 1: compute; only 1: induction m; only 1: rewrite <- elements_mapsto; only 1: auto).	6.85557985306	5455
Coq.FSets.FMapFullAVL.IntMake.elements_3	40	11.0.1.1.1.9.9	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: inversion_clear 1).	3.22627806664	2027
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	0.7.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0387270450592	12
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0180950164795	1
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.0.7.0.1.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: intros; only 1: simpl in *; only 1: auto; only 1: auto; only 1: auto).	3.53379511833	1741
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0286128520966	3
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	1.1	search with cache (only 1: intros; only 1: intuition).	0.0283088684082	4
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40	0.0.0.9.10.4	search with cache (only 1: intros m x f; only 1: intros; only 1: induction H; only 1: auto; only 1: auto; only 1: auto).	13.2058420181	8930
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40	0.1.3.0.1.3.10.0	search with cache (only 1: induction 1; only 1: eauto with *; only 1: firstorder; only 1: exists x; only 1: auto; only 1: firstorder; only 1: exists x; only 1: auto).	1.46829795837	1792
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	1.1.0.2.2.4.0	search with cache (only 1: induction m; only 1: intros x y H; only 1: inversion 1; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	2.69086790085	945
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	2.2.3	search with cache (only 1: split; only 1: intuition_in; only 1: intuition).	0.183439016342	26
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	2.8.4.10	search with cache (only 1: intuition; only 1: red; only 1: intro; only 1: intuition_in).	5.17078304291	4097
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.2.4.3	search with cache (only 1: intros; only 1: red; only 1: intuition; only 1: intuition_in).	0.303158044815	164
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	4.13.4.8.2	search with cache (only 1: intros; only 1: compute; only 1: intuition; only 1: intuition_in; only 1: L.MX.order).	19.2342948914	6721
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0357191562653	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0266728401184	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0	search with cache (only 1: intuition_in).	0.0282549858093	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0289161205292	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40	1.24.1	search with cache (only 1: intuition; only 1: apply (StrictOrder_Irreflexive x); only 1: auto with ordered_type).	10.6959080696	7086
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	0.1.0.1.0	search with cache (only 1: intros x y; only 1: induction m; only 1: auto with ordered_type; only 1: intuition; only 1: eauto with ordered_type).	0.068843126297	7
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0373198986053	4
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0923619270325	1
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	0	search with cache (only 1: auto).	0.0225009918213	1
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	22	search with cache (only 1: inversion_clear 1).	4.45143508911	643
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	2.0.0.1.2.0.1	search with cache (only 1: destruct m as [| r x e l h]; only 1: simpl; only 1: intros; only 1: unfold empty, Empty; only 1: intuition_in; only 1: simpl; only 1: easy).	1.49825906754	631
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	0.0.0.1.1.1.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: intros; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	0.057156085968	10
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40	0.0.3.4.0.0.4.1.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: auto).	9.29764604568	4627
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	1.1.1.1.0.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: now destruct 1; only 1: auto; only 1: auto; only 1: auto).	0.0590510368347	10
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40	0.0.0.0.0.0.0.0.0.5	search with cache (only 1: firstorder; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: apply find_2; only 1: auto; only 1: congruence; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	4.57695508003	1697
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	0.0.0.0.11.4	search with cache (only 1: intros m x y e; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	5.21927380562	3198
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	0.1	search with cache (only 1: unfold create; only 1: intuition_in).	0.192815065384	12
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.2.2.0	search with cache (only 1: unfold elements; only 1: intros; only 1: simpl; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.780776023865	9
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40	3.30	search with cache (only 1: intro n; only 1: now destruct n).	1.61091017723	1582
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	0.5.2.1	search with cache (only 1: simpl; only 1: induction 1; only 1: red; only 1: auto).	1.79773712158	290
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	2.0.1.0.2	search with cache (only 1: intros m x y; only 1: induction m; only 1: inversion 1; only 1: simpl; only 1: intuition_in).	0.216617822647	21
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	0.0.0.6.0.3.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	3.33119082451	1553
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.094172000885	8
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	17	search with cache (only 1: now f_equal).	0.0970509052277	126
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40
Coq.FSets.FMapAVL.IntMake.find_2	40	0.4.2.7.1	search with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intuition; only 1: apply find_2; only 1: auto).	1.43544483185	1116
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	1.5.3.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).	0.51579117775	243
Coq.FSets.FMapAVL.IntMake.elements_3	40	8.0.1.1.2.4.8	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: inversion_clear 1).	1.19626998901	1133
Coq.FSets.FMapAVL.IntMake.elements_3w	40	1.2.2.0	search with cache (only 1: intros m; only 1: unfold elements, MapsTo, eq_key_elt; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0695729255676	9
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0447330474854	1
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	0.0.0.0.8.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	2.56884884834	1413
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	3.0.2.0.0	search with cache (only 1: destruct e2; only 1: red; only 1: simpl; only 1: trivial; only 1: constructor).	0.117978096008	12
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	2.1	search with cache (only 1: intros; only 1: intuition).	0.072890996933	5
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1.2	search with cache (only 1: intros; only 1: intuition).	0.0726051330566	5
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	3.0	search with cache (only 1: symmetry; only 1: intuition).	0.0270500183105	5
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40	0.6.1.0.7.1.1.13.2.8	search with cache (only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition; only 1: inversion H; only 1: inversion H; only 1: absurd (false = true); only 1: auto with bool; only 1: inversion H; only 1: apply mem_1; only 1: auto).	28.323294878	32637
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	2.5	search with cache (only 1: symmetry; only 1: intuition).	0.0505568981171	28
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	7	search with cache (only 1: intuition).	0.0288679599762	17
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	13	search with cache (only 1: intuition).	0.0729579925537	115
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	2.2.0	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0264890193939	7
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40	1.0.9.0.3.6	search with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: destruct 1; only 1: auto; only 1: intros EQ; only 1: intuition; only 1: exact (add_3 E H)).	7.93679594994	4391
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	0.1.3	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.0532279014587	31
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	1	search with cache (only 1: intuition).	0.935575962067	24
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	0	search with cache (only 1: intuition).	0.0283291339874	1
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	1	search with cache (only 1: intuition).	0.111852884293	15
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	0	search with cache (only 1: intuition).	0.0163631439209	1
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	4.45616984367	566
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	0.2.10.0.0.1	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: red; only 1: intros x y z; only 1: eauto).	0.992459058762	1082
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	9.2	search with cache (only 1: red; only 1: firstorder).	1.68399190903	604
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.1.3.3	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: trivial).	0.0713968276978	54
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.0.4.6	search with cache (only 1: intros; only 1: red; only 1: intros y LT; only 1: auto).	0.165475845337	128
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.5.2.0.2	search with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite (In_eq_iff s' H); only 1: intuition).	9.41126012802	420
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.0.1.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.0561830997467	6
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	3.3.2.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.610939979553	183
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.1.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.0407161712646	5
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.2.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.041562795639	6
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.0.0.3.4.3.7	search with cache (only 1: intro n; only 1: intros x y H a; only 1: intro; only 1: repeat rewrite filter_iff; only 1: intuition; only 1: auto; only 1: auto).	4.51319479942	2300
Coq.FSets.FSetPositive.PositiveSet.In_1	40	2.10.1	search with cache (only 1: intros x y z; only 1: red; only 1: <Coq.Strings.String.t_eqb>).	2.93745398521	1565
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.0.5.1	search with cache (only 1: intros; only 1: constructor; only 1: trivial; only 1: trivial).	0.136319875717	40
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	0.8.5	search with cache (only 1: intros x y H; only 1: intro; only 1: now symmetry).	2.04604506493	434
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	4.0.4.14.7	search with cache (only 1: intros x y z; only 1: unfold eq, Equal; only 1: symmetry; only 1: symmetry; only 1: now etransitivity).	12.7016439438	10293
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	3.0	search with cache (only 1: intros; only 1: trivial).	0.0841310024261	5
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.0812311172485	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.1	search with cache (only 1: intros n; only 1: now destruct n).	0.0845041275024	3
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	9.22	search with cache (only 1: intro n; only 1: now destruct n).	0.566431999207	1011
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	5.2.29	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto with arith).	36.4197349548	20208
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.224082946777	3
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	21	search with cache (only 1: discriminate).	1.75154495239	588
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.0.1.1.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.228466033936	9
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.1.3.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).	0.151793003082	9
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	3.8.3.12	search with cache (only 1: intros n s; only 1: intros y LT; only 1: intuition subst; only 1: easy || now destruct y).	12.8042440414	11025
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	25	search with cache (only 1: destr_bool).	0.688987016678	637
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	0.0.0.1.0.2.0.2.0.2.7	search with cache (only 1: intros s1; only 1: elim s1; only 1: intro n; only 1: firstorder; only 1: intro n; only 1: firstorder; only 1: easy; only 1: intro n; only 1: split; only 1: easy || now destruct 1; only 1: firstorder).	12.4350969791	8254
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.4	search with cache (only 1: destr_bool; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	0.309515953064	69
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40	1.10.1.17.1.7.7	search with cache (only 1: induction x; only 1: simpl; only 1: constructor; only 1: vm_compute; only 1: constructor; only 1: simpl; only 1: constructor).	6.2102560997	12602
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.207901000977	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	0.0.0.3	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0959701538086	7
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0945851802826	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0943470001221	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0935249328613	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.26	search with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).	3.96511793137	4632
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	3.10	search with cache (only 1: intro n; only 1: now destruct n).	0.322893857956	178
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	6.0.1	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.116801023483	16
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	2.2.0	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.112208127975	7
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.121864080429	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	5.0.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: intuition congruence).	0.198570013046	36
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.106537103653	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.10	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.494352817535	207
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.1.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.110119819641	4
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.1.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.120104789734	4
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	1.1.5.6	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	2.67687296867	1640
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.119889974594	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.108026981354	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.2.2.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.109982967377	8
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	1.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.101584196091	4
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	2.1.11	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.292065143585	274
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	0.0870130062103	8
Coq.FSets.FMapPositive.PositiveMap.gempty	40	0.0.0.0.0.8.65	search with cache (only 1: intros m; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	8.33793187141	14381
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.0916101932526	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.097727060318	7
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	25.3253910542	7159
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	1.0.0.0.0.0.0.0.4	search with cache (only 1: destruct i; only 1: destruct m; only 1: simpl; only 1: auto; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto; only 1: reflexivity).	1.53179311752	420
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	0.7.8	search with cache (only 1: intuition auto; ME.MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- H; only 1: auto).	0.338652849197	204
Coq.FSets.FMapPositive.PositiveMap.find_1	40	2	search with cache (only 1: auto).	0.0623159408569	3
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.123893022537	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	3.0	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.0772919654846	12
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.0.9.0.3.3	search with cache (only 1: red; only 1: intro H; only 1: unfold MapsTo; only 1: rewrite gso; only 1: auto; only 1: auto).	3.49398899078	2516
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	0.1.0.1.0.0.0.3.0.0.0.0.0	search with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: unfold map; only 1: clear H; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	18.4843330383	7121
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	23.0031089783	9590
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40	6.1.0.0.6.1	search with cache (only 1: intros; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: congruence).	3.5296959877	1574
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0433080196381	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	0.5.0.4.1	search with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.253691911697	225
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	2	search with cache (only 1: intuition).	0.0230689048767	3
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	4.4	search with cache (only 1: intros; only 1: intuition).	0.0518200397491	22
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.45.0.4	search with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	33.6079449654	61171
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	11	search with cache (only 1: intuition).	0.155779123306	122
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.1.0.1	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.0524628162384	20
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40	0.0.0.1.1.0.0.2.1.4.0.1	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	7.75715494156	4926
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	0.0.6.1	search with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.338885068893	123
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40	0.0.0.1.0.0.0.0.1.1	search with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	2.23318696022	593
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40	0.1.6.1.0.0.1.0.4	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro n; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: inversion H; only 1: discriminate).	8.77128219604	4726
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	0.2	search with cache (only 1: intros; only 1: auto with map).	0.0230128765106	4
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	0.0.0.0.1.1.4.4.5	search with cache (only 1: intuition; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).	3.09523510933	1885
Coq.FSets.FMapFacts.WFacts_fun.add_o	40	0.0.0.0.0.0.4.2	search with cache (only 1: intros; only 1: destruct (eq_dec x y) as [E| E]; only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	2.20618700981	711
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.2.0.0.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.113744020462	13
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.0.0.1.0.1	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; only 1: now intuition; only 1: auto).	0.144581794739	16
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40	0.0.0.0.2.1.1.8.0.0	search with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: trivial; only 1: auto; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	9.09259104729	4228
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0	search with cache (only 1: split).	0.0135538578033	1
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.0.2.0	search with cache (only 1: intros m1 m2; only 1: intros; only 1: intro k; only 1: auto with map).	0.089958190918	22
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	1.10.4.0	search with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite H; only 1: auto).	18.424767971	5654
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.0.0.0	search with cache (only 1: split; only 1: split; only 1: congruence; only 1: congruence).	0.031014919281	4
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.2.0.2.0	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	0.204517841339	17
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	1.0.0.0.1.1	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.124752998352	34
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40	0.0.0.0.0.17	search with cache (only 1: intro; only 1: rewrite cardinal_1, elements_Empty; only 1: destruct (elements m); only 1: intuition; only 1: intuition; only 1: discriminate).	1.00090789795	756
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	1.4.8	search with cache (only 1: intro; only 1: rewrite <- cardinal_Empty; only 1: auto).	1.70988082886	960
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	0.1.1.0.0.1.0.8.0.1.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	7.48227882385	4166
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40	10	search with cache (only 1: firstorder).	0.405579090118	163
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	12	search with cache (only 1: firstorder).	0.307462930679	113
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.546113014221	189
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40	1.18.18	search with cache (only 1: intros Hfke; only 1: fix odd_spec 1; only 1: auto).	35.6361529827	18870
Coq.FSets.FMapFacts.OrdProperties.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40	0.0.0.0.0.1.0.1.0.0.0.1	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_mapsto_iff; only 1: induction (elements m); only 1: discriminate; only 1: destruct a; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type).	3.31656002998	1141
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40	1.1.0.0.1.5.0	search with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_Empty; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).	6.67521595955	1930
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	3	search with cache (only 1: inversion_clear 1).	0.0547111034393	4
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	0.4	search with cache (only 1: unfold Empty, empty; only 1: eauto).	0.017215013504	6
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	0.1.0.0.0.6.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: induction 1; only 1: intros a e; only 1: intro abs; only 1: inversion abs; only 1: intros p l inlist; only 1: intuition).	2.53133392334	1701
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	2.49849414825	906
Coq.FSets.FMapWeakList.Raw.remove_3'	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.0645699501038	10
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0.1	search with cache (only 1: intros m Hm x y; only 1: auto).	0.0143539905548	3
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0117340087891	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	3.0.0.0.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).	0.0356819629669	12
Coq.FSets.FMapWeakList.Raw.fold_1	40	1.11.0.0.6	search with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: destruct a; only 1: auto).	5.90699100494	6009
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40	0.0.1.0.0.1.17.3	search with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: split; only 1: auto; only 1: auto; only 1: eauto; only 1: auto; only 1: auto).	4.09226894379	7806
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	0.2.3.3	search with cache (only 1: intros m; only 1: intro n; only 1: intro abs; only 1: inversion abs).	0.0940289497375	99
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40	5.3.7.2.20.8.0	search with cache (only 1: intros m; only 1: induction m; only 1: compute; only 1: intuition; only 1: destruct H0; only 1: inversion H; only 1: discriminate).	9.97621798515	23744
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0158488750458	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0187628269196	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	0.17	search with cache (only 1: intros (e, abs); only 1: auto).	0.135710000992	317
Coq.FSets.FMapWeakList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0158638954163	1
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.114901065826	5
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.1	search with cache (only 1: compute; only 1: auto with extcore).	0.0847299098969	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	15.1.4.5	search with cache (only 1: red; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: Dec.fsetdec).	3.9113099575	2644
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.8.9.0.1	search with cache (only 1: red; only 1: intuition; only 1: intro; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: Dec.fsetdec).	3.93514609337	2252
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	4.0.3.2.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intuition).	1.28387498856	422
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	1.76723217964	408
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	2.0.0.0.2.0.1.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: destruct 1; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	10.1897161007	2919
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.102469921112	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40	0.5.9.7.2.6.2	search with cache (only 1: intuition; only 1: apply subset_1; only 1: red; only 1: pattern s; only 1: intro; only 1: do 2 rewrite mem_iff; only 1: auto).	23.5553438663	12493
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	2.5	search with cache (only 1: intros; only 1: auto with set).	0.0187659263611	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0145230293274	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	0.3	search with cache (only 1: apply mem_1; only 1: Dec.fsetdec).	0.0332319736481	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.0874168872833	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0511610507965	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.1.2.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.846765995026	105
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.013561964035	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40	0.0.0.0.0.0.0.2.0.0	search with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	32.0947232246	2667
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40	0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).	39.681828022	3847
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0354328155518	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0954210758209	24
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	2	search with cache (only 1: auto with set).	0.0134148597717	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40	2.6.0.3.6.0.0.0	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	15.7251138687	6153
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	0.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0274970531464	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	0.1.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.0247781276703	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	1	search with cache (only 1: auto with set).	0.0128331184387	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	8.0	search with cache (only 1: intros; only 1: auto with set).	0.0483441352844	14
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40	13.0.0.0.2.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros a; only 1: do 2 rewrite mem_iff; only 1: eauto with set).	12.2809000015	4579
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	3.3.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0263729095459	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.0194451808929	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.0186879634857	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	0.13	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: apply remove_3).	0.430583953857	207
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	0.0.21	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with set).	7.70773220062	2381
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	1.4.0.8.0.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: split; only 1: apply subset_2; only 1: auto with set; only 1: Dec.fsetdec).	19.6487979889	873
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.0139529705048	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0262289047241	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	0.0.0.12	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.20058298111	162
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	1	search with cache (only 1: auto with set).	0.0148220062256	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0186698436737	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0146660804749	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0146589279175	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.0140860080719	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0142171382904	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.0136239528656	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	1	search with cache (only 1: auto with set).	0.0142228603363	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.014190196991	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0657980442047	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0	search with cache (only 1: auto with set).	0.0145699977875	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0157370567322	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.014878988266	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.024276971817	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0144867897034	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0142579078674	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0143640041351	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0148918628693	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0134880542755	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0134999752045	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	4.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0534629821777	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0	search with cache (only 1: auto with set).	0.0141451358795	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0156018733978	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0141320228577	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0146720409393	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0145390033722	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	0.0.0.0.0.1.1.6.2	search with cache (only 1: intros; only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: intuition).	13.2492678165	3870
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0210099220276	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40	1.0.0.0.9.8	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	5.70759606361	2330
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40	0.0.3.0.0.0.0.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.47065114975	165
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.1.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.0504610538483	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.0145411491394	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0744440555573	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0490539073944	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0507431030273	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	8	search with cache (only 1: auto with set fset).	0.069344997406	26
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	5	search with cache (only 1: solve_proper).	0.0994918346405	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	2.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto with set).	0.0526430606842	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.018100976944	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	3.1.0.0.2	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: auto with set).	0.242002010345	77
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.0.0.4	search with cache (only 1: unfold compat_bool, Proper, respectful; only 1: intros; only 1: f_equal; only 1: auto).	0.0301549434662	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	19.1.4	search with cache (only 1: intros; only 1: simpl; only 1: eauto).	0.427768945694	1270
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	39.1	search with cache (only 1: simpl; only 1: eauto with set).	2.82335805893	12334
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40	6.0.0.0.18.0	search with cache (only 1: intros; only 1: generalize H; only 1: unfold is_empty; only 1: case (M.is_empty s); only 1: auto; only 1: firstorder).	6.21525597572	9399
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.1.0.3.3.0	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	0.274019002914	246
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.5.5.0	search with cache (only 1: intros s x; only 1: unfold subset; only 1: case M.subset; only 1: auto; only 1: intuition; only 1: discriminate H).	1.70548200607	1590
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.6.0.0.1.3.0	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	1.06425404549	1279
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.0.2	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0318729877472	16
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.0.4.16	search with cache (only 1: case M.empty; only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.689741134644	1073
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	2.0	search with cache (only 1: intros; only 1: firstorder).	0.128546953201	74
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.1.5.6.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	36.4949331284	2635
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.1.3.6.0	search with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	15.9584100246	1953
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0165629386902	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.2.4.3	search with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.265523910522	261
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.1.3.0	search with cache (only 1: intros s x y; only 1: firstorder; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.132889986038	47
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	0.0.5.1	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0355098247528	31
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.1	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0180401802063	14
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.6.0	search with cache (only 1: intros; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0164179801941	10
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0166981220245	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0169138908386	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.2.1.1	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.11523604393	21
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.2.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.017441034317	6
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.2.1.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.186912059784	46
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	10.2.1	search with cache (only 1: intro H; only 1: case M.empty; only 1: decide equality).	1.38662314415	535
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	0.1.0.23	search with cache (only 1: compute; only 1: intros; only 1: rewrite <- (H _ _ H0); only 1: auto).	2.10813999176	4764
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.1.0.0.1.2	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.345813989639	80
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.186120033264	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	1.1.1.5.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case (M.elements s); only 1: case M.for_all; only 1: intuition; only 1: firstorder).	1.45584607124	883
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0264480113983	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	11	search with cache (only 1: solve_proper).	0.275047063828	148
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40	7.1.3	search with cache (only 1: intuition; only 1: red; only 1: intuition).	0.159302949905	174
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	8.1.1	search with cache (only 1: intuition; only 1: red; only 1: intuition).	0.168450832367	193
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0596950054169	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	2.0.0	search with cache (only 1: red; only 1: intros; only 1: intuition).	0.0827558040619	22
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0338048934937	1
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	0	search with cache (only 1: fsetdec).	0.042053937912	1
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	0.1.0	search with cache (only 1: red; only 1: intros y LT; only 1: auto).	0.0213570594788	4
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0778419971466	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0362842082977	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0286679267883	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	5.1.0	search with cache (only 1: red; only 1: intros y LT; only 1: fsetdec).	0.0476729869843	15
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0398418903351	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0390501022339	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0530200004578	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.031378030777	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.0332081317902	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.040589094162	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0337769985199	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	0	search with cache (only 1: fsetdec).	0.0486381053925	1
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	3.3.0	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.140645027161	9
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	4.0.0	search with cache (only 1: split; only 1: apply remove_3; only 1: fsetdec).	0.0987570285797	16
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.0747361183167	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.105502128601	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.0826070308685	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0550210475922	1
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.186027050018	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	0	search with cache (only 1: fsetdec).	0.0550870895386	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0493218898773	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0670120716095	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0668230056763	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.140197992325	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0400748252869	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0924379825592	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0546398162842	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0547699928284	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0540499687195	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0627720355988	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0619649887085	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0652849674225	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0951590538025	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0756509304047	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.07532787323	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.158897161484	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.163115024567	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.151145935059	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	1	search with cache (only 1: fsetdec).	0.193724155426	19
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0531821250916	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.051607131958	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0409069061279	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0411701202393	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0541450977325	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0578889846802	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.060791015625	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0433058738708	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0902850627899	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0758001804352	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.14387011528	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.13373208046	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	1.3.1	search with cache (only 1: split; only 1: fsetdec; only 1: intuition).	0.128973007202	15
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	1.1.2	search with cache (only 1: intuition; only 1: expAdd; only 1: fsetdec).	0.114454030991	7
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.162680149078	4
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.291966915131	3
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.23571395874	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.388679027557	41
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	0.0.0.2.0.1.1	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: set (l := rev (elements s)); only 1: auto; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.413364171982	134
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40	9.2.0.1.4	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec_bis; only 1: auto; only 1: auto with *; only 1: fsetdec).	8.43246197701	2296
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.0.0.4.1	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: exact eq_equivalence; only 1: auto with *).	0.0510840415955	10
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	1.4.18.2	search with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: auto with set).	7.31331801414	4687
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40	4.0.0.0.0.7.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	13.8855311871	2374
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	0.0.0.0.0.1.6.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	9.84378004074	1550
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0383999347687	3
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	0.0.0.0.1.12	search with cache (only 1: intro; only 1: rewrite elements_Empty, M.cardinal_1; only 1: intro; only 1: destruct (elements s); only 1: auto; only 1: discriminate).	0.66778087616	370
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.1.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.0401899814606	7
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	2.9.4	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.828722953796	320
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	6.1	search with cache (only 1: symmetry; only 1: intuition).	0.0746788978577	31
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	1.0.3.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto with set).	0.121546983719	39
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.2.7.1.1	search with cache (only 1: intros; only 1: remember (cardinal s) as n; only 1: revert Heqn; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set; only 1: auto with set; only 1: auto with set).	6.5256319046	3881
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	2	search with cache (only 1: auto with set fset).	0.0719928741455	31
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40	0.0.0.0.0.3.20.0	search with cache (only 1: intros; only 1: compute; only 1: split; only 1: ME.elim_comp; only 1: intuition; only 1: ME.elim_comp; only 1: intuition; only 1: intuition).	25.6930530071	14561
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0389308929443	3
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0382030010223	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.0199401378632	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.125877857208	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.1.0	search with cache (only 1: split; only 1: split; only 1: intuition).	0.022234916687	4
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	1	search with cache (only 1: fsetdec).	0.159463167191	20
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0461719036102	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.154681921005	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	13.1	search with cache (only 1: intro; only 1: intuition).	0.125910043716	253
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0378789901733	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	18	search with cache (only 1: fsetdec).	4.41840791702	2685
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.054291009903	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.100947141647	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0935180187225	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0742938518524	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.138975143433	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.164927959442	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	1.1.1	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0582749843597	6
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	6	search with cache (only 1: fsetdec).	0.244963884354	38
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	1	search with cache (only 1: fsetdec).	0.103494882584	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.043576002121	1
Coq.FSets.FMapList.Raw.empty_1	40	1	search with cache (only 1: inversion_clear 1).	0.00984907150269	2
Coq.FSets.FMapList.Raw.empty_sorted	40	1	search with cache (only 1: constructor).	0.00938200950623	2
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	1.1.0.0.0.6.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: induction 1; only 1: intros a e; only 1: intro abs; only 1: inversion abs; only 1: intros (k, e) l inlist; only 1: intuition).	2.5083501339	1754
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.0.1.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: intuition).	2.31600093842	917
Coq.FSets.FMapList.Raw.elements_1	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0108168125153	3
Coq.FSets.FMapList.Raw.elements_2	40	0.3.0.0	search with cache (only 1: intros m x; only 1: unfold PX.MapsTo; only 1: intros; only 1: auto).	0.172329187393	23
Coq.FSets.FMapList.Raw.elements_3	40	2.0.0.1.1	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.0261540412903	9
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	3.1.0.1.2	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: simpl; only 1: intuition).	0.350337028503	175
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	1.0.0.1.0.0.3	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: inversion_clear H; only 1: auto).	0.959813117981	515
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.1.0.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: intuition).	0.0438039302826	10
Coq.FSets.FMapList.Raw.mapi_sorted	40	0.0.0.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	0.384890079498	141
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40	0.1.1.7.0.7	search with cache (only 1: induction m; only 1: intros; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: auto).	1.69042205811	2941
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	0.1.1.2	search with cache (only 1: intros m; only 1: intro; only 1: intro abs; only 1: inversion abs).	0.0194940567017	8
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.00889110565186	1
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0115830898285	2
Coq.FSets.FMapList.Make.elements_3	40	0.17	search with cache (only 1: induction m; only 1: auto).	0.158349990845	350
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.00824809074402	1
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	0.6	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.0991408824921	66
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.2	search with cache (only 1: split; only 1: auto with sets).	0.0105769634247	4
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	1.3.1.0.7.1.1	search with cache (only 1: simple induction x; only 1: intro; only 1: inversion_clear H; only 1: auto; only 1: intros; only 1: inversion_clear H; only 1: auto).	20.7366938591	2181
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.1.4.15.7.3	search with cache (only 1: red; only 1: intros y0 H1; only 1: split; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.911807060242	8472
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	0.0.6	search with cache (only 1: intro H1; only 1: left; only 1: trivial).	0.00504207611084	9
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	1.1.6.3.1.3	search with cache (only 1: intro H1; only 1: intros y H2; only 1: induction H2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	2.32255005836	1225
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.0	search with cache (only 1: red; only 1: auto).	0.00465488433838	2
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	1.13.1.9	search with cache (only 1: symmetry; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	1.70813918114	2750
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40	0.0.1.0.0.0.0.1.0.0.2.8.6	search with cache (only 1: revert d'; only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	4.58945393562	6683
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.1.10.4	search with cache (only 1: unfold unorm; only 1: destruct nzhead; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	6.01079392433	17426
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	0	search with cache (only 1: now induction d).	0.00653004646301	1
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	17	search with cache (only 1: now induction d).	0.576112985611	171
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.1.1.21.0	search with cache (only 1: simpl; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now simpl).	1.6473338604	1070
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	search with cache (only 1: apply of_lu_double_gen).	0.0814020633698	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0845749378204	2
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: trivial).	0.078861951828	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0968658924103	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40	6.2.9.3	search with cache (only 1: unfold Pos.to_int, Pos.of_int, norm; only 1: induction d; only 1: now induction d; only 1: now destruct nzhead).	1.92696905136	1106
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	3	search with cache (only 1: trivial).	0.0324430465698	4
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	36.30.0	search with cache (only 1: simpl; only 1: symmetry; only 1: now induction d).	24.9231212139	8017
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	0.0.0.0.0.0.0.0.0.0.0.5	search with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	3.42619991302	1112
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.1.1.0.7.0	search with cache (only 1: exists (Nat.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: unfold Nat.of_uint; only 1: f_equal; only 1: now induction d).	1.44557285309	494
Coq.Numbers.DecimalNat.Signed.of_int_norm	40	6.6.12	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	3.32940983772	1820
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	search with cache (only 1: now induction d).	0.0165431499481	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.0.1	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0263011455536	4
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.0.0.0.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.0451381206512	7
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	0.1.1.16.0	search with cache (only 1: exists (N.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold N.to_int, N.of_int, norm; only 1: f_equal; only 1: now induction d).	18.1414079666	10242
Coq.Numbers.DecimalN.Signed.of_int_norm	40	12.0.0.7.4	search with cache (only 1: induction d; only 1: unfold N.to_int, N.of_int, norm; only 1: f_equal; only 1: now induction d; only 1: now induction d).	29.3983509541	8809
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	1	search with cache (only 1: trivial).	0.0218069553375	15
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.0.17.1.16	search with cache (only 1: unfold Z.mul, Z.eq; only 1: intro; only 1: destruct n as [n m]; only 1: simpl; only 1: now rewrite add_succ_r, add_succ_l).	10.2386689186	9054
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.134222984314	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.6	search with cache (only 1: compute; only 1: now nzsimpl).	0.0846991539001	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	1.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.107638120651	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	3.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.081207036972	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.142911911011	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.1.1.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.168350934982	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	8.0.0	search with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl').	0.764138936996	154
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.1.0.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.151845932007	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.3.0	search with cache (only 1: intros n m; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.228801012039	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.1.1.2	search with cache (only 1: unfold Z.opp, Z.eq; only 1: intro m; only 1: simpl; only 1: now nzsimpl).	0.247941017151	14
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.5.0	search with cache (only 1: intros; only 1: apply le_ngt; only 1: now nzsimpl).	0.0676109790802	14
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	6.1.1	search with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	0.49557185173	69
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0137720108032	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0124430656433	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.655282020569	32
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0133340358734	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	2.9.27.26.21.3	search with cache (only 1: rewrite one_succ; only 1: apply le_succ_l; only 1: rewrite opp_succ; only 1: nzsimpl; only 1: apply le_succ_l; only 1: apply lt_pred_l).	21.1357688904	29666
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	1.0.7.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite even_spec, odd_spec; only 1: now rewrite <- even_spec, even_succ, odd_spec).	3.45921587944	1381
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0303590297699	17
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	0.0.2.0.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	0.0339150428772	29
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	2.0.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0885820388794	43
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0290510654449	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	1.1.1	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0264081954956	23
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	0.10.0.0.0.1.1.14	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order'; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: order').	6.98714590073	6713
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.2.6.8.3	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	28.5845839977	3968
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	9.6.2.0.0.6.51	search with cache (only 1: split; only 1: intros a H; only 1: trivial; only 1: intros x x' Hx; only 1: now f_equiv; only 1: intros x x' Exx' y y' Eyy'; only 1: eauto).	9.00850081444	16913
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	7.5.21	search with cache (only 1: intros n Hn; only 1: intros LT EQ; only 1: now f_equiv).	12.4128849506	7132
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.0.0.0.0.1.12.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	9.23771905899	3791
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40	0.5.15.9	search with cache (only 1: intros n n' Hn m m' Hm; only 1: bitwise; only 1: rewrite Hm, Hn; only 1: trivial).	22.769464016	16706
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.123337030411	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0365087985992	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0439760684967	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0121259689331	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	7.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).	0.119318962097	60
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0122690200806	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	5.3.0	search with cache (only 1: intros; only 1: bitwise; only 1: now try order').	0.0389430522919	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	2.1.8.2.2.9.17.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: case_eq (even m); only 1: intros; only 1: apply andb_false_iff; only 1: auto; only 1: intros; only 1: apply andb_false_iff; only 1: auto).	24.4203701019	39478
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0131020545959	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.0130407810211	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.9.3	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold clearbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	1.27463984489	406
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	0.11.6.0.9	search with cache (only 1: intros m; only 1: bitwise; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	4.37678408623	5976
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	16.0.13	search with cache (only 1: intros a0; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	6.02473187447	9655
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0157899856567	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.02476811409	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0193178653717	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	2.1.1	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.036101102829	17
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.2.2.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	0.562124967575	304
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	0.0.0.0.2.2.0.0.1.0.2.2.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct_max n; only 1: auto; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_l, mul_opp_r; only 1: destruct_max n; only 1: auto; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_opp).	27.8023500443	31154
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.2.0.0.1.0	search with cache (only 1: intros n m; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.14274096489	19
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.0.0.0.1.1.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	3.651668787	2189
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.0.1.0.3.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	0.0932729244232	41
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.1.7.0.4.0.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: auto with relations; only 1: trivial using divide_1_l, le_0_1).	5.70589017868	5551
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.28503203392	35
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	2.1.1.0	search with cache (only 1: intros n m; only 1: apply le_0_sub; only 1: apply le_0_sub; only 1: apply abs_nonneg).	0.0257079601288	12
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0178320407867	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.0.2.0.22.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial).	9.83452606201	10328
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).	0.0186758041382	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.0189878940582	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.9.0.0.3.2	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: trivial; only 1: apply divide_refl; only 1: trivial).	14.2769298553	17021
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	4.0.0.0.0.1.0.0.1.0.0.2.0.0	search with cache (only 1: intros n m Hn; only 1: split; only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: apply divide_lcm_l).	24.2573211193	25580
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.1.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0301420688629	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.836273908615	243
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.0.0.0.3.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.0587179660797	15
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.6.1.2.1.5.0	search with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros q H H'; only 1: now apply divide_abs_l).	11.7967648506	7100
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.0.0.2.1.3.4.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	3.77585482597	2287
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.4.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0980048179626	17
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.4.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	2.50814390182	1391
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	1.30816888809	649
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.19.0.0.0.20.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	30.2039761543	10986
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.2.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	1.48602795601	675
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	0.1.13.0.1.7.0.2	search with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: apply min_r; only 1: now rewrite <- sub_le_mono_l; only 1: rewrite max_l by trivial; only 1: apply min_l; only 1: now rewrite <- sub_le_mono_l).	16.8043048382	12036
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.0.0.4.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	0.958691835403	732
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.3.0.0.1.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	7.81361985207	6448
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.0.0.2.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	3.61591315269	1521
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.1.0.0.5.3.0.0.4.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	1.35778999329	956
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	1.0.0.2.0.1	search with cache (only 1: nzinduct n; only 1: left; only 1: now nzsimpl; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.0613961219788	27
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.32.4	search with cache (only 1: intro H; only 1: apply add_le_cases; only 1: now nzsimpl).	22.8919360638	19795
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	1.12.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.360470056534	352
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.1.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0150480270386	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.3.9	search with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.952432155609	1092
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.0.13.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: order).	2.35862493515	2253
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.0.0.10.6.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_le_pred; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	18.7573862076	10074
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.5.1	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.266290903091	119
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.0.2.1.0	search with cache (only 1: intro n; only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.242181062698	61
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.2.3.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	0.361227035522	179
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	1.0.0.0.2.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: symmetry; only 1: symmetry; only 1: apply lt_succ_r).	0.0489740371704	25
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.7.1	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.408628940582	212
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.1.1	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.274266004562	54
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0214509963989	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.1.0.2.0	search with cache (only 1: intro; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.125903129578	8
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	1.6.10.0	search with cache (only 1: intro; only 1: destruct_max n; only 1: now left; only 1: now right).	1.81772494316	1334
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.0.0.0.0.3.0.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: now rewrite opp_nonneg_nonpos).	0.312716960907	134
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	10.10.0.2	search with cache (only 1: intros; only 1: destruct_max n; only 1: tauto; only 1: auto).	3.48653292656	4081
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0263838768005	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	3.3.7	search with cache (only 1: rewrite sgn_null; only 1: auto with relations; only 1: auto with relations).	0.37958407402	212
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.0.0.0.1.3.1.1	search with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.550570011139	398
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.3.0.0.1.0	search with cache (only 1: intros; only 1: destruct (Quot2Div.mod_bound_pos a b); only 1: auto; only 1: auto; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	0.616768121719	238
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.6.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	0.789885044098	687
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0358700752258	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.1.1.3.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a ÷ (c * b)))); only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	1.48536205292	402
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.0.0.2.0.0.0.0.0.0.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	4.67075300217	3954
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0164639949799	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.0.1.0.0.0.1.0.1.0.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	8.41101098061	5494
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.2.0.0.0.0.0.3.2	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: auto).	4.44231987	2648
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0161869525909	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	0.3.1.0.4.0.0.0.0	search with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: left; only 1: auto; only 1: right; only 1: apply mod_neg_bound; only 1: order).	4.39217710495	3540
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: auto; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0710160732269	21
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: auto; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0710141658783	21
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	0.0.0.4.3.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order; only 1: order; only 1: rewrite <- div_opp_opp by trivial; only 1: rewrite opp_0; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: auto using eq_refl, le_refl; only 1: auto).	13.3622319698	20128
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.217449903488	172
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0156078338623	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0157489776611	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.0.0.0.0.0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: order; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	6.45400500298	5454
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.2.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: split; only 1: order; only 1: apply le_refl; only 1: nzsimpl; only 1: now try split).	0.760882139206	417
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.0155189037323	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.1.2.0	search with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: order).	0.44268989563	115
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.1.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0886900424957	36
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: order).	0.0434279441833	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	8.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	1.55799007416	491
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.3	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.344660043716	61
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.023432970047	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.2.1.0.0	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0231230258942	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.034744977951	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	5.39446592331	3834
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.1.8.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	2.2791891098	1537
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0612518787384	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	2.54720187187	545
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite div_mul_cancel_l by trivial; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: rewrite <- neq_mul_0; only 1: auto).	0.873084783554	172
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.1.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.635600090027	101
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.2.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.547629117966	77
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.1.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.174708127975	45
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.2.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.336248874664	31
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.1.1.1.1.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	1.97712516785	454
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0471110343933	10
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_succ_l, pred_succ).	0.0257258415222	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	1.14.0.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- 2!add_opp_r; only 1: now nzsimpl).	5.8222630024	2895
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	2.0.0.0.0.6.0	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intro H; only 1: now f_equiv).	0.692953109741	571
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0390529632568	31
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.13.0.2	search with cache (only 1: intros n m H; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	10.5706520081	3914
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	6.0.3.4.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	4.05330705643	1528
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.3.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	0.236035108566	63
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	1.0.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.390614032745	122
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.2.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.0197529792786	7
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	3.15.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	2.17037701607	1792
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	1.3.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0214421749115	7
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	2.11.0	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	1.75505304337	1182
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	5.1.0	search with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).	0.0539860725403	19
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	7.1.2.2	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	1.46067714691	812
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0134980678558	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.0.0.2.16.0	search with cache (only 1: intros n m p; only 1: nzinduct p m; only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.73463821411	1687
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	3.2.3.7	search with cache (only 1: intro; only 1: symmetry; only 1: rewrite (div_mod a b)  at 1 by order; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	2.61541795731	1845
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0200760364532	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.0539269447327	52
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	1.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: auto using mod_small).	0.062185049057	57
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0435190200806	42
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.030650138855	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00842905044556	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00833511352539	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.0894079208374	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.2.0.1.0.2	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	0.286894083023	204
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	4.0.0.1.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using div_pos).	0.20206785202	60
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.3.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: apply div_str_pos; only 1: auto).	0.0521900653839	26
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	19.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	18.9991371632	15910
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.040295124054	17
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0150709152222	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.2.0.0.0	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: auto).	0.0150098800659	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0206050872803	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	11.2492070198	6531
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.2.0.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.147206068039	33
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.039449930191	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	0.0.0.0.0.0.1.1.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: trivial; only 1: auto; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	6.8365778923	2261
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite div_mul_cancel_l by trivial; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	1.03572106361	454
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	8.0.13.1.2	search with cache (only 1: intros a b Hb; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: now apply mod_always_pos; only 1: now nzsimpl).	37.0698571205	31095
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.1.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.892775058746	128
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.0.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.481664896011	51
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.3.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.233331918716	42
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0159928798676	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.1.1.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.422360897064	148
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0909829139709	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	1	search with cache (only 1: Z.order).	0.0536589622498	13
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	18.12.5	search with cache (only 1: intros A eq_dec x P H p; only 1: intros i Hi Rec; only 1: firstorder).	17.4305639267	12290
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.2.4.0	search with cache (only 1: intros; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).	0.0272831916809	10
Coq.Numbers.Cyclic.Int31.Ring31.test	40	11.10	search with cache (only 1: destruct y; only 1: ring).	34.4505450726	1381
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.0.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0309839248657	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0301451683044	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.0370061397552	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40	0.0.2.0.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: apply Z.pow_gt_1; only 1: auto with zarith; only 1: auto with zarith).	0.0632240772247	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.4.0.0	search with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.0970780849457	27
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.1.0.0	search with cache (only 1: intros x y; only 1: unfold to_Z, zero; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0379109382629	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.5.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.0475549697876	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40	0.10.7.3.0.3	search with cache (only 1: intros a b; only 1: unfold succ, to_Z, Z.succ; only 1: rewrite Zplus_mod_idemp_l; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	13.7865629196	14104
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	1.4.0.0	search with cache (only 1: intros; only 1: unfold opp_carry, to_Z; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.052433013916	16
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	3.0.1	search with cache (only 1: intros; only 1: unfold add_carry, to_Z; only 1: trivial).	0.0382912158966	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40	0.2.0.0.0	search with cache (only 1: intros; only 1: destruct x; only 1: trivial; only 1: apply two_power_pos_equiv; only 1: trivial).	0.0437159538269	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	2	search with cache (only 1: auto).	0.135302066803	3
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	4.97800111771	905
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	1.0.2	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	0.0528688430786	15
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	search with cache (only 1: intros h; only 1: Z.order_nz).	0.0272600650787	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	3	search with cache (only 1: auto with qarith).	0.0260660648346	4
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.0	search with cache (only 1: red; only 1: auto).	0.0235650539398	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: reflexivity).	0.0192410945892	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: reflexivity).	0.018522977829	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	6	search with cache (only 1: congruence).	0.0242071151733	7
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.4.0	search with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.061192035675	12
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	1	search with cache (only 1: apply subc_spec).	0.0490040779114	2
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	2	search with cache (only 1: apply sub_spec).	0.0576648712158	3
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.05198097229	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0	search with cache (only 1: now intros ->).	0.0512681007385	1
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	0.32.6.9	search with cache (only 1: apply to_Z_inj; only 1: rewrite !add_spec; only 1: f_equal; only 1: lia).	3.8470621109	6239
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0915038585663	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	5.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.147356033325	8
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: reflexivity).	0.050400018692	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.5.1	search with cache (only 1: intros Ha; only 1: subst; only 1: apply negb_involutive).	0.0706398487091	9
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0628080368042	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0626890659332	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	1.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.0740120410919	5
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	3.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: apply orb_false_r).	0.0745549201965	7
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	7.2	search with cache (only 1: intros A f assoc a0 comma0 l; only 1: firstorder).	0.10346698761	37
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.4	search with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).	0.0308079719543	23
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.7.0.0	search with cache (only 1: intros; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.584609031677	99
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	4.23.0.0	search with cache (only 1: intros; only 1: zify; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: reflexivity).	2.30997610092	2226
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	1.0.0.24	search with cache (only 1: apply Z.pow_gt_1; only 1: red; only 1: auto; only 1: easy).	0.465393781662	401
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	1.1.0	search with cache (only 1: zify; only 1: simpl; only 1: now f_equal).	0.115220069885	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	0	search with cache (only 1: assumption).	0.0861330032349	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.1.0.0.0	search with cache (only 1: intro n; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.120609045029	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	5.2.0	search with cache (only 1: intro; only 1: zify; only 1: auto).	0.174185037613	12
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	search with cache (only 1: reflexivity).	0.0138139724731	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.0137329101562	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.0135860443115	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	24	search with cache (only 1: parity_binop).	14.6636078358	16040
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.1.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.00635194778442	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.1.0.1.2	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.0353808403015	55
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	3.1.1.0.1.23	search with cache (only 1: induct ltac:(m); only 1: intros H; only 1: false_hyp H nlt_0_r; only 1: intros m IH H; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	31.9658310413	30189
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.0.0	search with cache (only 1: intro; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0170519351959	5
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.1.0.0.1.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.0252041816711	9
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.0.14.1	search with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	2.00682616234	3055
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.4.1.0.0.2.14.1	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: intro H; only 1: false_hyp H nlt_0_r; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	36.3795909882	40560
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	0.22.0	search with cache (only 1: intros n m H; only 1: rewrite H; only 1: apply le_pred_l).	28.5220561028	36881
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	3.7.0.0.0.3.0.1.4	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: le_elim H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: false_hyp H neq_succ_0; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	29.5693531036	48932
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.2.0.0.0.2.1.5	search with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	3.92165207863	5070
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	0.8.0.1.0.0.1.0.0.0.2.1	search with cache (only 1: intros n m; only 1: cases n; only 1: split; only 1: rewrite pred_0; only 1: apply le_le_succ_r; only 1: rewrite pred_0; only 1: intro H; only 1: apply le_succ_r in H; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	32.8472430706	31317
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.1.0.2	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	0.0554881095886	51
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.0.0.2.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: nzsimpl; only 1: order).	0.0396211147308	29
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0221128463745	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.185261011124	96
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	1.0.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: now nzsimpl).	0.0227499008179	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.00862717628479	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.00846004486084	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.12.0.0.1.0	search with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: order'; only 1: now nzsimpl').	1.73637604713	3165
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.4.0.0.5	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.385385036469	490
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.00715494155884	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.00713706016541	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	4.0.0.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: apply mul_comm).	0.536427974701	515
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	4.0.0.2.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.621595859528	505
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.6.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.0526130199432	65
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.3.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: apply div_str_pos; only 1: auto).	0.141207933426	28
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.10.1	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.605524778366	874
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0298721790314	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.032074213028	14
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	4.0.0.0.2.0.0.1.0.0.2.0	search with cache (only 1: intros; only 1: intuition; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: auto'; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: auto').	2.75143814087	3160
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.0.0.0.2.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0328028202057	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0413889884949	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.0.15.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	6.13502597809	2805
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	2.1.1.0.1	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.057165145874	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	0.851032018661	411
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	0.767666101456	373
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.1.1.7.2	search with cache (only 1: intros n m H1; only 1: apply Private_NZDiv.mod_small; only 1: apply mod_bound_pos; only 1: apply le_0_l; only 1: auto').	1.68994784355	1804
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.6.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.339051961899	119
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto').	0.0184879302979	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.2.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.0171489715576	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	1.0.0.5.2	search with cache (only 1: intros n m p H; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.8010160923	359
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0193309783936	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.0.0.0.4.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: now apply H).	0.245589017868	118
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.148079156876	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.5.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.733207941055	365
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.1.2.0.0.0.0.0.0.0.4.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: intro H1; only 1: now apply H; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	4.47795319557	4592
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0106201171875	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	22.1	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.683093070984	2201
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.6.0.13.2	search with cache (only 1: cases ltac:(n); only 1: auto with *; only 1: intro n; only 1: right; only 1: now exists n).	1.15837407112	1924
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	9.2.0.0.0.0.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: pose proof (pred_succ n) as EQ'; only 1: now nzsimpl).	1.41153001785	2186
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40	6.2.0.0.3.0.0	search with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).	1.20863485336	2070
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.14.2.19	search with cache (only 1: unfold if_zero; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: auto).	4.85583591461	10674
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	1.0.0.7.1.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: auto; only 1: auto; only 1: f_equiv').	0.764438152313	598
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	3.17.6	search with cache (only 1: intro y; only 1: compute in *; only 1: now rewrite recursion_0).	1.36615300179	2189
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	2.2.11.4.16	search with cache (only 1: intro; only 1: intro; only 1: compute; only 1: intro H; only 1: f_equiv').	18.2678768635	11196
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	1.14	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.159295082092	109
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.0.2.6.10.16	search with cache (only 1: intro y; only 1: unfold even; only 1: rewrite recursion_succ; only 1: reflexivity; only 1: reflexivity; only 1: f_equiv').	3.39345693588	7878
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.0.23	search with cache (only 1: compute in *; only 1: rewrite recursion_0; only 1: auto with *).	2.09552884102	1797
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	0.0.15	search with cache (only 1: compute in *; only 1: intro n; only 1: now rewrite recursion_0).	2.26135587692	1332
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.0.20.1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: auto).	5.79151797295	6419
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.10.0	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: assumption).	0.585687875748	605
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.4.6.0.0.0.1.0.0.0	search with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: assumption; only 1: apply le_lt_trans with n; only 1: apply le_0_l; only 1: auto).	14.6945691109	14797
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	11	search with cache (only 1: simpl_relation).	0.675168991089	302
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0930030345917	11
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	11.11.0	search with cache (only 1: destr_bool; only 1: order'; only 1: order').	5.44981694221	5767
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.3.0.2.40	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: apply lt_1_2; only 1: apply Private_NZDiv.div_0_l; only 1: order').	4.65877509117	7072
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	2.0.1.3.6.4.6.11.4	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: apply b2n_inj; only 1: simpl; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: now rewrite ?Ha; only 1: order'; only 1: order_nz).	9.15243387222	11419
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0355341434479	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.012099981308	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	0.3.4.2.0.2	search with cache (only 1: repeat red; only 1: intros; only 1: apply eq_true_iff_eq; only 1: rewrite 2!testbit_true; only 1: rewrite H; only 1: now nzsimpl').	2.14643096924	932
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.2.2	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.169681072235	33
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.1.10.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.632252931595	321
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	1.0.0.0.1.8.2	search with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intro H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	3.67558884621	3360
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0587351322174	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0599648952484	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0693571567535	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0229871273041	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0245051383972	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.023334980011	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	7.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now try order').	0.082535982132	70
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0238611698151	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0246961116791	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.2.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.025358915329	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: assumption; only 1: assumption).	1.02861499786	608
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.4.2	search with cache (only 1: intros a n H; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.221742868423	119
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.3.0.0.1	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.419584989548	378
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.0.0.1.0.0.0.0	search with cache (only 1: intro n; only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply le_0_l; only 1: now nzsimpl).	0.0227959156036	9
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	0.0.0.0.0.0.0.0.0.0.0.4.2.6.1.4.1	search with cache (only 1: intros; only 1: destruct (lt_ge_cases a 0) as [Ha| Ha]; only 1: destruct (le_gt_cases a 0) as [H| H]; only 1: rewrite (sqrt_neg _ Ha); only 1: destruct (le_gt_cases a 1) as [H'| H']; only 1: apply le_0_l; only 1: order'; only 1: setoid_replace a with 0 by order; only 1: now rewrite Private_NZSqrt.sqrt_0; only 1: destruct (le_gt_cases a 0) as [H| H]; only 1: setoid_replace a with 0 by order; only 1: now rewrite Private_NZSqrt.sqrt_0; only 1: destruct (le_gt_cases a 1) as [H'| H']; only 1: rewrite <- le_succ_l, <- one_succ in H; only 1: setoid_replace a with 1 by order; only 1: now rewrite Private_NZSqrt.sqrt_1; only 1: now apply lt_le_incl, Private_NZSqrt.sqrt_lt_lin).	15.704267025	15574
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.2.0.0.0.6.0.0	search with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.0507349968	2173
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	5.2.0.0.2.0	search with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intro H; only 1: now nzsimpl).	6.3729557991	2765
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0241210460663	8
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.0.2.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0451910495758	28
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	1.9.0.2.2.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: apply succ_le_mono).	6.31572413445	6138
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.0.0.0.3.1.1.1	search with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: now nzsimpl; only 1: intros n IH H; only 1: apply add_pos_nonneg; only 1: apply lt_0_succ; only 1: apply le_0_l).	3.06527781487	1728
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.0.0.0.0.0.3.1	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	3.0617351532	920
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0192539691925	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	2.0.2.2	search with cache (only 1: intros; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	0.0352249145508	10
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	5.52494502068	1958
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	0.15.3.2	search with cache (only 1: intros a b Ha Hb; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order).	7.9159219265	9374
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	1.3.11.4.1	search with cache (only 1: intros; only 1: apply neq_0_lt_0; only 1: apply pow_pos_nonneg; only 1: auto'; only 1: auto').	9.27220606804	15425
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40	0.3.1.7.0.3	search with cache (only 1: intros; only 1: apply pow_lt_mono_l; only 1: auto'; only 1: split; only 1: apply le_0_l; only 1: trivial).	7.58499002457	5815
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.3.0.3.0.1.0.5.0.0	search with cache (only 1: intros; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: order; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).	26.0564661026	14067
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.1.0.0.2.1	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: order; only 1: trivial).	0.0306730270386	28
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	0.3.0.12.0	search with cache (only 1: intros; only 1: apply pow_lt_mono_r; only 1: order; only 1: auto'; only 1: trivial).	14.5744969845	9688
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	1.7.1.1.1	search with cache (only 1: intros n m p H; only 1: intro H2; only 1: apply pow_le_mono_r; only 1: auto'; only 1: assumption).	1.57323002815	1697
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.1.0.0.2	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: trivial; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).	0.017865896225	10
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.4.0.0.3.1.2	search with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.826892852783	1181
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.2.2.2.0.4.0.0.6	search with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	30.3431270123	22688
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	0.3.0.0.1.2.0.1.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l).	8.86190509796	5176
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.4.0.0.0.7.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	8.20420217514	1689
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	0.0.0.3.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	3.32135415077	891
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.0.0.0.0.0.0.0.0.2.2.3.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	9.02700281143	2910
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.3.0.0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: order; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_l).	8.30638313293	1753
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.3.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_r).	2.69525098801	662
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	1.0.0.7.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	10.5778391361	3660
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0.0	search with cache (only 1: intros; only 1: constructor 1).	0.0070469379425	2
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.6.1	search with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).	0.0433301925659	35
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.17	search with cache (only 1: unfold lcm; only 1: intro n; only 1: now nzsimpl).	1.2429420948	1188
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0162811279297	9
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.0.12.0	search with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	2.02953004837	2694
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0168409347534	7
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_refl).	0.0215339660645	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	4.0.2.1.1.2.1.0.0.0.0.0	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros q; only 1: intuition; only 1: now transitivity m; only 1: unfold lcm; only 1: intros EQ; only 1: rewrite <- EQ; only 1: apply divide_factor_l).	35.6674439907	34843
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	0.1.2.1.2	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- add_sub_assoc by apply le_refl; only 1: rewrite sub_diag; only 1: now rewrite add_0_r).	1.83436512947	760
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.0.0.0	search with cache (only 1: intros E; only 1: assert (E' : Some n = Some n'); only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E; only 1: now injection E').	0.0675358772278	4
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	1.2.1	search with cache (only 1: intros E; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.246874094009	78
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.5.2.4.4	search with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).	0.631575107574	343
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.2.0.2.5.0	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	1.98344016075	756
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.0.0.0.0.5.0	search with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.282486915588	204
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	1.1.16.1.0	search with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: order'; only 1: now nzsimpl').	4.66701698303	3451
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	0.1.1.0.1.0.0.0.0.1.5.0.0	search with cache (only 1: intros a; only 1: split; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: intros Ha; only 1: order; only 1: intros Ha; only 1: order; only 1: order; only 1: intros Ha; only 1: rewrite sqrt_up_eqn; only 1: apply lt_succ_r, sqrt_nonneg; only 1: trivial).	7.83204698563	7694
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.275765895844	184
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.1.0.1.0.0.0	search with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	0.0943100452423	10
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.13.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	6.74672102928	5647
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	0.0363020896912	10
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	3.1.2.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply lt_le_incl, lt_0_1).	0.0622639656067	61
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0129220485687	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.2.0.0.3.0.0.0.0.0	search with cache (only 1: intros a b Ha Hb; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	7.91829109192	8633
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	0.1.0.0.0.0.4.0.0.0.3.1	search with cache (only 1: intros a b Ha Hb; only 1: symmetry; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: apply mod_unique with 0; only 1: order; only 1: split; only 1: order; only 1: auto; only 1: nzsimpl; only 1: order).	30.4604718685	20461
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0368301868439	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.1.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.035003900528	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0158090591431	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.3.0.2	search with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.89358496666	271
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0477361679077	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0561339855194	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0166001319885	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	14.2.3	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	1.20616483688	1364
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.9.2.0	search with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: left; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.732182025909	807
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	9.0.1.0	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: firstorder).	1.24159693718	317
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	0.0.3.13.7.9.20.31	search with cache (only 1: split; only 1: intros n m; only 1: apply (lt_irrefl n); only 1: tauto; only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).	2.89112210274	14948
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.14.0.18.2	search with cache (only 1: split; only 1: intro; only 1: apply le_refl; only 1: intros n m p; only 1: rewrite 3!lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations).	6.85364413261	8334
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0181148052216	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.1.4.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.034145116806	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.0.3.0	search with cache (only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now rewrite H2 in H1).	0.123941898346	48
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0220401287079	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0199148654938	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0217299461365	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	7.0	search with cache (only 1: intros x y z; only 1: order).	0.0198769569397	21
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	8.0	search with cache (only 1: intros x y z; only 1: order).	0.0307400226593	26
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.4.0	search with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (lt_irrefl x); only 1: now transitivity y).	0.125746965408	47
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.4.2.3.14.1	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intros LE EQ; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	14.0854029655	15109
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	3.5.4.0	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: order).	1.19971084595	810
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.7.0	search with cache (only 1: intros n m LE; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.144541025162	97
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	0.0.0.10.11.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	31.7204399109	20835
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	4.0.1.6.0.3.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	31.3285980225	14238
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.2.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0204811096191	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.12.1	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.260369062424	212
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.3.1.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0231189727783	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	1.0.0.4.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.0831198692322	51
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	3.3.1.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.512719154358	242
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	6.2.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.464714050293	83
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.2.3.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.174044132233	22
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	3	search with cache (only 1: intuition order).	0.14177107811	94
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0154721736908	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.0.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0207059383392	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	3.3.6.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	5.00784707069	3493
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0158689022064	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0157470703125	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.1.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0506331920624	28
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.1.0.1.2.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intro H; only 1: intuition order).	0.312286138535	74
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.2.0.0.0.2.0	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	2.35604906082	1616
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	12.1	search with cache (only 1: intros RS' n; only 1: order).	0.0456459522247	126
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40	8.5.8.10	search with cache (only 1: pattern z; only 1: pattern z; only 1: intros L R n; only 1: firstorder).	5.18677091599	13592
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40	3.5.1.1	search with cache (only 1: intro n; only 1: compute; only 1: intro H; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.17255187035	529
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40	3.1.4	search with cache (only 1: intros LS' n; only 1: compute; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.989356994629	104
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	20	search with cache (only 1: solve_proper).	0.0287549495697	186
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	5	search with cache (only 1: reflexivity).	0.0125789642334	26
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	4.14.1.2.0.0.0.0	search with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: symmetry; only 1: simpl; only 1: now rewrite PeanoNat.Nat.pred_succ).	25.919175148	34635
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	2.1.1.1	search with cache (only 1: PeanoNat.Nat.induct ltac:(n); only 1: apply lt_succ_diag_r; only 1: intros n m; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	0.200013875961	9
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.0.0.8.0.7	search with cache (only 1: induction n; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	1.47660517693	2254
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	5.25	search with cache (only 1: fix gcd_divide 1; only 1: trivial).	7.50635313988	15757
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.029412984848	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.0.0.2.14.0	search with cache (only 1: intro n; only 1: nzsimpl'; only 1: now nzsimpl; only 1: order; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	4.37290382385	1024
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	0.0.0.0.0.0.0.0.0.4.1	search with cache (only 1: intros a b Ha Hb; only 1: apply le_ind with (4 := Hb); only 1: solve_proper; only 1: nzsimpl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: clear b Hb; only 1: intros b Hb IH; only 1: nzsimpl; only 1: now apply mul_pos_pos; only 1: trivial).	13.9372279644	1607
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.0.3.0.12	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	10.2726662159	13185
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.2.13.0	search with cache (only 1: intros n m; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	5.01557302475	2110
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.00844287872314	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.0.1.1.1	search with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.22044301033	194
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0150210857391	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.00856494903564	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	1.2.0.0.1.3.0	search with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: generalize (gcd_divide_l n m); only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	1.61704397202	1353
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	1.0.1.0.1.6	search with cache (only 1: intros n m LE; only 1: apply gcd_unique; only 1: order; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	0.117785930634	165
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.133922815323	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	1.1.1.1.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	1.15181398392	572
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.18.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	4.43887209892	2709
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.8.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.189479827881	68
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	2.8.3.0	search with cache (only 1: intros; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	17.47199893	5940
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.2.0.1.0.0	search with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: apply even_spec in Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0210649967194	16
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	2.1.1.0.10.2.6.0	search with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: case_eq (even n); only 1: apply even_spec in Hm; only 1: now rewrite even_mul, Hm; only 1: apply even_spec in Hm; only 1: now rewrite even_mul, Hm).	9.49272203445	12603
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.108470916748	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.136785984039	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	1.0.0.1.0.2.6.3	search with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	2.56031298637	2192
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0171020030975	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0197448730469	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').	0.0412259101868	15
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	2.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.0560710430145	8
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.1.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0329139232635	6
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0182249546051	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	18.2.1.4.1.18	search with cache (only 1: apply log2_unique' with 0; only 1: now nzsimpl; only 1: split; only 1: now nzsimpl; only 1: order_pos; only 1: now nzsimpl').	19.0741789341	19802
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	4.5.1.4.0.21	search with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order; only 1: order_pos; only 1: now nzsimpl).	12.4360749722	12077
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.1.15.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	6.18557786942	6178
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.4.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order_pos; only 1: order).	0.0250961780548	10
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	1.7	search with cache (only 1: apply log2_up_eqn0; only 1: order).	0.135540008545	23
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	0.6.2.0.0.1.1.1.0	search with cache (only 1: intros a Ha; only 1: assert (Ha' : 0 < a) by order'; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros; only 1: apply lt_succ_r; only 1: order_pos; only 1: order).	13.1468558311	10049
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.0.0	search with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.0132830142975	3
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	7.0	search with cache (only 1: intros; only 1: firstorder).	0.0195200443268	9
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.12.4	search with cache (only 1: symmetry; only 1: rewrite <- H; only 1: auto).	0.591049909592	1571
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	2.4.2.4.5.0.0.0	search with cache (only 1: intros n m p H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: split; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	39.5165228844	21303
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.1.1.2.0.0.0.1.1.2.2.0	search with cache (only 1: intros n m p H; only 1: split; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption).	13.2500798702	5448
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0169370174408	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	8.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.512027025223	79
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0102388858795	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0112590789795	7
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	2.0	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	0.00617599487305	4
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	2.0	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	0.00668716430664	4
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.0057270526886	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	2	search with cache (only 1: eauto using eq_trans, eq_sym).	4.76601696014	49
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.2.0.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.0637810230255	77
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.10.0	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.481402158737	653
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	1.9.8.0	search with cache (only 1: repeat red; only 1: destruct 1; only 1: fix gcd_divide 1; only 1: auto).	33.085403204	7476
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	1.7.11	search with cache (only 1: intros x; only 1: fix sqrtrem_spec 1; only 1: auto).	2.77668499947	1819
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	1.0.2	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0744881629944	23
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	0.13.12	search with cache (only 1: intros n m; only 1: fix sqrtrem_spec 1; only 1: auto).	2.29757189751	3274
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	1.5	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: now f_equiv).	0.328727006912	44
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	1.22.8.25	search with cache (only 1: intros q r; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	27.4173190594	37710
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.7.5	search with cache (only 1: intros n m p; only 1: intros H H'; only 1: now transitivity m).	0.39616394043	353
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	7.8.0.2	search with cache (only 1: unfold lt; only 1: intros n m; only 1: intro H; only 1: Nat.order).	3.58491897583	3062
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0195028781891	4
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.0154011249542	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.0.13	search with cache (only 1: constructor; only 1: auto with ordered_type; only 1: auto with ordered_type).	0.292551040649	357
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.4.5.16	search with cache (only 1: intros n s; only 1: intros (n', Hn); only 1: red; only 1: auto with ordered_type).	7.36146497726	3701
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	0.4.4	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).	0.190508127213	96
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40	1.3.9.16	search with cache (only 1: intros a b; only 1: fix sqrtrem_spec 1; only 1: intros H5 H6; only 1: auto with arith).	2.93997907639	4016
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	3.6	search with cache (only 1: fix sqrtrem_spec 1; only 1: eauto).	0.063894033432	72
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	search with cache (only 1: decide equality).	0.0210089683533	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	2.0.0	search with cache (only 1: split; only 1: tauto; only 1: firstorder).	0.01291680336	5
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40	0.1.0.0.0.0.4.1.10.0	search with cache (only 1: intros; only 1: compute; only 1: case_eq (x <=? y); only 1: tauto; only 1: constructor; only 1: destruct (leb_total x y); only 1: congruence; only 1: congruence; only 1: intros [? ?]; only 1: tauto).	27.5321719646	70870
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	1.0.0.0.1.0.7	search with cache (only 1: compute; only 1: intros; only 1: case leb; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition).	5.06916618347	4404
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	2.2.5.1	search with cache (only 1: intros; only 1: constructor; only 1: eauto; only 1: eauto).	0.391108989716	388
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	0.0.1.1	search with cache (only 1: induction 1; only 1: constructor; only 1: eauto; only 1: eauto).	0.0513598918915	21
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	0.0.0.10.2	search with cache (only 1: intros x y z; only 1: unfold eq; only 1: intuition; only 1: eauto; only 1: eauto).	7.40151691437	3275
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	9.6.3.4.3.5.7	search with cache (only 1: split; only 1: repeat red; only 1: intuition; only 1: repeat red; only 1: auto with *; only 1: repeat red; only 1: apply Logic.eq_trans).	2.74747395515	7660
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	5.0.0.0.0.6.3	search with cache (only 1: split; only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	0.39311504364	562
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.0.0.0.3	search with cache (only 1: split; only 1: auto; only 1: destruct (compare x y); only 1: auto; only 1: auto; only 1: auto).	0.202606916428	109
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	2	search with cache (only 1: order).	1.00811696053	3
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	search with cache (only 1: order).	0.0100860595703	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.00921106338501	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.00927090644836	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.00722789764404	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.2.2.1.0	search with cache (only 1: destruct (compare x y); only 1: intro H; only 1: intuition; only 1: intuition; only 1: auto).	0.0228111743927	12
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.00900793075562	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.00861001014709	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.00844693183899	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.00859189033508	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.00869107246399	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00834202766418	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.00781798362732	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00808501243591	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.766206026077	377
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.744066953659	385
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	3.4.0.2.0	search with cache (only 1: intros; only 1: destruct (compare x y); only 1: auto; only 1: auto with ordered_type; only 1: auto with ordered_type).	0.607660055161	275
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.1.1	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0305020809174	5
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	0.1.2.0.0.0.0.0	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: constructor; only 1: subst; only 1: auto with ordered_type).	0.261820077896	154
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	13.3.3.0.3	search with cache (only 1: destruct l; only 1: auto with *; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).	13.3120689392	13886
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	13.5.0.4	search with cache (only 1: destruct l; only 1: auto with *; only 1: intros x y H; only 1: now rewrite H).	5.64159107208	7477
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.0.0.1.0.3	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: auto).	0.0244150161743	10
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	5.5.1.5	search with cache (only 1: simple induction l; only 1: auto; only 1: intros; only 1: auto with ordered_type).	0.520868062973	555
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40	4.24	search with cache (only 1: fix even_spec 1; only 1: intuition).	13.540594101	21565
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.2.2	search with cache (only 1: intros; only 1: induction H; only 1: auto).	0.0130460262299	7
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	1	search with cache (only 1: intuition).	0.00969099998474	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.00764584541321	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	2.1	search with cache (only 1: intros; only 1: auto with ordered_type).	0.0089168548584	5
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.00729012489319	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0126588344574	3
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0167050361633	3
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	13.4	search with cache (only 1: unfold eqk, eqke; only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.548310041428	650
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40	4.10.1.1.3	search with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto with ordered_type; only 1: simpl in *; only 1: congruence).	13.6474061012	2341
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.01056599617	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.01060795784	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	8.0.2.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).	0.742115020752	528
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	5.0.0.1	search with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: eauto with ordered_type).	0.0297758579254	10
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0254549980164	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.2.2.16.8.10.1	search with cache (only 1: split; only 1: repeat red; only 1: intros (H, H'); only 1: unfold eqke, ltk; only 1: intuition; only 1: order; only 1: eauto with ordered_type).	2.58823299408	5252
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40	0.11.0.8.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: repeat red; only 1: unfold eqk, ltk; only 1: intuition; only 1: rewrite <- H; only 1: eauto with ordered_type).	15.12301898	10006
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0100240707397	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.00889801979065	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0090651512146	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	0.0.3.1.3.2	search with cache (only 1: unfold eqke; only 1: induction 1; only 1: unfold ltk, eqk; only 1: induction H; only 1: auto; only 1: auto).	0.584265947342	326
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.1.2.8.1.11	search with cache (only 1: inversion 1; only 1: intros; only 1: red; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: auto; only 1: eauto with ordered_type).	7.83660888672	5618
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	1.8.0	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: eauto with ordered_type).	0.20848107338	124
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.0.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.0264780521393	4
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0127389431	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	0.0.0.0.0.1.1.0.0.0.0.0.1.1.1.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).	32.5741450787	15004
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.1.1.0.0.0.0.0.0.1.0.2.0.1	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: intro LT; only 1: discriminate; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	14.7997770309	4505
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.0.0.0.1.1.0.0.0.1.1.3.0.2	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).	10.4928820133	4687
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	2.0	search with cache (only 1: apply compare_eq_iff; only 1: intuition).	0.00646495819092	4
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.3.1.0.0.0	search with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: compute; only 1: iorder).	3.02192211151	20
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	5.0.0	search with cache (only 1: compute; only 1: intros x y; only 1: order).	0.0147168636322	20
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	2.4	search with cache (only 1: compute; only 1: iorder).	0.0344851016998	43
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.00689601898193	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	1.25.25.15.2	search with cache (only 1: destr_bool; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: iorder; only 1: iorder; only 1: auto).	10.0166602135	22943
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.1.1.4.1.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	2.76528692245	2368
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	6.0	search with cache (only 1: intros; only 1: iorder).	0.0913689136505	34
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	3.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0770390033722	37
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.4.0	search with cache (only 1: rewrite compare_lt_iff; only 1: rewrite le_not_gt_iff; only 1: intuition).	0.0905668735504	38
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	4.1	search with cache (only 1: intro H; only 1: order).	0.0135250091553	15
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0132651329041	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.01189494133	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	2	search with cache (only 1: order).	1.68502497673	15
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	1	search with cache (only 1: order).	1.73313498497	15
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2	search with cache (only 1: order).	1.68090987206	16
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	2	search with cache (only 1: order).	1.67378306389	17
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0157341957092	11
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	2.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0279920101166	34
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.00621891021729	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1.1.0.3	search with cache (only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0267798900604	38
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	search with cache (only 1: order).	0.0062141418457	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	1	search with cache (only 1: intuition).	0.00737690925598	2
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	2	search with cache (only 1: order).	0.0193810462952	18
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	search with cache (only 1: order).	0.00527906417847	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.00580787658691	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.00535607337952	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	search with cache (only 1: order).	0.00497198104858	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	8.1.6.2.1.4.1.2.1.1	search with cache (only 1: intuition; only 1: eapply OrderTac.lt_irrefl; only 1: transitivity y; only 1: eauto; only 1: order; only 1: eapply OrderTac.lt_irrefl; only 1: transitivity y; only 1: order; only 1: eauto; only 1: order).	35.0985100269	64253
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.0	search with cache (only 1: unfold lt; only 1: auto with *).	0.0062141418457	2
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.00550699234009	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	4.2	search with cache (only 1: apply compare_eq_iff; only 1: firstorder).	0.00844383239746	8
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	1	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.00792503356934	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	3	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.00990700721741	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.2.5.5.5.23	search with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	5.46522498131	12021
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.0.25.16.6	search with cache (only 1: apply eq_true_iff_eq; only 1: red; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	13.883644104	5463
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1	search with cache (only 1: induction 1; only 1: auto).	0.0808410644531	3
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	6.0.0.0.1.2	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	1.1679110527	1059
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.0.7.1.1.0.4	search with cache (only 1: destruct l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	1.23851394653	1631
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	3.16	search with cache (only 1: fix gcd_divide 1; only 1: auto).	2.22395610809	2748
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	0.0.12.0.0.1.1.2.1.1.3	search with cache (only 1: simple induction l; only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: setoid_replace x with a; only 1: auto; only 1: auto; only 1: transitivity a; only 1: auto; only 1: auto).	21.5261049271	16886
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.0.0.3	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	0.0233278274536	9
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	1.1.12	search with cache (only 1: induction l as [| x xs Hl]; only 1: auto; only 1: firstorder).	0.210834026337	292
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	11	search with cache (only 1: eauto with *).	0.413665056229	141
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	9.4.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold RelCompFun; only 1: solve_proper).	3.33205294609	810
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1.2.0.2	search with cache (only 1: eapply subrelation_proper; only 1: eauto with *; only 1: reflexivity; only 1: eauto with *).	0.03968501091	11
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	0.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0224661827087	3
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	0	search with cache (only 1: now intros <-).	0.0199959278107	1
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	1	search with cache (only 1: firstorder).	0.0206079483032	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: auto).	0.0185730457306	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0180480480194	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1	search with cache (only 1: firstorder).	0.0210988521576	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	search with cache (only 1: now destruct 1).	0.0198931694031	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	search with cache (only 1: auto).	0.0182869434357	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0178370475769	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	1	search with cache (only 1: firstorder).	0.0182449817657	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	2.1.6	search with cache (only 1: do 2 rewrite InA_alt; only 1: intros (y, H); only 1: firstorder).	0.147016048431	73
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.036376953125	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.0.9.0.17	search with cache (only 1: intro H; only 1: induction 1; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).	1.04231715202	1342
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	0.0.0.0.0.0.1.2.8.22.3.4.1	search with cache (only 1: unfold In, MapsTo; only 1: intuition; only 1: firstorder; only 1: induction l as [| a l' Hrec]; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto; only 1: apply InA_eqk_eqke in H; only 1: destruct H as ((k', e'), (E, H)); only 1: compute in E; only 1: exists e'; only 1: now rewrite E).	25.6880719662	51168
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	2.3.1	search with cache (only 1: unfold In, MapsTo; only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv).	0.0862700939178	44
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	1.8.0.0.6.4	search with cache (only 1: rewrite In_alt2; only 1: rewrite In_alt2; only 1: setoid_rewrite Exists_exists; only 1: firstorder; only 1: subst; only 1: auto).	24.232022047	13785
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40	5.3.7.4.13	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: setoid_rewrite Hx; only 1: firstorder).	27.286108017	16386
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	7	search with cache (only 1: now intros <-).	0.0545790195465	8
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0311410427094	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	1.2	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.240685939789	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.3.18	search with cache (only 1: inversion 1; only 1: now destruct 1; only 1: auto).	2.36170506477	1404
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.5.1	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	0.116235017776	44
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	0.2	search with cache (only 1: induction 1; only 1: auto).	0.0188148021698	4
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	0	search with cache (only 1: auto).	0.0116629600525	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.0123898983002	1
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0149698257446	3
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	2.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.02388215065	4
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	4.0.9	search with cache (only 1: intros P Q H l; only 1: intuition; only 1: eauto).	0.497125864029	374
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	1.13.1.1.3	search with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: eauto; only 1: destruct H2; only 1: auto).	31.2740950584	4727
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	3.0.0.4	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: eauto).	0.186702013016	45
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0.0.0	search with cache (only 1: split; only 1: split; only 1: eauto; only 1: auto; only 1: eauto; only 1: eauto).	0.124175071716	6
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	0.6.4.4	search with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: intuition; only 1: auto).	2.52557396889	921
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.1.4.10	search with cache (only 1: intros P Q H l; only 1: induction 1; only 1: eauto; only 1: eauto).	0.677322149277	691
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40	1.4.22.7.9	search with cache (only 1: intros l x y H H'; only 1: induction 1; only 1: destruct H0; only 1: eauto; only 1: auto).	34.0839509964	21618
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40	0.0.1.6.0.7.0.1.0.17	search with cache (only 1: intros l n x d H; only 1: induction H; only 1: induction H; only 1: destruct y; only 1: induction H; only 1: exists e; only 1: eauto; only 1: destruct IHInA as [e H0]; only 1: exists e; only 1: intuition).	16.8379058838	22366
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.8.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.0719909667969	42
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	1.0.0.0.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.0545921325684	22
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	3.2.5	search with cache (only 1: repeat red; only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0383520126343	80
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	6.0	search with cache (only 1: unfold eq; only 1: decide equality).	0.0266010761261	20
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.1.0.0.0.0.0.4.0.0.0.0.0	search with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	18.9673550129	8562
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.1.0.0.0.3.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.430173873901	228
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	5.26124310493	2506
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	8.3.1.1.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: intuition; only 1: intuition; only 1: intros R R' EQ a a' Ha WF; only 1: order).	2.09633398056	1295
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	1.2.0.0.8.9	search with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).	1.7143881321	2418
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0165810585022	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	2	search with cache (only 1: solve_max).	0.0406038761139	21
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0305860042572	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	1.1.0.0.1.0.0.1.1.5	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max; only 1: solve_max).	5.771463871	2318
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0465240478516	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0	search with cache (only 1: solve_max).	0.0173559188843	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0199341773987	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0	search with cache (only 1: solve_max).	0.0210540294647	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.2.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.122702121735	41
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.1.0.1.0	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0242149829865	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.1.0.0	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order || (right; order) || (left; order)).	0.0478539466858	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.029965877533	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0505740642548	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	4.0.0.0.3.0.0.0.0	search with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).	4.77676510811	3895
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	3.1.3.0.20	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.486706972122	1128
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	2	search with cache (only 1: solve_min).	0.0304028987885	11
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	1	search with cache (only 1: solve_min).	0.0279309749603	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	search with cache (only 1: solve_min).	0.0216228961945	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.0.0.0.0.2.3.12	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: right; only 1: intuition; only 1: order; only 1: order).	7.2937951088	6745
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.0.1.0.0.0.1.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	1.91050314903	1183
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	1.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	0.804453849792	362
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	2	search with cache (only 1: solve_min).	0.032350063324	18
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	1	search with cache (only 1: solve_min).	0.0181019306183	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	2.1	search with cache (only 1: intros Hnm Hpq; only 1: solve_min).	0.0252459049225	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.2.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0949051380157	27
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	search with cache (only 1: solve_min).	0.0194911956787	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	2	search with cache (only 1: solve_min).	0.253561019897	50
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0284569263458	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.0.2.0.0	search with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: apply min_glb_iff; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: solve_min).	0.119400978088	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	1.0.1.0.2	search with cache (only 1: destruct (max_spec m n) as [(H, E)| (H, E)]; only 1: apply max_r || apply max_l; only 1: solve_min; only 1: apply max_r || apply max_l; only 1: solve_min).	0.0439901351929	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.1.0.1.1	search with cache (only 1: destruct (min_spec n m) as [(C, E)| (C, E)]; only 1: apply min_r || apply min_l; only 1: solve_max; only 1: apply min_r || apply min_l; only 1: solve_max).	0.0325438976288	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.1.0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	0.955299139023	765
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	0.1.0.1.0.0.0.1.1.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	1.64721107483	1459
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.1.0.0.0.0.0.1.10	search with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	1.34295296669	1376
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.1	search with cache (only 1: apply max_mono; only 1: eauto with *).	0.0155889987946	3
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.8	search with cache (only 1: apply min_mono; only 1: eauto with *).	0.0346331596375	38
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	1.1.0.6.5.15.4	search with cache (only 1: firstorder; only 1: apply max_case_strong; only 1: intros; only 1: destruct H; only 1: auto; only 1: auto; only 1: auto).	19.6456079483	39039
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0122349262238	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.7	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0299980640411	24
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0127420425415	6
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.4	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0165190696716	9
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.0.1.0	search with cache (only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.021201133728	5
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	4.0	search with cache (only 1: unfold eq; only 1: decide equality).	0.0439100265503	28
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40	0.0.0.0.0.0.3.25.1	search with cache (only 1: intros; only 1: compute; only 1: elim_comp; only 1: elim_comp; only 1: auto; only 1: elim_comp; only 1: auto; only 1: elim_comp; only 1: auto).	12.036408186	23960
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	2.1.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0495941638947	10
Coq.ZArith.Znat.N_nat_Z	40	0.0.0.0.0.0.2.2.0.11	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	1.26090812683	954
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0488448143005	5
Coq.ZArith.Znat.positive_N_Z	40	1.1.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: simpl; only 1: f_equal).	0.0433340072632	5
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: reflexivity).	0.0336849689484	1
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0548589229584	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0470938682556	4
Coq.ZArith.Znat.Z_nat_N	40	0.4.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: Nat2N.nat2N; only 1: reflexivity).	0.101657152176	21
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0352997779846	1
Coq.ZArith.Znat.Zabs_nat_N	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0564000606537	7
Coq.ZArith.Znat.N2Z.id	40	0	search with cache (only 1: now destruct n).	0.0353670120239	1
Coq.ZArith.Znat.N2Z.inj	40	1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).	2.95887088776	760
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros; only 1: now Morphisms.f_equiv).	2.45041894913	541
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.5.25	search with cache (only 1: destruct n; only 1: easy; only 1: easy).	1.6755259037	561
Coq.ZArith.Znat.N2Z.inj_0	40	1	search with cache (only 1: trivial).	0.0359508991241	2
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0342619419098	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0677800178528	9
Coq.ZArith.Znat.N2Z.inj_le	40	1.3	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.0867099761963	6
Coq.ZArith.Znat.N2Z.inj_lt	40	1.2	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0437440872192	5
Coq.ZArith.Znat.N2Z.inj_ge	40	5.4	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.0992910861969	26
Coq.ZArith.Znat.N2Z.inj_gt	40	1.3	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0434839725494	6
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	3	search with cache (only 1: now destruct n, m).	0.0387690067291	4
Coq.ZArith.Znat.N2Z.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.038134098053	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0514800548553	5
Coq.ZArith.Znat.N2Z.inj_pred_max	40	1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	0.0791919231415	14
Coq.ZArith.Znat.N2Z.inj_pred	40	2.1.0.4	search with cache (only 1: intro H; only 1: destruct n; only 1: easy; only 1: now destruct p).	0.586122989655	244
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.3.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: induction p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0683879852295	10
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0472779273987	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0715007781982	10
Coq.ZArith.Znat.Z2N.id	40	1.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0548470020294	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: intros; only 1: now Morphisms.f_equiv).	0.317150831223	78
Coq.ZArith.Znat.Z2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.036817073822	1
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0.0.1.0.1.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.11835002899	250
Coq.ZArith.Znat.Z2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0351798534393	1
Coq.ZArith.Znat.Z2N.inj_add	40	1.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.0534191131592	3
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	2.88520288467	436
Coq.ZArith.Znat.Z2N.inj_succ	40	1.2.3.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).	1.95576715469	686
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.3.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.207604885101	15
Coq.ZArith.Znat.Z2N.inj_compare	40	0.4	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	1.12960004807	244
Coq.ZArith.Znat.Z2N.inj_le	40	0.16.0	search with cache (only 1: intros; only 1: unfold N.le, N.ge; only 1: now rewrite N2Z.inj_compare).	3.30424690247	1751
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.5.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	1.05869102478	321
Coq.ZArith.Znat.Z2N.inj_quot2	40	2.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0577929019928	11
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0593438148499	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	3.1	search with cache (only 1: intros; only 1: now destruct n).	0.0419318675995	6
Coq.ZArith.Znat.Zabs2N.id_abs	40	3	search with cache (only 1: now destruct n).	0.0561470985413	13
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.0340118408203	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0335249900818	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	search with cache (only 1: trivial).	0.0333580970764	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0325520038605	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0560028553009	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.3.4.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: intros; only 1: now destruct p; only 1: now destruct 1).	3.15185308456	1319
Coq.ZArith.Znat.Zabs2N.inj_add	40	4.3	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	1.75803089142	376
Coq.ZArith.Znat.Zabs2N.inj_mul	40	4	search with cache (only 1: now destruct n, m).	1.76911211014	388
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	1.2.1.1.0	search with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: easy).	0.0664370059967	10
Coq.ZArith.Znat.Zabs2N.inj_compare	40	2.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.252622842789	72
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0436420440674	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0428049564362	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	2.0.2.2.0.0.5	search with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	3.15372204781	1203
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: assert (forall p q, Z.abs_N (Z.rem (Z.pos p) (Z.pos q)) = (N.pos p mod N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_rem; only 1: now apply Z.rem_nonneg; only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	3.3041768074	1129
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.040913105011	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	search with cache (only 1: reflexivity).	0.0338099002838	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.2.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.090096950531	22
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0407781600952	1
Coq.ZArith.Znat.Nat2Z.id	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0463969707489	6
Coq.ZArith.Znat.Nat2Z.inj	40	0.7.1	search with cache (only 1: intro H; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	1.49615597725	553
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now f_equal).	0.0483191013336	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	9.7.3.1.1	search with cache (only 1: unfold Z.le; only 1: symmetry; only 1: revert m; only 1: intros NEQ; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	28.7192819118	15033
Coq.ZArith.Znat.Nat2Z.inj_lt	40	17.1.1	search with cache (only 1: unfold Z.lt; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	5.5962600708	2799
Coq.ZArith.Znat.Nat2Z.inj_ge	40	7.2.1	search with cache (only 1: unfold Z.ge; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	0.519140958786	145
Coq.ZArith.Znat.Nat2Z.inj_gt	40	10.2	search with cache (only 1: unfold Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	0.679759979248	195
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.2.0.2.6.0.0	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: now destruct 1 || trivial).	3.90739893913	1914
Coq.ZArith.Znat.Z2Nat.inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0460469722748	3
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.0492451190948	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0340781211853	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.0359208583832	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0336060523987	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	2.16.0.0.0	search with cache (only 1: unfold Z.succ; only 1: intros; only 1: rewrite Z2N.inj_add by easy; only 1: Z.nzsimpl; only 1: trivial).	14.7394580841	12086
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0360419750214	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	1.0	search with cache (only 1: intros; only 1: now destruct n).	0.0432529449463	3
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.1.0.0.0.0.0.1.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	4.52906703949	2047
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0487010478973	7
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0349750518799	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0352728366852	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0347480773926	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0454261302948	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0457248687744	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	10.9.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	3.4736161232	4196
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).	36.5413072109	21573
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0174539089203	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.0.0.0.1.0.1.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: trivial; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	26.2615749836	12909
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.0.0.1.0.1.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	12.3751890659	6205
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0187890529633	3
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	25.6740300655	10110
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40	3.1.0.0.1.1.7	search with cache (only 1: destruct n; only 1: now apply Z.pow_pos_nonneg; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: now destruct 1).	1.05490493774	626
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	0.0.2.0.0.5.3.8	search with cache (only 1: destruct n; only 1: auto with zarith; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy; only 1: intros; only 1: easy).	3.20536804199	1934
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	1.1.1.1.0.4	search with cache (only 1: intros n m; only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	0.912239074707	629
Coq.ZArith.Zcompare.Zle_compare	40	2.1.0.26.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: Z.order).	3.8228302002	4762
Coq.ZArith.Zcompare.Zlt_compare	40	2.0.4.0.6	search with cache (only 1: intros n Hn IHn; only 1: case Z.compare_spec; only 1: Z.order'; only 1: trivial; only 1: Z.order).	1.60395407677	864
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0482468605042	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0490469932556	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	11.0	search with cache (only 1: Z.bitwise; only 1: now destruct a).	0.348699092865	131
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.120025873184	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.126212120056	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.0.2.0	search with cache (only 1: intros Ha Hb; only 1: apply Z.rem_bound_pos; only 1: auto; only 1: auto).	0.389797925949	69
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	search with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.132863998413	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.8.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.561499118805	105
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.14461684227	5
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40	1.24.1	search with cache (only 1: intros a b q; only 1: fix sqrtrem_spec 1; only 1: auto).	24.9830770493	22131
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.145067930222	8
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.3.1.1	search with cache (only 1: intros a b Ha Hb; only 1: unfold Z.modulo; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.362913131714	46
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.0.2.1.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.mod_divide; only 1: rewrite Z.rem_divide; only 1: intuition; only 1: trivial; only 1: trivial).	0.18140912056	27
Coq.ZArith.Zdigits.binary_value	40	7.7	search with cache (only 1: intro p; only 1: constructor).	0.182655096054	209
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.0.0.0	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0403680801392	6
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40	0.0.26.1.0.0	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: constructor; only 1: fix le_div2 1; only 1: intros; only 1: auto with arith).	17.9495818615	26133
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	1.0.1.1.1.0	search with cache (only 1: simpl; only 1: intros; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0816421508789	15
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	1.0.0.0.0.1.0	search with cache (only 1: simpl; only 1: simple induction n; only 1: intros; only 1: trivial; only 1: intros; only 1: simpl; only 1: split).	0.0651569366455	9
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	0.0.0.0.0.0.0.0	search with cache (only 1: simple induction n; only 1: destruct z; only 1: simpl; only 1: auto; only 1: auto; only 1: auto; only 1: intros; only 1: reflexivity).	0.0546078681946	8
Coq.ZArith.Zdigits.Z_div2_value	40	0.0.0.0.1.1.0.0.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: now destruct 1 || trivial; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: now destruct 1 || trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now destruct 1 || trivial).	5.88446998596	1690
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0215549468994	2
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	1.0.1.0.2.1	search with cache (only 1: intros; only 1: destruct z; only 1: simpl; only 1: easy; only 1: now destruct p; only 1: now destruct p).	0.407639980316	175
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	0.0643789768219	10
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.12	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.146886825562	76
Coq.ZArith.BinInt.Z.pos_sub_spec	40	0.23.3.0	search with cache (only 1: revert q; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: fix sqrtrem_spec 1; only 1: auto).	5.51170897484	4576
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.0.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.0248711109161	10
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	3	search with cache (only 1: now destruct n).	0.00998997688293	4
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1	search with cache (only 1: now destruct n).	0.00953698158264	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	2	search with cache (only 1: now destruct n).	0.0190079212189	3
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.12	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.391030073166	205
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	search with cache (only 1: reflexivity).	0.00900602340698	1
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.00895094871521	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0108869075775	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0104088783264	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.0.0.2.0.1.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	1.41938018799	853
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.011589050293	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.00940299034119	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00945091247559	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40	6.11.2.5	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intros; only 1: now destruct (N.even n)).	10.8953709602	11819
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	search with cache (only 1: reflexivity).	0.00842499732971	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.00837111473083	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.2.1.0.0.3	search with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: intuition; only 1: trivial).	0.246308088303	114
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.0.1.2	search with cache (only 1: unfold le, min; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: trivial; only 1: intuition; only 1: trivial).	0.2445499897	99
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	6.2	search with cache (only 1: intro H; only 1: now destruct n).	0.0171258449554	10
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0201089382172	5
Coq.ZArith.BinInt.Z.sgn_null	40	1.0	search with cache (only 1: intro H; only 1: now destruct n).	0.0154120922089	3
Coq.ZArith.BinInt.Z.sgn_pos	40	3.2	search with cache (only 1: intros; only 1: now destruct n).	0.114426136017	27
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0134739875793	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now nzsimpl').	0.0319819450378	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.1.2.4.2	search with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: intro H; only 1: now f_equiv; only 1: now destruct 1 || intros _).	0.754436969757	287
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.0092248916626	1
Coq.ZArith.BinInt.Z.square_spec	40	1.0.0.1.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	0.213183879852	151
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0122201442719	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.10.5.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: now repeat split; only 1: simpl; only 1: trivial).	11.43364501	7489
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0110740661621	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: reflexivity).	0.00852584838867	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	1	search with cache (only 1: now destruct n).	1.30666995049	365
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.00958299636841	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	5.23.6	search with cache (only 1: revert a; only 1: fix sqrtrem_spec 1; only 1: trivial).	10.3606939316	9913
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	2.1.1.1.0	search with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.198934078217	37
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	0.0312390327454	7
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.0.0.0.0.0.1	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite N.mul_comm).	0.0319848060608	8
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	38.5233061314	18601
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.1.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.030021905899	9
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: trivial).	0.00939607620239	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	3	search with cache (only 1: now destruct n).	0.00990509986877	4
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0136239528656	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a).	0.0097827911377	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	3	search with cache (only 1: apply N.gt_lt_iff).	0.0269751548767	11
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0103008747101	1
Coq.ZArith.BinInt.Z.ge_le_iff	40	0.4.2.8.3.3	search with cache (only 1: rewrite <- (succ_pred m); only 1: symmetry; only 1: unfold lt, le; only 1: rewrite compare_gt_iff; only 1: unfold lt, gt; only 1: reflexivity).	19.4682049751	8488
Coq.ZArith.BinInt.Z.ge_le	40	5	search with cache (only 1: apply N.ge_le_iff).	0.0388000011444	12
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00982999801636	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.2.0.5	search with cache (only 1: unfold gtb, ltb; only 1: unfold ltb, lt; only 1: rewrite compare_antisym; only 1: now destruct compare).	0.762359142303	200
Coq.ZArith.BinInt.Z.geb_le	40	2.3.0.15	search with cache (only 1: unfold geb, leb; only 1: unfold leb, le; only 1: rewrite compare_antisym; only 1: now destruct compare).	6.95135903358	3446
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	18	search with cache (only 1: apply add_cancel_l).	31.4361209869	10516
Coq.ZArith.BinInt.Z.mul_reg_l	40	2	search with cache (only 1: apply mul_cancel_l).	0.0192329883575	14
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	0.5.1.8.0.5.0.0.24	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial using pos_sub_opp; only 1: symmetry; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: auto).	33.5193119049	20891
Coq.ZArith.BinInt.Z.add_diag	40	0.1.3	search with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl).	0.0747358798981	7
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40
Coq.ZArith.BinInt.Pos2Z.id	40	1	search with cache (only 1: trivial).	0.0113310813904	2
Coq.ZArith.BinInt.Pos2Z.inj	40	0	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0109629631042	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: now injection 1 || (intros; now f_equal)).	0.0170378684998	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	2.0.4.0	search with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: rewrite <- Pos.add_1_r; only 1: trivial).	0.0241658687592	10
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	2.0.0.1	search with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: rewrite <- Pos.add_1_r; only 1: trivial).	0.0237488746643	7
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: easy).	0.0112550258636	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0	search with cache (only 1: easy).	0.0105090141296	1
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0136821269989	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	1.1.2	search with cache (only 1: simpl; only 1: f_equal; only 1: now destruct p).	0.0230250358582	7
Coq.ZArith.BinInt.Pos2Z.inj_add	40	4.1	search with cache (only 1: revert q; only 1: auto).	0.513171195984	129
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.0.0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: intros H; only 1: simpl; only 1: trivial; only 1: intros H; only 1: simpl; only 1: trivial; only 1: congruence).	0.0400540828705	12
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	search with cache (only 1: reflexivity).	0.0109069347382	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0120539665222	2
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.011931180954	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	2.0	search with cache (only 1: simpl; only 1: easy).	0.0142130851746	4
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	3.2.0	search with cache (only 1: revert q; only 1: simpl; only 1: trivial).	0.359066009521	101
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	search with cache (only 1: reflexivity).	0.0108819007874	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.0113360881805	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0103530883789	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: reflexivity).	0.00994396209717	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	3	search with cache (only 1: reflexivity).	0.0114848613739	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.0.0.0.0.4.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.111774206161	66
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	search with cache (only 1: now injection 1).	0.0111880302429	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.019021987915	4
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: now injection 1).	0.010833978653	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0187060832977	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.0116379261017	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1	search with cache (only 1: easy).	0.0140290260315	2
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0102179050446	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0127449035645	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	8	search with cache (only 1: now f_equal).	0.0385451316833	26
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0118689537048	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	4.0.0.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.019623041153	8
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	3.0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0197780132294	7
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0102808475494	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.0111091136932	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0097279548645	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.01016497612	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	search with cache (only 1: trivial).	0.0107221603394	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	search with cache (only 1: reflexivity).	0.00976395606995	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0956161022186	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0	search with cache (only 1: reflexivity).	0.0107779502869	1
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0104258060455	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0104911327362	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.0.0.0.0.1.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.036740064621	8
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	1	search with cache (only 1: apply Z.testbit_Zpos).	0.0612571239471	30
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	6	search with cache (only 1: now destruct x).	0.018707036972	7
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.0102829933167	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0	search with cache (only 1: now destruct x).	0.0158100128174	1
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0152468681335	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	8.0.4.1.2.1.3	search with cache (only 1: intros H; only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: easy).	5.17252612114	6154
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.3.1.0.6.1	search with cache (only 1: intros H; only 1: destruct x; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.700519800186	327
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0935711860657	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.135740995407	4
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0434670448303	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0876350402832	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0425071716309	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.0.3	search with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: trivial).	0.0257301330566	8
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0463280677795	4
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	1.1	search with cache (only 1: intros a b H; only 1: now f_equal).	0.0152311325073	4
Coq.ZArith.BinInt.ZL0	40	0	search with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.0636579990387	1
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.8.0	search with cache (only 1: change_no_check 2 with (1 + 1); only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	0.371935844421	47
Coq.ZArith.BinInt.Z_eq_mult	40	1	search with cache (only 1: now destruct m).	0.049684047699	11
Coq.ZArith.Zcomplements.floor_gt0	40	0	search with cache (only 1: easy).	0.0292589664459	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	1.16.1	search with cache (only 1: Z.swap_greater; only 1: pattern n; only 1: now destruct n).	1.04023385048	408
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0	search with cache (only 1: auto).	0.0296800136566	1
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.27	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	12.7608480453	6678
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	18.0820391178	7842
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0290679931641	5
Coq.ZArith.Zeven.Zeven_Sn	40	0.0.0.0.0.0.0.0.4.4.0.1	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: intuition; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy; only 1: easy).	5.91484189034	4204
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	1.0.0.1.0.0.0.2.8.0	search with cache (only 1: boolify_even_odd; only 1: intuition; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	8.04972290993	5401
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	3.2.1	search with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: now destruct n as [| [| | ]| [| | ]]).	0.418459177017	102
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.1.2.1.0	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	19.1049518585	6835
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	0.0.0.0.0.0.0.2.11	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: reflexivity; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: reflexivity; only 1: now Z.nzsimpl').	7.0721039772	2122
Coq.ZArith.Zeven.Zeven_quot2	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.258157968521	19
Coq.ZArith.Zeven.Zodd_quot2	40	6.0	search with cache (only 1: boolify_even_odd; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0558619499207	21
Coq.ZArith.Zeven.Zodd_quot2_neg	40	2.2.1.0.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.500138998032	82
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn, Z.add_0_r).	0.035845041275	6
Coq.ZArith.Zeven.Zodd_ex	40	0.1.0.0.1	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.223593950272	44
Coq.ZArith.Zeven.Zeven_2p	40	0.2.0.14	search with cache (only 1: induction p; only 1: now Z.nzsimpl; only 1: easy; only 1: easy).	0.46123790741	312
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	0.0.2.2.2	search with cache (only 1: destruct p; only 1: simpl; only 1: reflexivity; only 1: now destruct p; only 1: now destruct p).	0.130398988724	33
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.1.0.1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0606129169464	15
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0397560596466	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0405089855194	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40	1.1.1.1.5.0.8	search with cache (only 1: induction n; only 1: trivial; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: easy).	5.09885191917	3313
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0482549667358	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	1	search with cache (only 1: apply Z.divide_opp_l).	0.0493919849396	2
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	2	search with cache (only 1: apply Z.divide_abs_l).	0.0518510341644	3
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.6.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.mod_divide; only 1: auto; only 1: trivial).	0.473306179047	55
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.0.6.0.4	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: subst; only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: trivial).	1.77372193336	1007
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	7.2	search with cache (only 1: intros H Hb; only 1: Z.order).	0.652808189392	104
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	1.4.9.1.4.0.0.9	search with cache (only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: intros Hab; only 1: intros (c, Hc); only 1: rewrite Z.div_exact; only 1: subst; only 1: apply Z_mod_mult; only 1: Z.order).	38.7183058262	22055
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	33.0	search with cache (only 1: intros; only 1: now apply Z.divide_pos_le).	9.01550388336	9924
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	4.10	search with cache (only 1: intros a b; only 1: firstorder  (subst; auto)).	0.86908698082	447
Coq.ZArith.Znumtheory.Zis_gcd_0	40	7	search with cache (only 1: firstorder).	0.119953870773	39
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.1.4.5	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.582968950272	196
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.1	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: trivial).	0.0580761432648	5
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.1.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: trivial; only 1: intuition).	0.0975289344788	6
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.188846111298	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0774929523468	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	1.0.0.2.3	search with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: intuition).	0.979294776917	116
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	2.0.0.1.2	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	0.265840053558	30
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	1.5.1	search with cache (only 1: intros p q H H0; only 1: apply H; only 1: auto with zarith).	0.267271995544	44
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	0.0.3.17	search with cache (only 1: unfold not; only 1: intros (H, H'); only 1: contradict H; only 1: discriminate).	0.503138065338	329
Coq.ZArith.Znumtheory.not_prime_1	40	35	search with cache (only 1: easy || now destruct 1).	9.59090590477	5136
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	0.0.11	search with cache (only 1: simple induction 1; only 1: intros; only 1: now apply (Zlt_le_succ 1)).	0.265785932541	76
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	7.18	search with cache (only 1: intros a b H; only 1: apply Z.gcd_greatest).	25.3739931583	7413
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.0.0.3.8.1.3	search with cache (only 1: Z.swap_greater; only 1: intros Hb; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: unfold Z.div, Z.modulo; only 1: destruct Z.div_eucl; only 1: auto).	2.92004394531	1697
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	0.0.6.0.10	search with cache (only 1: Z.swap_greater; only 1: intros Hb; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: rewrite Z.mul_comm; only 1: now apply Z.mod_eq).	5.84304404259	2853
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.0.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0458290576935	3
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0414769649506	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	1.1.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0415511131287	6
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.040796995163	7
Coq.ZArith.Zdiv.Zmod_1_r	40	6.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: now Z.nzsimpl).	0.160577058792	13
Coq.ZArith.Zdiv.Zdiv_1_r	40	0.3.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: Z.nzsimpl; only 1: Z.order).	0.099837064743	15
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.1.5.2	search with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	1.35995697975	496
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.3.0	search with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0410399436951	7
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.0.2	search with cache (only 1: intros a b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0708019733429	24
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0393660068512	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0404829978943	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0405371189117	3
Coq.ZArith.Zdiv.eqm_refl	40	2.0	search with cache (only 1: intros n; only 1: reflexivity).	0.0330379009247	4
Coq.ZArith.Zdiv.eqm_sym	40	3.0.0	search with cache (only 1: unfold eqm; only 1: intros n m H; only 1: auto with arith).	0.0387570858002	6
Coq.ZArith.Zdiv.eqm_trans	40	7.2	search with cache (only 1: unfold eqm; only 1: eauto using Z.Private_OrderTac.Tac.eq_trans, Z.Private_OrderTac.Tac.eq_sym).	0.253576993942	83
Coq.ZArith.Zdiv.eqm_setoid	40	0.4.14.5.5.16	search with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: unfold eqm; only 1: red; only 1: now unfold eqm; intros a b c ->).	2.33710813522	3774
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	1.4.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.170271873474	19
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.1.0	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.113294839859	28
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.1.0.1	search with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: Z.order).	0.0636432170868	12
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0614950656891	5
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.4.1	search with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).	0.243853092194	42
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.1.0.2	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: trivial; only 1: auto).	0.102364063263	29
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0202519893646	5
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0101170539856	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	0.0.7.0.1.0	search with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: apply Z.mod_pos_bound; only 1: trivial; only 1: now discriminate Hb || clear Hb).	2.68409013748	1153
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	8.2.6	search with cache (only 1: intros a n; only 1: intros EQ; only 1: now destruct n).	0.466070175171	525
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	3.58.2	search with cache (only 1: unfold Z.le, Z.ge; only 1: unfold Z.lt, Z.gt; only 1: decide equality).	6.69159293175	8318
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	3	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0328190326691	4
Coq.ZArith.Int.Z_as_Int.i2z_0	40	5	search with cache (only 1: reflexivity).	0.0325050354004	6
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.0317640304565	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	search with cache (only 1: trivial).	0.0321109294891	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.0319440364838	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.0325491428375	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	17	search with cache (only 1: now Z.nzsimpl).	0.222521066666	126
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.0326402187347	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.0319399833679	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0320661067963	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: solve [ trivial | destruct (proj1 (Z.le_ngt _ _) Hi _) ]).	0.0327379703522	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0318968296051	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0313360691071	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: trivial).	0.0478370189667	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: auto).	0.0762920379639	6
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	5.2	search with cache (only 1: unfold Z.pow_pos; only 1: apply Pos2Nat.inj_iter).	0.146254062653	35
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.0.0.0.7	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1 || intros _).	2.56791305542	650
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: trivial).	0.0476269721985	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.049647808075	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40
Coq.ZArith.Zpower.two_p_equiv	40	0.2.1.9	search with cache (only 1: destruct x; only 1: trivial; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).	3.85089707375	1005
Coq.ZArith.Zpower.two_power_nat_S	40	6.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now simpl).	0.0731770992279	11
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	1	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0543022155762	2
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.174442052841	55
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	1.1.1.1.0.1.1.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intros n; only 1: constructor; only 1: intros Hx; only 1: easy; only 1: intros Hx; only 1: easy).	2.49787998199	842
Coq.ZArith.Zpower.two_p_S	40	0.0.0.4.0.2.0.3	search with cache (only 1: destruct x; only 1: now destruct 1 || trivial; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy; only 1: now destruct 1 || trivial).	11.5105271339	3914
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	3	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0626208782196	20
Coq.ZArith.auxiliary.Zle_left	40	1	search with cache (only 1: apply Z.le_0_sub).	0.0330629348755	2
Coq.ZArith.auxiliary.Zle_left_rev	40	1	search with cache (only 1: apply Z.le_0_sub).	0.0343971252441	2
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	search with cache (only 1: apply Z.lt_0_sub).	0.0344860553741	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	2	search with cache (only 1: apply Z.lt_0_sub).	0.0327241420746	3
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.10	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.220645904541	72
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change_no_check (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.0611507892609	5
Coq.ZArith.auxiliary.Zgt_left_gt	40	1.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0551910400391	5
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0532870292664	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	2.3.0	search with cache (only 1: unfold Z.le, Z.max; only 1: intros; only 1: now case Z.compare_spec).	0.045392036438	8
Coq.ZArith.Zmax.Zpos_max_1	40	4.0.1.6	search with cache (only 1: induction p; only 1: easy; only 1: trivial; only 1: now Z.nzsimpl).	0.242913007736	142
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	35	search with cache (only 1: Z.solve_min).	0.900202989578	1018
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	44	search with cache (only 1: now destruct p).	3.01718306541	2423
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	1.1.0.78	search with cache (only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: trivial).	1.85721492767	4084
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	10.5.0.13.3	search with cache (only 1: symmetry; only 1: induction a as [a IH| a IH| ]; only 1: reflexivity; only 1: now destruct n; only 1: now destruct n).	11.3889269829	7022
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.1.0.0.0.1.1.0.0.3	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto with relations; only 1: left; only 1: auto; only 1: right; only 1: right; only 1: auto).	1.7555680275	810
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.8	search with cache (only 1: intro H; only 1: Z.order).	0.231344938278	34
Coq.ZArith.Zorder.Zlt_not_le	40	0.9	search with cache (only 1: intro H; only 1: Z.order).	0.159319877625	80
Coq.ZArith.Zorder.Zle_not_gt	40	11	search with cache (only 1: auto).	0.58326792717	228
Coq.ZArith.Zorder.Zgt_not_le	40	1.5	search with cache (only 1: intro H; only 1: auto).	0.135118961334	42
Coq.ZArith.Zorder.Znot_ge_lt	40	10.6.6	search with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).	0.637453794479	603
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0363531112671	4
Coq.ZArith.Zorder.Znot_gt_le	40	1	search with cache (only 1: trivial).	0.0255489349365	2
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0344221591949	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	0.4.1	search with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.126847028732	25
Coq.ZArith.Zorder.Zgt_irrefl	40	4.5.32	search with cache (only 1: Z.swap_greater; only 1: intros LT; only 1: Z.order).	1.17436480522	2112
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.551893949509	83
Coq.ZArith.Zorder.Zle_gt_trans	40	3.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.0544610023499	6
Coq.ZArith.Zorder.Zgt_le_trans	40	1.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0396740436554	3
Coq.ZArith.Zorder.Zge_trans	40	2.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.36755490303	4
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0390980243683	4
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0501699447632	21
Coq.ZArith.Zorder.Zsucc_le_reg	40	2	search with cache (only 1: apply Z.succ_le_mono).	0.040148973465	11
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0241379737854	1
Coq.ZArith.Zorder.Zgt_succ	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0291781425476	2
Coq.ZArith.Zorder.Znot_le_succ	40	0.25	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	1.79451990128	880
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.023943901062	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0240299701691	1
Coq.ZArith.Zorder.Zgt_succ_le	40	1.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0341649055481	4
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0246357917786	1
Coq.ZArith.Zorder.Zle_succ_gt	40	4.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0377659797668	6
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0247921943665	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	0.0.0.0.0.6.6.9.0.10	search with cache (only 1: destruct n as [| p| p]; only 1: easy; only 1: compute; only 1: intro n; only 1: induction p; only 1: now subst; only 1: now subst; only 1: now subst; only 1: intros H; only 1: easy).	21.9038038254	18981
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.8	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0475521087646	20
Coq.ZArith.Zorder.Zle_neg_pos	40	0.0	search with cache (only 1: intros a b; only 1: easy).	0.033126115799	2
Coq.ZArith.Zorder.Zgt_pos_0	40	3.0	search with cache (only 1: intros n; only 1: reflexivity).	0.0295629501343	5
Coq.ZArith.Zorder.Zle_0_pos	40	0.0	search with cache (only 1: intros a; only 1: easy).	0.0317850112915	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.023677110672	1
Coq.ZArith.Zorder.Zle_0_nat	40	6.0.3.0.1.2	search with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: easy).	1.65618991852	1045
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0240688323975	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_reg_l	40	2	search with cache (only 1: apply Z.add_le_mono_l).	0.0261831283569	3
Coq.ZArith.Zorder.Zplus_le_reg_r	40
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	3	search with cache (only 1: apply Z.add_lt_mono_l).	0.0269799232483	4
Coq.ZArith.Zorder.Zplus_lt_reg_r	40
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0420351028442	7
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	8.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0509021282196	24
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.17	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.238545894623	270
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0344970226288	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	2.3.9.4.6.5.21	search with cache (only 1: intros H; only 1: destruct p; only 1: discriminate; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: intros; only 1: discriminate).	16.7950530052	25551
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0236530303955	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0256509780884	2
Coq.ZArith.Zorder.Zmult_gt_compat_l	40
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	1.0.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0542049407959	14
Coq.ZArith.Zorder.Zmult_ge_compat_l	40
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	4.1	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0402719974518	12
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0351560115814	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.024395942688	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.136598110199	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0241229534149	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0470910072327	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0460259914398	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	26.13.1	search with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order_pos).	26.6153628826	15940
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	5.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0358920097351	7
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0344099998474	3
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.6	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.126718997955	44
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	2	search with cache (only 1: apply Z.le_0_sub).	0.0261340141296	3
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.4.4.5.9.2.18	search with cache (only 1: unfold Z.geb, Z.leb; only 1: intros H; only 1: intro H'; only 1: destruct (n ?= m); only 1: discriminate; only 1: discriminate; only 1: discriminate).	4.322671175	7899
Coq.ZArith.Zbool.Zle_imp_le_bool	40	1	search with cache (only 1: apply Z.leb_le).	0.0218470096588	2
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	1.20	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.692936182022	818
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	7	search with cache (only 1: trivial).	0.0219280719757	8
Coq.ZArith.Zbool.Zone_min_pos	40	0.1.0.0.9.5.3.2.12	search with cache (only 1: intuition; only 1: destruct n; only 1: apply Z.leb_gt in H; only 1: now apply Z.leb_le, Z.lt_le_incl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destr_eq H).	31.1956219673	18186
Coq.ZArith.Zbool.Zle_is_le_bool	40	3.4	search with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.0331778526306	20
Coq.ZArith.Zbool.Zge_is_le_bool	40	2.0.2.2	search with cache (only 1: unfold Z.geb, Z.leb; only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.214821100235	55
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	1.2.1.1.0.0.10.2	search with cache (only 1: symmetry; only 1: case Z.ltb_spec; only 1: intro H; only 1: intuition; only 1: intro H; only 1: split; only 1: easy; only 1: Z.order).	14.2190740108	7813
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	1.0.1.20	search with cache (only 1: rewrite Z.gtb_ltb; only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.ltb_lt).	12.2085850239	10625
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.0317120552063	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	2.2.1.1.0.9	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: reflexivity; only 1: now try Z.order'; only 1: now try Z.order').	1.29331803322	766
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	search with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0219850540161	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	1.1.1.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	1.08923196793	237
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0267791748047	5
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40	0.0.0.0.18	search with cache (only 1: unfold Z.le, Z.ge; only 1: case Z.compare; only 1: now left || (right; tauto); only 1: now left || (right; tauto); only 1: now left || (right; tauto)).	5.17204785347	4472
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.4.1	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.151165008545	47
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.1.6	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	1.2260260582	437
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.1.0.0	search with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.023619890213	6
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	1.0.2.1	search with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: auto with arith).	0.0334770679474	18
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto; only 1: left; only 1: auto).	1.04619908333	459
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.1	search with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0267679691315	5
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.009202003479	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.0.0.0.0.0.0.3	search with cache (only 1: destruct b as [| b| b]; only 1: intros Hb; only 1: Z.bitwise; only 1: easy; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: now elim Hb).	0.367158174515	121
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0119850635529	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.17	search with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0312759876251	145
Coq.Program.Wf.Fix_F_sub_rect	40	0.12.2.4.2.0	search with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Fix_F_eq; only 1: auto).	0.822513103485	2369
Coq.Program.Wf.eq_Fix_F_sub	40	0.2	search with cache (only 1: apply Fix_F_inv; only 1: auto).	0.00955104827881	4
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	1.0.23.2	search with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	0.465584993362	4010
Coq.Program.Equality.JMeq_eq_refl	40	5	search with cache (only 1: apply UIP).	0.00447082519531	6
Coq.Program.Equality.UIP_refl_refl	40	7	search with cache (only 1: apply UIP).	0.00985097885132	30
Coq.Program.Equality.inj_pairT2_refl	40	1	search with cache (only 1: apply UIP).	0.00416707992554	2
Coq.Program.Equality.solution_left	40	1.5.11	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0258040428162	194
Coq.Program.Equality.solution_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.00511693954468	3
Coq.Program.Equality.deletion	40	7	search with cache (only 1: trivial).	0.00417280197144	8
Coq.Program.Equality.simplification_heq	40
Coq.Program.Equality.simplification_existT2	40	1.0.0.1.2	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.00727105140686	9
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	3.1.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.00631284713745	7
Coq.Program.Combinators.compose_id_left	40	0.1	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.0048770904541	3
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.00490593910217	2
Coq.Program.Combinators.compose_assoc	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.00462508201599	3
Coq.Program.Combinators.flip_flip	40	1.0	search with cache (only 1: intros; only 1: auto).	0.00467300415039	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00509810447693	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0793919563293	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40	0.0.3.1.6.18	search with cache (only 1: intros l1 l2 e; only 1: do 2 rewrite multiplicity_In; only 1: unfold PermutSetoid.permutation, meq; only 1: intros H; only 1: rewrite H; only 1: auto).	15.0634589195	12775
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40	0.0.0.2.0.0.0.0.5.6	search with cache (only 1: unfold PermutSetoid.permutation, meq; only 1: induction l as [| x l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: specialize (H x); only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate; only 1: now elim NEQ).	6.31232690811	4006
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.1.0.0.4.0.0.7.1	search with cache (only 1: induction stack as [| []]; only 1: constructor; only 1: simpl; only 1: intros; only 1: invert H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	3.15285301208	3741
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	3.2.1	search with cache (only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: now constructor).	0.0108189582825	9
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	0.0.0.6	search with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.0220448970795	17
Coq.Sorting.Permutation.Permutation_cons	40	0.1.4	search with cache (only 1: intros a a' Ha n; only 1: subst; only 1: auto).	0.0136377811432	8
Coq.Sorting.Permutation.Permutation_in	40	0.5.1.3.0.0.1.0	search with cache (only 1: intros l l' Hperm; only 1: induction 1; only 1: auto; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto; only 1: auto).	6.25678610802	5242
Coq.Sorting.Permutation.Permutation_in'	40	2.0.0.0.0.0.0.6.2.9	search with cache (only 1: intros a a' Ha n; only 1: subst; only 1: induction 1; only 1: simpl; only 1: tauto; only 1: simpl in *; only 1: tauto; only 1: simpl in *; only 1: tauto; only 1: tauto).	28.3835380077	35980
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.1.4.0	search with cache (only 1: intros l l' tl Hperm; only 1: induction l as [| a l IH]; only 1: auto; only 1: simpl; only 1: auto).	0.0289719104767	13
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40	19.3.1	search with cache (only 1: induction l; only 1: auto; only 1: eauto using Permutation_in).	11.7709259987	16906
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	1	search with cache (only 1: auto).	0.0104639530182	2
Coq.Sorting.Permutation.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	2.0.0.0.0.0.0.0.3	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.644448041916	466
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40	0.0.0.11.3	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: now constructor).	38.0351390839	446
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.1.0.1.1	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: apply Add_app).	1.01853203773	8
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	13	search with cache (only 1: constructor).	0.252898931503	158
Coq.Sorting.PermutSetoid.permut_sym	40	3.2	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.018926858902	7
Coq.Sorting.PermutSetoid.permut_trans	40	0.0.1.2	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	0.128905057907	27
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	1.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0287570953369	5
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	1.0.27.1.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).	15.0742628574	15672
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40	0.0.0.0.0.1.0.10	search with cache (only 1: intro a; only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: generalize (H a0); only 1: destruct (eqA_dec a a0); only 1: auto; only 1: auto).	7.70637011528	5213
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	1.0.30.8.3	search with cache (only 1: intros; only 1: intuition; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: auto; only 1: congruence).	9.16404509544	11938
Coq.Sorting.PermutSetoid.permut_app_inv2	40	2.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	4.51490402222	1132
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	3.0.0.0.0.0.0.0.0.3.0.0	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: apply plus_reg_l with (if eqA_dec a a0 then 1 else 0); only 1: rewrite H; only 1: clear H; only 1: symmetry; only 1: rewrite Nat.add_comm, <- !Nat.add_assoc; only 1: auto with arith).	32.4048168659	8142
Coq.Sorting.PermutSetoid.if_eqA_else	40	0.2.25.0	search with cache (only 1: intros; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: congruence; only 1: auto).	5.6805729866	6531
Coq.Sorting.PermutSetoid.if_eqA_refl	40	5.1.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	0.254836082458	64
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.1.0.0.1	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: inversion 1; only 1: auto with arith; only 1: auto with arith).	0.531203985214	55
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40	1.0.4.0.2.1.0.1.3	search with cache (only 1: intros l1 l2; only 1: unfold permutation, meq; only 1: intro a; only 1: simpl; only 1: rewrite multiplicity_InA; only 1: intros H; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: omega).	7.89104318619	5166
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.7.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto; only 1: auto; only 1: auto).	1.16360092163	482
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.9	search with cache (only 1: inversion 1; only 1: auto).	0.0765910148621	96
Coq.Sorting.Sorted.Sorted_inv	40	1.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0131549835205	4
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.1.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0162851810455	4
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0136818885803	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	0.2	search with cache (only 1: simpl; only 1: auto).	0.0277080535889	13
Coq.Sorting.Heap.leA_Tree_Node	40	1.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0188829898834	3
Coq.Sorting.Heap.invert_heap	40	0.5	search with cache (only 1: inversion 1; only 1: auto).	0.0441541671753	12
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.2.0.0.0.0.1.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	1.72648787498	646
Coq.Sorting.Heap.low_trans	40	3.1.2.0.8	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: eauto).	1.57015991211	772
Coq.Sorting.Heap.Equivalence_instance_0	40	2.1.1.3	search with cache (only 1: split; only 1: auto with datatypes; only 1: auto with datatypes; only 1: congruence).	0.624064922333	38
Coq.Sorting.Heap.Proper_instance_0	40	0.0.0	search with cache (only 1: repeat intro; only 1: simpl; only 1: auto).	0.0606389045715	3
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	0.6	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.041839838028	21
Coq.Sorting.Heap.list_to_heap	40	0.2	search with cache (only 1: fix merge 1; only 1: auto).	0.0201668739319	4
Coq.Sorting.Heap.heap_to_list	40	1.14.4	search with cache (only 1: intro; only 1: fix merge0 1; only 1: auto with datatypes).	2.04625797272	1128
Coq.Sorting.Heap.treesort	40	2.4	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0611131191254	23
Coq.Init.Wf.Acc_inv	40
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	1.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0127348899841	12
Coq.Init.Wf.well_founded_ind	40	1.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0124940872192	12
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.1.2.18.3.6.16.15	search with cache (only 1: intro; only 1: intros [?| ?]; only 1: intros H x0; only 1: intros; only 1: auto; only 1: intros H x0; only 1: apply False_rec; only 1: auto).	4.11907410622	64954
Coq.Init.Tactics.decide_right	40	0.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0063579082489	5
Coq.Init.Peano.pred_Sn	40	0	search with cache (only 1: constructor).	0.00567412376404	1
Coq.Init.Peano.not_eq_S	40	6	search with cache (only 1: auto).	0.00729179382324	7
Coq.Init.Peano.O_S	40	0	search with cache (only 1: discriminate).	0.00624012947083	1
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.5.0.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0254518985748	55
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00841593742371	5
Coq.Init.Peano.plus_n_Sm	40	1.0.1.0.2.7	search with cache (only 1: intro; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0445530414581	146
Coq.Init.Peano.plus_Sn_m	40	0.0.1.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00944209098816	6
Coq.Init.Peano.mult_n_O	40	0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00819396972656	4
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.1.0	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00840091705322	4
Coq.Init.Peano.le_n_S	40	1.2.1.0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: constructor; only 1: auto; only 1: auto).	0.0127899646759	13
Coq.Init.Peano.nat_case	40	0.3.2.2	search with cache (only 1: induction n; only 1: intros n m; only 1: trivial; only 1: trivial).	0.0151109695435	34
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.2.0.0.3.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: constructor; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.45402097702	3391
Coq.Init.Peano.min_l	40	0.0.1.0.3.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.09951996803	5210
Coq.Init.Peano.min_r	40	0.0.2.0.1.0.1.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.28471088409	2998
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	1.0.1.1.1.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite <- ?IHn; only 1: trivial).	0.183765172958	283
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00636696815491	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00648617744446	3
Coq.Init.Datatypes.surjective_pairing	40	1.11	search with cache (only 1: intros A B []; only 1: reflexivity).	0.0128140449524	80
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00821399688721	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.3	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.00773596763611	8
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.2.0.1.0.0.0.3.0.2.0.3.0.0.0.0	search with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	6.91115808487	61749
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00279498100281	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0376670360565	278
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.0779709815979	696
Coq.Init.Logic.imp_iff_compat_l	40	1.1.3.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.005047082901	9
Coq.Init.Logic.imp_iff_compat_r	40	0.0.3.1.0.0.1.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.0191810131073	181
Coq.Init.Logic.not_iff_compat	40	1.0.0.1	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00509595870972	6
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.2.0.0.0.2.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.168008089066	892
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.2.0.0.1.0.4.0.0.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.234922170639	1327
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.0	search with cache (only 1: intros; only 1: auto).	0.00496816635132	2
Coq.Init.Logic.iff_to_and	40	1.1.0.1	search with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.00747013092041	17
Coq.Init.Logic.inst	40	5	search with cache (only 1: trivial).	0.00626492500305	14
Coq.Init.Logic.gen	40	0.0	search with cache (only 1: unfold all; only 1: auto).	0.00572609901428	2
Coq.Init.Logic.absurd	40
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00704193115234	3
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00654101371765	2
Coq.Init.Logic.f_equal	40	0.2	search with cache (only 1: destruct 1; only 1: trivial).	0.00671410560608	4
Coq.Init.Logic.not_eq_sym	40
Coq.Init.Logic.eq_sind_r	40
Coq.Init.Logic.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00655293464661	3
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0066180229187	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00683498382568	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40
Coq.Init.Logic.rew_opp_r	40	3.2	search with cache (only 1: destruct H; only 1: reflexivity).	0.0101199150085	15
Coq.Init.Logic.rew_opp_l	40	0.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00859212875366	4
Coq.Init.Logic.f_equal2	40	1.8.3.2.2	search with cache (only 1: intros A C h1 h2; only 1: intros; only 1: destruct H; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.213428020477	925
Coq.Init.Logic.f_equal3	40	1.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0103149414062	5
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0120639801025	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0139691829681	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00839710235596	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00865197181702	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00845408439636	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00898385047913	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00883507728577	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0106439590454	4
Coq.Init.Logic.map_subst_map	40	0.3.2	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0122709274292	8
Coq.Init.Logic.rew_swap	40	0.2.4.0	search with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0127680301666	10
Coq.Init.Logic.rew_compose	40	2.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.0113961696625	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	1.0	search with cache (only 1: intros A C h1 h2; only 1: reflexivity).	0.00914692878723	3
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40	0.7	search with cache (only 1: destruct e; only 1: reflexivity).	0.0132601261139	15
Coq.Init.Logic.eq_trans_sym_distr	40	1.7.1.3	search with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.061840057373	240
Coq.Init.Logic.eq_trans_rew_distr	40
Coq.Init.Logic.rew_const	40	1.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00981688499451	3
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	0.5.2	search with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.0101680755615	10
Coq.Init.Logic.inhabited_covariant	40	0.3.11.0.4	search with cache (only 1: intro H; only 1: destruct 1; only 1: split; only 1: apply H; only 1: assumption).	0.0615901947021	550
Coq.Init.Logic.eq_stepl	40	1.0.3	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00989103317261	7
Coq.Init.Logic.iff_stepl	40	7.1.6.0.2.1	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.52622795105	4149
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.3.0.1.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: destruct H; only 1: reflexivity).	0.017068862915	9
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0159101486206	2
Coq.Init.Logic_Type.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0066499710083	2
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00659894943237	2
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00678491592407	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.0.1.1	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0107951164246	23
Coq.Init.Logic_Type.identity_ind_r	40	5.11.11	search with cache (only 1: intros P b H H0; only 1: destruct 1; only 1: auto).	0.211361885071	1416
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.00685501098633	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00701403617859	3
Coq.Init.Specif.sigT_eta	40
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0072820186615	2
Coq.Init.Specif.sigT2_eta	40	0.2	search with cache (only 1: destruct p; only 1: reflexivity).	0.00817203521729	4
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00839304924011	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.2.7.13.7	search with cache (only 1: intros; only 1: inversion_clear H; only 1: split; only 1: exists x; only 1: trivial).	0.145438909531	1157
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00962090492249	5
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00763511657715	4
Coq.Init.Specif.eq_existT_curried_map	40	2.5	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0993869304657	17
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00736498832703	2
Coq.Init.Specif.eq_exist_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00630593299866	5
Coq.Init.Specif.eq_sig_uncurried	40	0.1.0.1.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0126991271973	8
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00795698165894	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	3.0.0.0.2.0.0.1.1.0.1	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried; only 1: trivial).	2.0860581398	2163
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0109529495239	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.1	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.00848317146301	5
Coq.Init.Specif.eq_sig2_uncurried	40	0.1.0.4.0.9	search with cache (only 1: simpl in *; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.507194042206	656
Coq.Init.Specif.eq_sig2_uncurried_iff	40	1.0.0.0.3.0.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried; only 1: assumption).	0.878224134445	614
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0107319355011	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00425696372986	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.0.0.0.0.2.1.0.0	search with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.825125932693	483
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0273768901825	3
Coq.QArith.Qreduction.Qred_correct	40	3.1.9	search with cache (only 1: fix sqrtrem_spec 1; only 1: red; only 1: auto).	8.64408397675	3445
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0140430927277	3
Coq.QArith.Qreduction.Qminus'_correct	40	2.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0140681266785	4
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	5.5.4.0.2.0	search with cache (only 1: split; only 1: intros E; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros E; only 1: now rewrite !Qred_correct).	2.10447907448	1065
Coq.QArith.Qreduction.Qred_lt	40	15	search with cache (only 1: now rewrite !Qred_correct).	0.97470998764	359
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	5.0.10	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qle_Qabs).	1.21746611595	543
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	1.2.1.0.1.10	search with cache (only 1: intros n; only 1: simpl; only 1: red; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).	2.4347679615	1155
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	4.0.1.0.0.6	search with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: auto with *).	1.50430297852	444
Coq.QArith.Qfield.ex1	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.183032989502	5
Coq.QArith.Qfield.ex2	40	0.0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.134938955307	6
Coq.QArith.Qfield.ex3	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.289451122284	5
Coq.QArith.Qfield.ex4	40	0	search with cache (only 1: split).	0.0619380474091	1
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0718929767609	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0720419883728	1
Coq.QArith.Qfield.ex7	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.108968019485	4
Coq.QArith.Qfield.ex8	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.105360031128	4
Coq.QArith.Qfield.ex9	40	0.0.0.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: trivial).	0.0891511440277	4
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.308858156204	15
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0907921791077	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.0.2	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.152372121811	9
Coq.QArith.Qcanon.Qred_involutive	40	4.11.2	search with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	21.7493009567	11234
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	1.0.0	search with cache (only 1: unfold Qccompare; only 1: intros x y; only 1: reflexivity).	0.0655529499054	4
Coq.QArith.Qcanon.Qcgt_alt	40	0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0647759437561	3
Coq.QArith.Qcanon.Qcle_alt	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0588240623474	2
Coq.QArith.Qcanon.Qcge_alt	40	0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0667481422424	5
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: auto with qarith).	0.0571620464325	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	0.3.4	search with cache (only 1: intros (x, y); only 1: qc; only 1: ring).	0.115754842758	26
Coq.QArith.Qcanon.Qcplus_0_r	40	1.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.0932509899139	4
Coq.QArith.Qcanon.Qcplus_comm	40	0.9.5.4	search with cache (only 1: destruct x; only 1: intros (x, y); only 1: qc; only 1: ring).	4.96891617775	3380
Coq.QArith.Qcanon.Qcopp_involutive	40	0.4.0	search with cache (only 1: intros a; only 1: qc; only 1: ring).	0.0831680297852	7
Coq.QArith.Qcanon.Qcplus_opp_r	40	4.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.116436004639	7
Coq.QArith.Qcanon.Qcmult_assoc	40	1.0.8	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: qc; only 1: ring).	0.294237136841	72
Coq.QArith.Qcanon.Qcmult_0_l	40	0.0.2.0	search with cache (only 1: intros; only 1: qc; only 1: compute; only 1: reflexivity).	0.0876939296722	6
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.106992006302	6
Coq.QArith.Qcanon.Qcmult_1_l	40	5.3.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.415868997574	82
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0883409976959	5
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.149720907211	11
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	2.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: qc; only 1: ring).	0.146334171295	5
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	3.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.195242166519	6
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	4.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto with *).	0.29857301712	43
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.0965518951416	6
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40	0.8.7.0	search with cache (only 1: intros; only 1: qc; only 1: apply Qdiv_mult_l; only 1: auto).	4.02803397179	2285
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.3.10.1	search with cache (only 1: intros n; only 1: red; only 1: red; only 1: auto with zarith).	0.458973884583	479
Coq.QArith.Qcanon.Qcle_antisym	40	7.5.0	search with cache (only 1: intros x y; only 1: intro H; only 1: auto with qarith).	1.12624597549	540
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	1.0.1.7	search with cache (only 1: intros; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).	0.591204166412	296
Coq.QArith.Qcanon.Qclt_le_weak	40	8.2	search with cache (only 1: intros a b; only 1: apply Z.lt_le_incl).	0.430820941925	150
Coq.QArith.Qcanon.Qcle_lt_trans	40	0.1.0.0.0.1	search with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eapply Qle_trans; only 1: eauto; only 1: auto with qarith; only 1: auto).	0.392414808273	96
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	0.1.2.0.2	search with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.34454703331	91
Coq.QArith.Qcanon.Qcnot_lt_le	40	0.1.1	search with cache (only 1: unfold Qcle, Qclt; only 1: intros (x1, x2) (y1, y2); only 1: apply Z.nlt_ge).	0.216979026794	34
Coq.QArith.Qcanon.Qcnot_le_lt	40	2.2.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros (x1, x2) (y1, y2); only 1: apply Z.nle_gt).	0.0927200317383	17
Coq.QArith.Qcanon.Qclt_not_le	40	6.0	search with cache (only 1: intros n m; only 1: apply Z.lt_nge).	0.0784890651703	13
Coq.QArith.Qcanon.Qcle_not_lt	40	4.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with *).	0.0919377803802	7
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.0.13	search with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.837305784225	477
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40	0.0.0.5.0.0.0.4	search with cache (only 1: unfold Qclt, Qcle; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r, Z.mul_opp_l, <- Z.lt_sub_lt_add_r, Z.opp_involutive; only 1: reflexivity).	2.14387917519	818
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	0.0.3.0.3.1.1	search with cache (only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto; only 1: auto with qarith).	3.44482493401	1158
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	0.0.0.2.11	search with cache (only 1: Nat.cases ltac:(n); only 1: now destruct 1; only 1: intros; only 1: simpl; only 1: auto with qarith).	1.81285119057	785
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.1.2.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.0841569900513	10
Coq.QArith.Qreals.IZR_nz	40	0.1	search with cache (only 1: intro; only 1: now apply not_0_IZR).	0.292309999466	33
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.0.6.1.9.0.0	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: simpl; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	34.7496299744	8399
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	2.0.1.0.1.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0360589027405	11
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	1.0.0.0.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0417439937592	12
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	1	search with cache (only 1: intuition).	0.0102779865265	2
Coq.QArith.QArith_base.Qeq_sym	40	0.1	search with cache (only 1: symmetry; only 1: auto).	0.0148150920868	3
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	0.0.0.0.0.1.17.4.5.10	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: red; only 1: intros x y z; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	8.94988083839	11865
Coq.QArith.QArith_base.Qeq_dec	40	0.0.0.6	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0303640365601	10
Coq.QArith.QArith_base.Qeq_bool_iff	40	0.2.3.7.7	search with cache (only 1: symmetry; only 1: unfold Qeq, Qlt, Qcompare; only 1: split; only 1: apply Zeq_is_eq_bool; only 1: apply Zeq_is_eq_bool).	0.955278873444	917
Coq.QArith.QArith_base.Qeq_bool_eq	40	2	search with cache (only 1: apply Zeq_is_eq_bool).	0.0154421329498	11
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0104069709778	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40	6.5.11.0	search with cache (only 1: symmetry; only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	3.61451411247	3089
Coq.QArith.QArith_base.Qle_bool_imp_le	40	6	search with cache (only 1: apply Z.leb_le).	0.0126299858093	7
Coq.QArith.QArith_base.Qnot_eq_sym	40	0	search with cache (only 1: auto with qarith).	0.0105359554291	1
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.12	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.117141962051	60
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.6	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.0360701084137	19
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.0.0.10	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.681224107742	378
Coq.QArith.QArith_base.Qmake_Qdiv	40	1.5.3.2	search with cache (only 1: Z.bitwise; only 1: f_equiv; only 1: simpl; only 1: now Z.nzsimpl).	0.547647953033	198
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	8.3.0.1	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now f_equiv).	3.68598008156	1580
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	3	search with cache (only 1: easy).	0.0159730911255	4
Coq.QArith.QArith_base.Qplus_assoc	40	2.1.0.2.2.3	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: auto).	4.2100379467	550
Coq.QArith.QArith_base.Qplus_0_l	40	3.0.0.8	search with cache (only 1: unfold Qeq; only 1: simpl in *; only 1: intros; only 1: ring).	1.41977095604	239
Coq.QArith.QArith_base.Qplus_0_r	40	0.13.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	3.00954294205	1041
Coq.QArith.QArith_base.Qplus_comm	40	1.1.0.6.1.1	search with cache (only 1: intros n m; only 1: induction n in m |- *; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	1.80273795128	284
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0321710109711	4
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0337619781494	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0562279224396	5
Coq.QArith.QArith_base.Qmult_0_l	40	5.1	search with cache (only 1: intros; only 1: easy).	0.0163490772247	8
Coq.QArith.QArith_base.Qmult_0_r	40	0.1.0.8.2	search with cache (only 1: intros n; only 1: induction n; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	2.03556394577	504
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.2.1.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.87465596199	233
Coq.QArith.QArith_base.Qmult_comm	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.134227991104	13
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.2.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.145296096802	7
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0692520141602	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	3.3.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: symmetry; only 1: auto).	0.0186400413513	9
Coq.QArith.QArith_base.inject_Z_opp	40	0	search with cache (only 1: now destruct x).	0.0120661258698	1
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	0.3.5	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.0915198326111	46
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0422818660736	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	2	search with cache (only 1: intuition).	0.0115430355072	3
Coq.QArith.QArith_base.Qle_antisym	40	10.3	search with cache (only 1: red; only 1: apply Z.le_antisymm).	0.470256090164	258
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	1.25	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_irrefl).	2.78746891022	600
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40	1.1.1.1.16	search with cache (only 1: unfold Qle; only 1: simpl; only 1: f_equal; only 1: ring; only 1: now Z.nzsimpl).	2.41954088211	1686
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40	8.0.6.10.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: split; only 1: apply Z.lt_eq_cases; only 1: intuition; only 1: Z.order).	21.9810431004	8123
Coq.QArith.QArith_base.Qlt_le_weak	40	18.7	search with cache (only 1: intro E; only 1: now apply Z.lt_le_incl).	2.09389185905	1195
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	1	search with cache (only 1: apply Z.nle_gt).	0.0116319656372	2
Coq.QArith.QArith_base.Qle_not_lt	40	3	search with cache (only 1: apply Z.nlt_ge).	0.0121548175812	4
Coq.QArith.QArith_base.Qle_lt_or_eq	40	8.0.1.5	search with cache (only 1: unfold Qle, Qlt; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: apply Z.lt_eq_cases).	5.59184098244	1907
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40	1.2.0.0.1	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: auto with zarith; only 1: easy; only 1: easy).	0.548034191132	63
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.025162935257	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40	2.3.0.2.3.0.0.0.1.0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite <- Hy; only 1: clear y' Hy; only 1: induction y; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Hx; only 1: reflexivity; only 1: simpl; only 1: rewrite Hx; only 1: reflexivity).	7.60688114166	5303
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.0512459278107	10
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	0.1.8.0	search with cache (only 1: intros a; only 1: simpl; only 1: zero_or_not a; only 1: apply Z.div_1_r).	0.441843032837	188
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40	2.3.8	search with cache (only 1: fix le_div2 1; only 1: red; only 1: auto with zarith).	8.9594399929	3913
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.0.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.441507816315	39
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40	5.16	search with cache (only 1: fix le_div2 1; only 1: eauto with qarith).	18.0324897766	7235
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.0.0.0.1.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: symmetry in H; only 1: symmetry in H; only 1: auto with *).	0.362329959869	50
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	5.0.0.0.0.0.0.0.2	search with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: intuition try easy).	8.30430316925	2937
Coq.QArith.Qabs.Qabs_neg	40	0.0.1.0.0.0.1.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.43768119812	118
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.0.9.2	search with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate)).	2.82421708107	826
Coq.QArith.Qabs.Zabs_Qabs	40	0.0.0.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: auto).	0.0814960002899	4
Coq.QArith.Qabs.Qabs_opp	40	1.1.1.10	search with cache (only 1: intros [[| n| n] d]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	19.1123359203	6127
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	0.5.0.0.0.3.0.1.1	search with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: change_no_check (Z.pos yd) with (Z.abs (Z.pos yd)); only 1: change_no_check (Z.pos xd) with (Z.abs (Z.pos xd)); only 1: change_no_check (Z.pos yd) with (Z.abs (Z.pos yd)); only 1: repeat rewrite <- Z.abs_mul; only 1: congruence).	35.3544540405	11823
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	3.34341216087	564
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	0.0.1.0.0.0.0.0.0.16	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: auto with zarith; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: red; only 1: simpl; only 1: discriminate).	28.5611760616	13805
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	1.0	search with cache (only 1: red; only 1: trivial).	0.00847411155701	3
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00801205635071	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00768303871155	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	6.0.18.5	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	1.65861701965	6284
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: auto).	0.0082631111145	1
Coq.Classes.CMorphisms.subrelation_respectful	40	2	search with cache (only 1: firstorder).	0.0118489265442	3
Coq.Classes.CMorphisms.subrelation_refl	40	1	search with cache (only 1: firstorder).	0.00844120979309	2
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00875377655029	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	6	search with cache (only 1: simpl_crelation).	0.190896034241	20
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.0186109542847	1
Coq.Classes.CMorphisms.forall_subrelation	40	1.0	search with cache (only 1: reduce; only 1: firstorder).	0.0116889476776	3
Coq.Classes.CMorphisms.iff_impl_subrelation	40	5.0	search with cache (only 1: reduce; only 1: firstorder).	0.0099949836731	7
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00924611091614	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00930619239807	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00933194160461	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.0108211040497	2
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.116694927216	1
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	1.46853494644	44
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	4.37998485565	401
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	4.2.0	search with cache (only 1: transitivity y; only 1: assumption; only 1: firstorder).	3.91546416283	366
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0883219242096	1
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	0.141452074051	144
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	2.80788993835	386
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.0103039741516	1
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	2	search with cache (only 1: firstorder).	0.0112919807434	3
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	0.4.1	search with cache (only 1: reduce; only 1: elim eq_sym with (1 := H0); only 1: auto).	0.0126709938049	8
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	1	search with cache (only 1: firstorder).	0.00899004936218	2
Coq.Classes.CMorphisms.flip_respectful	40	2.0.0	search with cache (only 1: simpl_crelation; only 1: unfold respectful, relation_equivalence in *; only 1: simpl_crelation).	0.0358991622925	5
Coq.Classes.CMorphisms.flip1	40	0	search with cache (only 1: firstorder).	0.00809097290039	1
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00796794891357	1
Coq.Classes.CMorphisms.eq_subrelation	40	11	search with cache (only 1: simpl_crelation).	0.0849380493164	204
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00807118415833	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00818300247192	1
Coq.Classes.CMorphisms.proper_proper	40	0.1.0.0.0.0.0.0	search with cache (only 1: reduce; only 1: split; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: firstorder; only 1: simpl_crelation; only 1: firstorder).	0.0480608940125	9
Coq.Classes.CMorphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.00977802276611	1
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00923204421997	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	4.2	search with cache (only 1: intros x y H'; only 1: simpl_crelation).	0.143054008484	11
Coq.Classes.CMorphisms.proper_sym_flip_2	40	0.17.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).	6.16804695129	1092
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0164499282837	6
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.1	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.254706144333	21
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.4.8	search with cache (only 1: intros; only 1: transitivity y; only 1: firstorder; only 1: simpl_crelation).	0.328825950623	721
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40	0.2.0.0.11.1.2	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: repeat red in Hf; only 1: compute; only 1: intros x x' Hxx'; only 1: intros; only 1: symmetry; only 1: firstorder).	25.7242670059	16682
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00760817527771	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00568699836731	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00702905654907	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.283806085587	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: reflexivity).	0.00393080711365	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00413012504578	1
Coq.Classes.CRelationClasses.flip_Reflexive	40	1.0	search with cache (only 1: hnf; only 1: auto).	0.00426506996155	3
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	0.3.1	search with cache (only 1: hnf; only 1: intro H1; only 1: auto).	0.0129308700562	18
Coq.Classes.CRelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.012638092041	2
Coq.Classes.CRelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0137162208557	1
Coq.Classes.CRelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0223081111908	1
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0235929489136	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00444102287292	2
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00440406799316	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0	search with cache (only 1: firstorder).	0.00402593612671	1
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00434589385986	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00550699234009	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	3	search with cache (only 1: firstorder).	0.0113229751587	28
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0100879669189	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.026134967804	2
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.0.1.3	search with cache (only 1: simpl_relation; only 1: apply PreOrder_Transitive with y; only 1: auto; only 1: auto).	0.0344069004059	42
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.00529980659485	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00497007369995	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00571489334106	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.231410980225	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	0	search with cache (only 1: split).	0.00406289100647	1
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	4	search with cache (only 1: firstorder).	0.00573301315308	5
Coq.Classes.RelationClasses.flip_Reflexive	40	1.0	search with cache (only 1: hnf; only 1: auto).	0.00495505332947	3
Coq.Classes.RelationClasses.flip_Antisymmetric	40	1	search with cache (only 1: firstorder).	0.00709819793701	2
Coq.Classes.RelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.020740032196	2
Coq.Classes.RelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0167109966278	2
Coq.Classes.RelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0266599655151	1
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0908799171448	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00418186187744	1
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0045530796051	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0127308368683	3
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.00773906707764	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0157001018524	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	2	search with cache (only 1: firstorder).	0.00767207145691	3
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.00934100151062	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	6.0.0.0	search with cache (only 1: hnf; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.109278917313	10
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.00887393951416	1
Coq.Classes.Morphisms.eq_proper_proxy	40	0	search with cache (only 1: split).	0.0078558921814	1
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00788497924805	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00745105743408	1
Coq.Classes.Morphisms.pointwise_pointwise	40	1.0.1.1.10.4	search with cache (only 1: split; only 1: compute; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: firstorder; only 1: firstorder).	0.476083993912	1052
Coq.Classes.Morphisms.subrelation_id_proper	40	1.0	search with cache (only 1: intro H1; only 1: firstorder).	0.00992679595947	3
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0118749141693	1
Coq.Classes.Morphisms.subrelation_refl	40	1.2	search with cache (only 1: reduce; only 1: firstorder).	0.0106768608093	5
Coq.Classes.Morphisms.subrelation_proper	40	4	search with cache (only 1: firstorder).	0.00948810577393	5
Coq.Classes.Morphisms.proper_subrelation_proper	40	1.4.1	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0445339679718	9
Coq.Classes.Morphisms.pointwise_subrelation	40	0.0	search with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0104401111603	2
Coq.Classes.Morphisms.forall_subrelation	40	1.1	search with cache (only 1: reduce; only 1: firstorder).	0.0117239952087	4
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00884318351746	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00901293754578	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	0	search with cache (only 1: firstorder).	0.0107100009918	1
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0971999168396	1
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	1	search with cache (only 1: firstorder).	5.33260416985	131
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	2.26969194412	655
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	1.4.1	search with cache (only 1: transitivity x0; only 1: firstorder; only 1: firstorder).	1.25033307076	605
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.844326019287	652
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	5.2	search with cache (only 1: symmetry; only 1: firstorder).	0.0568261146545	14
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	0.465021133423	150
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	9.0047647953	4020
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.0111541748047	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.0106978416443	2
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.2.0	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0114798545837	5
Coq.Classes.Morphisms.respectful_morphism	40	2.0.4.2.1.2.2.3.7	search with cache (only 1: reduce; only 1: split; only 1: reduce; only 1: apply H0; only 1: firstorder; only 1: reduce; only 1: apply H0; only 1: apply H1; only 1: firstorder).	27.4529159069	3260
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00889182090759	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.0432460308075	1
Coq.Classes.Morphisms.flip1	40	0	search with cache (only 1: firstorder).	0.00833702087402	1
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00824999809265	1
Coq.Classes.Morphisms.eq_subrelation	40	0.2.1	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0124778747559	6
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0083019733429	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00840210914612	1
Coq.Classes.Morphisms.proper_proper	40	0.2.0.0	search with cache (only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl_relation; only 1: firstorder).	0.143531084061	31
Coq.Classes.Morphisms.proper_normalizes_proper	40	1	search with cache (only 1: firstorder).	0.0242881774902	2
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0102128982544	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	search with cache (only 1: simpl_relation).	0.0196809768677	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.7	search with cache (only 1: unfold flip, respectful; only 1: simpl_relation).	0.614490032196	72
Coq.Classes.Morphisms.proper_sym_impl_iff	40	10.2	search with cache (only 1: simpl_relation; only 1: firstorder).	1.86353087425	451
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	2	search with cache (only 1: firstorder).	0.00827193260193	3
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00747013092041	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0589559078217	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00663113594055	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	2	search with cache (only 1: firstorder).	0.00961804389954	3
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0165078639984	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.258602142334	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	2	search with cache (only 1: firstorder).	0.0114638805389	3
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.00998497009277	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.008544921875	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.00867104530334	1
Coq.Classes.RelationPairs.pair_compat	40	0.1	search with cache (only 1: repeat red; only 1: auto).	0.0116229057312	3
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.00857496261597	1
Coq.Classes.RelationPairs.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0127859115601	3
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.5.10.3.0	search with cache (only 1: repeat red; only 1: firstorder; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: compute in *; only 1: auto).	1.89012908936	760
Coq.Classes.DecidableClass.Decidable_sound	40	0.9.3	search with cache (only 1: intro A; only 1: intros (x, (Hx, Huni)); only 1: auto).	0.0446000099182	212
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	1.1.1.1.38	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: now split).	9.38536596298	9728
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	3.0.0.6.1.9.3	search with cache (only 1: symmetry; only 1: split; only 1: symmetry; only 1: subst; only 1: symmetry; only 1: apply Nat.eqb_refl; only 1: apply Nat.eqb_eq).	8.62378287315	7112
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	10	search with cache (only 1: apply Nat.leb_le).	0.213438987732	44
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	0.18.33	search with cache (only 1: destruct y; only 1: destruct x; only 1: auto).	1.07667303085	3685
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	3	search with cache (only 1: now simpl).	0.0193338394165	4
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.015741109848	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0156450271606	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	1.4	search with cache (only 1: repeat red; only 1: firstorder).	0.261448144913	28
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.44721698761	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.021176815033	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0208489894867	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0210871696472	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.1.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.034078836441	4
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	2	search with cache (only 1: firstorder).	0.0289690494537	3
Coq.PArith.Pnat.Pos2Nat.inj_succ	40	1.14.14	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.94998383522	1451
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	search with cache (only 1: trivial).	0.00702691078186	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40	0.4.0.2.9.6.3	search with cache (only 1: unfold to_nat; only 1: Morphisms.f_equiv; only 1: intros a n; only 1: Nat.bitwise; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	17.6025950909	11624
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40	0.0.6	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.0433831214905	73
Coq.PArith.Pnat.Pos2Nat.is_pos	40	0.17.17	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.735594987869	1325
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.0.1.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros <-; only 1: unfold to_nat; only 1: trivial).	0.0201120376587	13
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	1.12.3	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	13.6737577915	7882
Coq.PArith.Pnat.Pos2Nat.inj_ge	40	1.12.6	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	13.4263908863	8292
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40	1.0.11	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	1.46751880646	1407
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	4.0.0.0.3.16.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	2.98144483566	5965
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0110750198364	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	6.1.0.0.7	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	1.80196809769	2884
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	1.1.0.10.13.1	search with cache (only 1: rewrite Pos.of_nat_succ; only 1: simpl; only 1: destruct n; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	10.6836211681	16232
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	1.0.0.2.2	search with cache (only 1: symmetry; only 1: split; only 1: intro H; only 1: now subst; only 1: now apply Nat2Pos.inj).	0.105422019958	81
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	2.1.0.0	search with cache (only 1: apply Pos2Nat.inj; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos.of_nat_succ; only 1: trivial).	0.0185790061951	12
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	2.7.0	search with cache (only 1: intros; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	0.204643011093	115
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	search with cache (only 1: decide equality).	0.0126869678497	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	search with cache (only 1: trivial).	0.00714802742004	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.00678396224976	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.0.1.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0179898738861	9
Coq.PArith.BinPos.Pos.double_succ	40	1	search with cache (only 1: reflexivity).	0.00841188430786	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0163140296936	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0155730247498	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	3.34593486786	501
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	1.1.0.0.0.0.2	search with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	0.67954993248	366
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40
Coq.PArith.BinPos.Pos.add_1_r	40	0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.0162928104401	6
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.00833606719971	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	2	search with cache (only 1: auto).	0.00804805755615	3
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40	0.0.0.0.3.5.12.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: change_no_check p~1 with (p~0 + 1); only 1: rewrite ?add_carry_spec, ?add_succ_r, ?add_succ_l, ?add_1_r; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	7.9913008213	8210
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0100681781769	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0.0.0.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0178310871124	7
Coq.PArith.BinPos.Pos.mul_1_r	40	0.1.0.7.1.4	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).	0.795899868011	978
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.2.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.219812870026	138
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.0.2.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.093248128891	68
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0188231468201	1
Coq.PArith.BinPos.Pos.square_xO	40	19.0.1.3	search with cache (only 1: symmetry; only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	22.6564838886	16861
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.0.0.0.0.0.0.0.8	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: now rewrite ?H, ?IHp).	0.802297830582	512
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0183711051941	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	8.2.0	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: now rewrite ?IHp).	1.36305904388	894
Coq.PArith.BinPos.Pos.leb_le	40	8.3.1	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: now rewrite ?IHp).	2.89257597923	1499
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	4.9.2	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	2.01564002037	1333
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.1.3.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0421011447906	10
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.2.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.021800994873	8
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	1.9.3	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	0.743659973145	696
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.4.0	search with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.178432941437	38
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.234190225601	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.4.4	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.486652135849	133
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.3.4	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.310026884079	110
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.1.1.0	search with cache (only 1: induction p; only 1: trivial; only 1: reflexivity || apply f_equal || exfalso; only 1: trivial).	0.0146467685699	7
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.00719213485718	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.4.7.1	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	0.748506069183	955
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.13.2.20	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	18.1386659145	15142
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.0.0.0.0.7	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: simpl in *; only 1: trivial; only 1: trivial).	0.0698258876801	66
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1	search with cache (only 1: unfold lt; only 1: now split).	0.00947618484497	3
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.0.1.2	search with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0189471244812	8
Coq.PArith.BinPos.Pos.gt_lt_iff	40	2.0	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0757219791412	36
Coq.PArith.BinPos.Pos.gt_lt	40	0.1.3.1	search with cache (only 1: unfold gt, le, compare; only 1: intros H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: now apply compare_lt_iff).	0.0678360462189	22
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00726199150085	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	6.2	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.062479019165	19
Coq.PArith.BinPos.Pos.ge_le	40	0.2	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0140221118927	4
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00735712051392	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	22	search with cache (only 1: now destruct p).	0.642462015152	933
Coq.PArith.BinPos.Pos.nlt_1_r	40	1	search with cache (only 1: now destruct p).	0.018923997879	2
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0414731502533	35
Coq.PArith.BinPos.Pos.le_nlt	40	0.5.0	search with cache (only 1: unfold ge, lt, compare; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0260720252991	8
Coq.PArith.BinPos.Pos.lt_nle	40	1.3	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.586249113083	138
Coq.PArith.BinPos.Pos.lt_le_incl	40	8	search with cache (only 1: congruence).	0.287611961365	45
Coq.PArith.BinPos.Pos.lt_lt_succ	40	0.4.11.0	search with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: auto).	0.519273996353	712
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	2.6	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite compare_succ_succ).	0.0330090522766	10
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	1.2.2	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.010183095932	8
Coq.PArith.BinPos.Pos.lt_compat	40	10	search with cache (only 1: solve_proper).	0.215776205063	94
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	search with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0134968757629	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40	0.0.0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: rewrite 3!PeanoNat.Nat.lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations).	5.20409107208	3327
Coq.PArith.BinPos.Pos.le_succ_l	40	1.4.2.3.1	search with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.06732296944	590
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	3.3.0	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.0100789070129	9
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.0.4.2.14	search with cache (only 1: revert q; only 1: symmetry; only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	15.3507201672	15044
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.0.5	search with cache (only 1: unfold le, ge; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.028018951416	8
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.2.0.2.17.0	search with cache (only 1: unfold le; only 1: split; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	3.03603386879	2160
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.1.12	search with cache (only 1: symmetry; only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	3.29782915115	2226
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.13.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.717046022415	475
Coq.PArith.BinPos.Pos.mul_le_mono_r	40
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.01047706604	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40	0.0.8.3.9	search with cache (only 1: apply ge_le_iff; only 1: apply le_lteq; only 1: left; only 1: rewrite lt_iff_add; only 1: now exists q).	26.0948030949	27026
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	2.0.0.1.2	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.10339307785	60
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0075159072876	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	1.3.1.16	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: apply sub_mask_pos_iff in Hr; only 1: now exists r).	21.0905730724	17869
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0141530036926	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0145602226257	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.0.0.0.5.2	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: now split; only 1: now split; only 1: now split).	1.56686687469	924
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.6	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.193603038788	62
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	1.1.0.0.1.15.0	search with cache (only 1: unfold le, sub; only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: case_eq (sub_mask p q); only 1: discriminate; only 1: discriminate; only 1: now destruct p, q).	20.0985229015	16345
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0198159217834	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	0.0.2.1.0.2.2.0	search with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	1.90067911148	1422
Coq.PArith.BinPos.Pos.max_1_l	40	62	search with cache (only 1: now destruct n).	0.922742128372	3451
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.109313964844	9
Coq.PArith.BinPos.Pos.min_1_l	40	1.0	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.00845885276794	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0187659263611	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	3.2.1	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply add_le_mono_l).	0.134603023529	78
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.2	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0132329463959	5
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.0	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.015456199646	4
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	4.0.1	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	0.0218160152435	11
Coq.PArith.BinPos.Pos.mul_max_distr_r	40	0.0.0.6	search with cache (only 1: rewrite !(PeanoNat.Nat.mul_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.038843870163	10
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.0	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0129339694977	3
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.0	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0158059597015	4
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40	1.5.7.0.24	search with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: trivial).	0.704755067825	1301
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	2.0.0.0.1.5.6.0	search with cache (only 1: intros; only 1: symmetry; only 1: induction n; only 1: exfalso; only 1: now apply H; only 1: simpl; only 1: f_equal; only 1: apply of_nat_succ).	2.06737303734	4665
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40	0.0.1	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	0.0144309997559	4
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	1.19	search with cache (only 1: fix sqrtrem_spec 1; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.641625165939	704
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	1.0.24	search with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	0.635051965714	1120
Coq.PArith.BinPos.Pos.gcd_divide_r	40	0.2.1	search with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	0.101686000824	67
Coq.PArith.BinPos.Pos.gcdn_greatest	40	0.25	search with cache (only 1: fix le_div2 1; only 1: trivial).	7.91569590569	12017
Coq.PArith.BinPos.Pos.gcd_greatest	40	2.6.2	search with cache (only 1: intros a b; only 1: fix sqrtrem_spec 1; only 1: auto).	1.47070884705	810
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.1	search with cache (only 1: unfold Pos.gt; only 1: now split).	0.0102679729462	4
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40	1.0.0.19.23.7	search with cache (only 1: intros; only 1: apply Pos.gt_lt in H; only 1: destruct (Pos.sub_mask_pos p q H) as (r, U); only 1: unfold Pos.sub; only 1: rewrite U; only 1: now apply Pos.sub_mask_pos_iff).	33.6692039967	55143
Coq.PArith.BinPos.Dcompare	40	0.0.1.21.33	search with cache (only 1: intro n; only 1: induction n; only 1: intuition; only 1: now intuition; only 1: now intuition).	6.61953401566	11893
Coq.Arith.Le.le_n_0_eq	40	0.1	search with cache (only 1: inversion 1; only 1: Nat.order_nz).	0.0208787918091	20
Coq.Arith.Le.le_elim_rel	40	2.23.5	search with cache (only 1: intros n IH a m; only 1: fix le_div2 1; only 1: trivial).	8.92169308662	22392
Coq.Arith.Even.even_equiv	40	5.8	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.967435121536	874
Coq.Arith.Even.odd_equiv	40	8.3.0	search with cache (only 1: fix even_equiv 1; only 1: intros; only 1: trivial).	0.855231046677	673
Coq.Arith.Even.even_or_odd	40	8.11.19	search with cache (only 1: induction n as [| n IH]; only 1: intuition; only 1: intuition).	0.613779783249	1661
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.156485080719	5
Coq.Arith.Even.not_even_and_odd	40	0.0.0.0.0.4.1.3.0	search with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto with arith).	0.678455114365	655
Coq.Arith.Even.even_plus_split	40	0.7.22	search with cache (only 1: revert m; only 1: fix even_equiv 1; only 1: auto with arith).	4.51823592186	7648
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.127211809158	1
Coq.Arith.Even.even_even_plus	40	1	search with cache (only 1: parity_binop).	0.0693709850311	2
Coq.Arith.Even.odd_plus_l	40	1	search with cache (only 1: parity_binop).	0.069137096405	2
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0698280334473	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0781581401825	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.277187824249	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0695860385895	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0687820911407	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0687491893768	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0688180923462	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0687611103058	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0693829059601	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0794949531555	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0682249069214	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.188022851944	1
Coq.Arith.Even.even_mult_l	40	6.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: parity_binop).	0.0544989109039	10
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0475699901581	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0794990062714	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0693359375	1
Coq.Arith.Even.odd_mult	40	1	search with cache (only 1: parity_binop).	0.0776059627533	17
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0898129940033	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0477111339569	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0145587921143	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0374760627747	1
Coq.Arith.Minus.minus_diag_reverse	40	1.2.6	search with cache (only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl; only 1: trivial).	0.151288986206	83
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	5.0.3	search with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: now try Nat.order').	0.521219968796	60
Coq.Arith.Minus.plus_minus	40	14.4.1.0.5.2.1.1.0	search with cache (only 1: Nat.double_induct n m; only 1: intro n; only 1: intros EQ; only 1: symmetry; only 1: now destruct n; only 1: intro n; only 1: now try Nat.order'; only 1: intros a n; only 1: eauto with *).	28.0738279819	53092
Coq.Arith.Minus.minus_plus	40	1.0.0.1.0.4	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: intros; only 1: apply Nat.sub_0_r; only 1: trivial).	0.11306810379	104
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.8.2.6.0	search with cache (only 1: rewrite Nat.add_comm; only 1: revert m; only 1: symmetry; only 1: apply Nat.sub_add; only 1: now rewrite <- ?Nat.succ_le_mono).	2.54634690285	4605
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40
Coq.Arith.Between.between_le	40	9.1.9.26	search with cache (only 1: intros n m; only 1: induction 1; only 1: apply PeanoNat.Nat.le_refl; only 1: intuition).	9.22645902634	21672
Coq.Arith.Between.between_Sk_l	40	0.0.20.0.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: destruct H; only 1: auto with arith; only 1: auto with arith).	1.94885706902	3541
Coq.Arith.Between.between_restr	40	0.0.0.10	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.289583921432	363
Coq.Arith.Between.exists_le_S	40	0.0.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.0113818645477	3
Coq.Arith.Between.exists_S_le	40	2.1.1.7	search with cache (only 1: intros a; only 1: fix le_div2 1; only 1: intros m IH; only 1: auto).	0.508521080017	854
Coq.Arith.Between.in_int_intro	40	10.1	search with cache (only 1: intros; only 1: now PeanoNat.Nat.nzsimpl).	0.118576049805	208
Coq.Arith.Between.in_int_lt	40	5.0	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order).	0.0103588104248	7
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	4.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.00955700874329	6
Coq.Arith.Between.in_int_Sp_q	40	1.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.00900721549988	3
Coq.Arith.Between.between_in_int	40	4.41	search with cache (only 1: fix gcd_greatest 1; only 1: trivial).	18.1017320156	73217
Coq.Arith.Between.in_int_between	40	2.0.0.0.1	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.016725063324	8
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40	2.24.64.41.7	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl'; only 1: subst; only 1: auto with arith).	6.87588000298	60016
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40	0.1.0.0.0.0.0.0.4.2.0.27.11	search with cache (only 1: revert m; only 1: unfold decidable, not; only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: right; only 1: auto).	25.279528141	25455
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40	3.4.4.7.5.51	search with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now left; only 1: intros m IH; only 1: right; only 1: apply Nat.le_add_r).	20.6931591034	42101
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	0.6.2.12	search with cache (only 1: Nat.induct ltac:(n); only 1: auto; only 1: fix odd_equiv 1; only 1: auto).	1.10392785072	2527
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40	1.18.12	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	13.8264241219	25159
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40	2.16.0	search with cache (only 1: rewrite even_equiv; only 1: fix even_equiv 1; only 1: trivial).	0.44588804245	695
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	12.5.0	search with cache (only 1: induction n; only 1: intuition; only 1: intuition).	1.01774597168	885
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40	2.18.0	search with cache (only 1: revert m; only 1: fix even_equiv 1; only 1: trivial).	26.5823521614	23709
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	2.0.34	search with cache (only 1: fix ind_0_1_SS 1; only 1: intros; only 1: auto with arith).	8.01785993576	14586
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0164351463318	3
Coq.Arith.Div2.div2_double	40	2.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: apply Nat.div2_double).	0.0370512008667	18
Coq.Arith.Div2.div2_double_plus_one	40	0.2.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: trivial).	0.0335659980774	17
Coq.Arith.Plus.plus_assoc_reverse	40	12.0.11.0.0	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: symmetry; only 1: Nat.nzsimpl; only 1: intuition).	18.7024230957	11132
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.00839591026306	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	1	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00990414619446	2
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	search with cache (only 1: apply Nat.add_le_mono).	0.00719094276428	2
Coq.Arith.Plus.plus_lt_compat	40	2.1.10	search with cache (only 1: intro H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	0.15606212616	230
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40	0.3.18	search with cache (only 1: revert m; only 1: fix le_div2 1; only 1: trivial).	0.225097179413	281
Coq.Arith.Plus.le_plus_trans	40	3.0.2.4	search with cache (only 1: intros LE; only 1: transitivity m; only 1: trivial; only 1: apply Nat.le_add_r).	0.0620548725128	83
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	1.1.0.0.2.3	search with cache (only 1: Nat.induct n; only 1: split; only 1: Nat.order_nz; only 1: trivial; only 1: intro n; only 1: discriminate).	0.571266174316	433
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	2.1.0.4.18	search with cache (only 1: nzinduct n; only 1: trivial; only 1: intro; only 1: Nat.nzsimpl; only 1: intuition).	1.08596396446	1403
Coq.Arith.Lt.lt_le_S	40	2.0	search with cache (only 1: intro H; only 1: trivial).	0.00690197944641	4
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.00601196289062	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.1.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.00976204872131	4
Coq.Arith.Lt.le_not_lt	40	0.3	search with cache (only 1: intro H; only 1: Nat.order).	0.0847229957581	26
Coq.Arith.Lt.lt_not_le	40	0.3	search with cache (only 1: intro H; only 1: Nat.order).	0.0313160419464	34
Coq.Arith.Lt.neq_0_lt	40	0.0	search with cache (only 1: intro H; only 1: Nat.auto').	0.00899004936218	2
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.00922799110413	4
Coq.Arith.Lt.lt_n_S	40	1	search with cache (only 1: apply le_n_S).	0.00732588768005	2
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00646281242371	1
Coq.Arith.Lt.S_pred	40	0.0.0.27	search with cache (only 1: induction 1; only 1: Nat.bitwise; only 1: trivial; only 1: now Nat.nzsimpl').	0.635124921799	942
Coq.Arith.Lt.S_pred_pos	40	0.0.13	search with cache (only 1: inversion 1; only 1: trivial; only 1: trivial).	0.220336198807	575
Coq.Arith.Lt.lt_pred	40	0.10.12.0.6.45	search with cache (only 1: revert m; only 1: Nat.cases ltac:(m); only 1: intro H; only 1: now Nat.nzsimpl'; only 1: intro H; only 1: apply Nat.succ_lt_mono).	23.1057190895	74941
Coq.Arith.Lt.lt_pred_n_n	40	2.5.6.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: apply Nat.le_ngt; only 1: apply Nat.le_ngt; only 1: trivial).	1.82212305069	3750
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	27.9854319096	7062
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	11.3151831627	15612
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.203492879868	209
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00592708587646	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00649785995483	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00689196586609	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0.0.0.0	search with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto with arith).	0.0126519203186	4
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0175759792328	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	2.0.0.0	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	0.0109801292419	6
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.554327011108	203
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	1.4.0.0.1.1.2.2.0.2.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: intro; only 1: auto with arith).	2.04921913147	2329
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.181971788406	168
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0115029811859	3
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.11	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.195035934448	156
Coq.Arith.Compare_dec.lt_dec	40	0.0.1.0.0.1.0.3.0.15.7	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: now right; only 1: left; only 1: apply Peano.le_n_S, Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: elim (IHn m); only 1: auto with arith; only 1: right; only 1: auto with arith).	21.6902329922	36037
Coq.Arith.Compare_dec.gt_dec	40	1.3.0	search with cache (only 1: destruct (le_gt_dec n m); only 1: apply le_dec; only 1: now left).	0.0448369979858	18
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.00620222091675	2
Coq.Arith.Compare_dec.dec_le	40	0.1.9.0.0.1.5	search with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: left; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: unfold decidable, not; only 1: intro H; only 1: intuition Nat.order).	2.96269106865	1746
Coq.Arith.Compare_dec.dec_lt	40	1	search with cache (only 1: apply Nat.le_decidable).	0.0063111782074	2
Coq.Arith.Compare_dec.dec_gt	40	0	search with cache (only 1: apply Nat.lt_decidable).	0.00636100769043	1
Coq.Arith.Compare_dec.dec_ge	40	1	search with cache (only 1: apply Nat.le_decidable).	0.0203759670258	2
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.00679492950439	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.00654983520508	1
Coq.Arith.Compare_dec.not_gt	40	2	search with cache (only 1: apply Nat.le_ngt).	0.00808811187744	3
Coq.Arith.Compare_dec.not_ge	40	1	search with cache (only 1: apply Nat.nle_gt).	0.00775289535522	2
Coq.Arith.Compare_dec.not_lt	40	2	search with cache (only 1: apply Nat.le_ngt).	0.00924181938171	11
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40	4.7.1.0	search with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	3.52652406693	4365
Coq.Arith.Compare_dec.nat_compare_le	40	2.12.0.3	search with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	19.8602800369	23465
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	0.1.0.1.1.0.1.0.3	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto with arith; only 1: simpl; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).	0.640688896179	666
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	3	search with cache (only 1: apply Nat.compare_lt_iff).	0.00925803184509	4
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	2	search with cache (only 1: apply Nat.compare_gt_iff).	0.00878596305847	3
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	0.0.0.0.0.0.1.2.0.0.0.3.2.0.2	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: fix odd_spec 1; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: split; only 1: auto with arith; only 1: easy; only 1: simpl; only 1: rewrite IHn; only 1: split; only 1: apply Peano.le_n_S; only 1: apply Nat.succ_lt_mono).	21.8077361584	25450
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00700688362122	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.2	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0220668315887	17
Coq.Arith.Compare_dec.leb_complete_conv	40	2	search with cache (only 1: apply leb_iff_conv).	0.00967001914978	11
Coq.Arith.Compare_dec.leb_compare	40	2.4.0.3.0.0.1.6.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: fix even_spec 1; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: revert m; only 1: trivial).	31.1070890427	32633
Coq.Arith.EqNat.eq_nat_refl	40	2.6.11	search with cache (only 1: induction n as [| n IH]; only 1: intuition; only 1: trivial).	0.117429971695	256
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0103569030762	6
Coq.Arith.EqNat.eq_nat_eq	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: contradiction || auto; only 1: destruct m; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: contradiction || auto).	0.372220039368	434
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	1.3.0.1.0.1.2.0.1	search with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: destruct m; only 1: simpl; only 1: tauto; only 1: simpl; only 1: trivial).	1.36835598946	2155
Coq.Arith.EqNat.beq_nat_refl	40	2.0.0.1.1	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now Nat.nzsimpl).	0.0149629116058	9
Coq.Arith.EqNat.beq_nat_true	40	1.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: contradiction || auto).	1.03686404228	1011
Coq.Arith.EqNat.beq_nat_false	40	2.1.0.0.0.0.0.2.0.3.0.8	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: contradiction || auto).	4.06864404678	5324
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	7.4.6.8	search with cache (only 1: intros H x0; only 1: induction n; only 1: tauto; only 1: firstorder).	3.70061087608	1903
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	search with cache (only 1: destr_bool).	0.00966501235962	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	3.6.1.0.0.1	search with cache (only 1: intros A A_wd A0 AS; only 1: intros; only 1: simpl; only 1: induction n; only 1: firstorder; only 1: firstorder).	1.12402486801	997
Coq.Arith.PeanoNat.Nat.pred_succ	40	1	search with cache (only 1: intuition).	0.00936603546143	2
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.00885891914368	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.00883007049561	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00881290435791	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.038430929184	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.00903606414795	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.00903987884521	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0153889656067	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.0.0.0.2.0.0.2.0.3.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	15.6184370518	22891
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.178559064865	166
Coq.Arith.PeanoNat.Nat.compare_succ	40	1.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: trivial).	0.0255420207977	15
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.942456007004	1073
Coq.Arith.PeanoNat.Nat.max_r	40	1.0.0.0.2.0.0.1.4	search with cache (only 1: induction n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.64887690544	2381
Coq.Arith.PeanoNat.Nat.min_l	40	1.0.0.0.1.1.0.1.2	search with cache (only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.25863695145	1598
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	10	search with cache (only 1: now nzsimpl).	0.452667951584	71
Coq.Arith.PeanoNat.Nat.pow_0_r	40	1	search with cache (only 1: now nzsimpl').	0.0177121162415	2
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	1.3.0	search with cache (only 1: inversion 1; only 1: auto; only 1: trivial).	0.123648881912	7
Coq.Arith.PeanoNat.Nat.square_spec	40	2	search with cache (only 1: reflexivity).	0.0115239620209	3
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.0	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0191588401794	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	0.1.0.0.1.0.0.0.8.0.0.0.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: simpl; only 1: now nzsimpl; only 1: intros (m, H); only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	6.66466593742	5434
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	6.0	search with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.0636081695557	50
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40	2.16.0.0.0.0.0.6	search with cache (only 1: destruct divmod as (q, u); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intro H; only 1: fix even_spec 1; only 1: intuition).	10.5198969841	24124
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0123748779297	2
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.2	search with cache (only 1: inversion 1; only 1: now apply pred_0).	0.0381760597229	61
Coq.Arith.PeanoNat.Nat.gcd_divide	40	0.11.0.3	search with cache (only 1: intro n; only 1: set (s := sqrt n); only 1: fix odd_spec 1; only 1: auto).	0.427414178848	521
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	1.0.1.2.1	search with cache (only 1: fix gcd_divide 1; only 1: intros [| a] b; only 1: simpl; only 1: now exists 0; only 1: auto).	0.172917127609	52
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0134119987488	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	0.1.3.11	search with cache (only 1: intro z; only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	1.17984390259	1585
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	2	search with cache (only 1: apply le_0_l).	0.01393699646	3
Coq.Arith.PeanoNat.Nat.div2_double	40	5.8.0.4.39.0	search with cache (only 1: simpl; only 1: cases n; only 1: simpl; only 1: auto; only 1: fix gcd_greatest 1; only 1: auto).	5.49139904976	7060
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0246648788452	8
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	2.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.18868803978	55
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.0.4.5	search with cache (only 1: induct ltac:(n); only 1: now constructor; only 1: intros n IH; only 1: tauto).	0.296766042709	247
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	2.3	search with cache (only 1: fix gcd_greatest 1; only 1: destr_bool).	0.151504993439	103
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	5.11	search with cache (only 1: fix gcd_greatest 1; only 1: trivial).	24.5090370178	6745
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	0.1.6	search with cache (only 1: intros n m; only 1: fix odd_spec 1; only 1: auto).	2.20635604858	111
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	1.21.15	search with cache (only 1: intro; only 1: fix gcd_divide 1; only 1: auto).	25.7867159843	33188
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0156269073486	4
Coq.Arith.PeanoNat.Nat.lor_spec	40	0.2.10.0.12.2	search with cache (only 1: apply testbit_bitwise_1; only 1: fix gcd_divide 1; only 1: trivial; only 1: induction n; only 1: solve_max; only 1: trivial).	4.10070610046	3973
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0136620998383	2
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	search with cache (only 1: inversion H).	0.0146200656891	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	1	search with cache (only 1: Nat.order).	0.0221009254456	11
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0187358856201	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0173709392548	1
Coq.Arith.Gt.gt_S	40	1.24.11.3	search with cache (only 1: intros; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.lt_succ_r; only 1: trivial).	8.34487318993	10719
Coq.Arith.Gt.gt_pred	40	0	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0168280601501	1
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0161068439484	1
Coq.Arith.Gt.gt_not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0168199539185	1
Coq.Arith.Gt.le_S_gt	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0166230201721	1
Coq.Arith.Gt.gt_S_le	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.017233133316	1
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0162689685822	1
Coq.Arith.Gt.le_gt_S	40	1	search with cache (only 1: apply Nat.lt_succ_r).	0.0177710056305	2
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	11.17.37	search with cache (only 1: induction n as [| n IH]; only 1: auto with relations; only 1: intuition).	15.6381969452	54287
Coq.Arith.Gt.plus_gt_reg_l	40	1	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0177149772644	2
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0168468952179	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.9.0	search with cache (only 1: intros; only 1: inversion_clear H; only 1: trivial).	0.0197269916534	89
Coq.Logic.JMeq.JMeq_trans	40	1.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00525093078613	5
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00472903251648	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00478601455688	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00510811805725	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00481700897217	3
Coq.Logic.JMeq.JMeq_congr	40	0.6.3	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0186228752136	79
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0104579925537	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00581192970276	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: intros * []; only 1: auto).	0.00502705574036	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.16.0.10.0	search with cache (only 1: destruct 1; only 1: intro; only 1: apply eq_sigT_eq_dep; only 1: case JMeq_eq with (1 := H); only 1: reflexivity).	0.513498783112	2965
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.10.7	search with cache (only 1: intro H1; only 1: intros [? ?]; only 1: trivial).	0.0677089691162	469
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.00649785995483	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	7.4	search with cache (only 1: intros A; only 1: tauto).	0.0790688991547	119
Coq.Logic.Classical_Prop.not_imply_elim	40	14.1.0.1.0	search with cache (only 1: intros P H; only 1: intro NP; only 1: destruct (classic P); only 1: auto; only 1: tauto).	4.92477107048	9618
Coq.Logic.Classical_Prop.not_imply_elim2	40	1.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: auto).	0.00869488716125	4
Coq.Logic.Classical_Prop.imply_to_or	40	4.5.2.0	search with cache (only 1: intros A; only 1: intros; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: tauto).	0.797968864441	643
Coq.Logic.Classical_Prop.imply_to_and	40	7.1	search with cache (only 1: intros; only 1: tauto).	0.039265871048	29
Coq.Logic.Classical_Prop.or_to_imply	40	3.0.2.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: tauto).	0.1657371521	77
Coq.Logic.Classical_Prop.not_and_or	40	0.0.2.1	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0173189640045	7
Coq.Logic.Classical_Prop.or_not_and	40	7.0	search with cache (only 1: intros; only 1: tauto).	0.0291590690613	29
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.00905299186707	1
Coq.Logic.Classical_Prop.and_not_or	40	4.0.0	search with cache (only 1: simple induction 1; only 1: red; only 1: intuition).	0.0527219772339	33
Coq.Logic.Classical_Prop.imply_and_or	40	3.0.0.1.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intro; only 1: tauto).	0.112156867981	98
Coq.Logic.Classical_Prop.imply_and_or2	40	3.0	search with cache (only 1: intros; only 1: tauto).	0.012932062149	5
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	1.0.13	search with cache (only 1: intros [Hl Hr]; only 1: cbn; only 1: auto).	0.0511879920959	174
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).	0.0171852111816	9
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40	1.44.42	search with cache (only 1: unfold lt; only 1: fix le_div2 1; only 1: auto with arith).	18.5719671249	29359
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40	13.7	search with cache (only 1: split; only 1: firstorder).	2.06580615044	853
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	4.0.1.2.0.0.2.8.5.6.0	search with cache (only 1: split; only 1: red; only 1: intuition auto using guarded_fun_choice_imp_indep_of_general_premises, guarded_fun_choice_imp_fun_choice, fun_choice_and_indep_general_prem_imp_guarded_fun_choice; only 1: apply H; only 1: auto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: firstorder).	5.34484696388	16634
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	3.0.0.0.1.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: tauto).	0.128515958786	120
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	38.3	search with cache (only 1: intros; only 1: apply H).	11.3519191742	33704
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.0.0	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0129220485687	4
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.1.0	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0137901306152	5
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	14	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.948925971985	136
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	12.0.0.1.1	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: pose (T' := fun x y => forall x', R x x' -> T x' y); only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	12.6411690712	2145
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.11.0.0.0.2	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	7.64486193657	3711
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	1.0.0.0.9	search with cache (only 1: intros Ext A Ha; only 1: apply (Ext A True); only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.0657501220703	228
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	5	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.617211818695	13
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40	2.15.0	search with cache (only 1: intros ReprFunChoice P; only 1: fix gcd_divide 1; only 1: trivial).	0.34077000618	410
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.3.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0122549533844	8
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	0.0.2.3.0.0.2	search with cache (only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: trivial).	0.972753047943	1282
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	8	search with cache (only 1: CRelationClasses.simpl_crelation).	0.0601460933685	92
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	5.2.6	search with cache (only 1: intros op Hop; only 1: apply NNPP; only 1: firstorder).	0.764659881592	1482
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.2.0.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0831170082092	6
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	0.0.7.0.0.3.0.23.1	search with cache (only 1: inversion 1; only 1: destruct x as [| a l]; only 1: auto; only 1: right; only 1: inversion H; only 1: inversion H; only 1: constructor; only 1: assumption; only 1: tauto).	27.4113259315	49646
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0155529975891	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.2	search with cache (only 1: destruct 1; only 1: trivial).	0.00467491149902	4
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	1.0.2	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.00670003890991	6
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00594997406006	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00582885742188	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	2.0.5.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: clear H g; only 1: reflexivity).	0.0269839763641	65
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.00393605232239	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	search with cache (only 1: eauto using @functional_extensionality_dep).	0.00552797317505	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	5.0.0	search with cache (only 1: intros; only 1: intros p q; only 1: eauto using @functional_extensionality_dep).	0.00782990455627	11
Coq.Logic.HLevels.false_hprop	40	5.13	search with cache (only 1: intros p q; only 1: destruct p, q).	0.033900976181	390
Coq.Logic.HLevels.true_hprop	40	5.3.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.00799083709717	35
Coq.Logic.HLevels.not_hprop	40	3.0.3.4.0	search with cache (only 1: intros p q; only 1: intro H1; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).	0.0439889431	301
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	6.0.38.6	search with cache (only 1: intros Descr EM P; only 1: apply epsilon_imp_constructive_indefinite_description; only 1: exact epsilon_statement; only 1: firstorder).	13.7287638187	25482
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.12	search with cache (only 1: destruct 1; only 1: auto).	0.0381970405579	135
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0112569332123	3
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0122628211975	5
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.5.1.0.7.3	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.422447919846	1419
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0115468502045	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0101652145386	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.3.0.0.2.1	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.0833849906921	118
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.4.2.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.016811132431	13
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.0.3.0.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: destruct H; only 1: reflexivity).	0.0202009677887	20
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	1.1.2	search with cache (only 1: red; only 1: intros; only 1: auto).	0.0114378929138	7
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	10.0.2	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.098582983017	297
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	1.2.0.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: intro Streicher_K; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.03489112854	40
Coq.Logic.EqdepFacts.f_eq_dep	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0111629962921	2
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.7.4	search with cache (only 1: intros A C h1 h2; only 1: intros * []; only 1: trivial).	0.0419759750366	146
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	search with cache (only 1: intros * []; only 1: trivial).	0.00979518890381	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	6.0	search with cache (only 1: intros Ext A B Equiv; only 1: auto).	0.00935292243958	21
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	4	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.472965955734	5
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.0.0.1.2.0	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: auto; only 1: intro H1; only 1: elim H1).	0.010143995285	29
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	0.8.12	search with cache (only 1: intro H; only 1: destruct H; only 1: auto).	0.168982028961	592
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	0.8.1.0.4.2.1	search with cache (only 1: intro A; only 1: unfold not; only 1: destruct 1; only 1: auto; only 1: intro H1; only 1: apply False_rec; only 1: auto).	0.475620031357	2718
Coq.Logic.Decidable.dec_True	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.00938391685486	3
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00840306282043	2
Coq.Logic.Decidable.dec_or	40	7.2	search with cache (only 1: unfold decidable, not; only 1: tauto).	0.044842004776	68
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0296289920807	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0149080753326	2
Coq.Logic.Decidable.dec_imp	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0225651264191	3
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0912730693817	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0119268894196	2
Coq.Logic.Decidable.not_or	40	1	search with cache (only 1: tauto).	0.0143098831177	2
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0246579647064	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0239861011505	2
Coq.Logic.Decidable.imp_simp	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0206480026245	3
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0536389350891	2
Coq.Logic.Decidable.not_true_iff	40	0.0.1	search with cache (only 1: split; only 1: tauto; only 1: auto).	0.0101158618927	4
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00935101509094	1
Coq.Logic.Decidable.not_not_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0162250995636	3
Coq.Logic.Decidable.contrapositive	40	0.1.1.0	search with cache (only 1: unfold decidable; only 1: split; only 1: tauto; only 1: auto).	0.0153241157532	6
Coq.Logic.Decidable.or_not_l_iff_1	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0305759906769	3
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0240368843079	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0229887962341	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0236020088196	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0252799987793	2
Coq.Logic.Decidable.not_or_iff	40	3	search with cache (only 1: tauto).	0.0260298252106	31
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.0150010585785	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0304172039032	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0303819179535	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0.0.0.4	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0150861740112	9
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.103928089142	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	19.1.0.5	search with cache (only 1: induction s; only 1: auto; only 1: simpl; only 1: intuition_in).	13.7744789124	6731
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: auto; only 1: simpl; only 1: ok).	0.0269482135773	6
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.672990083694	661
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.00978088378906	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0108151435852	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0251839160919	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	9	search with cache (only 1: ok).	0.0322949886322	26
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	6	search with cache (only 1: exact (rmatch _ _ _)).	0.0121991634369	7
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0101449489594	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.0.2.0.0	search with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.167608976364	7
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	8	search with cache (only 1: firstorder).	0.00991296768188	9
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	0.2	search with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0405240058899	12
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0146491527557	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0125939846039	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	5.37.3	search with cache (only 1: intros p; only 1: destruct p; only 1: now auto).	6.72821807861	5934
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.1.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.130167961121	9
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	0.6.1.15.20	search with cache (only 1: destruct 1; only 1: destruct l as [| [| ] ll lx lr]; only 1: auto; only 1: destruct 1; only 1: auto).	4.05145406723	8436
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.0.28.3.2	search with cache (only 1: intros H; only 1: invrb; only 1: destruct H; only 1: eauto; only 1: eauto).	1.10085511208	2839
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	1.27.1.0.0	search with cache (only 1: destruct 1; only 1: auto; only 1: invrb; only 1: destruct H; only 1: invrb).	3.56456518173	14133
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0294029712677	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.5.1.1.0.9	search with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	1.69156312943	1866
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	1.0.0.1.1.0.0.0.1.1.0.0.4	search with cache (only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: auto).	10.5271658897	2945
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	0.1.0.1.9.2.12	search with cache (only 1: induction s; only 1: now constructor; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	31.5276470184	21664
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.1.0.0.0.1	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: descolor; only 1: intuition; only 1: intuition).	0.0274889469147	9
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1.0	search with cache (only 1: invrb; only 1: intuition).	0.185705900192	27
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0.0.2	search with cache (only 1: constructor; only 1: auto; only 1: simpl; only 1: auto).	0.0182750225067	6
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	1.0.2.0.0	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.0241849422455	8
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	4.17.2	search with cache (only 1: induction s; only 1: ok; only 1: ok).	1.19545197487	1398
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.2.1.2	search with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).	0.0235648155212	9
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0199060440063	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.5.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.937361001968	469
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0374979972839	10
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.6.2.0.0.0.0	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite !rev_elements_rev; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	3.63845300674	2333
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.1.0.0.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0315170288086	9
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	0.0.0.0.4.8.1.2	search with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: intros (s, Hs) (t, Ht); only 1: ok; only 1: intros; only 1: auto_tc; only 1: intros; only 1: auto_tc).	10.9020159245	9115
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.042592048645	3
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	2.7	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.204699993134	131
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.0	search with cache (only 1: intros n; only 1: now destruct n).	0.0184359550476	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	7.8	search with cache (only 1: repeat red; only 1: firstorder).	0.133487939835	150
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	7.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0264551639557	11
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	1.3.4	search with cache (only 1: intuition; only 1: repeat red; only 1: intuition).	0.0689640045166	46
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	8.4.5	search with cache (only 1: intro n; only 1: fix even_spec 1; only 1: trivial).	6.27110600471	3777
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	4.3.5.3.1	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: fix even_spec 1; only 1: trivial; only 1: fix odd_spec 1; only 1: trivial).	19.56813097	8890
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	4.3.3.5.12.16	search with cache (only 1: intro H; only 1: intros x y z; only 1: intro; only 1: intuition; only 1: subst; only 1: easy || now destruct y).	35.1714398861	30650
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.0.0.0.0.1.7	search with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.31118202209	714
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.4	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.0742781162262	35
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40	2.0.2	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0634560585022	40
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.2	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.040981054306	23
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	0.0.0.4	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0296359062195	16
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0241811275482	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0229198932648	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0231609344482	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.24	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).	25.7194051743	26088
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	1.0.0.1.3	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: reflexivity).	0.0399270057678	11
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	0.0.12	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	12.600466013	4439
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40	4.16.9.3	search with cache (only 1: intros; only 1: generalize 1 as j; only 1: fix sqrtrem_spec 1; only 1: auto).	8.83234381676	7191
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	1.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0294110774994	4
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	1.5.7.2	search with cache (only 1: intros x y z; only 1: revert z; only 1: fix sqrtrem_spec 1; only 1: auto).	0.61621594429	464
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40	13.10	search with cache (only 1: intro; only 1: now rewrite H).	0.873510122299	920
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0973949432373	3
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.2.2	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.116091966629	7
Coq.MSets.MSetFacts.WFactsOn.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	0.1	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.116878032684	12
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0999360084534	3
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.100388050079	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0981450080872	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.3.0	search with cache (only 1: intros E; only 1: rewrite inter_spec; only 1: auto).	0.106705904007	6
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.3	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.144492864609	19
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.1	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.128880023956	12
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.1.2.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.267304897308	22
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.2.0.0	search with cache (only 1: intros P; only 1: intuition; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.124381065369	7
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	1.2.0	search with cache (only 1: intros E; only 1: rewrite E; only 1: auto with relations).	0.104061841965	6
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	1.0	search with cache (only 1: symmetry; only 1: intuition).	0.105834007263	3
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40	0.0.2.0.11.7.6.6.5	search with cache (only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition; only 1: inversion H; only 1: absurd (false = true); only 1: auto with bool; only 1: inversion H; only 1: apply <- mem_spec; only 1: auto).	8.70264601707	9099
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	10	search with cache (only 1: intuition).	0.244616985321	47
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	1.6	search with cache (only 1: symmetry; only 1: intuition).	0.112618207932	9
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	1.10	search with cache (only 1: symmetry; only 1: intuition).	0.223805904388	47
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	0.1	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.099240064621	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	0.10	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.579765081406	79
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	1.1.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.215589046478	8
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.5	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.229635000229	21
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	0.4.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.224740028381	26
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.1149559021	2
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.117429971695	3
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	0	search with cache (only 1: intuition).	0.093465089798	1
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	2.10775589943	196
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40	0.1.0.0.3.1	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	6.8515651226	911
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	1.9.3	search with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hx; only 1: auto).	8.64984893799	311
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	4	search with cache (only 1: firstorder).	0.193728923798	14
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40	0.3.2.6.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite remove_spec; only 1: rewrite remove_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	7.00624608994	1278
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	3.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.311635971069	37
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	11.6.0	search with cache (only 1: split; only 1: congruence; only 1: firstorder).	0.990674972534	683
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	5	search with cache (only 1: firstorder).	0.33962893486	54
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.169169187546	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.167484045029	4
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.220992803574	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.1.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.17195892334	4
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.2.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.234652042389	5
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.141961097717	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.219990968704	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	0	search with cache (only 1: firstorder).	0.0483949184418	1
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	1	search with cache (only 1: intuition).	0.0826671123505	2
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	0.0	search with cache (only 1: intuition; only 1: fsetdec).	0.111559867859	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0609300136566	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0868408679962	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0863537788391	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0722098350525	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0633149147034	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.119338035583	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	0	search with cache (only 1: fsetdec).	0.153205871582	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	5.2.0	search with cache (only 1: intuition; only 1: red; only 1: fsetdec).	0.2501308918	19
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0867719650269	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0941121578217	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.1.1.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.250495910645	6
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0962300300598	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0835280418396	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	0	search with cache (only 1: fsetdec).	0.131407976151	1
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	1	search with cache (only 1: fsetdec).	0.207643985748	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	2.2.0	search with cache (only 1: intuition; only 1: red; only 1: fsetdec).	0.333678007126	19
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.172770023346	1
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.151235818863	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.175816059113	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	1	search with cache (only 1: fsetdec).	0.163185119629	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.290884971619	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	1	search with cache (only 1: fsetdec).	0.13128900528	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.113518953323	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.172099113464	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.135038137436	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.190312147141	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.125014066696	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.207628011703	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.280832052231	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.283085107803	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0743179321289	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0873529911041	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.147362947464	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.101454019547	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.100876092911	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.113003015518	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.124572992325	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	0.1	search with cache (only 1: rewrite union_spec; only 1: intuition).	0.154835939407	12
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	0	search with cache (only 1: fsetdec).	0.119561910629	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.113844156265	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.169122934341	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.132486104965	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.14883184433	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.202392101288	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.207555055618	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	1.1	search with cache (only 1: intuition; only 1: fsetdec).	0.196305036545	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.168906927109	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0893049240112	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.105810165405	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0698840618134	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0712850093842	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0906419754028	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0922360420227	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.107939004898	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0800161361694	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.141252994537	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.17159986496	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.215216875076	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.314445972443	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	0.0.0.4	search with cache (only 1: red; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.101056098938	8
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	2.4.2	search with cache (only 1: intuition; only 1: expAdd; only 1: fsetdec).	0.665446043015	42
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.280055046082	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.4	search with cache (only 1: expAdd; only 1: fsetdec).	0.439489841461	13
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.325231075287	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.5	search with cache (only 1: expAdd; only 1: fsetdec).	0.743649959564	32
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	1.0.0.1.3	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: auto).	0.131639003754	22
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40	6.1.0.0.2.2	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto with relations; only 1: intros; only 1: fsetdec).	5.54355812073	1730
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.1.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0618419647217	4
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.1.16.1.1.6.6	search with cache (only 1: intuition; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	12.1180078983	15138
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.1.0.1	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.0642509460449	6
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	5.1.1.27.1	search with cache (only 1: intros; only 1: generalize (cardinal_inv_1 (s:=diff s' s)); only 1: rewrite <- union_inter_cardinal; only 1: do 3 rewrite cardinal_fold; only 1: auto with arith).	18.0202209949	9559
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	3.1	search with cache (only 1: symmetry; only 1: auto with set).	0.128219842911	36
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.2.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: expAdd; only 1: fsetdec).	0.143316984177	24
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.1.0.2.0.0.0.1.1.0.0.2	search with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto with set relations; only 1: auto).	14.1337099075	6982
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	search with cache (only 1: intros; only 1: auto with *).	0.105457782745	23
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0659470558167	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0625357627869	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	1.1.0.0.12	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto with *; only 1: eauto with *).	0.323189973831	238
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.11	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.531691789627	102
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.05619597435	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	1.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.158834218979	7
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0909109115601	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	1.2.2.0	search with cache (only 1: intros; only 1: apply <- mem_spec; only 1: apply -> elements_spec1; only 1: intuition).	0.0490019321442	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0270659923553	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	1.0.0.0.1.2	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: intuition).	0.215041875839	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.0910229682922	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.108444929123	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.177368879318	17
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set relations).	0.0150129795074	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0.0.0	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0489180088043	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.1.1	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.139944076538	24
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	5	search with cache (only 1: auto with set).	0.0150799751282	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	1.1.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.029736995697	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	0.3.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.0649390220642	19
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	1	search with cache (only 1: auto with set).	0.0148060321808	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	7.0	search with cache (only 1: intros; only 1: auto with set).	0.0446310043335	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	4.3.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0282011032104	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	3.0	search with cache (only 1: intros; only 1: auto with set relations).	0.0208339691162	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	4.0	search with cache (only 1: intros; only 1: auto with set relations).	0.0248398780823	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	0.0.7	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: rewrite remove_spec; only 1: intuition).	0.233510971069	24
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	0	search with cache (only 1: auto with set relations).	0.0166220664978	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	0.1.1.0.1.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: intuition; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.945641994476	126
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	0.0.0.1	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0500190258026	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	1	search with cache (only 1: auto with set).	0.0157551765442	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0228109359741	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0161089897156	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.016242980957	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0159618854523	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	1	search with cache (only 1: auto with set relations).	0.0154221057892	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0151319503784	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set relations).	0.0150101184845	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.014986038208	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0886361598969	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	0	search with cache (only 1: auto with set).	0.0154149532318	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0170760154724	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0157220363617	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0158560276031	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0156309604645	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0159859657288	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0156979560852	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.016049861908	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0151081085205	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0148129463196	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	2.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0570659637451	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0	search with cache (only 1: auto with set).	0.015410900116	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0172531604767	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0154819488525	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0151250362396	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0151100158691	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	0.0.0.1.1.4.2	search with cache (only 1: intros; only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: intuition; only 1: intuition; only 1: intuition).	4.01678085327	1024
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.023265838623	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40	0.0.0.0.0.13.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto with set; only 1: apply -> equal_spec; only 1: auto).	4.30229496956	1789
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.0536689758301	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.2.0.0.0.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto; only 1: auto with set relations; only 1: auto with set).	0.514955997467	191
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	1	search with cache (only 1: auto with set).	0.0145120620728	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	0.0605611801147	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	0.0580568313599	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.2.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with *; only 1: congruence; only 1: auto; only 1: auto).	0.382879018784	124
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1	search with cache (only 1: auto with set).	0.0175881385803	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	7.2	search with cache (only 1: red; only 1: solve_proper).	0.241536855698	50
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	3.0.0.0.0.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intuition).	0.0786662101746	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0230689048767	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	0.1.0.1.0.0.1	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).	0.0757551193237	12
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.1	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0340049266815	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	search with cache (only 1: intuition).	0.237164974213	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.105516910553	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.0155091285706	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.0549199581146	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0635659694672	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.145617961884	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	4.1	search with cache (only 1: intro; only 1: intuition).	0.0245838165283	16
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0376260280609	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	4.7	search with cache (only 1: red; only 1: fsetdec).	2.29269695282	917
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0546209812164	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0749671459198	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.10649394989	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0472679138184	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.146471977234	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.173419952393	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	1.13	search with cache (only 1: vm_compute; only 1: intuition).	1.5430059433	711
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	1	search with cache (only 1: fsetdec).	0.0820989608765	11
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	3	search with cache (only 1: fsetdec).	0.131906986237	20
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0438160896301	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	2.1.10	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: intuition).	0.821281194687	676
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	0.2.6	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: intuition_in).	0.327665090561	213
Coq.MSets.MSetGenTree.Props.isok_iff	40	2.0	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.00883197784424	4
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40	1.1.0.12	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: eauto).	1.09151911736	959
Coq.MSets.MSetGenTree.Props.In_compat	40	1.2.2.4.0.0.8	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: repeat red; only 1: intuition_in; only 1: subst; only 1: eauto).	5.73285508156	5301
Coq.MSets.MSetGenTree.Props.In_node_iff	40	5.1	search with cache (only 1: intros; only 1: intuition_in).	0.13104391098	27
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	3	search with cache (only 1: intuition_in).	0.0685060024261	30
Coq.MSets.MSetGenTree.Props.lt_leaf	40	2.11.1	search with cache (only 1: intros n; only 1: repeat red; only 1: intuition_in).	0.248908996582	391
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0111379623413	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.2.4	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.0850620269775	35
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.1.6.4	search with cache (only 1: intros x y z; only 1: red; only 1: intuition_in; only 1: order).	0.961498975754	326
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.1.4	search with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).	0.0383279323578	24
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	3.0.2.0	search with cache (only 1: intros x y z; only 1: intro H; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: eauto).	0.0195300579071	9
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0110111236572	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.0094039440155	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	9.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	6.09450817108	3746
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0375819206238	19
Coq.MSets.MSetGenTree.Props.empty_spec	40	0.0.3	search with cache (only 1: red; only 1: intros; only 1: auto).	0.0384328365326	19
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	search with cache (only 1: auto).	0.00644588470459	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	6.2	search with cache (only 1: fix even_spec 1; only 1: auto).	0.122323989868	107
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.1.9	search with cache (only 1: functional induction max_elt s; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	18.824944973	7192
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40	3.20	search with cache (only 1: fix odd_spec 1; only 1: auto).	17.3654999733	13111
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	1	search with cache (only 1: firstorder).	0.0250318050385	2
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	27	search with cache (only 1: firstorder).	0.260287046432	453
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40	3.4.0.3.4.0.5.8.0	search with cache (only 1: intros x x' Ex s s' Es; only 1: compute in *; only 1: split; only 1: setoid_rewrite Ex; only 1: intuition; only 1: firstorder; only 1: setoid_rewrite Ex; only 1: intuition; only 1: firstorder).	33.7358620167	18057
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	10.21	search with cache (only 1: intro H; only 1: firstorder  (subst; auto)).	6.266507864	9733
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0	search with cache (only 1: intros; only 1: Dec.fsetdec).	0.0318930149078	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	2.0	search with cache (only 1: intros n m; only 1: now Nat_as_OT.nzsimpl).	0.0737690925598	4
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.2.10.0.4	search with cache (only 1: red; only 1: intuition; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec).	3.30167794228	1854
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	0.1.2.2	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: subst; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.416778087616	26
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	0.12	search with cache (only 1: fix odd_spec 1; only 1: auto).	2.82589507103	647
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40	3.0.2	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	0.0418779850006	41
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.0.1.1.0.0.2.0.0.0.0.2	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	10.3470702171	5079
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	2	search with cache (only 1: intuition).	0.0139150619507	3
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	0.0.1.0.0.0	search with cache (only 1: unfold singleton; only 1: split; only 1: intuition; only 1: inv; only 1: auto; only 1: intuition).	0.184472084045	7
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	0.1	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.0131938457489	3
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.5.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.0195028781891	10
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40	4.3	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.0521121025085	36
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	1.6	search with cache (only 1: intros; only 1: intuition).	0.125645160675	84
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	3	search with cache (only 1: auto).	0.0105187892914	4
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	0.1	search with cache (only 1: intros; only 1: auto).	0.0124249458313	3
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40	0.8.4.0.0.2.0.5	search with cache (only 1: induction s; only 1: simpl; only 1: intros; only 1: discriminate; only 1: simpl; only 1: intros l; only 1: inversion 1; only 1: auto).	12.8408098221	7160
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	1.0.0.0.1.0.2.3	search with cache (only 1: unfold Empty, empty; only 1: destruct s; only 1: intros; only 1: intro; only 1: inv; only 1: simpl; only 1: intros; only 1: discriminate).	1.78506493568	1276
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	2	search with cache (only 1: auto).	0.00984382629395	3
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40	0.7.3	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: auto).	1.01173210144	368
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	2	search with cache (only 1: tauto).	0.00679898262024	3
Coq.MSets.MSetList.MakeRaw.mem_spec	40	0.0.0.24	search with cache (only 1: fix even_spec 1; only 1: intros x l; only 1: intro H; only 1: auto).	9.97072911263	10091
Coq.MSets.MSetList.MakeRaw.add_inf	40	1.0.20	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.79131984711	1731
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.0.0.0.1.1.0.1.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	11.4783008099	1925
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	3	search with cache (only 1: intuition).	0.0100891590118	4
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	0.1.1.16	search with cache (only 1: unfold singleton; only 1: intros; only 1: rewrite InA_cons, InA_nil; only 1: tauto).	2.08738279343	2240
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0540060997009	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0	search with cache (only 1: auto).	0.010057926178	1
Coq.MSets.MSetList.MakeRaw.empty_spec	40	1.3.0.6	search with cache (only 1: red; only 1: unfold not; only 1: intros a H; only 1: inversion_clear H).	0.336558103561	143
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40	7.2	search with cache (only 1: fix even_spec 1; only 1: assumption).	0.01979804039	31
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	0.0.2	search with cache (only 1: split; only 1: trivial; only 1: trivial).	0.014212846756	5
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	0.0.1.0.0.0.0.1.0.6	search with cache (only 1: intro l; only 1: intro H; only 1: induction l as [| x xs]; only 1: constructor; only 1: change_no_check (inf x xs && isok xs = true) in H; only 1: rewrite andb_true_iff, <- inf_iff in H; only 1: destruct H; only 1: constructor; only 1: tauto; only 1: tauto).	0.797960042953	677
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0161800384521	3
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40	0.2.2.9.0.0.1.6	search with cache (only 1: induction s; only 1: intros; only 1: discriminate; only 1: simpl; only 1: injection 1; only 1: intros; only 1: subst; only 1: auto).	17.4511909485	12953
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	0.0.2.3	search with cache (only 1: destruct s; only 1: easy; only 1: simpl; only 1: inversion 1).	0.382578134537	85
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0108869075775	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: reflexivity).	0.00805497169495	2
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	1.3.8.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: split; only 1: now rewrite Hxx', Hyy'; only 1: now rewrite Hxx', Hyy').	0.465939044952	450
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	0.2.13.5.14	search with cache (only 1: let rec induction2 := let rec inv := let rec inv_ok := match goal with | H:Sorted X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:Sorted X.lt nil |- _ => clear H; inv_ok | H:Sorted X.lt ?l |- _ => change_no_check (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end in invlist InA; inv_ok; invlist HdRel in simple induction s; [ simpl; auto; try (solve [ intros; inv ]) | intros x l Hrec; simple induction s'; [ simpl; auto; try (solve [ intros; inv ]) | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ] ] in induction2; only 1: intro H; only 1: induction H; only 1: auto with *; only 1: auto).	24.7239289284	33799
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.00570106506348	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.1.0.0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.00894093513489	9
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	1.0.0.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: auto with sets).	0.00829195976257	7
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	0.0.15.4.10	search with cache (only 1: intro y0; only 1: intro; only 1: right with y; only 1: assumption; only 1: constructor).	0.201935052872	1145
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.2.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.00805687904358	7
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40	0.0.1.0.0.6.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.7.0	search with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: assumption; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1 as [? ?| ]; only 1: constructor 2; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).	24.9849569798	89797
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	1.0.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).	0.0069420337677	6
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40	0.1.0.0.0.5.1.0.0.1.0.0.0.0.0.0.5.0	search with cache (only 1: split; only 1: induction 1; only 1: right with x; only 1: auto; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	19.7301571369	65910
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.1.2.0.0.0.0.1.0	search with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	2.19453501701	7175
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	0.1.3.0.4	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto with sets).	0.0496881008148	176
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	1.1.0.0.2.1.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: assumption; only 1: constructor 3; only 1: auto with sets).	0.753561973572	1997
Coq.Relations.Operators_Properties.clos_rstn1_trans	40	1.0.1.0.0.7.11.0.2.2	search with cache (only 1: intros x y H; only 1: destruct 1; only 1: auto; only 1: induction 1 as [? ?| ]; only 1: right with y; only 1: tauto; only 1: auto with sets; only 1: right with y0; only 1: eauto; only 1: eauto).	2.35951900482	10673
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40	0.0.1.0.1.5.0.0.5.7.0.5.0	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: auto with sets; only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: auto).	12.2976861	62327
Coq.Relations.Relations.inverse_image_of_equivalence	40	1.9.2.6.0.5.2.4.6	search with cache (only 1: intros x y H; only 1: destruct 1; only 1: split; only 1: red; only 1: eauto; only 1: red; only 1: eauto; only 1: red; only 1: eauto).	3.92513585091	21735
Coq.Relations.Relations.inverse_image_of_eq	40	0.3.0.4.2.0.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: auto; only 1: destruct 1; only 1: trivial).	0.0772731304169	329
Coq.Sets.Uniset.leb_refl	40	3	search with cache (only 1: destr_bool).	0.0106430053711	18
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00788187980652	5
Coq.Sets.Uniset.seq_refl	40	1	search with cache (only 1: auto).	0.0050528049469	2
Coq.Sets.Uniset.seq_trans	40
Coq.Sets.Uniset.seq_sym	40	0.1.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: intros; only 1: auto).	0.00724196434021	6
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.00588178634644	3
Coq.Sets.Uniset.union_empty_right	40	9.1.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destr_bool; only 1: intuition).	0.295994997025	710
Coq.Sets.Uniset.union_comm	40	1.13.3.1	search with cache (only 1: unfold seq; only 1: simpl; only 1: destruct y; only 1: intuition).	1.45959401131	4538
Coq.Sets.Uniset.union_ass	40	5.3.1.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destr_bool; only 1: auto with bool).	1.0695669651	2206
Coq.Sets.Uniset.seq_left	40	2.1.7.0	search with cache (only 1: unfold seq; only 1: destr_bool; only 1: rewrite H; only 1: reflexivity).	0.758083105087	1476
Coq.Sets.Uniset.seq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0151660442352	10
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	0.243134021759	258
Coq.Sets.Multiset.meq_refl	40	6	search with cache (only 1: firstorder).	0.0180680751801	28
Coq.Sets.Multiset.meq_trans	40	3.4.0.7.0	search with cache (only 1: destruct x; only 1: intros; only 1: unfold meq; only 1: intros; only 1: now rewrite H).	16.6912240982	2339
Coq.Sets.Multiset.meq_sym	40	0.0.2.2.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: intros; only 1: rewrite H; only 1: auto).	0.0143451690674	9
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0096800327301	3
Coq.Sets.Multiset.munion_empty_right	40	1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0103430747986	5
Coq.Sets.Multiset.munion_comm	40	1.0.13.2	search with cache (only 1: destruct x; only 1: fix even_spec 1; only 1: unfold meq; only 1: auto).	2.90097403526	5421
Coq.Sets.Multiset.munion_ass	40	5.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto with arith).	0.0222849845886	15
Coq.Sets.Multiset.meq_left	40	1.0.0.6	search with cache (only 1: intros a b c Ha Hb; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto with arith).	0.418159008026	360
Coq.Sets.Multiset.meq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.100434064865	10
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	0.3.4.1.0	search with cache (only 1: unfold meq; only 1: intros; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto with arith).	0.909862995148	1018
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	0.0230031013489	10
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: exact PeanoNat.Nat.le_refl).	0.0149261951447	1
Coq.Sets.Integers.le_antisym	40	4.0.0	search with cache (only 1: red; only 1: intros x y; only 1: auto with arith).	0.031142950058	7
Coq.Sets.Integers.le_trans	40	2	search with cache (only 1: exact PeanoNat.Nat.le_trans).	0.0484480857849	53
Coq.Sets.Integers.le_Order	40	0.0.4.0.0.1	search with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: exact PeanoNat.Nat.le_trans; only 1: red; only 1: PeanoNat.Nat.order).	0.161375999451	142
Coq.Sets.Integers.triv_nat	40	10.3	search with cache (only 1: intros; only 1: easy || now symmetry in HR).	0.391605854034	256
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40	0.2.0.12.0.3.4.34	search with cache (only 1: constructor; only 1: intro H'0; only 1: intros n m; only 1: intro; only 1: elim (le_lt_dec n m); only 1: auto; only 1: intro; only 1: intuition PeanoNat.Nat.order).	17.732542038	17369
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.9.15.2	search with cache (only 1: intros; only 1: intros A C h1 h2; only 1: apply h1; only 1: auto).	0.307365179062	2440
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	2.3.0.1.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: intros x y h; only 1: auto  10 with sets).	0.265316963196	494
Coq.Sets.Relations_1_facts.contains_is_preorder	40	7	search with cache (only 1: auto  10 with sets).	0.0107319355011	37
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	1.0.1.3.1.9.0.1	search with cache (only 1: split; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [? ?] [? ?]; only 1: auto  10 with sets; only 1: unfold Symmetric, Complement; only 1: intros A B [H1 H2]; only 1: auto  10 with sets).	1.30298113823	4156
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.4.8	search with cache (only 1: red; only 1: destruct 1; only 1: auto  10 with sets).	0.19100689888	465
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.00672292709351	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0067720413208	2
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	2.0.1.1	search with cache (only 1: red; only 1: compute; only 1: intros; only 1: left).	0.0062940120697	25
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto with sets).	0.00357007980347	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40	1.0.0.3.0.1.12.0.3.0.1	search with cache (only 1: intros U R; only 1: red; only 1: intro T; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: intro h; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	3.92620897293	32819
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.1.12.1.0.1.4.1.0	search with cache (only 1: intuition; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	20.9367759228	84188
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.6.3.0.0.0.0	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	1.19364309311	4317
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	2.3.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.00760197639465	8
Coq.Sets.Permut.comm_left	40	1.4.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.00688314437866	8
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	3.0.0.1.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: trivial).	0.0187680721283	26
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.0.10.2	search with cache (only 1: intuition; only 1: exists x; only 1: auto with sets; only 1: auto with sets).	0.561461925507	673
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	0.17.3.2.6.0.1.2	search with cache (only 1: intro A; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: red; only 1: elim H; only 1: auto with sets).	26.0157690048	29638
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	7.5.1.9	search with cache (only 1: intros A x y H'; only 1: elim H'; only 1: intuition; only 1: firstorder).	5.35204100609	7694
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	1.7	search with cache (only 1: compute; only 1: intuition).	0.0441660881042	68
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00971913337708	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0	search with cache (only 1: auto with sets).	0.00937700271606	1
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40	0.3.0.0.2.1.4.8.2	search with cache (only 1: intro A; only 1: intros x H'; only 1: destruct 1; only 1: elim Inclusion_is_an_order; only 1: split; only 1: elim Inclusion_is_an_order; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	30.9393479824	25252
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40	4.4.1.6.5.1	search with cache (only 1: intro A; only 1: split; only 1: split; only 1: auto with sets; only 1: intros H'1 H'2; only 1: destruct 1).	14.3819258213	12112
Coq.Sets.Powerset.Union_minimal	40	2.2.1.2.0.9.1.0	search with cache (only 1: intros x y z H' H'0; only 1: red; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intuition; only 1: elim H1; only 1: auto with sets; only 1: auto with sets).	20.5548410416	18970
Coq.Sets.Powerset.Intersection_maximal	40	3.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0127799510956	11
Coq.Sets.Powerset.Union_increases_l	40	3.0.0.0	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: auto with sets).	0.0142319202423	19
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00946593284607	1
Coq.Sets.Powerset.Intersection_decreases_l	40	1.1.0.0.0.4	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.1929500103	118
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0115020275116	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	3.4.3	search with cache (only 1: intros A NI; only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).	1.10103082657	305
Coq.Sets.Classical_sets.Subtract_inv	40	4.2.6	search with cache (only 1: intro not_eq_b1_b2; only 1: destruct 1; only 1: auto  7 using Inhabited_Setminus with sets).	0.656980991364	755
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.2.2.0.2	search with cache (only 1: intro; only 1: red; only 1: intro H'; only 1: elim H'; only 1: auto  7 using Inhabited_Setminus with sets).	0.075248003006	77
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	4.5.1.2.4	search with cache (only 1: intros U R; only 1: intros x0 a H'1; only 1: red; only 1: exists a; only 1: auto with sets).	3.29149603844	13500
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	5.1.4	search with cache (only 1: red; only 1: intros A x y H'; only 1: firstorder).	0.807929039001	669
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.2.1.0.0	search with cache (only 1: intros A B x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0602369308472	16
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40	0.0.0.0.1.0.0.1.0.2.2.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: apply Setminus_intro; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	12.3788881302	7678
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.1.2.0.2.3.1.0.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	7.36289596558	8323
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40	0.0.1.0.0.0.0.0.0.3.1.0.2.1	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros t H'1 H'2; only 1: elim H'2; only 1: auto with sets).	31.567814827	27507
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0144109725952	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.19	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.509664058685	501
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0125420093536	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto with sets).	0.0144309997559	1
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0144989490509	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  9 with sets).	0.0182659626007	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.1.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.731451034546	1397
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	33.2556490898	48536
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.1.1.0.0.1.1.0.2.2.8	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets).	1.25272679329	1435
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.1.3.0.0.0.0.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	8.59111499786	9032
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	15.0.0.4	search with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  10 with sets).	1.82880496979	2340
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.2.0.0.4.1.1.10.1.3.3.2	search with cache (only 1: unfold Add at 1; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: red; only 1: intuition; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: trivial; only 1: intros x2 H'1; only 1: elim H'1; only 1: intuition).	22.4522800446	34216
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	1.7.0.1	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	0.31790804863	302
Coq.Sets.Powerset_facts.incl_add	40	0.1	search with cache (only 1: unfold Add; only 1: auto with sets).	0.0514309406281	3
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	3.3	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.250253915787	77
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40	2.0.2.5.0.1.5	search with cache (only 1: intros A a b H' H'0; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: split; only 1: auto with sets; only 1: generalize H'0; only 1: auto  7 with sets).	10.8416419029	10815
Coq.Sets.Powerset_facts.setcover_intro	40	1	search with cache (only 1: intuition).	0.0136301517487	2
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: red; only 1: intros x H'; only 1: elim H').	0.019905090332	27
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0139980316162	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.0.5.1.1.1.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.670722007751	954
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: assumption; only 1: intuition).	0.0185329914093	12
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.1.1.3.0.3.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: inversion_clear H1; only 1: exfalso; only 1: intuition; only 1: intuition).	0.665515184402	916
Coq.Sets.Constructive_sets.Extension	40	14.3.14.3.1.18.1	search with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: split; only 1: intro H; only 1: auto; only 1: intro H; only 1: auto).	6.11918401718	74668
Coq.Sets.Constructive_sets.Noone_in_empty	40	8	search with cache (only 1: destruct 1).	0.00858092308044	18
Coq.Sets.Constructive_sets.Included_Empty	40	1.1.0.0	search with cache (only 1: red; only 1: red; only 1: intro A; only 1: destruct 1).	0.00577402114868	6
Coq.Sets.Constructive_sets.Add_intro1	40	2.12.1.0	search with cache (only 1: intro; only 1: intro; only 1: left; only 1: trivial).	0.682946920395	4702
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00531196594238	2
Coq.Sets.Constructive_sets.Inhabited_add	40	3.9.4.6.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	0.442579030991	3921
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	0.0.0	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: trivial).	0.00906896591187	3
Coq.Sets.Constructive_sets.Singleton_intro	40	0.1.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.00608897209167	4
Coq.Sets.Constructive_sets.Union_inv	40	0.0.3.6	search with cache (only 1: intros x H'0; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.133100032806	253
Coq.Sets.Constructive_sets.Add_inv	40	5.14.2.0.3.0	search with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	14.9963638783	46425
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.00570201873779	3
Coq.Sets.Constructive_sets.Couple_inv	40	0.1.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.00741004943848	5
Coq.Sets.Constructive_sets.Setminus_intro	40	0.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.00574684143066	2
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.00580382347107	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.3.2	search with cache (only 1: intros x H; only 1: apply H; only 1: trivial with sets).	0.0126979351044	45
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	0.0.12.5.10	search with cache (only 1: intro X; only 1: intros x H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	6.26478791237	11551
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	0.1.5	search with cache (only 1: induction 1; only 1: auto; only 1: auto with sets).	0.0172030925751	58