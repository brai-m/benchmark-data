File "./Streams.v", line 95, characters 0-19:
Error:
Anomaly
"Typing failure of the following tactic:
synth with cache (only 1: intros [Hl Hr]; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: destruct H; only 1: reflexivity; only 1: auto).
Typing error:
Recursive definition of EqSt_reflex is ill-formed.
In environment
A : Type
s1 : Stream
a : A
s : Stream
Hl : A
Hr : Stream
EqSt_reflex :
forall s2 : Stream, EqSt (Cons Hl Hr) s2 -> EqSt s2 (Cons Hl Hr)
s2 : Stream
e : EqSt (Cons Hl Hr) s2
Invalid recursive call in the argument of "match" in "match
                                                 EqSt_reflex s2 e
                                                 with
                                                 | eqst _ _ x x0 =>
                                                 (fun
                                                 (_ : 
                                                 hd s2 = hd (Cons Hl Hr))
                                                 (H : 
                                                 EqSt 
                                                 (tl s2) 
                                                 (tl (Cons Hl Hr))) => H) x
                                                 x0
                                                 end".
Recursive definition is: "fun (s2 : Stream) (H : EqSt (Cons Hl Hr) s2) =>
                          eqst s2 (Cons Hl Hr)
                            match H with
                            | eqst _ _ x x0 =>
                                (fun (H0 : hd (Cons Hl Hr) = hd s2)
                                   (_ : EqSt (tl (Cons Hl Hr)) (tl s2)) =>
                                 let a := hd s2 in
                                 match
                                   H0 in (_ = a0)
                                   return (a0 = hd (Cons Hl Hr))
                                 with
                                 | eq_refl => eq_refl
                                 end) x x0
                            end
                            (let H0 :
                               forall s3 : Stream,
                               EqSt (Cons Hl Hr) s3 ->
                               EqSt (tl s3) (tl (Cons Hl Hr)) :=
                               fun (s3 : Stream) (H0 : EqSt (Cons Hl Hr) s3)
                               =>
                               match EqSt_reflex s3 H0 with
                               | eqst _ _ x x0 =>
                                   (fun (_ : hd s3 = hd (Cons Hl Hr))
                                      (H1 : EqSt (tl s3) (tl (Cons Hl Hr)))
                                    => H1) x x0
                               end in
                             H0 s2 H)"."
Please report at http://coq.inria.fr/bugs/.

File "./Streams.v", line 167, characters 0-31:
Error:
Anomaly
"Typing failure of the following tactic:
synth with cache (only 1: intro H1; only 1: coinduction ltac:(Eq_trans); only 1: auto; only 1: auto).
Typing error:
Recursive definition of Eq_trans is ill-formed.
In environment
A : Type
P, Inv : Stream -> Prop
InvThenP : forall x : Stream, Inv x -> P x
InvIsStable : forall x : Stream, Inv x -> Inv (tl x)
H1 : Stream
Eq_trans : Inv H1 -> ForAll H1
i : Inv H1
Invalid recursive call in the argument of "match" in "match Eq_trans i with
                                                 | HereAndFurther x x0 =>
                                                 (fun 
                                                 (_ : P H1)
                                                 (H : ForAll (tl H1)) => H) x
                                                 x0
                                                 end".
Recursive definition is: "fun H : Inv H1 =>
                          HereAndFurther (InvThenP H)
                            (let H0 : Inv H1 -> ForAll (tl H1) :=
                               fun H0 : Inv H1 =>
                               match Eq_trans H0 with
                               | HereAndFurther x x0 =>
                                   (fun (_ : P H1) (H1 : ForAll (tl H1)) =>
                                    H1) x x0
                               end in
                             H0 H)"."
Please report at http://coq.inria.fr/bugs/.

File "./ssrbool.v", line 658, characters 7-26:
Error: Anomaly "tclZERO receiving critical error: Timeout!"
Please report at http://coq.inria.fr/bugs/.

File "./ssrbool.v", line 693, characters 7-41:
Error: Anomaly "tclZERO receiving critical error: Timeout!"
Please report at http://coq.inria.fr/bugs/.

File "./ssrbool.v", line 825, characters 0-45:
Error: Anomaly "tclZERO receiving critical error: Timeout!"
Please report at http://coq.inria.fr/bugs/.

File "./ssrbool.v", line 2205, characters 7-47:
Error: Anomaly "tclZERO receiving critical error: Timeout!"
Please report at http://coq.inria.fr/bugs/.

File "./ssrbool.v", line 2209, characters 7-47:
Error: Anomaly "tclZERO receiving critical error: Timeout!"
Please report at http://coq.inria.fr/bugs/.

File "./Streams.v", line 200, characters 0-11:
Error:
Anomaly
"Typing failure of the following tactic:
synth with cache (only 1: intros H; only 1: constructor; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: apply H0; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: apply H0; only 1: intros [Hl Hr]; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(Eq_sym); only 1: assumption).
Typing error:
Recursive definition of ForAll_coind is ill-formed.
In environment
A, B : Type
f : A -> B
H : Stream B -> Prop
S : Stream A
ForAll_coind : ForAll (fun s : Stream A => H (map s)) S -> ForAll H (map S)
f0 : ForAll (fun s : Stream A => H (map s)) S
H1 :=
fun H0 : ForAll (fun s : Stream A => H (map s)) S =>
match ForAll_coind H0 with
| HereAndFurther _ x x0 =>
    (fun (_ : H (map S)) (H : ForAll H (tl (map S))) => H) x x0
end : ForAll (fun s : Stream A => H (map s)) S -> ForAll H (tl (map S))
ForAll_coind0 : ForAll (fun s : Stream A => H (map s)) S
Invalid recursive call in the argument of "match" in "match
                                                 ForAll_coind0
                                                 with
                                                 | HereAndFurther _ x x0 =>
                                                 (fun
                                                 (_ : 
                                                 (fun s : Stream A =>
                                                 H (map s)) S)
                                                 (H : 
                                                 ForAll
                                                 (fun s : Stream A =>
                                                 H (map s)) 
                                                 (tl S)) => H) x x0
                                                 end".
Recursive definition is: "HereAndFurther S
                            (let H1 : (fun s : Stream A => H (map s)) S :=
                               match f0 with
                               | HereAndFurther _ x x0 =>
                                   (fun
                                      (H0 : (fun s : Stream A => H (map s)) S)
                                      (_ : ForAll
                                             (fun s : Stream A => H (map s))
                                             (tl S)) => H0) x x0
                               end in
                             H1)
                            (let H1 :
                               ForAll (fun s : Stream A => H (map s)) (tl S) :=
                               match ForAll_coind0 with
                               | HereAndFurther _ x x0 =>
                                   (fun
                                      (_ : (fun s : Stream A => H (map s)) S)
                                      (H : ForAll
                                             (fun s : Stream A => H (map s))
                                             (tl S)) => H) x x0
                               end in
                             H1)"."
Please report at http://coq.inria.fr/bugs/.

File "./ssrbool.v", line 1714, characters 7-56:
Error: Anomaly "tclZERO receiving critical error: Timeout!"
Please report at http://coq.inria.fr/bugs/.

File "./ssrbool.v", line 1709, characters 7-45:
Error: Anomaly "tclZERO receiving critical error: Timeout!"
Please report at http://coq.inria.fr/bugs/.

File "./ChoiceFacts.v", line 482, characters 2-38:
Error: Anomaly "in retyping: Non-functional construction."
Please report at http://coq.inria.fr/bugs/.

File "./FSetBridge.v", line 376, characters 4-55:
Error: Anomaly "in retyping: unknown meta 86358."
Please report at http://coq.inria.fr/bugs/.

File "./PeanoNat.v", line 1098, characters 2-37:
Error:
Anomaly
"Typing failure of the following tactic:
synth with cache (only 1: intros HSE H0 HSO n HO%Odd_alt_Odd; only 1: apply Odd_alt_Even_alt_ind with Q; only 1: intros m HSE'%Even_alt_Even; only 1: auto; only 1: assumption; only 1: intros m HSO'%Odd_alt_Odd; only 1: auto; only 1: assumption).
Typing error:
Pattern-matching expression on an object of inductive type and has invalid information."
Please report at http://coq.inria.fr/bugs/.

File "./PeanoNat.v", line 1108, characters 2-39:
Error:
Anomaly
"Typing failure of the following tactic:
synth with cache (only 1: intros HSE H0 HSO n HE%Even_alt_Even; only 1: apply Even_alt_Odd_alt_ind with P; only 1: intros m HSE'%Even_alt_Even; only 1: auto; only 1: assumption; only 1: intros m HSO'%Odd_alt_Odd; only 1: auto; only 1: assumption).
Typing error:
Pattern-matching expression on an object of inductive type and has invalid information."
Please report at http://coq.inria.fr/bugs/.

File "./ClassicalFacts.v", line 652, characters 2-70:
Error: Anomaly "in retyping: Non-functional construction."
Please report at http://coq.inria.fr/bugs/.

