coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	1	0.000197	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	1	0.000496	2	1	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	1	0.000270	2	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	1	0.006363	57	1	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	1	0.001615	11	1	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	1	0.024468	285	1	1.0.2.0.1.0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	1	0.007442	26	1	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	1	0.073889	1040	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	1	0.082611	625	1	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	1	0.070083	842	1	9.9.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	1	0.444434	3464	1	10.10.0.10	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	1	0.002885	4	1	0.0.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	1	0.069672	582	1	1.1.11.0.1.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	1	0.206159	172	1	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: apply Hr; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	1	0.038885	41	1	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	1	0.025203	62	1	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	1	0.002890	3	1	1.0	synth with cache (only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	1	0.030795	80	1	1.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	1	0.015229	60	1	5.2	synth with cache (only 1: intro H1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	1	0.002419	2	1	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	1	0.130318	520	1	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	1	0.005941	16	1	1.3	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	1	0.003444	3	1	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	1	0.002290	2	1	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	1	0.002567	2	1	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	1	0.201315	1496	1	28.1	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	1	0.006666	10	1	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	1	0.003174	3	1	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	1	0.003024	3	1	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	1	0.003084	3	1	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	1	0.012739	12	1	0.1.1	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	1	0.002967	3	1	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	1	0.003994	3	1	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	1	0.026582	39	1	1.2.0.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 2; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	1	0.005281	5	1	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	1	0.007223	5	1	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	1	0.008949	6	1	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	1	0.148816	436	1	0.6.4.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	1	0.005891	9	1	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	1	0.003358	2	1	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	1	0.003543	2	1	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	1	0.003314	2	1	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	1	0.003296	2	1	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	1	0.033160	81	1	0.2.3.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	1	0.016791	42	1	0.1.5	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	1	0.003885	2	1	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	1	0.004461	3	1	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	1	0.020686	47	1	0.4	synth with cache (only 1: destruct H, 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	1	0.004181	5	1	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	1	0.003764	2	1	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	1	0.939550	8063	1	9.65.69.1.65.70	synth with cache (only 1: intros H ?; only 1: intro A; only 1: unfold f_equal; only 1: intros ? ? ? Fl Fr; only 1: destruct Fr; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	1	0.005272	2	1	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	1	0.098875	163	1	0.2.2.1	synth with cache (only 1: destruct e'; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	1	0.065391	42	1	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	1	0.064172	50	1	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	1	0.148323	1108	1	7.8.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	1	0.024223	104	1	0.0.5	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	1	0.051786	107	1	0.0.4.64	synth with cache (only 1: intros A P H; only 1: intro; only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	1	0.008108	4	1	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	1	0.107694	228	1	0.0.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	1	0.013370	2	1	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.id	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iff	1	0.301861	435	1	64.2.1.0.0.0.2	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: now N.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_double	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ	1	0.157741	144	1	1.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_add	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_sub	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_pred	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_compare	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_max	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iter	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	1	0.595815	1070	1	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	1	0.234635	113	1	129.0.0.0.512	synth with cache (only 1: repeat split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: auto with typeclass_instances).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_double	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	1	0.026901	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ	1	0.020410	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	1	0.033135	5	1	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_add	1	0.026455	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	1	0.624433	611	1	6.0.257	synth with cache (only 1: induction n as [| n IH]; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_mul	1	0.036210	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_div2	1	0.030487	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_compare	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_min	1	0.026129	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_max	1	0.093672	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iter	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	1	0.067692	48	1	64.0.2	synth with cache (only 1: red; only 1: red; only 1: Nat.auto').
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	1	0.096286	101	1	0.192.2	synth with cache (only 1: unfold permutation; only 1: intros H1 H2 n; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	1	0.138881	123	1	257.64.1	synth with cache (only 1: intros; only 1: repeat red; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	1	0.023798	4	1	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	1	0.742166	489	1	128.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: now elim H).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	1	0.028671	5	1	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor2	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.Rolle	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonneg_derivative_1	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.negative_derivative	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_ax	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_var	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF_var	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_loc	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_abs	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1b	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	1	0.240272	141	1	1.0.0.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.P0Z_correct	1	0.010775	5	1	64.0	synth with cache (only 1: intro; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rset	1	0.018819	6	1	1	synth with cache (only 1: apply ring_setoid).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rtheory	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.R_power_theory	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.norm_correct	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.mult_l_correct	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.check_correct	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	1	0.114076	315	1	0.0.0.0.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rri	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.R_one_zero	1	0.007452	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	1	0.095673	47	1	320.322	synth with cache (only 1: intros n1; only 1: apply Rmult_comm || assumption).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rdi	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qri	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Q_one_zero	1	0.007633	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qdi	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Z_one_zero	1	0.020042	4	1	0.2	synth with cache (only 1: intro EQ; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zcri	1	0.011412	2	1	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zdi	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rsth	1	0.108970	315	1	0.0.0.0.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rri	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.R_one_zero	1	0.007631	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rdi	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTCN_step1	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTC_Newton	1	0.030472	29	1	65.448.0.0	synth with cache (only 1: intros; only 1: destruct (Rle_dec a b) as [Hle| Hnle]; only 1: Nat.auto'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P3	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P5	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P6	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P2	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P3	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P4	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P7	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P8	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P9	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.atan_sub_correct	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3_7	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.PI_2_3_7_ineq	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ropp_div	1	0.022571	3	1	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_half_prf	1	0.153866	144	1	1	synth with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_lt	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Un_cv_ext	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_first_term_bound	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_CVU	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_abs	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_tan	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_increasing_interv	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_lower_bound	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_3_2	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_1	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_is_inj	1
