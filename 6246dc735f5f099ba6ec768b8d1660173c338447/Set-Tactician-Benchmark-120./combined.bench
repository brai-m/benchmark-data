coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	12.621376	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	12.719823	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	12.752238	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	12.777591	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	12.787277	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	12.776092	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	13.193928	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	13.185631	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	120	0.0.0.0.0.2	synth with cache (only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	13.266438	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.1.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	14.217746	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	2.616895	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	2.662883	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0.3.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: trivial).	15.456717	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	120	0.5.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	15.709775	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	120	0.13	synth with cache (only 1: subst; only 1: reflexivity).	3.861476	51
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	3.527658	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.624461	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	120	6.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H).	19.014685	65
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	120	0.0.0.0.2.5	synth with cache (only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	5.765392	56
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.13	synth with cache (only 1: subst; only 1: reflexivity).	4.553998	64
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	20.301780	113
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.1.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	6.028861	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	120	14.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: assumption).	8.000302	63
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	120	4.0	synth with cache (only 1: unfold all; only 1: auto).	4.622855	13
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	120	0.0.14.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	7.371633	66
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	120	0.10.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: assumption).	13.005143	175
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	120	0.8.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: assumption).	30.062699	344
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	120	10.1.9.2	synth with cache (only 1: destruct 1; only 1: constructor; only 1: exists x; only 1: trivial).	33.397130	844
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	120	6.0.0	synth with cache (only 1: intros; only 1: unfold all; only 1: auto).	7.955543	36
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	120	0.2.2.3	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct p; only 1: reflexivity).	7.338534	80
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	120	0.14.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim identity_sym with (1 := H0); only 1: trivial).	15.070239	82
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	120	10.0.0.10.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: split; only 1: intros ?; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: auto).	38.116200	684
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.2	synth with cache (only 1: destruct 1; only 1: trivial).	3.706247	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	120	0.19.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: assumption).	12.470114	99
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	120	0.9.10	synth with cache (only 1: simpl; only 1: destruct p; only 1: reflexivity).	41.406279	634
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	120	0.0.0.0.0.0.1.0.0.0.3.0	synth with cache (only 1: intros; only 1: destruct a; only 1: split; only 1: split; only 1: assumption; only 1: destruct b; only 1: split; only 1: assumption; only 1: split; only 1: split; only 1: assumption; only 1: assumption).	42.846763	258
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.1.1	synth with cache (only 1: intros ?; only 1: destruct H; only 1: auto).	4.692410	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.1.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: trivial).	3.382653	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.1.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct 1; only 1: trivial).	5.458134	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.1.5.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	5.472512	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	120	0.14.2	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	9.739357	282
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	120	10.8.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: trivial).	39.765740	1082
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.13.12	synth with cache (only 1: destruct 1; only 1: subst; only 1: reflexivity).	40.093693	1272
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	120	0.2.12.1.1.1.0.0.0.0	synth with cache (only 1: intros; only 1: destruct b2; only 1: destruct b1; only 1: split; only 1: destruct H; only 1: assumption; only 1: destruct H; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	59.312995	825
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	120	10.0.0.10.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: split; only 1: intros ?; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: auto).	62.175292	1471
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	10.17.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: trivial).	18.739088	207
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	120	0.0.0.0.3	synth with cache (only 1: intros; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	5.483634	27
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	10.3.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: trivial).	17.106033	401
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	120	1.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	3.613795	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	10.7.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: trivial).	23.128884	713
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	120	10.8.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: trivial).	39.522660	939
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	10.8.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: trivial).	22.618548	876
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	2.891590	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.163261	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.414682	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	120	2.6.0.4.0.3.7.0.12.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: split; only 1: trivial; only 1: intros ?; only 1: destruct H0; only 1: intros ?; only 1: destruct H; only 1: assumption).	94.581968	2938
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.636341	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	120	0.0.0.0.1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: destruct 1; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	104.266710	3145
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	120	1	synth with cache (only 1: reflexivity).	4.068419	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	3.299284	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	0.13.0.3	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct r; only 1: reflexivity).	7.345818	90
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	120	0.0.0.3	synth with cache (only 1: intros; only 1: destruct n; only 1: auto; only 1: auto).	4.308850	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	2.487046	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	120	10.30.0	synth with cache (only 1: intros; only 1: apply @f_equal_dep2; only 1: reflexivity).	22.281475	923
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	4.399316	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	3.176740	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	120	0.1.7.10	synth with cache (only 1: simpl in *; only 1: destruct u; only 1: destruct H; only 1: reflexivity).	7.132962	86
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	120	12.2.0.12.24.0	synth with cache (only 1: intros; only 1: elim decide; only 1: clear decide; only 1: contradiction; only 1: clear decide; only 1: trivial).	95.660731	3541
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	12.790475	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	120	1.4	synth with cache (only 1: destruct 2; only 1: auto).	15.400971	440
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	120	10.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: auto).	9.754177	81
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	120	15.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: auto).	28.492949	400
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	120	0.27.1.0.5.0	synth with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: destruct IHn; only 1: trivial).	35.133750	964
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	120	0.16.0.0.0.14.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct IHn; only 1: trivial).	65.515040	846
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	120
