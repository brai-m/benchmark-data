Coq.Init.Logic.Conjunction.proj1	600
Coq.Init.Logic.Conjunction.proj2	600	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	4.823740	2
Coq.Init.Logic.Equivalence.iff_refl	600
Coq.Init.Logic.Equivalence.iff_trans	600	0.0.0.2.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	13.836991	36
Coq.Init.Logic.Equivalence.iff_sym	600	0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	17.989909	37
Coq.Init.Logic.and_iff_compat_l	600	0.0.0.1.0.0.0.1.0.1	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	148.946319	333
Coq.Init.Logic.and_iff_compat_r	600	0.2.0.1.0.2.0.1.0.1	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: assumption; only 1: destruct 1; only 1: split; only 1: auto; only 1: assumption).	305.053602	1238
Coq.Init.Logic.or_iff_compat_l	600
Coq.Init.Logic.or_iff_compat_r	600
Coq.Init.Logic.imp_iff_compat_l	600	0.0.0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: auto).	42.757998	158
Coq.Init.Logic.imp_iff_compat_r	600	0.0.0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: auto).	29.134732	69
Coq.Init.Logic.not_iff_compat	600	1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	12.581039	14
Coq.Init.Logic.neg_false	600
Coq.Init.Logic.and_cancel_l	600
Coq.Init.Logic.and_cancel_r	600
Coq.Init.Logic.and_comm	600	0.0.0.1.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption; only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption).	19.956974	25
Coq.Init.Logic.and_assoc	600
Coq.Init.Logic.or_cancel_l	600
Coq.Init.Logic.or_cancel_r	600
Coq.Init.Logic.or_comm	600	0.0.0.1.1.0.0.0.1.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: destruct 1; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	164.632322	715
Coq.Init.Logic.or_assoc	600
Coq.Init.Logic.iff_and	600	2.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: assumption).	12.623807	15
Coq.Init.Logic.iff_to_and	600	4.0.2.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	36.176740	55
Coq.Init.Logic.universal_quantification.inst	600	2.0.1	synth with cache (only 1: unfold all; only 1: intros; only 1: auto).	10.343380	12
Coq.Init.Logic.universal_quantification.gen	600	2.2	synth with cache (only 1: unfold all; only 1: auto).	17.930363	24
Coq.Init.Logic.Logic_lemmas.absurd	600	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: assumption).	53.425072	66
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	600	0.0	synth with cache (only 1: destruct 1; only 1: auto).	8.316221	2
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	600	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	13.444199	8
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	600	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	13.050147	8
Coq.Init.Logic.Logic_lemmas.equality.f_equal	600	0.1	synth with cache (only 1: destruct 1; only 1: auto).	12.227839	7
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	600	0.0.1.0.90.0	synth with cache (only 1: intros; only 1: red; only 1: intros ?; only 1: destruct H0; only 1: destruct H; only 1: auto).	117.569356	930
Coq.Init.Logic.Logic_lemmas.eq_sind_r	600	2.5.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: assumption).	121.620655	841
Coq.Init.Logic.Logic_lemmas.eq_ind_r	600	2.5.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: assumption).	216.315857	1456
Coq.Init.Logic.Logic_lemmas.eq_rec_r	600	2.4.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: trivial).	256.622356	1946
Coq.Init.Logic.Logic_lemmas.eq_rect_r	600	2.5.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: assumption).	182.852830	1409
Coq.Init.Logic.equality_dep.f_equal_dep	600
Coq.Init.Logic.equality_dep2.f_equal_dep2	600
Coq.Init.Logic.rew_opp_r	600
Coq.Init.Logic.rew_opp_l	600
Coq.Init.Logic.f_equal2	600	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.967998	3
Coq.Init.Logic.f_equal3	600	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	4.700465	4
Coq.Init.Logic.f_equal4	600	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.303843	5
Coq.Init.Logic.f_equal5	600	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.927786	6
Coq.Init.Logic.f_equal_compose	600
Coq.Init.Logic.eq_trans_refl_l	600
Coq.Init.Logic.eq_trans_refl_r	600	0	synth with cache (only 1: split).	2.419838	1
Coq.Init.Logic.eq_sym_involutive	600
Coq.Init.Logic.eq_trans_sym_inv_l	600
Coq.Init.Logic.eq_trans_sym_inv_r	600
Coq.Init.Logic.eq_trans_assoc	600
Coq.Init.Logic.rew_map	600
Coq.Init.Logic.eq_trans_map	600
Coq.Init.Logic.map_subst	600
Coq.Init.Logic.map_subst_map	600
Coq.Init.Logic.rew_swap	600
Coq.Init.Logic.rew_compose	600
Coq.Init.Logic.eq_id_comm_l	600
Coq.Init.Logic.eq_id_comm_r	600
Coq.Init.Logic.eq_refl_map_distr	600	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: trivial).	4.571948	3
Coq.Init.Logic.eq_trans_map_distr	600
Coq.Init.Logic.eq_sym_map_distr	600
Coq.Init.Logic.eq_trans_sym_distr	600
Coq.Init.Logic.eq_trans_rew_distr	600
Coq.Init.Logic.rew_const	600
Coq.Init.Logic.unique_existence	600
Coq.Init.Logic.forall_exists_unique_domain_coincide	600
Coq.Init.Logic.forall_exists_coincide_unique_domain	600
Coq.Init.Logic.exists_inhabited	600	0.0	synth with cache (only 1: destruct 1; only 1: auto).	4.179428	2
Coq.Init.Logic.inhabited_covariant	600	1.3.0	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: auto).	43.909728	157
Coq.Init.Logic.eq_stepl	600	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	22.705608	18
Coq.Init.Logic.iff_stepl	600
Coq.Init.Logic.ex.eq_ex_uncurried	600
Coq.Init.Logic.ex.rew_ex	600
Coq.Init.Logic.ex2.eq_ex2_uncurried	600
Coq.Init.Logic.ex2.rew_ex2	600
Coq.Init.Byte.of_bits_to_bits	600
Coq.Init.Byte.to_bits_of_bits	600
Coq.Init.Tactics.decide_left	600
Coq.Init.Tactics.decide_right	600
Coq.Init.Peano.pred_Sn	600	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	17.352493	2
Coq.Init.Peano.not_eq_S	600	0	synth with cache (only 1: auto).	2.924703	1
Coq.Init.Peano.O_S	600	0	synth with cache (only 1: discriminate).	4.981126	1
Coq.Init.Peano.n_Sn	600
Coq.Init.Peano.plus_n_O	600
Coq.Init.Peano.plus_O_n	600	0	synth with cache (only 1: reflexivity).	4.233023	1
Coq.Init.Peano.plus_n_Sm	600
Coq.Init.Peano.plus_Sn_m	600	0.0	synth with cache (only 1: intros; only 1: auto).	11.082404	3
Coq.Init.Peano.mult_n_O	600
Coq.Init.Peano.mult_n_Sm	600
Coq.Init.Peano.le_pred	600
Coq.Init.Peano.le_S_n	600
Coq.Init.Peano.le_0_n	600
Coq.Init.Peano.le_n_S	600	1.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: auto).	16.537025	7
Coq.Init.Peano.nat_case	600
Coq.Init.Peano.nat_double_ind	600
Coq.Init.Peano.max_l	600
Coq.Init.Peano.max_r	600
Coq.Init.Peano.min_l	600
Coq.Init.Peano.min_r	600
Coq.Init.Peano.nat_rect_succ_r	600
Coq.Init.Peano.nat_rect_plus	600
Coq.Init.Specif.sigT_eta	600
Coq.Init.Specif.sig_eta	600
Coq.Init.Specif.sigT2_eta	600
Coq.Init.Specif.sig2_eta	600
Coq.Init.Specif.exists_to_inhabited_sig	600
Coq.Init.Specif.inhabited_sig_to_exists	600
Coq.Init.Specif.sigT.eq_existT_uncurried	600
Coq.Init.Specif.sigT.eq_sigT_uncurried	600
Coq.Init.Specif.sigT.eq_existT_curried	600
Coq.Init.Specif.sigT.eq_existT_curried_map	600
Coq.Init.Specif.sigT.eq_existT_curried_trans	600
Coq.Init.Specif.sigT.eq_existT_curried_congr	600
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	600
Coq.Init.Specif.sigT.eq_sigT_rect	600
Coq.Init.Specif.sigT.rew_sigT	600
Coq.Init.Specif.sig.eq_exist_uncurried	600
Coq.Init.Specif.sig.eq_sig_uncurried	600
Coq.Init.Specif.sig.eq_sig_rect	600
Coq.Init.Specif.sig.eq_sig_uncurried_iff	600
Coq.Init.Specif.sig.rew_sig	600
Coq.Init.Specif.sigT2.eq_existT2_uncurried	600
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	600
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	600
Coq.Init.Specif.sigT2.eq_sigT2_rect	600
Coq.Init.Specif.sigT2.rew_sigT2	600
Coq.Init.Specif.sig2.eq_exist2_uncurried	600
Coq.Init.Specif.sig2.eq_sig2_uncurried	600
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	600
Coq.Init.Specif.sig2.eq_sig2_rect	600
Coq.Init.Specif.sig2.rew_sig2	600
Coq.Init.Specif.Choice_lemmas.Choice	600
Coq.Init.Specif.Choice_lemmas.Choice2	600
Coq.Init.Specif.Choice_lemmas.bool_choice	600
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	600
Coq.Init.Specif.absurd_set	600	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: assumption).	63.996614	39
Coq.Init.Wf.Well_founded.Acc_inv	600	10.2	synth with cache (only 1: destruct 1; only 1: auto).	138.805416	133
Coq.Init.Wf.Well_founded.well_founded_induction_type	600
Coq.Init.Wf.Well_founded.well_founded_induction	600
Coq.Init.Wf.Well_founded.well_founded_ind	600
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	600
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	600
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	600
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	600	0.2.90.0	synth with cache (only 1: intros; only 1: apply Fix_F_2; only 1: auto; only 1: auto).	312.866844	1476
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	600	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	23.520595	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	600	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: trivial).	19.172432	7
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	600	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	8.726119	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	600	0.0.12	synth with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	118.146354	220
Coq.Init.Logic_Type.identity_ind_r	600	3.5.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: assumption).	433.733392	1818
Coq.Init.Logic_Type.identity_rec_r	600
Coq.Init.Logic_Type.identity_rect_r	600	4.5.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: assumption).	447.989908	2403
Coq.Init.Datatypes.andb_prop	600
Coq.Init.Datatypes.andb_true_intro	600
Coq.Init.Datatypes.eq_true_ind_r	600
Coq.Init.Datatypes.eq_true_rec_r	600
Coq.Init.Datatypes.eq_true_rect_r	600
Coq.Init.Datatypes.surjective_pairing	600
Coq.Init.Datatypes.injective_projections	600
Coq.Init.Datatypes.pair_equal_spec	600
Coq.Init.Datatypes.rew_pair	600
Coq.Init.Datatypes.comparison_eq_stable	600
Coq.Init.Datatypes.CompOpp_involutive	600
Coq.Init.Datatypes.CompOpp_inj	600
Coq.Init.Datatypes.CompOpp_iff	600	1.1.0.0.0.1.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	107.188541	52
Coq.Init.Datatypes.CompareSpec2Type	600
Coq.Init.Datatypes.CompSpec2Type	600	0.1.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	12.038636	6
