Coq.Init.Logic.Conjunction.proj1	60
Coq.Init.Logic.Conjunction.proj2	60	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	5.030264	2
Coq.Init.Logic.Equivalence.iff_refl	60
Coq.Init.Logic.Equivalence.iff_trans	60	0.0.0.2.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	15.715434	36
Coq.Init.Logic.Equivalence.iff_sym	60	0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	19.918431	37
Coq.Init.Logic.and_iff_compat_l	60
Coq.Init.Logic.and_iff_compat_r	60
Coq.Init.Logic.or_iff_compat_l	60
Coq.Init.Logic.or_iff_compat_r	60
Coq.Init.Logic.imp_iff_compat_l	60
Coq.Init.Logic.imp_iff_compat_r	60	0.0.0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: auto).	39.429823	69
Coq.Init.Logic.not_iff_compat	60	1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	15.170186	14
Coq.Init.Logic.neg_false	60
Coq.Init.Logic.and_cancel_l	60
Coq.Init.Logic.and_cancel_r	60
Coq.Init.Logic.and_comm	60	0.0.0.1.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption; only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption).	25.629167	25
Coq.Init.Logic.and_assoc	60
Coq.Init.Logic.or_cancel_l	60
Coq.Init.Logic.or_cancel_r	60
Coq.Init.Logic.or_comm	60
Coq.Init.Logic.or_assoc	60
Coq.Init.Logic.iff_and	60	2.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: assumption).	16.772430	15
Coq.Init.Logic.iff_to_and	60	4.0.2.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	42.790545	55
Coq.Init.Logic.universal_quantification.inst	60	2.0.1	synth with cache (only 1: unfold all; only 1: intros; only 1: auto).	11.933151	12
Coq.Init.Logic.universal_quantification.gen	60	2.2	synth with cache (only 1: unfold all; only 1: auto).	20.611470	24
Coq.Init.Logic.Logic_lemmas.absurd	60	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: assumption).	53.045808	66
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	60	0.0	synth with cache (only 1: destruct 1; only 1: auto).	8.539610	2
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	60	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	13.946933	8
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	60	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	13.876514	8
Coq.Init.Logic.Logic_lemmas.equality.f_equal	60	0.1	synth with cache (only 1: destruct 1; only 1: auto).	13.389705	7
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	60
Coq.Init.Logic.Logic_lemmas.eq_sind_r	60
Coq.Init.Logic.Logic_lemmas.eq_ind_r	60
Coq.Init.Logic.Logic_lemmas.eq_rec_r	60
Coq.Init.Logic.Logic_lemmas.eq_rect_r	60
Coq.Init.Logic.equality_dep.f_equal_dep	60
Coq.Init.Logic.equality_dep2.f_equal_dep2	60
Coq.Init.Logic.rew_opp_r	60
Coq.Init.Logic.rew_opp_l	60
Coq.Init.Logic.f_equal2	60	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	4.613780	3
Coq.Init.Logic.f_equal3	60	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.348240	4
Coq.Init.Logic.f_equal4	60	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	6.196626	5
Coq.Init.Logic.f_equal5	60	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	6.841757	6
Coq.Init.Logic.f_equal_compose	60
Coq.Init.Logic.eq_trans_refl_l	60
Coq.Init.Logic.eq_trans_refl_r	60	0	synth with cache (only 1: split).	2.781899	1
Coq.Init.Logic.eq_sym_involutive	60
Coq.Init.Logic.eq_trans_sym_inv_l	60
Coq.Init.Logic.eq_trans_sym_inv_r	60
Coq.Init.Logic.eq_trans_assoc	60
Coq.Init.Logic.rew_map	60
Coq.Init.Logic.eq_trans_map	60
Coq.Init.Logic.map_subst	60
Coq.Init.Logic.map_subst_map	60
Coq.Init.Logic.rew_swap	60
Coq.Init.Logic.rew_compose	60
Coq.Init.Logic.eq_id_comm_l	60
Coq.Init.Logic.eq_id_comm_r	60
Coq.Init.Logic.eq_refl_map_distr	60	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: trivial).	5.123908	3
Coq.Init.Logic.eq_trans_map_distr	60
Coq.Init.Logic.eq_sym_map_distr	60
Coq.Init.Logic.eq_trans_sym_distr	60
Coq.Init.Logic.eq_trans_rew_distr	60
Coq.Init.Logic.rew_const	60
Coq.Init.Logic.unique_existence	60
Coq.Init.Logic.forall_exists_unique_domain_coincide	60
Coq.Init.Logic.forall_exists_coincide_unique_domain	60
Coq.Init.Logic.exists_inhabited	60	0.0	synth with cache (only 1: destruct 1; only 1: auto).	4.801118	2
Coq.Init.Logic.inhabited_covariant	60	1.3.0	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: auto).	45.616082	157
Coq.Init.Logic.eq_stepl	60	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	22.827552	18
Coq.Init.Logic.iff_stepl	60
Coq.Init.Logic.ex.eq_ex_uncurried	60
Coq.Init.Logic.ex.rew_ex	60
Coq.Init.Logic.ex2.eq_ex2_uncurried	60
Coq.Init.Logic.ex2.rew_ex2	60
Coq.Init.Byte.of_bits_to_bits	60
Coq.Init.Byte.to_bits_of_bits	60
Coq.Init.Tactics.decide_left	60
Coq.Init.Tactics.decide_right	60
Coq.Init.Specif.sigT_eta	60
Coq.Init.Specif.sig_eta	60
Coq.Init.Specif.sigT2_eta	60
Coq.Init.Specif.sig2_eta	60
Coq.Init.Specif.exists_to_inhabited_sig	60
Coq.Init.Specif.inhabited_sig_to_exists	60
Coq.Init.Specif.sigT.eq_existT_uncurried	60
Coq.Init.Specif.sigT.eq_sigT_uncurried	60
Coq.Init.Specif.sigT.eq_existT_curried	60
Coq.Init.Specif.sigT.eq_existT_curried_map	60
Coq.Init.Specif.sigT.eq_existT_curried_trans	60
Coq.Init.Specif.sigT.eq_existT_curried_congr	60
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	60
Coq.Init.Specif.sigT.eq_sigT_rect	60
Coq.Init.Specif.sigT.rew_sigT	60
Coq.Init.Specif.sig.eq_exist_uncurried	60
Coq.Init.Specif.sig.eq_sig_uncurried	60
Coq.Init.Specif.sig.eq_sig_rect	60
Coq.Init.Specif.sig.eq_sig_uncurried_iff	60
Coq.Init.Specif.sig.rew_sig	60
Coq.Init.Specif.sigT2.eq_existT2_uncurried	60
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	60
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	60
Coq.Init.Specif.sigT2.eq_sigT2_rect	60
Coq.Init.Specif.sigT2.rew_sigT2	60
Coq.Init.Specif.sig2.eq_exist2_uncurried	60
Coq.Init.Specif.sig2.eq_sig2_uncurried	60
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	60
Coq.Init.Specif.sig2.eq_sig2_rect	60
Coq.Init.Specif.sig2.rew_sig2	60
Coq.Init.Specif.Choice_lemmas.Choice	60
Coq.Init.Specif.Choice_lemmas.Choice2	60
Coq.Init.Specif.Choice_lemmas.bool_choice	60
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	60
Coq.Init.Specif.absurd_set	60
Coq.Init.Peano.pred_Sn	60	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	19.690827	2
Coq.Init.Peano.not_eq_S	60	0	synth with cache (only 1: auto).	3.320420	1
Coq.Init.Peano.O_S	60	0	synth with cache (only 1: discriminate).	26.843351	1
Coq.Init.Peano.n_Sn	60
Coq.Init.Peano.plus_n_O	60
Coq.Init.Peano.plus_O_n	60	0	synth with cache (only 1: reflexivity).	4.539979	1
Coq.Init.Peano.plus_n_Sm	60
Coq.Init.Peano.plus_Sn_m	60	0.0	synth with cache (only 1: intros; only 1: auto).	11.724146	3
Coq.Init.Peano.mult_n_O	60
Coq.Init.Peano.mult_n_Sm	60
Coq.Init.Peano.le_pred	60
Coq.Init.Peano.le_S_n	60
Coq.Init.Peano.le_0_n	60
Coq.Init.Peano.le_n_S	60	1.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: auto).	15.559623	7
Coq.Init.Peano.nat_case	60
Coq.Init.Peano.nat_double_ind	60
Coq.Init.Peano.max_l	60
Coq.Init.Peano.max_r	60
Coq.Init.Peano.min_l	60
Coq.Init.Peano.min_r	60
Coq.Init.Peano.nat_rect_succ_r	60
Coq.Init.Peano.nat_rect_plus	60
Coq.Init.Wf.Well_founded.Acc_inv	60
Coq.Init.Wf.Well_founded.well_founded_induction_type	60
Coq.Init.Wf.Well_founded.well_founded_induction	60
Coq.Init.Wf.Well_founded.well_founded_ind	60
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	60
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	60
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	60
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	60
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	60	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	36.893176	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	60	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: trivial).	41.411199	7
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	60	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	10.001572	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	60
Coq.Init.Logic_Type.identity_ind_r	60
Coq.Init.Logic_Type.identity_rec_r	60
Coq.Init.Logic_Type.identity_rect_r	60
Coq.Init.Datatypes.andb_prop	60
Coq.Init.Datatypes.andb_true_intro	60
Coq.Init.Datatypes.eq_true_ind_r	60
Coq.Init.Datatypes.eq_true_rec_r	60
Coq.Init.Datatypes.eq_true_rect_r	60
Coq.Init.Datatypes.surjective_pairing	60
Coq.Init.Datatypes.injective_projections	60
Coq.Init.Datatypes.pair_equal_spec	60
Coq.Init.Datatypes.rew_pair	60
Coq.Init.Datatypes.comparison_eq_stable	60
Coq.Init.Datatypes.CompOpp_involutive	60
Coq.Init.Datatypes.CompOpp_inj	60
Coq.Init.Datatypes.CompOpp_iff	60
Coq.Init.Datatypes.CompareSpec2Type	60
Coq.Init.Datatypes.CompSpec2Type	60	0.1.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	24.392578	6
