Coq.Init.Logic.Conjunction.proj1	120
Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	33.890685	2
Coq.Init.Logic.Equivalence.iff_refl	120
Coq.Init.Logic.Equivalence.iff_trans	120	0.0.1.2.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	48.802766	35
Coq.Init.Logic.Equivalence.iff_sym	120	0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	43.339523	24
Coq.Init.Logic.and_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	51.414846	26
Coq.Init.Logic.and_iff_compat_l	120	1.0.1.0.0.1.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto).	116.846371	146
Coq.Init.Logic.or_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	85.032152	36
Coq.Init.Logic.imp_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	81.022064	31
Coq.Init.Logic.or_iff_compat_l	120
Coq.Init.Logic.imp_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	74.964566	31
Coq.Init.Logic.not_iff_compat	120
Coq.Init.Logic.neg_false	120
Coq.Init.Logic.and_cancel_l	120
Coq.Init.Logic.and_cancel_r	120
Coq.Init.Logic.and_comm	120
Coq.Init.Logic.and_assoc	120
Coq.Init.Logic.or_cancel_l	120
Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	52.602437	21
Coq.Init.Logic.or_cancel_r	120
Coq.Init.Logic.iff_and	120	0.0.5.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	58.278657	58
Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	88.864958	54
Coq.Init.Logic.universal_quantification.inst	120	0.0	synth with cache (only 1: unfold all; only 1: auto).	46.446545	2
Coq.Init.Logic.universal_quantification.gen	120	0.1	synth with cache (only 1: unfold all; only 1: auto).	45.792048	3
Coq.Init.Logic.Logic_lemmas.absurd	120	0.1.0	synth with cache (only 1: intros; only 1: destruct H0; only 1: assumption).	53.510295	6
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	59.940644	2
Coq.Init.Logic.iff_to_and	120
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	64.353314	6
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	62.232190	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	58.386473	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	63.807046	6
Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	0.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	76.541178	25
Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	61.434902	8
Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	61.598215	8
Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	62.718756	8
Coq.Init.Logic.equality_dep.f_equal_dep	120	0.0.1	synth with cache (only 1: intros ?; only 1: destruct H; only 1: trivial).	60.852609	8
Coq.Init.Logic.rew_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	53.673140	3
Coq.Init.Logic.rew_opp_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	54.770923	3
Coq.Init.Logic.equality_dep2.f_equal_dep2	120	1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	89.892115	31
Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	56.775875	3
Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	59.985431	4
Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	62.164109	5
Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	64.730063	6
Coq.Init.Logic.f_equal_compose	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct e; only 1: reflexivity).	68.640200	10
Coq.Init.Logic.eq_trans_refl_l	120	0.0.4	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	63.783477	14
Coq.Init.Logic.eq_trans_refl_r	120	0	synth with cache (only 1: reflexivity).	59.129321	1
Coq.Init.Logic.eq_sym_involutive	120	0.0.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	61.730514	5
Coq.Init.Logic.eq_trans_sym_inv_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	60.719396	3
Coq.Init.Logic.eq_trans_sym_inv_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	60.738472	3
Coq.Init.Logic.eq_trans_assoc	120	0.0.1.0.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: destruct e''; only 1: reflexivity).	69.436463	16
Coq.Init.Logic.rew_map	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: reflexivity).	69.341021	9
Coq.Init.Logic.map_subst	120	1.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	66.205027	8
Coq.Init.Logic.eq_trans_map	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros; only 1: destruct H2; only 1: destruct H1; only 1: destruct H2'; only 1: destruct H1'; only 1: reflexivity).	99.411950	29
Coq.Init.Logic.map_subst_map	120	1.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	66.880084	7
Coq.Init.Logic.rew_swap	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: trivial).	68.885008	7
Coq.Init.Logic.rew_compose	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: destruct H1; only 1: reflexivity).	65.912246	4
Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	63.184007	1
Coq.Init.Logic.eq_id_comm_l	120
Coq.Init.Logic.eq_trans_map_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	68.140566	3
Coq.Init.Logic.eq_id_comm_r	120
Coq.Init.Logic.eq_sym_map_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	70.510647	3
Coq.Init.Logic.eq_trans_sym_distr	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	71.854367	4
Coq.Init.Logic.eq_trans_rew_distr	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	72.493952	4
Coq.Init.Logic.rew_const	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros; only 1: destruct e; only 1: reflexivity).	74.891963	6
Coq.Init.Logic.unique_existence	120
Coq.Init.Logic.exists_inhabited	120	0.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	76.142028	5
Coq.Init.Logic.forall_exists_unique_domain_coincide	120
Coq.Init.Logic.forall_exists_coincide_unique_domain	120
Coq.Init.Logic.eq_stepl	120	0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	110.505258	25
Coq.Init.Logic.inhabited_covariant	120	7.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	110.695139	97
Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	78.909428	4
Coq.Init.Logic.iff_stepl	120
Coq.Init.Logic.ex.rew_ex	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	85.530501	3
Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	91.920838	6
Coq.Init.Logic.ex2.rew_ex2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	88.641131	3
Coq.Init.Specif.sigT_eta	120
Coq.Init.Peano.pred_Sn	120
Coq.Init.Tactics.decide_left	120
Coq.Init.Byte.of_bits_to_bits	120
Coq.Init.Specif.sig_eta	120
Coq.Init.Peano.not_eq_S	120
Coq.Init.Tactics.decide_right	120
Coq.Init.Byte.to_bits_of_bits	120
Coq.Init.Specif.sigT2_eta	120
Coq.Init.Peano.O_S	120
Coq.Init.Wf.Well_founded.Acc_inv	120
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120
Coq.Init.Specif.sig2_eta	120
Coq.Init.Wf.Well_founded.well_founded_induction_type	120
Coq.Init.Peano.n_Sn	120
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120
Coq.Init.Specif.exists_to_inhabited_sig	120
Coq.Init.Wf.Well_founded.well_founded_induction	120
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120
Coq.Init.Peano.plus_n_O	120
Coq.Init.Specif.inhabited_sig_to_exists	120
Coq.Init.Wf.Well_founded.well_founded_ind	120
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120
Coq.Init.Peano.plus_O_n	120
Coq.Init.Specif.sigT.eq_existT_uncurried	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120
Coq.Init.Logic_Type.identity_ind_r	120
Coq.Init.Specif.sigT.eq_sigT_uncurried	120
Coq.Init.Peano.plus_n_Sm	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
Coq.Init.Logic_Type.identity_rec_r	120
Coq.Init.Specif.sigT.eq_existT_curried	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
Coq.Init.Peano.plus_Sn_m	120
Coq.Init.Logic_Type.identity_rect_r	120
Coq.Init.Datatypes.andb_prop	120
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
Coq.Init.Specif.sigT.eq_existT_curried_map	120
Coq.Init.Peano.mult_n_O	120
Coq.Init.Datatypes.andb_true_intro	120
Coq.Init.Specif.sigT.eq_existT_curried_congr	120
Coq.Init.Specif.sigT.eq_existT_curried_trans	120
Coq.Init.Datatypes.eq_true_ind_r	120
Coq.Init.Peano.mult_n_Sm	120
Coq.Init.Datatypes.eq_true_rec_r	120
Coq.Init.Specif.sigT.eq_sigT_rect	120
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
Coq.Init.Datatypes.eq_true_rect_r	120
Coq.Init.Peano.le_pred	120
Coq.Init.Specif.sigT.rew_sigT	120
Coq.Init.Specif.sig.eq_exist_uncurried	120
Coq.Init.Datatypes.surjective_pairing	120
Coq.Init.Peano.le_S_n	120
Coq.Init.Datatypes.injective_projections	120
Coq.Init.Specif.sig.eq_sig_uncurried	120
Coq.Init.Specif.sig.eq_sig_rect	120
Coq.Init.Datatypes.pair_equal_spec	120
Coq.Init.Peano.le_0_n	120
Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
Coq.Init.Datatypes.rew_pair	120
Coq.Init.Specif.sig.rew_sig	120
Coq.Init.Datatypes.comparison_eq_stable	120
Coq.Init.Peano.le_n_S	120
Coq.Init.Specif.sigT2.eq_existT2_uncurried	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120
Coq.Init.Datatypes.CompOpp_involutive	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
Coq.Init.Peano.nat_case	120
Coq.Init.Datatypes.CompOpp_inj	120
Coq.Init.Specif.sigT2.eq_sigT2_rect	120
Coq.Init.Datatypes.CompOpp_iff	120
Coq.Init.Specif.sigT2.rew_sigT2	120
Coq.Init.Peano.nat_double_ind	120
Coq.Init.Specif.sig2.eq_exist2_uncurried	120
Coq.Init.Datatypes.CompareSpec2Type	120
Coq.Init.Specif.sig2.eq_sig2_uncurried	120
Coq.Init.Peano.max_l	120
Coq.Init.Datatypes.CompSpec2Type	120
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
Coq.Init.Specif.sig2.eq_sig2_rect	120
Coq.Init.Specif.sig2.rew_sig2	120
Coq.Init.Peano.max_r	120
Coq.Init.Peano.min_l	120
Coq.Init.Specif.Choice_lemmas.Choice	120
Coq.Init.Peano.min_r	120
Coq.Init.Peano.nat_rect_succ_r	120
Coq.Init.Specif.Choice_lemmas.Choice2	120
Coq.Init.Specif.Choice_lemmas.bool_choice	120
Coq.Init.Peano.nat_rect_plus	120
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
Coq.Init.Specif.absurd_set	120
