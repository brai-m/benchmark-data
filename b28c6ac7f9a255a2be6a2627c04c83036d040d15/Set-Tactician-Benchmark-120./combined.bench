Coq.Init.Logic.Conjunction.proj1	120
Coq.Init.Logic.Equivalence.iff_refl	120
Coq.Init.Logic.Conjunction.proj2	120	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	22.200582	4
Coq.Init.Logic.Equivalence.iff_sym	120	0.0.3.4	synth with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	29.513629	81
Coq.Init.Logic.Equivalence.iff_trans	120	1.1.2.3.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	54.088849	133
Coq.Init.Logic.and_iff_compat_l	120
Coq.Init.Logic.and_iff_compat_r	120
Coq.Init.Logic.or_iff_compat_l	120
Coq.Init.Logic.or_iff_compat_r	120
Coq.Init.Logic.not_iff_compat	120	8	synth with cache (only 1: apply imp_iff_compat_r).	21.646872	68
Coq.Init.Logic.imp_iff_compat_l	120
Coq.Init.Logic.imp_iff_compat_r	120
Coq.Init.Logic.neg_false	120
Coq.Init.Logic.and_cancel_l	120
Coq.Init.Logic.and_cancel_r	120
Coq.Init.Logic.and_comm	120
Coq.Init.Logic.and_assoc	120
Coq.Init.Logic.or_cancel_l	120
Coq.Init.Logic.iff_and	120	1	synth with cache (only 1: trivial).	3.123507	3
Coq.Init.Logic.iff_to_and	120	3.3.12	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	28.550361	284
Coq.Init.Logic.universal_quantification.inst	120	1	synth with cache (only 1: trivial).	4.391233	3
Coq.Init.Logic.or_cancel_r	120
Coq.Init.Logic.or_comm	120
Coq.Init.Logic.universal_quantification.gen	120	8.8.7.6.5	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: auto).	52.824045	988
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120
Coq.Init.Logic.or_assoc	120
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120
Coq.Init.Logic.Logic_lemmas.equality.f_equal	120
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120
Coq.Init.Logic.Logic_lemmas.absurd	120
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120
Coq.Init.Logic.Logic_lemmas.eq_sind_r	120
Coq.Init.Logic.Logic_lemmas.eq_ind_r	120
Coq.Init.Logic.Logic_lemmas.eq_rec_r	120
Coq.Init.Logic.equality_dep.f_equal_dep	120
Coq.Init.Logic.Logic_lemmas.eq_rect_r	120
Coq.Init.Logic.equality_dep2.f_equal_dep2	120
Coq.Init.Logic.rew_opp_r	120
Coq.Init.Logic.rew_opp_l	120
Coq.Init.Logic.f_equal2	120
Coq.Init.Logic.f_equal3	120
Coq.Init.Logic.f_equal4	120
Coq.Init.Logic.eq_trans_refl_r	120	2	synth with cache (only 1: trivial).	5.814944	6
Coq.Init.Logic.f_equal5	120
Coq.Init.Logic.f_equal_compose	120
Coq.Init.Logic.eq_trans_refl_l	120
Coq.Init.Logic.eq_sym_involutive	120
Coq.Init.Logic.eq_trans_sym_inv_l	120
Coq.Init.Logic.eq_trans_sym_inv_r	120
Coq.Init.Logic.eq_trans_assoc	120
Coq.Init.Logic.rew_map	120
Coq.Init.Logic.eq_trans_map	120
Coq.Init.Logic.map_subst	120
Coq.Init.Logic.map_subst_map	120
Coq.Init.Logic.eq_id_comm_l	120
Coq.Init.Logic.eq_refl_map_distr	120	2	synth with cache (only 1: trivial).	4.136043	6
Coq.Init.Logic.rew_swap	120
Coq.Init.Logic.rew_compose	120
Coq.Init.Logic.eq_id_comm_r	120
Coq.Init.Logic.eq_trans_map_distr	120
Coq.Init.Logic.eq_sym_map_distr	120
Coq.Init.Logic.eq_trans_sym_distr	120
Coq.Init.Logic.eq_trans_rew_distr	120
Coq.Init.Logic.rew_const	120
Coq.Init.Logic.unique_existence	120
Coq.Init.Logic.forall_exists_unique_domain_coincide	120
Coq.Init.Logic.forall_exists_coincide_unique_domain	120
Coq.Init.Logic.inhabited_covariant	120
Coq.Init.Logic.ex.eq_ex_uncurried	120
Coq.Init.Logic.ex.rew_ex	120
Coq.Init.Logic.ex2.eq_ex2_uncurried	120
Coq.Init.Logic.exists_inhabited	120
Coq.Init.Logic.eq_stepl	120
Coq.Init.Logic.iff_stepl	120
Coq.Init.Logic.ex2.rew_ex2	120
Coq.Init.Byte.of_bits_to_bits	120
Coq.Init.Peano.pred_Sn	120	2	synth with cache (only 1: trivial).	16.972686	4
Coq.Init.Peano.not_eq_S	120	5	synth with cache (only 1: auto).	5.941894	15
Coq.Init.Specif.sigT_eta	120
Coq.Init.Peano.O_S	120	7	synth with cache (only 1: discriminate).	7.347580	18
Coq.Init.Byte.to_bits_of_bits	120
Coq.Init.Specif.sig_eta	120
Coq.Init.Specif.sigT2_eta	120
Coq.Init.Specif.sig2_eta	120
Coq.Init.Peano.n_Sn	120
Coq.Init.Specif.exists_to_inhabited_sig	120
Coq.Init.Peano.plus_n_O	120
Coq.Init.Peano.plus_O_n	120	2	synth with cache (only 1: trivial).	4.080745	4
Coq.Init.Specif.inhabited_sig_to_exists	120
Coq.Init.Tactics.decide_left	120
Coq.Init.Specif.sigT.eq_existT_uncurried	120
Coq.Init.Wf.Well_founded.Acc_inv	120
Coq.Init.Specif.sigT.eq_sigT_uncurried	120
Coq.Init.Peano.plus_n_Sm	120
Coq.Init.Peano.plus_Sn_m	120	2	synth with cache (only 1: trivial).	3.804576	4
Coq.Init.Specif.sigT.eq_existT_curried	120
Coq.Init.Specif.sigT.eq_existT_curried_map	120
Coq.Init.Peano.mult_n_O	120
Coq.Init.Specif.sigT.eq_existT_curried_trans	120
Coq.Init.Wf.Well_founded.well_founded_induction_type	120
Coq.Init.Specif.sigT.eq_existT_curried_congr	120
Coq.Init.Peano.mult_n_Sm	120
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
Coq.Init.Wf.Well_founded.well_founded_induction	120	88	synth with cache (only 1: exact well_founded_induction_type).	26.170882	201
Coq.Init.Tactics.decide_right	120
Coq.Init.Wf.Well_founded.well_founded_ind	120	78	synth with cache (only 1: exact well_founded_induction).	27.013952	191
Coq.Init.Specif.sigT.eq_sigT_rect	120
Coq.Init.Peano.le_pred	120
Coq.Init.Specif.sigT.rew_sigT	120
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120
Coq.Init.Specif.sig.eq_exist_uncurried	120
Coq.Init.Specif.sig.eq_sig_uncurried	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120
Coq.Init.Specif.sig.eq_sig_rect	120
Coq.Init.Peano.le_S_n	120
Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120
Coq.Init.Peano.le_0_n	120
Coq.Init.Specif.sig.rew_sig	120
Coq.Init.Specif.sigT2.eq_existT2_uncurried	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
Coq.Init.Specif.sigT2.eq_sigT2_rect	120
Coq.Init.Specif.sigT2.rew_sigT2	120
Coq.Init.Specif.sig2.eq_exist2_uncurried	120
Coq.Init.Peano.le_n_S	120
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
Coq.Init.Specif.sig2.eq_sig2_uncurried	120
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
Coq.Init.Logic_Type.identity_ind_r	120
Coq.Init.Specif.sig2.eq_sig2_rect	120
Coq.Init.Specif.sig2.rew_sig2	120
Coq.Init.Peano.nat_case	120
Coq.Init.Specif.Choice_lemmas.Choice	120
Coq.Init.Datatypes.andb_prop	120
Coq.Init.Specif.Choice_lemmas.Choice2	120
Coq.Init.Logic_Type.identity_rec_r	120
Coq.Init.Specif.Choice_lemmas.bool_choice	120
Coq.Init.Datatypes.andb_true_intro	120
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
Coq.Init.Peano.nat_double_ind	120
Coq.Init.Peano.max_l	120
Coq.Init.Datatypes.eq_true_ind_r	120
Coq.Init.Peano.max_r	120
Coq.Init.Logic_Type.identity_rect_r	120
Coq.Init.Specif.absurd_set	120
Coq.Init.Peano.min_l	120
Coq.Init.Peano.min_r	120
Coq.Init.Peano.nat_rect_succ_r	120
Coq.Init.Datatypes.eq_true_rec_r	120
Coq.Init.Datatypes.surjective_pairing	120
Coq.Init.Datatypes.eq_true_rect_r	120
Coq.Init.Peano.nat_rect_plus	120
Coq.Init.Datatypes.injective_projections	120
Coq.Init.Datatypes.pair_equal_spec	120
Coq.Init.Datatypes.CompOpp_involutive	120
Coq.Init.Datatypes.rew_pair	120
Coq.Init.Datatypes.comparison_eq_stable	120
Coq.Init.Datatypes.CompOpp_iff	120
Coq.Init.Datatypes.CompOpp_inj	120
Coq.Init.Datatypes.CompareSpec2Type	120
Coq.Init.Datatypes.CompSpec2Type	120
