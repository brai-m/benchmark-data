Coq.Init.Logic.Conjunction.proj1	120
Coq.Init.Logic.Equivalence.iff_refl	120
Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	22.075775	2
Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.1.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	31.550953	26
Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: trivial; only 1: trivial).	17.405251	13
Coq.Init.Logic.and_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	20.263252	18
Coq.Init.Logic.or_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	23.536200	20
Coq.Init.Logic.imp_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	19.273294	16
Coq.Init.Logic.and_iff_compat_l	120	1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto).	46.314539	46
Coq.Init.Logic.not_iff_compat	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	7.419476	5
Coq.Init.Logic.imp_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	20.837207	16
Coq.Init.Logic.and_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	75.854921	43
Coq.Init.Logic.or_iff_compat_l	120
Coq.Init.Logic.and_cancel_r	120	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	84.046300	44
Coq.Init.Logic.neg_false	120
Coq.Init.Logic.and_comm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	44.838144	29
Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	56.158633	25
Coq.Init.Logic.or_cancel_l	120	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	89.590623	52
Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	105.903788	58
Coq.Init.Logic.or_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	111.308888	51
Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: trivial; only 1: trivial).	50.356653	18
Coq.Init.Logic.universal_quantification.inst	120	0.0	synth with cache (only 1: unfold all; only 1: auto).	8.774462	2
Coq.Init.Logic.universal_quantification.gen	120	0.0	synth with cache (only 1: unfold all; only 1: auto).	8.293866	2
Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	13.794589	7
Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct H; only 1: split; only 1: trivial; only 1: trivial).	96.549271	44
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	39.844156	21
Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	119.729404	59
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	75.0	synth with cache (only 1: destruct 1; only 1: trivial).	56.495474	388
Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	17.100119	2
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	1.0	synth with cache (only 1: destruct 2; only 1: exact H).	22.938430	9
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	1.0.0.0.1.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	29.345037	18
Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	0.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	29.072904	17
Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	0.3.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	27.632101	17
Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	0.9.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	28.807717	23
Coq.Init.Logic.rew_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.736754	3
Coq.Init.Logic.rew_opp_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.688135	3
Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	13.145324	4
Coq.Init.Logic.equality_dep.f_equal_dep	120	0.0.85	synth with cache (only 1: intros ?; only 1: destruct H; only 1: auto).	21.307597	558
Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	0.3.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	27.322687	17
Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	6.610275	3
Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	7.049096	4
Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	8.259512	5
Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	8.667714	6
Coq.Init.Logic.f_equal_compose	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.461200	3
Coq.Init.Logic.eq_trans_refl_r	120	0	synth with cache (only 1: reflexivity).	3.474186	1
Coq.Init.Logic.eq_trans_refl_l	120	0.0.2	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	7.639349	6
Coq.Init.Logic.eq_sym_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.715226	3
Coq.Init.Logic.eq_trans_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e''; only 1: reflexivity).	5.907800	3
Coq.Init.Logic.eq_trans_sym_inv_l	120	0.0.3	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	8.339447	9
Coq.Init.Logic.eq_trans_sym_inv_r	120	0.0.3	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	9.542070	12
Coq.Init.Logic.rew_map	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	7.045153	3
Coq.Init.Logic.map_subst	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.719849	3
Coq.Init.Logic.map_subst_map	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.400539	3
Coq.Init.Logic.rew_swap	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H0; only 1: destruct H; only 1: reflexivity).	7.294846	4
Coq.Init.Logic.rew_compose	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: destruct H1; only 1: reflexivity).	6.288005	4
Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	2.838765	1
Coq.Init.Logic.eq_trans_map_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	5.346867	3
Coq.Init.Logic.eq_sym_map_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.857754	3
Coq.Init.Logic.eq_trans_sym_distr	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	7.231158	4
Coq.Init.Logic.eq_trans_rew_distr	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	7.037284	4
Coq.Init.Logic.rew_const	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.976760	3
Coq.Init.Logic.eq_trans_map	120	0.0.1.0.3.0	synth with cache (only 1: intros; only 1: destruct H2'; only 1: destruct H2; only 1: destruct H1'; only 1: destruct H1; only 1: reflexivity).	68.569444	466
Coq.Init.Logic.eq_id_comm_l	120
Coq.Init.Logic.eq_id_comm_r	120
Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	4.982555	2
Coq.Init.Logic.unique_existence	120
Coq.Init.Logic.inhabited_covariant	120	11.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	41.848291	52
Coq.Init.Logic.forall_exists_unique_domain_coincide	120
Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	7.591303	4
Coq.Init.Logic.eq_stepl	120	1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	30.737238	23
Coq.Init.Logic.ex.rew_ex	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	9.960424	3
Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	9.971818	6
Coq.Init.Logic.ex2.rew_ex2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	10.944057	3
Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	39.906734	27
Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	16.531323	2
Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	4.678914	2
Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	3.546249	1
Coq.Init.Logic.forall_exists_coincide_unique_domain	120
Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	19.058638	2
Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	6.537812	2
Coq.Init.Specif.sigT2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	7.006755	2
Coq.Init.Specif.sig2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	7.311610	2
Coq.Init.Byte.of_bits_to_bits	120
Coq.Init.Tactics.decide_left	120
Coq.Init.Tactics.decide_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	10.506945	4
Coq.Init.Peano.n_Sn	120
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	3.0	synth with cache (only 1: destruct 1; only 1: trivial).	29.998577	12
Coq.Init.Peano.plus_n_O	120	0.0.0.0.0.0.0.0.1.2	synth with cache (only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	21.141258	20
Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	2.892346	1
Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	13.833021	7
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	3.0.0	synth with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	23.645750	16
Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	2.522513	1
Coq.Init.Specif.exists_to_inhabited_sig	120
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	9.055154	2
Coq.Init.Specif.inhabited_sig_to_exists	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	10.907172	5
Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	15.414475	6
Coq.Init.Peano.mult_n_O	120	0.0.0.0.2.1	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	34.103307	32
Coq.Init.Byte.to_bits_of_bits	120
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	3.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: destruct H; only 1: trivial).	56.261733	38
Coq.Init.Logic_Type.identity_ind_r	120	0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim identity_sym with (1 := H0); only 1: trivial).	21.180532	16
Coq.Init.Logic_Type.identity_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	17.973472	11
Coq.Init.Specif.sigT.eq_sigT_uncurried	120	0.16.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT_uncurried; only 1: exact pq).	77.117595	82
Coq.Init.Logic_Type.identity_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	14.133417	8
Coq.Init.Specif.sigT.eq_existT_curried	120	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	9.892379	3
Coq.Init.Specif.sigT.eq_existT_curried_map	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	11.160753	3
Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.0.0	synth with cache (only 1: destruct p'; only 1: destruct q'; only 1: reflexivity).	12.489112	3
Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.0	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	11.433749	3
Coq.Init.Peano.mult_n_Sm	120
Coq.Init.Wf.Well_founded.Acc_inv	120
Coq.Init.Datatypes.andb_prop	120
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
Coq.Init.Peano.le_pred	120
Coq.Init.Wf.Well_founded.well_founded_induction_type	120
Coq.Init.Wf.Well_founded.well_founded_induction	120	24	synth with cache (only 1: exact well_founded_induction_type).	50.598384	121
Coq.Init.Datatypes.andb_true_intro	120
Coq.Init.Datatypes.eq_true_ind_r	120	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	16.120959	12
Coq.Init.Datatypes.eq_true_rec_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	10.084292	6
Coq.Init.Specif.sigT.eq_sigT_rect	120
Coq.Init.Peano.le_S_n	120
Coq.Init.Datatypes.eq_true_rect_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	11.668008	6
Coq.Init.Datatypes.surjective_pairing	120	0.0.0	synth with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	5.819805	3
Coq.Init.Specif.sigT.rew_sigT	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	19.667634	3
Coq.Init.Specif.sig.eq_exist_uncurried	120	0.1.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	14.848259	8
Coq.Init.Wf.Well_founded.well_founded_ind	120	1.16.0.1.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply well_founded_induction_type; only 1: trivial).	116.463846	269
Coq.Init.Peano.le_0_n	120
Coq.Init.Specif.sig.eq_sig_uncurried	120	0.21.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist_uncurried; only 1: exact pq).	90.814700	109
Coq.Init.Datatypes.injective_projections	120
Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	9.569117	4
Coq.Init.Peano.nat_case	120	0.1.4.4	synth with cache (only 1: intros; only 1: destruct n; only 1: auto; only 1: auto).	28.811183	58
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120
Coq.Init.Specif.sig.eq_sig_rect	120
Coq.Init.Datatypes.pair_equal_spec	120
Coq.Init.Datatypes.rew_pair	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.966693	3
Coq.Init.Peano.nat_double_ind	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
Coq.Init.Datatypes.comparison_eq_stable	120
Coq.Init.Specif.sig.rew_sig	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	15.415434	3
Coq.Init.Datatypes.CompOpp_involutive	120	0.0.0.0.3	synth with cache (only 1: intros; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	12.195394	14
Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	16.658206	6
Coq.Init.Peano.max_l	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120	0.26.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT2_uncurried; only 1: exact pqr).	96.412332	135
Coq.Init.Datatypes.CompOpp_inj	120
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120	0.0.23.1	synth with cache (only 1: intros; only 1: apply Fix_F_2; only 1: auto; only 1: auto).	92.213637	365
Coq.Init.Peano.max_r	120
Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	16.185953	9
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
Coq.Init.Specif.sigT2.rew_sigT2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	20.219549	3
Coq.Init.Peano.min_l	120
Coq.Init.Specif.sigT2.eq_sigT2_rect	120
Coq.Init.Datatypes.CompareSpec2Type	120
Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	17.433011	6
Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	6.291426	3
Coq.Init.Peano.min_r	120
Coq.Init.Specif.sig2.eq_sig2_uncurried	120
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
Coq.Init.Specif.sig2.eq_sig2_rect	120
Coq.Init.Specif.sig2.rew_sig2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	18.311458	3
Coq.Init.Peano.nat_rect_succ_r	120	0.1.1.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	31.924924	23
Coq.Init.Specif.Choice_lemmas.Choice	120
Coq.Init.Specif.Choice_lemmas.Choice2	120
Coq.Init.Specif.Choice_lemmas.bool_choice	120
Coq.Init.Peano.nat_rect_plus	120
Coq.Init.Specif.absurd_set	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: apply H0; only 1: assumption).	23.635144	13
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
