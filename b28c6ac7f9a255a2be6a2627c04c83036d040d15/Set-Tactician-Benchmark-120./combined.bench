Coq.Init.Logic.Conjunction.proj1	120
Coq.Init.Logic.Equivalence.iff_refl	120
Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	21.084469	2
Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	8.432254	7
Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	28.213390	19
Coq.Init.Logic.and_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: trivial; only 1: auto).	16.329983	16
Coq.Init.Logic.and_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	19.396937	18
Coq.Init.Logic.or_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	21.050944	20
Coq.Init.Logic.imp_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	16.921087	16
Coq.Init.Logic.not_iff_compat	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	7.643699	5
Coq.Init.Logic.imp_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	17.681589	16
Coq.Init.Logic.and_cancel_l	120	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	64.271182	44
Coq.Init.Logic.and_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	64.403378	43
Coq.Init.Logic.or_iff_compat_l	120
Coq.Init.Logic.and_comm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	46.798019	29
Coq.Init.Logic.neg_false	120
Coq.Init.Logic.or_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	35.420915	26
Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	20.655685	14
Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	96.410807	58
Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	46.403011	24
Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	40.145467	18
Coq.Init.Logic.universal_quantification.inst	120	0.0	synth with cache (only 1: unfold all; only 1: auto).	7.059835	2
Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	12.897000	7
Coq.Init.Logic.or_cancel_r	120	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	94.516666	53
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	21.269042	2
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	17.444913	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	15.393547	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	17.478274	2
Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	80.946879	44
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	22.201756	6
Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	0.3.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: trivial).	37.850562	26
Coq.Init.Logic.universal_quantification.gen	120	0.3	synth with cache (only 1: unfold all; only 1: auto).	118.566401	600
Coq.Init.Logic.equality_dep.f_equal_dep	120	0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: trivial).	11.151384	3
Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	0.0.0.0.5.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim ex_intro with (1 := H0); only 1: destruct H0; only 1: intros ?; only 1: intros ?; only 1: assumption).	66.042807	41
Coq.Init.Logic.rew_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.380397	3
Coq.Init.Logic.rew_opp_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.387397	3
Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	0.11.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	69.556447	57
Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.0.8	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).	13.960341	19
Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	4.944536	3
Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	6.405037	4
Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	7.279201	5
Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	8.143879	6
Coq.Init.Logic.eq_trans_refl_l	120	0.0.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.164479	5
Coq.Init.Logic.f_equal_compose	120	0.0.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	7.457648	5
Coq.Init.Logic.eq_trans_refl_r	120	0	synth with cache (only 1: reflexivity).	2.768365	1
Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	0.11.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	57.263715	60
Coq.Init.Logic.eq_sym_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.174529	3
Coq.Init.Logic.eq_trans_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e''; only 1: reflexivity).	7.101244	3
Coq.Init.Logic.eq_trans_sym_inv_l	120	0.0.4	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	9.892412	14
Coq.Init.Logic.eq_trans_sym_inv_r	120	0.0.3	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	8.830848	9
Coq.Init.Logic.rew_map	120	0.0.2	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	10.228027	8
Coq.Init.Logic.map_subst	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.738228	3
Coq.Init.Logic.map_subst_map	120	0.0.2	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	9.428013	8
Coq.Init.Logic.rew_compose	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	5.333204	3
Coq.Init.Logic.rew_swap	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H0; only 1: destruct H; only 1: reflexivity).	7.199870	4
Coq.Init.Logic.eq_trans_map	120	0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct H2'; only 1: destruct H1'; only 1: destruct H2; only 1: reflexivity).	16.099381	14
Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	2.984400	1
Coq.Init.Logic.eq_trans_map_distr	120
Coq.Init.Logic.eq_sym_map_distr	120
Coq.Init.Logic.eq_trans_sym_distr	120
Coq.Init.Logic.eq_trans_rew_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	5.203416	3
Coq.Init.Logic.rew_const	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.161292	3
Coq.Init.Logic.eq_id_comm_l	120
Coq.Init.Logic.eq_id_comm_r	120
Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	5.254831	2
Coq.Init.Logic.unique_existence	120
Coq.Init.Logic.forall_exists_unique_domain_coincide	120
Coq.Init.Logic.eq_stepl	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.978199	4
Coq.Init.Logic.inhabited_covariant	120	0.2.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto).	13.431238	11
Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	8.496428	4
Coq.Init.Logic.ex.rew_ex	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	9.194854	3
Coq.Init.Logic.ex2.rew_ex2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	9.411481	3
Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	13.233941	7
Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	36.087974	27
Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	16.906638	2
Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	3.920649	2
Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	2.841552	1
Coq.Init.Logic.forall_exists_coincide_unique_domain	120
Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	17.006397	2
Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	5.565393	2
Coq.Init.Specif.sigT2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	8.147640	3
Coq.Init.Specif.sig2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	5.634031	2
Coq.Init.Byte.of_bits_to_bits	120
Coq.Init.Tactics.decide_left	120
Coq.Init.Tactics.decide_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	10.218434	4
Coq.Init.Peano.n_Sn	120
Coq.Init.Peano.plus_n_O	120
Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	3.223920	1
Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	11.819638	7
Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	2.824812	1
Coq.Init.Peano.mult_n_O	120
Coq.Init.Wf.Well_founded.Acc_inv	120	2.1	synth with cache (only 1: destruct 1; only 1: trivial).	56.176049	40
Coq.Init.Specif.exists_to_inhabited_sig	120
Coq.Init.Byte.to_bits_of_bits	120
Coq.Init.Specif.inhabited_sig_to_exists	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	10.448793	5
Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	10.894490	4
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	20.499559	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	8.550621	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	8.478310	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	15.754222	6
Coq.Init.Peano.mult_n_Sm	120
Coq.Init.Wf.Well_founded.well_founded_induction_type	120
Coq.Init.Logic_Type.identity_ind_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim identity_sym with (1 := H0); only 1: trivial).	13.009034	8
Coq.Init.Logic_Type.identity_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	13.504860	8
Coq.Init.Logic_Type.identity_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	12.261266	8
Coq.Init.Specif.sigT.eq_sigT_uncurried	120	0.33.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT_uncurried; only 1: exact pq).	81.503544	121
Coq.Init.Datatypes.andb_prop	120
Coq.Init.Specif.sigT.eq_existT_curried	120	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	10.960455	3
Coq.Init.Datatypes.andb_true_intro	120
Coq.Init.Datatypes.eq_true_ind_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	10.407902	6
Coq.Init.Specif.sigT.eq_existT_curried_map	120	0.0.1	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	12.883695	5
Coq.Init.Datatypes.eq_true_rec_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	12.058497	6
Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.4.0	synth with cache (only 1: destruct q'; only 1: destruct p'; only 1: reflexivity).	22.894768	18
Coq.Init.Datatypes.eq_true_rect_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	12.333036	6
Coq.Init.Datatypes.surjective_pairing	120
Coq.Init.Datatypes.injective_projections	120
Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.0	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	11.693393	3
Coq.Init.Peano.le_pred	120
Coq.Init.Wf.Well_founded.well_founded_induction	120
Coq.Init.Datatypes.pair_equal_spec	120
Coq.Init.Datatypes.rew_pair	120
Coq.Init.Datatypes.comparison_eq_stable	120
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
Coq.Init.Datatypes.CompOpp_involutive	120
Coq.Init.Datatypes.CompOpp_inj	120
Coq.Init.Peano.le_S_n	120
Coq.Init.Peano.le_0_n	120
Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	7.179643	4
Coq.Init.Wf.Well_founded.well_founded_ind	120
Coq.Init.Peano.nat_case	120
Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	27.595778	16
Coq.Init.Peano.nat_double_ind	120
Coq.Init.Datatypes.CompareSpec2Type	120
Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	7.044738	3
Coq.Init.Specif.sigT.rew_sigT	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	31.487522	3
Coq.Init.Specif.sig.eq_exist_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	11.379950	4
Coq.Init.Specif.sigT.eq_sigT_rect	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120
Coq.Init.Peano.max_l	120
Coq.Init.Specif.sig.eq_sig_uncurried	120	0.39.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist_uncurried; only 1: exact pq).	102.043482	174
Coq.Init.Specif.sig.eq_sig_rect	120
Coq.Init.Specif.sig.rew_sig	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	15.327290	3
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
Coq.Init.Peano.max_r	120
Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	18.153007	7
Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120	0.34.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT2_uncurried; only 1: exact pqr).	59.330310	107
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
Coq.Init.Peano.min_l	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120	0.0.43.0	synth with cache (only 1: intros; only 1: apply Fix_F_2; only 1: auto; only 1: auto).	42.975186	149
Coq.Init.Specif.sigT2.rew_sigT2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	19.938406	3
Coq.Init.Specif.sigT2.eq_sigT2_rect	120
Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	32.194144	7
Coq.Init.Peano.min_r	120
Coq.Init.Peano.nat_rect_succ_r	120	0.1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	29.106135	16
Coq.Init.Peano.nat_rect_plus	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: intros; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl; only 1: rewrite IHn; only 1: trivial).	16.959042	9
Coq.Init.Specif.sig2.eq_sig2_uncurried	120	0.44.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist2_uncurried; only 1: exact pqr).	113.628516	200
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
Coq.Init.Specif.sig2.rew_sig2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	19.131482	3
Coq.Init.Specif.sig2.eq_sig2_rect	120
Coq.Init.Specif.Choice_lemmas.bool_choice	120
Coq.Init.Specif.absurd_set	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: apply H0; only 1: assumption).	12.632034	7
Coq.Init.Specif.Choice_lemmas.Choice	120
Coq.Init.Specif.Choice_lemmas.Choice2	120
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
